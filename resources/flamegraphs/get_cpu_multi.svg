<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Multi-node CPU</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (6,073 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.08%)</title><rect x="10.0" y="915.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.07%)</title><rect x="10.2" y="899.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.2" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (4 samples, 0.07%)</title><rect x="10.2" y="883.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.03%)</title><rect x="10.4" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.4" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="10.4" y="851.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="10.4" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="13.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="10.4" y="819.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="13.4" y="830.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.08%)</title><rect x="11.0" y="915.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="14.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="11.0" y="899.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.0" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.03%)</title><rect x="11.0" y="883.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="14.0" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="11.0" y="867.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.0" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (19 samples, 0.31%)</title><rect x="11.9" y="915.0" width="3.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="14.9" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.31%)</title><rect x="11.9" y="899.0" width="3.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="14.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.30%)</title><rect x="12.1" y="883.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="15.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.30%)</title><rect x="12.1" y="867.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="15.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.28%)</title><rect x="12.3" y="851.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="15.3" y="862.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.28%)</title><rect x="12.3" y="835.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="15.3" y="846.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.26%)</title><rect x="12.5" y="819.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="15.5" y="830.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.25%)</title><rect x="12.7" y="803.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="15.7" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.23%)</title><rect x="12.9" y="787.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.9" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.23%)</title><rect x="12.9" y="771.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="15.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (13 samples, 0.21%)</title><rect x="15.6" y="915.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.6" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="16.8" y="899.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="19.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.12%)</title><rect x="16.8" y="883.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="19.8" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="17.6" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="20.6" y="878.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="17.6" y="851.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="20.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,295 samples, 70.72%)</title><rect x="18.4" y="915.0" width="834.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.4" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,293 samples, 70.69%)</title><rect x="18.4" y="899.0" width="834.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.4" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,293 samples, 70.69%)</title><rect x="18.4" y="883.0" width="834.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.4" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (9 samples, 0.15%)</title><rect x="20.5" y="867.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.15%)</title><rect x="20.5" y="851.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.15%)</title><rect x="20.5" y="835.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.15%)</title><rect x="20.5" y="819.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.03%)</title><rect x="21.7" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (345 samples, 5.68%)</title><rect x="22.2" y="867.0" width="67.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.2" y="878.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (343 samples, 5.65%)</title><rect x="22.6" y="851.0" width="66.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.6" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (8 samples, 0.13%)</title><rect x="25.2" y="835.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.05%)</title><rect x="26.1" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.05%)</title><rect x="26.1" y="803.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.05%)</title><rect x="26.1" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.05%)</title><rect x="26.1" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (299 samples, 4.92%)</title><rect x="26.7" y="835.0" width="58.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.7" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.25%)</title><rect x="26.9" y="819.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (4 samples, 0.07%)</title><rect x="28.1" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (5 samples, 0.08%)</title><rect x="28.8" y="803.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (4 samples, 0.07%)</title><rect x="29.0" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (4 samples, 0.07%)</title><rect x="29.0" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.0" y="782.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (4 samples, 0.07%)</title><rect x="29.0" y="755.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (3 samples, 0.05%)</title><rect x="29.8" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (280 samples, 4.61%)</title><rect x="30.4" y="819.0" width="54.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.4" y="830.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (279 samples, 4.59%)</title><rect x="30.6" y="803.0" width="54.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.6" y="814.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="31.4" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="34.4" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="31.8" y="787.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="34.8" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (122 samples, 2.01%)</title><rect x="32.3" y="787.0" width="23.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="35.3" y="798.0">U..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.05%)</title><rect x="34.1" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="37.1" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (27 samples, 0.44%)</title><rect x="34.9" y="771.0" width="5.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="37.9" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.05%)</title><rect x="37.8" y="755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="40.8" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.08%)</title><rect x="38.6" y="755.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="41.6" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.05%)</title><rect x="39.5" y="755.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="42.5" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="40.1" y="771.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="43.1" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.07%)</title><rect x="40.5" y="771.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="43.5" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (6 samples, 0.10%)</title><rect x="41.3" y="771.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="44.3" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (51 samples, 0.84%)</title><rect x="42.4" y="771.0" width="10.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="45.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.74%)</title><rect x="43.6" y="755.0" width="8.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.72%)</title><rect x="43.8" y="739.0" width="8.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="46.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.30%)</title><rect x="48.3" y="723.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.3" y="734.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.23%)</title><rect x="48.7" y="707.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="51.7" y="718.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.13%)</title><rect x="49.1" y="691.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="52.1" y="702.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.07%)</title><rect x="49.8" y="675.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="52.8" y="686.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="50.8" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="51.4" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="54.4" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="51.8" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="54.8" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="52.4" y="771.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="55.4" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.05%)</title><rect x="52.7" y="771.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="55.7" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (10 samples, 0.16%)</title><rect x="53.9" y="771.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="56.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (145 samples, 2.39%)</title><rect x="56.0" y="787.0" width="28.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="59.0" y="798.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (4 samples, 0.07%)</title><rect x="56.0" y="771.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="59.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (6 samples, 0.10%)</title><rect x="56.8" y="771.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="59.8" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (13 samples, 0.21%)</title><rect x="58.2" y="771.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="61.2" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="60.7" y="771.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="63.7" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (4 samples, 0.07%)</title><rect x="61.3" y="771.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="64.3" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.05%)</title><rect x="62.1" y="771.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="65.1" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (111 samples, 1.83%)</title><rect x="62.7" y="771.0" width="21.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="65.7" y="782.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.99%)</title><rect x="72.6" y="755.0" width="11.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="72.6" y="739.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="75.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.94%)</title><rect x="73.1" y="739.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.54%)</title><rect x="77.8" y="723.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.8" y="734.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.49%)</title><rect x="78.2" y="707.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="81.2" y="718.0"></text>
</g>
<g>
<title>futex_wait (29 samples, 0.48%)</title><rect x="78.4" y="691.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.4" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.18%)</title><rect x="78.6" y="675.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="81.6" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="79.0" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="82.0" y="670.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.08%)</title><rect x="79.8" y="659.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="82.8" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.08%)</title><rect x="79.8" y="643.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="82.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.15%)</title><rect x="80.7" y="675.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="83.7" y="686.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="81.1" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.1" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.05%)</title><rect x="81.7" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="84.7" y="670.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.08%)</title><rect x="82.7" y="675.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.7" y="686.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="83.6" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.6" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.05%)</title><rect x="84.2" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="87.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (11 samples, 0.18%)</title><rect x="84.8" y="835.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (11 samples, 0.18%)</title><rect x="84.8" y="819.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (9 samples, 0.15%)</title><rect x="85.2" y="803.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (9 samples, 0.15%)</title><rect x="85.2" y="787.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (7 samples, 0.12%)</title><rect x="85.4" y="771.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.18%)</title><rect x="86.9" y="835.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.18%)</title><rect x="86.9" y="819.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.18%)</title><rect x="86.9" y="803.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.18%)</title><rect x="86.9" y="787.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.18%)</title><rect x="86.9" y="771.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.9" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="86.9" y="755.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="89.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.15%)</title><rect x="87.3" y="755.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="90.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="87.7" y="739.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.12%)</title><rect x="87.7" y="723.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.12%)</title><rect x="87.7" y="707.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="90.7" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.12%)</title><rect x="87.7" y="691.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="87.9" y="675.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.9" y="686.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="87.9" y="659.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="90.9" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="87.9" y="643.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="90.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="87.9" y="627.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.run (3,928 samples, 64.68%)</title><rect x="89.3" y="867.0" width="763.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.3" y="878.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.08%)</title><rect x="90.2" y="851.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4 (3,917 samples, 64.50%)</title><rect x="91.2" y="851.0" width="761.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.2" y="862.0">ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,841 samples, 30.31%)</title><rect x="91.2" y="835.0" width="357.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.2" y="846.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (26 samples, 0.43%)</title><rect x="93.6" y="819.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (26 samples, 0.43%)</title><rect x="93.6" y="803.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (26 samples, 0.43%)</title><rect x="93.6" y="787.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="95.3" y="771.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="98.3" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.08%)</title><rect x="95.3" y="755.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="98.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.08%)</title><rect x="96.3" y="771.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="99.3" y="782.0"></text>
</g>
<g>
<title>gettimeofday@plt (5 samples, 0.08%)</title><rect x="97.2" y="771.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="100.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="98.2" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="101.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,787 samples, 29.43%)</title><rect x="98.6" y="819.0" width="347.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.6" y="830.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.07%)</title><rect x="99.0" y="803.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (54 samples, 0.89%)</title><rect x="99.8" y="803.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (25 samples, 0.41%)</title><rect x="105.4" y="787.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (25 samples, 0.41%)</title><rect x="105.4" y="771.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (25 samples, 0.41%)</title><rect x="105.4" y="755.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="109.5" y="739.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="112.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,727 samples, 28.44%)</title><rect x="110.3" y="803.0" width="335.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.3" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,727 samples, 28.44%)</title><rect x="110.3" y="787.0" width="335.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.3" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.07%)</title><rect x="112.0" y="771.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="115.0" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.07%)</title><rect x="112.0" y="755.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="115.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (4 samples, 0.07%)</title><rect x="112.0" y="739.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="115.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.08%)</title><rect x="113.0" y="771.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,708 samples, 28.12%)</title><rect x="114.0" y="771.0" width="331.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.0" y="782.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="114.5" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,703 samples, 28.04%)</title><rect x="114.9" y="755.0" width="330.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.9" y="766.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (42 samples, 0.69%)</title><rect x="120.4" y="739.0" width="8.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="123.4" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="123.7" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="126.7" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (9 samples, 0.15%)</title><rect x="124.4" y="723.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="127.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.18%)</title><rect x="126.2" y="723.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="129.2" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.05%)</title><rect x="127.7" y="707.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="130.7" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.12%)</title><rect x="128.5" y="739.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="131.5" y="750.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.07%)</title><rect x="129.9" y="739.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="132.9" y="750.0"></text>
</g>
<g>
<title>__libc_send (1,620 samples, 26.68%)</title><rect x="130.7" y="739.0" width="314.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="133.7" y="750.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,585 samples, 26.10%)</title><rect x="137.5" y="723.0" width="307.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.5" y="734.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (1,584 samples, 26.08%)</title><rect x="137.7" y="707.0" width="307.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="140.7" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,516 samples, 24.96%)</title><rect x="150.9" y="691.0" width="294.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.9" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,509 samples, 24.85%)</title><rect x="151.1" y="675.0" width="293.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.1" y="686.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="152.4" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="155.4" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="152.8" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="155.8" y="670.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="153.2" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="156.2" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (1,466 samples, 24.14%)</title><rect x="153.8" y="659.0" width="284.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="156.8" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1,435 samples, 23.63%)</title><rect x="154.8" y="643.0" width="278.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="157.8" y="654.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,428 samples, 23.51%)</title><rect x="156.1" y="627.0" width="277.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="159.1" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="156.9" y="611.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.9" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="157.7" y="611.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="160.7" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="158.1" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="161.1" y="606.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.13%)</title><rect x="158.6" y="611.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="161.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="159.6" y="595.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="162.6" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="159.8" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="162.8" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="160.2" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="163.2" y="622.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="160.6" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.6" y="622.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.03%)</title><rect x="161.0" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="164.0" y="622.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.05%)</title><rect x="161.6" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="164.6" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (8 samples, 0.13%)</title><rect x="162.1" y="611.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="165.1" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,381 samples, 22.74%)</title><rect x="163.9" y="611.0" width="268.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="166.9" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (11 samples, 0.18%)</title><rect x="170.7" y="595.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.7" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.15%)</title><rect x="171.1" y="579.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="174.1" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (20 samples, 0.33%)</title><rect x="173.0" y="595.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="176.0" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (11 samples, 0.18%)</title><rect x="173.6" y="579.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="176.6" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (6 samples, 0.10%)</title><rect x="175.7" y="579.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="178.7" y="590.0"></text>
</g>
<g>
<title>check_stack_object (4 samples, 0.07%)</title><rect x="176.9" y="595.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="179.9" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (68 samples, 1.12%)</title><rect x="177.9" y="595.0" width="13.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="180.9" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (54 samples, 0.89%)</title><rect x="178.8" y="579.0" width="10.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="181.8" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="180.0" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (25 samples, 0.41%)</title><rect x="180.4" y="563.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="183.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (19 samples, 0.31%)</title><rect x="180.6" y="547.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="183.6" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (9 samples, 0.15%)</title><rect x="182.0" y="531.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="185.0" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="183.9" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="186.9" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.05%)</title><rect x="184.3" y="547.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (21 samples, 0.35%)</title><rect x="185.3" y="563.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="188.3" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.08%)</title><rect x="188.4" y="547.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="191.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.03%)</title><rect x="189.3" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="192.3" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="189.7" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.7" y="590.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.08%)</title><rect x="190.1" y="579.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="193.1" y="590.0"></text>
</g>
<g>
<title>skb_entail (8 samples, 0.13%)</title><rect x="191.1" y="595.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="194.1" y="606.0"></text>
</g>
<g>
<title>tcp_chrono_start (3 samples, 0.05%)</title><rect x="192.1" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (1,201 samples, 19.78%)</title><rect x="193.0" y="595.0" width="233.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.0" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,197 samples, 19.71%)</title><rect x="193.8" y="579.0" width="232.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.8" y="590.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.03%)</title><rect x="194.4" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="197.4" y="574.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.10%)</title><rect x="194.8" y="563.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="197.8" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.07%)</title><rect x="196.1" y="563.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.1" y="574.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (4 samples, 0.07%)</title><rect x="197.1" y="563.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="200.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,176 samples, 19.36%)</title><rect x="197.9" y="563.0" width="228.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="200.9" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="202.2" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="205.2" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1,094 samples, 18.01%)</title><rect x="202.6" y="547.0" width="212.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="205.6" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.03%)</title><rect x="207.0" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.0" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.05%)</title><rect x="207.6" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="210.6" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,040 samples, 17.12%)</title><rect x="208.4" y="531.0" width="202.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="211.4" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (1,028 samples, 16.93%)</title><rect x="208.8" y="515.0" width="199.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="211.8" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="211.9" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="214.9" y="510.0"></text>
</g>
<g>
<title>ip_local_out (999 samples, 16.45%)</title><rect x="212.3" y="499.0" width="194.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="215.3" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (176 samples, 2.90%)</title><rect x="212.9" y="483.0" width="34.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="215.9" y="494.0">__..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.05%)</title><rect x="213.4" y="467.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.4" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (10 samples, 0.16%)</title><rect x="214.0" y="467.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="217.0" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (5 samples, 0.08%)</title><rect x="216.0" y="467.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.0" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (153 samples, 2.52%)</title><rect x="216.9" y="467.0" width="29.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.9" y="478.0">nf..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.05%)</title><rect x="217.7" y="451.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="220.7" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (23 samples, 0.38%)</title><rect x="218.3" y="451.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="221.3" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (22 samples, 0.36%)</title><rect x="218.5" y="435.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.5" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (103 samples, 1.70%)</title><rect x="222.8" y="451.0" width="20.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="225.8" y="462.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (4 samples, 0.07%)</title><rect x="223.2" y="435.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="226.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (93 samples, 1.53%)</title><rect x="224.1" y="435.0" width="18.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.1" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (20 samples, 0.33%)</title><rect x="225.7" y="419.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="228.7" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.03%)</title><rect x="229.6" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="232.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="230.1" y="419.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="233.1" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (7 samples, 0.12%)</title><rect x="230.9" y="419.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="233.9" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (3 samples, 0.05%)</title><rect x="232.3" y="419.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="235.3" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (5 samples, 0.08%)</title><rect x="232.9" y="419.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="235.9" y="430.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (43 samples, 0.71%)</title><rect x="233.8" y="419.0" width="8.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.8" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (3 samples, 0.05%)</title><rect x="237.7" y="403.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="240.7" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (5 samples, 0.08%)</title><rect x="238.5" y="403.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.5" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (14 samples, 0.23%)</title><rect x="239.5" y="403.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.5" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.05%)</title><rect x="241.6" y="387.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="244.6" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.05%)</title><rect x="242.2" y="435.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="245.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="242.8" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.8" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="243.2" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="246.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (16 samples, 0.26%)</title><rect x="243.6" y="451.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.6" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (5 samples, 0.08%)</title><rect x="243.6" y="435.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (11 samples, 0.18%)</title><rect x="244.5" y="435.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="247.5" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (8 samples, 0.13%)</title><rect x="244.7" y="419.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="247.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.03%)</title><rect x="246.3" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="249.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="246.7" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.7" y="478.0"></text>
</g>
<g>
<title>ip_output (810 samples, 13.34%)</title><rect x="247.0" y="483.0" width="157.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="250.0" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.08%)</title><rect x="247.8" y="467.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="250.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="248.8" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="251.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (776 samples, 12.78%)</title><rect x="249.2" y="467.0" width="150.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="252.2" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.13%)</title><rect x="251.5" y="451.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="254.5" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="253.1" y="451.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.1" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (751 samples, 12.37%)</title><rect x="253.7" y="451.0" width="145.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="256.7" y="462.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (640 samples, 10.54%)</title><rect x="258.1" y="435.0" width="124.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.1" y="446.0">__local_bh_enab..</text>
</g>
<g>
<title>do_softirq.part.21 (637 samples, 10.49%)</title><rect x="258.7" y="419.0" width="123.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.7" y="430.0">do_softirq.part..</text>
</g>
<g>
<title>do_softirq_own_stack (629 samples, 10.36%)</title><rect x="260.3" y="403.0" width="122.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="263.3" y="414.0">do_softirq_own_..</text>
</g>
<g>
<title>__softirqentry_text_start (627 samples, 10.32%)</title><rect x="260.3" y="387.0" width="121.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="263.3" y="398.0">__softirqentry_..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="262.4" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="265.4" y="382.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="262.8" y="371.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.8" y="382.0"></text>
</g>
<g>
<title>net_rx_action (609 samples, 10.03%)</title><rect x="263.2" y="371.0" width="118.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="266.2" y="382.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (3 samples, 0.05%)</title><rect x="266.1" y="355.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="269.1" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="266.7" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="269.7" y="366.0"></text>
</g>
<g>
<title>process_backlog (588 samples, 9.68%)</title><rect x="267.3" y="355.0" width="114.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.3" y="366.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (570 samples, 9.39%)</title><rect x="270.8" y="339.0" width="110.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="273.8" y="350.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (564 samples, 9.29%)</title><rect x="271.3" y="323.0" width="109.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.3" y="334.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.21%)</title><rect x="272.1" y="307.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.1" y="318.0"></text>
</g>
<g>
<title>ip_rcv (543 samples, 8.94%)</title><rect x="274.6" y="307.0" width="105.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="277.6" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="276.0" y="291.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="279.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.08%)</title><rect x="276.8" y="291.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="279.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (499 samples, 8.22%)</title><rect x="277.7" y="291.0" width="97.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="280.7" y="302.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (491 samples, 8.08%)</title><rect x="278.3" y="275.0" width="95.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="281.3" y="286.0">ip_local_de..</text>
</g>
<g>
<title>ip_local_deliver_finish (475 samples, 7.82%)</title><rect x="278.7" y="259.0" width="92.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.7" y="270.0">ip_local_de..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (473 samples, 7.79%)</title><rect x="278.9" y="243.0" width="91.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="281.9" y="254.0">ip_protocol..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.03%)</title><rect x="281.2" y="227.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.2" y="238.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="281.8" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="284.8" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="282.2" y="227.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (451 samples, 7.43%)</title><rect x="283.2" y="227.0" width="87.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="286.2" y="238.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (25 samples, 0.41%)</title><rect x="286.1" y="211.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.1" y="222.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="291.2" y="211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="294.2" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (16 samples, 0.26%)</title><rect x="291.7" y="211.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="294.7" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.12%)</title><rect x="292.1" y="195.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="295.1" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.07%)</title><rect x="293.5" y="195.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="296.5" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.05%)</title><rect x="294.3" y="195.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="297.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (383 samples, 6.31%)</title><rect x="295.4" y="211.0" width="74.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="298.4" y="222.0">tcp_v4_d..</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.05%)</title><rect x="296.6" y="195.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="299.6" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (370 samples, 6.09%)</title><rect x="297.4" y="195.0" width="71.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="300.4" y="206.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (25 samples, 0.41%)</title><rect x="298.7" y="179.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="301.7" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (22 samples, 0.36%)</title><rect x="299.3" y="163.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="302.3" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (20 samples, 0.33%)</title><rect x="299.7" y="147.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="302.7" y="158.0"></text>
</g>
<g>
<title>mod_timer (18 samples, 0.30%)</title><rect x="300.1" y="131.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="303.1" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.25%)</title><rect x="300.3" y="115.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="303.3" y="126.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="303.2" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="306.2" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.07%)</title><rect x="303.6" y="179.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="306.6" y="190.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="304.4" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="307.4" y="190.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.07%)</title><rect x="304.8" y="179.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="307.8" y="190.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (3 samples, 0.05%)</title><rect x="305.7" y="179.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="308.7" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="306.3" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.3" y="190.0"></text>
</g>
<g>
<title>tcp_ack (132 samples, 2.17%)</title><rect x="306.7" y="179.0" width="25.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="309.7" y="190.0">t..</text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="311.6" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.6" y="174.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="312.3" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="315.3" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (90 samples, 1.48%)</title><rect x="312.7" y="163.0" width="17.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="315.7" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (48 samples, 0.79%)</title><rect x="316.2" y="147.0" width="9.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.2" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.15%)</title><rect x="316.4" y="131.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="319.4" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.12%)</title><rect x="316.8" y="115.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="319.8" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.07%)</title><rect x="318.2" y="131.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="321.2" y="142.0"></text>
</g>
<g>
<title>skb_release_all (34 samples, 0.56%)</title><rect x="318.9" y="131.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="321.9" y="142.0"></text>
</g>
<g>
<title>skb_release_data (30 samples, 0.49%)</title><rect x="319.5" y="115.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.5" y="126.0"></text>
</g>
<g>
<title>skb_free_head (14 samples, 0.23%)</title><rect x="322.6" y="99.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="325.6" y="110.0"></text>
</g>
<g>
<title>kfree (14 samples, 0.23%)</title><rect x="322.6" y="83.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="325.6" y="94.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.08%)</title><rect x="324.4" y="67.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="327.4" y="78.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="325.0" y="51.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="328.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="325.5" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="328.5" y="158.0"></text>
</g>
<g>
<title>rb_erase (5 samples, 0.08%)</title><rect x="326.1" y="147.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="329.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (11 samples, 0.18%)</title><rect x="327.7" y="147.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="330.7" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.05%)</title><rect x="330.2" y="163.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="333.2" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.05%)</title><rect x="330.8" y="163.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="333.8" y="174.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="331.4" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="334.4" y="174.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.05%)</title><rect x="331.8" y="163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="334.8" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.08%)</title><rect x="332.3" y="179.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="335.3" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.05%)</title><rect x="333.3" y="179.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="336.3" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (164 samples, 2.70%)</title><rect x="333.9" y="179.0" width="31.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="336.9" y="190.0">tc..</text>
</g>
<g>
<title>sock_def_readable (144 samples, 2.37%)</title><rect x="335.5" y="163.0" width="27.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="338.5" y="174.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (138 samples, 2.27%)</title><rect x="336.6" y="147.0" width="26.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="339.6" y="158.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (133 samples, 2.19%)</title><rect x="336.8" y="131.0" width="25.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="339.8" y="142.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (129 samples, 2.12%)</title><rect x="337.6" y="115.0" width="25.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="340.6" y="126.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (4 samples, 0.07%)</title><rect x="362.7" y="131.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="365.7" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.13%)</title><rect x="363.4" y="163.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="366.4" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.07%)</title><rect x="365.0" y="163.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="368.0" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="365.8" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="368.8" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.13%)</title><rect x="366.2" y="179.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="369.2" y="190.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="366.7" y="163.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="369.7" y="174.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="367.1" y="163.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="370.1" y="174.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.05%)</title><rect x="367.7" y="179.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="370.7" y="190.0"></text>
</g>
<g>
<title>tcp_urg (3 samples, 0.05%)</title><rect x="369.3" y="195.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (4 samples, 0.07%)</title><rect x="369.8" y="211.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="372.8" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.21%)</title><rect x="371.2" y="259.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="374.2" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.10%)</title><rect x="371.8" y="243.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.8" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.08%)</title><rect x="372.0" y="227.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="375.0" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.05%)</title><rect x="373.0" y="243.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="376.0" y="254.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (3 samples, 0.05%)</title><rect x="373.0" y="227.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="376.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (3 samples, 0.05%)</title><rect x="373.9" y="275.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="376.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (3 samples, 0.05%)</title><rect x="374.7" y="291.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="377.7" y="302.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (4 samples, 0.07%)</title><rect x="375.3" y="291.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="378.3" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="376.3" y="291.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="379.3" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.30%)</title><rect x="376.6" y="291.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="379.6" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (8 samples, 0.13%)</title><rect x="377.0" y="275.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.0" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (8 samples, 0.13%)</title><rect x="377.0" y="259.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.0" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.05%)</title><rect x="378.6" y="275.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.6" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (5 samples, 0.08%)</title><rect x="379.2" y="275.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="382.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="379.2" y="259.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="382.2" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="379.6" y="259.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="382.6" y="270.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="379.6" y="243.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="382.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="380.3" y="307.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="383.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="381.1" y="323.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.1" y="334.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.05%)</title><rect x="381.5" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="384.5" y="382.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="382.1" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="385.1" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (86 samples, 1.42%)</title><rect x="382.5" y="435.0" width="16.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.5" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (82 samples, 1.35%)</title><rect x="382.7" y="419.0" width="15.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="385.7" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (42 samples, 0.69%)</title><rect x="386.6" y="403.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="389.6" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.05%)</title><rect x="387.5" y="387.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="390.5" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (29 samples, 0.48%)</title><rect x="388.1" y="387.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="391.1" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.10%)</title><rect x="388.7" y="371.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="391.7" y="382.0"></text>
</g>
<g>
<title>netif_rx (16 samples, 0.26%)</title><rect x="389.9" y="371.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="392.9" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.23%)</title><rect x="390.3" y="355.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="393.3" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (14 samples, 0.23%)</title><rect x="390.3" y="339.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="393.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="393.0" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="396.0" y="382.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.03%)</title><rect x="393.4" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.4" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="393.9" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="396.9" y="398.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="394.3" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="397.3" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="394.7" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="397.7" y="414.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="395.1" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="398.1" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (14 samples, 0.23%)</title><rect x="395.5" y="403.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.5" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.08%)</title><rect x="396.9" y="387.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="399.9" y="398.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="397.8" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="400.8" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="398.2" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="401.2" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="398.6" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="401.6" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.21 (2 samples, 0.03%)</title><rect x="399.2" y="435.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.2" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="399.6" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="402.6" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.07%)</title><rect x="400.0" y="467.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="403.0" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="400.7" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="403.7" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.28%)</title><rect x="401.1" y="467.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="404.1" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (5 samples, 0.08%)</title><rect x="402.1" y="451.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="405.1" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="402.7" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="405.7" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (5 samples, 0.08%)</title><rect x="403.1" y="451.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.1" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="404.0" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="407.0" y="462.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.07%)</title><rect x="404.4" y="483.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="407.4" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.10%)</title><rect x="405.2" y="483.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="408.2" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (10 samples, 0.16%)</title><rect x="406.6" y="499.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="409.6" y="510.0"></text>
</g>
<g>
<title>ip_copy_addrs (4 samples, 0.07%)</title><rect x="408.7" y="515.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.7" y="526.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="409.5" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="412.5" y="526.0"></text>
</g>
<g>
<title>skb_push (3 samples, 0.05%)</title><rect x="409.9" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="412.9" y="526.0"></text>
</g>
<g>
<title>skb_clone (14 samples, 0.23%)</title><rect x="410.5" y="531.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="413.5" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.05%)</title><rect x="410.8" y="515.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="413.8" y="526.0"></text>
</g>
<g>
<title>__skb_clone (9 samples, 0.15%)</title><rect x="411.4" y="515.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="414.4" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.08%)</title><rect x="412.2" y="499.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="415.2" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (6 samples, 0.10%)</title><rect x="413.2" y="531.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="416.2" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="414.3" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="417.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="414.7" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="417.7" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="415.1" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="418.1" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.08%)</title><rect x="415.7" y="547.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="418.7" y="558.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.10%)</title><rect x="416.9" y="547.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="419.9" y="558.0"></text>
</g>
<g>
<title>skb_push (3 samples, 0.05%)</title><rect x="418.4" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="421.4" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (19 samples, 0.31%)</title><rect x="419.0" y="547.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="422.0" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.03%)</title><rect x="419.6" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="422.6" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="420.0" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.0" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (3 samples, 0.05%)</title><rect x="420.4" y="531.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="423.4" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.15%)</title><rect x="421.0" y="531.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="424.0" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.15%)</title><rect x="421.0" y="515.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="424.0" y="526.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.13%)</title><rect x="421.1" y="499.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.1" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.10%)</title><rect x="421.5" y="483.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.5" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.03%)</title><rect x="422.9" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="425.9" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="423.5" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="426.5" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="424.1" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="427.1" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.07%)</title><rect x="424.6" y="547.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.6" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.08%)</title><rect x="425.4" y="547.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.4" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.07%)</title><rect x="426.4" y="595.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="429.4" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (25 samples, 0.41%)</title><rect x="427.2" y="595.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="430.2" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="427.6" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="430.6" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (21 samples, 0.35%)</title><rect x="427.9" y="579.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="430.9" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (10 samples, 0.16%)</title><rect x="430.1" y="563.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="433.1" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.07%)</title><rect x="432.2" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="435.2" y="622.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (3 samples, 0.05%)</title><rect x="433.0" y="611.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="436.0" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (26 samples, 0.43%)</title><rect x="433.6" y="643.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="436.6" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="434.0" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.0" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (22 samples, 0.36%)</title><rect x="434.4" y="627.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="437.4" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (21 samples, 0.35%)</title><rect x="434.6" y="611.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="437.6" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.18%)</title><rect x="436.5" y="595.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="439.5" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="438.2" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (29 samples, 0.48%)</title><rect x="438.6" y="659.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="441.6" y="670.0"></text>
</g>
<g>
<title>__fdget (23 samples, 0.38%)</title><rect x="439.2" y="643.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="442.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.38%)</title><rect x="439.2" y="627.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.2" y="638.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.30%)</title><rect x="440.2" y="611.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="443.7" y="643.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="446.7" y="654.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="444.3" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.3" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="444.8" y="675.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="447.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.26%)</title><rect x="445.8" y="819.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.18%)</title><rect x="446.8" y="803.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.18%)</title><rect x="446.8" y="787.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$66/198562544.exec (11 samples, 0.18%)</title><rect x="448.9" y="835.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$entity$2 (11 samples, 0.18%)</title><rect x="448.9" y="819.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.upsert (11 samples, 0.18%)</title><rect x="448.9" y="803.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (6 samples, 0.10%)</title><rect x="449.3" y="787.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (6 samples, 0.10%)</title><rect x="449.3" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsert (3 samples, 0.05%)</title><rect x="450.5" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (3 samples, 0.05%)</title><rect x="450.5" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.05%)</title><rect x="450.5" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="450.5" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="450.5" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="450.5" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/652582163.exec (2,065 samples, 34.00%)</title><rect x="451.1" y="835.0" width="401.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.1" y="846.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$6..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$entity$1 (2,065 samples, 34.00%)</title><rect x="451.1" y="819.0" width="401.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.1" y="830.0">ru/mail/polis/service/codearound/AsyncService.lambda$en..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.get (2,064 samples, 33.99%)</title><rect x="451.3" y="803.0" width="401.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.3" y="814.0">ru/mail/polis/service/codearound/AsyncService.get</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="451.3" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (7 samples, 0.12%)</title><rect x="451.6" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.12%)</title><rect x="451.6" y="771.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.6" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="452.4" y="755.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="455.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.proxy (1,312 samples, 21.60%)</title><rect x="453.0" y="787.0" width="254.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.0" y="798.0">ru/mail/polis/service/codearound/A..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.12%)</title><rect x="453.0" y="771.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1668016508.invoke (7 samples, 0.12%)</title><rect x="453.0" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="453.2" y="739.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (4 samples, 0.07%)</title><rect x="453.6" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.18%)</title><rect x="454.4" y="771.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.18%)</title><rect x="454.4" y="755.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.08%)</title><rect x="455.0" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.0" y="750.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.05%)</title><rect x="455.9" y="739.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="458.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,291 samples, 21.26%)</title><rect x="456.5" y="771.0" width="250.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.5" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,291 samples, 21.26%)</title><rect x="456.5" y="755.0" width="250.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.5" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.05%)</title><rect x="458.5" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="458.5" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="458.5" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (277 samples, 4.56%)</title><rect x="459.0" y="739.0" width="53.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.0" y="750.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="468.7" y="723.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="471.7" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="468.7" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="471.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (222 samples, 3.66%)</title><rect x="469.1" y="723.0" width="43.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.1" y="734.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (34 samples, 0.56%)</title><rect x="470.7" y="707.0" width="6.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="473.7" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="472.1" y="691.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="475.1" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.10%)</title><rect x="472.8" y="691.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="475.8" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.23%)</title><rect x="474.0" y="691.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="477.0" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="475.2" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="478.2" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.08%)</title><rect x="475.7" y="675.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="478.7" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.07%)</title><rect x="475.9" y="659.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="478.9" y="670.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.03%)</title><rect x="476.7" y="691.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="479.7" y="702.0"></text>
</g>
<g>
<title>__GI___recv (169 samples, 2.78%)</title><rect x="477.3" y="707.0" width="32.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="480.3" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (161 samples, 2.65%)</title><rect x="478.9" y="691.0" width="31.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="481.9" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (161 samples, 2.65%)</title><rect x="478.9" y="675.0" width="31.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="481.9" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (147 samples, 2.42%)</title><rect x="481.6" y="659.0" width="28.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="484.6" y="670.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (144 samples, 2.37%)</title><rect x="481.8" y="643.0" width="27.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.8" y="654.0">_..</text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="482.5" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="485.5" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="482.9" y="627.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="485.9" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (121 samples, 1.99%)</title><rect x="483.3" y="627.0" width="23.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.3" y="638.0">s..</text>
</g>
<g>
<title>inet_recvmsg (108 samples, 1.78%)</title><rect x="483.7" y="611.0" width="21.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.7" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (99 samples, 1.63%)</title><rect x="485.5" y="595.0" width="19.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="488.5" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.07%)</title><rect x="488.6" y="579.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="491.6" y="590.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="488.8" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="491.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="489.7" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="492.7" y="590.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="490.3" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="493.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="490.5" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.5" y="574.0"></text>
</g>
<g>
<title>sk_wait_data (40 samples, 0.66%)</title><rect x="490.9" y="579.0" width="7.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="491.5" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.5" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (10 samples, 0.16%)</title><rect x="492.5" y="563.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="495.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.13%)</title><rect x="492.8" y="547.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.8" y="558.0"></text>
</g>
<g>
<title>remove_wait_queue (13 samples, 0.21%)</title><rect x="494.4" y="563.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.05%)</title><rect x="494.6" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="497.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.15%)</title><rect x="495.2" y="547.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="498.2" y="558.0"></text>
</g>
<g>
<title>wait_woken (9 samples, 0.15%)</title><rect x="496.9" y="563.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="499.9" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (8 samples, 0.13%)</title><rect x="497.1" y="547.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="500.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="497.1" y="531.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="500.1" y="542.0"></text>
</g>
<g>
<title>del_timer_sync (2 samples, 0.03%)</title><rect x="498.1" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="501.1" y="542.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.03%)</title><rect x="498.1" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.1" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="498.1" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.1" y="510.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (24 samples, 0.40%)</title><rect x="498.7" y="579.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.7" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (18 samples, 0.30%)</title><rect x="498.9" y="563.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.9" y="574.0"></text>
</g>
<g>
<title>simple_copy_to_iter (13 samples, 0.21%)</title><rect x="499.8" y="547.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="502.8" y="558.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="500.0" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="503.0" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="500.2" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.2" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="500.6" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="503.6" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.10%)</title><rect x="501.0" y="531.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="504.0" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="501.2" y="515.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.2" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (2 samples, 0.03%)</title><rect x="502.4" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.4" y="574.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.05%)</title><rect x="502.8" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="505.8" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.08%)</title><rect x="503.5" y="579.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="506.5" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.18%)</title><rect x="504.7" y="611.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="507.7" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.12%)</title><rect x="505.5" y="595.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.5" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.12%)</title><rect x="505.5" y="579.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="508.5" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.10%)</title><rect x="505.7" y="563.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.7" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (15 samples, 0.25%)</title><rect x="506.8" y="627.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="509.8" y="638.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.25%)</title><rect x="506.8" y="611.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="509.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.25%)</title><rect x="506.8" y="595.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="509.8" y="606.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.23%)</title><rect x="507.0" y="579.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.0" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="509.7" y="643.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.7" y="654.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="510.1" y="707.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="513.1" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.13%)</title><rect x="510.7" y="707.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="513.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.03%)</title><rect x="512.3" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (64 samples, 1.05%)</title><rect x="512.9" y="739.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.10%)</title><rect x="513.8" y="723.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.10%)</title><rect x="513.8" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.10%)</title><rect x="513.8" y="691.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.10%)</title><rect x="513.8" y="675.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.10%)</title><rect x="513.8" y="659.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.8" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (4 samples, 0.07%)</title><rect x="513.8" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.8" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="514.6" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.15%)</title><rect x="515.0" y="723.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="516.2" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="516.4" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (26 samples, 0.43%)</title><rect x="516.9" y="723.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.38%)</title><rect x="517.5" y="707.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.36%)</title><rect x="517.7" y="691.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.12%)</title><rect x="522.0" y="723.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (3 samples, 0.05%)</title><rect x="523.3" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.12%)</title><rect x="523.9" y="723.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.08%)</title><rect x="524.3" y="707.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.08%)</title><rect x="524.3" y="691.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (31 samples, 0.51%)</title><rect x="525.3" y="739.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="526.7" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.28%)</title><rect x="527.4" y="723.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="528.0" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.18%)</title><rect x="528.6" y="707.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.16%)</title><rect x="528.8" y="691.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.8" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.16%)</title><rect x="528.8" y="675.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.07%)</title><rect x="529.8" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.05%)</title><rect x="530.7" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.05%)</title><rect x="531.5" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (132 samples, 2.17%)</title><rect x="532.1" y="739.0" width="25.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.1" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (4 samples, 0.07%)</title><rect x="534.0" y="723.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="537.0" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (115 samples, 1.89%)</title><rect x="534.8" y="723.0" width="22.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="537.8" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 1.73%)</title><rect x="536.8" y="707.0" width="20.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="539.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.03%)</title><rect x="536.8" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (103 samples, 1.70%)</title><rect x="537.1" y="691.0" width="20.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="540.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (64 samples, 1.05%)</title><rect x="544.5" y="675.0" width="12.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="547.5" y="686.0"></text>
</g>
<g>
<title>__sys_setsockopt (62 samples, 1.02%)</title><rect x="544.5" y="659.0" width="12.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="547.5" y="670.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="545.3" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="548.3" y="654.0"></text>
</g>
<g>
<title>__get_user_4 (7 samples, 0.12%)</title><rect x="545.7" y="643.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.7" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (3 samples, 0.05%)</title><rect x="547.1" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="550.1" y="654.0"></text>
</g>
<g>
<title>security_socket_setsockopt (14 samples, 0.23%)</title><rect x="547.6" y="643.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="550.6" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="548.2" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="551.2" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (9 samples, 0.15%)</title><rect x="548.6" y="627.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="551.6" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (8 samples, 0.13%)</title><rect x="548.8" y="611.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="551.8" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.08%)</title><rect x="549.4" y="595.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="552.4" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (18 samples, 0.30%)</title><rect x="550.4" y="643.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="553.4" y="654.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="551.9" y="627.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="554.9" y="638.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.10%)</title><rect x="552.5" y="627.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="555.5" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="553.3" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="556.3" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.23%)</title><rect x="553.9" y="643.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="556.9" y="654.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.18%)</title><rect x="553.9" y="627.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="556.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.16%)</title><rect x="554.0" y="611.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.0" y="622.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.10%)</title><rect x="554.8" y="595.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="557.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="556.0" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="559.0" y="638.0"></text>
</g>
<g>
<title>setsockopt@plt (2 samples, 0.03%)</title><rect x="557.2" y="723.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="560.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (769 samples, 12.66%)</title><rect x="557.7" y="739.0" width="149.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="560.7" y="750.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (40 samples, 0.66%)</title><rect x="563.6" y="723.0" width="7.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="566.6" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.07%)</title><rect x="565.3" y="707.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="568.3" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (12 samples, 0.20%)</title><rect x="566.3" y="707.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="569.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.20%)</title><rect x="568.6" y="707.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="571.6" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.05%)</title><rect x="569.4" y="691.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="572.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="570.2" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="573.2" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="570.6" y="691.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="573.6" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="570.6" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="573.6" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="571.0" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="574.0" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="571.3" y="723.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="574.3" y="734.0"></text>
</g>
<g>
<title>__libc_send (694 samples, 11.43%)</title><rect x="571.9" y="723.0" width="134.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="574.9" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (683 samples, 11.25%)</title><rect x="574.1" y="707.0" width="132.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="577.1" y="718.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.05%)</title><rect x="574.1" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="577.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (680 samples, 11.20%)</title><rect x="574.6" y="691.0" width="132.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="577.6" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (642 samples, 10.57%)</title><rect x="581.1" y="675.0" width="124.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="584.1" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (638 samples, 10.51%)</title><rect x="581.2" y="659.0" width="124.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="584.2" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (630 samples, 10.37%)</title><rect x="582.0" y="643.0" width="122.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.0" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (623 samples, 10.26%)</title><rect x="582.8" y="627.0" width="121.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="585.8" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (617 samples, 10.16%)</title><rect x="584.0" y="611.0" width="119.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="587.0" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="584.2" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="587.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="585.1" y="595.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="588.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (604 samples, 9.95%)</title><rect x="586.1" y="595.0" width="117.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="589.1" y="606.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.12%)</title><rect x="588.1" y="579.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="591.1" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.08%)</title><rect x="588.4" y="563.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="589.6" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="592.6" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="590.0" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="593.0" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (35 samples, 0.58%)</title><rect x="590.6" y="579.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="593.6" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (25 samples, 0.41%)</title><rect x="591.0" y="563.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="594.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (16 samples, 0.26%)</title><rect x="591.7" y="547.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="594.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (16 samples, 0.26%)</title><rect x="591.7" y="531.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="594.7" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (11 samples, 0.18%)</title><rect x="592.3" y="515.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="595.3" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="594.5" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="597.5" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="594.9" y="547.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="597.9" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.05%)</title><rect x="595.8" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="598.8" y="574.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.08%)</title><rect x="596.4" y="563.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (536 samples, 8.83%)</title><rect x="597.4" y="579.0" width="104.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="600.4" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (534 samples, 8.79%)</title><rect x="597.8" y="563.0" width="103.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.8" y="574.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (532 samples, 8.76%)</title><rect x="598.2" y="547.0" width="103.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.2" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="600.1" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="603.1" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (499 samples, 8.22%)</title><rect x="600.5" y="531.0" width="96.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="603.5" y="542.0">__tcp_trans..</text>
</g>
<g>
<title>ip_queue_xmit (478 samples, 7.87%)</title><rect x="603.2" y="515.0" width="92.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="606.2" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (473 samples, 7.79%)</title><rect x="603.6" y="499.0" width="91.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="606.6" y="510.0">__ip_queue_..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="604.8" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="607.8" y="494.0"></text>
</g>
<g>
<title>ip_local_out (461 samples, 7.59%)</title><rect x="605.1" y="483.0" width="89.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="608.1" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (54 samples, 0.89%)</title><rect x="605.5" y="467.0" width="10.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="608.5" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.08%)</title><rect x="605.7" y="451.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="608.7" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.05%)</title><rect x="606.7" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="609.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (44 samples, 0.72%)</title><rect x="607.3" y="451.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.3" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.10%)</title><rect x="607.5" y="435.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.5" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.08%)</title><rect x="607.7" y="419.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="610.7" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (28 samples, 0.46%)</title><rect x="608.6" y="435.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="611.6" y="446.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.03%)</title><rect x="608.6" y="419.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="611.6" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (22 samples, 0.36%)</title><rect x="609.2" y="419.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="612.2" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (8 samples, 0.13%)</title><rect x="609.6" y="403.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.6" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (9 samples, 0.15%)</title><rect x="611.8" y="403.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="614.8" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (4 samples, 0.07%)</title><rect x="612.7" y="387.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="615.7" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.05%)</title><rect x="612.9" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="615.9" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.05%)</title><rect x="613.5" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="616.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (8 samples, 0.13%)</title><rect x="614.3" y="435.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.3" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="614.5" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="617.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (5 samples, 0.08%)</title><rect x="614.9" y="419.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="617.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.07%)</title><rect x="615.1" y="403.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="618.1" y="414.0"></text>
</g>
<g>
<title>ip_output (401 samples, 6.60%)</title><rect x="616.0" y="467.0" width="77.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="619.0" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="617.4" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="620.4" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (386 samples, 6.36%)</title><rect x="617.8" y="451.0" width="75.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="620.8" y="462.0">ip_finis..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.12%)</title><rect x="618.4" y="435.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="621.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (375 samples, 6.17%)</title><rect x="619.7" y="435.0" width="72.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="622.7" y="446.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (339 samples, 5.58%)</title><rect x="621.1" y="419.0" width="65.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="624.1" y="430.0">__local..</text>
</g>
<g>
<title>do_softirq.part.21 (339 samples, 5.58%)</title><rect x="621.1" y="403.0" width="65.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="624.1" y="414.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (335 samples, 5.52%)</title><rect x="621.9" y="387.0" width="65.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="624.9" y="398.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (335 samples, 5.52%)</title><rect x="621.9" y="371.0" width="65.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="624.9" y="382.0">__softi..</text>
</g>
<g>
<title>net_rx_action (329 samples, 5.42%)</title><rect x="623.0" y="355.0" width="64.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="626.0" y="366.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (323 samples, 5.32%)</title><rect x="624.2" y="339.0" width="62.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="627.2" y="350.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (313 samples, 5.15%)</title><rect x="625.7" y="323.0" width="60.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="628.7" y="334.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (311 samples, 5.12%)</title><rect x="626.1" y="307.0" width="60.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="629.1" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.08%)</title><rect x="626.1" y="291.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="629.1" y="302.0"></text>
</g>
<g>
<title>ip_rcv (306 samples, 5.04%)</title><rect x="627.1" y="291.0" width="59.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="630.1" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="627.5" y="275.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="630.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (2 samples, 0.03%)</title><rect x="627.9" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="630.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (285 samples, 4.69%)</title><rect x="628.3" y="275.0" width="55.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="631.3" y="286.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (279 samples, 4.59%)</title><rect x="628.7" y="259.0" width="54.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="631.7" y="270.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (269 samples, 4.43%)</title><rect x="628.7" y="243.0" width="52.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="631.7" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (267 samples, 4.40%)</title><rect x="628.7" y="227.0" width="51.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="631.7" y="238.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (257 samples, 4.23%)</title><rect x="630.6" y="211.0" width="49.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="633.6" y="222.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.08%)</title><rect x="630.8" y="195.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="633.8" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="632.0" y="195.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="635.0" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.08%)</title><rect x="632.5" y="195.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="635.5" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="632.5" y="179.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="635.5" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="633.1" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (239 samples, 3.94%)</title><rect x="633.7" y="195.0" width="46.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="636.7" y="206.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (238 samples, 3.92%)</title><rect x="633.9" y="179.0" width="46.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="636.9" y="190.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.07%)</title><rect x="634.9" y="163.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="637.9" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.07%)</title><rect x="634.9" y="147.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="637.9" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="635.1" y="131.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="638.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="635.3" y="115.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="638.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack (51 samples, 0.84%)</title><rect x="636.0" y="163.0" width="10.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="639.0" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.03%)</title><rect x="638.6" y="147.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="641.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (33 samples, 0.54%)</title><rect x="639.2" y="147.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="642.2" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (20 samples, 0.33%)</title><rect x="640.9" y="131.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="643.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.10%)</title><rect x="640.9" y="115.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="643.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.08%)</title><rect x="641.1" y="99.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="641.7" y="83.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="644.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.20%)</title><rect x="642.1" y="115.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="645.1" y="126.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.18%)</title><rect x="642.3" y="99.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="645.3" y="110.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.15%)</title><rect x="642.6" y="83.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="645.6" y="94.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.15%)</title><rect x="642.6" y="67.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="645.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.07%)</title><rect x="643.6" y="51.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="646.6" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (3 samples, 0.05%)</title><rect x="643.8" y="35.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="646.8" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="644.4" y="115.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.03%)</title><rect x="645.2" y="131.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="648.2" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="645.6" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="648.6" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (166 samples, 2.73%)</title><rect x="646.3" y="163.0" width="32.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="649.3" y="174.0">tc..</text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="646.9" y="147.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.9" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (160 samples, 2.63%)</title><rect x="647.3" y="147.0" width="31.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="650.3" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (157 samples, 2.59%)</title><rect x="647.9" y="131.0" width="30.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="650.9" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (155 samples, 2.55%)</title><rect x="647.9" y="115.0" width="30.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="650.9" y="126.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (155 samples, 2.55%)</title><rect x="647.9" y="99.0" width="30.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="650.9" y="110.0">_r..</text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="678.6" y="163.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="681.6" y="174.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="678.6" y="147.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.6" y="158.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.03%)</title><rect x="679.8" y="163.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="680.5" y="227.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="683.5" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="680.9" y="243.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="683.9" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.12%)</title><rect x="681.5" y="243.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.5" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.07%)</title><rect x="681.5" y="227.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.5" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.07%)</title><rect x="681.5" y="211.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.5" y="222.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="682.3" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="685.3" y="238.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="682.3" y="211.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.3" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.07%)</title><rect x="682.9" y="259.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.9" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.08%)</title><rect x="683.6" y="275.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="686.6" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.15%)</title><rect x="684.8" y="275.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="687.8" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (7 samples, 0.12%)</title><rect x="685.0" y="259.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="688.0" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 0.12%)</title><rect x="685.0" y="243.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="688.0" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.03%)</title><rect x="686.6" y="323.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="689.6" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (29 samples, 0.48%)</title><rect x="687.0" y="419.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="690.0" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (29 samples, 0.48%)</title><rect x="687.0" y="403.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="690.0" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.16%)</title><rect x="689.1" y="387.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="692.1" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.15%)</title><rect x="689.3" y="371.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="692.3" y="382.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.08%)</title><rect x="690.1" y="355.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="693.1" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.08%)</title><rect x="690.1" y="339.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="693.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.08%)</title><rect x="690.1" y="323.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="693.1" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.08%)</title><rect x="691.4" y="387.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="694.4" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.08%)</title><rect x="692.8" y="451.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="695.8" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="693.2" y="435.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="696.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="693.4" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="696.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="693.4" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.4" y="414.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.05%)</title><rect x="693.9" y="467.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="696.9" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.07%)</title><rect x="694.7" y="483.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="697.7" y="494.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.08%)</title><rect x="696.1" y="515.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="699.1" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="696.1" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="699.1" y="510.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.05%)</title><rect x="696.5" y="499.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.5" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="696.7" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="699.7" y="494.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.08%)</title><rect x="697.4" y="531.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.4" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="698.0" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="701.0" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="698.4" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.4" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.12%)</title><rect x="699.0" y="531.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.0" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="700.6" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="703.6" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="700.9" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="703.9" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.15%)</title><rect x="701.7" y="579.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.7" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.13%)</title><rect x="701.9" y="563.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.07%)</title><rect x="702.7" y="547.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="705.7" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.05%)</title><rect x="703.9" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.9" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="703.9" y="611.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="706.9" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="703.9" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="706.9" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="703.9" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="706.9" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="704.4" y="643.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="707.4" y="654.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="704.4" y="627.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="707.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="704.6" y="611.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="707.6" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="704.6" y="595.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="707.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="705.4" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="708.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.08%)</title><rect x="705.8" y="675.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="708.8" y="686.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.07%)</title><rect x="706.0" y="659.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="709.0" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="706.0" y="643.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="709.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.05%)</title><rect x="707.4" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isSelfId (7 samples, 0.12%)</title><rect x="707.9" y="787.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isSelfId (7 samples, 0.12%)</title><rect x="707.9" y="771.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.12%)</title><rect x="707.9" y="755.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (10 samples, 0.16%)</title><rect x="709.3" y="787.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (10 samples, 0.16%)</title><rect x="709.3" y="771.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.3" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="710.5" y="755.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="713.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.get (726 samples, 11.95%)</title><rect x="711.2" y="787.0" width="141.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.2" y="798.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.18%)</title><rect x="711.4" y="771.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.18%)</title><rect x="711.4" y="755.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.18%)</title><rect x="711.4" y="739.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.18%)</title><rect x="711.4" y="723.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.4" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.18%)</title><rect x="711.4" y="707.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.12%)</title><rect x="711.4" y="691.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.4" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="712.4" y="675.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="715.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.07%)</title><rect x="712.8" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.07%)</title><rect x="712.8" y="675.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.8" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.07%)</title><rect x="712.8" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.8" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (687 samples, 11.31%)</title><rect x="713.6" y="771.0" width="133.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.6" y="782.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (687 samples, 11.31%)</title><rect x="713.6" y="755.0" width="133.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.6" y="766.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (624 samples, 10.27%)</title><rect x="714.0" y="739.0" width="121.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="717.0" y="750.0">Java_org_rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (2 samples, 0.03%)</title><rect x="714.9" y="723.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="717.9" y="734.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.07%)</title><rect x="715.3" y="723.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="718.3" y="734.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.12%)</title><rect x="716.1" y="723.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="719.1" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.08%)</title><rect x="717.5" y="723.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="720.5" y="734.0"></text>
</g>
<g>
<title>operator delete(void*) (4 samples, 0.07%)</title><rect x="718.6" y="723.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="721.6" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="719.8" y="723.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="722.8" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="720.2" y="723.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="723.2" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="720.6" y="723.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="723.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (4 samples, 0.07%)</title><rect x="721.0" y="723.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="724.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.03%)</title><rect x="721.7" y="723.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="724.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (574 samples, 9.45%)</title><rect x="722.3" y="723.0" width="111.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="725.3" y="734.0">rocksdb_get_h..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.13%)</title><rect x="723.5" y="707.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="726.5" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="725.0" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="728.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="725.6" y="707.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="728.6" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.12%)</title><rect x="726.2" y="707.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="729.2" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.07%)</title><rect x="727.6" y="707.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="730.6" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.03%)</title><rect x="727.8" y="691.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="730.8" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.20%)</title><rect x="728.3" y="707.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="731.3" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="728.5" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="731.5" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="728.9" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="731.9" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.10%)</title><rect x="729.5" y="691.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="732.5" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.05%)</title><rect x="730.1" y="675.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="733.1" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.03%)</title><rect x="730.7" y="707.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="733.7" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.12%)</title><rect x="731.1" y="707.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="734.1" y="718.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.03%)</title><rect x="732.4" y="707.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="735.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.05%)</title><rect x="732.8" y="707.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="735.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (447 samples, 7.36%)</title><rect x="733.4" y="707.0" width="86.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="736.4" y="718.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (11 samples, 0.18%)</title><rect x="734.6" y="691.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="737.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() [clone .plt] (4 samples, 0.07%)</title><rect x="736.7" y="691.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="739.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.03%)</title><rect x="737.5" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="740.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (423 samples, 6.97%)</title><rect x="737.9" y="691.0" width="82.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="740.9" y="702.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (413 samples, 6.80%)</title><rect x="739.4" y="675.0" width="80.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="742.4" y="686.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (408 samples, 6.72%)</title><rect x="739.6" y="659.0" width="79.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="742.6" y="670.0">rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="740.4" y="643.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="743.4" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.12%)</title><rect x="741.0" y="643.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="744.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.05%)</title><rect x="742.3" y="643.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="745.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (4 samples, 0.07%)</title><rect x="742.9" y="643.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="745.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (4 samples, 0.07%)</title><rect x="743.7" y="643.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="746.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (367 samples, 6.04%)</title><rect x="744.5" y="643.0" width="71.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="747.5" y="654.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="747.4" y="627.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="750.4" y="638.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="748.0" y="627.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="751.0" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="748.4" y="627.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="751.4" y="638.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="749.1" y="627.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="752.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (13 samples, 0.21%)</title><rect x="749.7" y="627.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="752.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.05%)</title><rect x="750.3" y="611.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="753.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (5 samples, 0.08%)</title><rect x="750.9" y="611.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="753.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.03%)</title><rect x="751.8" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="754.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.05%)</title><rect x="752.2" y="627.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="755.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (14 samples, 0.23%)</title><rect x="752.8" y="627.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="755.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (7 samples, 0.12%)</title><rect x="753.0" y="611.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="756.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.03%)</title><rect x="753.0" y="595.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="756.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.03%)</title><rect x="753.4" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="756.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (3 samples, 0.05%)</title><rect x="753.8" y="595.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="756.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (3 samples, 0.05%)</title><rect x="754.4" y="611.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="757.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (2 samples, 0.03%)</title><rect x="755.0" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="758.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.07%)</title><rect x="755.5" y="627.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="758.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (3 samples, 0.05%)</title><rect x="756.5" y="627.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="759.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (284 samples, 4.68%)</title><rect x="757.1" y="627.0" width="55.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="760.1" y="638.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (5 samples, 0.08%)</title><rect x="758.3" y="611.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="761.3" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="759.2" y="611.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="762.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (268 samples, 4.41%)</title><rect x="759.6" y="611.0" width="52.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="762.6" y="622.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (265 samples, 4.36%)</title><rect x="759.8" y="595.0" width="51.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="762.8" y="606.0">/tmp/..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (20 samples, 0.33%)</title><rect x="761.4" y="579.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="764.4" y="590.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="764.9" y="563.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="767.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (207 samples, 3.41%)</title><rect x="765.3" y="579.0" width="40.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="768.3" y="590.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (2 samples, 0.03%)</title><rect x="784.5" y="563.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="787.5" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="784.9" y="563.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="787.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (13 samples, 0.21%)</title><rect x="785.3" y="563.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="788.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (89 samples, 1.47%)</title><rect x="788.2" y="563.0" width="17.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="791.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (12 samples, 0.20%)</title><rect x="795.8" y="547.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="798.8" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.07%)</title><rect x="798.1" y="547.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="801.1" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (26 samples, 0.43%)</title><rect x="798.9" y="547.0" width="5.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="801.9" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.08%)</title><rect x="803.9" y="547.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="806.9" y="558.0"></text>
</g>
<g>
<title>memcmp@plt (3 samples, 0.05%)</title><rect x="804.9" y="547.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="807.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.10%)</title><rect x="805.5" y="579.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="808.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (8 samples, 0.13%)</title><rect x="806.6" y="579.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="809.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) [clone .plt] (4 samples, 0.07%)</title><rect x="808.2" y="579.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="811.2" y="590.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (3 samples, 0.05%)</title><rect x="809.0" y="579.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="812.0" y="590.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (8 samples, 0.13%)</title><rect x="809.6" y="579.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="812.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.03%)</title><rect x="811.3" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="814.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (3 samples, 0.05%)</title><rect x="811.7" y="611.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="814.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (4 samples, 0.07%)</title><rect x="812.3" y="627.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="815.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (4 samples, 0.07%)</title><rect x="813.6" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="816.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (2 samples, 0.03%)</title><rect x="814.4" y="627.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="817.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.03%)</title><rect x="814.8" y="627.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="817.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (3 samples, 0.05%)</title><rect x="815.2" y="627.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="818.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.05%)</title><rect x="815.8" y="643.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="818.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (4 samples, 0.07%)</title><rect x="816.4" y="643.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="819.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (3 samples, 0.05%)</title><rect x="817.3" y="643.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="820.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (3 samples, 0.05%)</title><rect x="818.1" y="643.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="821.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (4 samples, 0.07%)</title><rect x="818.9" y="659.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="821.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (2 samples, 0.03%)</title><rect x="819.7" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="822.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (67 samples, 1.10%)</title><rect x="820.4" y="707.0" width="13.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="823.4" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="820.8" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="823.8" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="821.2" y="691.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="824.2" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.05%)</title><rect x="821.8" y="691.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="824.8" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="822.0" y="675.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="825.0" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (42 samples, 0.69%)</title><rect x="822.4" y="691.0" width="8.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="825.4" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (3 samples, 0.05%)</title><rect x="823.4" y="675.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="826.4" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="823.9" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="826.9" y="686.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.05%)</title><rect x="824.3" y="675.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="827.3" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (29 samples, 0.48%)</title><rect x="824.9" y="675.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="827.9" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (18 samples, 0.30%)</title><rect x="826.8" y="659.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="829.8" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (15 samples, 0.25%)</title><rect x="826.8" y="643.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="829.8" y="654.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.03%)</title><rect x="827.2" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="830.2" y="638.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (5 samples, 0.08%)</title><rect x="827.6" y="627.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="830.6" y="638.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (4 samples, 0.07%)</title><rect x="828.8" y="627.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="831.8" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="830.0" y="643.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="833.0" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.23%)</title><rect x="830.5" y="691.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="833.5" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.07%)</title><rect x="831.1" y="675.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="834.1" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="831.9" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="834.9" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.08%)</title><rect x="832.3" y="675.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="835.3" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="832.9" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="835.9" y="670.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (6 samples, 0.10%)</title><rect x="833.8" y="723.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="836.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="835.2" y="739.0" width="4.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="838.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="835.2" y="723.0" width="4.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="838.2" y="734.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (19 samples, 0.31%)</title><rect x="835.2" y="707.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="838.2" y="718.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="838.9" y="707.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="841.9" y="718.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.07%)</title><rect x="839.5" y="739.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="842.5" y="750.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.08%)</title><rect x="840.3" y="739.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="843.3" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="841.2" y="739.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="844.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (8 samples, 0.13%)</title><rect x="841.6" y="739.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="844.6" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.05%)</title><rect x="843.2" y="739.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="846.2" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (2 samples, 0.03%)</title><rect x="843.8" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="846.8" y="750.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (5 samples, 0.08%)</title><rect x="844.1" y="739.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="847.1" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (6 samples, 0.10%)</title><rect x="845.1" y="739.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="848.1" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) [clone .plt] (4 samples, 0.07%)</title><rect x="846.3" y="739.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="849.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (27 samples, 0.44%)</title><rect x="847.1" y="771.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (27 samples, 0.44%)</title><rect x="847.1" y="755.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (12 samples, 0.20%)</title><rect x="847.3" y="739.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.20%)</title><rect x="847.3" y="723.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.13%)</title><rect x="848.0" y="707.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.13%)</title><rect x="848.0" y="691.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.0" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.23%)</title><rect x="849.6" y="739.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="849.6" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="850.0" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="850.2" y="707.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="850.2" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.03%)</title><rect x="850.4" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.05%)</title><rect x="850.7" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.7" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.05%)</title><rect x="851.3" y="723.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="854.3" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="851.9" y="723.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="854.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.run (2 samples, 0.03%)</title><rect x="852.5" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,724 samples, 28.39%)</title><rect x="852.9" y="915.0" width="335.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.9" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="854.8" y="899.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="857.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.15%)</title><rect x="855.8" y="899.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.15%)</title><rect x="855.8" y="883.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="857.0" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (4 samples, 0.07%)</title><rect x="857.5" y="899.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (589 samples, 9.70%)</title><rect x="858.3" y="899.0" width="114.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.3" y="910.0">one/nio/net/Na..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (579 samples, 9.53%)</title><rect x="860.3" y="883.0" width="112.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.3" y="894.0">one/nio/net/Na..</text>
</g>
<g>
<title>JVM_IHashCode (166 samples, 2.73%)</title><rect x="863.6" y="867.0" width="32.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="866.6" y="878.0">JV..</text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="863.6" y="851.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="866.6" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="864.2" y="851.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="867.2" y="862.0"></text>
</g>
<g>
<title>epoll_wait (161 samples, 2.65%)</title><rect x="864.5" y="851.0" width="31.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="867.5" y="862.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (158 samples, 2.60%)</title><rect x="865.1" y="835.0" width="30.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="868.1" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (157 samples, 2.59%)</title><rect x="865.3" y="819.0" width="30.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="868.3" y="830.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (140 samples, 2.31%)</title><rect x="868.6" y="803.0" width="27.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.6" y="814.0">_..</text>
</g>
<g>
<title>do_epoll_wait (138 samples, 2.27%)</title><rect x="868.8" y="787.0" width="26.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.8" y="798.0">d..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="869.2" y="771.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="872.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="869.2" y="755.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="872.2" y="766.0"></text>
</g>
<g>
<title>ep_poll (132 samples, 2.17%)</title><rect x="869.6" y="771.0" width="25.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="872.6" y="782.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (103 samples, 1.70%)</title><rect x="872.5" y="755.0" width="20.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="875.5" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (74 samples, 1.22%)</title><rect x="876.6" y="739.0" width="14.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.6" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (53 samples, 0.87%)</title><rect x="879.1" y="723.0" width="10.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="882.1" y="734.0"></text>
</g>
<g>
<title>sock_poll (43 samples, 0.71%)</title><rect x="880.7" y="707.0" width="8.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="883.7" y="718.0"></text>
</g>
<g>
<title>tcp_poll (21 samples, 0.35%)</title><rect x="884.6" y="691.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="887.6" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="888.6" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="891.6" y="702.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="889.0" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="892.0" y="718.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.13%)</title><rect x="889.4" y="723.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="892.4" y="734.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.13%)</title><rect x="891.0" y="739.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="894.0" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.05%)</title><rect x="892.7" y="755.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.7" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (10 samples, 0.16%)</title><rect x="893.3" y="755.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="896.3" y="766.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="893.3" y="739.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="896.3" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.12%)</title><rect x="893.9" y="739.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="896.9" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="894.1" y="723.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="897.1" y="734.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="894.7" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.7" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="894.7" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="897.7" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (11 samples, 0.18%)</title><rect x="895.8" y="867.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="898.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (358 samples, 5.89%)</title><rect x="898.0" y="867.0" width="69.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="901.0" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (15 samples, 0.25%)</title><rect x="898.0" y="851.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="901.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.25%)</title><rect x="898.0" y="835.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="901.0" y="846.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="898.0" y="819.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="901.0" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="898.5" y="819.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="901.5" y="830.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.13%)</title><rect x="899.3" y="819.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="902.3" y="830.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.08%)</title><rect x="899.9" y="803.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="902.9" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.07%)</title><rect x="900.9" y="851.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="903.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (338 samples, 5.57%)</title><rect x="901.8" y="851.0" width="65.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="904.8" y="862.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (321 samples, 5.29%)</title><rect x="905.2" y="835.0" width="62.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="908.2" y="846.0">entry_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.05%)</title><rect x="905.2" y="819.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="908.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (318 samples, 5.24%)</title><rect x="905.7" y="819.0" width="61.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="908.7" y="830.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (233 samples, 3.84%)</title><rect x="921.9" y="803.0" width="45.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="924.9" y="814.0">__x6..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="921.9" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="924.9" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (229 samples, 3.77%)</title><rect x="922.3" y="787.0" width="44.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="925.3" y="798.0">do_e..</text>
</g>
<g>
<title>__fdget (25 samples, 0.41%)</title><rect x="923.0" y="771.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="926.0" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="923.0" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="926.0" y="766.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.38%)</title><rect x="923.4" y="755.0" width="4.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="926.4" y="766.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.25%)</title><rect x="925.0" y="739.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="928.0" y="750.0"></text>
</g>
<g>
<title>ep_poll (196 samples, 3.23%)</title><rect x="928.3" y="771.0" width="38.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="931.3" y="782.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (157 samples, 2.59%)</title><rect x="933.7" y="755.0" width="30.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="936.7" y="766.0">ep..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="938.0" y="739.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="941.0" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (117 samples, 1.93%)</title><rect x="938.4" y="739.0" width="22.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.4" y="750.0">e..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (86 samples, 1.42%)</title><rect x="941.9" y="723.0" width="16.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="944.9" y="734.0"></text>
</g>
<g>
<title>sock_poll (59 samples, 0.97%)</title><rect x="945.6" y="707.0" width="11.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="948.6" y="718.0"></text>
</g>
<g>
<title>tcp_poll (16 samples, 0.26%)</title><rect x="953.3" y="691.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="956.3" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="956.4" y="691.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="959.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.13%)</title><rect x="957.0" y="707.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="960.0" y="718.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.21%)</title><rect x="958.6" y="723.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="961.6" y="734.0"></text>
</g>
<g>
<title>mutex_lock (15 samples, 0.25%)</title><rect x="961.1" y="739.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.1" y="750.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.08%)</title><rect x="963.1" y="723.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="966.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.15%)</title><rect x="964.4" y="755.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="967.4" y="766.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="964.4" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.4" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.12%)</title><rect x="964.8" y="739.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="967.8" y="750.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.12%)</title><rect x="964.8" y="723.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="967.8" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.10%)</title><rect x="965.0" y="707.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="968.0" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="965.6" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="968.6" y="702.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.03%)</title><rect x="966.7" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.7" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.03%)</title><rect x="967.1" y="803.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="970.1" y="814.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.07%)</title><rect x="967.5" y="867.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="970.5" y="878.0"></text>
</g>
<g>
<title>clock_gettime@plt (5 samples, 0.08%)</title><rect x="968.3" y="867.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="971.3" y="878.0"></text>
</g>
<g>
<title>epoll_wait (17 samples, 0.28%)</title><rect x="969.3" y="867.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="972.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,105 samples, 18.20%)</title><rect x="972.8" y="899.0" width="214.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.8" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="973.0" y="883.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="976.0" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.03%)</title><rect x="973.0" y="867.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="976.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="973.0" y="851.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="976.0" y="862.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="973.4" y="883.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="976.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,088 samples, 17.92%)</title><rect x="974.1" y="883.0" width="211.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="977.1" y="894.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (694 samples, 11.43%)</title><rect x="974.3" y="867.0" width="134.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.3" y="878.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (555 samples, 9.14%)</title><rect x="980.0" y="851.0" width="107.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.0" y="862.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (549 samples, 9.04%)</title><rect x="981.1" y="835.0" width="106.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.1" y="846.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (489 samples, 8.05%)</title><rect x="982.7" y="819.0" width="95.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.7" y="830.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (44 samples, 0.72%)</title><rect x="983.1" y="803.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (38 samples, 0.63%)</title><rect x="984.2" y="787.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="986.8" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.05%)</title><rect x="986.8" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.13%)</title><rect x="987.3" y="771.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.13%)</title><rect x="987.3" y="755.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.07%)</title><rect x="988.1" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.1" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="988.9" y="771.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="991.9" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="989.3" y="771.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="992.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.13%)</title><rect x="990.1" y="771.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.13%)</title><rect x="990.1" y="755.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="993.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.13%)</title><rect x="990.1" y="739.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="993.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.13%)</title><rect x="990.1" y="723.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.entity (443 samples, 7.29%)</title><rect x="991.6" y="803.0" width="86.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.6" y="814.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.07%)</title><rect x="993.0" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="996.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.07%)</title><rect x="993.0" y="771.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.05%)</title><rect x="993.2" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="996.2" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="993.2" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.10%)</title><rect x="993.8" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="993.8" y="771.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="996.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$66/198562544.get$Lambda (5 samples, 0.08%)</title><rect x="993.8" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="996.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$66/198562544.&lt;init&gt; (5 samples, 0.08%)</title><rect x="993.8" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.runAsyncHandler (395 samples, 6.50%)</title><rect x="994.9" y="787.0" width="76.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.9" y="798.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (394 samples, 6.49%)</title><rect x="995.1" y="771.0" width="76.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.1" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (393 samples, 6.47%)</title><rect x="995.3" y="755.0" width="76.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.3" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (8 samples, 0.13%)</title><rect x="996.3" y="739.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (8 samples, 0.13%)</title><rect x="996.3" y="723.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (8 samples, 0.13%)</title><rect x="996.3" y="707.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (8 samples, 0.13%)</title><rect x="996.3" y="691.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (379 samples, 6.24%)</title><rect x="998.0" y="739.0" width="73.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1001.0" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (379 samples, 6.24%)</title><rect x="998.0" y="723.0" width="73.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.0" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (377 samples, 6.21%)</title><rect x="998.4" y="707.0" width="73.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1001.4" y="718.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (6 samples, 0.10%)</title><rect x="999.8" y="691.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.07%)</title><rect x="1000.2" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1003.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.07%)</title><rect x="1000.2" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1003.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (364 samples, 5.99%)</title><rect x="1000.9" y="691.0" width="70.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.9" y="702.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (364 samples, 5.99%)</title><rect x="1000.9" y="675.0" width="70.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.9" y="686.0">jdk/inte..</text>
</g>
<g>
<title>Parker::unpark() (4 samples, 0.07%)</title><rect x="1001.9" y="659.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1004.9" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1002.7" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1005.7" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (4 samples, 0.07%)</title><rect x="1003.3" y="659.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1006.3" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (81 samples, 1.33%)</title><rect x="1004.1" y="659.0" width="15.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1007.1" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="1005.6" y="643.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1008.6" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1006.2" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1009.2" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (7 samples, 0.12%)</title><rect x="1006.6" y="643.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.6" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.13%)</title><rect x="1007.9" y="643.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1010.9" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="1009.5" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1012.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1009.9" y="643.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1012.9" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.08%)</title><rect x="1010.5" y="643.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1013.5" y="654.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (8 samples, 0.13%)</title><rect x="1011.4" y="643.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.4" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (25 samples, 0.41%)</title><rect x="1013.0" y="643.0" width="4.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1016.0" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (2 samples, 0.03%)</title><rect x="1017.8" y="643.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1020.8" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 0.13%)</title><rect x="1018.2" y="643.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1021.2" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (248 samples, 4.08%)</title><rect x="1019.8" y="659.0" width="48.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1022.8" y="670.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (220 samples, 3.62%)</title><rect x="1025.2" y="643.0" width="42.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1028.2" y="654.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (219 samples, 3.61%)</title><rect x="1025.4" y="627.0" width="42.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1028.4" y="638.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (165 samples, 2.72%)</title><rect x="1035.7" y="611.0" width="32.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.7" y="622.0">__..</text>
</g>
<g>
<title>do_futex (164 samples, 2.70%)</title><rect x="1035.9" y="595.0" width="31.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1038.9" y="606.0">do..</text>
</g>
<g>
<title>futex_wake (160 samples, 2.63%)</title><rect x="1035.9" y="579.0" width="31.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1038.9" y="590.0">fu..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="1037.1" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1040.1" y="574.0"></text>
</g>
<g>
<title>wake_up_q (150 samples, 2.47%)</title><rect x="1037.9" y="563.0" width="29.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1040.9" y="574.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (148 samples, 2.44%)</title><rect x="1038.2" y="547.0" width="28.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1041.2" y="558.0">tr..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (147 samples, 2.42%)</title><rect x="1038.4" y="531.0" width="28.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1041.4" y="542.0">_r..</text>
</g>
<g>
<title>hash_futex (4 samples, 0.07%)</title><rect x="1067.0" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1070.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (11 samples, 0.18%)</title><rect x="1068.0" y="659.0" width="2.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1071.0" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.03%)</title><rect x="1070.3" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1073.3" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.07%)</title><rect x="1070.7" y="659.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1073.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (31 samples, 0.51%)</title><rect x="1071.7" y="787.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1074.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.35%)</title><rect x="1073.0" y="771.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.35%)</title><rect x="1073.0" y="755.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.26%)</title><rect x="1073.2" y="739.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.23%)</title><rect x="1073.2" y="723.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.21%)</title><rect x="1073.4" y="707.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1073.8" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.13%)</title><rect x="1074.4" y="691.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1077.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.13%)</title><rect x="1074.4" y="675.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.13%)</title><rect x="1074.4" y="659.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.03%)</title><rect x="1075.9" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1078.9" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="1076.3" y="739.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1079.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.05%)</title><rect x="1077.1" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1080.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (5 samples, 0.08%)</title><rect x="1077.7" y="819.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (19 samples, 0.31%)</title><rect x="1078.7" y="819.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.26%)</title><rect x="1079.2" y="803.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.20%)</title><rect x="1079.2" y="787.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1082.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.13%)</title><rect x="1080.0" y="771.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1083.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.07%)</title><rect x="1081.6" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1084.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.07%)</title><rect x="1081.6" y="771.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.07%)</title><rect x="1081.6" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (28 samples, 0.46%)</title><rect x="1082.4" y="819.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.46%)</title><rect x="1082.4" y="803.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.44%)</title><rect x="1082.6" y="787.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.43%)</title><rect x="1082.7" y="771.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.7" y="782.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4 samples, 0.07%)</title><rect x="1083.5" y="755.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.5" y="766.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.23%)</title><rect x="1084.3" y="755.0" width="2.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1087.3" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="1087.0" y="755.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1090.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (73 samples, 1.20%)</title><rect x="1087.8" y="851.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.12%)</title><rect x="1090.1" y="835.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.1" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="1090.1" y="819.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1093.1" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.05%)</title><rect x="1090.1" y="803.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1093.1" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1090.1" y="787.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1093.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1090.1" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1093.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="1090.7" y="819.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="1090.7" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="1090.7" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.53%)</title><rect x="1091.5" y="835.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1094.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.53%)</title><rect x="1091.5" y="819.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1097.3" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1097.3" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1097.3" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.3" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1097.3" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1100.3" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1097.3" y="739.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1100.3" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1097.3" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1100.3" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1097.3" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1100.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (22 samples, 0.36%)</title><rect x="1097.7" y="835.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="1101.4" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.05%)</title><rect x="1102.0" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1105.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="1102.0" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.28%)</title><rect x="1102.6" y="851.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="1105.5" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1108.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="1105.5" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.28%)</title><rect x="1105.9" y="851.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.26%)</title><rect x="1106.1" y="835.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1109.1" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.07%)</title><rect x="1108.0" y="819.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1111.0" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1108.2" y="803.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1111.2" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1108.2" y="787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1111.2" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="1108.2" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1111.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (393 samples, 6.47%)</title><rect x="1109.2" y="867.0" width="76.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.2" y="878.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (388 samples, 6.39%)</title><rect x="1109.6" y="851.0" width="75.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.6" y="862.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (58 samples, 0.96%)</title><rect x="1113.8" y="835.0" width="11.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1116.8" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.10%)</title><rect x="1115.6" y="819.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1118.6" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1116.7" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.7" y="830.0"></text>
</g>
<g>
<title>__memmove_ssse3 (15 samples, 0.25%)</title><rect x="1117.3" y="819.0" width="2.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1120.3" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (21 samples, 0.35%)</title><rect x="1120.2" y="819.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1123.2" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.05%)</title><rect x="1120.8" y="803.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.8" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (8 samples, 0.13%)</title><rect x="1121.6" y="803.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.6" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.10%)</title><rect x="1123.2" y="803.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1126.2" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.08%)</title><rect x="1123.4" y="787.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1126.4" y="798.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.03%)</title><rect x="1124.3" y="819.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1127.3" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="1124.7" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1127.7" y="830.0"></text>
</g>
<g>
<title>__GI___recv (296 samples, 4.87%)</title><rect x="1125.1" y="835.0" width="57.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1128.1" y="846.0">__GI__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (268 samples, 4.41%)</title><rect x="1130.5" y="819.0" width="52.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1133.5" y="830.0">entry..</text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 0.08%)</title><rect x="1130.5" y="803.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1133.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (263 samples, 4.33%)</title><rect x="1131.5" y="803.0" width="51.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1134.5" y="814.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_recvfrom (183 samples, 3.01%)</title><rect x="1147.1" y="787.0" width="35.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1150.1" y="798.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (175 samples, 2.88%)</title><rect x="1147.1" y="771.0" width="34.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1150.1" y="782.0">__..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1148.2" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1151.2" y="766.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1148.8" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1151.8" y="766.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="1148.8" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1151.8" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.03%)</title><rect x="1149.2" y="755.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1152.2" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (141 samples, 2.32%)</title><rect x="1150.0" y="755.0" width="27.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.0" y="766.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1150.2" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1153.2" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (115 samples, 1.89%)</title><rect x="1150.6" y="739.0" width="22.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.6" y="750.0">i..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1151.9" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1154.9" y="734.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1152.3" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1155.3" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.05%)</title><rect x="1152.9" y="723.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1155.9" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="1153.5" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1156.5" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (98 samples, 1.61%)</title><rect x="1153.9" y="723.0" width="19.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.9" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.23%)</title><rect x="1156.6" y="707.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1159.6" y="718.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.13%)</title><rect x="1157.0" y="691.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1160.0" y="702.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.08%)</title><rect x="1157.0" y="675.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.0" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="1157.9" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1160.9" y="686.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="1157.9" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.9" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.07%)</title><rect x="1158.5" y="691.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1161.5" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="1159.3" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1162.3" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1160.3" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1163.3" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.07%)</title><rect x="1160.9" y="707.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.9" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="1161.6" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1164.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1162.0" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1165.0" y="702.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1162.4" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.4" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (30 samples, 0.49%)</title><rect x="1162.8" y="707.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1165.8" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (29 samples, 0.48%)</title><rect x="1162.8" y="691.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1165.8" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="1163.6" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.6" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (23 samples, 0.38%)</title><rect x="1164.0" y="675.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1167.0" y="686.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.18%)</title><rect x="1164.2" y="659.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1167.2" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="1165.5" y="643.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1168.5" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="1166.3" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.3" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.13%)</title><rect x="1166.9" y="659.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1169.9" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="1167.1" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1170.1" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="1167.5" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1170.5" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.13%)</title><rect x="1168.6" y="707.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.6" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (11 samples, 0.18%)</title><rect x="1170.2" y="707.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1173.2" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.10%)</title><rect x="1171.2" y="691.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1174.2" y="702.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="1171.3" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1174.3" y="686.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1171.9" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1174.9" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="1172.3" y="707.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.3" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (21 samples, 0.35%)</title><rect x="1172.9" y="739.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1175.9" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (20 samples, 0.33%)</title><rect x="1173.1" y="723.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.1" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (19 samples, 0.31%)</title><rect x="1173.3" y="707.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1176.3" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (18 samples, 0.30%)</title><rect x="1173.5" y="691.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1176.5" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.07%)</title><rect x="1176.2" y="675.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1179.2" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="1177.0" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1180.0" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (19 samples, 0.31%)</title><rect x="1177.4" y="755.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.4" y="766.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.25%)</title><rect x="1177.4" y="739.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1180.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.25%)</title><rect x="1177.4" y="723.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1180.4" y="734.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.20%)</title><rect x="1178.0" y="707.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="1180.3" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1183.3" y="750.0"></text>
</g>
<g>
<title>import_single_range (6 samples, 0.10%)</title><rect x="1181.1" y="771.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.1" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="1182.2" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1185.2" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="1182.6" y="835.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1185.6" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.13%)</title><rect x="1183.4" y="835.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1186.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.05%)</title><rect x="1184.9" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.16%)</title><rect x="1185.5" y="883.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.5" y="894.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.10%)</title><rect x="1186.3" y="867.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1189.3" y="878.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="1186.7" y="851.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1189.7" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1187.5" y="899.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="1187.5" y="883.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1190.5" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1187.5" y="867.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1190.5" y="878.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.18%)</title><rect x="1187.9" y="915.0" width="2.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.18%)</title><rect x="1187.9" y="899.0" width="2.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.18%)</title><rect x="1187.9" y="883.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.13%)</title><rect x="1187.9" y="867.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.10%)</title><rect x="1188.1" y="851.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.03%)</title><rect x="1188.1" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="1188.1" y="819.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1191.1" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1188.8" y="835.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.8" y="846.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.4" y="867.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.4" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.03%)</title><rect x="1189.4" y="835.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.4" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.4" y="803.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.4" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (2 samples, 0.03%)</title><rect x="1189.4" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.03%)</title><rect x="1189.4" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
</g>
</svg>
