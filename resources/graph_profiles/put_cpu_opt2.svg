<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">PUT enforced overwrites (#2)</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (6,073 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (12 samples, 0.20%)</title><rect x="10.0" y="883.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (650 samples, 10.70%)</title><rect x="12.3" y="883.0" width="126.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="15.3" y="894.0">/usr/lib/x86_64-..</text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (650 samples, 10.70%)</title><rect x="12.3" y="867.0" width="126.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.3" y="878.0">rocksdb::ThreadP..</text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (650 samples, 10.70%)</title><rect x="12.3" y="851.0" width="126.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.3" y="862.0">rocksdb::ThreadP..</text>
</g>
<g>
<title>rocksdb::DBImpl::BGWorkCompaction(void*) (588 samples, 9.68%)</title><rect x="12.3" y="835.0" width="114.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.3" y="846.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) (588 samples, 9.68%)</title><rect x="12.3" y="819.0" width="114.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.3" y="830.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) (581 samples, 9.57%)</title><rect x="12.3" y="803.0" width="112.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.3" y="814.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::CompactionJob::Run() (581 samples, 9.57%)</title><rect x="12.3" y="787.0" width="112.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.3" y="798.0">rocksdb::Compa..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="12.3" y="771.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*) (572 samples, 9.42%)</title><rect x="13.1" y="771.0" width="111.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.1" y="782.0">rocksdb::Comp..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (223 samples, 3.67%)</title><rect x="14.1" y="755.0" width="43.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.1" y="766.0">rock..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Flush() (157 samples, 2.59%)</title><rect x="16.0" y="739.0" width="30.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="19.0" y="750.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, bool) (155 samples, 2.55%)</title><rect x="16.0" y="723.0" width="30.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.0" y="734.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, bool) (144 samples, 2.37%)</title><rect x="16.4" y="707.0" width="28.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="19.4" y="718.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (67 samples, 1.10%)</title><rect x="16.8" y="691.0" width="13.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="19.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext&amp;, rocksdb::UncompressionContext*, std::string*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (43 samples, 0.71%)</title><rect x="29.8" y="691.0" width="8.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="32.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::string*, std::string*, std::string*) (39 samples, 0.64%)</title><rect x="30.2" y="675.0" width="7.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="33.2" y="686.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (4 samples, 0.07%)</title><rect x="30.2" y="659.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="33.2" y="670.0"></text>
</g>
<g>
<title>LZ4_freeStream (2 samples, 0.03%)</title><rect x="31.6" y="659.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="34.6" y="670.0"></text>
</g>
<g>
<title>__memset_erms (21 samples, 0.35%)</title><rect x="32.7" y="659.0" width="4.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="35.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::NotifyCollectTableCollectorsOnBlockAdd(std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, unsigned long, unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="37.8" y="675.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::InsertBlockInCache(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle const*) (2 samples, 0.03%)</title><rect x="38.2" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="41.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, bool) (22 samples, 0.36%)</title><rect x="38.6" y="691.0" width="4.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="41.6" y="702.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (17 samples, 0.28%)</title><rect x="38.8" y="675.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="41.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="42.3" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="45.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (2 samples, 0.03%)</title><rect x="43.6" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="46.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::Reset() (2 samples, 0.03%)</title><rect x="44.8" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="47.8" y="718.0"></text>
</g>
<g>
<title>std::string::clear() (2 samples, 0.03%)</title><rect x="45.4" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="48.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::ok() const (5 samples, 0.08%)</title><rect x="46.5" y="739.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="49.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::status() const (2 samples, 0.03%)</title><rect x="47.1" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="50.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (10 samples, 0.16%)</title><rect x="47.5" y="739.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="50.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.08%)</title><rect x="49.4" y="739.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="52.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (6 samples, 0.10%)</title><rect x="50.4" y="739.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="53.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::FlushBlockBySizePolicy::Update(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="51.6" y="739.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="54.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="52.6" y="739.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="55.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::string*, rocksdb::Slice const*, rocksdb::BlockHandle const&amp;) (17 samples, 0.28%)</title><rect x="52.9" y="739.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="55.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (2 samples, 0.03%)</title><rect x="53.5" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="56.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::EncodeTo(std::string*) const [clone .plt] (2 samples, 0.03%)</title><rect x="54.1" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="57.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::FindShortestSeparator(std::string*, rocksdb::Slice const&amp;) const (4 samples, 0.07%)</title><rect x="54.5" y="723.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="57.5" y="734.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="55.7" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="58.7" y="734.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.07%)</title><rect x="56.2" y="739.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="59.2" y="750.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="57.0" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="60.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::ok() const (3 samples, 0.05%)</title><rect x="57.4" y="755.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="60.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (298 samples, 4.91%)</title><rect x="58.4" y="755.0" width="57.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="61.4" y="766.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.05%)</title><rect x="59.0" y="739.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="62.0" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="59.5" y="739.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="62.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (32 samples, 0.53%)</title><rect x="60.3" y="739.0" width="6.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="63.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (14 samples, 0.23%)</title><rect x="63.6" y="723.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="66.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (13 samples, 0.21%)</title><rect x="63.8" y="707.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="66.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (11 samples, 0.18%)</title><rect x="64.0" y="691.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="67.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::FindBlockForward() (10 samples, 0.16%)</title><rect x="64.0" y="675.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="67.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (8 samples, 0.13%)</title><rect x="64.2" y="659.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="67.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (8 samples, 0.13%)</title><rect x="64.2" y="643.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="67.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (7 samples, 0.12%)</title><rect x="64.4" y="627.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="67.4" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (7 samples, 0.12%)</title><rect x="64.4" y="611.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="67.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (5 samples, 0.08%)</title><rect x="64.8" y="595.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="67.8" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (4 samples, 0.07%)</title><rect x="64.8" y="579.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="67.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::PrepareOutput() (5 samples, 0.08%)</title><rect x="66.5" y="739.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="69.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::CompactionRangeDelAggregator::ShouldDelete(rocksdb::ParsedInternalKey const&amp;, rocksdb::RangeDelPositioningMode) (2 samples, 0.03%)</title><rect x="67.5" y="739.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="70.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (246 samples, 4.05%)</title><rect x="67.9" y="739.0" width="47.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="70.9" y="750.0">rock..</text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.07%)</title><rect x="71.4" y="723.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="74.4" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="72.2" y="723.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="75.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (2 samples, 0.03%)</title><rect x="72.8" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="75.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (219 samples, 3.61%)</title><rect x="73.1" y="723.0" width="42.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="76.1" y="734.0">rock..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::FindKeyForward() (2 samples, 0.03%)</title><rect x="73.9" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="76.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (211 samples, 3.47%)</title><rect x="74.5" y="707.0" width="41.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="77.5" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::FindBlockForward() (199 samples, 3.28%)</title><rect x="74.9" y="691.0" width="38.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="77.9" y="702.0">roc..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (175 samples, 2.88%)</title><rect x="75.7" y="675.0" width="34.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="78.7" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (171 samples, 2.82%)</title><rect x="76.3" y="659.0" width="33.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="79.3" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) [clone .plt] (2 samples, 0.03%)</title><rect x="77.6" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="80.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (13 samples, 0.21%)</title><rect x="78.4" y="643.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="81.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (13 samples, 0.21%)</title><rect x="78.4" y="627.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="81.4" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="79.0" y="611.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="82.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.03%)</title><rect x="79.4" y="611.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="82.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Insert(rocksdb::LRUHandle*) (6 samples, 0.10%)</title><rect x="79.8" y="611.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="82.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (6 samples, 0.10%)</title><rect x="79.8" y="595.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="82.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (140 samples, 2.31%)</title><rect x="81.1" y="643.0" width="27.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="84.1" y="654.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (117 samples, 1.93%)</title><rect x="81.7" y="627.0" width="22.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="84.7" y="638.0">/..</text>
</g>
<g>
<title>__malloc (2 samples, 0.03%)</title><rect x="82.1" y="611.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="85.1" y="622.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="82.5" y="611.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="85.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Block::Block(rocksdb::BlockContents&amp;&amp;, unsigned long, rocksdb::Statistics*) (2 samples, 0.03%)</title><rect x="83.4" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="86.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::UnPackIndexTypeAndNumRestarts(unsigned int, rocksdb::BlockBasedTableOptions::DataBlockIndexType*, unsigned int*) (2 samples, 0.03%)</title><rect x="83.4" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="86.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (100 samples, 1.65%)</title><rect x="84.4" y="611.0" width="19.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="87.4" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (75 samples, 1.23%)</title><rect x="85.4" y="595.0" width="14.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="88.4" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="100.0" y="595.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="103.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::CheckBlockChecksum() (2 samples, 0.03%)</title><rect x="100.5" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="103.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (11 samples, 0.18%)</title><rect x="100.9" y="595.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="103.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::Read(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::Slice*, char*, rocksdb::IODebugContext*) const (3 samples, 0.05%)</title><rect x="102.5" y="579.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="105.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.03%)</title><rect x="103.1" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="106.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (2 samples, 0.03%)</title><rect x="104.8" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="107.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (16 samples, 0.26%)</title><rect x="105.2" y="627.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="108.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (14 samples, 0.23%)</title><rect x="105.6" y="611.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="108.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (9 samples, 0.15%)</title><rect x="105.8" y="595.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="108.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.08%)</title><rect x="106.0" y="579.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="109.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.07%)</title><rect x="106.2" y="563.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="109.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.07%)</title><rect x="106.2" y="547.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="109.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheMissMetrics(rocksdb::BlockType, rocksdb::GetContext*) const (3 samples, 0.05%)</title><rect x="107.5" y="595.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="110.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (4 samples, 0.07%)</title><rect x="108.3" y="643.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="111.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.03%)</title><rect x="109.1" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="112.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::DeleteValue(void*, void*) (2 samples, 0.03%)</title><rect x="109.9" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="112.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::Block::~Block() (2 samples, 0.03%)</title><rect x="109.9" y="659.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="112.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Next() (4 samples, 0.07%)</title><rect x="110.6" y="675.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (2 samples, 0.03%)</title><rect x="111.0" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="114.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (6 samples, 0.10%)</title><rect x="111.6" y="675.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="114.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Remove(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.03%)</title><rect x="112.0" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="115.0" y="670.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="112.0" y="643.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="115.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (2 samples, 0.03%)</title><rect x="112.4" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="115.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Remove(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.03%)</title><rect x="112.8" y="675.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="115.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::ForceReleaseCachedEntry(void*, void*) (3 samples, 0.05%)</title><rect x="114.1" y="691.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="117.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::GetVarint32PtrFallback(char const*, char const*, unsigned int*) (3 samples, 0.05%)</title><rect x="114.7" y="691.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="117.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (2 samples, 0.03%)</title><rect x="116.3" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="119.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::CompactionJob::FinishCompactionOutputFile(rocksdb::Status const&amp;, rocksdb::CompactionJob::SubcompactionState*, rocksdb::CompactionRangeDelAggregator*, CompactionIterationStats*, rocksdb::Slice const*) (9 samples, 0.15%)</title><rect x="116.7" y="755.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="119.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Sync(bool) (9 samples, 0.15%)</title><rect x="116.7" y="739.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="119.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::SyncInternal(bool) (9 samples, 0.15%)</title><rect x="116.7" y="723.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.7" y="734.0"></text>
</g>
<g>
<title>fdatasync (9 samples, 0.15%)</title><rect x="116.7" y="707.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="119.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.15%)</title><rect x="116.7" y="691.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="119.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.15%)</title><rect x="116.7" y="675.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="119.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_fdatasync (9 samples, 0.15%)</title><rect x="116.7" y="659.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="119.7" y="670.0"></text>
</g>
<g>
<title>do_fsync (9 samples, 0.15%)</title><rect x="116.7" y="643.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="119.7" y="654.0"></text>
</g>
<g>
<title>vfs_fsync_range (9 samples, 0.15%)</title><rect x="116.7" y="627.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.7" y="638.0"></text>
</g>
<g>
<title>ext4_sync_file (9 samples, 0.15%)</title><rect x="116.7" y="611.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="119.7" y="622.0"></text>
</g>
<g>
<title>file_write_and_wait_range (9 samples, 0.15%)</title><rect x="116.7" y="595.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="119.7" y="606.0"></text>
</g>
<g>
<title>__filemap_fdatawrite_range (9 samples, 0.15%)</title><rect x="116.7" y="579.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="119.7" y="590.0"></text>
</g>
<g>
<title>do_writepages (9 samples, 0.15%)</title><rect x="116.7" y="563.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="119.7" y="574.0"></text>
</g>
<g>
<title>ext4_writepages (9 samples, 0.15%)</title><rect x="116.7" y="547.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.7" y="558.0"></text>
</g>
<g>
<title>mpage_map_and_submit_buffers (6 samples, 0.10%)</title><rect x="116.7" y="531.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="119.7" y="542.0"></text>
</g>
<g>
<title>mpage_submit_page (2 samples, 0.03%)</title><rect x="117.3" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="120.3" y="526.0"></text>
</g>
<g>
<title>ext4_bio_write_page (2 samples, 0.03%)</title><rect x="117.3" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="120.3" y="510.0"></text>
</g>
<g>
<title>__test_set_page_writeback (2 samples, 0.03%)</title><rect x="117.3" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="120.3" y="494.0"></text>
</g>
<g>
<title>mpage_prepare_extent_to_map (3 samples, 0.05%)</title><rect x="117.8" y="531.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="120.8" y="542.0"></text>
</g>
<g>
<title>pagevec_lookup_range_tag (2 samples, 0.03%)</title><rect x="118.0" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="121.0" y="526.0"></text>
</g>
<g>
<title>find_get_pages_range_tag (2 samples, 0.03%)</title><rect x="118.0" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="121.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::CompactionJob::SubcompactionState::ShouldStopBefore(rocksdb::Slice const&amp;, unsigned long) (2 samples, 0.03%)</title><rect x="118.4" y="755.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::FileMetaData::UpdateBoundaries(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, rocksdb::ValueType) (4 samples, 0.07%)</title><rect x="118.8" y="755.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::FlushBlockBySizePolicy::Update(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.12%)</title><rect x="119.6" y="755.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="122.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="120.9" y="755.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="123.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) [clone .plt] (2 samples, 0.03%)</title><rect x="121.3" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="124.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::string*, rocksdb::Slice const*, rocksdb::BlockHandle const&amp;) (3 samples, 0.05%)</title><rect x="121.7" y="755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="124.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::ShortenedIndexBuilder::OnKeyAdded(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="122.3" y="755.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="125.3" y="766.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (5 samples, 0.08%)</title><rect x="122.9" y="755.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="125.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::CompactionJob::SubcompactionState::ShouldStopBefore(rocksdb::Slice const&amp;, unsigned long) (3 samples, 0.05%)</title><rect x="124.2" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="127.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::FileMetaData::UpdateBoundaries(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="124.8" y="771.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="127.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&amp;, bool) (7 samples, 0.12%)</title><rect x="125.2" y="803.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="128.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::string const&amp;, std::string const&amp;, rocksdb::FileType, unsigned long) (7 samples, 0.12%)</title><rect x="125.2" y="787.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="128.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::string const&amp;, std::string const&amp;, bool, bool) (7 samples, 0.12%)</title><rect x="125.2" y="771.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="128.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::string const&amp;, std::string const&amp;, bool) (7 samples, 0.12%)</title><rect x="125.2" y="755.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="128.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::DeleteScheduler::DeleteFile(std::string const&amp;, std::string const&amp;, bool) (7 samples, 0.12%)</title><rect x="125.2" y="739.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="128.2" y="750.0"></text>
</g>
<g>
<title>__GI___unlink (7 samples, 0.12%)</title><rect x="125.2" y="723.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="128.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="125.2" y="707.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="128.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.12%)</title><rect x="125.2" y="691.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="128.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_unlink (7 samples, 0.12%)</title><rect x="125.2" y="675.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="128.2" y="686.0"></text>
</g>
<g>
<title>do_unlinkat (7 samples, 0.12%)</title><rect x="125.2" y="659.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.2" y="670.0"></text>
</g>
<g>
<title>iput (7 samples, 0.12%)</title><rect x="125.2" y="643.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="128.2" y="654.0"></text>
</g>
<g>
<title>evict (7 samples, 0.12%)</title><rect x="125.2" y="627.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="128.2" y="638.0"></text>
</g>
<g>
<title>ext4_evict_inode (7 samples, 0.12%)</title><rect x="125.2" y="611.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="128.2" y="622.0"></text>
</g>
<g>
<title>truncate_inode_pages_final (7 samples, 0.12%)</title><rect x="125.2" y="595.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.2" y="606.0"></text>
</g>
<g>
<title>truncate_inode_pages_range (7 samples, 0.12%)</title><rect x="125.2" y="579.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="128.2" y="590.0"></text>
</g>
<g>
<title>truncate_cleanup_page (6 samples, 0.10%)</title><rect x="125.4" y="563.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.4" y="574.0"></text>
</g>
<g>
<title>ext4_da_invalidatepage (5 samples, 0.08%)</title><rect x="125.6" y="547.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="128.6" y="558.0"></text>
</g>
<g>
<title>ext4_invalidatepage (2 samples, 0.03%)</title><rect x="126.2" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="129.2" y="542.0"></text>
</g>
<g>
<title>block_invalidatepage (2 samples, 0.03%)</title><rect x="126.2" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="129.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (62 samples, 1.02%)</title><rect x="126.6" y="835.0" width="12.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="129.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (59 samples, 0.97%)</title><rect x="126.6" y="819.0" width="11.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="129.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, 8ul&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (59 samples, 0.97%)</title><rect x="126.6" y="803.0" width="11.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="129.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (59 samples, 0.97%)</title><rect x="126.6" y="787.0" width="11.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="129.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*) (59 samples, 0.97%)</title><rect x="126.6" y="771.0" width="11.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="129.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::WriteLevel0Table() (59 samples, 0.97%)</title><rect x="126.6" y="755.0" width="11.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="129.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::BuildTable(std::string const&amp;, rocksdb::Env*, rocksdb::FileSystem*, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&amp;, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_del (57 samples, 0.94%)</title><rect x="126.8" y="739.0" width="11.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="129.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (38 samples, 0.63%)</title><rect x="127.6" y="723.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="130.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Flush() (29 samples, 0.48%)</title><rect x="127.7" y="707.0" width="5.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="130.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, bool) (29 samples, 0.48%)</title><rect x="127.7" y="691.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="130.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, bool) (27 samples, 0.44%)</title><rect x="127.7" y="675.0" width="5.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="130.7" y="686.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (15 samples, 0.25%)</title><rect x="127.7" y="659.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="130.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext&amp;, rocksdb::UncompressionContext*, std::string*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (5 samples, 0.08%)</title><rect x="130.7" y="659.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="133.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::string*, std::string*, std::string*) (4 samples, 0.07%)</title><rect x="130.7" y="643.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="133.7" y="654.0"></text>
</g>
<g>
<title>__memset_erms (4 samples, 0.07%)</title><rect x="130.7" y="627.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="133.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, bool) (5 samples, 0.08%)</title><rect x="131.8" y="659.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="134.8" y="670.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (4 samples, 0.07%)</title><rect x="132.0" y="643.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="135.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="133.4" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="136.4" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="134.5" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="137.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (11 samples, 0.18%)</title><rect x="134.9" y="723.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="137.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (6 samples, 0.10%)</title><rect x="135.7" y="707.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="138.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (2 samples, 0.03%)</title><rect x="136.5" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="139.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Sync(bool) (3 samples, 0.05%)</title><rect x="137.3" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::SyncInternal(bool) (3 samples, 0.05%)</title><rect x="137.3" y="707.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="140.3" y="718.0"></text>
</g>
<g>
<title>fdatasync (3 samples, 0.05%)</title><rect x="137.3" y="691.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="140.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="137.3" y="675.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="140.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="137.3" y="659.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="140.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_fdatasync (3 samples, 0.05%)</title><rect x="137.3" y="643.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="140.3" y="654.0"></text>
</g>
<g>
<title>do_fsync (3 samples, 0.05%)</title><rect x="137.3" y="627.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="140.3" y="638.0"></text>
</g>
<g>
<title>vfs_fsync_range (3 samples, 0.05%)</title><rect x="137.3" y="611.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.3" y="622.0"></text>
</g>
<g>
<title>ext4_sync_file (3 samples, 0.05%)</title><rect x="137.3" y="595.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.3" y="606.0"></text>
</g>
<g>
<title>file_write_and_wait_range (3 samples, 0.05%)</title><rect x="137.3" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="140.3" y="590.0"></text>
</g>
<g>
<title>__filemap_fdatawrite_range (2 samples, 0.03%)</title><rect x="137.5" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.5" y="574.0"></text>
</g>
<g>
<title>do_writepages (2 samples, 0.03%)</title><rect x="137.5" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="140.5" y="558.0"></text>
</g>
<g>
<title>ext4_writepages (2 samples, 0.03%)</title><rect x="137.5" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="140.5" y="542.0"></text>
</g>
<g>
<title>mpage_map_and_submit_buffers (2 samples, 0.03%)</title><rect x="137.5" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="140.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&amp;, bool) (3 samples, 0.05%)</title><rect x="138.0" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="141.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::string const&amp;, std::string const&amp;, rocksdb::FileType, unsigned long) (3 samples, 0.05%)</title><rect x="138.0" y="803.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="141.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::string const&amp;, std::string const&amp;, bool, bool) (3 samples, 0.05%)</title><rect x="138.0" y="787.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="141.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::string const&amp;, std::string const&amp;, bool) (3 samples, 0.05%)</title><rect x="138.0" y="771.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="141.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::DeleteScheduler::DeleteFile(std::string const&amp;, std::string const&amp;, bool) (3 samples, 0.05%)</title><rect x="138.0" y="755.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="141.0" y="766.0"></text>
</g>
<g>
<title>__GI___unlink (3 samples, 0.05%)</title><rect x="138.0" y="739.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="141.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="138.0" y="723.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="141.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="138.0" y="707.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="141.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_unlink (3 samples, 0.05%)</title><rect x="138.0" y="691.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.0" y="702.0"></text>
</g>
<g>
<title>do_unlinkat (3 samples, 0.05%)</title><rect x="138.0" y="675.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="141.0" y="686.0"></text>
</g>
<g>
<title>iput (3 samples, 0.05%)</title><rect x="138.0" y="659.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="141.0" y="670.0"></text>
</g>
<g>
<title>evict (3 samples, 0.05%)</title><rect x="138.0" y="643.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.0" y="654.0"></text>
</g>
<g>
<title>ext4_evict_inode (3 samples, 0.05%)</title><rect x="138.0" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.0" y="638.0"></text>
</g>
<g>
<title>truncate_inode_pages_final (3 samples, 0.05%)</title><rect x="138.0" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.0" y="622.0"></text>
</g>
<g>
<title>truncate_inode_pages_range (3 samples, 0.05%)</title><rect x="138.0" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="141.0" y="606.0"></text>
</g>
<g>
<title>truncate_cleanup_page (2 samples, 0.03%)</title><rect x="138.2" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="141.2" y="590.0"></text>
</g>
<g>
<title>ext4_da_invalidatepage (2 samples, 0.03%)</title><rect x="138.2" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.2" y="574.0"></text>
</g>
<g>
<title>ext4_invalidatepage (2 samples, 0.03%)</title><rect x="138.2" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.2" y="558.0"></text>
</g>
<g>
<title>LZ4_compress_fast_continue (76 samples, 1.25%)</title><rect x="138.6" y="883.0" width="14.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="141.6" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (30 samples, 0.49%)</title><rect x="153.4" y="883.0" width="5.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="156.4" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (29 samples, 0.48%)</title><rect x="153.6" y="867.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="156.6" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (28 samples, 0.46%)</title><rect x="153.6" y="851.0" width="5.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="156.6" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (27 samples, 0.44%)</title><rect x="153.6" y="835.0" width="5.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="156.6" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.08%)</title><rect x="154.0" y="819.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="157.0" y="830.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 0.15%)</title><rect x="154.9" y="819.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="157.9" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.12%)</title><rect x="156.7" y="819.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="159.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.12%)</title><rect x="156.7" y="803.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="159.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="156.9" y="787.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="159.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="157.5" y="771.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.5" y="782.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="157.7" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="160.7" y="766.0"></text>
</g>
<g>
<title>[no_Java_frame] (3 samples, 0.05%)</title><rect x="159.2" y="883.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="162.2" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.13%)</title><rect x="159.8" y="883.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="162.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.10%)</title><rect x="160.0" y="867.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="163.0" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.10%)</title><rect x="160.0" y="851.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="163.0" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.08%)</title><rect x="160.2" y="835.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="163.2" y="846.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.05%)</title><rect x="160.6" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="163.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (319 samples, 5.25%)</title><rect x="161.4" y="883.0" width="61.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="164.4" y="894.0">[unkno..</text>
</g>
<g>
<title>LZ4_compress_fast_continue (150 samples, 2.47%)</title><rect x="161.4" y="867.0" width="29.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="164.4" y="878.0">LZ..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="190.1" y="851.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="193.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="190.1" y="835.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="190.1" y="819.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.30%)</title><rect x="190.5" y="867.0" width="3.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="193.5" y="878.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (9 samples, 0.15%)</title><rect x="190.7" y="851.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="193.7" y="862.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (4 samples, 0.07%)</title><rect x="192.5" y="851.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="195.5" y="862.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (4 samples, 0.07%)</title><rect x="193.2" y="851.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="196.2" y="862.0"></text>
</g>
<g>
<title>__GI_write (102 samples, 1.68%)</title><rect x="194.0" y="867.0" width="19.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="197.0" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (102 samples, 1.68%)</title><rect x="194.0" y="851.0" width="19.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="197.0" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (102 samples, 1.68%)</title><rect x="194.0" y="835.0" width="19.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="197.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_write (101 samples, 1.66%)</title><rect x="194.2" y="819.0" width="19.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.2" y="830.0"></text>
</g>
<g>
<title>ksys_write (101 samples, 1.66%)</title><rect x="194.2" y="803.0" width="19.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="197.2" y="814.0"></text>
</g>
<g>
<title>vfs_write (101 samples, 1.66%)</title><rect x="194.2" y="787.0" width="19.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="197.2" y="798.0"></text>
</g>
<g>
<title>__vfs_write (101 samples, 1.66%)</title><rect x="194.2" y="771.0" width="19.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="197.2" y="782.0"></text>
</g>
<g>
<title>new_sync_write (101 samples, 1.66%)</title><rect x="194.2" y="755.0" width="19.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="197.2" y="766.0"></text>
</g>
<g>
<title>ext4_file_write_iter (101 samples, 1.66%)</title><rect x="194.2" y="739.0" width="19.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="197.2" y="750.0"></text>
</g>
<g>
<title>__generic_file_write_iter (101 samples, 1.66%)</title><rect x="194.2" y="723.0" width="19.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="197.2" y="734.0"></text>
</g>
<g>
<title>generic_perform_write (100 samples, 1.65%)</title><rect x="194.2" y="707.0" width="19.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="197.2" y="718.0"></text>
</g>
<g>
<title>ext4_da_write_begin (36 samples, 0.59%)</title><rect x="194.8" y="691.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.8" y="702.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (6 samples, 0.10%)</title><rect x="195.0" y="675.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="198.0" y="686.0"></text>
</g>
<g>
<title>jbd2__journal_start (6 samples, 0.10%)</title><rect x="195.0" y="659.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="198.0" y="670.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="195.2" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="198.2" y="654.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.03%)</title><rect x="195.8" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="198.8" y="654.0"></text>
</g>
<g>
<title>ext4_block_write_begin (10 samples, 0.16%)</title><rect x="196.1" y="675.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="199.1" y="686.0"></text>
</g>
<g>
<title>create_empty_buffers (5 samples, 0.08%)</title><rect x="196.7" y="659.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.7" y="670.0"></text>
</g>
<g>
<title>alloc_page_buffers (5 samples, 0.08%)</title><rect x="196.7" y="643.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="199.7" y="654.0"></text>
</g>
<g>
<title>alloc_buffer_head (5 samples, 0.08%)</title><rect x="196.7" y="627.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="199.7" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.07%)</title><rect x="196.7" y="611.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="199.7" y="622.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="196.9" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="199.9" y="606.0"></text>
</g>
<g>
<title>ext4_da_get_block_prep (2 samples, 0.03%)</title><rect x="197.7" y="659.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="200.7" y="670.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (17 samples, 0.28%)</title><rect x="198.5" y="675.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="201.5" y="686.0"></text>
</g>
<g>
<title>pagecache_get_page (17 samples, 0.28%)</title><rect x="198.5" y="659.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="201.5" y="670.0"></text>
</g>
<g>
<title>__page_cache_alloc (7 samples, 0.12%)</title><rect x="198.5" y="643.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.5" y="654.0"></text>
</g>
<g>
<title>alloc_pages_current (4 samples, 0.07%)</title><rect x="198.9" y="627.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="201.9" y="638.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (3 samples, 0.05%)</title><rect x="198.9" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="201.9" y="622.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="198.9" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="201.9" y="606.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (9 samples, 0.15%)</title><rect x="199.8" y="643.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="202.8" y="654.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (7 samples, 0.12%)</title><rect x="199.8" y="627.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="202.8" y="638.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (5 samples, 0.08%)</title><rect x="200.2" y="611.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="203.2" y="622.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="200.4" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="203.4" y="606.0"></text>
</g>
<g>
<title>try_charge (2 samples, 0.03%)</title><rect x="200.8" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.8" y="606.0"></text>
</g>
<g>
<title>lru_cache_add (2 samples, 0.03%)</title><rect x="201.2" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.2" y="638.0"></text>
</g>
<g>
<title>__lru_cache_add (2 samples, 0.03%)</title><rect x="201.2" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="204.2" y="622.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (2 samples, 0.03%)</title><rect x="201.2" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="204.2" y="606.0"></text>
</g>
<g>
<title>ext4_da_write_end (26 samples, 0.43%)</title><rect x="201.8" y="691.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="204.8" y="702.0"></text>
</g>
<g>
<title>generic_write_end (24 samples, 0.40%)</title><rect x="202.2" y="675.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="205.2" y="686.0"></text>
</g>
<g>
<title>__generic_write_end (21 samples, 0.35%)</title><rect x="202.2" y="659.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="205.2" y="670.0"></text>
</g>
<g>
<title>__mark_inode_dirty (20 samples, 0.33%)</title><rect x="202.4" y="643.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="205.4" y="654.0"></text>
</g>
<g>
<title>ext4_dirty_inode (19 samples, 0.31%)</title><rect x="202.4" y="627.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="205.4" y="638.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (16 samples, 0.26%)</title><rect x="202.9" y="611.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="205.9" y="622.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (11 samples, 0.18%)</title><rect x="203.3" y="595.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.3" y="606.0"></text>
</g>
<g>
<title>ext4_do_update_inode (10 samples, 0.16%)</title><rect x="203.5" y="579.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="206.5" y="590.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.05%)</title><rect x="204.7" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="207.7" y="574.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (3 samples, 0.05%)</title><rect x="204.7" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="207.7" y="558.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.03%)</title><rect x="204.9" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.9" y="542.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.03%)</title><rect x="204.9" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="207.9" y="526.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.05%)</title><rect x="205.5" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="208.5" y="606.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.03%)</title><rect x="205.5" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="208.5" y="590.0"></text>
</g>
<g>
<title>block_write_end (3 samples, 0.05%)</title><rect x="206.2" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="209.2" y="670.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (3 samples, 0.05%)</title><rect x="206.2" y="643.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="209.2" y="654.0"></text>
</g>
<g>
<title>mark_buffer_dirty (3 samples, 0.05%)</title><rect x="206.2" y="627.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="209.2" y="638.0"></text>
</g>
<g>
<title>__set_page_dirty (3 samples, 0.05%)</title><rect x="206.2" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="209.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="206.2" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.2" y="606.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (27 samples, 0.44%)</title><rect x="206.8" y="691.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="209.8" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (27 samples, 0.44%)</title><rect x="206.8" y="675.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="209.8" y="686.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (8 samples, 0.13%)</title><rect x="212.1" y="691.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="215.1" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.03%)</title><rect x="214.0" y="867.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="217.0" y="878.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="214.4" y="867.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="217.4" y="878.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="214.6" y="851.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="217.6" y="862.0"></text>
</g>
<g>
<title>pread64 (42 samples, 0.69%)</title><rect x="215.2" y="867.0" width="8.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="218.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.63%)</title><rect x="216.0" y="851.0" width="7.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="219.0" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.63%)</title><rect x="216.0" y="835.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="219.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (32 samples, 0.53%)</title><rect x="217.1" y="819.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.1" y="830.0"></text>
</g>
<g>
<title>ksys_pread64 (31 samples, 0.51%)</title><rect x="217.3" y="803.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="220.3" y="814.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="217.3" y="787.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="220.3" y="798.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="217.3" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="220.3" y="782.0"></text>
</g>
<g>
<title>vfs_read (28 samples, 0.46%)</title><rect x="217.9" y="787.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="220.9" y="798.0"></text>
</g>
<g>
<title>__vfs_read (22 samples, 0.36%)</title><rect x="217.9" y="771.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="220.9" y="782.0"></text>
</g>
<g>
<title>new_sync_read (22 samples, 0.36%)</title><rect x="217.9" y="755.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.9" y="766.0"></text>
</g>
<g>
<title>ext4_file_read_iter (21 samples, 0.35%)</title><rect x="218.1" y="739.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="221.1" y="750.0"></text>
</g>
<g>
<title>generic_file_read_iter (20 samples, 0.33%)</title><rect x="218.1" y="723.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="221.1" y="734.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.16%)</title><rect x="218.3" y="707.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="221.3" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.15%)</title><rect x="218.5" y="691.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.5" y="702.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.08%)</title><rect x="220.4" y="707.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.4" y="718.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.08%)</title><rect x="220.4" y="691.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="223.4" y="702.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.05%)</title><rect x="221.4" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="224.4" y="718.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.05%)</title><rect x="221.4" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="224.4" y="702.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.05%)</title><rect x="221.4" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="224.4" y="686.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.05%)</title><rect x="221.4" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="224.4" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.08%)</title><rect x="222.4" y="771.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.4" y="782.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.08%)</title><rect x="222.4" y="755.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="225.4" y="766.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="222.8" y="739.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="225.8" y="750.0"></text>
</g>
<g>
<title>[unknown_Java] (19 samples, 0.31%)</title><rect x="223.3" y="883.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="226.3" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.30%)</title><rect x="223.5" y="867.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="226.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.28%)</title><rect x="223.7" y="851.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="226.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.28%)</title><rect x="223.7" y="835.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="226.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.28%)</title><rect x="223.7" y="819.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="226.7" y="830.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.26%)</title><rect x="223.9" y="803.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="226.9" y="814.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.25%)</title><rect x="223.9" y="787.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.9" y="798.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.21%)</title><rect x="224.3" y="771.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="227.3" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.21%)</title><rect x="224.3" y="755.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.3" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.21%)</title><rect x="224.3" y="739.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="227.3" y="750.0"></text>
</g>
<g>
<title>__libc_free (6 samples, 0.10%)</title><rect x="227.0" y="883.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="230.0" y="894.0"></text>
</g>
<g>
<title>__malloc (4 samples, 0.07%)</title><rect x="228.2" y="883.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="231.2" y="894.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (34 samples, 0.56%)</title><rect x="229.0" y="883.0" width="6.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="232.0" y="894.0"></text>
</g>
<g>
<title>__memset_erms (5 samples, 0.08%)</title><rect x="235.8" y="883.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="238.8" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (23 samples, 0.38%)</title><rect x="236.8" y="883.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="239.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.25%)</title><rect x="238.3" y="867.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.3" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.25%)</title><rect x="238.3" y="851.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="241.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.21%)</title><rect x="238.7" y="835.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="241.7" y="846.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.16%)</title><rect x="238.7" y="819.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="241.7" y="830.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.12%)</title><rect x="238.9" y="803.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="241.9" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="239.1" y="787.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.1" y="798.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="239.7" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="242.7" y="798.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="240.6" y="819.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.6" y="830.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="240.6" y="803.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="243.6" y="814.0"></text>
</g>
<g>
<title>_int_malloc (14 samples, 0.23%)</title><rect x="241.4" y="883.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="244.4" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,815 samples, 62.82%)</title><rect x="244.1" y="883.0" width="741.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.1" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,815 samples, 62.82%)</title><rect x="244.1" y="867.0" width="741.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.1" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,815 samples, 62.82%)</title><rect x="244.1" y="851.0" width="741.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.1" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.05%)</title><rect x="245.3" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.03%)</title><rect x="245.5" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="245.5" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (2 samples, 0.03%)</title><rect x="245.5" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (2 samples, 0.03%)</title><rect x="245.5" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (2 samples, 0.03%)</title><rect x="245.5" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (6 samples, 0.10%)</title><rect x="245.9" y="835.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.10%)</title><rect x="245.9" y="819.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.10%)</title><rect x="245.9" y="803.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.10%)</title><rect x="245.9" y="787.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (243 samples, 4.00%)</title><rect x="247.0" y="835.0" width="47.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.0" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (242 samples, 3.98%)</title><rect x="247.2" y="819.0" width="47.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.2" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (2 samples, 0.03%)</title><rect x="247.6" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (221 samples, 3.64%)</title><rect x="248.0" y="803.0" width="43.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.0" y="814.0">java..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (7 samples, 0.12%)</title><rect x="248.6" y="787.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.07%)</title><rect x="250.0" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.05%)</title><rect x="250.9" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="250.9" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.03%)</title><rect x="251.1" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (4 samples, 0.07%)</title><rect x="251.5" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (199 samples, 3.28%)</title><rect x="252.3" y="787.0" width="38.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.3" y="798.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (199 samples, 3.28%)</title><rect x="252.3" y="771.0" width="38.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.3" y="782.0">jdk..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="254.0" y="755.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="257.0" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (82 samples, 1.35%)</title><rect x="254.8" y="755.0" width="16.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="257.8" y="766.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="256.4" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="259.4" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="256.8" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="259.8" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 0.31%)</title><rect x="257.2" y="739.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="260.2" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.13%)</title><rect x="259.1" y="723.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="262.1" y="734.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="261.2" y="739.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="264.2" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (32 samples, 0.53%)</title><rect x="261.6" y="739.0" width="6.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="264.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.41%)</title><rect x="263.0" y="723.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="266.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.41%)</title><rect x="263.0" y="707.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.15%)</title><rect x="266.1" y="691.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="269.1" y="702.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.12%)</title><rect x="266.3" y="675.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="266.5" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="269.5" y="670.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="266.9" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="269.9" y="670.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="267.3" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="270.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="267.8" y="739.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="270.8" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="268.2" y="739.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="271.2" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.05%)</title><rect x="268.8" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="271.8" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="270.0" y="739.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="273.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.71%)</title><rect x="270.8" y="755.0" width="20.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="273.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (4 samples, 0.07%)</title><rect x="270.9" y="739.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="273.9" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (15 samples, 0.25%)</title><rect x="271.9" y="739.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="274.9" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (81 samples, 1.33%)</title><rect x="275.2" y="739.0" width="15.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="278.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.59%)</title><rect x="284.0" y="723.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="287.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.59%)</title><rect x="284.0" y="707.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="287.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.35%)</title><rect x="286.9" y="691.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="289.9" y="702.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.35%)</title><rect x="286.9" y="675.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="289.9" y="686.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.33%)</title><rect x="287.1" y="659.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.1" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="288.4" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="291.4" y="654.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="288.4" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="291.4" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="288.4" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="291.4" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="288.4" y="595.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="291.4" y="606.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.15%)</title><rect x="288.8" y="643.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="291.8" y="654.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="289.8" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="292.8" y="638.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.03%)</title><rect x="290.2" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="293.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.07%)</title><rect x="291.0" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.07%)</title><rect x="291.0" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.05%)</title><rect x="291.0" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.21%)</title><rect x="291.7" y="803.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.21%)</title><rect x="291.7" y="787.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.21%)</title><rect x="291.7" y="771.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.21%)</title><rect x="291.7" y="755.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.21%)</title><rect x="291.7" y="739.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.7" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.05%)</title><rect x="291.9" y="723.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="294.9" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="292.1" y="707.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="295.1" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.15%)</title><rect x="292.5" y="723.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="295.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.13%)</title><rect x="292.7" y="707.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.13%)</title><rect x="292.7" y="691.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="295.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.12%)</title><rect x="292.9" y="675.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.9" y="686.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.12%)</title><rect x="292.9" y="659.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="295.9" y="670.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="293.1" y="643.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="296.1" y="654.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="293.1" y="627.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="296.1" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="293.1" y="611.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="296.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="293.1" y="595.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="296.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run (3,556 samples, 58.55%)</title><rect x="294.5" y="835.0" width="690.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.5" y="846.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6 (3,553 samples, 58.50%)</title><rect x="295.0" y="819.0" width="690.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.0" y="830.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,029 samples, 16.94%)</title><rect x="295.6" y="803.0" width="200.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.6" y="814.0">one/nio/http/HttpSession.s..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.16%)</title><rect x="298.3" y="787.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="301.3" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.16%)</title><rect x="298.3" y="771.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="301.3" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.15%)</title><rect x="298.3" y="755.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="301.3" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (9 samples, 0.15%)</title><rect x="298.3" y="739.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="301.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.15%)</title><rect x="300.3" y="787.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.15%)</title><rect x="300.3" y="771.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.12%)</title><rect x="300.7" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (971 samples, 15.99%)</title><rect x="302.0" y="787.0" width="188.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.0" y="798.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.44%)</title><rect x="302.6" y="771.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.15%)</title><rect x="306.1" y="755.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.15%)</title><rect x="306.1" y="739.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.15%)</title><rect x="306.1" y="723.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.15%)</title><rect x="306.1" y="707.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.15%)</title><rect x="306.1" y="691.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="307.3" y="675.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="310.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (941 samples, 15.49%)</title><rect x="307.9" y="771.0" width="182.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.9" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (937 samples, 15.43%)</title><rect x="308.6" y="755.0" width="182.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.6" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.10%)</title><rect x="309.8" y="739.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="312.8" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.07%)</title><rect x="310.2" y="723.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="313.2" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (2 samples, 0.03%)</title><rect x="310.6" y="707.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="313.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="311.0" y="739.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="314.0" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="311.0" y="723.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="314.0" y="734.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="311.6" y="739.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="314.6" y="750.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.03%)</title><rect x="312.1" y="739.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="315.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (916 samples, 15.08%)</title><rect x="312.5" y="739.0" width="178.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.5" y="750.0">one/nio/net/Session$Arr..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (910 samples, 14.98%)</title><rect x="313.7" y="723.0" width="176.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.7" y="734.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (37 samples, 0.61%)</title><rect x="316.8" y="707.0" width="7.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="319.8" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="319.9" y="691.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="322.9" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (11 samples, 0.18%)</title><rect x="320.3" y="691.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="323.3" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.12%)</title><rect x="322.4" y="691.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="325.4" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="322.8" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="325.8" y="686.0"></text>
</g>
<g>
<title>__libc_send (855 samples, 14.08%)</title><rect x="324.2" y="707.0" width="166.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="327.2" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (835 samples, 13.75%)</title><rect x="328.1" y="691.0" width="162.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="331.1" y="702.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.05%)</title><rect x="328.1" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="331.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (832 samples, 13.70%)</title><rect x="328.7" y="675.0" width="161.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="331.7" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (807 samples, 13.29%)</title><rect x="332.7" y="659.0" width="156.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="335.7" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (802 samples, 13.21%)</title><rect x="333.1" y="643.0" width="155.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="336.1" y="654.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="334.7" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="337.7" y="638.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="335.1" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="338.1" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (769 samples, 12.66%)</title><rect x="335.7" y="627.0" width="149.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="338.7" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (758 samples, 12.48%)</title><rect x="336.0" y="611.0" width="147.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="339.0" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (751 samples, 12.37%)</title><rect x="337.4" y="595.0" width="145.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="340.4" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="337.8" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="340.8" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="338.2" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="341.2" y="590.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="338.6" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="341.6" y="590.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.03%)</title><rect x="339.1" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.1" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.05%)</title><rect x="339.7" y="579.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="342.7" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="340.3" y="579.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="343.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (729 samples, 12.00%)</title><rect x="341.1" y="579.0" width="141.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="344.1" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="344.4" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="347.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="344.4" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="347.4" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.10%)</title><rect x="345.2" y="563.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="348.2" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="345.2" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="348.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (35 samples, 0.58%)</title><rect x="346.5" y="563.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="349.5" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (22 samples, 0.36%)</title><rect x="347.7" y="547.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="350.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (8 samples, 0.13%)</title><rect x="348.3" y="531.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="351.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.10%)</title><rect x="348.3" y="515.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="351.3" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="348.7" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="351.7" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.15%)</title><rect x="350.0" y="531.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="353.0" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="351.2" y="515.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.2" y="526.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.10%)</title><rect x="352.2" y="547.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="355.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (649 samples, 10.69%)</title><rect x="353.7" y="563.0" width="126.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="356.7" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (643 samples, 10.59%)</title><rect x="354.7" y="547.0" width="124.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="357.7" y="558.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.05%)</title><rect x="355.1" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="358.1" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (638 samples, 10.51%)</title><rect x="355.7" y="531.0" width="123.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="358.7" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.05%)</title><rect x="357.6" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="360.6" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (589 samples, 9.70%)</title><rect x="358.2" y="515.0" width="114.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="361.2" y="526.0">__tcp_transmit..</text>
</g>
<g>
<title>ip_queue_xmit (569 samples, 9.37%)</title><rect x="360.7" y="499.0" width="110.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="363.7" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (567 samples, 9.34%)</title><rect x="361.1" y="483.0" width="110.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="364.1" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.05%)</title><rect x="362.1" y="467.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.1" y="478.0"></text>
</g>
<g>
<title>ip_local_out (554 samples, 9.12%)</title><rect x="362.9" y="467.0" width="107.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="365.9" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (97 samples, 1.60%)</title><rect x="363.0" y="451.0" width="18.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.0" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.05%)</title><rect x="363.6" y="435.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="366.6" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.07%)</title><rect x="364.2" y="435.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (84 samples, 1.38%)</title><rect x="365.0" y="435.0" width="16.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="368.0" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (14 samples, 0.23%)</title><rect x="365.2" y="419.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="368.2" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (14 samples, 0.23%)</title><rect x="365.2" y="403.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="368.2" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (60 samples, 0.99%)</title><rect x="367.9" y="419.0" width="11.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="370.9" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.03%)</title><rect x="367.9" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="370.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.03%)</title><rect x="368.3" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="371.3" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.03%)</title><rect x="368.7" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.7" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (51 samples, 0.84%)</title><rect x="369.1" y="403.0" width="9.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="372.1" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.10%)</title><rect x="370.0" y="387.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="373.0" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (5 samples, 0.08%)</title><rect x="371.2" y="387.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.2" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (3 samples, 0.05%)</title><rect x="372.6" y="387.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.6" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.07%)</title><rect x="373.2" y="387.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="376.2" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (26 samples, 0.43%)</title><rect x="373.9" y="387.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="376.9" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (14 samples, 0.23%)</title><rect x="376.3" y="371.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.3" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (5 samples, 0.08%)</title><rect x="378.0" y="355.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="381.0" y="366.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.05%)</title><rect x="379.0" y="403.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="382.0" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="379.6" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="382.6" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="380.0" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="383.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="380.5" y="419.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="383.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="380.7" y="403.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="383.7" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="380.7" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="383.7" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="381.3" y="435.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.3" y="446.0"></text>
</g>
<g>
<title>ip_output (453 samples, 7.46%)</title><rect x="381.9" y="451.0" width="88.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="384.9" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (441 samples, 7.26%)</title><rect x="382.3" y="435.0" width="85.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="385.3" y="446.0">ip_finish_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (9 samples, 0.15%)</title><rect x="382.7" y="419.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="385.7" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (430 samples, 7.08%)</title><rect x="384.4" y="419.0" width="83.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.4" y="430.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="385.4" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.4" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (375 samples, 6.17%)</title><rect x="385.8" y="403.0" width="72.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="388.8" y="414.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.21 (375 samples, 6.17%)</title><rect x="385.8" y="387.0" width="72.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="388.8" y="398.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (372 samples, 6.13%)</title><rect x="386.4" y="371.0" width="72.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="389.4" y="382.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (372 samples, 6.13%)</title><rect x="386.4" y="355.0" width="72.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="389.4" y="366.0">__softir..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="387.5" y="339.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="390.5" y="350.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.05%)</title><rect x="387.9" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="390.9" y="350.0"></text>
</g>
<g>
<title>net_rx_action (361 samples, 5.94%)</title><rect x="388.5" y="339.0" width="70.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="391.5" y="350.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (356 samples, 5.86%)</title><rect x="389.5" y="323.0" width="69.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="392.5" y="334.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (352 samples, 5.80%)</title><rect x="390.3" y="307.0" width="68.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.3" y="318.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="390.4" y="291.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="393.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (348 samples, 5.73%)</title><rect x="390.8" y="291.0" width="67.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="393.8" y="302.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.10%)</title><rect x="391.4" y="275.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (338 samples, 5.57%)</title><rect x="392.6" y="275.0" width="65.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.6" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (315 samples, 5.19%)</title><rect x="394.3" y="259.0" width="61.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.3" y="270.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (306 samples, 5.04%)</title><rect x="394.7" y="243.0" width="59.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="397.7" y="254.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (296 samples, 4.87%)</title><rect x="395.1" y="227.0" width="57.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.1" y="238.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (294 samples, 4.84%)</title><rect x="395.3" y="211.0" width="57.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="398.3" y="222.0">ip_pro..</text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.05%)</title><rect x="396.7" y="195.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="399.7" y="206.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.05%)</title><rect x="397.2" y="195.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="400.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="397.8" y="195.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (279 samples, 4.59%)</title><rect x="398.2" y="195.0" width="54.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="401.2" y="206.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (15 samples, 0.25%)</title><rect x="400.5" y="179.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="403.5" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.05%)</title><rect x="402.9" y="163.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="405.9" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.13%)</title><rect x="403.7" y="179.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="406.7" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.08%)</title><rect x="403.7" y="163.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="406.7" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.05%)</title><rect x="404.6" y="163.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="407.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (239 samples, 3.94%)</title><rect x="405.4" y="179.0" width="46.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="408.4" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (234 samples, 3.85%)</title><rect x="406.2" y="163.0" width="45.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.2" y="174.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (15 samples, 0.25%)</title><rect x="407.3" y="147.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="410.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (11 samples, 0.18%)</title><rect x="408.1" y="131.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.15%)</title><rect x="408.5" y="115.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="411.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.15%)</title><rect x="408.5" y="99.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="411.5" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="409.5" y="83.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="412.5" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="410.5" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (16 samples, 0.26%)</title><rect x="411.4" y="147.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="414.4" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (16 samples, 0.26%)</title><rect x="411.4" y="131.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.26%)</title><rect x="411.4" y="115.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="414.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.25%)</title><rect x="411.6" y="99.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (63 samples, 1.04%)</title><rect x="414.5" y="147.0" width="12.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="417.5" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="417.1" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="420.1" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (40 samples, 0.66%)</title><rect x="417.8" y="131.0" width="7.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="420.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.38%)</title><rect x="419.2" y="115.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="422.2" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.12%)</title><rect x="419.4" y="99.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="422.4" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.10%)</title><rect x="419.6" y="83.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="422.6" y="94.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.20%)</title><rect x="420.8" y="99.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="423.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.20%)</title><rect x="420.8" y="83.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.07%)</title><rect x="422.3" y="67.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="425.3" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.07%)</title><rect x="422.3" y="51.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="425.3" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="423.3" y="99.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="426.3" y="110.0"></text>
</g>
<g>
<title>rb_erase (4 samples, 0.07%)</title><rect x="423.9" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.9" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (5 samples, 0.08%)</title><rect x="424.6" y="115.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.6" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.05%)</title><rect x="425.8" y="131.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.8" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.05%)</title><rect x="426.8" y="147.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.8" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (115 samples, 1.89%)</title><rect x="427.4" y="147.0" width="22.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="430.4" y="158.0">t..</text>
</g>
<g>
<title>sock_def_readable (105 samples, 1.73%)</title><rect x="428.1" y="131.0" width="20.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (100 samples, 1.65%)</title><rect x="429.1" y="115.0" width="19.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (100 samples, 1.65%)</title><rect x="429.1" y="99.0" width="19.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="432.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (98 samples, 1.61%)</title><rect x="429.5" y="83.0" width="19.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.5" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.07%)</title><rect x="448.5" y="131.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="451.5" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="449.3" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="452.3" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="449.9" y="147.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="452.9" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="449.9" y="131.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.9" y="142.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="449.9" y="115.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="452.9" y="126.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="450.7" y="147.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.7" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="451.1" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="454.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="451.8" y="179.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="454.8" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.12%)</title><rect x="452.8" y="227.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="455.8" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.03%)</title><rect x="453.0" y="211.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="456.0" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.03%)</title><rect x="453.0" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="456.0" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="453.4" y="211.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="456.4" y="222.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="453.4" y="195.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="456.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="454.2" y="243.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.03%)</title><rect x="454.8" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="457.8" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="455.1" y="243.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="458.1" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.05%)</title><rect x="455.9" y="259.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.9" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="456.5" y="259.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="459.5" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.12%)</title><rect x="456.9" y="259.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="459.9" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (5 samples, 0.08%)</title><rect x="457.1" y="243.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="460.1" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.07%)</title><rect x="457.3" y="227.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.3" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (47 samples, 0.77%)</title><rect x="458.6" y="403.0" width="9.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="461.6" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (44 samples, 0.72%)</title><rect x="458.6" y="387.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (23 samples, 0.38%)</title><rect x="459.8" y="371.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="462.8" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="460.6" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="463.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.20%)</title><rect x="461.0" y="355.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="464.0" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="461.2" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="464.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.07%)</title><rect x="461.6" y="339.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.05%)</title><rect x="461.8" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="464.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.05%)</title><rect x="461.8" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="464.8" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.05%)</title><rect x="462.7" y="339.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.7" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.05%)</title><rect x="463.5" y="355.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="466.5" y="366.0"></text>
</g>
<g>
<title>netdev_pick_tx (3 samples, 0.05%)</title><rect x="464.3" y="371.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="467.3" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (10 samples, 0.16%)</title><rect x="465.1" y="371.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="468.1" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (4 samples, 0.07%)</title><rect x="466.0" y="355.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="469.0" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="467.4" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="470.4" y="398.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.03%)</title><rect x="468.2" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.10%)</title><rect x="468.7" y="435.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="471.7" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="468.7" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="471.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="469.1" y="419.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="472.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="469.5" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="472.5" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="469.5" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="472.5" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="470.1" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.1" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.07%)</title><rect x="470.5" y="467.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.5" y="478.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.10%)</title><rect x="471.3" y="499.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="474.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="472.1" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="475.1" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="473.0" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="476.0" y="526.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.07%)</title><rect x="473.4" y="515.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="476.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="473.8" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="476.8" y="510.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="474.2" y="515.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="477.2" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.23%)</title><rect x="475.2" y="515.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="478.2" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.03%)</title><rect x="475.5" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="478.5" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="476.1" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="479.1" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.12%)</title><rect x="476.5" y="499.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="479.5" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.10%)</title><rect x="476.7" y="483.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="479.7" y="494.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.10%)</title><rect x="476.7" y="467.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="479.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="476.9" y="451.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="479.9" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.07%)</title><rect x="478.1" y="515.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.1" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="478.9" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="481.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="479.2" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="482.2" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.21%)</title><rect x="480.0" y="563.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.0" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="480.4" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="483.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.15%)</title><rect x="480.8" y="547.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.8" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.07%)</title><rect x="481.8" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.8" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="482.7" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.7" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.13%)</title><rect x="483.3" y="611.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.3" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.08%)</title><rect x="483.9" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="486.9" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="483.9" y="579.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="486.9" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="484.5" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.5" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (20 samples, 0.33%)</title><rect x="485.1" y="627.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.1" y="638.0"></text>
</g>
<g>
<title>__fdget (19 samples, 0.31%)</title><rect x="485.3" y="611.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.30%)</title><rect x="485.5" y="595.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="488.5" y="606.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.23%)</title><rect x="486.2" y="579.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="489.2" y="590.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="489.0" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="492.0" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.05%)</title><rect x="489.5" y="659.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="492.5" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="489.7" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="492.7" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="489.7" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.38%)</title><rect x="490.7" y="787.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.26%)</title><rect x="491.9" y="771.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.26%)</title><rect x="491.9" y="755.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.9" y="766.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (2 samples, 0.03%)</title><rect x="495.2" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/1361385511.exec (2,519 samples, 41.48%)</title><rect x="495.6" y="803.0" width="489.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.6" y="814.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/136138..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$1 (2,519 samples, 41.48%)</title><rect x="495.6" y="787.0" width="489.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.6" y="798.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$1</text>
</g>
<g>
<title>one/nio/http/Request.getBody (2 samples, 0.03%)</title><rect x="495.6" y="771.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (2,516 samples, 41.43%)</title><rect x="496.1" y="771.0" width="488.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.1" y="782.0">ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleN..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.07%)</title><rect x="503.1" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="503.5" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.72%)</title><rect x="504.1" y="755.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (42 samples, 0.69%)</title><rect x="504.5" y="739.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.61%)</title><rect x="505.5" y="723.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (32 samples, 0.53%)</title><rect x="506.4" y="707.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (10 samples, 0.16%)</title><rect x="509.4" y="691.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.12%)</title><rect x="509.9" y="675.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.07%)</title><rect x="510.5" y="659.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.5" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.07%)</title><rect x="510.5" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.5" y="654.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.03%)</title><rect x="510.9" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.9" y="638.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="511.3" y="691.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="514.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.07%)</title><rect x="511.9" y="691.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.05%)</title><rect x="512.7" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="512.9" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="512.9" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="512.9" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.9" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="512.9" y="691.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="515.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (1,087 samples, 17.90%)</title><rect x="513.2" y="755.0" width="211.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.2" y="766.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (6 samples, 0.10%)</title><rect x="513.2" y="739.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.05%)</title><rect x="513.8" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="513.8" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="513.8" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.05%)</title><rect x="513.8" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,081 samples, 17.80%)</title><rect x="514.4" y="739.0" width="210.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.4" y="750.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,079 samples, 17.77%)</title><rect x="514.8" y="723.0" width="209.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.8" y="734.0">one/nio/http/HttpClient.inv..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (205 samples, 3.38%)</title><rect x="515.4" y="707.0" width="39.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.4" y="718.0">one..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="515.4" y="691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="518.4" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="515.4" y="675.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="518.4" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="515.4" y="659.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="518.4" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="515.4" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="518.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (202 samples, 3.33%)</title><rect x="516.0" y="691.0" width="39.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.0" y="702.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (34 samples, 0.56%)</title><rect x="517.9" y="675.0" width="6.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="520.9" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="519.3" y="659.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="522.3" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.10%)</title><rect x="520.0" y="659.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="523.0" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.23%)</title><rect x="521.2" y="659.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="524.2" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="522.0" y="643.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="525.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.07%)</title><rect x="522.6" y="643.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="525.6" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.05%)</title><rect x="523.3" y="643.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="526.3" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="523.5" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="526.5" y="638.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="524.1" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="527.1" y="670.0"></text>
</g>
<g>
<title>__GI___recv (153 samples, 2.52%)</title><rect x="524.5" y="675.0" width="29.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="527.5" y="686.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (143 samples, 2.35%)</title><rect x="526.5" y="659.0" width="27.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.5" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (143 samples, 2.35%)</title><rect x="526.5" y="643.0" width="27.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="529.5" y="654.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (130 samples, 2.14%)</title><rect x="528.8" y="627.0" width="25.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="531.8" y="638.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (128 samples, 2.11%)</title><rect x="528.8" y="611.0" width="24.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="531.8" y="622.0">_..</text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.03%)</title><rect x="530.0" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="533.0" y="606.0"></text>
</g>
<g>
<title>sock_recvmsg (112 samples, 1.84%)</title><rect x="530.3" y="595.0" width="21.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="533.3" y="606.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="531.1" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="534.1" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (101 samples, 1.66%)</title><rect x="531.5" y="579.0" width="19.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="534.5" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.05%)</title><rect x="531.9" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="534.9" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="532.5" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="535.5" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (94 samples, 1.55%)</title><rect x="532.9" y="563.0" width="18.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="535.9" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.05%)</title><rect x="536.6" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.6" y="558.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="536.8" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="539.8" y="542.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="538.1" y="547.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="541.1" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (38 samples, 0.63%)</title><rect x="538.9" y="547.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="541.9" y="558.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.07%)</title><rect x="540.6" y="531.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="543.6" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="540.8" y="515.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="543.8" y="526.0"></text>
</g>
<g>
<title>lock_sock_nested (11 samples, 0.18%)</title><rect x="541.4" y="531.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.4" y="542.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="541.6" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="544.6" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.13%)</title><rect x="542.0" y="515.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="545.0" y="526.0"></text>
</g>
<g>
<title>remove_wait_queue (2 samples, 0.03%)</title><rect x="543.6" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="546.6" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="543.6" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="546.6" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.03%)</title><rect x="543.9" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="546.9" y="542.0"></text>
</g>
<g>
<title>wait_woken (10 samples, 0.16%)</title><rect x="544.3" y="531.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="547.3" y="542.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="544.3" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="547.3" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (8 samples, 0.13%)</title><rect x="544.7" y="515.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="547.7" y="526.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="545.7" y="499.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="548.7" y="510.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.05%)</title><rect x="545.7" y="483.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.7" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="545.9" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="548.9" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="545.9" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.9" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="545.9" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="548.9" y="446.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="545.9" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.9" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="545.9" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.9" y="414.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (18 samples, 0.30%)</title><rect x="546.3" y="547.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="549.3" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (18 samples, 0.30%)</title><rect x="546.3" y="531.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="549.3" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (15 samples, 0.25%)</title><rect x="546.9" y="515.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="549.9" y="526.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.08%)</title><rect x="546.9" y="499.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="549.9" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="547.1" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="550.1" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="547.4" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.4" y="494.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.13%)</title><rect x="548.0" y="499.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="551.0" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.10%)</title><rect x="548.2" y="483.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="551.2" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="549.8" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.8" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="550.2" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="553.2" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="550.5" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.5" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.05%)</title><rect x="551.1" y="579.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="554.1" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.05%)</title><rect x="551.1" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="554.1" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="551.1" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="554.1" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="551.1" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="554.1" y="542.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="551.7" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="554.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.13%)</title><rect x="552.1" y="595.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="555.1" y="606.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.10%)</title><rect x="552.3" y="579.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.3" y="590.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.08%)</title><rect x="552.5" y="563.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="555.5" y="574.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.07%)</title><rect x="552.7" y="547.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="555.7" y="558.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="553.7" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="556.7" y="622.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="554.2" y="675.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="557.2" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="554.8" y="675.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="557.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (61 samples, 1.00%)</title><rect x="555.2" y="707.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.15%)</title><rect x="556.2" y="691.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.13%)</title><rect x="556.4" y="675.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.coder (5 samples, 0.08%)</title><rect x="556.8" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.8" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="557.9" y="691.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="560.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (22 samples, 0.36%)</title><rect x="558.5" y="691.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.30%)</title><rect x="559.3" y="675.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.30%)</title><rect x="559.3" y="659.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.03%)</title><rect x="562.8" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.16%)</title><rect x="563.2" y="691.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.12%)</title><rect x="563.8" y="675.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.12%)</title><rect x="563.8" y="659.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.8" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="564.7" y="643.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="567.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (10 samples, 0.16%)</title><rect x="565.1" y="691.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.16%)</title><rect x="565.1" y="675.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.05%)</title><rect x="565.9" y="659.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.05%)</title><rect x="566.5" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (38 samples, 0.63%)</title><rect x="567.1" y="707.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="567.6" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (26 samples, 0.43%)</title><rect x="568.4" y="691.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.08%)</title><rect x="570.0" y="675.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.05%)</title><rect x="571.0" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.16%)</title><rect x="571.5" y="675.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.16%)</title><rect x="571.5" y="659.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.15%)</title><rect x="571.7" y="643.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.08%)</title><rect x="572.5" y="627.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.05%)</title><rect x="572.9" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.07%)</title><rect x="573.5" y="691.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="573.5" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="573.9" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.05%)</title><rect x="574.4" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="574.6" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="574.6" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.6" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (141 samples, 2.32%)</title><rect x="575.0" y="707.0" width="27.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.0" y="718.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (7 samples, 0.12%)</title><rect x="576.2" y="691.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="579.2" y="702.0"></text>
</g>
<g>
<title>__GI___setsockopt (128 samples, 2.11%)</title><rect x="577.6" y="691.0" width="24.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="580.6" y="702.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (114 samples, 1.88%)</title><rect x="580.3" y="675.0" width="22.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="583.3" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (114 samples, 1.88%)</title><rect x="580.3" y="659.0" width="22.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="583.3" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_setsockopt (74 samples, 1.22%)</title><rect x="588.1" y="643.0" width="14.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="591.1" y="654.0"></text>
</g>
<g>
<title>__sys_setsockopt (71 samples, 1.17%)</title><rect x="588.1" y="627.0" width="13.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="591.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (5 samples, 0.08%)</title><rect x="588.8" y="611.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="591.8" y="622.0"></text>
</g>
<g>
<title>security_socket_setsockopt (15 samples, 0.25%)</title><rect x="590.2" y="611.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="593.2" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (10 samples, 0.16%)</title><rect x="591.2" y="595.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="594.2" y="606.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (10 samples, 0.16%)</title><rect x="591.2" y="579.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="594.2" y="590.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="591.4" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="594.4" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.12%)</title><rect x="591.7" y="563.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="594.7" y="574.0"></text>
</g>
<g>
<title>sock_setsockopt (27 samples, 0.44%)</title><rect x="593.3" y="611.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="596.3" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="595.4" y="595.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="598.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="595.8" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="598.8" y="590.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.07%)</title><rect x="596.2" y="595.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="599.2" y="606.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.10%)</title><rect x="597.0" y="595.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.0" y="606.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.05%)</title><rect x="597.4" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.4" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="598.2" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="601.2" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.28%)</title><rect x="598.5" y="611.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.5" y="622.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.25%)</title><rect x="598.5" y="595.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="601.5" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="598.5" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="601.5" y="590.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.21%)</title><rect x="598.9" y="579.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.9" y="590.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.16%)</title><rect x="599.5" y="563.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.5" y="574.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="601.5" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="604.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (626 samples, 10.31%)</title><rect x="602.4" y="707.0" width="121.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.4" y="718.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (34 samples, 0.56%)</title><rect x="605.1" y="691.0" width="6.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="608.1" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.07%)</title><rect x="609.4" y="675.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="612.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.12%)</title><rect x="610.2" y="675.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="613.2" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.05%)</title><rect x="611.0" y="659.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="614.0" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.08%)</title><rect x="611.8" y="691.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="614.8" y="702.0"></text>
</g>
<g>
<title>__libc_send (570 samples, 9.39%)</title><rect x="612.7" y="691.0" width="110.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="615.7" y="702.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (564 samples, 9.29%)</title><rect x="613.9" y="675.0" width="109.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="616.9" y="686.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.07%)</title><rect x="613.9" y="659.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="616.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (560 samples, 9.22%)</title><rect x="614.7" y="659.0" width="108.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="617.7" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (540 samples, 8.89%)</title><rect x="618.4" y="643.0" width="104.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="621.4" y="654.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (537 samples, 8.84%)</title><rect x="618.4" y="627.0" width="104.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="621.4" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (528 samples, 8.69%)</title><rect x="619.1" y="611.0" width="102.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="622.1" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (518 samples, 8.53%)</title><rect x="619.5" y="595.0" width="100.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="622.5" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (517 samples, 8.51%)</title><rect x="619.7" y="579.0" width="100.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="622.7" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="620.1" y="563.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="623.1" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="620.1" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.1" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="620.7" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.7" y="574.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.03%)</title><rect x="621.1" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.1" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.05%)</title><rect x="621.7" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="624.7" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (502 samples, 8.27%)</title><rect x="622.4" y="563.0" width="97.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="625.4" y="574.0">tcp_sendmsg..</text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="623.8" y="547.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="626.8" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.08%)</title><rect x="624.4" y="547.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.4" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="624.4" y="531.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="627.4" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (17 samples, 0.28%)</title><rect x="625.6" y="547.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="628.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.25%)</title><rect x="625.7" y="531.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (8 samples, 0.13%)</title><rect x="626.3" y="515.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="629.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.12%)</title><rect x="626.3" y="499.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="629.3" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.07%)</title><rect x="626.9" y="483.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="629.9" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="627.9" y="515.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="630.9" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="628.3" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="631.3" y="510.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.07%)</title><rect x="628.9" y="547.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="631.9" y="558.0"></text>
</g>
<g>
<title>tcp_push (459 samples, 7.56%)</title><rect x="629.6" y="547.0" width="89.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="632.6" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (458 samples, 7.54%)</title><rect x="629.8" y="531.0" width="89.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="632.8" y="542.0">__tcp_push..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="630.0" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="633.0" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (455 samples, 7.49%)</title><rect x="630.4" y="515.0" width="88.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="633.4" y="526.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (434 samples, 7.15%)</title><rect x="631.8" y="499.0" width="84.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="634.8" y="510.0">__tcp_tran..</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.03%)</title><rect x="632.7" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="635.7" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (422 samples, 6.95%)</title><rect x="633.3" y="483.0" width="82.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="636.3" y="494.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (418 samples, 6.88%)</title><rect x="633.5" y="467.0" width="81.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="636.5" y="478.0">__ip_queu..</text>
</g>
<g>
<title>ip_local_out (413 samples, 6.80%)</title><rect x="634.1" y="451.0" width="80.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.1" y="462.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (70 samples, 1.15%)</title><rect x="634.3" y="435.0" width="13.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="637.3" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.03%)</title><rect x="634.9" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="637.9" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.05%)</title><rect x="635.3" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="638.3" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.03%)</title><rect x="635.8" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="638.8" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (58 samples, 0.96%)</title><rect x="636.2" y="419.0" width="11.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="639.2" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.16%)</title><rect x="636.6" y="403.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="639.6" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.15%)</title><rect x="636.8" y="387.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="639.8" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (42 samples, 0.69%)</title><rect x="638.6" y="403.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="641.6" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (37 samples, 0.61%)</title><rect x="639.0" y="387.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="642.0" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.07%)</title><rect x="640.1" y="371.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.1" y="382.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.03%)</title><rect x="640.9" y="371.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.9" y="382.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (4 samples, 0.07%)</title><rect x="641.5" y="371.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="644.5" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (3 samples, 0.05%)</title><rect x="642.5" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="645.5" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (16 samples, 0.26%)</title><rect x="643.0" y="371.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="646.0" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (8 samples, 0.13%)</title><rect x="644.6" y="355.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.6" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (6 samples, 0.10%)</title><rect x="645.0" y="339.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="648.0" y="350.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.05%)</title><rect x="646.1" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.1" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="646.7" y="403.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="649.7" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="646.7" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="649.7" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="647.1" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="650.1" y="398.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="647.1" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="650.1" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="647.5" y="419.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="650.5" y="430.0"></text>
</g>
<g>
<title>ip_output (339 samples, 5.58%)</title><rect x="647.9" y="435.0" width="65.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="650.9" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (332 samples, 5.47%)</title><rect x="648.1" y="419.0" width="64.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="651.1" y="430.0">ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (327 samples, 5.38%)</title><rect x="649.1" y="403.0" width="63.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="652.1" y="414.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (290 samples, 4.78%)</title><rect x="650.6" y="387.0" width="56.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="653.6" y="398.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.21 (290 samples, 4.78%)</title><rect x="650.6" y="371.0" width="56.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="653.6" y="382.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (287 samples, 4.73%)</title><rect x="651.2" y="355.0" width="55.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="654.2" y="366.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (287 samples, 4.73%)</title><rect x="651.2" y="339.0" width="55.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.2" y="350.0">__sof..</text>
</g>
<g>
<title>net_rx_action (283 samples, 4.66%)</title><rect x="652.0" y="323.0" width="55.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="655.0" y="334.0">net_r..</text>
</g>
<g>
<title>process_backlog (275 samples, 4.53%)</title><rect x="653.5" y="307.0" width="53.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.5" y="318.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (269 samples, 4.43%)</title><rect x="654.3" y="291.0" width="52.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="657.3" y="302.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (267 samples, 4.40%)</title><rect x="654.7" y="275.0" width="51.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="657.7" y="286.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.12%)</title><rect x="654.9" y="259.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="657.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv (258 samples, 4.25%)</title><rect x="656.3" y="259.0" width="50.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="659.3" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (6 samples, 0.10%)</title><rect x="656.8" y="243.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="659.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (245 samples, 4.03%)</title><rect x="658.0" y="243.0" width="47.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.0" y="254.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (243 samples, 4.00%)</title><rect x="658.0" y="227.0" width="47.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="661.0" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (237 samples, 3.90%)</title><rect x="658.2" y="211.0" width="46.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.2" y="222.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (236 samples, 3.89%)</title><rect x="658.2" y="195.0" width="45.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="661.2" y="206.0">ip_p..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="658.4" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="661.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.05%)</title><rect x="659.4" y="179.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="662.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (227 samples, 3.74%)</title><rect x="659.9" y="179.0" width="44.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="662.9" y="190.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.08%)</title><rect x="662.1" y="163.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="665.1" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="663.2" y="163.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="666.2" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="663.4" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="666.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (202 samples, 3.33%)</title><rect x="664.2" y="163.0" width="39.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="667.2" y="174.0">tcp..</text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.03%)</title><rect x="664.8" y="147.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="667.8" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="665.2" y="147.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="668.2" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (195 samples, 3.21%)</title><rect x="665.6" y="147.0" width="37.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="668.6" y="158.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.10%)</title><rect x="666.5" y="131.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="669.5" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="667.3" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="670.3" y="126.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="667.7" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="670.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack (35 samples, 0.58%)</title><rect x="668.5" y="131.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="671.5" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="670.2" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="673.2" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (3 samples, 0.05%)</title><rect x="670.6" y="115.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="673.6" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (18 samples, 0.30%)</title><rect x="671.2" y="115.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="674.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.13%)</title><rect x="672.0" y="99.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="675.0" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="672.0" y="83.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="675.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.10%)</title><rect x="672.4" y="83.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="675.4" y="94.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.10%)</title><rect x="672.4" y="67.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="675.4" y="78.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.07%)</title><rect x="672.8" y="51.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="675.8" y="62.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.07%)</title><rect x="672.8" y="35.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="675.8" y="46.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="673.5" y="99.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="676.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (4 samples, 0.07%)</title><rect x="673.9" y="99.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.9" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="674.9" y="115.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.9" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (135 samples, 2.22%)</title><rect x="675.7" y="131.0" width="26.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="678.7" y="142.0">t..</text>
</g>
<g>
<title>sock_def_readable (117 samples, 1.93%)</title><rect x="677.0" y="115.0" width="22.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="680.0" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (115 samples, 1.89%)</title><rect x="677.4" y="99.0" width="22.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="680.4" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (114 samples, 1.88%)</title><rect x="677.6" y="83.0" width="22.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.6" y="94.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (114 samples, 1.88%)</title><rect x="677.6" y="67.0" width="22.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="680.6" y="78.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.10%)</title><rect x="699.8" y="115.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.8" y="126.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.39 (2 samples, 0.03%)</title><rect x="700.6" y="99.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="703.6" y="110.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.39 (2 samples, 0.03%)</title><rect x="700.9" y="115.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.9" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="701.3" y="115.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="704.3" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="701.9" y="131.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="704.9" y="142.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="701.9" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.9" y="126.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="701.9" y="99.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="704.9" y="110.0"></text>
</g>
<g>
<title>tcp_urg (3 samples, 0.05%)</title><rect x="702.9" y="131.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="705.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.03%)</title><rect x="703.7" y="163.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="706.7" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.03%)</title><rect x="703.7" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="706.7" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.07%)</title><rect x="704.4" y="211.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.03%)</title><rect x="705.2" y="227.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="708.2" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="706.0" y="243.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.0" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="706.0" y="227.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="709.0" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="706.0" y="211.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="709.0" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.03%)</title><rect x="706.6" y="291.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="709.6" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (29 samples, 0.48%)</title><rect x="707.0" y="387.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="710.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (27 samples, 0.44%)</title><rect x="707.2" y="371.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="710.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.18%)</title><rect x="708.3" y="355.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="711.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="708.5" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="711.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.10%)</title><rect x="708.9" y="339.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.9" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="709.1" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="712.1" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.05%)</title><rect x="709.5" y="323.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="712.5" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.05%)</title><rect x="709.5" y="307.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="712.5" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.05%)</title><rect x="709.5" y="291.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="712.5" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="710.1" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.1" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.13%)</title><rect x="710.5" y="355.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="713.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="712.0" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="715.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.07%)</title><rect x="712.8" y="419.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="715.8" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="712.8" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="715.8" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="712.8" y="387.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="715.8" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="713.8" y="435.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.8" y="446.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.05%)</title><rect x="714.7" y="467.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="717.7" y="478.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.05%)</title><rect x="715.3" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="718.3" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="715.5" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="718.5" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="715.5" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="718.5" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.07%)</title><rect x="716.7" y="499.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="719.7" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="717.7" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="720.7" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="718.0" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.0" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.07%)</title><rect x="718.8" y="547.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="721.8" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.07%)</title><rect x="718.8" y="531.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.8" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.13%)</title><rect x="720.2" y="595.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="723.2" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.07%)</title><rect x="721.0" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.0" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="721.1" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="724.1" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="721.3" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="724.3" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.08%)</title><rect x="721.7" y="611.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="724.7" y="622.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.08%)</title><rect x="721.7" y="595.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.08%)</title><rect x="721.7" y="579.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="724.7" y="590.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.08%)</title><rect x="721.7" y="563.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="724.7" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="723.5" y="691.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="726.5" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.03%)</title><rect x="724.1" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.1" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (2 samples, 0.03%)</title><rect x="724.1" y="691.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.1" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (2 samples, 0.03%)</title><rect x="724.1" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.28%)</title><rect x="724.5" y="755.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.5" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="726.8" y="739.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="729.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (5 samples, 0.08%)</title><rect x="728.1" y="755.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (3 samples, 0.05%)</title><rect x="728.5" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.05%)</title><rect x="728.5" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (1,317 samples, 21.69%)</title><rect x="729.1" y="755.0" width="255.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.1" y="766.0">ru/mail/polis/service/codearound/T..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,309 samples, 21.55%)</title><rect x="729.1" y="739.0" width="254.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.1" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="731.1" y="723.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="734.1" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="731.8" y="723.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="734.8" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,289 samples, 21.23%)</title><rect x="732.6" y="723.0" width="250.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.6" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (873 samples, 14.38%)</title><rect x="734.6" y="707.0" width="169.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="737.6" y="718.0">Java_org_rocksdb_Rocks..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.05%)</title><rect x="734.9" y="691.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="737.9" y="702.0"></text>
</g>
<g>
<title>__malloc (14 samples, 0.23%)</title><rect x="735.5" y="691.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="738.5" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.05%)</title><rect x="738.2" y="691.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="741.2" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.05%)</title><rect x="738.8" y="691.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="741.8" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.05%)</title><rect x="739.6" y="691.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="742.6" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.03%)</title><rect x="740.4" y="691.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="743.4" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="740.8" y="691.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="743.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="741.2" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="744.2" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (835 samples, 13.75%)</title><rect x="741.9" y="691.0" width="162.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="744.9" y="702.0">rocksdb_put_helper(JN..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="742.9" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="745.9" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="743.3" y="675.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="746.3" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.12%)</title><rect x="743.9" y="675.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="746.9" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 0.12%)</title><rect x="745.2" y="675.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="748.2" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="745.8" y="659.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="748.8" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.16%)</title><rect x="746.6" y="675.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="749.6" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="746.8" y="659.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="749.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="747.4" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="750.4" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.07%)</title><rect x="747.8" y="659.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="750.8" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="748.2" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="751.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (794 samples, 13.07%)</title><rect x="748.7" y="675.0" width="154.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="751.7" y="686.0">rocksdb::DB::Put(roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="749.3" y="659.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="752.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (787 samples, 12.96%)</title><rect x="750.1" y="659.0" width="152.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="753.1" y="670.0">rocksdb::DBImpl::Pu..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (776 samples, 12.78%)</title><rect x="750.1" y="643.0" width="150.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="753.1" y="654.0">rocksdb::DB::Put(ro..</text>
</g>
<g>
<title>__libc_free (5 samples, 0.08%)</title><rect x="751.3" y="627.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="754.3" y="638.0"></text>
</g>
<g>
<title>operator delete(void*) (6 samples, 0.10%)</title><rect x="752.4" y="627.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="755.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (7 samples, 0.12%)</title><rect x="753.6" y="627.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="756.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (692 samples, 11.39%)</title><rect x="755.0" y="627.0" width="134.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="758.0" y="638.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (7 samples, 0.12%)</title><rect x="756.3" y="611.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="759.3" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (6 samples, 0.10%)</title><rect x="757.7" y="611.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="760.7" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.10%)</title><rect x="758.8" y="611.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="761.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.07%)</title><rect x="760.2" y="611.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="763.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.03%)</title><rect x="761.0" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="764.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (625 samples, 10.29%)</title><rect x="761.4" y="611.0" width="121.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="764.4" y="622.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>__tls_get_addr (14 samples, 0.23%)</title><rect x="771.7" y="595.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="774.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.05%)</title><rect x="774.4" y="595.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="777.4" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="775.0" y="595.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="778.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.03%)</title><rect x="775.7" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="778.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (11 samples, 0.18%)</title><rect x="776.3" y="595.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="779.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="778.1" y="579.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="781.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (5 samples, 0.08%)</title><rect x="778.5" y="595.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="781.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (4 samples, 0.07%)</title><rect x="778.7" y="579.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="781.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (6 samples, 0.10%)</title><rect x="779.4" y="595.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="782.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) [clone .plt] (4 samples, 0.07%)</title><rect x="780.6" y="595.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="783.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (185 samples, 3.05%)</title><rect x="781.4" y="595.0" width="35.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="784.4" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (6 samples, 0.10%)</title><rect x="782.9" y="579.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="785.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (158 samples, 2.60%)</title><rect x="784.1" y="579.0" width="30.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="787.1" y="590.0">ro..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (152 samples, 2.50%)</title><rect x="784.7" y="563.0" width="29.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="787.7" y="574.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (56 samples, 0.92%)</title><rect x="786.8" y="547.0" width="10.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="789.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (6 samples, 0.10%)</title><rect x="797.7" y="547.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="800.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (44 samples, 0.72%)</title><rect x="799.1" y="547.0" width="8.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="802.1" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="800.0" y="531.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="803.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="800.6" y="531.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="803.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (5 samples, 0.08%)</title><rect x="801.0" y="531.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="804.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (4 samples, 0.07%)</title><rect x="802.0" y="531.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="805.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (2 samples, 0.03%)</title><rect x="802.8" y="531.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="805.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (23 samples, 0.38%)</title><rect x="803.1" y="531.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="806.1" y="542.0"></text>
</g>
<g>
<title>__GI_write (3 samples, 0.05%)</title><rect x="804.3" y="515.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="807.3" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.08%)</title><rect x="804.9" y="515.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="807.9" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.05%)</title><rect x="805.9" y="515.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="808.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="806.4" y="515.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="809.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.03%)</title><rect x="806.8" y="515.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="809.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (32 samples, 0.53%)</title><rect x="808.0" y="547.0" width="6.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="811.0" y="558.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (9 samples, 0.15%)</title><rect x="808.0" y="531.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="811.0" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="809.7" y="531.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="812.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (4 samples, 0.07%)</title><rect x="810.3" y="531.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="813.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.03%)</title><rect x="811.1" y="531.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="814.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (10 samples, 0.16%)</title><rect x="811.5" y="531.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="814.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="813.4" y="531.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="816.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.05%)</title><rect x="814.2" y="563.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="817.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="814.8" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="817.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.03%)</title><rect x="815.4" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="818.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="815.8" y="579.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="818.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.03%)</title><rect x="816.6" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="819.6" y="590.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.03%)</title><rect x="816.9" y="579.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="819.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (7 samples, 0.12%)</title><rect x="817.3" y="595.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="820.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() [clone .plt] (3 samples, 0.05%)</title><rect x="818.7" y="595.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="821.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (13 samples, 0.21%)</title><rect x="819.3" y="595.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="822.3" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (11 samples, 0.18%)</title><rect x="819.5" y="579.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="822.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (2 samples, 0.03%)</title><rect x="821.8" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="824.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.03%)</title><rect x="822.2" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="825.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.03%)</title><rect x="822.8" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="825.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (2 samples, 0.03%)</title><rect x="823.2" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="826.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.05%)</title><rect x="823.5" y="595.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="826.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (234 samples, 3.85%)</title><rect x="824.1" y="595.0" width="45.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="827.1" y="606.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (226 samples, 3.72%)</title><rect x="824.7" y="579.0" width="43.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="827.7" y="590.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="824.7" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="827.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="825.1" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="828.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.05%)</title><rect x="825.7" y="563.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="828.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (217 samples, 3.57%)</title><rect x="826.5" y="563.0" width="42.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="829.5" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::GetVarint32PtrFallback(char const*, char const*, unsigned int*) (2 samples, 0.03%)</title><rect x="826.8" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="829.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (203 samples, 3.34%)</title><rect x="827.4" y="547.0" width="39.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="830.4" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (3 samples, 0.05%)</title><rect x="827.4" y="531.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="830.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (2 samples, 0.03%)</title><rect x="828.0" y="531.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="831.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (2 samples, 0.03%)</title><rect x="828.4" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="831.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.05%)</title><rect x="828.8" y="531.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="831.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (193 samples, 3.18%)</title><rect x="829.4" y="531.0" width="37.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="832.4" y="542.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (8 samples, 0.13%)</title><rect x="830.5" y="515.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="833.5" y="526.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (9 samples, 0.15%)</title><rect x="832.1" y="515.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="835.1" y="526.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.05%)</title><rect x="833.3" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="836.3" y="510.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.05%)</title><rect x="833.3" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="836.3" y="494.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.05%)</title><rect x="833.3" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.3" y="478.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.03%)</title><rect x="833.8" y="515.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="836.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (4 samples, 0.07%)</title><rect x="834.8" y="515.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="837.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (155 samples, 2.55%)</title><rect x="835.6" y="515.0" width="30.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="838.6" y="526.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (12 samples, 0.20%)</title><rect x="836.6" y="499.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="839.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (6 samples, 0.10%)</title><rect x="837.7" y="483.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="840.7" y="494.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (119 samples, 1.96%)</title><rect x="838.9" y="499.0" width="23.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="841.9" y="510.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (111 samples, 1.83%)</title><rect x="840.1" y="483.0" width="21.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="843.1" y="494.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (26 samples, 0.43%)</title><rect x="852.9" y="467.0" width="5.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="855.9" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.05%)</title><rect x="853.5" y="451.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="856.5" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.07%)</title><rect x="854.2" y="451.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="857.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (15 samples, 0.25%)</title><rect x="855.0" y="451.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="858.0" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.05%)</title><rect x="856.2" y="435.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="859.2" y="446.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (5 samples, 0.08%)</title><rect x="857.0" y="435.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="860.0" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.07%)</title><rect x="857.9" y="467.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="860.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 0.23%)</title><rect x="858.9" y="467.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="861.9" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.03%)</title><rect x="859.7" y="451.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="862.7" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (6 samples, 0.10%)</title><rect x="860.1" y="451.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="863.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="862.2" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="865.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.03%)</title><rect x="862.8" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="865.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (9 samples, 0.15%)</title><rect x="863.4" y="499.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="866.4" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.05%)</title><rect x="863.4" y="483.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="866.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (6 samples, 0.10%)</title><rect x="864.0" y="483.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="867.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (3 samples, 0.05%)</title><rect x="865.1" y="499.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="868.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.03%)</title><rect x="865.9" y="515.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="868.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="866.5" y="515.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="866.9" y="547.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (5 samples, 0.08%)</title><rect x="867.3" y="547.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="870.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (3 samples, 0.05%)</title><rect x="868.6" y="579.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="871.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.07%)</title><rect x="869.6" y="595.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="872.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.05%)</title><rect x="869.6" y="579.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="872.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="869.6" y="563.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="872.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="869.6" y="547.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="872.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.05%)</title><rect x="869.6" y="531.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="872.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.03%)</title><rect x="869.6" y="515.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="872.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (3 samples, 0.05%)</title><rect x="870.4" y="595.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="873.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (3 samples, 0.05%)</title><rect x="871.1" y="595.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="874.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (15 samples, 0.25%)</title><rect x="871.7" y="595.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="874.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.07%)</title><rect x="874.6" y="595.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="877.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.05%)</title><rect x="874.6" y="579.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="877.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (4 samples, 0.07%)</title><rect x="875.4" y="595.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="878.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="876.2" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="879.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (6 samples, 0.10%)</title><rect x="876.6" y="595.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="879.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (5 samples, 0.08%)</title><rect x="877.8" y="595.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="880.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (5 samples, 0.08%)</title><rect x="877.8" y="579.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="880.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.05%)</title><rect x="878.7" y="595.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="881.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (5 samples, 0.08%)</title><rect x="879.5" y="595.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="882.5" y="606.0"></text>
</g>
<g>
<title>sched_yield (11 samples, 0.18%)</title><rect x="880.7" y="595.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="883.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.18%)</title><rect x="880.7" y="579.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="883.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.16%)</title><rect x="880.9" y="563.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="883.9" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (6 samples, 0.10%)</title><rect x="881.6" y="547.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="884.6" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (6 samples, 0.10%)</title><rect x="881.6" y="531.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="884.6" y="542.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.10%)</title><rect x="881.6" y="515.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.6" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.10%)</title><rect x="881.6" y="499.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="884.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.03%)</title><rect x="882.8" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="885.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.05%)</title><rect x="883.4" y="611.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="886.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.05%)</title><rect x="884.0" y="611.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="887.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="884.6" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="887.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (6 samples, 0.10%)</title><rect x="885.1" y="611.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="888.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.05%)</title><rect x="886.5" y="611.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="889.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="887.5" y="611.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="890.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.07%)</title><rect x="888.1" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="891.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (3 samples, 0.05%)</title><rect x="888.8" y="611.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="891.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (3 samples, 0.05%)</title><rect x="889.4" y="627.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="892.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (5 samples, 0.08%)</title><rect x="890.2" y="627.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="893.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (31 samples, 0.51%)</title><rect x="891.4" y="627.0" width="6.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="894.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (5 samples, 0.08%)</title><rect x="891.6" y="611.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="894.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const [clone .plt] (2 samples, 0.03%)</title><rect x="892.7" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="895.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.18%)</title><rect x="893.3" y="611.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="896.3" y="622.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.05%)</title><rect x="894.7" y="595.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="897.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (3 samples, 0.05%)</title><rect x="895.4" y="611.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="898.4" y="622.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (6 samples, 0.10%)</title><rect x="896.0" y="611.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="899.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="897.4" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="900.4" y="638.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (4 samples, 0.07%)</title><rect x="898.2" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="901.2" y="638.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (3 samples, 0.05%)</title><rect x="899.1" y="627.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="902.1" y="638.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (5 samples, 0.08%)</title><rect x="899.9" y="627.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="902.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (5 samples, 0.08%)</title><rect x="900.9" y="643.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="903.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="902.0" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="905.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="902.4" y="643.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="905.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (4 samples, 0.07%)</title><rect x="903.0" y="675.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="906.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="903.8" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="906.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (366 samples, 6.03%)</title><rect x="904.2" y="707.0" width="71.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="907.2" y="718.0">[unknown]</text>
</g>
<g>
<title>__GI_write (352 samples, 5.80%)</title><rect x="904.2" y="691.0" width="68.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="907.2" y="702.0">__GI_wr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (338 samples, 5.57%)</title><rect x="906.9" y="675.0" width="65.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="909.9" y="686.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.05%)</title><rect x="906.9" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="909.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (335 samples, 5.52%)</title><rect x="907.5" y="659.0" width="65.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="910.5" y="670.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_write (298 samples, 4.91%)</title><rect x="914.5" y="643.0" width="57.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="917.5" y="654.0">__x64_..</text>
</g>
<g>
<title>ksys_write (296 samples, 4.87%)</title><rect x="914.7" y="627.0" width="57.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.7" y="638.0">ksys_w..</text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.13%)</title><rect x="915.3" y="611.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="918.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.12%)</title><rect x="915.3" y="595.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="918.3" y="606.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.10%)</title><rect x="915.5" y="579.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="918.5" y="590.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="917.4" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="920.4" y="622.0"></text>
</g>
<g>
<title>vfs_write (280 samples, 4.61%)</title><rect x="917.8" y="611.0" width="54.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="920.8" y="622.0">vfs_w..</text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.05%)</title><rect x="919.1" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="922.1" y="606.0"></text>
</g>
<g>
<title>__vfs_write (252 samples, 4.15%)</title><rect x="919.7" y="595.0" width="49.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.7" y="606.0">__vf..</text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.03%)</title><rect x="919.9" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="922.9" y="590.0"></text>
</g>
<g>
<title>new_sync_write (249 samples, 4.10%)</title><rect x="920.3" y="579.0" width="48.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="923.3" y="590.0">new_..</text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.03%)</title><rect x="920.3" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="923.3" y="574.0"></text>
</g>
<g>
<title>ext4_file_write_iter (246 samples, 4.05%)</title><rect x="920.7" y="563.0" width="47.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="923.7" y="574.0">ext4..</text>
</g>
<g>
<title>__generic_file_write_iter (232 samples, 3.82%)</title><rect x="922.4" y="547.0" width="45.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="925.4" y="558.0">__ge..</text>
</g>
<g>
<title>current_time (3 samples, 0.05%)</title><rect x="923.2" y="531.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="926.2" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.03%)</title><rect x="923.8" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="926.8" y="542.0"></text>
</g>
<g>
<title>file_update_time (20 samples, 0.33%)</title><rect x="924.4" y="531.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.4" y="542.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="924.8" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="927.8" y="526.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="924.8" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="927.8" y="510.0"></text>
</g>
<g>
<title>generic_update_time (15 samples, 0.25%)</title><rect x="925.2" y="515.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="928.2" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (15 samples, 0.25%)</title><rect x="925.2" y="499.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="928.2" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (15 samples, 0.25%)</title><rect x="925.2" y="483.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="928.2" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="925.4" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.4" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="925.4" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="928.4" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (12 samples, 0.20%)</title><rect x="925.7" y="467.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="928.7" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (6 samples, 0.10%)</title><rect x="926.1" y="451.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.1" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (6 samples, 0.10%)</title><rect x="926.1" y="435.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="929.1" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.03%)</title><rect x="926.5" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="929.5" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (4 samples, 0.07%)</title><rect x="927.3" y="451.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="930.3" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.07%)</title><rect x="927.3" y="435.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="930.3" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (4 samples, 0.07%)</title><rect x="927.3" y="419.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="930.3" y="430.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.07%)</title><rect x="927.3" y="403.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="930.3" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (202 samples, 3.33%)</title><rect x="928.3" y="531.0" width="39.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="931.3" y="542.0">gen..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.03%)</title><rect x="928.7" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="931.7" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (78 samples, 1.28%)</title><rect x="929.4" y="515.0" width="15.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="932.4" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (27 samples, 0.44%)</title><rect x="930.4" y="499.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="933.4" y="510.0"></text>
</g>
<g>
<title>ext4_journal_check_start (4 samples, 0.07%)</title><rect x="930.4" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.4" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (23 samples, 0.38%)</title><rect x="931.2" y="483.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="934.2" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.03%)</title><rect x="932.0" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="935.0" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.07%)</title><rect x="932.4" y="467.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="935.4" y="478.0"></text>
</g>
<g>
<title>start_this_handle (12 samples, 0.20%)</title><rect x="933.3" y="467.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.3" y="478.0"></text>
</g>
<g>
<title>add_transaction_credits (5 samples, 0.08%)</title><rect x="934.7" y="451.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.7" y="462.0"></text>
</g>
<g>
<title>ext4_block_write_begin (11 samples, 0.18%)</title><rect x="935.7" y="499.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="938.7" y="510.0"></text>
</g>
<g>
<title>create_empty_buffers (5 samples, 0.08%)</title><rect x="936.2" y="483.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="939.2" y="494.0"></text>
</g>
<g>
<title>alloc_page_buffers (5 samples, 0.08%)</title><rect x="936.2" y="467.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="939.2" y="478.0"></text>
</g>
<g>
<title>alloc_buffer_head (5 samples, 0.08%)</title><rect x="936.2" y="451.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="939.2" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.08%)</title><rect x="936.2" y="435.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.2" y="446.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="936.4" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="939.4" y="430.0"></text>
</g>
<g>
<title>___slab_alloc (3 samples, 0.05%)</title><rect x="936.4" y="403.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="939.4" y="414.0"></text>
</g>
<g>
<title>setup_object_debug.isra.61 (2 samples, 0.03%)</title><rect x="936.6" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="939.6" y="398.0"></text>
</g>
<g>
<title>ext4_da_get_block_prep (3 samples, 0.05%)</title><rect x="937.2" y="483.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="940.2" y="494.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent (2 samples, 0.03%)</title><rect x="937.4" y="467.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="940.4" y="478.0"></text>
</g>
<g>
<title>ext4_nonda_switch (4 samples, 0.07%)</title><rect x="937.8" y="499.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="940.8" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (29 samples, 0.48%)</title><rect x="938.6" y="499.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="941.6" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (29 samples, 0.48%)</title><rect x="938.6" y="483.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.6" y="494.0"></text>
</g>
<g>
<title>__page_cache_alloc (7 samples, 0.12%)</title><rect x="939.3" y="467.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="942.3" y="478.0"></text>
</g>
<g>
<title>alloc_pages_current (6 samples, 0.10%)</title><rect x="939.5" y="451.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="942.5" y="462.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (5 samples, 0.08%)</title><rect x="939.5" y="435.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.5" y="446.0"></text>
</g>
<g>
<title>get_page_from_freelist (4 samples, 0.07%)</title><rect x="939.7" y="419.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="942.7" y="430.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (7 samples, 0.12%)</title><rect x="940.7" y="467.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="943.7" y="478.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (3 samples, 0.05%)</title><rect x="940.9" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="943.9" y="462.0"></text>
</g>
<g>
<title>lru_cache_add (3 samples, 0.05%)</title><rect x="941.5" y="451.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="944.5" y="462.0"></text>
</g>
<g>
<title>__lru_cache_add (3 samples, 0.05%)</title><rect x="941.5" y="435.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="944.5" y="446.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (3 samples, 0.05%)</title><rect x="941.5" y="419.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="944.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="941.5" y="403.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="944.5" y="414.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.13%)</title><rect x="942.1" y="467.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="945.1" y="478.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.08%)</title><rect x="942.5" y="451.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="945.5" y="462.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.05%)</title><rect x="943.6" y="467.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.6" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (105 samples, 1.73%)</title><rect x="944.6" y="515.0" width="20.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="947.6" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (11 samples, 0.18%)</title><rect x="945.4" y="499.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="948.4" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (9 samples, 0.15%)</title><rect x="945.8" y="483.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="948.8" y="494.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.05%)</title><rect x="946.7" y="467.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="949.7" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="946.7" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="946.7" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="949.7" y="446.0"></text>
</g>
<g>
<title>generic_write_end (90 samples, 1.48%)</title><rect x="947.5" y="499.0" width="17.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.5" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (79 samples, 1.30%)</title><rect x="947.7" y="483.0" width="15.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.7" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (77 samples, 1.27%)</title><rect x="947.7" y="467.0" width="15.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="950.7" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (76 samples, 1.25%)</title><rect x="947.9" y="451.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="950.9" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.03%)</title><rect x="948.1" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.1" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.08%)</title><rect x="948.5" y="435.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="951.5" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="949.1" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.1" y="430.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (67 samples, 1.10%)</title><rect x="949.5" y="435.0" width="13.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="952.5" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.03%)</title><rect x="949.8" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="952.8" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (43 samples, 0.71%)</title><rect x="950.4" y="419.0" width="8.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="953.4" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (40 samples, 0.66%)</title><rect x="950.4" y="403.0" width="7.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="953.4" y="414.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (6 samples, 0.10%)</title><rect x="952.8" y="387.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="955.8" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (4 samples, 0.07%)</title><rect x="953.1" y="371.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="956.1" y="382.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="953.9" y="387.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="956.9" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (19 samples, 0.31%)</title><rect x="954.3" y="387.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="957.3" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (17 samples, 0.28%)</title><rect x="954.7" y="371.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="957.7" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.03%)</title><rect x="955.9" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="958.9" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (9 samples, 0.15%)</title><rect x="956.3" y="355.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="959.3" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (6 samples, 0.10%)</title><rect x="956.8" y="339.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.8" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (19 samples, 0.31%)</title><rect x="958.8" y="419.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="961.8" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (11 samples, 0.18%)</title><rect x="958.8" y="403.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="961.8" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (5 samples, 0.08%)</title><rect x="959.2" y="387.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="962.2" y="398.0"></text>
</g>
<g>
<title>__find_get_block (5 samples, 0.08%)</title><rect x="959.2" y="371.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.2" y="382.0"></text>
</g>
<g>
<title>ext4_get_group_desc (4 samples, 0.07%)</title><rect x="960.1" y="387.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="963.1" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.08%)</title><rect x="960.9" y="403.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="963.9" y="414.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (3 samples, 0.05%)</title><rect x="961.3" y="387.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="964.3" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="962.7" y="467.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="965.7" y="478.0"></text>
</g>
<g>
<title>block_write_end (10 samples, 0.16%)</title><rect x="963.1" y="483.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="966.1" y="494.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (8 samples, 0.13%)</title><rect x="963.2" y="467.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="966.2" y="478.0"></text>
</g>
<g>
<title>mark_buffer_dirty (5 samples, 0.08%)</title><rect x="963.8" y="451.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="966.8" y="462.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (8 samples, 0.13%)</title><rect x="965.0" y="515.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="968.0" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.08%)</title><rect x="965.6" y="499.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="968.6" y="510.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (5 samples, 0.08%)</title><rect x="966.6" y="515.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="969.6" y="526.0"></text>
</g>
<g>
<title>ext4_write_checks (5 samples, 0.08%)</title><rect x="967.5" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="970.5" y="558.0"></text>
</g>
<g>
<title>generic_write_checks (4 samples, 0.07%)</title><rect x="967.7" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="970.7" y="542.0"></text>
</g>
<g>
<title>generic_write_check_limits (3 samples, 0.05%)</title><rect x="967.9" y="515.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="970.9" y="526.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="968.7" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="971.7" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (16 samples, 0.26%)</title><rect x="969.1" y="595.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="972.1" y="606.0"></text>
</g>
<g>
<title>security_file_permission (12 samples, 0.20%)</title><rect x="969.9" y="579.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.9" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (11 samples, 0.18%)</title><rect x="969.9" y="563.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="972.9" y="574.0"></text>
</g>
<g>
<title>common_file_perm (11 samples, 0.18%)</title><rect x="969.9" y="547.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="972.9" y="558.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="972.6" y="691.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="975.6" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="973.9" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="976.9" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (5 samples, 0.08%)</title><rect x="974.3" y="691.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="977.3" y="702.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.05%)</title><rect x="975.3" y="707.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="978.3" y="718.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.12%)</title><rect x="975.9" y="707.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="978.9" y="718.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (14 samples, 0.23%)</title><rect x="977.2" y="707.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="980.2" y="718.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (4 samples, 0.07%)</title><rect x="980.0" y="707.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="983.0" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (4 samples, 0.07%)</title><rect x="980.9" y="707.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="983.9" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.05%)</title><rect x="981.9" y="707.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.9" y="718.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (3 samples, 0.05%)</title><rect x="982.5" y="707.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="985.5" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="983.1" y="723.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="986.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (8 samples, 0.13%)</title><rect x="983.5" y="739.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="986.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (5 samples, 0.08%)</title><rect x="984.0" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.0" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2 samples, 0.03%)</title><rect x="984.6" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="987.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (2 samples, 0.03%)</title><rect x="985.0" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.0" y="814.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="985.4" y="883.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="988.4" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,014 samples, 16.70%)</title><rect x="986.0" y="883.0" width="197.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.0" y="894.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="986.4" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="989.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="986.8" y="867.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="989.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="986.8" y="851.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="989.8" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="986.8" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="989.8" y="846.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.03%)</title><rect x="987.3" y="867.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="990.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.03%)</title><rect x="987.7" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="990.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (265 samples, 4.36%)</title><rect x="988.1" y="867.0" width="51.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.1" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (255 samples, 4.20%)</title><rect x="990.1" y="851.0" width="49.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.1" y="862.0">one/n..</text>
</g>
<g>
<title>JVM_IHashCode (155 samples, 2.55%)</title><rect x="990.6" y="835.0" width="30.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="993.6" y="846.0">JV..</text>
</g>
<g>
<title>epoll_wait (153 samples, 2.52%)</title><rect x="991.0" y="819.0" width="29.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="994.0" y="830.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (143 samples, 2.35%)</title><rect x="993.0" y="803.0" width="27.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="996.0" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (142 samples, 2.34%)</title><rect x="993.2" y="787.0" width="27.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="996.2" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (126 samples, 2.07%)</title><rect x="996.3" y="771.0" width="24.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.3" y="782.0">_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="996.3" y="755.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="999.3" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (124 samples, 2.04%)</title><rect x="996.7" y="755.0" width="24.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="999.7" y="766.0">d..</text>
</g>
<g>
<title>__fdget (12 samples, 0.20%)</title><rect x="997.1" y="739.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1000.1" y="750.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.20%)</title><rect x="997.1" y="723.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1000.1" y="734.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.13%)</title><rect x="997.8" y="707.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.8" y="718.0"></text>
</g>
<g>
<title>ep_poll (108 samples, 1.78%)</title><rect x="999.4" y="739.0" width="21.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1002.4" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (94 samples, 1.55%)</title><rect x="1000.7" y="723.0" width="18.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1003.7" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (70 samples, 1.15%)</title><rect x="1004.1" y="707.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1007.1" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (54 samples, 0.89%)</title><rect x="1006.4" y="691.0" width="10.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1009.4" y="702.0"></text>
</g>
<g>
<title>sock_poll (40 samples, 0.66%)</title><rect x="1007.7" y="675.0" width="7.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1010.7" y="686.0"></text>
</g>
<g>
<title>tcp_poll (25 samples, 0.41%)</title><rect x="1010.1" y="659.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1013.1" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="1014.5" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1017.5" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="1014.9" y="659.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1017.9" y="670.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.12%)</title><rect x="1015.5" y="675.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1018.5" y="686.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.07%)</title><rect x="1016.9" y="691.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1019.9" y="702.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.12%)</title><rect x="1017.7" y="707.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1020.7" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.10%)</title><rect x="1019.2" y="723.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1022.2" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.10%)</title><rect x="1019.2" y="707.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1022.2" y="718.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.08%)</title><rect x="1019.4" y="691.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1022.4" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1019.6" y="675.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1022.6" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="1020.0" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1023.0" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="1020.4" y="739.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1023.4" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.05%)</title><rect x="1020.8" y="835.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1023.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.42%)</title><rect x="1021.3" y="835.0" width="16.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1024.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.21%)</title><rect x="1021.3" y="819.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1024.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.21%)</title><rect x="1021.3" y="803.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1024.3" y="814.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1021.3" y="787.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1024.3" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="1021.7" y="787.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1024.7" y="798.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.12%)</title><rect x="1022.5" y="787.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1025.5" y="798.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="1023.1" y="771.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1026.1" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="1023.9" y="819.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1026.9" y="830.0"></text>
</g>
<g>
<title>epoll_wait (71 samples, 1.17%)</title><rect x="1024.3" y="819.0" width="13.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1027.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 1.05%)</title><rect x="1025.6" y="803.0" width="12.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1028.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 1.05%)</title><rect x="1025.6" y="787.0" width="12.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1028.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (54 samples, 0.89%)</title><rect x="1027.6" y="771.0" width="10.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1030.6" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (53 samples, 0.87%)</title><rect x="1027.6" y="755.0" width="10.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1030.6" y="766.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="1027.6" y="739.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1030.6" y="750.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="1027.6" y="723.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1030.6" y="734.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.07%)</title><rect x="1027.6" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1030.6" y="718.0"></text>
</g>
<g>
<title>ep_poll (46 samples, 0.76%)</title><rect x="1028.3" y="739.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1031.3" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (36 samples, 0.59%)</title><rect x="1029.5" y="723.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1032.5" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (28 samples, 0.46%)</title><rect x="1030.1" y="707.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1033.1" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (21 samples, 0.35%)</title><rect x="1031.1" y="691.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1034.1" y="702.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.25%)</title><rect x="1032.2" y="675.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.2" y="686.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.13%)</title><rect x="1033.2" y="659.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1036.2" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="1034.8" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.8" y="670.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="1035.1" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1038.1" y="702.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.07%)</title><rect x="1035.5" y="707.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1038.5" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.07%)</title><rect x="1036.5" y="723.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1039.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.07%)</title><rect x="1036.5" y="707.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1039.5" y="718.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.07%)</title><rect x="1036.5" y="691.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1039.5" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="1036.5" y="675.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1039.5" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1036.5" y="659.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1039.5" y="670.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="1038.2" y="835.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1041.2" y="846.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.07%)</title><rect x="1038.6" y="835.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1041.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (735 samples, 12.10%)</title><rect x="1039.6" y="867.0" width="142.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.6" y="878.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.20%)</title><rect x="1041.4" y="851.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1044.4" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.20%)</title><rect x="1041.4" y="835.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1044.4" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.10%)</title><rect x="1041.6" y="819.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1044.6" y="830.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.08%)</title><rect x="1041.7" y="803.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1044.7" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (5 samples, 0.08%)</title><rect x="1042.7" y="819.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1045.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (713 samples, 11.74%)</title><rect x="1043.7" y="851.0" width="138.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.7" y="862.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (475 samples, 7.82%)</title><rect x="1044.3" y="835.0" width="92.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.3" y="846.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (372 samples, 6.13%)</title><rect x="1047.4" y="819.0" width="72.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.4" y="830.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (366 samples, 6.03%)</title><rect x="1048.5" y="803.0" width="71.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.5" y="814.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (323 samples, 5.32%)</title><rect x="1049.9" y="787.0" width="62.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.9" y="798.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (28 samples, 0.46%)</title><rect x="1050.1" y="771.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.46%)</title><rect x="1050.1" y="755.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.15%)</title><rect x="1052.2" y="739.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.15%)</title><rect x="1052.2" y="723.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1054.0" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="1054.0" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.0" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1054.4" y="739.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1057.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.07%)</title><rect x="1054.8" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1057.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="1055.2" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1058.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="1055.2" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="1055.2" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1058.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (294 samples, 4.84%)</title><rect x="1055.5" y="771.0" width="57.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.5" y="782.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.getBytes (18 samples, 0.30%)</title><rect x="1056.3" y="755.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.25%)</title><rect x="1056.9" y="739.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.25%)</title><rect x="1056.9" y="723.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1059.9" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.25%)</title><rect x="1056.9" y="707.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (8 samples, 0.13%)</title><rect x="1058.3" y="691.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1214003821.linkToTargetMethod (7 samples, 0.12%)</title><rect x="1059.8" y="755.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.10%)</title><rect x="1061.2" y="755.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.10%)</title><rect x="1061.2" y="739.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.08%)</title><rect x="1061.2" y="723.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.25%)</title><rect x="1062.3" y="755.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.10%)</title><rect x="1063.7" y="739.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.10%)</title><rect x="1063.7" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1064.9" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="1064.9" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.23%)</title><rect x="1065.3" y="755.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1068.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.21%)</title><rect x="1065.5" y="739.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.21%)</title><rect x="1065.5" y="723.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1068.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (230 samples, 3.79%)</title><rect x="1068.0" y="755.0" width="44.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.0" y="766.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="1068.0" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="1068.0" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1071.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.get$Lambda (2 samples, 0.03%)</title><rect x="1068.0" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1068.0" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (228 samples, 3.75%)</title><rect x="1068.4" y="739.0" width="44.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.4" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (228 samples, 3.75%)</title><rect x="1068.4" y="723.0" width="44.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.4" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.05%)</title><rect x="1068.6" y="707.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1071.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.05%)</title><rect x="1068.6" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="1068.8" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.12%)</title><rect x="1069.1" y="707.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.12%)</title><rect x="1069.1" y="691.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.05%)</title><rect x="1069.7" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.05%)</title><rect x="1069.7" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (217 samples, 3.57%)</title><rect x="1070.5" y="707.0" width="42.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.5" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (216 samples, 3.56%)</title><rect x="1070.7" y="691.0" width="42.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.7" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (216 samples, 3.56%)</title><rect x="1070.7" y="675.0" width="42.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.7" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (216 samples, 3.56%)</title><rect x="1070.7" y="659.0" width="42.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.7" y="670.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (187 samples, 3.08%)</title><rect x="1076.3" y="643.0" width="36.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.3" y="654.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="1077.3" y="627.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.3" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.05%)</title><rect x="1077.9" y="627.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.9" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (35 samples, 0.58%)</title><rect x="1078.7" y="627.0" width="6.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1081.7" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="1080.6" y="611.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1083.6" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1081.2" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1084.2" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.05%)</title><rect x="1081.6" y="611.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1084.6" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="1082.2" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1085.2" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="1082.7" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1085.7" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="1083.1" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1086.1" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.05%)</title><rect x="1083.5" y="611.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1086.5" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.07%)</title><rect x="1084.1" y="611.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1087.1" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1085.1" y="611.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1088.1" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (134 samples, 2.21%)</title><rect x="1085.5" y="627.0" width="26.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1088.5" y="638.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (123 samples, 2.03%)</title><rect x="1087.6" y="611.0" width="23.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1090.6" y="622.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="1087.6" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1090.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (121 samples, 1.99%)</title><rect x="1088.0" y="595.0" width="23.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1091.0" y="606.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (108 samples, 1.78%)</title><rect x="1090.5" y="579.0" width="21.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1093.5" y="590.0"></text>
</g>
<g>
<title>do_futex (106 samples, 1.75%)</title><rect x="1090.9" y="563.0" width="20.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1093.9" y="574.0"></text>
</g>
<g>
<title>futex_wake (99 samples, 1.63%)</title><rect x="1090.9" y="547.0" width="19.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1093.9" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="1091.9" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1094.9" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.05%)</title><rect x="1092.5" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1095.5" y="542.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.03%)</title><rect x="1092.7" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.7" y="526.0"></text>
</g>
<g>
<title>wake_up_q (87 samples, 1.43%)</title><rect x="1093.2" y="531.0" width="16.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1096.2" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (87 samples, 1.43%)</title><rect x="1093.2" y="515.0" width="16.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1096.2" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (87 samples, 1.43%)</title><rect x="1093.2" y="499.0" width="16.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1096.2" y="510.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.08%)</title><rect x="1110.1" y="547.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1113.1" y="558.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="1111.1" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.1" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.10%)</title><rect x="1111.5" y="627.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1114.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (36 samples, 0.59%)</title><rect x="1112.7" y="787.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (36 samples, 0.59%)</title><rect x="1112.7" y="771.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.18%)</title><rect x="1112.7" y="755.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (25 samples, 0.41%)</title><rect x="1114.8" y="755.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (25 samples, 0.41%)</title><rect x="1114.8" y="739.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (25 samples, 0.41%)</title><rect x="1114.8" y="723.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.8" y="734.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4 samples, 0.07%)</title><rect x="1116.0" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.0" y="718.0"></text>
</g>
<g>
<title>itable stub (15 samples, 0.25%)</title><rect x="1116.7" y="707.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1119.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27 samples, 0.44%)</title><rect x="1119.7" y="819.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.21%)</title><rect x="1121.0" y="803.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.21%)</title><rect x="1121.0" y="787.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (7 samples, 0.12%)</title><rect x="1123.5" y="803.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14 samples, 0.23%)</title><rect x="1124.9" y="819.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.9" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.07%)</title><rect x="1125.1" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1128.1" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.07%)</title><rect x="1125.1" y="787.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1128.1" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.07%)</title><rect x="1125.1" y="771.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.1" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.07%)</title><rect x="1125.1" y="755.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.1" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.07%)</title><rect x="1125.1" y="739.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.1" y="750.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.03%)</title><rect x="1125.5" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.07%)</title><rect x="1125.9" y="803.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.07%)</title><rect x="1125.9" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.05%)</title><rect x="1126.1" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.05%)</title><rect x="1126.1" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.1" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (3 samples, 0.05%)</title><rect x="1126.1" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.1" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="1126.7" y="803.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1129.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (27 samples, 0.44%)</title><rect x="1127.8" y="819.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1130.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (19 samples, 0.31%)</title><rect x="1129.2" y="803.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (19 samples, 0.31%)</title><rect x="1129.2" y="787.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.2" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="1131.9" y="771.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1134.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.30%)</title><rect x="1133.1" y="819.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.30%)</title><rect x="1133.1" y="803.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.1" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.07%)</title><rect x="1135.0" y="787.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.0" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1135.2" y="771.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.2" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1135.2" y="755.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.2" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1135.2" y="739.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.2" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="1135.2" y="723.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.2" y="734.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.03%)</title><rect x="1135.2" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1135.8" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1135.8" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.07%)</title><rect x="1135.8" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.8" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.07%)</title><rect x="1135.8" y="739.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.8" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.07%)</title><rect x="1135.8" y="723.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.8" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.07%)</title><rect x="1135.8" y="707.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.8" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.07%)</title><rect x="1135.8" y="691.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1138.8" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="1135.8" y="675.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.8" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="1135.8" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1138.8" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="1135.8" y="643.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (234 samples, 3.85%)</title><rect x="1136.8" y="835.0" width="45.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1139.8" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (228 samples, 3.75%)</title><rect x="1137.9" y="819.0" width="44.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.9" y="830.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (50 samples, 0.82%)</title><rect x="1139.9" y="803.0" width="9.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1142.9" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.10%)</title><rect x="1141.6" y="787.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.6" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.05%)</title><rect x="1142.8" y="787.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.8" y="798.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.12%)</title><rect x="1143.8" y="787.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1146.8" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (17 samples, 0.28%)</title><rect x="1145.1" y="787.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1148.1" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1146.1" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.1" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.07%)</title><rect x="1146.5" y="771.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.5" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.10%)</title><rect x="1147.3" y="771.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1150.3" y="782.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (6 samples, 0.10%)</title><rect x="1147.3" y="755.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.3" y="766.0"></text>
</g>
<g>
<title>memmove@plt (4 samples, 0.07%)</title><rect x="1148.4" y="787.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1151.4" y="798.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="1149.2" y="787.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.2" y="798.0"></text>
</g>
<g>
<title>__GI___recv (163 samples, 2.68%)</title><rect x="1149.6" y="803.0" width="31.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1152.6" y="814.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (156 samples, 2.57%)</title><rect x="1150.9" y="787.0" width="30.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1153.9" y="798.0">en..</text>
</g>
<g>
<title>do_syscall_64 (155 samples, 2.55%)</title><rect x="1151.1" y="771.0" width="30.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1154.1" y="782.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (129 samples, 2.12%)</title><rect x="1156.2" y="755.0" width="25.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1159.2" y="766.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (125 samples, 2.06%)</title><rect x="1156.2" y="739.0" width="24.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1159.2" y="750.0">_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1156.8" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.8" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (110 samples, 1.81%)</title><rect x="1157.6" y="723.0" width="21.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.6" y="734.0">s..</text>
</g>
<g>
<title>inet_recvmsg (90 samples, 1.48%)</title><rect x="1157.7" y="707.0" width="17.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.7" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="1157.9" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.9" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (86 samples, 1.42%)</title><rect x="1158.5" y="691.0" width="16.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1161.5" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.08%)</title><rect x="1161.0" y="675.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1164.0" y="686.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.08%)</title><rect x="1161.0" y="659.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1164.0" y="670.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="1161.0" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.0" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="1161.4" y="643.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="1162.6" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1165.6" y="686.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1163.0" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1166.0" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1163.4" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1166.4" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (23 samples, 0.38%)</title><rect x="1164.0" y="675.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1167.0" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (19 samples, 0.31%)</title><rect x="1164.2" y="659.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1167.2" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (18 samples, 0.30%)</title><rect x="1164.4" y="643.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1167.4" y="654.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.12%)</title><rect x="1164.4" y="627.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1167.4" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.08%)</title><rect x="1164.7" y="611.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1167.7" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1165.7" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1168.7" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.12%)</title><rect x="1166.1" y="627.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1169.1" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.12%)</title><rect x="1166.1" y="611.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1169.1" y="622.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="1167.5" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.5" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.05%)</title><rect x="1167.8" y="659.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1170.8" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (28 samples, 0.46%)</title><rect x="1168.4" y="675.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1171.4" y="686.0"></text>
</g>
<g>
<title>tcp_send_ack (27 samples, 0.44%)</title><rect x="1168.6" y="659.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1171.6" y="670.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (27 samples, 0.44%)</title><rect x="1168.6" y="643.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.6" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (26 samples, 0.43%)</title><rect x="1168.6" y="627.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1171.6" y="638.0"></text>
</g>
<g>
<title>ip_queue_xmit (23 samples, 0.38%)</title><rect x="1169.2" y="611.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.2" y="622.0"></text>
</g>
<g>
<title>__ip_queue_xmit (23 samples, 0.38%)</title><rect x="1169.2" y="595.0" width="4.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1172.2" y="606.0"></text>
</g>
<g>
<title>ip_local_out (23 samples, 0.38%)</title><rect x="1169.2" y="579.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1172.2" y="590.0"></text>
</g>
<g>
<title>ip_output (22 samples, 0.36%)</title><rect x="1169.4" y="563.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1172.4" y="574.0"></text>
</g>
<g>
<title>ip_finish_output (20 samples, 0.33%)</title><rect x="1169.6" y="547.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1172.6" y="558.0"></text>
</g>
<g>
<title>ip_finish_output2 (19 samples, 0.31%)</title><rect x="1169.8" y="531.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1172.8" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 0.16%)</title><rect x="1170.0" y="515.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1173.0" y="526.0"></text>
</g>
<g>
<title>do_softirq.part.21 (10 samples, 0.16%)</title><rect x="1170.0" y="499.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1173.0" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (10 samples, 0.16%)</title><rect x="1170.0" y="483.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1173.0" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (10 samples, 0.16%)</title><rect x="1170.0" y="467.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.0" y="478.0"></text>
</g>
<g>
<title>net_rx_action (9 samples, 0.15%)</title><rect x="1170.2" y="451.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1173.2" y="462.0"></text>
</g>
<g>
<title>process_backlog (9 samples, 0.15%)</title><rect x="1170.2" y="435.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.2" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.08%)</title><rect x="1170.8" y="419.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1173.8" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.07%)</title><rect x="1171.0" y="403.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.0" y="414.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.05%)</title><rect x="1171.2" y="387.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.2" y="398.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="1171.2" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1174.2" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="1171.2" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1174.2" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="1171.2" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1174.2" y="350.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.05%)</title><rect x="1171.2" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1174.2" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.05%)</title><rect x="1171.2" y="307.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1171.2" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1174.2" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="1171.2" y="275.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1174.2" y="286.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="1171.2" y="259.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1174.2" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.13%)</title><rect x="1171.9" y="515.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1174.9" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.13%)</title><rect x="1171.9" y="499.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1174.9" y="510.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="1172.7" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.7" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.05%)</title><rect x="1174.1" y="675.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.1" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="1174.7" y="675.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (18 samples, 0.30%)</title><rect x="1175.2" y="707.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.2" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (15 samples, 0.25%)</title><rect x="1175.8" y="691.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1178.8" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (15 samples, 0.25%)</title><rect x="1175.8" y="675.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1178.8" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (13 samples, 0.21%)</title><rect x="1176.2" y="659.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.2" y="670.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1178.0" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1181.0" y="654.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1178.0" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.0" y="638.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1178.3" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.3" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.13%)</title><rect x="1178.9" y="723.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.9" y="734.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.10%)</title><rect x="1178.9" y="707.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1181.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.10%)</title><rect x="1178.9" y="691.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1181.9" y="702.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.08%)</title><rect x="1179.1" y="675.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.1" y="686.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1180.1" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.1" y="718.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1180.5" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1183.5" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="1180.9" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.9" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="1181.3" y="803.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1184.3" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.05%)</title><rect x="1181.6" y="803.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1184.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="1182.4" y="867.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.4" y="878.0"></text>
</g>
<g>
<title>start_thread (13 samples, 0.21%)</title><rect x="1183.0" y="883.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1186.0" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 0.21%)</title><rect x="1183.0" y="867.0" width="2.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1186.0" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 0.21%)</title><rect x="1183.0" y="851.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.0" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.08%)</title><rect x="1183.2" y="835.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.2" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.08%)</title><rect x="1183.2" y="819.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.2" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.05%)</title><rect x="1183.2" y="803.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.2" y="814.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.05%)</title><rect x="1183.2" y="787.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1186.2" y="798.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1183.8" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.8" y="814.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1183.8" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.8" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.03%)</title><rect x="1183.8" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.8" y="782.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.03%)</title><rect x="1183.8" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="766.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.03%)</title><rect x="1183.8" y="739.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.8" y="750.0"></text>
</g>
<g>
<title>JavaThread::run() (3 samples, 0.05%)</title><rect x="1184.2" y="835.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.2" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.05%)</title><rect x="1184.2" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.05%)</title><rect x="1184.2" y="803.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.2" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.05%)</title><rect x="1184.2" y="787.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.05%)</title><rect x="1184.2" y="771.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.2" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.03%)</title><rect x="1184.2" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.03%)</title><rect x="1184.2" y="739.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="750.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.05%)</title><rect x="1184.9" y="835.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.05%)</title><rect x="1184.9" y="819.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.03%)</title><rect x="1184.9" y="803.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.9" y="814.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (8 samples, 0.13%)</title><rect x="1185.5" y="883.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.5" y="894.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (13 samples, 0.21%)</title><rect x="1187.1" y="883.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.03%)</title><rect x="1189.6" y="883.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.6" y="894.0"></text>
</g>
</g>
</svg>
