<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2230" onload="init(evt)" viewBox="0 0 1200 2230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Java async client | CPU</text>
<text id="details" x="10" y="2213"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2213"> </text>
<g id="frames">
<g>
<title>all (3,151 samples, 100.00%)</title><rect x="10.0" y="2179.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="2190.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.19%)</title><rect x="10.0" y="2163.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.19%)</title><rect x="10.0" y="2147.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="2158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (6 samples, 0.19%)</title><rect x="10.0" y="2131.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.19%)</title><rect x="10.0" y="2115.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.10%)</title><rect x="10.0" y="2099.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="2110.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="11.1" y="2099.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="14.1" y="2110.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.06%)</title><rect x="11.5" y="2099.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.5" y="2110.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.06%)</title><rect x="12.2" y="2163.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="15.2" y="2174.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.16%)</title><rect x="13.0" y="2163.0" width="1.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="16.0" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="13.0" y="2147.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.0" y="2158.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.13%)</title><rect x="13.4" y="2147.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.4" y="2158.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.13%)</title><rect x="13.4" y="2131.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.4" y="2142.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.06%)</title><rect x="13.4" y="2115.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.4" y="2126.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="13.4" y="2099.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.4" y="2110.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="13.7" y="2083.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.7" y="2094.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.06%)</title><rect x="14.1" y="2115.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.1" y="2126.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.03%)</title><rect x="14.1" y="2099.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.1" y="2110.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="14.5" y="2099.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.5" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="14.9" y="2163.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="17.9" y="2174.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.03%)</title><rect x="14.9" y="2147.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="17.9" y="2158.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="15.2" y="2147.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="18.2" y="2158.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="15.2" y="2131.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="18.2" y="2142.0"></text>
</g>
<g>
<title>[unknown_Java] (16 samples, 0.51%)</title><rect x="15.6" y="2163.0" width="6.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="18.6" y="2174.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="15.6" y="2147.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.6" y="2158.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.03%)</title><rect x="16.0" y="2147.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="19.0" y="2158.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (5 samples, 0.16%)</title><rect x="16.4" y="2147.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.4" y="2158.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="18.2" y="2147.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.2" y="2158.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.03%)</title><rect x="18.2" y="2131.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="21.2" y="2142.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="18.6" y="2147.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="21.6" y="2158.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="18.6" y="2131.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="21.6" y="2142.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="19.0" y="2131.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="22.0" y="2142.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.10%)</title><rect x="19.4" y="2131.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="22.4" y="2142.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="19.7" y="2115.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="22.7" y="2126.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.10%)</title><rect x="20.5" y="2147.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="23.5" y="2158.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="20.9" y="2131.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="23.9" y="2142.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="20.9" y="2115.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.9" y="2126.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="21.2" y="2099.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="24.2" y="2110.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="21.2" y="2083.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="24.2" y="2094.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="21.2" y="2067.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="24.2" y="2078.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="21.2" y="2051.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.2" y="2062.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="21.2" y="2035.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.2" y="2046.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="21.2" y="2019.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="24.2" y="2030.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="21.6" y="2163.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="24.6" y="2174.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="22.0" y="2163.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="25.0" y="2174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="22.0" y="2147.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.0" y="2158.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="22.0" y="2131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="25.0" y="2142.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="22.0" y="2115.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="25.0" y="2126.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="22.0" y="2099.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.0" y="2110.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="22.0" y="2083.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="25.0" y="2094.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="22.0" y="2067.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="25.0" y="2078.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="22.0" y="2051.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="25.0" y="2062.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="22.0" y="2035.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="25.0" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.13%)</title><rect x="22.4" y="2163.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="25.4" y="2174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="22.7" y="2147.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.7" y="2158.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="22.7" y="2131.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="25.7" y="2142.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="22.7" y="2115.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="25.7" y="2126.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="23.1" y="2099.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="26.1" y="2110.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.06%)</title><rect x="23.1" y="2083.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.1" y="2094.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.06%)</title><rect x="23.1" y="2067.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="26.1" y="2078.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.06%)</title><rect x="23.1" y="2051.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.1" y="2062.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="23.1" y="2035.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="26.1" y="2046.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="23.9" y="2163.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.9" y="2174.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="23.9" y="2147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.9" y="2158.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="23.9" y="2131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.9" y="2142.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="23.9" y="2115.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.9" y="2126.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="23.9" y="2099.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="26.9" y="2110.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="23.9" y="2083.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="26.9" y="2094.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="23.9" y="2067.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.9" y="2078.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,395 samples, 44.27%)</title><rect x="24.2" y="2163.0" width="522.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.2" y="2174.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,395 samples, 44.27%)</title><rect x="24.2" y="2147.0" width="522.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.2" y="2158.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,395 samples, 44.27%)</title><rect x="24.2" y="2131.0" width="522.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.2" y="2142.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (255 samples, 8.09%)</title><rect x="24.2" y="2115.0" width="95.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.2" y="2126.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (253 samples, 8.03%)</title><rect x="25.0" y="2099.0" width="94.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.0" y="2110.0">java/util/c..</text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="25.0" y="2083.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="28.0" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (249 samples, 7.90%)</title><rect x="25.7" y="2083.0" width="93.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.7" y="2094.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="26.5" y="2067.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.5" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="26.5" y="2051.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.5" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1557312951.apply (246 samples, 7.81%)</title><rect x="26.9" y="2067.0" width="92.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.9" y="2078.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (246 samples, 7.81%)</title><rect x="26.9" y="2051.0" width="92.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.9" y="2062.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (246 samples, 7.81%)</title><rect x="26.9" y="2035.0" width="92.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.9" y="2046.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.06%)</title><rect x="26.9" y="2019.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.9" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (183 samples, 5.81%)</title><rect x="27.6" y="2019.0" width="68.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.6" y="2030.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (183 samples, 5.81%)</title><rect x="27.6" y="2003.0" width="68.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.6" y="2014.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (183 samples, 5.81%)</title><rect x="27.6" y="1987.0" width="68.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.6" y="1998.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (117 samples, 3.71%)</title><rect x="27.6" y="1971.0" width="43.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.6" y="1982.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (117 samples, 3.71%)</title><rect x="27.6" y="1955.0" width="43.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.6" y="1966.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.03%)</title><rect x="27.6" y="1939.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="27.6" y="1923.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="27.6" y="1907.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.03%)</title><rect x="27.6" y="1891.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (116 samples, 3.68%)</title><rect x="28.0" y="1939.0" width="43.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.0" y="1950.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="28.3" y="1923.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.3" y="1934.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="28.3" y="1907.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="31.3" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1014279463.apply (113 samples, 3.59%)</title><rect x="29.1" y="1923.0" width="42.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.1" y="1934.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (111 samples, 3.52%)</title><rect x="29.8" y="1907.0" width="41.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.8" y="1918.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (111 samples, 3.52%)</title><rect x="29.8" y="1891.0" width="41.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.8" y="1902.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/885247476.apply (111 samples, 3.52%)</title><rect x="29.8" y="1875.0" width="41.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.8" y="1886.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (111 samples, 3.52%)</title><rect x="29.8" y="1859.0" width="41.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.8" y="1870.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.03%)</title><rect x="29.8" y="1843.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.03%)</title><rect x="29.8" y="1827.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.8" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.16%)</title><rect x="30.2" y="1843.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.10%)</title><rect x="31.0" y="1827.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="31.7" y="1811.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (105 samples, 3.33%)</title><rect x="32.1" y="1843.0" width="39.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.1" y="1854.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (84 samples, 2.67%)</title><rect x="32.1" y="1827.0" width="31.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.1" y="1838.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (83 samples, 2.63%)</title><rect x="32.5" y="1811.0" width="31.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.5" y="1822.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.10%)</title><rect x="32.5" y="1795.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.5" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$175/1685208549.apply (1 samples, 0.03%)</title><rect x="32.8" y="1779.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$177/1669305667.apply (1 samples, 0.03%)</title><rect x="33.2" y="1779.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$175/1685208549.apply (79 samples, 2.51%)</title><rect x="33.6" y="1795.0" width="29.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.6" y="1806.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (79 samples, 2.51%)</title><rect x="33.6" y="1779.0" width="29.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.6" y="1790.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.16%)</title><rect x="34.3" y="1763.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.3" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.16%)</title><rect x="34.3" y="1747.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.06%)</title><rect x="34.7" y="1731.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.7" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.06%)</title><rect x="34.7" y="1715.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.7" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (2 samples, 0.06%)</title><rect x="34.7" y="1699.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.7" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (2 samples, 0.06%)</title><rect x="34.7" y="1683.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.7" y="1694.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="34.7" y="1667.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="37.7" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.06%)</title><rect x="35.5" y="1731.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.5" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (2 samples, 0.06%)</title><rect x="35.5" y="1715.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.5" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="35.5" y="1699.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.5" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="35.8" y="1699.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="35.8" y="1683.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.06%)</title><rect x="36.2" y="1763.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.2" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.06%)</title><rect x="36.2" y="1747.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.06%)</title><rect x="36.2" y="1731.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.2" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.06%)</title><rect x="36.2" y="1715.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.06%)</title><rect x="36.2" y="1699.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.06%)</title><rect x="36.2" y="1683.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="36.6" y="1667.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.03%)</title><rect x="36.6" y="1651.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.03%)</title><rect x="36.6" y="1635.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.6" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="36.6" y="1619.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.6" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="36.6" y="1603.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.6" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (25 samples, 0.79%)</title><rect x="37.0" y="1763.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.0" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="37.0" y="1747.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (23 samples, 0.73%)</title><rect x="37.3" y="1747.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.3" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (3 samples, 0.10%)</title><rect x="37.3" y="1731.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.3" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.10%)</title><rect x="37.3" y="1715.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.3" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.10%)</title><rect x="37.3" y="1699.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.10%)</title><rect x="37.3" y="1683.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.10%)</title><rect x="37.3" y="1667.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.3" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.10%)</title><rect x="37.3" y="1651.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.3" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.03%)</title><rect x="38.1" y="1635.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.1" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="38.1" y="1619.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="41.1" y="1630.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.03%)</title><rect x="38.1" y="1603.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="41.1" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="38.1" y="1587.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="41.1" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="38.1" y="1571.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="41.1" y="1582.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="38.1" y="1555.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="41.1" y="1566.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.03%)</title><rect x="38.1" y="1539.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="41.1" y="1550.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.03%)</title><rect x="38.1" y="1523.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.1" y="1534.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.03%)</title><rect x="38.1" y="1507.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="41.1" y="1518.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.03%)</title><rect x="38.1" y="1491.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="41.1" y="1502.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.03%)</title><rect x="38.1" y="1475.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="41.1" y="1486.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="38.1" y="1459.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (20 samples, 0.63%)</title><rect x="38.5" y="1731.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.5" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (20 samples, 0.63%)</title><rect x="38.5" y="1715.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.5" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (18 samples, 0.57%)</title><rect x="38.5" y="1699.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.5" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.54%)</title><rect x="38.5" y="1683.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.54%)</title><rect x="38.5" y="1667.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.5" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (17 samples, 0.54%)</title><rect x="38.5" y="1651.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.5" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (14 samples, 0.44%)</title><rect x="39.6" y="1635.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.6" y="1646.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.03%)</title><rect x="39.6" y="1619.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="42.6" y="1630.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.41%)</title><rect x="40.0" y="1619.0" width="4.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="43.0" y="1630.0"></text>
</g>
<g>
<title>__GI_write (12 samples, 0.38%)</title><rect x="40.0" y="1603.0" width="4.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="43.0" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.38%)</title><rect x="40.0" y="1587.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.0" y="1598.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="40.0" y="1571.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="43.0" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.35%)</title><rect x="40.3" y="1571.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.3" y="1582.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.32%)</title><rect x="40.3" y="1555.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="43.3" y="1566.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.32%)</title><rect x="40.3" y="1539.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.3" y="1550.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.32%)</title><rect x="40.3" y="1523.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.3" y="1534.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.32%)</title><rect x="40.3" y="1507.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.3" y="1518.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.32%)</title><rect x="40.3" y="1491.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.3" y="1502.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="40.3" y="1475.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.3" y="1486.0"></text>
</g>
<g>
<title>pipe_write (9 samples, 0.29%)</title><rect x="40.7" y="1475.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.7" y="1486.0"></text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 0.29%)</title><rect x="40.7" y="1459.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.7" y="1470.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.29%)</title><rect x="40.7" y="1443.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.7" y="1454.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.29%)</title><rect x="40.7" y="1427.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="43.7" y="1438.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="44.1" y="1555.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="47.1" y="1566.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="44.1" y="1539.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="47.1" y="1550.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="44.1" y="1523.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.1" y="1534.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="44.1" y="1507.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="47.1" y="1518.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="44.1" y="1491.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.1" y="1502.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="44.1" y="1475.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="47.1" y="1486.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="44.1" y="1459.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="47.1" y="1470.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="44.5" y="1603.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="47.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.03%)</title><rect x="44.8" y="1683.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.06%)</title><rect x="45.2" y="1699.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.03%)</title><rect x="46.0" y="1747.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.0" y="1758.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="46.0" y="1731.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="49.0" y="1742.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="46.0" y="1715.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="49.0" y="1726.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="46.0" y="1699.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="49.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (45 samples, 1.43%)</title><rect x="46.3" y="1763.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.3" y="1774.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="46.7" y="1747.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="46.7" y="1731.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.7" y="1742.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="46.7" y="1715.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (31 samples, 0.98%)</title><rect x="47.1" y="1747.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.1" y="1758.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1 samples, 0.03%)</title><rect x="47.1" y="1731.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.1" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="47.1" y="1715.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.1" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="47.1" y="1699.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.1" y="1710.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$191/1521704547.get$Lambda (1 samples, 0.03%)</title><rect x="47.1" y="1683.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.1" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (1 samples, 0.03%)</title><rect x="47.4" y="1731.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.4" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="47.4" y="1715.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.4" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="47.4" y="1699.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (14 samples, 0.44%)</title><rect x="47.8" y="1731.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.8" y="1742.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="48.6" y="1715.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.6" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="48.6" y="1699.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.6" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.03%)</title><rect x="48.6" y="1683.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.6" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.03%)</title><rect x="48.6" y="1667.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.6" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.03%)</title><rect x="48.6" y="1651.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.6" y="1662.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="48.6" y="1635.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.6" y="1646.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.06%)</title><rect x="48.9" y="1715.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.9" y="1726.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (2 samples, 0.06%)</title><rect x="48.9" y="1699.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.9" y="1710.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$191/1521704547.test (9 samples, 0.29%)</title><rect x="49.7" y="1715.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.7" y="1726.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (9 samples, 0.29%)</title><rect x="49.7" y="1699.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/27319466.test (9 samples, 0.29%)</title><rect x="49.7" y="1683.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (9 samples, 0.29%)</title><rect x="49.7" y="1667.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.7" y="1678.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1627857534.test (9 samples, 0.29%)</title><rect x="49.7" y="1651.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.7" y="1662.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (9 samples, 0.29%)</title><rect x="49.7" y="1635.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/728258269.test (9 samples, 0.29%)</title><rect x="49.7" y="1619.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (9 samples, 0.29%)</title><rect x="49.7" y="1603.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.7" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.10%)</title><rect x="49.7" y="1587.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.7" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="49.7" y="1571.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="50.1" y="1571.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="50.1" y="1555.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="50.8" y="1587.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.8" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.16%)</title><rect x="51.2" y="1587.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.2" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.13%)</title><rect x="51.2" y="1571.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.2" y="1582.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="52.3" y="1555.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.3" y="1566.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="52.3" y="1539.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.3" y="1550.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="52.3" y="1523.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="55.3" y="1534.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="52.3" y="1507.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="55.3" y="1518.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="52.3" y="1491.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="55.3" y="1502.0"></text>
</g>
<g>
<title>rcu_cblist_dequeue (1 samples, 0.03%)</title><rect x="52.3" y="1475.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="55.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="52.7" y="1571.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (15 samples, 0.48%)</title><rect x="53.1" y="1731.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.1" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (15 samples, 0.48%)</title><rect x="53.1" y="1715.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.1" y="1726.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (15 samples, 0.48%)</title><rect x="53.1" y="1699.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.1" y="1710.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="54.2" y="1683.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="57.2" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (11 samples, 0.35%)</title><rect x="54.6" y="1683.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.6" y="1694.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (9 samples, 0.29%)</title><rect x="54.9" y="1667.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.9" y="1678.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.29%)</title><rect x="54.9" y="1651.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.9" y="1662.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.16%)</title><rect x="55.7" y="1635.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.7" y="1646.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="56.4" y="1619.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="59.4" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (2 samples, 0.06%)</title><rect x="56.8" y="1619.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.8" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.06%)</title><rect x="56.8" y="1603.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.8" y="1614.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.06%)</title><rect x="57.6" y="1635.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.6" y="1646.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="57.9" y="1619.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.9" y="1630.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="58.3" y="1667.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (5 samples, 0.16%)</title><rect x="58.7" y="1747.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (3 samples, 0.10%)</title><rect x="58.7" y="1731.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.7" y="1742.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (2 samples, 0.06%)</title><rect x="59.1" y="1715.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.1" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="59.8" y="1731.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.8" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.06%)</title><rect x="59.8" y="1715.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.8" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1177377518.invoke (2 samples, 0.06%)</title><rect x="59.8" y="1699.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="59.8" y="1683.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.8" y="1694.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.03%)</title><rect x="59.8" y="1667.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.8" y="1678.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="60.2" y="1667.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.2" y="1678.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="60.2" y="1651.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="60.2" y="1635.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.16%)</title><rect x="60.6" y="1747.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.6" y="1758.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="60.6" y="1731.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.6" y="1742.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="60.6" y="1715.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.6" y="1726.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.03%)</title><rect x="60.6" y="1699.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.6" y="1710.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="60.6" y="1683.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="63.6" y="1694.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.10%)</title><rect x="60.9" y="1731.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.9" y="1742.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.10%)</title><rect x="60.9" y="1715.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.9" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.03%)</title><rect x="61.3" y="1699.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.03%)</title><rect x="61.7" y="1699.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.7" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="62.1" y="1731.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.1" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="62.1" y="1715.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.1" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.requests (2 samples, 0.06%)</title><rect x="62.4" y="1747.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2 samples, 0.06%)</title><rect x="62.4" y="1731.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="63.2" y="1795.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.03%)</title><rect x="63.2" y="1779.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.2" y="1790.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.03%)</title><rect x="63.2" y="1763.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.2" y="1774.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (1 samples, 0.03%)</title><rect x="63.2" y="1747.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (21 samples, 0.67%)</title><rect x="63.6" y="1827.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.6" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="63.6" y="1811.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.6" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="63.6" y="1795.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="66.6" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$167/1335215597.get$Lambda (1 samples, 0.03%)</title><rect x="63.6" y="1779.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.6" y="1790.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="63.6" y="1763.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="66.6" y="1774.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="63.6" y="1747.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="66.6" y="1758.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="63.6" y="1731.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="66.6" y="1742.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="63.6" y="1715.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="66.6" y="1726.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="63.6" y="1699.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="66.6" y="1710.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="63.6" y="1683.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="66.6" y="1694.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="63.6" y="1667.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="66.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (20 samples, 0.63%)</title><rect x="63.9" y="1811.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (7 samples, 0.22%)</title><rect x="63.9" y="1795.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.9" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (7 samples, 0.22%)</title><rect x="63.9" y="1779.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.41%)</title><rect x="66.5" y="1795.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.5" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.38%)</title><rect x="66.9" y="1779.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.06%)</title><rect x="66.9" y="1763.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.9" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.06%)</title><rect x="66.9" y="1747.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.9" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.06%)</title><rect x="66.9" y="1731.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.9" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="66.9" y="1715.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.9" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="66.9" y="1699.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.9" y="1710.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="66.9" y="1683.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="69.9" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="67.3" y="1715.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.3" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="67.3" y="1699.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.3" y="1710.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="67.3" y="1683.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="70.3" y="1694.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="67.3" y="1667.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.3" y="1678.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="67.3" y="1651.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.3" y="1662.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="67.3" y="1635.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="70.3" y="1646.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="67.3" y="1619.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.3" y="1630.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="67.3" y="1603.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.3" y="1614.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="67.3" y="1587.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="70.3" y="1598.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="67.3" y="1571.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="70.3" y="1582.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="67.3" y="1555.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.3" y="1566.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="67.3" y="1539.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.3" y="1550.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="67.3" y="1523.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.3" y="1534.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="67.3" y="1507.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.3" y="1518.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="67.3" y="1491.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="70.3" y="1502.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="67.3" y="1475.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="70.3" y="1486.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="67.3" y="1459.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.3" y="1470.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="67.3" y="1443.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.3" y="1454.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="67.3" y="1427.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="70.3" y="1438.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.03%)</title><rect x="67.3" y="1411.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="70.3" y="1422.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="67.3" y="1395.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.3" y="1406.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="67.3" y="1379.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.3" y="1390.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="67.3" y="1363.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="70.3" y="1374.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="67.3" y="1347.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="70.3" y="1358.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="67.3" y="1331.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="70.3" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.32%)</title><rect x="67.7" y="1763.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="67.7" y="1747.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.29%)</title><rect x="68.0" y="1747.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="68.0" y="1731.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="68.0" y="1715.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.22%)</title><rect x="68.4" y="1731.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (6 samples, 0.19%)</title><rect x="68.8" y="1715.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.19%)</title><rect x="68.8" y="1699.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.03%)</title><rect x="69.2" y="1683.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.10%)</title><rect x="69.5" y="1683.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="69.5" y="1667.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.5" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="69.9" y="1667.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.9" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="69.9" y="1651.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.9" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/1706852430.run (1 samples, 0.03%)</title><rect x="69.9" y="1635.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.03%)</title><rect x="69.9" y="1619.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.9" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.03%)</title><rect x="70.3" y="1667.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="70.3" y="1651.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.3" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="70.3" y="1635.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.3" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="70.3" y="1619.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.03%)</title><rect x="70.7" y="1683.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.03%)</title><rect x="70.7" y="1667.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.7" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.03%)</title><rect x="70.7" y="1651.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.7" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="71.0" y="1731.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="71.0" y="1715.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="71.0" y="1699.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.0" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="71.4" y="1971.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.4" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="71.4" y="1955.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="71.4" y="1939.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.4" y="1950.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="71.4" y="1923.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="74.4" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (65 samples, 2.06%)</title><rect x="71.8" y="1971.0" width="24.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.8" y="1982.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.06%)</title><rect x="71.8" y="1955.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.8" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.06%)</title><rect x="71.8" y="1939.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="71.8" y="1923.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$162/766100649.apply (1 samples, 0.03%)</title><rect x="72.2" y="1923.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.2" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.03%)</title><rect x="72.2" y="1907.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="72.2" y="1891.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.2" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="72.2" y="1875.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.2" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="72.2" y="1859.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.10%)</title><rect x="72.5" y="1955.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.5" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.10%)</title><rect x="72.5" y="1939.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.5" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.06%)</title><rect x="72.5" y="1923.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.5" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="72.5" y="1907.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="72.5" y="1891.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.5" y="1902.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="72.5" y="1875.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="75.5" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/186376468.accept (1 samples, 0.03%)</title><rect x="72.9" y="1907.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.9" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.03%)</title><rect x="72.9" y="1891.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.9" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="73.3" y="1923.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.3" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="73.3" y="1907.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.3" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (60 samples, 1.90%)</title><rect x="73.7" y="1955.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.7" y="1966.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (60 samples, 1.90%)</title><rect x="73.7" y="1939.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.7" y="1950.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (59 samples, 1.87%)</title><rect x="73.7" y="1923.0" width="22.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.7" y="1934.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="73.7" y="1907.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.7" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="73.7" y="1891.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.7" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$141/840059808.get$Lambda (2 samples, 0.06%)</title><rect x="73.7" y="1875.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.7" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$141/840059808.&lt;init&gt; (2 samples, 0.06%)</title><rect x="73.7" y="1859.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.7" y="1870.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="74.0" y="1843.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.0" y="1854.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="74.4" y="1907.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.4" y="1918.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.03%)</title><rect x="74.8" y="1907.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.8" y="1918.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.03%)</title><rect x="74.8" y="1891.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.8" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.03%)</title><rect x="75.2" y="1907.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (4 samples, 0.13%)</title><rect x="75.5" y="1907.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.5" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (7 samples, 0.22%)</title><rect x="77.0" y="1907.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.0" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.10%)</title><rect x="77.8" y="1891.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.10%)</title><rect x="77.8" y="1875.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.03%)</title><rect x="77.8" y="1859.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.8" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$159/1610410133.get$Lambda (1 samples, 0.03%)</title><rect x="78.2" y="1859.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.2" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.get$Lambda (1 samples, 0.03%)</title><rect x="78.5" y="1859.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.5" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$159/1610410133.get$Lambda (1 samples, 0.03%)</title><rect x="78.9" y="1891.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="81.9" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.03%)</title><rect x="79.3" y="1891.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.3" y="1902.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="79.3" y="1875.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="82.3" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="79.3" y="1859.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="82.3" y="1870.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="79.3" y="1843.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="82.3" y="1854.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="79.3" y="1827.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="82.3" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.06%)</title><rect x="79.7" y="1907.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.7" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.03%)</title><rect x="80.0" y="1891.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (12 samples, 0.38%)</title><rect x="80.4" y="1907.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (8 samples, 0.25%)</title><rect x="80.4" y="1891.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.4" y="1902.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="80.4" y="1875.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="83.4" y="1886.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="80.4" y="1859.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="83.4" y="1870.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="80.4" y="1843.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="83.4" y="1854.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="80.4" y="1827.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="83.4" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (7 samples, 0.22%)</title><rect x="80.8" y="1875.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.8" y="1886.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="81.9" y="1859.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.9" y="1870.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="81.9" y="1843.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.03%)</title><rect x="81.9" y="1827.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.9" y="1838.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.03%)</title><rect x="81.9" y="1811.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.9" y="1822.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.03%)</title><rect x="81.9" y="1795.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.9" y="1806.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.03%)</title><rect x="81.9" y="1779.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.9" y="1790.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="82.3" y="1843.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.03%)</title><rect x="82.3" y="1827.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.3" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.06%)</title><rect x="82.6" y="1859.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.6" y="1870.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.06%)</title><rect x="82.6" y="1843.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.6" y="1854.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.06%)</title><rect x="82.6" y="1827.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.6" y="1838.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.06%)</title><rect x="82.6" y="1811.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.6" y="1822.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.06%)</title><rect x="82.6" y="1795.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.6" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (4 samples, 0.13%)</title><rect x="83.4" y="1891.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (29 samples, 0.92%)</title><rect x="84.9" y="1907.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.9" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/992802731.linkToTargetMethod (1 samples, 0.03%)</title><rect x="84.9" y="1891.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.9" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="84.9" y="1875.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.9" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (1 samples, 0.03%)</title><rect x="84.9" y="1859.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.9" y="1870.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (28 samples, 0.89%)</title><rect x="85.3" y="1891.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.3" y="1902.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (19 samples, 0.60%)</title><rect x="85.3" y="1875.0" width="7.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="88.3" y="1886.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="85.3" y="1859.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="88.3" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="85.6" y="1859.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="88.6" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.03%)</title><rect x="85.6" y="1843.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="88.6" y="1854.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="86.0" y="1859.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="89.0" y="1870.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.19%)</title><rect x="86.4" y="1859.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="89.4" y="1870.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.03%)</title><rect x="87.1" y="1843.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="90.1" y="1854.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="87.5" y="1843.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="90.5" y="1854.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="87.5" y="1827.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="90.5" y="1838.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.03%)</title><rect x="87.9" y="1843.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="90.9" y="1854.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="88.3" y="1843.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="91.3" y="1854.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="88.6" y="1859.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="91.6" y="1870.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="89.0" y="1859.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="92.0" y="1870.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.10%)</title><rect x="89.4" y="1859.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="92.4" y="1870.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="89.4" y="1843.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="92.4" y="1854.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.06%)</title><rect x="89.8" y="1843.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="92.8" y="1854.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="89.8" y="1827.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="92.8" y="1838.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="90.1" y="1811.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="93.1" y="1822.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.16%)</title><rect x="90.5" y="1859.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="93.5" y="1870.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.10%)</title><rect x="91.3" y="1843.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="94.3" y="1854.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="92.0" y="1827.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="95.0" y="1838.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="92.4" y="1875.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="95.4" y="1886.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.03%)</title><rect x="92.8" y="1875.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="95.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$143/1532545.run (6 samples, 0.19%)</title><rect x="93.1" y="1875.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.1" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (6 samples, 0.19%)</title><rect x="93.1" y="1859.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.1" y="1870.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.03%)</title><rect x="93.5" y="1843.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.5" y="1854.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (4 samples, 0.13%)</title><rect x="93.9" y="1843.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.9" y="1854.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (4 samples, 0.13%)</title><rect x="93.9" y="1827.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.9" y="1838.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.13%)</title><rect x="93.9" y="1811.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.9" y="1822.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.13%)</title><rect x="93.9" y="1795.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.9" y="1806.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.13%)</title><rect x="93.9" y="1779.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.9" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="94.3" y="1763.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="97.3" y="1774.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="94.3" y="1747.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="97.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.06%)</title><rect x="94.6" y="1763.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.6" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="94.6" y="1747.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.6" y="1758.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="95.4" y="1875.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="98.4" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="95.8" y="1923.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="95.8" y="1907.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="95.8" y="1891.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.8" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (47 samples, 1.49%)</title><rect x="96.1" y="2019.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.1" y="2030.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (3 samples, 0.10%)</title><rect x="96.1" y="2003.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.1" y="2014.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.10%)</title><rect x="96.1" y="1987.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.1" y="1998.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="96.1" y="1971.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.1" y="1982.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="96.1" y="1955.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.1" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="96.1" y="1939.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.1" y="1950.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="96.9" y="1971.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.9" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.03%)</title><rect x="96.9" y="1955.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.9" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (44 samples, 1.40%)</title><rect x="97.3" y="2003.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.3" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (44 samples, 1.40%)</title><rect x="97.3" y="1987.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.3" y="1998.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (42 samples, 1.33%)</title><rect x="98.0" y="1971.0" width="15.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.0" y="1982.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.30%)</title><rect x="98.0" y="1955.0" width="15.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="101.0" y="1966.0"></text>
</g>
<g>
<title>__GI_write (41 samples, 1.30%)</title><rect x="98.0" y="1939.0" width="15.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="101.0" y="1950.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.30%)</title><rect x="98.0" y="1923.0" width="15.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.0" y="1934.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 1.30%)</title><rect x="98.0" y="1907.0" width="15.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.0" y="1918.0"></text>
</g>
<g>
<title>__x64_sys_write (38 samples, 1.21%)</title><rect x="99.1" y="1891.0" width="14.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="102.1" y="1902.0"></text>
</g>
<g>
<title>ksys_write (38 samples, 1.21%)</title><rect x="99.1" y="1875.0" width="14.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="102.1" y="1886.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="99.5" y="1859.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="102.5" y="1870.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="99.5" y="1843.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.5" y="1854.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="99.9" y="1859.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="102.9" y="1870.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.03%)</title><rect x="100.3" y="1859.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="103.3" y="1870.0"></text>
</g>
<g>
<title>vfs_write (34 samples, 1.08%)</title><rect x="100.6" y="1859.0" width="12.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="103.6" y="1870.0"></text>
</g>
<g>
<title>__vfs_write (30 samples, 0.95%)</title><rect x="100.6" y="1843.0" width="11.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.6" y="1854.0"></text>
</g>
<g>
<title>new_sync_write (29 samples, 0.92%)</title><rect x="101.0" y="1827.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.0" y="1838.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="101.4" y="1811.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.4" y="1822.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="101.7" y="1811.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="104.7" y="1822.0"></text>
</g>
<g>
<title>kill_fasync (3 samples, 0.10%)</title><rect x="102.1" y="1811.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="105.1" y="1822.0"></text>
</g>
<g>
<title>pipe_write (23 samples, 0.73%)</title><rect x="103.2" y="1811.0" width="8.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.2" y="1822.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 0.73%)</title><rect x="103.2" y="1795.0" width="8.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="106.2" y="1806.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 0.73%)</title><rect x="103.2" y="1779.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="106.2" y="1790.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.73%)</title><rect x="103.2" y="1763.0" width="8.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.2" y="1774.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="111.9" y="1843.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="114.9" y="1854.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.10%)</title><rect x="112.2" y="1843.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.2" y="1854.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.06%)</title><rect x="112.6" y="1827.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.6" y="1838.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.06%)</title><rect x="112.6" y="1811.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.6" y="1822.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.06%)</title><rect x="112.6" y="1795.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.6" y="1806.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.03%)</title><rect x="113.4" y="1955.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="116.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.03%)</title><rect x="113.7" y="2019.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.7" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (7 samples, 0.22%)</title><rect x="114.1" y="2019.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.1" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (7 samples, 0.22%)</title><rect x="114.1" y="2003.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.1" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.19%)</title><rect x="114.5" y="1987.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.5" y="1998.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (4 samples, 0.13%)</title><rect x="115.2" y="1971.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.2" y="1982.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.03%)</title><rect x="115.2" y="1955.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.2" y="1966.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.03%)</title><rect x="115.2" y="1939.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.03%)</title><rect x="115.2" y="1923.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.2" y="1934.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.10%)</title><rect x="115.6" y="1955.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.6" y="1966.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.10%)</title><rect x="115.6" y="1939.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.6" y="1950.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="115.6" y="1923.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="118.6" y="1934.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.06%)</title><rect x="116.0" y="1923.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="119.0" y="1934.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="116.4" y="1907.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="119.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (6 samples, 0.19%)</title><rect x="116.7" y="2019.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.7" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (6 samples, 0.19%)</title><rect x="116.7" y="2003.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.7" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (4 samples, 0.13%)</title><rect x="117.5" y="1987.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.5" y="1998.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.03%)</title><rect x="117.5" y="1971.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.5" y="1982.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.03%)</title><rect x="117.5" y="1955.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="117.5" y="1939.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.5" y="1950.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.10%)</title><rect x="117.9" y="1971.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.9" y="1982.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (3 samples, 0.10%)</title><rect x="117.9" y="1955.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.9" y="1966.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.10%)</title><rect x="117.9" y="1939.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.9" y="1950.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.10%)</title><rect x="117.9" y="1923.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.9" y="1934.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.10%)</title><rect x="117.9" y="1907.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.9" y="1918.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.10%)</title><rect x="117.9" y="1891.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.9" y="1902.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.10%)</title><rect x="117.9" y="1875.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.9" y="1886.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.10%)</title><rect x="117.9" y="1859.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$131/1457512751.get (1 samples, 0.03%)</title><rect x="119.0" y="2083.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.0" y="2094.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="119.3" y="2083.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="122.3" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (109 samples, 3.46%)</title><rect x="119.7" y="2115.0" width="40.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.7" y="2126.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (104 samples, 3.30%)</title><rect x="121.6" y="2099.0" width="38.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.6" y="2110.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (90 samples, 2.86%)</title><rect x="121.6" y="2083.0" width="33.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.6" y="2094.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.03%)</title><rect x="122.0" y="2067.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.0" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="122.3" y="2067.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.3" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.03%)</title><rect x="122.7" y="2067.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.7" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="122.7" y="2051.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.7" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.06%)</title><rect x="123.1" y="2067.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.1" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (84 samples, 2.67%)</title><rect x="123.8" y="2067.0" width="31.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="126.8" y="2078.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (84 samples, 2.67%)</title><rect x="123.8" y="2051.0" width="31.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.8" y="2062.0">jd..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.06%)</title><rect x="124.2" y="2035.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="127.2" y="2046.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="125.0" y="2035.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="128.0" y="2046.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="125.3" y="2035.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="128.3" y="2046.0"></text>
</g>
<g>
<title>Unsafe_Park (40 samples, 1.27%)</title><rect x="125.7" y="2035.0" width="15.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="128.7" y="2046.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.13%)</title><rect x="126.8" y="2019.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="129.8" y="2030.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="128.3" y="2019.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="131.3" y="2030.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.13%)</title><rect x="128.7" y="2019.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="131.7" y="2030.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="129.1" y="2003.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="132.1" y="2014.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="129.5" y="2003.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="132.5" y="2014.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="129.5" y="1987.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="132.5" y="1998.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="129.5" y="1971.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="132.5" y="1982.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="129.5" y="1955.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.5" y="1966.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="129.5" y="1939.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="132.5" y="1950.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="129.5" y="1923.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="132.5" y="1934.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="129.5" y="1907.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="132.5" y="1918.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="129.5" y="1891.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="132.5" y="1902.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="129.8" y="2003.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="132.8" y="2014.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="130.2" y="2019.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="133.2" y="2030.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="130.6" y="2019.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="133.6" y="2030.0"></text>
</g>
<g>
<title>__lll_unlock_wake (14 samples, 0.44%)</title><rect x="131.0" y="2019.0" width="5.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="134.0" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.35%)</title><rect x="132.1" y="2003.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="135.1" y="2014.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="132.1" y="1987.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="135.1" y="1998.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.32%)</title><rect x="132.5" y="1987.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="135.5" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="134.7" y="1971.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="137.7" y="1982.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="134.7" y="1955.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.7" y="1966.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="134.7" y="1939.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="137.7" y="1950.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.06%)</title><rect x="134.7" y="1923.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.7" y="1934.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="135.1" y="1907.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.1" y="1918.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="135.5" y="1971.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="138.5" y="1982.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="136.2" y="2019.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="139.2" y="2030.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="136.6" y="2019.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="139.6" y="2030.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.06%)</title><rect x="137.0" y="2019.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="140.0" y="2030.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="137.7" y="2019.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="140.7" y="2030.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.16%)</title><rect x="138.1" y="2019.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="141.1" y="2030.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="139.6" y="2003.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="142.6" y="2014.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="139.6" y="1987.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.6" y="1998.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="139.6" y="1971.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="142.6" y="1982.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="139.6" y="1955.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="142.6" y="1966.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="139.6" y="1939.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="142.6" y="1950.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="139.6" y="1923.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="142.6" y="1934.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="139.6" y="1907.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="142.6" y="1918.0"></text>
</g>
<g>
<title>free_task (1 samples, 0.03%)</title><rect x="139.6" y="1891.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="142.6" y="1902.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="139.6" y="1875.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="142.6" y="1886.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="139.6" y="1859.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="142.6" y="1870.0"></text>
</g>
<g>
<title>discard_slab (1 samples, 0.03%)</title><rect x="139.6" y="1843.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="142.6" y="1854.0"></text>
</g>
<g>
<title>__free_slab (1 samples, 0.03%)</title><rect x="139.6" y="1827.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="142.6" y="1838.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.06%)</title><rect x="139.9" y="2019.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="142.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.24%)</title><rect x="140.7" y="2035.0" width="14.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="143.7" y="2046.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.03%)</title><rect x="140.7" y="2019.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="143.7" y="2030.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="141.1" y="2019.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="144.1" y="2030.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.06%)</title><rect x="141.8" y="2019.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="144.8" y="2030.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.06%)</title><rect x="142.6" y="2019.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="145.6" y="2030.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (32 samples, 1.02%)</title><rect x="143.3" y="2019.0" width="12.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="146.3" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.57%)</title><rect x="148.6" y="2003.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.6" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.57%)</title><rect x="148.6" y="1987.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="151.6" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.44%)</title><rect x="150.1" y="1971.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.1" y="1982.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.41%)</title><rect x="150.4" y="1955.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="153.4" y="1966.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.32%)</title><rect x="151.2" y="1939.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.2" y="1950.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.10%)</title><rect x="151.6" y="1923.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="154.6" y="1934.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.10%)</title><rect x="151.6" y="1907.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.6" y="1918.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.10%)</title><rect x="151.6" y="1891.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.6" y="1902.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.10%)</title><rect x="151.6" y="1875.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="154.6" y="1886.0"></text>
</g>
<g>
<title>put_task_stack (1 samples, 0.03%)</title><rect x="152.3" y="1859.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.3" y="1870.0"></text>
</g>
<g>
<title>vfree_atomic (1 samples, 0.03%)</title><rect x="152.3" y="1843.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="155.3" y="1854.0"></text>
</g>
<g>
<title>queue_work_on (1 samples, 0.03%)</title><rect x="152.3" y="1827.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="155.3" y="1838.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.10%)</title><rect x="152.7" y="1923.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.7" y="1934.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.06%)</title><rect x="153.1" y="1907.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="156.1" y="1918.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="153.8" y="1923.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="156.8" y="1934.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="154.2" y="1923.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="157.2" y="1934.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="154.6" y="1923.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="157.6" y="1934.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="154.9" y="1939.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.9" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.44%)</title><rect x="155.3" y="2083.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.3" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.44%)</title><rect x="155.3" y="2067.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.3" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.41%)</title><rect x="155.7" y="2051.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.7" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.41%)</title><rect x="155.7" y="2035.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.7" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.41%)</title><rect x="155.7" y="2019.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.7" y="2030.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="155.7" y="2003.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="158.7" y="2014.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="156.0" y="2003.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="159.0" y="2014.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="156.4" y="2003.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="159.4" y="2014.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="156.8" y="1987.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="159.8" y="1998.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="156.8" y="1971.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="159.8" y="1982.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="156.8" y="1955.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="159.8" y="1966.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="156.8" y="1939.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="159.8" y="1950.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="156.8" y="1923.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="159.8" y="1934.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="156.8" y="1907.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="159.8" y="1918.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="156.8" y="1891.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.8" y="1902.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="157.2" y="1987.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="160.2" y="1998.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.25%)</title><rect x="157.5" y="2003.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="160.5" y="2014.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.25%)</title><rect x="157.5" y="1987.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="160.5" y="1998.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.25%)</title><rect x="157.5" y="1971.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="160.5" y="1982.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.25%)</title><rect x="157.5" y="1955.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="160.5" y="1966.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.25%)</title><rect x="157.5" y="1939.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="160.5" y="1950.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.25%)</title><rect x="157.5" y="1923.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.5" y="1934.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.25%)</title><rect x="157.5" y="1907.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="160.5" y="1918.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="157.5" y="1891.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="160.5" y="1902.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.22%)</title><rect x="157.9" y="1891.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="160.9" y="1902.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.22%)</title><rect x="157.9" y="1875.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.9" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$190/680108995.run (167 samples, 5.30%)</title><rect x="160.5" y="2115.0" width="62.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.5" y="2126.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (167 samples, 5.30%)</title><rect x="160.5" y="2099.0" width="62.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.5" y="2110.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (167 samples, 5.30%)</title><rect x="160.5" y="2083.0" width="62.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.5" y="2094.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (160 samples, 5.08%)</title><rect x="163.2" y="2067.0" width="59.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.2" y="2078.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (160 samples, 5.08%)</title><rect x="163.2" y="2051.0" width="59.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.2" y="2062.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (160 samples, 5.08%)</title><rect x="163.2" y="2035.0" width="59.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.2" y="2046.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (160 samples, 5.08%)</title><rect x="163.2" y="2019.0" width="59.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.2" y="2030.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (160 samples, 5.08%)</title><rect x="163.2" y="2003.0" width="59.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.2" y="2014.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (160 samples, 5.08%)</title><rect x="163.2" y="1987.0" width="59.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.2" y="1998.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="163.2" y="1971.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.2" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="163.2" y="1955.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.2" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (159 samples, 5.05%)</title><rect x="163.5" y="1971.0" width="59.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.5" y="1982.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (159 samples, 5.05%)</title><rect x="163.5" y="1955.0" width="59.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.5" y="1966.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (29 samples, 0.92%)</title><rect x="163.5" y="1939.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.5" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (19 samples, 0.60%)</title><rect x="164.7" y="1923.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.7" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.60%)</title><rect x="164.7" y="1907.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.7" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (19 samples, 0.60%)</title><rect x="164.7" y="1891.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.7" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.60%)</title><rect x="164.7" y="1875.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="167.7" y="1886.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="165.0" y="1859.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="168.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.25%)</title><rect x="165.8" y="1859.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.8" y="1870.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="166.2" y="1843.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="169.2" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="166.2" y="1827.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="169.2" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="166.5" y="1843.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.5" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="166.5" y="1827.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.5" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/659260885.apply (5 samples, 0.16%)</title><rect x="166.9" y="1843.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.16%)</title><rect x="166.9" y="1827.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.13%)</title><rect x="167.3" y="1811.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.3" y="1822.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.06%)</title><rect x="167.3" y="1795.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.3" y="1806.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.06%)</title><rect x="167.3" y="1779.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.03%)</title><rect x="168.0" y="1795.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.0" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="168.0" y="1779.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.0" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="168.0" y="1763.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/498747434.get$Lambda (1 samples, 0.03%)</title><rect x="168.0" y="1747.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (1 samples, 0.03%)</title><rect x="168.4" y="1795.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.4" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.16%)</title><rect x="168.8" y="1859.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5 samples, 0.16%)</title><rect x="168.8" y="1843.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="168.8" y="1827.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$182/511051166.apply (1 samples, 0.03%)</title><rect x="168.8" y="1811.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$182/511051166.apply (4 samples, 0.13%)</title><rect x="169.2" y="1827.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.2" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.13%)</title><rect x="169.2" y="1811.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.13%)</title><rect x="169.2" y="1795.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/912003413.apply (3 samples, 0.10%)</title><rect x="169.2" y="1779.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.10%)</title><rect x="169.2" y="1763.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.2" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="169.2" y="1747.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.2" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="169.2" y="1731.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.2" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="169.2" y="1715.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.06%)</title><rect x="169.5" y="1747.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.5" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.03%)</title><rect x="169.5" y="1731.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.5" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.03%)</title><rect x="169.5" y="1715.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.5" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.03%)</title><rect x="169.5" y="1699.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.5" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$194/1211410956.accept (1 samples, 0.03%)</title><rect x="169.5" y="1683.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.03%)</title><rect x="169.5" y="1667.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.5" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.03%)</title><rect x="169.5" y="1651.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.5" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.03%)</title><rect x="169.5" y="1635.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.5" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="169.5" y="1619.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.5" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="169.5" y="1603.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.5" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.03%)</title><rect x="169.5" y="1587.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.03%)</title><rect x="169.9" y="1731.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.9" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.03%)</title><rect x="169.9" y="1715.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.9" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1 samples, 0.03%)</title><rect x="169.9" y="1699.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.9" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/885247476.apply (1 samples, 0.03%)</title><rect x="170.3" y="1779.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.03%)</title><rect x="170.3" y="1763.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$202/993203830.get (1 samples, 0.03%)</title><rect x="170.7" y="1859.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.7" y="1870.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.06%)</title><rect x="171.0" y="1859.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="174.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (4 samples, 0.13%)</title><rect x="171.8" y="1923.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.8" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.03%)</title><rect x="172.9" y="1907.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.9" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.03%)</title><rect x="172.9" y="1891.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.9" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (1 samples, 0.03%)</title><rect x="172.9" y="1875.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.06%)</title><rect x="173.3" y="1923.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.3" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="174.0" y="1923.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="174.0" y="1907.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (130 samples, 4.13%)</title><rect x="174.4" y="1939.0" width="48.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.4" y="1950.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (130 samples, 4.13%)</title><rect x="174.4" y="1923.0" width="48.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.4" y="1934.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (130 samples, 4.13%)</title><rect x="174.4" y="1907.0" width="48.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.4" y="1918.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2 samples, 0.06%)</title><rect x="174.4" y="1891.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (128 samples, 4.06%)</title><rect x="175.1" y="1891.0" width="48.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.1" y="1902.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$199/1203950755.run (3 samples, 0.10%)</title><rect x="175.9" y="1875.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.9" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.10%)</title><rect x="175.9" y="1859.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.06%)</title><rect x="176.3" y="1843.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.03%)</title><rect x="176.6" y="1827.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (123 samples, 3.90%)</title><rect x="177.0" y="1875.0" width="46.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.0" y="1886.0">jdk/..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (115 samples, 3.65%)</title><rect x="177.4" y="1859.0" width="43.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.4" y="1870.0">java..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (115 samples, 3.65%)</title><rect x="177.4" y="1843.0" width="43.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.4" y="1854.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (115 samples, 3.65%)</title><rect x="177.4" y="1827.0" width="43.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.4" y="1838.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (115 samples, 3.65%)</title><rect x="177.4" y="1811.0" width="43.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.4" y="1822.0">sun/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.10%)</title><rect x="177.4" y="1795.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.4" y="1806.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.10%)</title><rect x="177.4" y="1779.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.4" y="1790.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (3 samples, 0.10%)</title><rect x="177.4" y="1763.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.4" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (112 samples, 3.55%)</title><rect x="178.5" y="1795.0" width="42.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.5" y="1806.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (110 samples, 3.49%)</title><rect x="179.3" y="1779.0" width="41.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.3" y="1790.0">sun..</text>
</g>
<g>
<title>[unknown] (109 samples, 3.46%)</title><rect x="179.3" y="1763.0" width="40.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="182.3" y="1774.0">[un..</text>
</g>
<g>
<title>[unknown] (109 samples, 3.46%)</title><rect x="179.3" y="1747.0" width="40.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="182.3" y="1758.0">[un..</text>
</g>
<g>
<title>__GI___writev (108 samples, 3.43%)</title><rect x="179.3" y="1731.0" width="40.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="182.3" y="1742.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 3.36%)</title><rect x="180.0" y="1715.0" width="39.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="183.0" y="1726.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (106 samples, 3.36%)</title><rect x="180.0" y="1699.0" width="39.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="183.0" y="1710.0">do_..</text>
</g>
<g>
<title>__x64_sys_writev (103 samples, 3.27%)</title><rect x="181.1" y="1683.0" width="38.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="184.1" y="1694.0">__x..</text>
</g>
<g>
<title>do_writev (103 samples, 3.27%)</title><rect x="181.1" y="1667.0" width="38.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="184.1" y="1678.0">do_..</text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.19%)</title><rect x="181.5" y="1651.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="184.5" y="1662.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.19%)</title><rect x="181.5" y="1635.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.5" y="1646.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.19%)</title><rect x="181.5" y="1619.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.5" y="1630.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="183.8" y="1651.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="186.8" y="1662.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="184.1" y="1651.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="187.1" y="1662.0"></text>
</g>
<g>
<title>vfs_writev (94 samples, 2.98%)</title><rect x="184.5" y="1651.0" width="35.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.5" y="1662.0">vfs..</text>
</g>
<g>
<title>do_iter_write (88 samples, 2.79%)</title><rect x="185.6" y="1635.0" width="33.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.6" y="1646.0">do..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="185.6" y="1619.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.6" y="1630.0"></text>
</g>
<g>
<title>do_iter_readv_writev (83 samples, 2.63%)</title><rect x="186.0" y="1619.0" width="31.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="189.0" y="1630.0">do..</text>
</g>
<g>
<title>sock_write_iter (82 samples, 2.60%)</title><rect x="186.4" y="1603.0" width="30.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="189.4" y="1614.0">so..</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.03%)</title><rect x="186.8" y="1587.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="189.8" y="1598.0"></text>
</g>
<g>
<title>sock_sendmsg (80 samples, 2.54%)</title><rect x="187.1" y="1587.0" width="30.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="190.1" y="1598.0">so..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="187.1" y="1571.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="190.1" y="1582.0"></text>
</g>
<g>
<title>inet_sendmsg (79 samples, 2.51%)</title><rect x="187.5" y="1571.0" width="29.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="190.5" y="1582.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (79 samples, 2.51%)</title><rect x="187.5" y="1555.0" width="29.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="190.5" y="1566.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (78 samples, 2.48%)</title><rect x="187.5" y="1539.0" width="29.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="190.5" y="1550.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="189.0" y="1523.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="192.0" y="1534.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="189.0" y="1507.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="192.0" y="1518.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.19%)</title><rect x="189.4" y="1523.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="192.4" y="1534.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.19%)</title><rect x="189.4" y="1507.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="192.4" y="1518.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.13%)</title><rect x="189.8" y="1491.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="192.8" y="1502.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.13%)</title><rect x="189.8" y="1475.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="192.8" y="1486.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="190.1" y="1459.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.1" y="1470.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.06%)</title><rect x="190.5" y="1459.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.5" y="1470.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="191.3" y="1491.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="194.3" y="1502.0"></text>
</g>
<g>
<title>tcp_push (64 samples, 2.03%)</title><rect x="191.6" y="1523.0" width="24.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="194.6" y="1534.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (63 samples, 2.00%)</title><rect x="192.0" y="1507.0" width="23.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.0" y="1518.0">_..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.06%)</title><rect x="192.0" y="1491.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="195.0" y="1502.0"></text>
</g>
<g>
<title>tcp_write_xmit (61 samples, 1.94%)</title><rect x="192.7" y="1491.0" width="22.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="195.7" y="1502.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (50 samples, 1.59%)</title><rect x="193.9" y="1475.0" width="18.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.9" y="1486.0"></text>
</g>
<g>
<title>ip_queue_xmit (46 samples, 1.46%)</title><rect x="195.0" y="1459.0" width="17.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="198.0" y="1470.0"></text>
</g>
<g>
<title>__ip_queue_xmit (45 samples, 1.43%)</title><rect x="195.0" y="1443.0" width="16.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="198.0" y="1454.0"></text>
</g>
<g>
<title>ip_local_out (44 samples, 1.40%)</title><rect x="195.4" y="1427.0" width="16.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="198.4" y="1438.0"></text>
</g>
<g>
<title>ip_output (42 samples, 1.33%)</title><rect x="195.7" y="1411.0" width="15.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="198.7" y="1422.0"></text>
</g>
<g>
<title>ip_finish_output (42 samples, 1.33%)</title><rect x="195.7" y="1395.0" width="15.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="198.7" y="1406.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="196.1" y="1379.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.1" y="1390.0"></text>
</g>
<g>
<title>ip_finish_output2 (40 samples, 1.27%)</title><rect x="196.5" y="1379.0" width="15.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="199.5" y="1390.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (37 samples, 1.17%)</title><rect x="196.5" y="1363.0" width="13.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="199.5" y="1374.0"></text>
</g>
<g>
<title>do_softirq.part.21 (37 samples, 1.17%)</title><rect x="196.5" y="1347.0" width="13.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.5" y="1358.0"></text>
</g>
<g>
<title>do_softirq_own_stack (36 samples, 1.14%)</title><rect x="196.9" y="1331.0" width="13.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="199.9" y="1342.0"></text>
</g>
<g>
<title>__softirqentry_text_start (36 samples, 1.14%)</title><rect x="196.9" y="1315.0" width="13.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="199.9" y="1326.0"></text>
</g>
<g>
<title>net_rx_action (35 samples, 1.11%)</title><rect x="197.2" y="1299.0" width="13.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="200.2" y="1310.0"></text>
</g>
<g>
<title>process_backlog (33 samples, 1.05%)</title><rect x="198.0" y="1283.0" width="12.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="201.0" y="1294.0"></text>
</g>
<g>
<title>__netif_receive_skb (33 samples, 1.05%)</title><rect x="198.0" y="1267.0" width="12.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="201.0" y="1278.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (33 samples, 1.05%)</title><rect x="198.0" y="1251.0" width="12.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="201.0" y="1262.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="198.0" y="1235.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.0" y="1246.0"></text>
</g>
<g>
<title>ip_rcv (31 samples, 0.98%)</title><rect x="198.4" y="1235.0" width="11.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.4" y="1246.0"></text>
</g>
<g>
<title>ip_rcv_finish (30 samples, 0.95%)</title><rect x="198.7" y="1219.0" width="11.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="201.7" y="1230.0"></text>
</g>
<g>
<title>ip_local_deliver (30 samples, 0.95%)</title><rect x="198.7" y="1203.0" width="11.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.7" y="1214.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (30 samples, 0.95%)</title><rect x="198.7" y="1187.0" width="11.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.7" y="1198.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 0.95%)</title><rect x="198.7" y="1171.0" width="11.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="201.7" y="1182.0"></text>
</g>
<g>
<title>tcp_v4_rcv (30 samples, 0.95%)</title><rect x="198.7" y="1155.0" width="11.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="201.7" y="1166.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="199.1" y="1139.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="202.1" y="1150.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="199.5" y="1139.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="202.5" y="1150.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="199.5" y="1123.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.5" y="1134.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 0.86%)</title><rect x="199.9" y="1139.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="202.9" y="1150.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="199.9" y="1123.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.9" y="1134.0"></text>
</g>
<g>
<title>tcp_rcv_established (26 samples, 0.83%)</title><rect x="200.2" y="1123.0" width="9.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="203.2" y="1134.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.06%)</title><rect x="201.0" y="1107.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="204.0" y="1118.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.06%)</title><rect x="201.0" y="1091.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.0" y="1102.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="201.0" y="1075.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="204.0" y="1086.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="201.0" y="1059.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="204.0" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="201.0" y="1043.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="204.0" y="1054.0"></text>
</g>
<g>
<title>sock_def_readable (21 samples, 0.67%)</title><rect x="201.7" y="1107.0" width="7.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.7" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 0.63%)</title><rect x="202.1" y="1091.0" width="7.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.1" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.63%)</title><rect x="202.1" y="1075.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="205.1" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.63%)</title><rect x="202.1" y="1059.0" width="7.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.1" y="1070.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="209.6" y="1107.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="212.6" y="1118.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="210.0" y="1235.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="213.0" y="1246.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.10%)</title><rect x="210.3" y="1363.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="213.3" y="1374.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.10%)</title><rect x="210.3" y="1347.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="213.3" y="1358.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.06%)</title><rect x="210.3" y="1331.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.3" y="1342.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.06%)</title><rect x="210.3" y="1315.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="213.3" y="1326.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.06%)</title><rect x="210.3" y="1299.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="213.3" y="1310.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.06%)</title><rect x="210.3" y="1283.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="213.3" y="1294.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.06%)</title><rect x="210.3" y="1267.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.3" y="1278.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="211.1" y="1331.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.1" y="1342.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="211.5" y="1411.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.5" y="1422.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="211.8" y="1443.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="214.8" y="1454.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="212.2" y="1459.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="215.2" y="1470.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="212.6" y="1475.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="215.6" y="1486.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="212.6" y="1459.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.6" y="1470.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="213.0" y="1475.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="216.0" y="1486.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.16%)</title><rect x="213.3" y="1475.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.3" y="1486.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="214.1" y="1459.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.1" y="1470.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.06%)</title><rect x="214.5" y="1459.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="217.5" y="1470.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="214.8" y="1443.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="217.8" y="1454.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="214.8" y="1427.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="217.8" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="214.8" y="1411.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.8" y="1422.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="215.2" y="1475.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="218.2" y="1486.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="215.6" y="1523.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="218.6" y="1534.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.06%)</title><rect x="216.0" y="1523.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="219.0" y="1534.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.06%)</title><rect x="216.0" y="1507.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="219.0" y="1518.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="216.3" y="1491.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="219.3" y="1502.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="216.7" y="1539.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.7" y="1550.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.13%)</title><rect x="217.1" y="1619.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="220.1" y="1630.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.06%)</title><rect x="217.8" y="1603.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="220.8" y="1614.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.06%)</title><rect x="217.8" y="1587.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="220.8" y="1598.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.06%)</title><rect x="217.8" y="1571.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="220.8" y="1582.0"></text>
</g>
<g>
<title>import_iovec (2 samples, 0.06%)</title><rect x="218.6" y="1635.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="221.6" y="1646.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.06%)</title><rect x="218.6" y="1619.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="221.6" y="1630.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="218.6" y="1603.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="221.6" y="1614.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="219.0" y="1603.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.0" y="1614.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="219.3" y="1635.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="222.3" y="1646.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="219.7" y="1731.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="222.7" y="1742.0"></text>
</g>
<g>
<title>__GI___writev (1 samples, 0.03%)</title><rect x="220.1" y="1763.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="223.1" y="1774.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.22%)</title><rect x="220.5" y="1859.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.5" y="1870.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.03%)</title><rect x="222.3" y="1843.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.3" y="1854.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.03%)</title><rect x="222.7" y="1843.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.7" y="1854.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.03%)</title><rect x="222.7" y="1827.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.7" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (864 samples, 27.42%)</title><rect x="223.1" y="2115.0" width="323.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.1" y="2126.0">jdk/internal/net/http/common/SequentialSched..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (862 samples, 27.36%)</title><rect x="223.8" y="2099.0" width="322.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.8" y="2110.0">jdk/internal/net/http/common/SequentialSched..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.10%)</title><rect x="225.0" y="2083.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.0" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.06%)</title><rect x="226.1" y="2083.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.1" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (202 samples, 6.41%)</title><rect x="226.8" y="2083.0" width="75.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.8" y="2094.0">jdk/inte..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="226.8" y="2067.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="229.8" y="2078.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="226.8" y="2051.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="229.8" y="2062.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="226.8" y="2035.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="229.8" y="2046.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="226.8" y="2019.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="229.8" y="2030.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="226.8" y="2003.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="229.8" y="2014.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="226.8" y="1987.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="229.8" y="1998.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="226.8" y="1971.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="229.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (201 samples, 6.38%)</title><rect x="227.2" y="2067.0" width="75.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.2" y="2078.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (200 samples, 6.35%)</title><rect x="227.6" y="2051.0" width="74.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.6" y="2062.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (45 samples, 1.43%)</title><rect x="227.9" y="2035.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.9" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (45 samples, 1.43%)</title><rect x="227.9" y="2019.0" width="16.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.9" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (45 samples, 1.43%)</title><rect x="227.9" y="2003.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.9" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (45 samples, 1.43%)</title><rect x="227.9" y="1987.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.9" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1800031768.linkToTargetMethod (3 samples, 0.10%)</title><rect x="228.7" y="1971.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.7" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1344199921.invoke (3 samples, 0.10%)</title><rect x="228.7" y="1955.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.7" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.10%)</title><rect x="228.7" y="1939.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.10%)</title><rect x="228.7" y="1923.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.7" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.10%)</title><rect x="228.7" y="1907.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.7" y="1918.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="229.1" y="1891.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="232.1" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.03%)</title><rect x="229.4" y="1891.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (40 samples, 1.27%)</title><rect x="229.8" y="1971.0" width="15.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (40 samples, 1.27%)</title><rect x="229.8" y="1955.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.8" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (40 samples, 1.27%)</title><rect x="229.8" y="1939.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.8" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (40 samples, 1.27%)</title><rect x="229.8" y="1923.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="232.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (40 samples, 1.27%)</title><rect x="229.8" y="1907.0" width="15.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.8" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (39 samples, 1.24%)</title><rect x="230.2" y="1891.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.2" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (38 samples, 1.21%)</title><rect x="230.6" y="1875.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.6" y="1886.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (2 samples, 0.06%)</title><rect x="231.3" y="1859.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="234.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.08%)</title><rect x="232.1" y="1859.0" width="12.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="235.1" y="1870.0"></text>
</g>
<g>
<title>__GI_write (34 samples, 1.08%)</title><rect x="232.1" y="1843.0" width="12.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="235.1" y="1854.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.05%)</title><rect x="232.4" y="1827.0" width="12.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.4" y="1838.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="232.4" y="1811.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="235.4" y="1822.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.02%)</title><rect x="232.8" y="1811.0" width="12.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.8" y="1822.0"></text>
</g>
<g>
<title>__x64_sys_write (31 samples, 0.98%)</title><rect x="233.2" y="1795.0" width="11.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="236.2" y="1806.0"></text>
</g>
<g>
<title>ksys_write (31 samples, 0.98%)</title><rect x="233.2" y="1779.0" width="11.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="236.2" y="1790.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.06%)</title><rect x="233.2" y="1763.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="236.2" y="1774.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="233.2" y="1747.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="236.2" y="1758.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="233.2" y="1731.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="236.2" y="1742.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="233.9" y="1763.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="236.9" y="1774.0"></text>
</g>
<g>
<title>vfs_write (28 samples, 0.89%)</title><rect x="234.3" y="1763.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="237.3" y="1774.0"></text>
</g>
<g>
<title>__vfs_write (28 samples, 0.89%)</title><rect x="234.3" y="1747.0" width="10.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.3" y="1758.0"></text>
</g>
<g>
<title>new_sync_write (28 samples, 0.89%)</title><rect x="234.3" y="1731.0" width="10.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="237.3" y="1742.0"></text>
</g>
<g>
<title>pipe_write (27 samples, 0.86%)</title><rect x="234.7" y="1715.0" width="10.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="237.7" y="1726.0"></text>
</g>
<g>
<title>__wake_up_sync_key (22 samples, 0.70%)</title><rect x="235.1" y="1699.0" width="8.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="238.1" y="1710.0"></text>
</g>
<g>
<title>__wake_up_common_lock (22 samples, 0.70%)</title><rect x="235.1" y="1683.0" width="8.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="238.1" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.70%)</title><rect x="235.1" y="1667.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="238.1" y="1678.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="243.3" y="1699.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.3" y="1710.0"></text>
</g>
<g>
<title>copy_page_from_iter (3 samples, 0.10%)</title><rect x="243.7" y="1699.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="246.7" y="1710.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="243.7" y="1683.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="246.7" y="1694.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.06%)</title><rect x="244.1" y="1683.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="247.1" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="244.8" y="2035.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.03%)</title><rect x="245.2" y="2035.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="248.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.03%)</title><rect x="245.6" y="2035.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.6" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.03%)</title><rect x="245.6" y="2019.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.6" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.03%)</title><rect x="245.6" y="2003.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.6" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.03%)</title><rect x="245.6" y="1987.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.6" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (151 samples, 4.79%)</title><rect x="245.9" y="2035.0" width="56.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.9" y="2046.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (151 samples, 4.79%)</title><rect x="245.9" y="2019.0" width="56.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.9" y="2030.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (151 samples, 4.79%)</title><rect x="245.9" y="2003.0" width="56.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.9" y="2014.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (151 samples, 4.79%)</title><rect x="245.9" y="1987.0" width="56.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.9" y="1998.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (87 samples, 2.76%)</title><rect x="245.9" y="1971.0" width="32.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.9" y="1982.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (87 samples, 2.76%)</title><rect x="245.9" y="1955.0" width="32.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.9" y="1966.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (87 samples, 2.76%)</title><rect x="245.9" y="1939.0" width="32.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.9" y="1950.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (87 samples, 2.76%)</title><rect x="245.9" y="1923.0" width="32.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.9" y="1934.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (86 samples, 2.73%)</title><rect x="246.3" y="1907.0" width="32.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.3" y="1918.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (85 samples, 2.70%)</title><rect x="246.3" y="1891.0" width="31.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.3" y="1902.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (85 samples, 2.70%)</title><rect x="246.3" y="1875.0" width="31.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.3" y="1886.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.16%)</title><rect x="246.3" y="1859.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.3" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (80 samples, 2.54%)</title><rect x="248.2" y="1859.0" width="29.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.2" y="1870.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (77 samples, 2.44%)</title><rect x="249.3" y="1843.0" width="28.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.3" y="1854.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (67 samples, 2.13%)</title><rect x="249.7" y="1827.0" width="25.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.7" y="1838.0">j..</text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="250.4" y="1811.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="253.4" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.13%)</title><rect x="251.5" y="1811.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.5" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.13%)</title><rect x="251.5" y="1795.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.5" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="252.7" y="1779.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.7" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.03%)</title><rect x="252.7" y="1763.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.7" y="1774.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$45/836514715.apply (1 samples, 0.03%)</title><rect x="253.0" y="1811.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/1729175167.apply (53 samples, 1.68%)</title><rect x="253.4" y="1811.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.4" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (52 samples, 1.65%)</title><rect x="253.8" y="1795.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.8" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="253.8" y="1779.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.8" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="253.8" y="1763.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/1020364899.get$Lambda (1 samples, 0.03%)</title><rect x="253.8" y="1747.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/1020364899.&lt;init&gt; (1 samples, 0.03%)</title><rect x="253.8" y="1731.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.8" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.03%)</title><rect x="254.2" y="1779.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.2" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="254.2" y="1763.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.2" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (49 samples, 1.56%)</title><rect x="254.5" y="1779.0" width="18.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.5" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (49 samples, 1.56%)</title><rect x="254.5" y="1763.0" width="18.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.5" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (45 samples, 1.43%)</title><rect x="254.5" y="1747.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.5" y="1758.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (20 samples, 0.63%)</title><rect x="254.9" y="1731.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.9" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.10%)</title><rect x="254.9" y="1715.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.9" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.06%)</title><rect x="255.3" y="1699.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.3" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.06%)</title><rect x="255.3" y="1683.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.3" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="255.3" y="1667.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.3" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="255.3" y="1651.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.3" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (17 samples, 0.54%)</title><rect x="256.0" y="1715.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.0" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="257.2" y="1699.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.2" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.41%)</title><rect x="257.5" y="1699.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.5" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (2 samples, 0.06%)</title><rect x="257.5" y="1683.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.5" y="1694.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="257.5" y="1667.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="260.5" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.getOpFlags (1 samples, 0.03%)</title><rect x="257.9" y="1667.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.9" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (11 samples, 0.35%)</title><rect x="258.3" y="1683.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.3" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="258.3" y="1667.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.3" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.29%)</title><rect x="258.7" y="1667.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.7" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.19%)</title><rect x="258.7" y="1651.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.7" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (6 samples, 0.19%)</title><rect x="258.7" y="1635.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.7" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.13%)</title><rect x="259.0" y="1619.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.0" y="1630.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (4 samples, 0.13%)</title><rect x="259.0" y="1603.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.0" y="1614.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.get (4 samples, 0.13%)</title><rect x="259.0" y="1587.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.0" y="1598.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (4 samples, 0.13%)</title><rect x="259.0" y="1571.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.0" y="1582.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.03%)</title><rect x="260.5" y="1619.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.5" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.10%)</title><rect x="260.9" y="1651.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.9" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (3 samples, 0.10%)</title><rect x="260.9" y="1635.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.9" y="1646.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="261.3" y="1619.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="264.3" y="1630.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="261.3" y="1603.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="264.3" y="1614.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="261.3" y="1587.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="264.3" y="1598.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="261.3" y="1571.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="264.3" y="1582.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="261.3" y="1555.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="264.3" y="1566.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="261.7" y="1619.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="264.7" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="261.7" y="1603.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.7" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.03%)</title><rect x="262.0" y="1667.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.0" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.03%)</title><rect x="262.0" y="1651.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.0" y="1662.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.03%)</title><rect x="262.0" y="1635.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.0" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.06%)</title><rect x="262.4" y="1731.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.4" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.06%)</title><rect x="262.4" y="1715.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.4" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.06%)</title><rect x="262.4" y="1699.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.03%)</title><rect x="263.2" y="1731.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.2" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.67%)</title><rect x="263.5" y="1731.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.5" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="263.5" y="1715.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.5" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$211/1190816396.run (1 samples, 0.03%)</title><rect x="263.5" y="1699.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.5" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$211/1190816396.run (20 samples, 0.63%)</title><rect x="263.9" y="1715.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="266.9" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (20 samples, 0.63%)</title><rect x="263.9" y="1699.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.9" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.16%)</title><rect x="264.6" y="1683.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.16%)</title><rect x="264.6" y="1667.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.6" y="1678.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="266.1" y="1651.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="269.1" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.03%)</title><rect x="266.5" y="1683.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.03%)</title><rect x="266.5" y="1667.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.5" y="1678.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.03%)</title><rect x="266.5" y="1651.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.5" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (10 samples, 0.32%)</title><rect x="266.9" y="1683.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.9" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (10 samples, 0.32%)</title><rect x="266.9" y="1667.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.9" y="1678.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (5 samples, 0.16%)</title><rect x="266.9" y="1651.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.9" y="1662.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (5 samples, 0.16%)</title><rect x="266.9" y="1635.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (5 samples, 0.16%)</title><rect x="266.9" y="1619.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.9" y="1630.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.13%)</title><rect x="266.9" y="1603.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="269.9" y="1614.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="267.6" y="1587.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="270.6" y="1598.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="268.0" y="1587.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="271.0" y="1598.0"></text>
</g>
<g>
<title>JVM_IHashCode@plt (1 samples, 0.03%)</title><rect x="268.4" y="1603.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="271.4" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.16%)</title><rect x="268.8" y="1651.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.8" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.16%)</title><rect x="268.8" y="1635.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.8" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.16%)</title><rect x="268.8" y="1619.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.8" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.16%)</title><rect x="268.8" y="1603.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.8" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.16%)</title><rect x="268.8" y="1587.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="271.8" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (5 samples, 0.16%)</title><rect x="268.8" y="1571.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.8" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (5 samples, 0.16%)</title><rect x="268.8" y="1555.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.8" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.06%)</title><rect x="270.6" y="1683.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="273.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (2 samples, 0.06%)</title><rect x="270.6" y="1667.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (4 samples, 0.13%)</title><rect x="271.4" y="1747.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.03%)</title><rect x="272.5" y="1731.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.5" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.03%)</title><rect x="272.9" y="1779.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/1949660912.apply (4 samples, 0.13%)</title><rect x="273.3" y="1811.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (4 samples, 0.13%)</title><rect x="273.3" y="1795.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.10%)</title><rect x="273.3" y="1779.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.3" y="1790.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.03%)</title><rect x="273.3" y="1763.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.3" y="1774.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="273.3" y="1747.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.3" y="1758.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="273.3" y="1731.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="276.3" y="1742.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="273.3" y="1715.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="276.3" y="1726.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="273.3" y="1699.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="276.3" y="1710.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="273.3" y="1683.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="276.3" y="1694.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="273.3" y="1667.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="276.3" y="1678.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="273.3" y="1651.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="276.3" y="1662.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="273.3" y="1635.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="276.3" y="1646.0"></text>
</g>
<g>
<title>G1MonitoringSupport::update_eden_size() (1 samples, 0.03%)</title><rect x="273.3" y="1619.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="276.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (2 samples, 0.06%)</title><rect x="273.6" y="1763.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.06%)</title><rect x="273.6" y="1747.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.6" y="1758.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.06%)</title><rect x="273.6" y="1731.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.6" y="1742.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.03%)</title><rect x="273.6" y="1715.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.6" y="1726.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.03%)</title><rect x="273.6" y="1699.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.6" y="1710.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.03%)</title><rect x="273.6" y="1683.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.6" y="1694.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.03%)</title><rect x="274.0" y="1715.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.0" y="1726.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.03%)</title><rect x="274.0" y="1699.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.0" y="1710.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="274.0" y="1683.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="277.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="274.4" y="1779.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.4" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="274.4" y="1763.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.4" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="274.4" y="1747.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.4" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.19%)</title><rect x="274.8" y="1827.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.8" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5 samples, 0.16%)</title><rect x="275.1" y="1811.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.1" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="275.1" y="1795.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="278.1" y="1806.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="275.1" y="1779.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="278.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1522648861.apply (1 samples, 0.03%)</title><rect x="275.5" y="1779.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.5" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1522648861.apply (3 samples, 0.10%)</title><rect x="275.9" y="1795.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3 samples, 0.10%)</title><rect x="275.9" y="1779.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3 samples, 0.10%)</title><rect x="275.9" y="1763.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.9" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3 samples, 0.10%)</title><rect x="275.9" y="1747.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.9" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (3 samples, 0.10%)</title><rect x="275.9" y="1731.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.9" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (3 samples, 0.10%)</title><rect x="275.9" y="1715.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.9" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.03%)</title><rect x="275.9" y="1699.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.9" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.03%)</title><rect x="275.9" y="1683.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.9" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.leftOf (1 samples, 0.03%)</title><rect x="275.9" y="1667.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.9" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="276.3" y="1699.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.3" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="276.6" y="1683.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.6" y="1694.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="276.6" y="1667.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.6" y="1678.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="276.6" y="1651.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.6" y="1662.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="276.6" y="1635.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.6" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.10%)</title><rect x="277.0" y="1827.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.06%)</title><rect x="277.4" y="1811.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.4" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.06%)</title><rect x="277.4" y="1795.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.4" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="278.1" y="1891.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.1" y="1902.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="278.1" y="1875.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="281.1" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (63 samples, 2.00%)</title><rect x="278.5" y="1971.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.5" y="1982.0">j..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="281.9" y="1955.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="284.9" y="1966.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="281.9" y="1939.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="284.9" y="1950.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="281.9" y="1923.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="284.9" y="1934.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="281.9" y="1907.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="284.9" y="1918.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="281.9" y="1891.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="284.9" y="1902.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="281.9" y="1875.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="284.9" y="1886.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="281.9" y="1859.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="284.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.03%)</title><rect x="282.3" y="1955.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.3" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.06%)</title><rect x="282.6" y="1955.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.6" y="1966.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="282.6" y="1939.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="285.6" y="1950.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="282.6" y="1923.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="285.6" y="1934.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="282.6" y="1907.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="285.6" y="1918.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="282.6" y="1891.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="285.6" y="1902.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="282.6" y="1875.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="285.6" y="1886.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="282.6" y="1859.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="285.6" y="1870.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="282.6" y="1843.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.6" y="1854.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="283.0" y="1939.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.0" y="1950.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="283.0" y="1923.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="283.0" y="1907.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.0" y="1918.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="283.0" y="1891.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.0" y="1902.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="283.0" y="1875.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="286.0" y="1886.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="283.0" y="1859.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="286.0" y="1870.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="283.0" y="1843.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="286.0" y="1854.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="283.0" y="1827.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="286.0" y="1838.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="283.0" y="1811.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="286.0" y="1822.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="283.0" y="1795.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="286.0" y="1806.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="283.0" y="1779.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="286.0" y="1790.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="283.0" y="1763.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="286.0" y="1774.0"></text>
</g>
<g>
<title>G1AllocRegion::fill_up_remaining_space(HeapRegion*) (1 samples, 0.03%)</title><rect x="283.0" y="1747.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="286.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (4 samples, 0.13%)</title><rect x="283.4" y="1955.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.4" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.06%)</title><rect x="284.1" y="1939.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="287.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.06%)</title><rect x="284.1" y="1923.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (19 samples, 0.60%)</title><rect x="284.9" y="1955.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.9" y="1966.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.60%)</title><rect x="284.9" y="1939.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.9" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.57%)</title><rect x="285.2" y="1923.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.2" y="1934.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (16 samples, 0.51%)</title><rect x="286.0" y="1907.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.0" y="1918.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (14 samples, 0.44%)</title><rect x="286.7" y="1891.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.7" y="1902.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.41%)</title><rect x="287.1" y="1875.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.1" y="1886.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="288.6" y="1859.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.6" y="1870.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="288.6" y="1843.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.6" y="1854.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.10%)</title><rect x="289.0" y="1859.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.0" y="1870.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="289.0" y="1843.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="292.0" y="1854.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (2 samples, 0.06%)</title><rect x="289.4" y="1843.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.4" y="1854.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.06%)</title><rect x="289.4" y="1827.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.4" y="1838.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.16%)</title><rect x="290.1" y="1859.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.1" y="1870.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="291.2" y="1843.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.2" y="1854.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="291.2" y="1827.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.2" y="1838.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="291.2" y="1811.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (27 samples, 0.86%)</title><rect x="292.0" y="1955.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="293.1" y="1939.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="293.1" y="1923.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1 samples, 0.03%)</title><rect x="293.1" y="1907.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.1" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (21 samples, 0.67%)</title><rect x="293.5" y="1939.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.5" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.03%)</title><rect x="293.9" y="1923.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.9" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (9 samples, 0.29%)</title><rect x="294.2" y="1923.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.2" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.16%)</title><rect x="295.4" y="1907.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.4" y="1918.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="297.2" y="1907.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="300.2" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.16%)</title><rect x="297.6" y="1923.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.16%)</title><rect x="297.6" y="1907.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.6" y="1918.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="299.1" y="1891.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="302.1" y="1902.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (5 samples, 0.16%)</title><rect x="299.5" y="1923.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.5" y="1934.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.06%)</title><rect x="300.6" y="1907.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="300.6" y="1891.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.6" y="1902.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.06%)</title><rect x="300.6" y="1875.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.6" y="1886.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="301.3" y="1939.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="304.3" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$166/1739338253.accept (1 samples, 0.03%)</title><rect x="302.1" y="1971.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="302.1" y="1955.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.1" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (652 samples, 20.69%)</title><rect x="302.5" y="2083.0" width="244.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.5" y="2094.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (651 samples, 20.66%)</title><rect x="302.8" y="2067.0" width="243.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.8" y="2078.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (650 samples, 20.63%)</title><rect x="302.8" y="2051.0" width="243.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="305.8" y="2062.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (650 samples, 20.63%)</title><rect x="302.8" y="2035.0" width="243.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.8" y="2046.0">jdk/internal/net/http/Http1Async..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (650 samples, 20.63%)</title><rect x="302.8" y="2019.0" width="243.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.8" y="2030.0">jdk/internal/net/http/Http1Async..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.10%)</title><rect x="303.2" y="2003.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.2" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="303.6" y="1987.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="303.6" y="1971.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.6" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$169/1394384929.get$Lambda (1 samples, 0.03%)</title><rect x="303.6" y="1955.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.6" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$169/1394384929.&lt;init&gt; (1 samples, 0.03%)</title><rect x="303.6" y="1939.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="304.0" y="1987.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.0" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="304.0" y="1971.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.0" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/1706852430.run (1 samples, 0.03%)</title><rect x="304.0" y="1955.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.0" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.03%)</title><rect x="304.0" y="1939.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.0" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (646 samples, 20.50%)</title><rect x="304.3" y="2003.0" width="242.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.3" y="2014.0">jdk/internal/net/http/Http1Respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (646 samples, 20.50%)</title><rect x="304.3" y="1987.0" width="242.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.3" y="1998.0">jdk/internal/net/http/Http1Respo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.03%)</title><rect x="304.3" y="1971.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.3" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (645 samples, 20.47%)</title><rect x="304.7" y="1971.0" width="241.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.7" y="1982.0">jdk/internal/net/http/Http1Respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (645 samples, 20.47%)</title><rect x="304.7" y="1955.0" width="241.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.7" y="1966.0">jdk/internal/net/http/Http1Respo..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (645 samples, 20.47%)</title><rect x="304.7" y="1939.0" width="241.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.7" y="1950.0">jdk/internal/net/http/ResponseCo..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (644 samples, 20.44%)</title><rect x="305.1" y="1923.0" width="241.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.1" y="1934.0">jdk/internal/net/http/ResponseCo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/1706852430.run (108 samples, 3.43%)</title><rect x="305.1" y="1907.0" width="40.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.1" y="1918.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (108 samples, 3.43%)</title><rect x="305.1" y="1891.0" width="40.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.1" y="1902.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (108 samples, 3.43%)</title><rect x="305.1" y="1875.0" width="40.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.1" y="1886.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="305.1" y="1859.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.1" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (11 samples, 0.35%)</title><rect x="305.8" y="1859.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.8" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.10%)</title><rect x="305.8" y="1843.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.8" y="1854.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.10%)</title><rect x="305.8" y="1827.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.8" y="1838.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.10%)</title><rect x="305.8" y="1811.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.8" y="1822.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.10%)</title><rect x="305.8" y="1795.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.8" y="1806.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.10%)</title><rect x="305.8" y="1779.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.8" y="1790.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.10%)</title><rect x="305.8" y="1763.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.8" y="1774.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.10%)</title><rect x="305.8" y="1747.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.8" y="1758.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.10%)</title><rect x="305.8" y="1731.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.8" y="1742.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.19%)</title><rect x="307.0" y="1843.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.0" y="1854.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.03%)</title><rect x="307.3" y="1827.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.3" y="1838.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="307.3" y="1811.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.3" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.13%)</title><rect x="307.7" y="1827.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.7" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.06%)</title><rect x="308.1" y="1811.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.1" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="308.5" y="1795.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.5" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="308.5" y="1779.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.5" y="1790.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.03%)</title><rect x="308.8" y="1811.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.8" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.03%)</title><rect x="308.8" y="1795.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="311.8" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.06%)</title><rect x="309.2" y="1843.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.2" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.06%)</title><rect x="309.2" y="1827.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.2" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.06%)</title><rect x="309.2" y="1811.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.2" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.06%)</title><rect x="309.2" y="1795.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.2" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.06%)</title><rect x="309.2" y="1779.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.2" y="1790.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.06%)</title><rect x="309.2" y="1763.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.2" y="1774.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.03%)</title><rect x="309.2" y="1747.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="312.2" y="1758.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.estimateSize (1 samples, 0.03%)</title><rect x="309.2" y="1731.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.2" y="1742.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.getFence (1 samples, 0.03%)</title><rect x="309.2" y="1715.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="312.2" y="1726.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.size (1 samples, 0.03%)</title><rect x="309.2" y="1699.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.2" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.03%)</title><rect x="309.6" y="1747.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.6" y="1758.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.03%)</title><rect x="309.6" y="1731.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.6" y="1742.0"></text>
</g>
<g>
<title>java/util/Optional.map (3 samples, 0.10%)</title><rect x="310.0" y="1859.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.0" y="1870.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.03%)</title><rect x="310.0" y="1843.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.0" y="1854.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.03%)</title><rect x="310.0" y="1827.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.0" y="1838.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.03%)</title><rect x="310.0" y="1811.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$221/2072951729.apply (2 samples, 0.06%)</title><rect x="310.3" y="1843.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (2 samples, 0.06%)</title><rect x="310.3" y="1827.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="313.3" y="1838.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.06%)</title><rect x="310.3" y="1811.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.3" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.06%)</title><rect x="310.3" y="1795.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (92 samples, 2.92%)</title><rect x="311.1" y="1859.0" width="34.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.1" y="1870.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (92 samples, 2.92%)</title><rect x="311.1" y="1843.0" width="34.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.1" y="1854.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (43 samples, 1.36%)</title><rect x="311.1" y="1827.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.1" y="1838.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1 samples, 0.03%)</title><rect x="325.7" y="1811.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.7" y="1822.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (2 samples, 0.06%)</title><rect x="326.1" y="1811.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.1" y="1822.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (1 samples, 0.03%)</title><rect x="326.4" y="1795.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.4" y="1806.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.03%)</title><rect x="326.8" y="1811.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.13%)</title><rect x="327.2" y="1827.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.2" y="1838.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="327.2" y="1811.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.2" y="1822.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="327.2" y="1795.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (3 samples, 0.10%)</title><rect x="327.6" y="1811.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.6" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (1 samples, 0.03%)</title><rect x="328.3" y="1795.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.3" y="1806.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="328.3" y="1779.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (43 samples, 1.36%)</title><rect x="328.7" y="1827.0" width="16.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.7" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (42 samples, 1.33%)</title><rect x="329.1" y="1811.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (3 samples, 0.10%)</title><rect x="329.1" y="1795.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.10%)</title><rect x="329.1" y="1779.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.10%)</title><rect x="329.1" y="1763.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.03%)</title><rect x="329.4" y="1747.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.03%)</title><rect x="329.4" y="1731.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.4" y="1742.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="329.4" y="1715.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.4" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.03%)</title><rect x="329.8" y="1747.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (39 samples, 1.24%)</title><rect x="330.2" y="1795.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (39 samples, 1.24%)</title><rect x="330.2" y="1779.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (38 samples, 1.21%)</title><rect x="330.6" y="1763.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (37 samples, 1.17%)</title><rect x="330.9" y="1747.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.9" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (37 samples, 1.17%)</title><rect x="330.9" y="1731.0" width="13.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.9" y="1742.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="330.9" y="1715.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="333.9" y="1726.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="330.9" y="1699.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="333.9" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (36 samples, 1.14%)</title><rect x="331.3" y="1715.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.3" y="1726.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (36 samples, 1.14%)</title><rect x="331.3" y="1699.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.3" y="1710.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.98%)</title><rect x="331.7" y="1683.0" width="11.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="334.7" y="1694.0"></text>
</g>
<g>
<title>__GI_write (31 samples, 0.98%)</title><rect x="331.7" y="1667.0" width="11.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="334.7" y="1678.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.98%)</title><rect x="331.7" y="1651.0" width="11.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="334.7" y="1662.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.98%)</title><rect x="331.7" y="1635.0" width="11.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="334.7" y="1646.0"></text>
</g>
<g>
<title>__x64_sys_write (28 samples, 0.89%)</title><rect x="332.8" y="1619.0" width="10.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="335.8" y="1630.0"></text>
</g>
<g>
<title>ksys_write (28 samples, 0.89%)</title><rect x="332.8" y="1603.0" width="10.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="335.8" y="1614.0"></text>
</g>
<g>
<title>vfs_write (28 samples, 0.89%)</title><rect x="332.8" y="1587.0" width="10.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="335.8" y="1598.0"></text>
</g>
<g>
<title>__vfs_write (24 samples, 0.76%)</title><rect x="332.8" y="1571.0" width="9.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="335.8" y="1582.0"></text>
</g>
<g>
<title>new_sync_write (24 samples, 0.76%)</title><rect x="332.8" y="1555.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="335.8" y="1566.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="332.8" y="1539.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="335.8" y="1550.0"></text>
</g>
<g>
<title>pipe_write (23 samples, 0.73%)</title><rect x="333.2" y="1539.0" width="8.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="336.2" y="1550.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 0.63%)</title><rect x="333.2" y="1523.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="336.2" y="1534.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.63%)</title><rect x="333.2" y="1507.0" width="7.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="336.2" y="1518.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.63%)</title><rect x="333.2" y="1491.0" width="7.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="336.2" y="1502.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="340.7" y="1523.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="343.7" y="1534.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.06%)</title><rect x="341.0" y="1523.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="344.0" y="1534.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="341.0" y="1507.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="344.0" y="1518.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.03%)</title><rect x="341.4" y="1507.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="344.4" y="1518.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.03%)</title><rect x="341.4" y="1491.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="344.4" y="1502.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.06%)</title><rect x="341.8" y="1571.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="344.8" y="1582.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.06%)</title><rect x="342.5" y="1571.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="345.5" y="1582.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.06%)</title><rect x="342.5" y="1555.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="345.5" y="1566.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="342.5" y="1539.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="345.5" y="1550.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="342.5" y="1523.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="345.5" y="1534.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="342.9" y="1539.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.9" y="1550.0"></text>
</g>
<g>
<title>__GI_write (4 samples, 0.13%)</title><rect x="343.3" y="1683.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="346.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.06%)</title><rect x="344.8" y="1827.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/1630268396.accept (4 samples, 0.13%)</title><rect x="345.5" y="1907.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.5" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (4 samples, 0.13%)</title><rect x="345.5" y="1891.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.5" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (4 samples, 0.13%)</title><rect x="345.5" y="1875.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.5" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.13%)</title><rect x="345.5" y="1859.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.5" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.13%)</title><rect x="345.5" y="1843.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.5" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.13%)</title><rect x="345.5" y="1827.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.5" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.13%)</title><rect x="345.5" y="1811.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.5" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="345.5" y="1795.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.5" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.06%)</title><rect x="345.5" y="1779.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.5" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="345.5" y="1763.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.5" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.03%)</title><rect x="345.5" y="1747.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.5" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$216/1099447619.accept (1 samples, 0.03%)</title><rect x="345.9" y="1763.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.9" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$216/1099447619.accept (2 samples, 0.06%)</title><rect x="346.3" y="1795.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (517 samples, 16.41%)</title><rect x="347.0" y="1907.0" width="193.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.0" y="1918.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (517 samples, 16.41%)</title><rect x="347.0" y="1891.0" width="193.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="350.0" y="1902.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (516 samples, 16.38%)</title><rect x="347.4" y="1875.0" width="193.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.4" y="1886.0">jdk/internal/net/http/Res..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (510 samples, 16.19%)</title><rect x="348.2" y="1859.0" width="190.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.2" y="1870.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (510 samples, 16.19%)</title><rect x="348.2" y="1843.0" width="190.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.2" y="1854.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (509 samples, 16.15%)</title><rect x="348.5" y="1827.0" width="190.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.5" y="1838.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.06%)</title><rect x="348.9" y="1811.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.06%)</title><rect x="348.9" y="1795.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.9" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="349.3" y="1779.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.3" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (506 samples, 16.06%)</title><rect x="349.7" y="1811.0" width="189.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.7" y="1822.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.10%)</title><rect x="349.7" y="1795.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.7" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.10%)</title><rect x="349.7" y="1779.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.7" y="1790.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="349.7" y="1763.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="352.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/691981639.accept (503 samples, 15.96%)</title><rect x="350.8" y="1795.0" width="188.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.8" y="1806.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (502 samples, 15.93%)</title><rect x="351.2" y="1779.0" width="187.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.2" y="1790.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (502 samples, 15.93%)</title><rect x="351.2" y="1763.0" width="187.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.2" y="1774.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (502 samples, 15.93%)</title><rect x="351.2" y="1747.0" width="187.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.2" y="1758.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.06%)</title><rect x="351.5" y="1731.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.5" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="351.5" y="1715.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.5" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="352.3" y="1731.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.3" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="352.3" y="1715.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.3" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="352.3" y="1699.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.3" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (495 samples, 15.71%)</title><rect x="352.7" y="1731.0" width="185.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.7" y="1742.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="352.7" y="1715.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.7" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="352.7" y="1699.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="355.7" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (494 samples, 15.68%)</title><rect x="353.0" y="1715.0" width="185.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.0" y="1726.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (494 samples, 15.68%)</title><rect x="353.0" y="1699.0" width="185.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.0" y="1710.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (489 samples, 15.52%)</title><rect x="353.4" y="1683.0" width="183.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="356.4" y="1694.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (88 samples, 2.79%)</title><rect x="353.8" y="1667.0" width="32.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.8" y="1678.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="353.8" y="1651.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.8" y="1662.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="354.2" y="1651.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (86 samples, 2.73%)</title><rect x="354.5" y="1651.0" width="32.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="357.5" y="1662.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (86 samples, 2.73%)</title><rect x="354.5" y="1635.0" width="32.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.5" y="1646.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.setPriority (10 samples, 0.32%)</title><rect x="354.5" y="1619.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.5" y="1630.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (7 samples, 0.22%)</title><rect x="354.9" y="1603.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.9" y="1614.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (5 samples, 0.16%)</title><rect x="354.9" y="1587.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="357.9" y="1598.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="355.3" y="1571.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="358.3" y="1582.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.10%)</title><rect x="355.6" y="1571.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="358.6" y="1582.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.10%)</title><rect x="355.6" y="1555.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="358.6" y="1566.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="355.6" y="1539.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="358.6" y="1550.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="356.0" y="1539.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="359.0" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="356.0" y="1523.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="359.0" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="356.0" y="1507.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="359.0" y="1518.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="356.0" y="1491.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.0" y="1502.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="356.0" y="1475.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.0" y="1486.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="356.0" y="1459.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="359.0" y="1470.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="356.4" y="1539.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="359.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="356.8" y="1587.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="359.8" y="1598.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="356.8" y="1571.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="359.8" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="356.8" y="1555.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.8" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="356.8" y="1539.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="359.8" y="1550.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="357.1" y="1587.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="360.1" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="357.1" y="1571.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.1" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="357.1" y="1555.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.1" y="1566.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="357.1" y="1539.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="360.1" y="1550.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="357.1" y="1523.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="360.1" y="1534.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="357.5" y="1603.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.5" y="1614.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="357.9" y="1603.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="360.9" y="1614.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (76 samples, 2.41%)</title><rect x="358.3" y="1619.0" width="28.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="361.3" y="1630.0">ja..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (7 samples, 0.22%)</title><rect x="358.6" y="1603.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.6" y="1614.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (3 samples, 0.10%)</title><rect x="359.0" y="1587.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.0" y="1598.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="359.8" y="1571.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="362.8" y="1582.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (2 samples, 0.06%)</title><rect x="360.1" y="1587.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.1" y="1598.0"></text>
</g>
<g>
<title>JVM_GetInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="360.1" y="1571.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="363.1" y="1582.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="360.1" y="1555.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="363.1" y="1566.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_getInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="360.5" y="1571.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="363.5" y="1582.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (1 samples, 0.03%)</title><rect x="360.9" y="1587.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.9" y="1598.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (68 samples, 2.16%)</title><rect x="361.3" y="1603.0" width="25.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.3" y="1614.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (3 samples, 0.10%)</title><rect x="361.6" y="1587.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="364.6" y="1598.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (57 samples, 1.81%)</title><rect x="362.8" y="1587.0" width="21.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="365.8" y="1598.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.10%)</title><rect x="374.0" y="1571.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="377.0" y="1582.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.03%)</title><rect x="375.1" y="1571.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="378.1" y="1582.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="375.1" y="1555.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="378.1" y="1566.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="375.1" y="1539.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="378.1" y="1550.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="375.1" y="1523.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="378.1" y="1534.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="375.1" y="1507.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="378.1" y="1518.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="375.1" y="1491.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.1" y="1502.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="375.1" y="1475.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.1" y="1486.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="375.1" y="1459.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="378.1" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.13%)</title><rect x="375.5" y="1571.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="378.5" y="1582.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.13%)</title><rect x="375.5" y="1555.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="378.5" y="1566.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.13%)</title><rect x="375.5" y="1539.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="378.5" y="1550.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.06%)</title><rect x="376.2" y="1523.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="379.2" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="377.0" y="1571.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="380.0" y="1582.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="377.4" y="1571.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="380.4" y="1582.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.06%)</title><rect x="378.1" y="1571.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="381.1" y="1582.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (10 samples, 0.32%)</title><rect x="378.9" y="1571.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="381.9" y="1582.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (9 samples, 0.29%)</title><rect x="379.2" y="1555.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="382.2" y="1566.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.13%)</title><rect x="380.4" y="1539.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="383.4" y="1550.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.13%)</title><rect x="380.4" y="1523.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="383.4" y="1534.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="381.9" y="1539.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="384.9" y="1550.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="382.2" y="1539.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="385.2" y="1550.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.13%)</title><rect x="382.6" y="1571.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="385.6" y="1582.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="382.6" y="1555.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="385.6" y="1566.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.10%)</title><rect x="383.0" y="1555.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="386.0" y="1566.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="383.0" y="1539.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="386.0" y="1550.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="383.7" y="1539.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="386.7" y="1550.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::JvmtiVMObjectAllocEventCollector() (1 samples, 0.03%)</title><rect x="384.1" y="1587.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="387.1" y="1598.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (1 samples, 0.03%)</title><rect x="384.5" y="1587.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="387.5" y="1598.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.06%)</title><rect x="384.9" y="1587.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="387.9" y="1598.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (1 samples, 0.03%)</title><rect x="385.6" y="1587.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="388.6" y="1598.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (2 samples, 0.06%)</title><rect x="386.0" y="1587.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="389.0" y="1598.0"></text>
</g>
<g>
<title>java/lang/Thread.start (400 samples, 12.69%)</title><rect x="386.7" y="1667.0" width="149.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.7" y="1678.0">java/lang/Thread.st..</text>
</g>
<g>
<title>java/lang/Thread.start0 (399 samples, 12.66%)</title><rect x="387.1" y="1651.0" width="149.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.1" y="1662.0">java/lang/Thread.st..</text>
</g>
<g>
<title>JVM_StartThread (265 samples, 8.41%)</title><rect x="387.1" y="1635.0" width="99.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="390.1" y="1646.0">JVM_StartThr..</text>
</g>
<g>
<title>G1BarrierSet::on_thread_create(Thread*) (2 samples, 0.06%)</title><rect x="388.2" y="1619.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="391.2" y="1630.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (25 samples, 0.79%)</title><rect x="389.0" y="1619.0" width="9.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="392.0" y="1630.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="389.0" y="1603.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="392.0" y="1614.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (2 samples, 0.06%)</title><rect x="389.4" y="1603.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="392.4" y="1614.0"></text>
</g>
<g>
<title>PosixSemaphore::PosixSemaphore(unsigned int) (1 samples, 0.03%)</title><rect x="389.4" y="1587.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="392.4" y="1598.0"></text>
</g>
<g>
<title>sem_init@@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="389.7" y="1587.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="392.7" y="1598.0"></text>
</g>
<g>
<title>JavaThread::initialize() (2 samples, 0.06%)</title><rect x="390.1" y="1603.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="393.1" y="1614.0"></text>
</g>
<g>
<title>Parker::Allocate(JavaThread*) (1 samples, 0.03%)</title><rect x="390.5" y="1587.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="393.5" y="1598.0"></text>
</g>
<g>
<title>Monitor::Monitor(int, char const*, bool, Monitor::SafepointCheckRequired) (1 samples, 0.03%)</title><rect x="390.9" y="1603.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="393.9" y="1614.0"></text>
</g>
<g>
<title>PtrQueue::PtrQueue(PtrQueueSet*, bool, bool) (1 samples, 0.03%)</title><rect x="391.2" y="1603.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="394.2" y="1614.0"></text>
</g>
<g>
<title>Thread::Thread() (17 samples, 0.54%)</title><rect x="391.6" y="1603.0" width="6.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="394.6" y="1614.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (5 samples, 0.16%)</title><rect x="391.6" y="1587.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="394.6" y="1598.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (4 samples, 0.13%)</title><rect x="391.6" y="1571.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="394.6" y="1582.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="392.7" y="1555.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="395.7" y="1566.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.03%)</title><rect x="393.1" y="1571.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="396.1" y="1582.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (3 samples, 0.10%)</title><rect x="393.5" y="1587.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="396.5" y="1598.0"></text>
</g>
<g>
<title>JfrTraceId::assign_thread_id() (1 samples, 0.03%)</title><rect x="393.5" y="1571.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="396.5" y="1582.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="393.8" y="1571.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="396.8" y="1582.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="394.2" y="1571.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="397.2" y="1582.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (6 samples, 0.19%)</title><rect x="394.6" y="1587.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="397.6" y="1598.0"></text>
</g>
<g>
<title>Thread::SpinRelease(int volatile*) (1 samples, 0.03%)</title><rect x="396.5" y="1571.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="399.5" y="1582.0"></text>
</g>
<g>
<title>Thread::SpinAcquire(int volatile*, char const*) (1 samples, 0.03%)</title><rect x="396.8" y="1587.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="399.8" y="1598.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="397.2" y="1587.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="400.2" y="1598.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="397.6" y="1587.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="400.6" y="1598.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="397.6" y="1571.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="400.6" y="1582.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="397.6" y="1555.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="400.6" y="1566.0"></text>
</g>
<g>
<title>os::random() (1 samples, 0.03%)</title><rect x="398.0" y="1603.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="401.0" y="1614.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (54 samples, 1.71%)</title><rect x="398.3" y="1619.0" width="20.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="401.3" y="1630.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.03%)</title><rect x="398.3" y="1603.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="401.3" y="1614.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.03%)</title><rect x="398.3" y="1587.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="401.3" y="1598.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (1 samples, 0.03%)</title><rect x="398.3" y="1571.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="401.3" y="1582.0"></text>
</g>
<g>
<title>Thread::is_hidden_from_external_view() const (2 samples, 0.06%)</title><rect x="398.7" y="1603.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="401.7" y="1614.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (47 samples, 1.49%)</title><rect x="399.5" y="1603.0" width="17.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="402.5" y="1614.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (37 samples, 1.17%)</title><rect x="399.5" y="1587.0" width="13.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="402.5" y="1598.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="412.2" y="1571.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="415.2" y="1582.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="412.2" y="1555.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="415.2" y="1566.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (2 samples, 0.06%)</title><rect x="412.6" y="1571.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="415.6" y="1582.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (2 samples, 0.06%)</title><rect x="412.6" y="1555.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="415.6" y="1566.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.13%)</title><rect x="413.3" y="1587.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="416.3" y="1598.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.06%)</title><rect x="414.8" y="1587.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="417.8" y="1598.0"></text>
</g>
<g>
<title>__memset_erms (4 samples, 0.13%)</title><rect x="415.6" y="1587.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="418.6" y="1598.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (4 samples, 0.13%)</title><rect x="417.1" y="1603.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="420.1" y="1614.0"></text>
</g>
<g>
<title>Monitor::lock() (15 samples, 0.48%)</title><rect x="418.6" y="1619.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="421.6" y="1630.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (9 samples, 0.29%)</title><rect x="418.9" y="1603.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="421.9" y="1614.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (1 samples, 0.03%)</title><rect x="418.9" y="1587.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="421.9" y="1598.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.10%)</title><rect x="419.3" y="1587.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="422.3" y="1598.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.10%)</title><rect x="420.4" y="1587.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="423.4" y="1598.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="420.4" y="1571.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="423.4" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="420.4" y="1555.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="423.4" y="1566.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="420.8" y="1539.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="423.8" y="1550.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="420.8" y="1523.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="423.8" y="1534.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="420.8" y="1507.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="423.8" y="1518.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="421.2" y="1491.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="424.2" y="1502.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="421.6" y="1587.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="424.6" y="1598.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="421.9" y="1587.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="424.9" y="1598.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.16%)</title><rect x="422.3" y="1603.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="425.3" y="1614.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (4 samples, 0.13%)</title><rect x="424.2" y="1619.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="427.2" y="1630.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="424.6" y="1603.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="427.6" y="1614.0"></text>
</g>
<g>
<title>malloc@plt (2 samples, 0.06%)</title><rect x="424.9" y="1603.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="427.9" y="1614.0"></text>
</g>
<g>
<title>ThreadService::add_thread(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="425.7" y="1619.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="428.7" y="1630.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="426.1" y="1619.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="429.1" y="1630.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="426.4" y="1619.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="429.4" y="1630.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (152 samples, 4.82%)</title><rect x="426.8" y="1619.0" width="56.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="429.8" y="1630.0">os::cr..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (10 samples, 0.32%)</title><rect x="427.5" y="1603.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="430.5" y="1614.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (8 samples, 0.25%)</title><rect x="427.5" y="1587.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="430.5" y="1598.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.22%)</title><rect x="427.9" y="1571.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="430.9" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.16%)</title><rect x="428.7" y="1555.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="431.7" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.16%)</title><rect x="428.7" y="1539.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="431.7" y="1550.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="429.8" y="1523.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="432.8" y="1534.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="429.8" y="1507.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="432.8" y="1518.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="429.8" y="1491.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="432.8" y="1502.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="430.2" y="1507.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="433.2" y="1518.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.03%)</title><rect x="430.5" y="1587.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="433.5" y="1598.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="430.9" y="1587.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="433.9" y="1598.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (2 samples, 0.06%)</title><rect x="431.3" y="1603.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="434.3" y="1614.0"></text>
</g>
<g>
<title>__GI_sigemptyset (2 samples, 0.06%)</title><rect x="431.3" y="1587.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="434.3" y="1598.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (1 samples, 0.03%)</title><rect x="432.0" y="1603.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="435.0" y="1614.0"></text>
</g>
<g>
<title>__clone (123 samples, 3.90%)</title><rect x="432.4" y="1603.0" width="46.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="435.4" y="1614.0">__cl..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (121 samples, 3.84%)</title><rect x="433.2" y="1587.0" width="45.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.2" y="1598.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (121 samples, 3.84%)</title><rect x="433.2" y="1571.0" width="45.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="436.2" y="1582.0">do_s..</text>
</g>
<g>
<title>__x64_sys_clone (114 samples, 3.62%)</title><rect x="435.8" y="1555.0" width="42.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.8" y="1566.0">__x6..</text>
</g>
<g>
<title>__put_user_4 (1 samples, 0.03%)</title><rect x="435.8" y="1539.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="438.8" y="1550.0"></text>
</g>
<g>
<title>_do_fork (113 samples, 3.59%)</title><rect x="436.2" y="1539.0" width="42.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="439.2" y="1550.0">_do_..</text>
</g>
<g>
<title>copy_process.part.34 (81 samples, 2.57%)</title><rect x="436.2" y="1523.0" width="30.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="439.2" y="1534.0">co..</text>
</g>
<g>
<title>__kmalloc (1 samples, 0.03%)</title><rect x="438.4" y="1507.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="441.4" y="1518.0"></text>
</g>
<g>
<title>__sched_fork (1 samples, 0.03%)</title><rect x="438.8" y="1507.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.8" y="1518.0"></text>
</g>
<g>
<title>__vmalloc_node_range (14 samples, 0.44%)</title><rect x="439.2" y="1507.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.2" y="1518.0"></text>
</g>
<g>
<title>__get_vm_area_node (2 samples, 0.06%)</title><rect x="439.2" y="1491.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.2" y="1502.0"></text>
</g>
<g>
<title>alloc_vmap_area (2 samples, 0.06%)</title><rect x="439.2" y="1475.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="442.2" y="1486.0"></text>
</g>
<g>
<title>__insert_vmap_area (2 samples, 0.06%)</title><rect x="439.2" y="1459.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="442.2" y="1470.0"></text>
</g>
<g>
<title>alloc_pages_current (11 samples, 0.35%)</title><rect x="439.9" y="1491.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="442.9" y="1502.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (11 samples, 0.35%)</title><rect x="439.9" y="1475.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="442.9" y="1486.0"></text>
</g>
<g>
<title>clear_page_erms (8 samples, 0.25%)</title><rect x="440.7" y="1459.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.7" y="1470.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="443.7" y="1459.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="446.7" y="1470.0"></text>
</g>
<g>
<title>vmap_page_range_noflush (1 samples, 0.03%)</title><rect x="444.0" y="1491.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.0" y="1502.0"></text>
</g>
<g>
<title>alloc_pid (9 samples, 0.29%)</title><rect x="444.4" y="1507.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="447.4" y="1518.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.10%)</title><rect x="446.6" y="1491.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="449.6" y="1502.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="447.4" y="1475.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.4" y="1486.0"></text>
</g>
<g>
<title>arch_dup_task_struct (2 samples, 0.06%)</title><rect x="447.8" y="1507.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="450.8" y="1518.0"></text>
</g>
<g>
<title>fpu__copy (2 samples, 0.06%)</title><rect x="447.8" y="1491.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="450.8" y="1502.0"></text>
</g>
<g>
<title>arch_local_irq_enable (3 samples, 0.10%)</title><rect x="448.5" y="1507.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="451.5" y="1518.0"></text>
</g>
<g>
<title>cgroup_can_fork (3 samples, 0.10%)</title><rect x="449.6" y="1507.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.6" y="1518.0"></text>
</g>
<g>
<title>pids_can_fork (3 samples, 0.10%)</title><rect x="449.6" y="1491.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="452.6" y="1502.0"></text>
</g>
<g>
<title>cgroup_post_fork (2 samples, 0.06%)</title><rect x="450.8" y="1507.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.8" y="1518.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (1 samples, 0.03%)</title><rect x="451.1" y="1491.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.1" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="451.1" y="1475.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="454.1" y="1486.0"></text>
</g>
<g>
<title>copy_thread_tls (1 samples, 0.03%)</title><rect x="451.5" y="1507.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="454.5" y="1518.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (1 samples, 0.03%)</title><rect x="451.9" y="1507.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="454.9" y="1518.0"></text>
</g>
<g>
<title>find_next_bit (2 samples, 0.06%)</title><rect x="452.3" y="1507.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.3" y="1518.0"></text>
</g>
<g>
<title>find_vm_area (1 samples, 0.03%)</title><rect x="453.0" y="1507.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="456.0" y="1518.0"></text>
</g>
<g>
<title>find_vmap_area (1 samples, 0.03%)</title><rect x="453.0" y="1491.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="456.0" y="1502.0"></text>
</g>
<g>
<title>find_vmap_area (1 samples, 0.03%)</title><rect x="453.4" y="1507.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="456.4" y="1518.0"></text>
</g>
<g>
<title>fpu__copy (1 samples, 0.03%)</title><rect x="453.8" y="1507.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="456.8" y="1518.0"></text>
</g>
<g>
<title>freezer_fork (1 samples, 0.03%)</title><rect x="454.1" y="1507.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="457.1" y="1518.0"></text>
</g>
<g>
<title>get_random_u64 (10 samples, 0.32%)</title><rect x="454.5" y="1507.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.5" y="1518.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.10%)</title><rect x="458.3" y="1507.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="461.3" y="1518.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.10%)</title><rect x="458.3" y="1491.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="461.3" y="1502.0"></text>
</g>
<g>
<title>___slab_alloc (2 samples, 0.06%)</title><rect x="458.6" y="1475.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="461.6" y="1486.0"></text>
</g>
<g>
<title>new_slab (2 samples, 0.06%)</title><rect x="458.6" y="1459.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="461.6" y="1470.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.03%)</title><rect x="458.6" y="1443.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.6" y="1454.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="458.6" y="1427.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="461.6" y="1438.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="458.6" y="1411.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="461.6" y="1422.0"></text>
</g>
<g>
<title>get_random_u32 (1 samples, 0.03%)</title><rect x="459.0" y="1443.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="462.0" y="1454.0"></text>
</g>
<g>
<title>memcpy_erms (6 samples, 0.19%)</title><rect x="459.4" y="1507.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.4" y="1518.0"></text>
</g>
<g>
<title>perf_event_task (1 samples, 0.03%)</title><rect x="461.6" y="1507.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.6" y="1518.0"></text>
</g>
<g>
<title>proc_fork_connector (1 samples, 0.03%)</title><rect x="462.0" y="1507.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="465.0" y="1518.0"></text>
</g>
<g>
<title>sched_fork (9 samples, 0.29%)</title><rect x="462.4" y="1507.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.4" y="1518.0"></text>
</g>
<g>
<title>__sched_fork (2 samples, 0.06%)</title><rect x="462.4" y="1491.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="465.4" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.16%)</title><rect x="463.1" y="1491.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="466.1" y="1502.0"></text>
</g>
<g>
<title>init_dl_inactive_task_timer (1 samples, 0.03%)</title><rect x="465.0" y="1491.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="468.0" y="1502.0"></text>
</g>
<g>
<title>init_entity_runnable_average (1 samples, 0.03%)</title><rect x="465.4" y="1491.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="468.4" y="1502.0"></text>
</g>
<g>
<title>security_task_alloc (1 samples, 0.03%)</title><rect x="465.7" y="1507.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.7" y="1518.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="465.7" y="1491.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.7" y="1502.0"></text>
</g>
<g>
<title>task_active_pid_ns (1 samples, 0.03%)</title><rect x="466.1" y="1507.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.1" y="1518.0"></text>
</g>
<g>
<title>copy_semundo (1 samples, 0.03%)</title><rect x="466.5" y="1523.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.5" y="1534.0"></text>
</g>
<g>
<title>find_vm_area (1 samples, 0.03%)</title><rect x="466.9" y="1523.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.9" y="1534.0"></text>
</g>
<g>
<title>memset_erms (6 samples, 0.19%)</title><rect x="467.2" y="1523.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="470.2" y="1534.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.06%)</title><rect x="468.7" y="1507.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.7" y="1518.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="468.7" y="1491.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.7" y="1502.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.06%)</title><rect x="468.7" y="1475.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.7" y="1486.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.06%)</title><rect x="468.7" y="1459.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="471.7" y="1470.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.06%)</title><rect x="468.7" y="1443.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.7" y="1454.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.06%)</title><rect x="468.7" y="1427.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="471.7" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="468.7" y="1411.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="471.7" y="1422.0"></text>
</g>
<g>
<title>proc_fork_connector (1 samples, 0.03%)</title><rect x="469.5" y="1523.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.5" y="1534.0"></text>
</g>
<g>
<title>sched_fork (2 samples, 0.06%)</title><rect x="469.9" y="1523.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.9" y="1534.0"></text>
</g>
<g>
<title>wake_up_new_task (21 samples, 0.67%)</title><rect x="470.6" y="1523.0" width="7.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.6" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.67%)</title><rect x="470.6" y="1507.0" width="7.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.6" y="1518.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.10%)</title><rect x="478.5" y="1603.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="481.5" y="1614.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="479.6" y="1603.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="482.6" y="1614.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (10 samples, 0.32%)</title><rect x="480.0" y="1603.0" width="3.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="483.0" y="1614.0"></text>
</g>
<g>
<title>os::set_native_priority(Thread*, int) (1 samples, 0.03%)</title><rect x="483.7" y="1619.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="486.7" y="1630.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (5 samples, 0.16%)</title><rect x="484.1" y="1619.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="487.1" y="1630.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="484.1" y="1603.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="487.1" y="1614.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.13%)</title><rect x="484.5" y="1603.0" width="1.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="487.5" y="1614.0"></text>
</g>
<g>
<title>pthread_attr_init@@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="486.0" y="1619.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="489.0" y="1630.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="486.3" y="1635.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="489.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 1.52%)</title><rect x="486.7" y="1635.0" width="18.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="489.7" y="1646.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="486.7" y="1619.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="489.7" y="1630.0"></text>
</g>
<g>
<title>_IO_old_init (1 samples, 0.03%)</title><rect x="486.7" y="1603.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="489.7" y="1614.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="487.1" y="1603.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="490.1" y="1614.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="487.5" y="1603.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="490.5" y="1614.0"></text>
</g>
<g>
<title>__lll_unlock_wake_private (1 samples, 0.03%)</title><rect x="487.8" y="1619.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="490.8" y="1630.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="487.8" y="1603.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="490.8" y="1614.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="487.8" y="1587.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="490.8" y="1598.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.10%)</title><rect x="488.2" y="1619.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="491.2" y="1630.0"></text>
</g>
<g>
<title>_int_malloc (5 samples, 0.16%)</title><rect x="489.3" y="1619.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="492.3" y="1630.0"></text>
</g>
<g>
<title>malloc_consolidate (7 samples, 0.22%)</title><rect x="491.2" y="1619.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="494.2" y="1630.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (29 samples, 0.92%)</title><rect x="493.8" y="1619.0" width="10.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="496.8" y="1630.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.57%)</title><rect x="498.0" y="1603.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="501.0" y="1614.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.57%)</title><rect x="498.0" y="1587.0" width="6.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.0" y="1598.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.35%)</title><rect x="500.6" y="1571.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="503.6" y="1582.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.32%)</title><rect x="500.9" y="1555.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="503.9" y="1566.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.18 (2 samples, 0.06%)</title><rect x="501.3" y="1539.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.3" y="1550.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.22%)</title><rect x="502.1" y="1539.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="505.1" y="1550.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.13%)</title><rect x="502.8" y="1523.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="505.8" y="1534.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.13%)</title><rect x="502.8" y="1507.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="505.8" y="1518.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.10%)</title><rect x="503.2" y="1491.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.2" y="1502.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.10%)</title><rect x="503.2" y="1475.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="506.2" y="1486.0"></text>
</g>
<g>
<title>kprobe_flush_task (1 samples, 0.03%)</title><rect x="503.6" y="1459.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="506.6" y="1470.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="503.6" y="1443.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="506.6" y="1454.0"></text>
</g>
<g>
<title>put_task_stack (1 samples, 0.03%)</title><rect x="503.9" y="1459.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="506.9" y="1470.0"></text>
</g>
<g>
<title>vfree_atomic (1 samples, 0.03%)</title><rect x="503.9" y="1443.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.9" y="1454.0"></text>
</g>
<g>
<title>queue_work_on (1 samples, 0.03%)</title><rect x="503.9" y="1427.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="506.9" y="1438.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="504.3" y="1523.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="507.3" y="1534.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.03%)</title><rect x="504.7" y="1635.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="507.7" y="1646.0"></text>
</g>
<g>
<title>_IO_no_init (1 samples, 0.03%)</title><rect x="505.1" y="1635.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="508.1" y="1646.0"></text>
</g>
<g>
<title>__GI___mmap64 (2 samples, 0.06%)</title><rect x="505.4" y="1635.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="508.4" y="1646.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="505.4" y="1619.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="508.4" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="505.4" y="1603.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="508.4" y="1614.0"></text>
</g>
<g>
<title>__x64_sys_mmap (2 samples, 0.06%)</title><rect x="505.4" y="1587.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="508.4" y="1598.0"></text>
</g>
<g>
<title>ksys_mmap_pgoff (2 samples, 0.06%)</title><rect x="505.4" y="1571.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="508.4" y="1582.0"></text>
</g>
<g>
<title>vm_mmap_pgoff (2 samples, 0.06%)</title><rect x="505.4" y="1555.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="508.4" y="1566.0"></text>
</g>
<g>
<title>do_mmap (2 samples, 0.06%)</title><rect x="505.4" y="1539.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="508.4" y="1550.0"></text>
</g>
<g>
<title>get_unmapped_area (1 samples, 0.03%)</title><rect x="505.4" y="1523.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="508.4" y="1534.0"></text>
</g>
<g>
<title>arch_get_unmapped_area_topdown (1 samples, 0.03%)</title><rect x="505.4" y="1507.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.4" y="1518.0"></text>
</g>
<g>
<title>mmap_region (1 samples, 0.03%)</title><rect x="505.8" y="1523.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="508.8" y="1534.0"></text>
</g>
<g>
<title>vm_area_alloc (1 samples, 0.03%)</title><rect x="505.8" y="1507.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="508.8" y="1518.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (10 samples, 0.32%)</title><rect x="506.2" y="1635.0" width="3.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="509.2" y="1646.0"></text>
</g>
<g>
<title>_IO_padn (1 samples, 0.03%)</title><rect x="506.6" y="1619.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="509.6" y="1630.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (5 samples, 0.16%)</title><rect x="506.9" y="1619.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="509.9" y="1630.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (1 samples, 0.03%)</title><rect x="508.8" y="1619.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="511.8" y="1630.0"></text>
</g>
<g>
<title>_itoa_word (2 samples, 0.06%)</title><rect x="509.2" y="1619.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="512.2" y="1630.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="509.9" y="1635.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="512.9" y="1646.0"></text>
</g>
<g>
<title>__malloc (6 samples, 0.19%)</title><rect x="510.3" y="1635.0" width="2.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="513.3" y="1646.0"></text>
</g>
<g>
<title>__pthread_cond_signal (49 samples, 1.56%)</title><rect x="512.6" y="1635.0" width="18.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="515.6" y="1646.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 1.36%)</title><rect x="514.8" y="1619.0" width="16.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.8" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 1.36%)</title><rect x="514.8" y="1603.0" width="16.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="517.8" y="1614.0"></text>
</g>
<g>
<title>__x64_sys_futex (36 samples, 1.14%)</title><rect x="517.1" y="1587.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="520.1" y="1598.0"></text>
</g>
<g>
<title>do_futex (36 samples, 1.14%)</title><rect x="517.1" y="1571.0" width="13.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="520.1" y="1582.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 1.02%)</title><rect x="517.8" y="1555.0" width="12.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="520.8" y="1566.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.18 (1 samples, 0.03%)</title><rect x="518.2" y="1539.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.2" y="1550.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="518.5" y="1539.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="521.5" y="1550.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="518.5" y="1523.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="521.5" y="1534.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 0.92%)</title><rect x="518.9" y="1539.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="521.9" y="1550.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 0.92%)</title><rect x="518.9" y="1523.0" width="10.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="521.9" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.92%)</title><rect x="518.9" y="1507.0" width="10.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="521.9" y="1518.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="529.8" y="1555.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="532.8" y="1566.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="530.2" y="1555.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="533.2" y="1566.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="530.5" y="1587.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="533.5" y="1598.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="530.5" y="1571.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="533.5" y="1582.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="530.5" y="1555.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="533.5" y="1566.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="530.5" y="1539.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="533.5" y="1550.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="530.5" y="1523.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="533.5" y="1534.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="530.5" y="1507.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="533.5" y="1518.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="530.5" y="1491.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="533.5" y="1502.0"></text>
</g>
<g>
<title>_int_malloc (13 samples, 0.41%)</title><rect x="530.9" y="1635.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="533.9" y="1646.0"></text>
</g>
<g>
<title>malloc_consolidate (1 samples, 0.03%)</title><rect x="535.8" y="1635.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="538.8" y="1646.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="536.2" y="1635.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="539.2" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.13%)</title><rect x="536.5" y="1683.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.5" y="1694.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="536.9" y="1667.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="539.9" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$219/764460352.accept (1 samples, 0.03%)</title><rect x="537.3" y="1667.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/1447974469.accept (1 samples, 0.03%)</title><rect x="537.6" y="1667.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="540.6" y="1678.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.10%)</title><rect x="538.0" y="1731.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="541.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (4 samples, 0.13%)</title><rect x="539.1" y="1859.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.1" y="1870.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="539.1" y="1843.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.1" y="1854.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.03%)</title><rect x="539.5" y="1843.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.06%)</title><rect x="539.9" y="1843.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.13%)</title><rect x="540.6" y="1907.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.10%)</title><rect x="541.0" y="1891.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.06%)</title><rect x="541.4" y="1875.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.4" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.06%)</title><rect x="541.4" y="1859.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.4" y="1870.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.06%)</title><rect x="541.4" y="1843.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.4" y="1854.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="541.4" y="1827.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="544.4" y="1838.0"></text>
</g>
<g>
<title>oop_arraycopy (1 samples, 0.03%)</title><rect x="541.8" y="1827.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="544.8" y="1838.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="541.8" y="1811.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="544.8" y="1822.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="541.8" y="1795.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="544.8" y="1806.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="541.8" y="1779.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.8" y="1790.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="541.8" y="1763.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="544.8" y="1774.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="541.8" y="1747.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="544.8" y="1758.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="541.8" y="1731.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="544.8" y="1742.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="541.8" y="1715.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="544.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.10%)</title><rect x="542.1" y="1907.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.1" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.10%)</title><rect x="542.1" y="1891.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.1" y="1902.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.03%)</title><rect x="542.9" y="1875.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.9" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="542.9" y="1859.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (8 samples, 0.25%)</title><rect x="543.3" y="1907.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.3" y="1918.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (2 samples, 0.06%)</title><rect x="543.6" y="1891.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.6" y="1902.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="544.4" y="1891.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.4" y="1902.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="544.4" y="1875.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.4" y="1886.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="544.8" y="1891.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.8" y="1902.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.06%)</title><rect x="544.8" y="1875.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.03%)</title><rect x="545.1" y="1859.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.1" y="1870.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (2 samples, 0.06%)</title><rect x="545.5" y="1891.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.5" y="1902.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.06%)</title><rect x="545.5" y="1875.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.5" y="1886.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="545.5" y="1859.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.5" y="1870.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="545.5" y="1843.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.5" y="1854.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="545.9" y="1827.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.9" y="1838.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="545.9" y="1811.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.9" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="546.3" y="2051.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.3" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (563 samples, 17.87%)</title><rect x="546.6" y="2163.0" width="210.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.6" y="2174.0">jdk/internal/net/http/HttpCl..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="551.9" y="2147.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="554.9" y="2158.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="551.9" y="2131.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="554.9" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="551.9" y="2115.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="554.9" y="2126.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="551.9" y="2099.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="554.9" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (6 samples, 0.19%)</title><rect x="552.3" y="2147.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.3" y="2158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (6 samples, 0.19%)</title><rect x="552.3" y="2131.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.3" y="2142.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (10 samples, 0.32%)</title><rect x="554.5" y="2147.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.5" y="2158.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (152 samples, 4.82%)</title><rect x="558.2" y="2147.0" width="57.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.2" y="2158.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1705485627.accept (145 samples, 4.60%)</title><rect x="558.6" y="2131.0" width="54.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.6" y="2142.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (145 samples, 4.60%)</title><rect x="558.6" y="2115.0" width="54.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.6" y="2126.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (145 samples, 4.60%)</title><rect x="558.6" y="2099.0" width="54.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.6" y="2110.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (145 samples, 4.60%)</title><rect x="558.6" y="2083.0" width="54.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.6" y="2094.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (145 samples, 4.60%)</title><rect x="558.6" y="2067.0" width="54.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.6" y="2078.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.16%)</title><rect x="558.6" y="2051.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.6" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.10%)</title><rect x="559.4" y="2035.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.4" y="2046.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.06%)</title><rect x="559.4" y="2019.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.4" y="2030.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="559.7" y="2003.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.7" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="560.1" y="2019.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.1" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (140 samples, 4.44%)</title><rect x="560.5" y="2051.0" width="52.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.5" y="2062.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (140 samples, 4.44%)</title><rect x="560.5" y="2035.0" width="52.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.5" y="2046.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (140 samples, 4.44%)</title><rect x="560.5" y="2019.0" width="52.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.5" y="2030.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (140 samples, 4.44%)</title><rect x="560.5" y="2003.0" width="52.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.5" y="2014.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (140 samples, 4.44%)</title><rect x="560.5" y="1987.0" width="52.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.5" y="1998.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/133136300.run (139 samples, 4.41%)</title><rect x="560.9" y="1971.0" width="52.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.9" y="1982.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (139 samples, 4.41%)</title><rect x="560.9" y="1955.0" width="52.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.9" y="1966.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (43 samples, 1.36%)</title><rect x="560.9" y="1939.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.9" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (43 samples, 1.36%)</title><rect x="560.9" y="1923.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.9" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (43 samples, 1.36%)</title><rect x="560.9" y="1907.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.9" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1 samples, 0.03%)</title><rect x="560.9" y="1891.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.9" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.03%)</title><rect x="560.9" y="1875.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.03%)</title><rect x="560.9" y="1859.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.03%)</title><rect x="560.9" y="1843.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.9" y="1854.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="560.9" y="1827.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="563.9" y="1838.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="560.9" y="1811.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="563.9" y="1822.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="560.9" y="1795.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.9" y="1806.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="560.9" y="1779.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="563.9" y="1790.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="560.9" y="1763.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="563.9" y="1774.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="560.9" y="1747.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="563.9" y="1758.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="560.9" y="1731.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="563.9" y="1742.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="560.9" y="1715.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="563.9" y="1726.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="560.9" y="1699.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="563.9" y="1710.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="560.9" y="1683.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="563.9" y="1694.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="560.9" y="1667.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="563.9" y="1678.0"></text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.03%)</title><rect x="560.9" y="1651.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="563.9" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 1.33%)</title><rect x="561.2" y="1891.0" width="15.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.2" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 1.08%)</title><rect x="564.2" y="1875.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.2" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 1.08%)</title><rect x="564.2" y="1859.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (34 samples, 1.08%)</title><rect x="564.2" y="1843.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (32 samples, 1.02%)</title><rect x="564.2" y="1827.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.2" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="564.2" y="1811.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.2" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="564.2" y="1795.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.2" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="564.2" y="1779.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.2" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="564.2" y="1763.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.2" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="564.2" y="1747.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="564.2" y="1731.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.2" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="564.2" y="1715.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="567.2" y="1726.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="564.2" y="1699.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="567.2" y="1710.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="564.2" y="1683.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="567.2" y="1694.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="564.2" y="1667.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="567.2" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (31 samples, 0.98%)</title><rect x="564.6" y="1811.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.6" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (31 samples, 0.98%)</title><rect x="564.6" y="1795.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.6" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (30 samples, 0.95%)</title><rect x="565.0" y="1779.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.0" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 0.95%)</title><rect x="565.0" y="1763.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 0.95%)</title><rect x="565.0" y="1747.0" width="11.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.0" y="1758.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="565.0" y="1731.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="568.0" y="1742.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="565.4" y="1731.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="568.4" y="1742.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="565.7" y="1731.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="568.7" y="1742.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.19%)</title><rect x="566.1" y="1731.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="569.1" y="1742.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.10%)</title><rect x="566.1" y="1715.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="569.1" y="1726.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.06%)</title><rect x="567.2" y="1715.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="570.2" y="1726.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="568.0" y="1715.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="571.0" y="1726.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.63%)</title><rect x="568.4" y="1731.0" width="7.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="571.4" y="1742.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.60%)</title><rect x="568.7" y="1715.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="571.7" y="1726.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.60%)</title><rect x="568.7" y="1699.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="571.7" y="1710.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.54%)</title><rect x="569.5" y="1683.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="572.5" y="1694.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.54%)</title><rect x="569.5" y="1667.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="572.5" y="1678.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.51%)</title><rect x="569.5" y="1651.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="572.5" y="1662.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.48%)</title><rect x="569.9" y="1635.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="572.9" y="1646.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.44%)</title><rect x="570.2" y="1619.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="573.2" y="1630.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.44%)</title><rect x="570.2" y="1603.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="573.2" y="1614.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="575.5" y="1651.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.5" y="1662.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="575.8" y="1731.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="578.8" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.06%)</title><rect x="576.2" y="1827.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.2" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.03%)</title><rect x="577.0" y="1939.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.0" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.03%)</title><rect x="577.0" y="1923.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.03%)</title><rect x="577.0" y="1907.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="577.0" y="1891.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="577.0" y="1875.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (95 samples, 3.01%)</title><rect x="577.3" y="1939.0" width="35.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.3" y="1950.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.03%)</title><rect x="578.5" y="1923.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.5" y="1934.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="578.5" y="1907.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.5" y="1918.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="578.5" y="1891.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="581.5" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.03%)</title><rect x="578.8" y="1923.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$149/338232184.get (1 samples, 0.03%)</title><rect x="578.8" y="1907.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.03%)</title><rect x="578.8" y="1891.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.8" y="1902.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="578.8" y="1875.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.8" y="1886.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="578.8" y="1859.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.8" y="1870.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.03%)</title><rect x="578.8" y="1843.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="581.8" y="1854.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="578.8" y="1827.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="581.8" y="1838.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="578.8" y="1811.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="581.8" y="1822.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="578.8" y="1795.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="581.8" y="1806.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (90 samples, 2.86%)</title><rect x="579.2" y="1923.0" width="33.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.2" y="1934.0">su..</text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.03%)</title><rect x="581.5" y="1907.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="584.5" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (81 samples, 2.57%)</title><rect x="581.8" y="1907.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.8" y="1918.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (81 samples, 2.57%)</title><rect x="581.8" y="1891.0" width="30.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.8" y="1902.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (81 samples, 2.57%)</title><rect x="581.8" y="1875.0" width="30.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.8" y="1886.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (81 samples, 2.57%)</title><rect x="581.8" y="1859.0" width="30.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.8" y="1870.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (78 samples, 2.48%)</title><rect x="583.0" y="1843.0" width="29.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.0" y="1854.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.03%)</title><rect x="583.7" y="1827.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="586.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 2.32%)</title><rect x="584.1" y="1827.0" width="27.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="587.1" y="1838.0">[..</text>
</g>
<g>
<title>__GI___libc_read (72 samples, 2.28%)</title><rect x="584.1" y="1811.0" width="26.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="587.1" y="1822.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 2.28%)</title><rect x="584.1" y="1795.0" width="26.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.1" y="1806.0">e..</text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.06%)</title><rect x="584.1" y="1779.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.1" y="1790.0"></text>
</g>
<g>
<title>do_syscall_64 (70 samples, 2.22%)</title><rect x="584.8" y="1779.0" width="26.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.8" y="1790.0">d..</text>
</g>
<g>
<title>__x64_sys_read (63 samples, 2.00%)</title><rect x="587.5" y="1763.0" width="23.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="590.5" y="1774.0">_..</text>
</g>
<g>
<title>ksys_read (63 samples, 2.00%)</title><rect x="587.5" y="1747.0" width="23.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="590.5" y="1758.0">k..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.10%)</title><rect x="587.8" y="1731.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="590.8" y="1742.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="587.8" y="1715.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.8" y="1726.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.10%)</title><rect x="587.8" y="1699.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="590.8" y="1710.0"></text>
</g>
<g>
<title>vfs_read (59 samples, 1.87%)</title><rect x="589.0" y="1731.0" width="22.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="592.0" y="1742.0">v..</text>
</g>
<g>
<title>__vfs_read (56 samples, 1.78%)</title><rect x="589.0" y="1715.0" width="20.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="592.0" y="1726.0"></text>
</g>
<g>
<title>new_sync_read (56 samples, 1.78%)</title><rect x="589.0" y="1699.0" width="20.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.0" y="1710.0"></text>
</g>
<g>
<title>sock_read_iter (55 samples, 1.75%)</title><rect x="589.3" y="1683.0" width="20.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="592.3" y="1694.0"></text>
</g>
<g>
<title>sock_recvmsg (55 samples, 1.75%)</title><rect x="589.3" y="1667.0" width="20.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="592.3" y="1678.0"></text>
</g>
<g>
<title>inet_recvmsg (53 samples, 1.68%)</title><rect x="589.3" y="1651.0" width="19.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.3" y="1662.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="589.3" y="1635.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.3" y="1646.0"></text>
</g>
<g>
<title>tcp_recvmsg (52 samples, 1.65%)</title><rect x="589.7" y="1635.0" width="19.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="592.7" y="1646.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="591.6" y="1619.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="594.6" y="1630.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="591.9" y="1603.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="594.9" y="1614.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="592.3" y="1619.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.3" y="1630.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (42 samples, 1.33%)</title><rect x="592.7" y="1619.0" width="15.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.7" y="1630.0"></text>
</g>
<g>
<title>tcp_send_ack (42 samples, 1.33%)</title><rect x="592.7" y="1603.0" width="15.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="595.7" y="1614.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (42 samples, 1.33%)</title><rect x="592.7" y="1587.0" width="15.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="595.7" y="1598.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.19%)</title><rect x="592.7" y="1571.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="595.7" y="1582.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="593.4" y="1555.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="596.4" y="1566.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.06%)</title><rect x="593.8" y="1555.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="596.8" y="1566.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="594.6" y="1555.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="597.6" y="1566.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (35 samples, 1.11%)</title><rect x="594.9" y="1571.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="597.9" y="1582.0"></text>
</g>
<g>
<title>ip_queue_xmit (35 samples, 1.11%)</title><rect x="594.9" y="1555.0" width="13.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="597.9" y="1566.0"></text>
</g>
<g>
<title>__ip_queue_xmit (35 samples, 1.11%)</title><rect x="594.9" y="1539.0" width="13.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="597.9" y="1550.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="595.7" y="1523.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="598.7" y="1534.0"></text>
</g>
<g>
<title>ip_local_out (31 samples, 0.98%)</title><rect x="596.1" y="1523.0" width="11.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="599.1" y="1534.0"></text>
</g>
<g>
<title>ip_output (31 samples, 0.98%)</title><rect x="596.1" y="1507.0" width="11.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.1" y="1518.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="596.1" y="1491.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="599.1" y="1502.0"></text>
</g>
<g>
<title>ip_finish_output (29 samples, 0.92%)</title><rect x="596.4" y="1491.0" width="10.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="599.4" y="1502.0"></text>
</g>
<g>
<title>ip_finish_output2 (29 samples, 0.92%)</title><rect x="596.4" y="1475.0" width="10.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="599.4" y="1486.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 0.76%)</title><rect x="596.4" y="1459.0" width="9.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="599.4" y="1470.0"></text>
</g>
<g>
<title>do_softirq.part.21 (24 samples, 0.76%)</title><rect x="596.4" y="1443.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="599.4" y="1454.0"></text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 0.76%)</title><rect x="596.4" y="1427.0" width="9.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.4" y="1438.0"></text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 0.76%)</title><rect x="596.4" y="1411.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="599.4" y="1422.0"></text>
</g>
<g>
<title>net_rx_action (23 samples, 0.73%)</title><rect x="596.8" y="1395.0" width="8.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.8" y="1406.0"></text>
</g>
<g>
<title>process_backlog (23 samples, 0.73%)</title><rect x="596.8" y="1379.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.8" y="1390.0"></text>
</g>
<g>
<title>__netif_receive_skb (23 samples, 0.73%)</title><rect x="596.8" y="1363.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="599.8" y="1374.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (23 samples, 0.73%)</title><rect x="596.8" y="1347.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="599.8" y="1358.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="596.8" y="1331.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.8" y="1342.0"></text>
</g>
<g>
<title>ip_rcv (22 samples, 0.70%)</title><rect x="597.2" y="1331.0" width="8.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.2" y="1342.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.03%)</title><rect x="597.2" y="1315.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.2" y="1326.0"></text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 0.67%)</title><rect x="597.6" y="1315.0" width="7.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.6" y="1326.0"></text>
</g>
<g>
<title>ip_local_deliver (21 samples, 0.67%)</title><rect x="597.6" y="1299.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="600.6" y="1310.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (21 samples, 0.67%)</title><rect x="597.6" y="1283.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="600.6" y="1294.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 0.67%)</title><rect x="597.6" y="1267.0" width="7.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="600.6" y="1278.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="597.9" y="1251.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.9" y="1262.0"></text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 0.60%)</title><rect x="598.3" y="1251.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="601.3" y="1262.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="598.3" y="1235.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="601.3" y="1246.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="598.7" y="1235.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="601.7" y="1246.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="598.7" y="1219.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.7" y="1230.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="599.1" y="1235.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="602.1" y="1246.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.51%)</title><rect x="599.4" y="1235.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="602.4" y="1246.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.51%)</title><rect x="599.4" y="1219.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="602.4" y="1230.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="600.2" y="1203.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.2" y="1214.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="600.2" y="1187.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="603.2" y="1198.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="600.2" y="1171.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="603.2" y="1182.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="600.6" y="1187.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="603.6" y="1198.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="600.6" y="1171.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="603.6" y="1182.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.35%)</title><rect x="600.9" y="1203.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="603.9" y="1214.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="602.1" y="1187.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="605.1" y="1198.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.19%)</title><rect x="602.4" y="1187.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="605.4" y="1198.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="603.6" y="1171.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="606.6" y="1182.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="603.6" y="1155.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="606.6" y="1166.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="603.6" y="1139.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="606.6" y="1150.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.06%)</title><rect x="603.9" y="1155.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.9" y="1166.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.06%)</title><rect x="603.9" y="1139.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.9" y="1150.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="604.3" y="1123.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="607.3" y="1134.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="604.7" y="1187.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.7" y="1198.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="605.1" y="1203.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="608.1" y="1214.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.16%)</title><rect x="605.4" y="1459.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="608.4" y="1470.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.16%)</title><rect x="605.4" y="1443.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="608.4" y="1454.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.13%)</title><rect x="605.8" y="1427.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="608.8" y="1438.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.06%)</title><rect x="606.6" y="1411.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.6" y="1422.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.06%)</title><rect x="606.6" y="1395.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="609.6" y="1406.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.06%)</title><rect x="606.6" y="1379.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.6" y="1390.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.06%)</title><rect x="606.6" y="1363.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.6" y="1374.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="607.3" y="1491.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="610.3" y="1502.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="607.7" y="1523.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="610.7" y="1534.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="608.1" y="1571.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="611.1" y="1582.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="608.4" y="1619.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="611.4" y="1630.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="608.8" y="1619.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="611.8" y="1630.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="609.2" y="1651.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="612.2" y="1662.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="609.2" y="1635.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="612.2" y="1646.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.03%)</title><rect x="609.5" y="1651.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="612.5" y="1662.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.10%)</title><rect x="609.9" y="1715.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="612.9" y="1726.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.10%)</title><rect x="609.9" y="1699.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.9" y="1710.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="609.9" y="1683.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="612.9" y="1694.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="609.9" y="1667.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.9" y="1678.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="609.9" y="1651.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="612.9" y="1662.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.06%)</title><rect x="610.3" y="1683.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="613.3" y="1694.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="610.7" y="1667.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="613.7" y="1678.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="610.7" y="1651.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="613.7" y="1662.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="610.7" y="1635.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.7" y="1646.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="610.7" y="1619.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.7" y="1630.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="610.7" y="1603.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.7" y="1614.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="610.7" y="1587.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="613.7" y="1598.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="610.7" y="1571.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.7" y="1582.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="611.0" y="1811.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="614.0" y="1822.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.03%)</title><rect x="611.4" y="1827.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="614.4" y="1838.0"></text>
</g>
<g>
<title>read@plt (1 samples, 0.03%)</title><rect x="611.8" y="1827.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="614.8" y="1838.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.06%)</title><rect x="612.2" y="1907.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="615.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$188/546108432.accept (6 samples, 0.19%)</title><rect x="612.9" y="2131.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.9" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (6 samples, 0.19%)</title><rect x="612.9" y="2115.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.9" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$181/525718990.run (6 samples, 0.19%)</title><rect x="612.9" y="2099.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.9" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (6 samples, 0.19%)</title><rect x="612.9" y="2083.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.9" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (6 samples, 0.19%)</title><rect x="612.9" y="2067.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.9" y="2078.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="613.3" y="2051.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.3" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="613.7" y="2051.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.7" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="613.7" y="2035.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.7" y="2046.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.10%)</title><rect x="614.0" y="2051.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.0" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.06%)</title><rect x="614.0" y="2035.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.0" y="2046.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="614.0" y="2019.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.0" y="2030.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="614.0" y="2003.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.0" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.03%)</title><rect x="614.8" y="2035.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.8" y="2046.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="614.8" y="2019.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.8" y="2030.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="614.8" y="2003.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.8" y="2014.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.03%)</title><rect x="615.2" y="2147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.2" y="2158.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="615.2" y="2131.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="618.2" y="2142.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="615.2" y="2115.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="618.2" y="2126.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="615.2" y="2099.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="618.2" y="2110.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="615.2" y="2083.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="618.2" y="2094.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="615.2" y="2067.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="618.2" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="615.5" y="2147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.5" y="2158.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="615.5" y="2131.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.5" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (15 samples, 0.48%)</title><rect x="615.9" y="2147.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.9" y="2158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.32%)</title><rect x="617.8" y="2131.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.8" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (3 samples, 0.10%)</title><rect x="617.8" y="2115.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.8" y="2126.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="618.2" y="2099.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="621.2" y="2110.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.22%)</title><rect x="618.9" y="2115.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.9" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.22%)</title><rect x="618.9" y="2099.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.9" y="2110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.16%)</title><rect x="619.7" y="2083.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.7" y="2094.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.10%)</title><rect x="620.0" y="2067.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.0" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="620.0" y="2051.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.0" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.03%)</title><rect x="620.0" y="2035.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.0" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.interestOps (1 samples, 0.03%)</title><rect x="620.0" y="2019.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.0" y="2030.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="620.4" y="2051.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.4" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.03%)</title><rect x="620.4" y="2035.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.4" y="2046.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.cancellationRequested (1 samples, 0.03%)</title><rect x="620.4" y="2019.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.4" y="2030.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.03%)</title><rect x="620.4" y="2003.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.4" y="2014.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (1 samples, 0.03%)</title><rect x="620.8" y="2051.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.8" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="621.2" y="2067.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.2" y="2078.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.03%)</title><rect x="621.2" y="2051.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.2" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="621.2" y="2035.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.2" y="2046.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="621.2" y="2019.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.2" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (75 samples, 2.38%)</title><rect x="621.5" y="2147.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.5" y="2158.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/2085266465.run (47 samples, 1.49%)</title><rect x="621.5" y="2131.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.5" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (47 samples, 1.49%)</title><rect x="621.5" y="2115.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.5" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (2 samples, 0.06%)</title><rect x="621.5" y="2099.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.5" y="2110.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (2 samples, 0.06%)</title><rect x="621.5" y="2083.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.5" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 1.43%)</title><rect x="622.3" y="2099.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.3" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 1.43%)</title><rect x="622.3" y="2083.0" width="16.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.3" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.10%)</title><rect x="622.7" y="2067.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.7" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.10%)</title><rect x="622.7" y="2051.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.7" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.10%)</title><rect x="622.7" y="2035.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.7" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.10%)</title><rect x="622.7" y="2019.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.7" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.10%)</title><rect x="622.7" y="2003.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.7" y="2014.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="622.7" y="1987.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="625.7" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.03%)</title><rect x="623.4" y="1987.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.4" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (41 samples, 1.30%)</title><rect x="623.8" y="2067.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="626.8" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (41 samples, 1.30%)</title><rect x="623.8" y="2051.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.8" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/133136300.run (39 samples, 1.24%)</title><rect x="624.2" y="2035.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (39 samples, 1.24%)</title><rect x="624.2" y="2019.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.2" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (37 samples, 1.17%)</title><rect x="624.5" y="2003.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.5" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (11 samples, 0.35%)</title><rect x="624.5" y="1987.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (2 samples, 0.06%)</title><rect x="627.9" y="1971.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.9" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (26 samples, 0.83%)</title><rect x="628.6" y="1987.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.6" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (11 samples, 0.35%)</title><rect x="629.0" y="1971.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.0" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (8 samples, 0.25%)</title><rect x="630.1" y="1955.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.1" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (8 samples, 0.25%)</title><rect x="630.1" y="1939.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1800031768.linkToTargetMethod (2 samples, 0.06%)</title><rect x="630.1" y="1923.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.1" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1344199921.invoke (2 samples, 0.06%)</title><rect x="630.1" y="1907.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.1" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="630.1" y="1891.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.1" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.06%)</title><rect x="630.1" y="1875.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.1" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.06%)</title><rect x="630.1" y="1859.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.1" y="1870.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="630.1" y="1843.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="633.1" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.03%)</title><rect x="630.5" y="1843.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="633.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.19%)</title><rect x="630.9" y="1923.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.9" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6 samples, 0.19%)</title><rect x="630.9" y="1907.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.9" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.13%)</title><rect x="630.9" y="1891.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.9" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.13%)</title><rect x="630.9" y="1875.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.9" y="1886.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="630.9" y="1859.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.10%)</title><rect x="631.3" y="1859.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.3" y="1870.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.06%)</title><rect x="631.6" y="1843.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.6" y="1854.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.06%)</title><rect x="631.6" y="1827.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.6" y="1838.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.06%)</title><rect x="631.6" y="1811.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.6" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.06%)</title><rect x="632.4" y="1891.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.06%)</title><rect x="632.4" y="1875.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.4" y="1886.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.06%)</title><rect x="632.4" y="1859.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.4" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.06%)</title><rect x="632.4" y="1843.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.4" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (14 samples, 0.44%)</title><rect x="633.1" y="1971.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.03%)</title><rect x="633.5" y="1955.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.5" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.03%)</title><rect x="633.9" y="1955.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.9" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.35%)</title><rect x="634.3" y="1955.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.3" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.35%)</title><rect x="634.3" y="1939.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.3" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.35%)</title><rect x="634.3" y="1923.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.3" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.35%)</title><rect x="634.3" y="1907.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.3" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (11 samples, 0.35%)</title><rect x="634.3" y="1891.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="634.3" y="1875.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.3" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="634.3" y="1859.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.3" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="634.3" y="1843.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.3" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.32%)</title><rect x="634.6" y="1875.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.6" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.32%)</title><rect x="634.6" y="1859.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.6" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.32%)</title><rect x="634.6" y="1843.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.6" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.32%)</title><rect x="634.6" y="1827.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.32%)</title><rect x="634.6" y="1811.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.6" y="1822.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="634.6" y="1795.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="637.6" y="1806.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="635.0" y="1795.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="638.0" y="1806.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="635.4" y="1779.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="638.4" y="1790.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="635.8" y="1779.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="638.8" y="1790.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.16%)</title><rect x="636.1" y="1795.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="639.1" y="1806.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.16%)</title><rect x="636.1" y="1779.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="639.1" y="1790.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="636.1" y="1763.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.1" y="1774.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.13%)</title><rect x="636.5" y="1763.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="639.5" y="1774.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="637.3" y="1747.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="640.3" y="1758.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="637.3" y="1731.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.3" y="1742.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="637.3" y="1715.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.3" y="1726.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.06%)</title><rect x="637.3" y="1699.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="640.3" y="1710.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.06%)</title><rect x="637.3" y="1683.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="640.3" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="637.3" y="1667.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.3" y="1678.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="638.0" y="1795.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="641.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1 samples, 0.03%)</title><rect x="638.4" y="2003.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.4" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="638.4" y="1987.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.4" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="638.8" y="2035.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$156/184979527.run (28 samples, 0.89%)</title><rect x="639.1" y="2131.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.1" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (28 samples, 0.89%)</title><rect x="639.1" y="2115.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.1" y="2126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="639.5" y="2099.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.5" y="2110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="639.5" y="2083.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.5" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$190/680108995.get$Lambda (1 samples, 0.03%)</title><rect x="639.5" y="2067.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.5" y="2078.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="639.5" y="2051.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="642.5" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.83%)</title><rect x="639.9" y="2099.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.9" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.76%)</title><rect x="639.9" y="2083.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.9" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (23 samples, 0.73%)</title><rect x="640.3" y="2067.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.3" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="640.3" y="2051.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.3" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="640.3" y="2035.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.3" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.06%)</title><rect x="640.6" y="2051.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.6" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="640.6" y="2035.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.6" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.06%)</title><rect x="640.6" y="2019.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.6" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.06%)</title><rect x="640.6" y="2003.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.6" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.06%)</title><rect x="640.6" y="1987.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.06%)</title><rect x="640.6" y="1971.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.06%)</title><rect x="640.6" y="1955.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.63%)</title><rect x="641.4" y="2051.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.4" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.63%)</title><rect x="641.4" y="2035.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.4" y="2046.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (6 samples, 0.19%)</title><rect x="642.1" y="2019.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.1" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.38%)</title><rect x="644.4" y="2019.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.35%)</title><rect x="644.8" y="2003.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.35%)</title><rect x="644.8" y="1987.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.8" y="1998.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="644.8" y="1971.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="647.8" y="1982.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.29%)</title><rect x="645.1" y="1971.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="648.1" y="1982.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.25%)</title><rect x="645.5" y="1955.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="648.5" y="1966.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.25%)</title><rect x="645.5" y="1939.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="648.5" y="1950.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.22%)</title><rect x="645.9" y="1923.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.9" y="1934.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.22%)</title><rect x="645.9" y="1907.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.9" y="1918.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.22%)</title><rect x="645.9" y="1891.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="648.9" y="1902.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.22%)</title><rect x="645.9" y="1875.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="648.9" y="1886.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.22%)</title><rect x="645.9" y="1859.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="648.9" y="1870.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.22%)</title><rect x="645.9" y="1843.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="648.9" y="1854.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="648.5" y="1971.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="651.5" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$190/680108995.run (2 samples, 0.06%)</title><rect x="648.9" y="2083.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.9" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.06%)</title><rect x="648.9" y="2067.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.9" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.06%)</title><rect x="648.9" y="2051.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.9" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="649.2" y="2035.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (20 samples, 0.63%)</title><rect x="649.6" y="2147.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.6" y="2158.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.16%)</title><rect x="651.1" y="2131.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.1" y="2142.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.16%)</title><rect x="651.1" y="2115.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.1" y="2126.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.03%)</title><rect x="651.1" y="2099.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.1" y="2110.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.03%)</title><rect x="651.1" y="2083.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.1" y="2094.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="651.1" y="2067.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="654.1" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="651.1" y="2051.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="654.1" y="2062.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="651.1" y="2035.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="654.1" y="2046.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="651.1" y="2019.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="654.1" y="2030.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="651.1" y="2003.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="654.1" y="2014.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.03%)</title><rect x="651.1" y="1987.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="654.1" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.10%)</title><rect x="651.5" y="2099.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.5" y="2110.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.10%)</title><rect x="651.5" y="2083.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="654.5" y="2094.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.06%)</title><rect x="651.9" y="2067.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="654.9" y="2078.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="651.9" y="2051.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="654.9" y="2062.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="652.2" y="2035.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="655.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.03%)</title><rect x="652.6" y="2099.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.6" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (11 samples, 0.35%)</title><rect x="653.0" y="2131.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.0" y="2142.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="654.5" y="2115.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="657.5" y="2126.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="654.5" y="2099.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="657.5" y="2110.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="654.5" y="2083.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="657.5" y="2094.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="654.5" y="2067.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="657.5" y="2078.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.10%)</title><rect x="654.9" y="2115.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.9" y="2126.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.03%)</title><rect x="656.0" y="2115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.0" y="2126.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="656.0" y="2099.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="659.0" y="2110.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="656.0" y="2083.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="659.0" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="656.0" y="2067.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="659.0" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="656.0" y="2051.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="659.0" y="2062.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="656.0" y="2035.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="659.0" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.03%)</title><rect x="656.0" y="2019.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="659.0" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2 samples, 0.06%)</title><rect x="656.4" y="2115.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.4" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (20 samples, 0.63%)</title><rect x="657.1" y="2147.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.1" y="2158.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.29%)</title><rect x="657.5" y="2131.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.5" y="2142.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.29%)</title><rect x="657.5" y="2115.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.5" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.19%)</title><rect x="658.6" y="2099.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.6" y="2110.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.19%)</title><rect x="658.6" y="2083.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="661.6" y="2094.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.10%)</title><rect x="658.6" y="2067.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="661.6" y="2078.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.10%)</title><rect x="659.7" y="2067.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="662.7" y="2078.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="659.7" y="2051.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="662.7" y="2062.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="660.1" y="2051.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="663.1" y="2062.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="660.1" y="2035.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="663.1" y="2046.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.06%)</title><rect x="660.9" y="2131.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.9" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.06%)</title><rect x="660.9" y="2115.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.9" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.06%)</title><rect x="660.9" y="2099.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.9" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (8 samples, 0.25%)</title><rect x="661.6" y="2131.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.6" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (8 samples, 0.25%)</title><rect x="661.6" y="2115.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.6" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (8 samples, 0.25%)</title><rect x="661.6" y="2099.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.6" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (8 samples, 0.25%)</title><rect x="661.6" y="2083.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.6" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.06%)</title><rect x="663.8" y="2067.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.8" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2 samples, 0.06%)</title><rect x="664.6" y="2147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.6" y="2158.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (210 samples, 6.66%)</title><rect x="665.3" y="2147.0" width="78.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.3" y="2158.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (210 samples, 6.66%)</title><rect x="665.3" y="2131.0" width="78.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.3" y="2142.0">sun/nio/c..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.03%)</title><rect x="666.1" y="2115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.1" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (205 samples, 6.51%)</title><rect x="666.5" y="2115.0" width="76.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.5" y="2126.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (123 samples, 3.90%)</title><rect x="666.5" y="2099.0" width="46.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.5" y="2110.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.06%)</title><rect x="667.2" y="2083.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="670.2" y="2094.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 3.68%)</title><rect x="668.0" y="2083.0" width="43.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="671.0" y="2094.0">[unk..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="668.0" y="2067.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="671.0" y="2078.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.06%)</title><rect x="668.3" y="2067.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="671.3" y="2078.0"></text>
</g>
<g>
<title>epoll_wait (113 samples, 3.59%)</title><rect x="669.1" y="2067.0" width="42.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="672.1" y="2078.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 3.36%)</title><rect x="671.7" y="2051.0" width="39.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="674.7" y="2062.0">ent..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="671.7" y="2035.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="674.7" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 3.33%)</title><rect x="672.1" y="2035.0" width="39.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="675.1" y="2046.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (90 samples, 2.86%)</title><rect x="677.7" y="2019.0" width="33.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.7" y="2030.0">__..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="677.7" y="2003.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="680.7" y="2014.0"></text>
</g>
<g>
<title>do_epoll_wait (89 samples, 2.82%)</title><rect x="678.1" y="2003.0" width="33.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="681.1" y="2014.0">do..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="678.1" y="1987.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="681.1" y="1998.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="678.1" y="1971.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="681.1" y="1982.0"></text>
</g>
<g>
<title>ep_poll (86 samples, 2.73%)</title><rect x="678.5" y="1987.0" width="32.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="681.5" y="1998.0">ep..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (40 samples, 1.27%)</title><rect x="683.3" y="1971.0" width="15.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="686.3" y="1982.0"></text>
</g>
<g>
<title>ep_send_events_proc (22 samples, 0.70%)</title><rect x="688.6" y="1955.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="691.6" y="1966.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (9 samples, 0.29%)</title><rect x="692.7" y="1939.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="695.7" y="1950.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.06%)</title><rect x="693.4" y="1923.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="696.4" y="1934.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.13%)</title><rect x="694.2" y="1923.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="697.2" y="1934.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.06%)</title><rect x="694.9" y="1907.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="697.9" y="1918.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="695.7" y="1923.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="698.7" y="1934.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.06%)</title><rect x="696.1" y="1939.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="699.1" y="1950.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.13%)</title><rect x="696.8" y="1955.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="699.8" y="1966.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="698.3" y="1971.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="701.3" y="1982.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (31 samples, 0.98%)</title><rect x="698.7" y="1971.0" width="11.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="701.7" y="1982.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (31 samples, 0.98%)</title><rect x="698.7" y="1955.0" width="11.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="701.7" y="1966.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="699.4" y="1939.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="702.4" y="1950.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (12 samples, 0.38%)</title><rect x="699.8" y="1939.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="702.8" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.32%)</title><rect x="700.2" y="1923.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.2" y="1934.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.21 (1 samples, 0.03%)</title><rect x="703.9" y="1923.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="706.9" y="1934.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="703.9" y="1907.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.9" y="1918.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (8 samples, 0.25%)</title><rect x="704.3" y="1939.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="707.3" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.25%)</title><rect x="704.3" y="1923.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="707.3" y="1934.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.25%)</title><rect x="707.3" y="1939.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.3" y="1950.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.22%)</title><rect x="707.7" y="1923.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.7" y="1934.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.16%)</title><rect x="708.4" y="1907.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="711.4" y="1918.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.06%)</title><rect x="709.5" y="1891.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.5" y="1902.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="709.5" y="1875.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="712.5" y="1886.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.06%)</title><rect x="709.5" y="1859.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="712.5" y="1870.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.06%)</title><rect x="709.5" y="1843.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="712.5" y="1854.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.06%)</title><rect x="709.5" y="1827.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="712.5" y="1838.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.06%)</title><rect x="709.5" y="1811.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.5" y="1822.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="709.5" y="1795.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="712.5" y="1806.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.03%)</title><rect x="710.3" y="1971.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="713.3" y="1982.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="710.7" y="1987.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="713.7" y="1998.0"></text>
</g>
<g>
<title>timespec64_add_safe (1 samples, 0.03%)</title><rect x="711.0" y="1987.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="714.0" y="1998.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.06%)</title><rect x="711.4" y="2083.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="714.4" y="2094.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="712.2" y="2083.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="715.2" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (62 samples, 1.97%)</title><rect x="712.5" y="2099.0" width="23.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.5" y="2110.0">s..</text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.10%)</title><rect x="712.5" y="2083.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.5" y="2094.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.10%)</title><rect x="712.5" y="2067.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.5" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (46 samples, 1.46%)</title><rect x="713.7" y="2083.0" width="17.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.7" y="2094.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="714.4" y="2067.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="717.4" y="2078.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="714.4" y="2051.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="717.4" y="2062.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="714.4" y="2035.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="717.4" y="2046.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="714.4" y="2019.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="717.4" y="2030.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (43 samples, 1.36%)</title><rect x="714.8" y="2067.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.8" y="2078.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="2051.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="718.9" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="2035.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="718.9" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="2019.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="718.9" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="2003.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="718.9" y="2014.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1987.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="718.9" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1971.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="718.9" y="1982.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1955.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="718.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1939.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="718.9" y="1950.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1923.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="718.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1907.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="718.9" y="1918.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1891.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="718.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1875.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="718.9" y="1886.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1859.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="718.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1843.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="718.9" y="1854.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1827.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="718.9" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1811.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="718.9" y="1822.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1795.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="718.9" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1779.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="718.9" y="1790.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1763.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="718.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1747.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="718.9" y="1758.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1731.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="718.9" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1715.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="718.9" y="1726.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1699.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="718.9" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1683.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="718.9" y="1694.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1667.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="718.9" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1651.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="718.9" y="1662.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1635.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="718.9" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1619.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="718.9" y="1630.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1603.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="718.9" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1587.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="718.9" y="1598.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1571.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="718.9" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1555.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="718.9" y="1566.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1539.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="718.9" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1523.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="718.9" y="1534.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1507.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="718.9" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1491.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="718.9" y="1502.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1475.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="718.9" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1459.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="718.9" y="1470.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1443.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="718.9" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1427.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="718.9" y="1438.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1411.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="718.9" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1395.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="718.9" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1379.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="718.9" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1363.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="718.9" y="1374.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1347.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="718.9" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1331.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="718.9" y="1342.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1315.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="718.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1299.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="718.9" y="1310.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1283.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="718.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1267.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="718.9" y="1278.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1251.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="718.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1235.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="718.9" y="1246.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1219.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="718.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1203.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="718.9" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1187.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="718.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1171.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="718.9" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1155.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="718.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1139.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="718.9" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1123.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="718.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1107.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="718.9" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1091.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="718.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1075.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="718.9" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1059.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="718.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1043.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="718.9" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="1027.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="718.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="1011.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="718.9" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="718.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="979.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="718.9" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="963.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="718.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="947.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="718.9" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="931.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="718.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="915.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="718.9" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="899.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="718.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="883.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="718.9" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="867.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="718.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="851.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="718.9" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="718.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="819.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="718.9" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="718.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="787.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="718.9" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="718.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="755.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="718.9" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="739.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="718.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="723.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="718.9" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="718.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="691.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="718.9" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="718.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="659.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="718.9" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="643.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="718.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="627.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="718.9" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="611.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="718.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="595.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="718.9" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="718.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="563.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="718.9" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="547.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="718.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="531.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="718.9" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="515.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="718.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="499.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="718.9" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="483.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="718.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="467.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="718.9" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="451.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="718.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="435.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="718.9" y="446.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="419.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="718.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="403.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="718.9" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="387.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="718.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="371.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="718.9" y="382.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="355.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="718.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="339.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="718.9" y="350.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="323.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="718.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="307.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="718.9" y="318.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="291.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="718.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="275.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="718.9" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="259.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="718.9" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="243.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="718.9" y="254.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="227.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="718.9" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="211.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="718.9" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="195.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="718.9" y="206.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="179.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="718.9" y="190.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="163.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="718.9" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="147.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="718.9" y="158.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="131.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="718.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="115.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="718.9" y="126.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="99.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="718.9" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="83.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="718.9" y="94.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="715.9" y="67.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="718.9" y="78.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="715.9" y="51.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="718.9" y="62.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.03%)</title><rect x="715.9" y="35.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="718.9" y="46.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (4 samples, 0.13%)</title><rect x="716.3" y="2051.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="719.3" y="2062.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.92%)</title><rect x="717.8" y="2051.0" width="10.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="720.8" y="2062.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="2035.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="720.8" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="2019.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="720.8" y="2030.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="2003.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="720.8" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1987.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="720.8" y="1998.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1971.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="720.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1955.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="720.8" y="1966.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1939.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="720.8" y="1950.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1923.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="720.8" y="1934.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1907.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="720.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1891.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="720.8" y="1902.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1875.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="720.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1859.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="720.8" y="1870.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1843.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="720.8" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1827.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="720.8" y="1838.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1811.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="720.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1795.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="720.8" y="1806.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1779.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="720.8" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1763.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="720.8" y="1774.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1747.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="720.8" y="1758.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1731.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="720.8" y="1742.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1715.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="720.8" y="1726.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1699.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="720.8" y="1710.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1683.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="720.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1667.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="720.8" y="1678.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1651.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="720.8" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1635.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="720.8" y="1646.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1619.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="720.8" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1603.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="720.8" y="1614.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1587.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="720.8" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1571.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="720.8" y="1582.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1555.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="720.8" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1539.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="720.8" y="1550.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1523.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="720.8" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1507.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="720.8" y="1518.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1491.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="720.8" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1475.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="720.8" y="1486.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1459.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="720.8" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1443.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="720.8" y="1454.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1427.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="720.8" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1411.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="720.8" y="1422.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1395.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="720.8" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1379.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="720.8" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1363.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="720.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1347.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="720.8" y="1358.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1331.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="720.8" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1315.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="720.8" y="1326.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1299.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="720.8" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1283.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="720.8" y="1294.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1267.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="720.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1251.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="720.8" y="1262.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1235.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="720.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1219.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="720.8" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1203.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="720.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1187.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="720.8" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1171.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="720.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1155.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="720.8" y="1166.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1139.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="720.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1123.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="720.8" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1107.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="720.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1091.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="720.8" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1075.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="720.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1059.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="720.8" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1043.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="720.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="1027.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="720.8" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="720.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="995.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="720.8" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="720.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="963.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="720.8" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="947.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="720.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="931.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="720.8" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="915.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="720.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="899.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="720.8" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="883.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="720.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="867.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="720.8" y="878.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="851.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="720.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="835.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="720.8" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="720.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="803.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="720.8" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="787.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="720.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="771.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="720.8" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="755.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="720.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="739.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="720.8" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="723.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="720.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="707.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="720.8" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="720.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="675.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="720.8" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="659.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="720.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="643.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="720.8" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="627.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="720.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="611.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="720.8" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="595.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="720.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="579.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="720.8" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="563.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="720.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="547.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="720.8" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="720.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="515.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="720.8" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="499.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="720.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="483.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="720.8" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="467.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="720.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="451.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="720.8" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="435.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="720.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="419.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="720.8" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="403.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="720.8" y="414.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="387.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="720.8" y="398.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="371.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="720.8" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="355.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="720.8" y="366.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="339.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="720.8" y="350.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="323.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="720.8" y="334.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="307.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="720.8" y="318.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="291.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="720.8" y="302.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="275.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="720.8" y="286.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="259.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="720.8" y="270.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.06%)</title><rect x="717.8" y="243.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="720.8" y="254.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="717.8" y="227.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="720.8" y="238.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.06%)</title><rect x="717.8" y="211.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="720.8" y="222.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="717.8" y="195.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.8" y="206.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="717.8" y="179.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="720.8" y="190.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.06%)</title><rect x="717.8" y="163.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="720.8" y="174.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.06%)</title><rect x="717.8" y="147.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="720.8" y="158.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.06%)</title><rect x="717.8" y="131.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.8" y="142.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.06%)</title><rect x="717.8" y="115.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="720.8" y="126.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.06%)</title><rect x="717.8" y="99.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="720.8" y="110.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.06%)</title><rect x="717.8" y="83.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="720.8" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.06%)</title><rect x="717.8" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.8" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.06%)</title><rect x="717.8" y="51.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="720.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="717.8" y="35.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="720.8" y="46.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="718.5" y="2035.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="721.5" y="2046.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.06%)</title><rect x="718.5" y="2019.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="721.5" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="718.5" y="2003.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="721.5" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="718.5" y="1987.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="721.5" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.06%)</title><rect x="718.5" y="1971.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="721.5" y="1982.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.06%)</title><rect x="718.5" y="1955.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.5" y="1966.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.06%)</title><rect x="718.5" y="1939.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="721.5" y="1950.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.06%)</title><rect x="718.5" y="1923.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="721.5" y="1934.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.06%)</title><rect x="718.5" y="1907.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="721.5" y="1918.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.06%)</title><rect x="718.5" y="1891.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="721.5" y="1902.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="718.9" y="1875.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="721.9" y="1886.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="718.9" y="1859.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="721.9" y="1870.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="718.9" y="1843.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.9" y="1854.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="719.3" y="2019.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="722.3" y="2030.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.76%)</title><rect x="719.6" y="2035.0" width="9.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="722.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.25%)</title><rect x="719.6" y="2019.0" width="3.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="722.6" y="2030.0"></text>
</g>
<g>
<title>__GI___libc_read (8 samples, 0.25%)</title><rect x="719.6" y="2003.0" width="3.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="722.6" y="2014.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.19%)</title><rect x="720.4" y="1987.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="723.4" y="1998.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.19%)</title><rect x="720.4" y="1971.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="723.4" y="1982.0"></text>
</g>
<g>
<title>__x64_sys_read (5 samples, 0.16%)</title><rect x="720.8" y="1955.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="723.8" y="1966.0"></text>
</g>
<g>
<title>ksys_read (5 samples, 0.16%)</title><rect x="720.8" y="1939.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="723.8" y="1950.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.16%)</title><rect x="720.8" y="1923.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="723.8" y="1934.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.06%)</title><rect x="720.8" y="1907.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="723.8" y="1918.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.10%)</title><rect x="721.5" y="1907.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="724.5" y="1918.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.10%)</title><rect x="721.5" y="1891.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.5" y="1902.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.10%)</title><rect x="721.5" y="1875.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="724.5" y="1886.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="721.9" y="1859.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="724.9" y="1870.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="721.9" y="1843.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="724.9" y="1854.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="721.9" y="1827.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="724.9" y="1838.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="722.3" y="1859.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="725.3" y="1870.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="722.3" y="1843.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="725.3" y="1854.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="722.3" y="1827.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="725.3" y="1838.0"></text>
</g>
<g>
<title>__GI___libc_read (16 samples, 0.51%)</title><rect x="722.6" y="2019.0" width="6.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="725.6" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.51%)</title><rect x="722.6" y="2003.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="725.6" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.51%)</title><rect x="722.6" y="1987.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="725.6" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_read (11 samples, 0.35%)</title><rect x="724.1" y="1971.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="727.1" y="1982.0"></text>
</g>
<g>
<title>ksys_read (11 samples, 0.35%)</title><rect x="724.1" y="1955.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="727.1" y="1966.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.06%)</title><rect x="724.1" y="1939.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="727.1" y="1950.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="724.1" y="1923.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="727.1" y="1934.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="724.1" y="1907.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="727.1" y="1918.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="724.9" y="1939.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="727.9" y="1950.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.25%)</title><rect x="725.3" y="1939.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="728.3" y="1950.0"></text>
</g>
<g>
<title>__vfs_read (4 samples, 0.13%)</title><rect x="725.3" y="1923.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.3" y="1934.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.13%)</title><rect x="725.3" y="1907.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="728.3" y="1918.0"></text>
</g>
<g>
<title>pipe_read (4 samples, 0.13%)</title><rect x="725.3" y="1891.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="728.3" y="1902.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.06%)</title><rect x="725.6" y="1875.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="728.6" y="1886.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="726.0" y="1859.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.0" y="1870.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="726.4" y="1875.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="729.4" y="1886.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.03%)</title><rect x="726.4" y="1859.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="729.4" y="1870.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="726.4" y="1843.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="729.4" y="1854.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.13%)</title><rect x="726.8" y="1923.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="729.8" y="1934.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.13%)</title><rect x="726.8" y="1907.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="729.8" y="1918.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="726.8" y="1891.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="729.8" y="1902.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="727.1" y="1891.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="730.1" y="1902.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="727.1" y="1875.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.1" y="1886.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="727.5" y="1891.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.5" y="1902.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="727.9" y="1891.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="730.9" y="1902.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="728.3" y="1971.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="731.3" y="1982.0"></text>
</g>
<g>
<title>__GI___libc_read (6 samples, 0.19%)</title><rect x="728.6" y="2051.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="731.6" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (13 samples, 0.41%)</title><rect x="730.9" y="2083.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.9" y="2094.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.16%)</title><rect x="730.9" y="2067.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.9" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.16%)</title><rect x="730.9" y="2051.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.9" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.16%)</title><rect x="730.9" y="2035.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.9" y="2046.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (3 samples, 0.10%)</title><rect x="731.3" y="2019.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.3" y="2030.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.03%)</title><rect x="732.4" y="2019.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.4" y="2030.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (3 samples, 0.10%)</title><rect x="732.8" y="2067.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.8" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (3 samples, 0.10%)</title><rect x="732.8" y="2051.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.8" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.10%)</title><rect x="732.8" y="2035.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.8" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (5 samples, 0.16%)</title><rect x="733.9" y="2067.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.9" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.06%)</title><rect x="735.0" y="2051.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.0" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (2 samples, 0.06%)</title><rect x="735.0" y="2035.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.0" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (8 samples, 0.25%)</title><rect x="735.8" y="2099.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.8" y="2110.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.03%)</title><rect x="735.8" y="2083.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.8" y="2094.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.03%)</title><rect x="735.8" y="2067.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.8" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.registeredEvents (7 samples, 0.22%)</title><rect x="736.1" y="2083.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.1" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (3 samples, 0.10%)</title><rect x="738.7" y="2099.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.7" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.10%)</title><rect x="738.7" y="2083.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.7" y="2094.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.10%)</title><rect x="738.7" y="2067.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.7" y="2078.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.10%)</title><rect x="738.7" y="2051.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.7" y="2062.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.10%)</title><rect x="738.7" y="2035.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.7" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.06%)</title><rect x="739.9" y="2099.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.9" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.06%)</title><rect x="739.9" y="2083.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.9" y="2094.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.06%)</title><rect x="739.9" y="2067.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="742.9" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (7 samples, 0.22%)</title><rect x="740.6" y="2099.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.6" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="740.6" y="2083.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="743.6" y="2094.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="740.6" y="2067.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="743.6" y="2078.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="741.0" y="2083.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="744.0" y="2094.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.06%)</title><rect x="741.4" y="2083.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.4" y="2094.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.hasNext (1 samples, 0.03%)</title><rect x="742.1" y="2083.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.1" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (1 samples, 0.03%)</title><rect x="742.1" y="2067.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.1" y="2078.0"></text>
</g>
<g>
<title>java/util/HashSet.remove (1 samples, 0.03%)</title><rect x="742.5" y="2083.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.5" y="2094.0"></text>
</g>
<g>
<title>java/util/HashMap.remove (1 samples, 0.03%)</title><rect x="742.5" y="2067.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.5" y="2078.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="742.9" y="2083.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="745.9" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.06%)</title><rect x="743.2" y="2115.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.2" y="2126.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="743.2" y="2099.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.2" y="2110.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="743.2" y="2083.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.2" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (26 samples, 0.83%)</title><rect x="744.0" y="2147.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.0" y="2158.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (26 samples, 0.83%)</title><rect x="744.0" y="2131.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.0" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.03%)</title><rect x="744.4" y="2115.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.4" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (24 samples, 0.76%)</title><rect x="744.7" y="2115.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.7" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (19 samples, 0.60%)</title><rect x="745.9" y="2099.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.9" y="2110.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.51%)</title><rect x="746.2" y="2083.0" width="6.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="749.2" y="2094.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="746.2" y="2067.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="749.2" y="2078.0"></text>
</g>
<g>
<title>epoll_wait (15 samples, 0.48%)</title><rect x="746.6" y="2067.0" width="5.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="749.6" y="2078.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.44%)</title><rect x="747.0" y="2051.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.0" y="2062.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.44%)</title><rect x="747.0" y="2035.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="750.0" y="2046.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 0.22%)</title><rect x="749.6" y="2019.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="752.6" y="2030.0"></text>
</g>
<g>
<title>do_epoll_wait (7 samples, 0.22%)</title><rect x="749.6" y="2003.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="752.6" y="2014.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="749.6" y="1987.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="752.6" y="1998.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="749.6" y="1971.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="752.6" y="1982.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="749.6" y="1955.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="752.6" y="1966.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="750.4" y="1987.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.4" y="1998.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 0.13%)</title><rect x="750.7" y="1987.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="753.7" y="1998.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (4 samples, 0.13%)</title><rect x="750.7" y="1971.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="753.7" y="1982.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="751.9" y="1955.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="754.9" y="1966.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.03%)</title><rect x="751.9" y="1939.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="754.9" y="1950.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="751.9" y="1923.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="754.9" y="1934.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="752.2" y="2083.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="755.2" y="2094.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="752.6" y="2083.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="755.6" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.03%)</title><rect x="753.0" y="2099.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.0" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.03%)</title><rect x="753.0" y="2083.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.0" y="2094.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="753.0" y="2067.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.0" y="2078.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="753.0" y="2051.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.0" y="2062.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="753.0" y="2035.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.0" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.03%)</title><rect x="753.4" y="2099.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.4" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.03%)</title><rect x="753.4" y="2083.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.4" y="2094.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="753.4" y="2067.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.4" y="2078.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="753.4" y="2051.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.4" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (8 samples, 0.25%)</title><rect x="753.7" y="2147.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.7" y="2158.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (8 samples, 0.25%)</title><rect x="753.7" y="2131.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.7" y="2142.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (8 samples, 0.25%)</title><rect x="753.7" y="2115.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.7" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.03%)</title><rect x="756.7" y="2147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.7" y="2158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="756.7" y="2131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.7" y="2142.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="756.7" y="2115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.7" y="2126.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="756.7" y="2099.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="759.7" y="2110.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="756.7" y="2083.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="759.7" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="756.7" y="2067.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="759.7" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="756.7" y="2051.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="759.7" y="2062.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="756.7" y="2035.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="759.7" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="756.7" y="2019.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="759.7" y="2030.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="756.7" y="2003.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="759.7" y="2014.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="756.7" y="1987.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="759.7" y="1998.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="756.7" y="1971.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="759.7" y="1982.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="756.7" y="1955.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="759.7" y="1966.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="756.7" y="1939.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="759.7" y="1950.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="756.7" y="1923.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="759.7" y="1934.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="757.1" y="2147.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="760.1" y="2158.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="757.1" y="2131.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="760.1" y="2142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="757.1" y="2115.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="760.1" y="2126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="757.5" y="2163.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.5" y="2174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.03%)</title><rect x="757.5" y="2147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.5" y="2158.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,068 samples, 33.89%)</title><rect x="757.8" y="2163.0" width="400.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.8" y="2174.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.06%)</title><rect x="758.6" y="2147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.6" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.06%)</title><rect x="759.3" y="2147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.3" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.06%)</title><rect x="759.3" y="2131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.3" y="2142.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="759.3" y="2115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.3" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.03%)</title><rect x="759.7" y="2115.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.7" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (50 samples, 1.59%)</title><rect x="760.1" y="2147.0" width="18.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.1" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (46 samples, 1.46%)</title><rect x="761.6" y="2131.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.6" y="2142.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="762.7" y="2115.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="765.7" y="2126.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.24%)</title><rect x="763.1" y="2115.0" width="14.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="766.1" y="2126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="763.1" y="2099.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="766.1" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="763.1" y="2083.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="766.1" y="2094.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="763.1" y="2067.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="766.1" y="2078.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.06%)</title><rect x="763.5" y="2099.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="766.5" y="2110.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 1.14%)</title><rect x="764.2" y="2099.0" width="13.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="767.2" y="2110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 1.02%)</title><rect x="765.7" y="2083.0" width="12.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="768.7" y="2094.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.02%)</title><rect x="765.7" y="2067.0" width="12.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="768.7" y="2078.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 0.95%)</title><rect x="766.5" y="2051.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="769.5" y="2062.0"></text>
</g>
<g>
<title>do_epoll_wait (29 samples, 0.92%)</title><rect x="766.5" y="2035.0" width="10.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="769.5" y="2046.0"></text>
</g>
<g>
<title>ep_poll (28 samples, 0.89%)</title><rect x="766.8" y="2019.0" width="10.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="769.8" y="2030.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (21 samples, 0.67%)</title><rect x="767.6" y="2003.0" width="7.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.6" y="2014.0"></text>
</g>
<g>
<title>ep_send_events_proc (15 samples, 0.48%)</title><rect x="769.1" y="1987.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="772.1" y="1998.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (14 samples, 0.44%)</title><rect x="769.5" y="1971.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="772.5" y="1982.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.19%)</title><rect x="771.3" y="1955.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="774.3" y="1966.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.10%)</title><rect x="772.1" y="1939.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="775.1" y="1950.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="773.2" y="1939.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="776.2" y="1950.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.10%)</title><rect x="773.6" y="1955.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="776.6" y="1966.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.06%)</title><rect x="774.7" y="1987.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="777.7" y="1998.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="775.4" y="2003.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="778.4" y="2014.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.13%)</title><rect x="775.8" y="2003.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="778.8" y="2014.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.13%)</title><rect x="775.8" y="1987.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="778.8" y="1998.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.10%)</title><rect x="776.2" y="1971.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="779.2" y="1982.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.10%)</title><rect x="776.2" y="1955.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="779.2" y="1966.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.06%)</title><rect x="776.6" y="1939.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="779.6" y="1950.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.06%)</title><rect x="776.6" y="1923.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.6" y="1934.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="776.6" y="1907.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.6" y="1918.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.06%)</title><rect x="776.6" y="1891.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.6" y="1902.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.06%)</title><rect x="776.6" y="1875.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.6" y="1886.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="776.6" y="1859.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="779.6" y="1870.0"></text>
</g>
<g>
<title>fasync_free_rcu (1 samples, 0.03%)</title><rect x="776.6" y="1843.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.6" y="1854.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="776.6" y="1827.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.6" y="1838.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="776.9" y="1859.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.9" y="1870.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="776.9" y="1843.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="779.9" y="1854.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="776.9" y="1827.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="779.9" y="1838.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.03%)</title><rect x="777.3" y="2035.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="780.3" y="2046.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="777.7" y="2115.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="780.7" y="2126.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="777.7" y="2099.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="780.7" y="2110.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="777.7" y="2083.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="780.7" y="2094.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="777.7" y="2067.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="780.7" y="2078.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="777.7" y="2051.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="780.7" y="2062.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="777.7" y="2035.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="780.7" y="2046.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="777.7" y="2019.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="780.7" y="2030.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="778.1" y="2115.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="781.1" y="2126.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="778.4" y="2115.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="781.4" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,011 samples, 32.09%)</title><rect x="778.8" y="2147.0" width="378.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.8" y="2158.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="778.8" y="2131.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="781.8" y="2142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,009 samples, 32.02%)</title><rect x="779.2" y="2131.0" width="377.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.2" y="2142.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (939 samples, 29.80%)</title><rect x="779.6" y="2115.0" width="351.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.6" y="2126.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (914 samples, 29.01%)</title><rect x="781.1" y="2099.0" width="342.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.1" y="2110.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (914 samples, 29.01%)</title><rect x="781.1" y="2083.0" width="342.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.1" y="2094.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (909 samples, 28.85%)</title><rect x="781.4" y="2067.0" width="340.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.4" y="2078.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="781.8" y="2051.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.8" y="2062.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.19%)</title><rect x="782.9" y="2051.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.9" y="2062.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.19%)</title><rect x="782.9" y="2035.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.9" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="782.9" y="2019.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="785.9" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="782.9" y="2003.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.9" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="783.3" y="2019.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="786.3" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.10%)</title><rect x="783.3" y="2003.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.3" y="2014.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="783.7" y="1987.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.7" y="1998.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="783.7" y="1971.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="786.7" y="1982.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="783.7" y="1955.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="786.7" y="1966.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="783.7" y="1939.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="786.7" y="1950.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="784.1" y="1987.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.1" y="1998.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="784.4" y="2019.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="787.4" y="2030.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="784.8" y="2019.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.8" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (899 samples, 28.53%)</title><rect x="785.2" y="2051.0" width="336.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.2" y="2062.0">ru/mail/polis/service/codearound/RepliServiceI..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.13%)</title><rect x="785.6" y="2035.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.6" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="785.9" y="2019.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.9" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="785.9" y="2003.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.9" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="786.3" y="2019.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.3" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="786.3" y="2003.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.3" y="2014.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="786.3" y="1987.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="789.3" y="1998.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="786.3" y="1971.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="789.3" y="1982.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="786.3" y="1955.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="789.3" y="1966.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="786.3" y="1939.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="789.3" y="1950.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="786.3" y="1923.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="789.3" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.invokeHandlerByMethod (1 samples, 0.03%)</title><rect x="786.7" y="2019.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.7" y="2030.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.getNodes (1 samples, 0.03%)</title><rect x="787.1" y="2035.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.1" y="2046.0"></text>
</g>
<g>
<title>java/util/Set.of (1 samples, 0.03%)</title><rect x="787.1" y="2019.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.1" y="2030.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1 samples, 0.03%)</title><rect x="787.1" y="2003.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.1" y="2014.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (1 samples, 0.03%)</title><rect x="787.1" y="1987.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.1" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.invokeHandlerByMethod (893 samples, 28.34%)</title><rect x="787.4" y="2035.0" width="334.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.4" y="2046.0">ru/mail/polis/service/codearound/ReplicationL..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="787.4" y="2019.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="790.4" y="2030.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="787.4" y="2003.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="790.4" y="2014.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="787.4" y="1987.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="790.4" y="1998.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="787.4" y="1971.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="790.4" y="1982.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="787.4" y="1955.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="790.4" y="1966.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="787.4" y="1939.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="790.4" y="1950.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="787.4" y="1923.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="790.4" y="1934.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="787.8" y="2019.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.8" y="2030.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="787.8" y="2003.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="790.8" y="2014.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="787.8" y="1987.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.8" y="1998.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="787.8" y="1971.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.8" y="1982.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="787.8" y="1955.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.8" y="1966.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="787.8" y="1939.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.8" y="1950.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="787.8" y="1923.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.8" y="1934.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="787.8" y="1907.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.8" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="788.2" y="2019.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.2" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="788.6" y="2003.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="788.6" y="1987.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.6" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="788.9" y="2003.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.9" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="788.9" y="1987.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.9" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="788.9" y="1971.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.9" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="788.9" y="1955.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.9" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (1 samples, 0.03%)</title><rect x="789.3" y="2019.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.3" y="2030.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.03%)</title><rect x="789.3" y="2003.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.3" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (881 samples, 27.96%)</title><rect x="789.7" y="2019.0" width="329.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.7" y="2030.0">ru/mail/polis/service/codearound/ReplicationL..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1767039311.linkToTargetMethod (1 samples, 0.03%)</title><rect x="792.7" y="2003.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.7" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/875749224.invokeStatic (1 samples, 0.03%)</title><rect x="792.7" y="1987.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.7" y="1998.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$224/98912514.get$Lambda (1 samples, 0.03%)</title><rect x="792.7" y="1971.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.7" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (1 samples, 0.03%)</title><rect x="793.0" y="2003.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.0" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (1 samples, 0.03%)</title><rect x="793.0" y="1987.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.0" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1 samples, 0.03%)</title><rect x="793.4" y="2003.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.4" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1 samples, 0.03%)</title><rect x="793.4" y="1987.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.4" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2 samples, 0.06%)</title><rect x="793.8" y="2003.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.8" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2 samples, 0.06%)</title><rect x="793.8" y="1987.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.8" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.06%)</title><rect x="793.8" y="1971.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (96 samples, 3.05%)</title><rect x="794.5" y="2003.0" width="36.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.5" y="2014.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (95 samples, 3.01%)</title><rect x="794.9" y="1987.0" width="35.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.9" y="1998.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (95 samples, 3.01%)</title><rect x="794.9" y="1971.0" width="35.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.9" y="1982.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (95 samples, 3.01%)</title><rect x="794.9" y="1955.0" width="35.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.9" y="1966.0">jdk..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="796.4" y="1939.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="799.4" y="1950.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="796.4" y="1923.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="799.4" y="1934.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="796.4" y="1907.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="799.4" y="1918.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="796.4" y="1891.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="799.4" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.10%)</title><rect x="796.8" y="1939.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.8" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.10%)</title><rect x="796.8" y="1923.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="797.5" y="1907.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.5" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="797.5" y="1891.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.5" y="1902.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="797.5" y="1875.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="800.5" y="1886.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="797.5" y="1859.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="800.5" y="1870.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="797.5" y="1843.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="800.5" y="1854.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="797.5" y="1827.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="800.5" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (45 samples, 1.43%)</title><rect x="797.9" y="1939.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="800.9" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.16%)</title><rect x="798.3" y="1923.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.3" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="798.3" y="1907.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.3" y="1918.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="798.3" y="1891.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="801.3" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="798.3" y="1875.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.3" y="1886.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="798.3" y="1859.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.3" y="1870.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="798.7" y="1907.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.7" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="798.7" y="1891.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.7" y="1902.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="798.7" y="1875.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.7" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.10%)</title><rect x="799.0" y="1907.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.0" y="1918.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.10%)</title><rect x="799.0" y="1891.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.0" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.10%)</title><rect x="799.0" y="1875.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.0" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.10%)</title><rect x="799.0" y="1859.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.0" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="799.0" y="1843.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.0" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="799.0" y="1827.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.0" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.03%)</title><rect x="799.0" y="1811.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.0" y="1822.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.03%)</title><rect x="799.0" y="1795.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.0" y="1806.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.06%)</title><rect x="799.4" y="1843.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.4" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.03%)</title><rect x="799.8" y="1827.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.8" y="1838.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.13%)</title><rect x="800.2" y="1923.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.2" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.13%)</title><rect x="800.2" y="1907.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.2" y="1918.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3 samples, 0.10%)</title><rect x="800.5" y="1891.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.5" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.06%)</title><rect x="800.9" y="1875.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.9" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (2 samples, 0.06%)</title><rect x="800.9" y="1859.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.9" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.06%)</title><rect x="800.9" y="1843.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="803.9" y="1854.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.03%)</title><rect x="800.9" y="1827.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.9" y="1838.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (1 samples, 0.03%)</title><rect x="800.9" y="1811.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.9" y="1822.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="800.9" y="1795.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/937773018.test (1 samples, 0.03%)</title><rect x="800.9" y="1779.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.9" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.03%)</title><rect x="800.9" y="1763.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.9" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1043351526.test (1 samples, 0.03%)</title><rect x="800.9" y="1747.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.9" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.03%)</title><rect x="800.9" y="1731.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.9" y="1742.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="800.9" y="1715.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.9" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.03%)</title><rect x="800.9" y="1699.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.9" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.03%)</title><rect x="800.9" y="1683.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="803.9" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="800.9" y="1667.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.9" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="800.9" y="1651.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.9" y="1662.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.03%)</title><rect x="801.3" y="1827.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.3" y="1838.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.03%)</title><rect x="801.3" y="1811.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.3" y="1822.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.03%)</title><rect x="801.3" y="1795.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.3" y="1806.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="801.3" y="1779.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.3" y="1790.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="801.3" y="1763.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="804.3" y="1774.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="801.3" y="1747.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="804.3" y="1758.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="801.3" y="1731.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="804.3" y="1742.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="801.3" y="1715.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="804.3" y="1726.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="801.3" y="1699.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="804.3" y="1710.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.03%)</title><rect x="801.3" y="1683.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="804.3" y="1694.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (1 samples, 0.03%)</title><rect x="801.7" y="1923.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.7" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (6 samples, 0.19%)</title><rect x="802.0" y="1923.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.13%)</title><rect x="802.0" y="1907.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.0" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="803.2" y="1891.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.2" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="803.5" y="1907.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.5" y="1918.0"></text>
</g>
<g>
<title>java/net/URI.getScheme (1 samples, 0.03%)</title><rect x="803.9" y="1907.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.9" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (28 samples, 0.89%)</title><rect x="804.3" y="1923.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.3" y="1934.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (28 samples, 0.89%)</title><rect x="804.3" y="1907.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.3" y="1918.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (28 samples, 0.89%)</title><rect x="804.3" y="1891.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.3" y="1902.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="804.3" y="1875.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="807.3" y="1886.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (18 samples, 0.57%)</title><rect x="804.7" y="1875.0" width="6.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="807.7" y="1886.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="805.0" y="1859.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="808.0" y="1870.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.16%)</title><rect x="805.4" y="1859.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="808.4" y="1870.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.03%)</title><rect x="805.8" y="1843.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="808.8" y="1854.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="806.2" y="1843.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="809.2" y="1854.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="806.2" y="1827.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="809.2" y="1838.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="806.5" y="1843.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="809.5" y="1854.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="806.9" y="1843.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="809.9" y="1854.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (2 samples, 0.06%)</title><rect x="807.3" y="1859.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="810.3" y="1870.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="808.0" y="1859.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="811.0" y="1870.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.06%)</title><rect x="808.4" y="1859.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="811.4" y="1870.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.06%)</title><rect x="808.4" y="1843.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="811.4" y="1854.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="808.4" y="1827.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="811.4" y="1838.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="808.8" y="1811.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="811.8" y="1822.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.19%)</title><rect x="809.1" y="1859.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="812.1" y="1870.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.06%)</title><rect x="809.5" y="1843.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="812.5" y="1854.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="809.9" y="1827.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="812.9" y="1838.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="809.9" y="1811.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="812.9" y="1822.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="809.9" y="1795.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="812.9" y="1806.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="809.9" y="1779.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="812.9" y="1790.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="809.9" y="1763.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="812.9" y="1774.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="809.9" y="1747.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="812.9" y="1758.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="809.9" y="1731.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.9" y="1742.0"></text>
</g>
<g>
<title>free_task (1 samples, 0.03%)</title><rect x="809.9" y="1715.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="812.9" y="1726.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="809.9" y="1699.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="812.9" y="1710.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.10%)</title><rect x="810.3" y="1843.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="813.3" y="1854.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.03%)</title><rect x="810.6" y="1827.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="813.6" y="1838.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="811.0" y="1827.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="814.0" y="1838.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="811.0" y="1811.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="814.0" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="811.0" y="1795.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="814.0" y="1806.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.29%)</title><rect x="811.4" y="1875.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.4" y="1886.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (8 samples, 0.25%)</title><rect x="811.8" y="1859.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.8" y="1870.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (6 samples, 0.19%)</title><rect x="812.5" y="1843.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.5" y="1854.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.19%)</title><rect x="812.5" y="1827.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.5" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.19%)</title><rect x="812.5" y="1811.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.5" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.13%)</title><rect x="813.3" y="1795.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.3" y="1806.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.13%)</title><rect x="813.3" y="1779.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (20 samples, 0.63%)</title><rect x="814.8" y="1939.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.8" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (20 samples, 0.63%)</title><rect x="814.8" y="1923.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (20 samples, 0.63%)</title><rect x="814.8" y="1907.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (11 samples, 0.35%)</title><rect x="816.3" y="1891.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.3" y="1902.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (10 samples, 0.32%)</title><rect x="816.3" y="1875.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.3" y="1886.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (10 samples, 0.32%)</title><rect x="816.3" y="1859.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.3" y="1870.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (2 samples, 0.06%)</title><rect x="819.3" y="1843.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="822.3" y="1854.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (2 samples, 0.06%)</title><rect x="819.3" y="1827.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.3" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1 samples, 0.03%)</title><rect x="820.0" y="1875.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.0" y="1886.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1 samples, 0.03%)</title><rect x="820.0" y="1859.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.0" y="1870.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1 samples, 0.03%)</title><rect x="820.0" y="1843.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.0" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="820.0" y="1827.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="823.0" y="1838.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.10%)</title><rect x="820.4" y="1891.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.03%)</title><rect x="821.1" y="1875.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.1" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.03%)</title><rect x="821.1" y="1859.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.1" y="1870.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="821.1" y="1843.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="824.1" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="821.1" y="1827.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="824.1" y="1838.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="821.1" y="1811.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="824.1" y="1822.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="821.1" y="1795.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="824.1" y="1806.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="821.1" y="1779.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="824.1" y="1790.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="821.1" y="1763.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="824.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.03%)</title><rect x="821.5" y="1891.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.5" y="1902.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="821.9" y="1891.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="824.9" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (22 samples, 0.70%)</title><rect x="822.3" y="1939.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.3" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (19 samples, 0.60%)</title><rect x="822.3" y="1923.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.3" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.60%)</title><rect x="822.3" y="1907.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.3" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (16 samples, 0.51%)</title><rect x="823.4" y="1891.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.4" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="823.4" y="1875.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.4" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="823.4" y="1859.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.4" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="823.4" y="1843.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.4" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="823.4" y="1827.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.4" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.48%)</title><rect x="823.8" y="1875.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="826.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.48%)</title><rect x="823.8" y="1859.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.48%)</title><rect x="823.8" y="1843.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.48%)</title><rect x="823.8" y="1827.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.48%)</title><rect x="823.8" y="1811.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.8" y="1822.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="823.8" y="1795.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="826.8" y="1806.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="823.8" y="1779.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="826.8" y="1790.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.44%)</title><rect x="824.1" y="1795.0" width="5.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="827.1" y="1806.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.41%)</title><rect x="824.5" y="1779.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="827.5" y="1790.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.41%)</title><rect x="824.5" y="1763.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="827.5" y="1774.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.32%)</title><rect x="825.3" y="1747.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.3" y="1758.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.32%)</title><rect x="825.3" y="1731.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="828.3" y="1742.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.29%)</title><rect x="825.3" y="1715.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="828.3" y="1726.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="825.3" y="1699.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="828.3" y="1710.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.25%)</title><rect x="825.6" y="1699.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.6" y="1710.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.25%)</title><rect x="825.6" y="1683.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.6" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.25%)</title><rect x="825.6" y="1667.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="828.6" y="1678.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="828.6" y="1715.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="831.6" y="1726.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="829.0" y="1747.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="832.0" y="1758.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="829.0" y="1731.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="832.0" y="1742.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="829.0" y="1715.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="832.0" y="1726.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="829.0" y="1699.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="832.0" y="1710.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="829.0" y="1683.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="832.0" y="1694.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="829.0" y="1667.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.0" y="1678.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="829.0" y="1651.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.0" y="1662.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="829.0" y="1635.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="832.0" y="1646.0"></text>
</g>
<g>
<title>refcount_dec_not_one (1 samples, 0.03%)</title><rect x="829.0" y="1619.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="832.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.10%)</title><rect x="829.4" y="1923.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.10%)</title><rect x="829.4" y="1907.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.4" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.10%)</title><rect x="829.4" y="1891.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.4" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.06%)</title><rect x="829.7" y="1875.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.7" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (7 samples, 0.22%)</title><rect x="830.5" y="2003.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.5" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (7 samples, 0.22%)</title><rect x="830.5" y="1987.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.5" y="1998.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.22%)</title><rect x="830.5" y="1971.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.5" y="1982.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.22%)</title><rect x="830.5" y="1955.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.5" y="1966.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="830.9" y="1939.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="833.9" y="1950.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.16%)</title><rect x="831.2" y="1939.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.2" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (5 samples, 0.16%)</title><rect x="831.2" y="1923.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.2" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.16%)</title><rect x="831.2" y="1907.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.2" y="1918.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.16%)</title><rect x="831.2" y="1891.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.2" y="1902.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="831.2" y="1875.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="834.2" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (1 samples, 0.03%)</title><rect x="831.6" y="1875.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.6" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="831.6" y="1859.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.6" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1043351526.test (1 samples, 0.03%)</title><rect x="831.6" y="1843.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.6" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.03%)</title><rect x="831.6" y="1827.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.6" y="1838.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="831.6" y="1811.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.6" y="1822.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.03%)</title><rect x="831.6" y="1795.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.6" y="1806.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.03%)</title><rect x="831.6" y="1779.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.6" y="1790.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="831.6" y="1763.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.6" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="831.6" y="1747.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.6" y="1758.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="831.6" y="1731.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.6" y="1742.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="831.6" y="1715.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.6" y="1726.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="831.6" y="1699.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.6" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1043351526.test (3 samples, 0.10%)</title><rect x="832.0" y="1875.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.0" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execLocalRequest (741 samples, 23.52%)</title><rect x="833.1" y="2003.0" width="277.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.1" y="2014.0">ru/mail/polis/service/codearound/Futu..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="833.1" y="1987.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.1" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="833.1" y="1971.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.1" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils$$Lambda$120/1292373631.get$Lambda (1 samples, 0.03%)</title><rect x="833.1" y="1955.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.1" y="1966.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="833.1" y="1939.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="836.1" y="1950.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="833.1" y="1923.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="836.1" y="1934.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="833.1" y="1907.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="836.1" y="1918.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="833.1" y="1891.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.1" y="1902.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="833.1" y="1875.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="836.1" y="1886.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="833.1" y="1859.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="836.1" y="1870.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="833.1" y="1843.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="836.1" y="1854.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="833.1" y="1827.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="836.1" y="1838.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="833.1" y="1811.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="836.1" y="1822.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.03%)</title><rect x="833.1" y="1795.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="836.1" y="1806.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.03%)</title><rect x="833.1" y="1779.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="836.1" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (740 samples, 23.48%)</title><rect x="833.5" y="1987.0" width="277.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="836.5" y="1998.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (740 samples, 23.48%)</title><rect x="833.5" y="1971.0" width="277.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.5" y="1982.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (740 samples, 23.48%)</title><rect x="833.5" y="1955.0" width="277.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.5" y="1966.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="833.5" y="1939.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="836.5" y="1950.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="833.5" y="1923.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="836.5" y="1934.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="833.5" y="1907.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="836.5" y="1918.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="833.5" y="1891.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="836.5" y="1902.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="833.5" y="1875.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="836.5" y="1886.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.03%)</title><rect x="833.5" y="1859.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="836.5" y="1870.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (114 samples, 3.62%)</title><rect x="833.9" y="1939.0" width="42.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.9" y="1950.0">java..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.16%)</title><rect x="833.9" y="1923.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.9" y="1934.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="835.4" y="1907.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.4" y="1918.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="835.4" y="1891.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.4" y="1902.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="835.4" y="1875.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="838.4" y="1886.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.06%)</title><rect x="835.7" y="1923.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (105 samples, 3.33%)</title><rect x="836.5" y="1923.0" width="39.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.5" y="1934.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (105 samples, 3.33%)</title><rect x="836.5" y="1907.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.5" y="1918.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.setPriority (8 samples, 0.25%)</title><rect x="836.5" y="1891.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.5" y="1902.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (4 samples, 0.13%)</title><rect x="837.6" y="1875.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.6" y="1886.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (3 samples, 0.10%)</title><rect x="837.6" y="1859.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="840.6" y="1870.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.06%)</title><rect x="837.6" y="1843.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="840.6" y="1854.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="838.4" y="1843.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="841.4" y="1854.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="838.4" y="1827.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="841.4" y="1838.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="838.4" y="1811.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="841.4" y="1822.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="838.7" y="1859.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="841.7" y="1870.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="839.1" y="1875.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="842.1" y="1886.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (97 samples, 3.08%)</title><rect x="839.5" y="1891.0" width="36.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.5" y="1902.0">jav..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (11 samples, 0.35%)</title><rect x="839.9" y="1875.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.9" y="1886.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.calculateFields (1 samples, 0.03%)</title><rect x="840.2" y="1859.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.2" y="1870.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (5 samples, 0.16%)</title><rect x="840.6" y="1859.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.6" y="1870.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="841.7" y="1843.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.7" y="1854.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="842.1" y="1843.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="845.1" y="1854.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (4 samples, 0.13%)</title><rect x="842.5" y="1859.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.5" y="1870.0"></text>
</g>
<g>
<title>JVM_GetInheritedAccessControlContext (4 samples, 0.13%)</title><rect x="842.5" y="1843.0" width="1.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="845.5" y="1854.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.03%)</title><rect x="843.6" y="1827.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="846.6" y="1838.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (85 samples, 2.70%)</title><rect x="844.0" y="1875.0" width="31.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.0" y="1886.0">ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.03%)</title><rect x="844.0" y="1859.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="847.0" y="1870.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.06%)</title><rect x="844.4" y="1859.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="847.4" y="1870.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (76 samples, 2.41%)</title><rect x="845.1" y="1859.0" width="28.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="848.1" y="1870.0">JV..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.22%)</title><rect x="855.2" y="1843.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="858.2" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (13 samples, 0.41%)</title><rect x="857.8" y="1843.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="860.8" y="1854.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.32%)</title><rect x="858.2" y="1827.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="861.2" y="1838.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.25%)</title><rect x="858.2" y="1811.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="861.2" y="1822.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.03%)</title><rect x="859.3" y="1795.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="862.3" y="1806.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="859.7" y="1795.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="862.7" y="1806.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="859.7" y="1779.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="862.7" y="1790.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="859.7" y="1763.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="862.7" y="1774.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="859.7" y="1747.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="862.7" y="1758.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.03%)</title><rect x="859.7" y="1731.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="862.7" y="1742.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.06%)</title><rect x="860.1" y="1795.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="863.1" y="1806.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="860.8" y="1795.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="863.8" y="1806.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="861.2" y="1811.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="864.2" y="1822.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="861.6" y="1811.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="864.6" y="1822.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="862.0" y="1827.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="865.0" y="1838.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="862.3" y="1827.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="865.3" y="1838.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="862.7" y="1843.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="865.7" y="1854.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="863.1" y="1843.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="866.1" y="1854.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.13%)</title><rect x="863.4" y="1843.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="866.4" y="1854.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="864.9" y="1843.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="867.9" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="864.9" y="1827.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.9" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="864.9" y="1811.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.9" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="864.9" y="1795.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="867.9" y="1806.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="864.9" y="1779.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="867.9" y="1790.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (17 samples, 0.54%)</title><rect x="865.3" y="1843.0" width="6.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="868.3" y="1854.0"></text>
</g>
<g>
<title>CodeBlob::is_compiled() const (1 samples, 0.03%)</title><rect x="865.7" y="1827.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="868.7" y="1838.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (15 samples, 0.48%)</title><rect x="866.1" y="1827.0" width="5.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="869.1" y="1838.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (2 samples, 0.06%)</title><rect x="866.8" y="1811.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.8" y="1822.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.22%)</title><rect x="867.6" y="1811.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="870.6" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (7 samples, 0.22%)</title><rect x="867.6" y="1795.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="870.6" y="1806.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="869.8" y="1779.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.8" y="1790.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="869.8" y="1763.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="872.8" y="1774.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="869.8" y="1747.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="872.8" y="1758.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="869.8" y="1731.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.8" y="1742.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="869.8" y="1715.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="872.8" y="1726.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="869.8" y="1699.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="872.8" y="1710.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="869.8" y="1683.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="872.8" y="1694.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="870.2" y="1811.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="873.2" y="1822.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.10%)</title><rect x="870.6" y="1811.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="873.6" y="1822.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (1 samples, 0.03%)</title><rect x="871.7" y="1843.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="874.7" y="1854.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.13%)</title><rect x="872.1" y="1843.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="875.1" y="1854.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="872.4" y="1827.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="875.4" y="1838.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.06%)</title><rect x="872.8" y="1827.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="875.8" y="1838.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="872.8" y="1811.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="875.8" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="873.2" y="1795.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="876.2" y="1806.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::JvmtiVMObjectAllocEventCollector() (1 samples, 0.03%)</title><rect x="873.6" y="1859.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="876.6" y="1870.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::~JvmtiVMObjectAllocEventCollector() (1 samples, 0.03%)</title><rect x="873.9" y="1859.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="876.9" y="1870.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.03%)</title><rect x="874.3" y="1859.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="877.3" y="1870.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (1 samples, 0.03%)</title><rect x="874.7" y="1859.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="877.7" y="1870.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="874.7" y="1843.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="877.7" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="874.7" y="1827.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.7" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="874.7" y="1811.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="877.7" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="874.7" y="1795.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="877.7" y="1806.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="874.7" y="1779.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="877.7" y="1790.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="874.7" y="1763.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="877.7" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="874.7" y="1747.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="877.7" y="1758.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="875.1" y="1859.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="878.1" y="1870.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="875.4" y="1859.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="878.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/Thread.nextThreadNum (2 samples, 0.06%)</title><rect x="875.8" y="1923.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.8" y="1934.0"></text>
</g>
<g>
<title>java/lang/Thread.start (625 samples, 19.83%)</title><rect x="876.6" y="1939.0" width="234.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.6" y="1950.0">java/lang/Thread.start</text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (1 samples, 0.03%)</title><rect x="877.7" y="1923.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (621 samples, 19.71%)</title><rect x="878.1" y="1923.0" width="232.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.1" y="1934.0">java/lang/Thread.start0</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.06%)</title><rect x="879.2" y="1907.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="882.2" y="1918.0"></text>
</g>
<g>
<title>JVM_StartThread (428 samples, 13.58%)</title><rect x="879.9" y="1907.0" width="160.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="882.9" y="1918.0">JVM_StartThread</text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="880.7" y="1891.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="883.7" y="1902.0"></text>
</g>
<g>
<title>G1BarrierSet::on_thread_create(Thread*) (2 samples, 0.06%)</title><rect x="881.1" y="1891.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="884.1" y="1902.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="881.8" y="1891.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="884.8" y="1902.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (1 samples, 0.03%)</title><rect x="882.2" y="1891.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="885.2" y="1902.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (35 samples, 1.11%)</title><rect x="882.5" y="1891.0" width="13.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="885.5" y="1902.0"></text>
</g>
<g>
<title>G1BarrierSet::on_thread_create(Thread*) (1 samples, 0.03%)</title><rect x="882.5" y="1875.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="885.5" y="1886.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (3 samples, 0.10%)</title><rect x="882.9" y="1875.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="885.9" y="1886.0"></text>
</g>
<g>
<title>PosixSemaphore::PosixSemaphore(unsigned int) (1 samples, 0.03%)</title><rect x="882.9" y="1859.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="885.9" y="1870.0"></text>
</g>
<g>
<title>__GI___errno_location (1 samples, 0.03%)</title><rect x="883.3" y="1859.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="886.3" y="1870.0"></text>
</g>
<g>
<title>sem_init@@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="883.7" y="1859.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="886.7" y="1870.0"></text>
</g>
<g>
<title>JavaThread::initialize() (3 samples, 0.10%)</title><rect x="884.0" y="1875.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="887.0" y="1886.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="884.4" y="1859.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="887.4" y="1870.0"></text>
</g>
<g>
<title>ThreadSafepointState::create(JavaThread*) (1 samples, 0.03%)</title><rect x="884.8" y="1859.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="887.8" y="1870.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="884.8" y="1843.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="887.8" y="1854.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="884.8" y="1827.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="887.8" y="1838.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (1 samples, 0.03%)</title><rect x="885.2" y="1875.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="888.2" y="1886.0"></text>
</g>
<g>
<title>Thread::Thread() (27 samples, 0.86%)</title><rect x="885.5" y="1875.0" width="10.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="888.5" y="1886.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (7 samples, 0.22%)</title><rect x="886.7" y="1859.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="889.7" y="1870.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (6 samples, 0.19%)</title><rect x="886.7" y="1843.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="889.7" y="1854.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.06%)</title><rect x="887.8" y="1827.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="890.8" y="1838.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="888.5" y="1827.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="891.5" y="1838.0"></text>
</g>
<g>
<title>ThreadCritical::~ThreadCritical() (1 samples, 0.03%)</title><rect x="888.9" y="1843.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="891.9" y="1854.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned long) (1 samples, 0.03%)</title><rect x="889.3" y="1859.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="892.3" y="1870.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="889.3" y="1843.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="892.3" y="1854.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (3 samples, 0.10%)</title><rect x="889.7" y="1859.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="892.7" y="1870.0"></text>
</g>
<g>
<title>JfrTraceId::assign_thread_id() (1 samples, 0.03%)</title><rect x="889.7" y="1843.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="892.7" y="1854.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="890.0" y="1843.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="893.0" y="1854.0"></text>
</g>
<g>
<title>JfrTraceId::assign_thread_id() (1 samples, 0.03%)</title><rect x="890.8" y="1859.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="893.8" y="1870.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (3 samples, 0.10%)</title><rect x="891.2" y="1859.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="894.2" y="1870.0"></text>
</g>
<g>
<title>Thread::SpinAcquire(int volatile*, char const*) (3 samples, 0.10%)</title><rect x="892.3" y="1859.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="895.3" y="1870.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (3 samples, 0.10%)</title><rect x="893.4" y="1859.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="896.4" y="1870.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.03%)</title><rect x="894.5" y="1859.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="897.5" y="1870.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="894.9" y="1859.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="897.9" y="1870.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="894.9" y="1843.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="897.9" y="1854.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="894.9" y="1827.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="897.9" y="1838.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="895.3" y="1859.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="898.3" y="1870.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (74 samples, 2.35%)</title><rect x="895.7" y="1891.0" width="27.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="898.7" y="1902.0">J..</text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (2 samples, 0.06%)</title><rect x="896.0" y="1875.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="899.0" y="1886.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="896.0" y="1859.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="899.0" y="1870.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="896.4" y="1859.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="899.4" y="1870.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="896.8" y="1875.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="899.8" y="1886.0"></text>
</g>
<g>
<title>ThreadService::add_thread(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="897.2" y="1875.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="900.2" y="1886.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (66 samples, 2.09%)</title><rect x="897.5" y="1875.0" width="24.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="900.5" y="1886.0">T..</text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (54 samples, 1.71%)</title><rect x="898.3" y="1859.0" width="20.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="901.3" y="1870.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (4 samples, 0.13%)</title><rect x="917.0" y="1843.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="920.0" y="1854.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (4 samples, 0.13%)</title><rect x="917.0" y="1827.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="920.0" y="1838.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="918.5" y="1859.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="921.5" y="1870.0"></text>
</g>
<g>
<title>__memset_erms (6 samples, 0.19%)</title><rect x="918.9" y="1859.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="921.9" y="1870.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="921.1" y="1859.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="924.1" y="1870.0"></text>
</g>
<g>
<title>malloc@plt (2 samples, 0.06%)</title><rect x="921.5" y="1859.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="924.5" y="1870.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="922.2" y="1875.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="925.2" y="1886.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.03%)</title><rect x="922.6" y="1875.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="925.6" y="1886.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.03%)</title><rect x="923.0" y="1875.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="926.0" y="1886.0"></text>
</g>
<g>
<title>Monitor::lock() (31 samples, 0.98%)</title><rect x="923.4" y="1891.0" width="11.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="926.4" y="1902.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="923.7" y="1875.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="926.7" y="1886.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (24 samples, 0.76%)</title><rect x="924.1" y="1875.0" width="9.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="927.1" y="1886.0"></text>
</g>
<g>
<title>SpinPause (11 samples, 0.35%)</title><rect x="924.5" y="1859.0" width="4.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="927.5" y="1870.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="928.2" y="1843.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="931.2" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="928.2" y="1827.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="931.2" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="928.2" y="1811.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="931.2" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="928.2" y="1795.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="931.2" y="1806.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="928.2" y="1779.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="931.2" y="1790.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="928.2" y="1763.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.2" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="928.2" y="1747.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="931.2" y="1758.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.22%)</title><rect x="928.6" y="1859.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="931.6" y="1870.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.19%)</title><rect x="929.0" y="1843.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.0" y="1854.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="929.0" y="1827.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="932.0" y="1838.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.16%)</title><rect x="929.4" y="1827.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="932.4" y="1838.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.13%)</title><rect x="929.7" y="1811.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="932.7" y="1822.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.13%)</title><rect x="929.7" y="1795.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.7" y="1806.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.10%)</title><rect x="929.7" y="1779.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.7" y="1790.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="930.5" y="1763.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="933.5" y="1774.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="930.5" y="1747.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="933.5" y="1758.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="930.9" y="1779.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="933.9" y="1790.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.06%)</title><rect x="931.2" y="1859.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="934.2" y="1870.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="932.0" y="1859.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="935.0" y="1870.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="932.4" y="1859.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="935.4" y="1870.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="932.7" y="1859.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="935.7" y="1870.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (3 samples, 0.10%)</title><rect x="933.1" y="1875.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="936.1" y="1886.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="934.2" y="1875.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="937.2" y="1886.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.06%)</title><rect x="935.0" y="1891.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="938.0" y="1902.0"></text>
</g>
<g>
<title>Thread::Thread() (1 samples, 0.03%)</title><rect x="935.7" y="1891.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="938.7" y="1902.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (1 samples, 0.03%)</title><rect x="936.1" y="1891.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="939.1" y="1902.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="936.1" y="1875.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="939.1" y="1886.0"></text>
</g>
<g>
<title>Thread::start(Thread*) (1 samples, 0.03%)</title><rect x="936.5" y="1891.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="939.5" y="1902.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="936.8" y="1891.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="939.8" y="1902.0"></text>
</g>
<g>
<title>__getpagesize (1 samples, 0.03%)</title><rect x="937.6" y="1891.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="940.6" y="1902.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="938.0" y="1891.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="941.0" y="1902.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.16%)</title><rect x="938.3" y="1891.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="941.3" y="1902.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread(oopDesc*, JavaThread*) (1 samples, 0.03%)</title><rect x="940.2" y="1891.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="943.2" y="1902.0"></text>
</g>
<g>
<title>oopDesc::address_field_put(int, unsigned char*) (1 samples, 0.03%)</title><rect x="940.6" y="1891.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="943.6" y="1902.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (256 samples, 8.12%)</title><rect x="941.0" y="1891.0" width="95.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="944.0" y="1902.0">os::create_..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="942.8" y="1875.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="945.8" y="1886.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (17 samples, 0.54%)</title><rect x="943.2" y="1875.0" width="6.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="946.2" y="1886.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (16 samples, 0.51%)</title><rect x="943.6" y="1859.0" width="6.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="946.6" y="1870.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.22%)</title><rect x="945.8" y="1843.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="948.8" y="1854.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.19%)</title><rect x="946.2" y="1827.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="949.2" y="1838.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.19%)</title><rect x="946.2" y="1811.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="949.2" y="1822.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="947.7" y="1795.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="950.7" y="1806.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="947.7" y="1779.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="950.7" y="1790.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="947.7" y="1763.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="950.7" y="1774.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="948.1" y="1763.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="951.1" y="1774.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="948.5" y="1843.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="951.5" y="1854.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="948.8" y="1843.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="951.8" y="1854.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="949.2" y="1843.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="952.2" y="1854.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (4 samples, 0.13%)</title><rect x="949.6" y="1875.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="952.6" y="1886.0"></text>
</g>
<g>
<title>Monitor::Monitor(int, char const*, bool, Monitor::SafepointCheckRequired) (1 samples, 0.03%)</title><rect x="949.6" y="1859.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="952.6" y="1870.0"></text>
</g>
<g>
<title>OSThread::pd_initialize() (3 samples, 0.10%)</title><rect x="950.0" y="1859.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="953.0" y="1870.0"></text>
</g>
<g>
<title>Monitor::Monitor(int, char const*, bool, Monitor::SafepointCheckRequired) (1 samples, 0.03%)</title><rect x="950.0" y="1843.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="953.0" y="1854.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (2 samples, 0.06%)</title><rect x="950.3" y="1843.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="953.3" y="1854.0"></text>
</g>
<g>
<title>OSThread::pd_initialize() (1 samples, 0.03%)</title><rect x="951.1" y="1875.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="954.1" y="1886.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (1 samples, 0.03%)</title><rect x="951.5" y="1875.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="954.5" y="1886.0"></text>
</g>
<g>
<title>__clone (201 samples, 6.38%)</title><rect x="951.8" y="1875.0" width="75.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="954.8" y="1886.0">__clone</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (193 samples, 6.13%)</title><rect x="954.4" y="1859.0" width="72.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="957.4" y="1870.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (193 samples, 6.13%)</title><rect x="954.4" y="1843.0" width="72.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="957.4" y="1854.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_clone (189 samples, 6.00%)</title><rect x="955.9" y="1827.0" width="70.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="958.9" y="1838.0">__x64_sy..</text>
</g>
<g>
<title>__put_user_4 (1 samples, 0.03%)</title><rect x="955.9" y="1811.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="958.9" y="1822.0"></text>
</g>
<g>
<title>_do_fork (188 samples, 5.97%)</title><rect x="956.3" y="1811.0" width="70.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="959.3" y="1822.0">_do_fork</text>
</g>
<g>
<title>__vmalloc_node_range (1 samples, 0.03%)</title><rect x="957.4" y="1795.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="960.4" y="1806.0"></text>
</g>
<g>
<title>account_kernel_stack (1 samples, 0.03%)</title><rect x="957.8" y="1795.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="960.8" y="1806.0"></text>
</g>
<g>
<title>copy_creds (1 samples, 0.03%)</title><rect x="958.2" y="1795.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="961.2" y="1806.0"></text>
</g>
<g>
<title>copy_process.part.34 (135 samples, 4.28%)</title><rect x="958.6" y="1795.0" width="50.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="961.6" y="1806.0">copy_..</text>
</g>
<g>
<title>__delayacct_tsk_init (5 samples, 0.16%)</title><rect x="961.6" y="1779.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="964.6" y="1790.0"></text>
</g>
<g>
<title>kmem_cache_alloc (5 samples, 0.16%)</title><rect x="961.6" y="1763.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="964.6" y="1774.0"></text>
</g>
<g>
<title>__percpu_down_read (2 samples, 0.06%)</title><rect x="963.4" y="1779.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="966.4" y="1790.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="963.8" y="1763.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="966.8" y="1774.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="963.8" y="1747.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="966.8" y="1758.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="963.8" y="1731.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="966.8" y="1742.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="963.8" y="1715.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="966.8" y="1726.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="963.8" y="1699.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="966.8" y="1710.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="963.8" y="1683.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="966.8" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="963.8" y="1667.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.8" y="1678.0"></text>
</g>
<g>
<title>__vmalloc_node_range (25 samples, 0.79%)</title><rect x="964.2" y="1779.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="967.2" y="1790.0"></text>
</g>
<g>
<title>__get_vm_area_node (3 samples, 0.10%)</title><rect x="964.6" y="1763.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="967.6" y="1774.0"></text>
</g>
<g>
<title>alloc_vmap_area (2 samples, 0.06%)</title><rect x="964.9" y="1747.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="967.9" y="1758.0"></text>
</g>
<g>
<title>__insert_vmap_area (1 samples, 0.03%)</title><rect x="964.9" y="1731.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="967.9" y="1742.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="965.3" y="1731.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="968.3" y="1742.0"></text>
</g>
<g>
<title>__kmalloc_node (1 samples, 0.03%)</title><rect x="965.7" y="1763.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.7" y="1774.0"></text>
</g>
<g>
<title>alloc_pages_current (20 samples, 0.63%)</title><rect x="966.1" y="1763.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="969.1" y="1774.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (19 samples, 0.60%)</title><rect x="966.1" y="1747.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="969.1" y="1758.0"></text>
</g>
<g>
<title>clear_page_erms (16 samples, 0.51%)</title><rect x="966.1" y="1731.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="969.1" y="1742.0"></text>
</g>
<g>
<title>get_page_from_freelist (3 samples, 0.10%)</title><rect x="972.1" y="1731.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="975.1" y="1742.0"></text>
</g>
<g>
<title>get_task_policy.part.32 (1 samples, 0.03%)</title><rect x="973.2" y="1747.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.2" y="1758.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="973.5" y="1779.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.5" y="1790.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="973.5" y="1763.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="976.5" y="1774.0"></text>
</g>
<g>
<title>alloc_pid (12 samples, 0.38%)</title><rect x="973.9" y="1779.0" width="4.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="976.9" y="1790.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="978.0" y="1763.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="981.0" y="1774.0"></text>
</g>
<g>
<title>arch_dup_task_struct (1 samples, 0.03%)</title><rect x="978.4" y="1779.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="981.4" y="1790.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="978.4" y="1763.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="981.4" y="1774.0"></text>
</g>
<g>
<title>arch_local_irq_enable (7 samples, 0.22%)</title><rect x="978.8" y="1779.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="981.8" y="1790.0"></text>
</g>
<g>
<title>audit_alloc (1 samples, 0.03%)</title><rect x="981.4" y="1779.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="984.4" y="1790.0"></text>
</g>
<g>
<title>cgroup_can_fork (3 samples, 0.10%)</title><rect x="981.8" y="1779.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="984.8" y="1790.0"></text>
</g>
<g>
<title>pids_can_fork (2 samples, 0.06%)</title><rect x="982.2" y="1763.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="985.2" y="1774.0"></text>
</g>
<g>
<title>cgroup_post_fork (4 samples, 0.13%)</title><rect x="982.9" y="1779.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="985.9" y="1790.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (1 samples, 0.03%)</title><rect x="984.0" y="1763.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="987.0" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="984.0" y="1747.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="987.0" y="1758.0"></text>
</g>
<g>
<title>copy_namespaces (1 samples, 0.03%)</title><rect x="984.4" y="1779.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="987.4" y="1790.0"></text>
</g>
<g>
<title>copy_semundo (1 samples, 0.03%)</title><rect x="984.8" y="1779.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.8" y="1790.0"></text>
</g>
<g>
<title>find_vm_area (2 samples, 0.06%)</title><rect x="985.2" y="1779.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="988.2" y="1790.0"></text>
</g>
<g>
<title>find_vmap_area (2 samples, 0.06%)</title><rect x="985.2" y="1763.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="988.2" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="985.5" y="1747.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="988.5" y="1758.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="985.5" y="1731.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="988.5" y="1742.0"></text>
</g>
<g>
<title>get_random_u64 (11 samples, 0.35%)</title><rect x="985.9" y="1779.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="988.9" y="1790.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="989.7" y="1763.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="992.7" y="1774.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="989.7" y="1747.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.7" y="1758.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="989.7" y="1731.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="992.7" y="1742.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="989.7" y="1715.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.7" y="1726.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="989.7" y="1699.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="992.7" y="1710.0"></text>
</g>
<g>
<title>rcu_cblist_dequeue (1 samples, 0.03%)</title><rect x="989.7" y="1683.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.7" y="1694.0"></text>
</g>
<g>
<title>idr_preload (1 samples, 0.03%)</title><rect x="990.0" y="1779.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="993.0" y="1790.0"></text>
</g>
<g>
<title>init_entity_runnable_average (1 samples, 0.03%)</title><rect x="990.4" y="1779.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="993.4" y="1790.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.06%)</title><rect x="990.8" y="1779.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="993.8" y="1790.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="991.1" y="1763.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="994.1" y="1774.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.06%)</title><rect x="991.5" y="1779.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="994.5" y="1790.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="991.9" y="1763.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="994.9" y="1774.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.03%)</title><rect x="992.3" y="1779.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="995.3" y="1790.0"></text>
</g>
<g>
<title>memcg_kmem_charge (2 samples, 0.06%)</title><rect x="992.6" y="1779.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="995.6" y="1790.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="993.0" y="1763.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="996.0" y="1774.0"></text>
</g>
<g>
<title>memcpy_erms (10 samples, 0.32%)</title><rect x="993.4" y="1779.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="996.4" y="1790.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="997.1" y="1779.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1000.1" y="1790.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="997.1" y="1763.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.1" y="1774.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="997.1" y="1747.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1000.1" y="1758.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="997.1" y="1731.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1000.1" y="1742.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="997.1" y="1715.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1000.1" y="1726.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="997.1" y="1699.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.1" y="1710.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="997.1" y="1683.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1000.1" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="997.1" y="1667.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1000.1" y="1678.0"></text>
</g>
<g>
<title>perf_event_fork (1 samples, 0.03%)</title><rect x="997.5" y="1779.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1000.5" y="1790.0"></text>
</g>
<g>
<title>perf_event_task (1 samples, 0.03%)</title><rect x="997.5" y="1763.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1000.5" y="1774.0"></text>
</g>
<g>
<title>perf_event_init_task (4 samples, 0.13%)</title><rect x="997.9" y="1779.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1000.9" y="1790.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="998.3" y="1763.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1001.3" y="1774.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="998.6" y="1763.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1001.6" y="1774.0"></text>
</g>
<g>
<title>perf_pin_task_context (1 samples, 0.03%)</title><rect x="999.0" y="1763.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1002.0" y="1774.0"></text>
</g>
<g>
<title>perf_lock_task_context (1 samples, 0.03%)</title><rect x="999.0" y="1747.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1002.0" y="1758.0"></text>
</g>
<g>
<title>perf_unpin_context (1 samples, 0.03%)</title><rect x="999.4" y="1779.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1002.4" y="1790.0"></text>
</g>
<g>
<title>pids_can_fork (1 samples, 0.03%)</title><rect x="999.8" y="1779.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.8" y="1790.0"></text>
</g>
<g>
<title>sched_fork (16 samples, 0.51%)</title><rect x="1000.1" y="1779.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1003.1" y="1790.0"></text>
</g>
<g>
<title>__sched_fork (4 samples, 0.13%)</title><rect x="1000.1" y="1763.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1003.1" y="1774.0"></text>
</g>
<g>
<title>init_dl_inactive_task_timer (2 samples, 0.06%)</title><rect x="1000.9" y="1747.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1003.9" y="1758.0"></text>
</g>
<g>
<title>hrtimer_init (2 samples, 0.06%)</title><rect x="1000.9" y="1731.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.9" y="1742.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.06%)</title><rect x="1000.9" y="1715.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1003.9" y="1726.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="1001.6" y="1763.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1004.6" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.29%)</title><rect x="1002.0" y="1763.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1005.0" y="1774.0"></text>
</g>
<g>
<title>init_dl_task_timer (1 samples, 0.03%)</title><rect x="1005.4" y="1763.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1008.4" y="1774.0"></text>
</g>
<g>
<title>init_entity_runnable_average (1 samples, 0.03%)</title><rect x="1005.8" y="1763.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1008.8" y="1774.0"></text>
</g>
<g>
<title>security_task_alloc (5 samples, 0.16%)</title><rect x="1006.1" y="1779.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1009.1" y="1790.0"></text>
</g>
<g>
<title>apparmor_task_alloc (4 samples, 0.13%)</title><rect x="1006.5" y="1763.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1009.5" y="1774.0"></text>
</g>
<g>
<title>task_active_pid_ns (2 samples, 0.06%)</title><rect x="1008.0" y="1779.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1011.0" y="1790.0"></text>
</g>
<g>
<title>user_disable_single_step (1 samples, 0.03%)</title><rect x="1008.7" y="1779.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1011.7" y="1790.0"></text>
</g>
<g>
<title>get_random_u64 (1 samples, 0.03%)</title><rect x="1009.1" y="1795.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1012.1" y="1806.0"></text>
</g>
<g>
<title>memset_erms (12 samples, 0.38%)</title><rect x="1009.5" y="1795.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.5" y="1806.0"></text>
</g>
<g>
<title>perf_event_init_task (1 samples, 0.03%)</title><rect x="1014.0" y="1795.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1017.0" y="1806.0"></text>
</g>
<g>
<title>pid_vnr (3 samples, 0.10%)</title><rect x="1014.4" y="1795.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1017.4" y="1806.0"></text>
</g>
<g>
<title>task_active_pid_ns (2 samples, 0.06%)</title><rect x="1015.5" y="1795.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1018.5" y="1806.0"></text>
</g>
<g>
<title>wake_up_new_task (28 samples, 0.89%)</title><rect x="1016.2" y="1795.0" width="10.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1019.2" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.86%)</title><rect x="1016.6" y="1779.0" width="10.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1019.6" y="1790.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="1026.7" y="1859.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1029.7" y="1870.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="1026.7" y="1843.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1029.7" y="1854.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="1026.7" y="1827.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1029.7" y="1838.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="1026.7" y="1811.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.7" y="1822.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="1026.7" y="1795.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1029.7" y="1806.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.03%)</title><rect x="1026.7" y="1779.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1029.7" y="1790.0"></text>
</g>
<g>
<title>mem_cgroup_throttle_swaprate (1 samples, 0.03%)</title><rect x="1026.7" y="1763.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1029.7" y="1774.0"></text>
</g>
<g>
<title>__libc_free (5 samples, 0.16%)</title><rect x="1027.1" y="1875.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1030.1" y="1886.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="1029.0" y="1875.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1032.0" y="1886.0"></text>
</g>
<g>
<title>os::Posix::default_stack_size(os::ThreadType) (2 samples, 0.06%)</title><rect x="1030.1" y="1875.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1033.1" y="1886.0"></text>
</g>
<g>
<title>os::Posix::get_initial_stack_size(os::ThreadType, unsigned long) (1 samples, 0.03%)</title><rect x="1030.8" y="1875.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1033.8" y="1886.0"></text>
</g>
<g>
<title>os::vm_page_size() (1 samples, 0.03%)</title><rect x="1031.2" y="1875.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1034.2" y="1886.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (14 samples, 0.44%)</title><rect x="1031.6" y="1875.0" width="5.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1034.6" y="1886.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.06%)</title><rect x="1036.1" y="1859.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.1" y="1870.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.06%)</title><rect x="1036.1" y="1843.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1039.1" y="1854.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.06%)</title><rect x="1036.1" y="1827.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1039.1" y="1838.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.06%)</title><rect x="1036.1" y="1811.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1039.1" y="1822.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="1036.1" y="1795.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.1" y="1806.0"></text>
</g>
<g>
<title>__pte_alloc (1 samples, 0.03%)</title><rect x="1036.1" y="1779.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1039.1" y="1790.0"></text>
</g>
<g>
<title>pte_alloc_one (1 samples, 0.03%)</title><rect x="1036.1" y="1763.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1039.1" y="1774.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.03%)</title><rect x="1036.1" y="1747.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1039.1" y="1758.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="1036.1" y="1731.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1039.1" y="1742.0"></text>
</g>
<g>
<title>page_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="1036.5" y="1795.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1039.5" y="1806.0"></text>
</g>
<g>
<title>os::set_native_priority(Thread*, int) (2 samples, 0.06%)</title><rect x="1036.8" y="1891.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1039.8" y="1902.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (3 samples, 0.10%)</title><rect x="1037.6" y="1891.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1040.6" y="1902.0"></text>
</g>
<g>
<title>os::pd_start_thread(Thread*) (2 samples, 0.06%)</title><rect x="1037.6" y="1875.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1040.6" y="1886.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.03%)</title><rect x="1038.0" y="1859.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.0" y="1870.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1038.3" y="1875.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1041.3" y="1886.0"></text>
</g>
<g>
<title>pthread_attr_destroy@plt (1 samples, 0.03%)</title><rect x="1038.7" y="1891.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1041.7" y="1902.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.10%)</title><rect x="1039.1" y="1891.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1042.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 2.41%)</title><rect x="1040.2" y="1907.0" width="28.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1043.2" y="1918.0">[u..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="1040.2" y="1891.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1043.2" y="1902.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.06%)</title><rect x="1040.2" y="1875.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1043.2" y="1886.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="1041.0" y="1875.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1044.0" y="1886.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1041.0" y="1859.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1044.0" y="1870.0"></text>
</g>
<g>
<title>__cxa_pure_virtual (1 samples, 0.03%)</title><rect x="1041.3" y="1891.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1044.3" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1041.3" y="1875.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1044.3" y="1886.0"></text>
</g>
<g>
<title>thread_entry(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="1041.3" y="1859.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1044.3" y="1870.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="1041.3" y="1843.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1044.3" y="1854.0"></text>
</g>
<g>
<title>__lll_unlock_wake_private (2 samples, 0.06%)</title><rect x="1041.7" y="1891.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1044.7" y="1902.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="1041.7" y="1875.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1044.7" y="1886.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="1041.7" y="1859.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.7" y="1870.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1042.1" y="1843.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.1" y="1854.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1042.1" y="1827.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1045.1" y="1838.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1042.1" y="1811.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.1" y="1822.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.06%)</title><rect x="1042.5" y="1891.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1045.5" y="1902.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="1043.2" y="1891.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1046.2" y="1902.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="1044.0" y="1891.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1047.0" y="1902.0"></text>
</g>
<g>
<title>_int_malloc (6 samples, 0.19%)</title><rect x="1044.3" y="1891.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1047.3" y="1902.0"></text>
</g>
<g>
<title>malloc_consolidate (12 samples, 0.38%)</title><rect x="1046.6" y="1891.0" width="4.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1049.6" y="1902.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (47 samples, 1.49%)</title><rect x="1051.1" y="1891.0" width="17.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1054.1" y="1902.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.83%)</title><rect x="1058.9" y="1875.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1061.9" y="1886.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.83%)</title><rect x="1058.9" y="1859.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1061.9" y="1870.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.63%)</title><rect x="1060.8" y="1843.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.8" y="1854.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1061.9" y="1827.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.9" y="1838.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1061.9" y="1811.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1064.9" y="1822.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1061.9" y="1795.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1064.9" y="1806.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1061.9" y="1779.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1064.9" y="1790.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1061.9" y="1763.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1064.9" y="1774.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1061.9" y="1747.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1064.9" y="1758.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1061.9" y="1731.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.9" y="1742.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.51%)</title><rect x="1062.3" y="1827.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1065.3" y="1838.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.44%)</title><rect x="1063.0" y="1811.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1066.0" y="1822.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.19%)</title><rect x="1063.4" y="1795.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.4" y="1806.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="1064.2" y="1779.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1067.2" y="1790.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.10%)</title><rect x="1064.5" y="1779.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.5" y="1790.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="1065.3" y="1763.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1068.3" y="1774.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="1065.3" y="1747.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1068.3" y="1758.0"></text>
</g>
<g>
<title>put_task_stack (1 samples, 0.03%)</title><rect x="1065.3" y="1731.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1068.3" y="1742.0"></text>
</g>
<g>
<title>vfree_atomic (1 samples, 0.03%)</title><rect x="1065.3" y="1715.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1068.3" y="1726.0"></text>
</g>
<g>
<title>queue_work_on (1 samples, 0.03%)</title><rect x="1065.3" y="1699.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1068.3" y="1710.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.16%)</title><rect x="1065.7" y="1795.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1068.7" y="1806.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.06%)</title><rect x="1066.8" y="1779.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.8" y="1790.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1067.5" y="1795.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.5" y="1806.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="1067.9" y="1795.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.9" y="1806.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1068.3" y="1843.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1071.3" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1068.3" y="1827.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1071.3" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1068.3" y="1811.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1071.3" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1068.3" y="1795.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1071.3" y="1806.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1068.3" y="1779.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1071.3" y="1790.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1068.3" y="1763.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1071.3" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1068.3" y="1747.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1071.3" y="1758.0"></text>
</g>
<g>
<title>_IO_default_xsputn (3 samples, 0.10%)</title><rect x="1068.7" y="1907.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1071.7" y="1918.0"></text>
</g>
<g>
<title>_IO_str_init_static_internal (1 samples, 0.03%)</title><rect x="1069.8" y="1907.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1072.8" y="1918.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (14 samples, 0.44%)</title><rect x="1070.2" y="1907.0" width="5.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1073.2" y="1918.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.03%)</title><rect x="1070.5" y="1891.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1073.5" y="1902.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (9 samples, 0.29%)</title><rect x="1070.9" y="1891.0" width="3.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1073.9" y="1902.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (3 samples, 0.10%)</title><rect x="1074.3" y="1891.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1077.3" y="1902.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (1 samples, 0.03%)</title><rect x="1075.4" y="1907.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1078.4" y="1918.0"></text>
</g>
<g>
<title>__libc_free (7 samples, 0.22%)</title><rect x="1075.8" y="1907.0" width="2.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1078.8" y="1918.0"></text>
</g>
<g>
<title>__malloc (13 samples, 0.41%)</title><rect x="1078.4" y="1907.0" width="4.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1081.4" y="1918.0"></text>
</g>
<g>
<title>__pthread_cond_signal (48 samples, 1.52%)</title><rect x="1083.3" y="1907.0" width="17.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1086.3" y="1918.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.40%)</title><rect x="1084.8" y="1891.0" width="16.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1087.8" y="1902.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.40%)</title><rect x="1084.8" y="1875.0" width="16.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1087.8" y="1886.0"></text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 1.27%)</title><rect x="1086.3" y="1859.0" width="14.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1089.3" y="1870.0"></text>
</g>
<g>
<title>do_futex (40 samples, 1.27%)</title><rect x="1086.3" y="1843.0" width="14.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1089.3" y="1854.0"></text>
</g>
<g>
<title>futex_wake (40 samples, 1.27%)</title><rect x="1086.3" y="1827.0" width="14.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1089.3" y="1838.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.06%)</title><rect x="1087.0" y="1811.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.0" y="1822.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.03%)</title><rect x="1087.4" y="1795.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1090.4" y="1806.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 1.14%)</title><rect x="1087.8" y="1811.0" width="13.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1090.8" y="1822.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="1088.1" y="1795.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1091.1" y="1806.0"></text>
</g>
<g>
<title>try_to_wake_up (34 samples, 1.08%)</title><rect x="1088.5" y="1795.0" width="12.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1091.5" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 1.08%)</title><rect x="1088.5" y="1779.0" width="12.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1091.5" y="1790.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1100.9" y="1763.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1103.9" y="1774.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1100.9" y="1747.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1103.9" y="1758.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1100.9" y="1731.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1103.9" y="1742.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1100.9" y="1715.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1103.9" y="1726.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1100.9" y="1699.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1103.9" y="1710.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1100.9" y="1683.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1103.9" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1100.9" y="1667.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1103.9" y="1678.0"></text>
</g>
<g>
<title>_int_malloc (17 samples, 0.54%)</title><rect x="1101.2" y="1907.0" width="6.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1104.2" y="1918.0"></text>
</g>
<g>
<title>java_lang_Thread::stackSize(oopDesc*) (1 samples, 0.03%)</title><rect x="1107.6" y="1907.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1110.6" y="1918.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="1108.0" y="1907.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1111.0" y="1918.0"></text>
</g>
<g>
<title>malloc_consolidate (1 samples, 0.03%)</title><rect x="1108.4" y="1907.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1111.4" y="1918.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.03%)</title><rect x="1108.7" y="1907.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1111.7" y="1918.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.10%)</title><rect x="1109.1" y="1907.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1112.1" y="1918.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.03%)</title><rect x="1110.2" y="1907.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1113.2" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.setRequestPattern (24 samples, 0.76%)</title><rect x="1110.6" y="2003.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1113.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.13%)</title><rect x="1110.6" y="1987.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1113.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1263877414.invoke (4 samples, 0.13%)</title><rect x="1110.6" y="1971.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.10%)</title><rect x="1111.0" y="1955.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="1111.0" y="1939.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.0" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="1111.0" y="1923.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.06%)</title><rect x="1111.4" y="1939.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.4" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.06%)</title><rect x="1111.4" y="1923.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.4" y="1934.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1111.7" y="1907.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.7" y="1918.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1111.7" y="1891.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1114.7" y="1902.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1111.7" y="1875.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1114.7" y="1886.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1111.7" y="1859.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1114.7" y="1870.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="1111.7" y="1843.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1114.7" y="1854.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.03%)</title><rect x="1111.7" y="1827.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1114.7" y="1838.0"></text>
</g>
<g>
<title>java/net/URI.create (16 samples, 0.51%)</title><rect x="1112.1" y="1987.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.1" y="1998.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (16 samples, 0.51%)</title><rect x="1112.1" y="1971.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.1" y="1982.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (16 samples, 0.51%)</title><rect x="1112.1" y="1955.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.1" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="1112.1" y="1939.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.10%)</title><rect x="1112.1" y="1923.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1115.1" y="1934.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (12 samples, 0.38%)</title><rect x="1113.2" y="1939.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.2" y="1950.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.06%)</title><rect x="1113.6" y="1923.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.6" y="1934.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.06%)</title><rect x="1113.6" y="1907.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1116.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1113.6" y="1891.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1116.6" y="1902.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.03%)</title><rect x="1114.0" y="1891.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.0" y="1902.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (9 samples, 0.29%)</title><rect x="1114.4" y="1923.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.4" y="1934.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (9 samples, 0.29%)</title><rect x="1114.4" y="1907.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.4" y="1918.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="1114.4" y="1891.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.4" y="1902.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="1114.4" y="1875.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.4" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.16%)</title><rect x="1114.7" y="1891.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.7" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="1114.7" y="1875.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.7" y="1886.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.10%)</title><rect x="1114.7" y="1859.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.7" y="1870.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="1115.5" y="1843.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.5" y="1854.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="1115.5" y="1827.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.5" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1115.5" y="1811.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1118.5" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1115.5" y="1795.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1118.5" y="1806.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.06%)</title><rect x="1115.9" y="1875.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.9" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (2 samples, 0.06%)</title><rect x="1116.6" y="1891.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.6" y="1902.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (2 samples, 0.06%)</title><rect x="1116.6" y="1875.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.6" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.06%)</title><rect x="1116.6" y="1859.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.6" y="1870.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="1117.4" y="1891.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.4" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1117.4" y="1875.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.4" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="1117.7" y="1939.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1117.7" y="1923.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.7" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (4 samples, 0.13%)</title><rect x="1118.1" y="1987.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.1" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (4 samples, 0.13%)</title><rect x="1118.1" y="1971.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (4 samples, 0.13%)</title><rect x="1118.1" y="1955.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.1" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1043351526.test (4 samples, 0.13%)</title><rect x="1118.1" y="1939.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.13%)</title><rect x="1118.1" y="1923.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.1" y="1934.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.13%)</title><rect x="1118.1" y="1907.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.1" y="1918.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.13%)</title><rect x="1118.1" y="1891.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.1" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (4 samples, 0.13%)</title><rect x="1118.1" y="1875.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.1" y="1886.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.13%)</title><rect x="1118.1" y="1859.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.1" y="1870.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.13%)</title><rect x="1118.1" y="1843.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.1" y="1854.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.13%)</title><rect x="1118.1" y="1827.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.1" y="1838.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.13%)</title><rect x="1118.1" y="1811.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.1" y="1822.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.13%)</title><rect x="1118.1" y="1795.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.1" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (6 samples, 0.19%)</title><rect x="1119.6" y="2019.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.6" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.PUT (1 samples, 0.03%)</title><rect x="1119.6" y="2003.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.6" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method0 (1 samples, 0.03%)</title><rect x="1119.6" y="1987.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.6" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (4 samples, 0.13%)</title><rect x="1120.0" y="2003.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.0" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (4 samples, 0.13%)</title><rect x="1120.0" y="1987.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1123.0" y="1998.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (3 samples, 0.10%)</title><rect x="1120.3" y="1971.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.3" y="1982.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.10%)</title><rect x="1120.3" y="1955.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.3" y="1966.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (3 samples, 0.10%)</title><rect x="1120.3" y="1939.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.3" y="1950.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (3 samples, 0.10%)</title><rect x="1120.3" y="1923.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.3" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.03%)</title><rect x="1121.1" y="1907.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.1" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execLocalRequest (1 samples, 0.03%)</title><rect x="1121.5" y="2003.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.5" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.03%)</title><rect x="1121.5" y="1987.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.5" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.03%)</title><rect x="1121.5" y="1971.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.5" y="1982.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.10%)</title><rect x="1121.8" y="2067.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.8" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.10%)</title><rect x="1121.8" y="2051.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.8" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1121.8" y="2035.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.8" y="2046.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.06%)</title><rect x="1122.2" y="2035.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.2" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="1122.2" y="2019.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.2" y="2030.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="1122.2" y="2003.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1125.2" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="1123.0" y="2067.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.0" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1123.0" y="2051.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.0" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1123.0" y="2035.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.0" y="2046.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1123.0" y="2019.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.0" y="2030.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="1123.0" y="2003.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1126.0" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.35%)</title><rect x="1123.3" y="2099.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.3" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.10%)</title><rect x="1124.5" y="2083.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.5" y="2094.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.10%)</title><rect x="1124.5" y="2067.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.5" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="1124.5" y="2051.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.5" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="1124.5" y="2035.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.5" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1125.2" y="2051.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.2" y="2062.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="1125.6" y="2083.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.6" y="2094.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="1125.6" y="2067.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.6" y="2078.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.06%)</title><rect x="1126.7" y="2083.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.7" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.13%)</title><rect x="1127.5" y="2099.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.5" y="2110.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.10%)</title><rect x="1127.8" y="2083.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.8" y="2094.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.10%)</title><rect x="1127.8" y="2067.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.8" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.06%)</title><rect x="1128.2" y="2051.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1131.2" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.06%)</title><rect x="1128.2" y="2035.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.2" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="1129.0" y="2099.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.0" y="2110.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1129.0" y="2083.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.0" y="2094.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1129.0" y="2067.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.0" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1129.3" y="2083.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.3" y="2094.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1129.3" y="2067.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.3" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1129.3" y="2051.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.13%)</title><rect x="1129.7" y="2099.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.7" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.13%)</title><rect x="1129.7" y="2083.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.7" y="2094.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1130.8" y="2067.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1133.8" y="2078.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1130.8" y="2051.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.8" y="2062.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1130.8" y="2035.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1133.8" y="2046.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1130.8" y="2019.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.8" y="2030.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1130.8" y="2003.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1133.8" y="2014.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1130.8" y="1987.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1133.8" y="1998.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="1130.8" y="1971.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.8" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (69 samples, 2.19%)</title><rect x="1131.2" y="2115.0" width="25.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.2" y="2126.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (67 samples, 2.13%)</title><rect x="1132.0" y="2099.0" width="25.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.0" y="2110.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (19 samples, 0.60%)</title><rect x="1132.0" y="2083.0" width="7.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1135.0" y="2094.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.06%)</title><rect x="1133.5" y="2067.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.5" y="2078.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.03%)</title><rect x="1134.2" y="2067.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1137.2" y="2078.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.38%)</title><rect x="1134.6" y="2067.0" width="4.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1137.6" y="2078.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.06%)</title><rect x="1135.7" y="2051.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.7" y="2062.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.22%)</title><rect x="1136.4" y="2051.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1139.4" y="2062.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.13%)</title><rect x="1137.6" y="2035.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.6" y="2046.0"></text>
</g>
<g>
<title>__GI___recv (48 samples, 1.52%)</title><rect x="1139.1" y="2083.0" width="17.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1142.1" y="2094.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 1.46%)</title><rect x="1139.8" y="2067.0" width="17.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1142.8" y="2078.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="1139.8" y="2051.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.8" y="2062.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 1.43%)</title><rect x="1140.2" y="2051.0" width="16.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1143.2" y="2062.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (36 samples, 1.14%)</title><rect x="1143.6" y="2035.0" width="13.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.6" y="2046.0"></text>
</g>
<g>
<title>__sys_recvfrom (35 samples, 1.11%)</title><rect x="1143.6" y="2019.0" width="13.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.6" y="2030.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1143.6" y="2003.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1146.6" y="2014.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.03%)</title><rect x="1143.9" y="2003.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.9" y="2014.0"></text>
</g>
<g>
<title>sock_recvmsg (31 samples, 0.98%)</title><rect x="1144.3" y="2003.0" width="11.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1147.3" y="2014.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="1144.3" y="1987.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1147.3" y="1998.0"></text>
</g>
<g>
<title>inet_recvmsg (29 samples, 0.92%)</title><rect x="1144.7" y="1987.0" width="10.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1147.7" y="1998.0"></text>
</g>
<g>
<title>tcp_recvmsg (28 samples, 0.89%)</title><rect x="1145.1" y="1971.0" width="10.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1148.1" y="1982.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="1147.7" y="1955.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1150.7" y="1966.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="1147.7" y="1939.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1150.7" y="1950.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1148.1" y="1923.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.1" y="1934.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="1148.4" y="1923.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1151.4" y="1934.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="1148.4" y="1907.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1151.4" y="1918.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1148.8" y="1955.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1151.8" y="1966.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1149.2" y="1955.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.2" y="1966.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="1149.6" y="1955.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1152.6" y="1966.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="1149.6" y="1939.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1152.6" y="1950.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.25%)</title><rect x="1149.9" y="1955.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1152.9" y="1966.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.22%)</title><rect x="1150.3" y="1939.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.3" y="1950.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="1151.1" y="1923.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.1" y="1934.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.13%)</title><rect x="1151.4" y="1923.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1154.4" y="1934.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.10%)</title><rect x="1151.8" y="1907.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.8" y="1918.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.10%)</title><rect x="1151.8" y="1891.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.8" y="1902.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.16%)</title><rect x="1152.9" y="1955.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1155.9" y="1966.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.10%)</title><rect x="1153.7" y="1939.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1156.7" y="1950.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (3 samples, 0.10%)</title><rect x="1153.7" y="1923.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1156.7" y="1934.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.10%)</title><rect x="1153.7" y="1907.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.7" y="1918.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.10%)</title><rect x="1153.7" y="1891.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.7" y="1902.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.10%)</title><rect x="1153.7" y="1875.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1156.7" y="1886.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.10%)</title><rect x="1153.7" y="1859.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1156.7" y="1870.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="1153.7" y="1843.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.7" y="1854.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.06%)</title><rect x="1154.0" y="1843.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1157.0" y="1854.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.06%)</title><rect x="1154.0" y="1827.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.0" y="1838.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.06%)</title><rect x="1154.0" y="1811.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1157.0" y="1822.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="1154.0" y="1795.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1157.0" y="1806.0"></text>
</g>
<g>
<title>do_softirq.part.21 (2 samples, 0.06%)</title><rect x="1154.0" y="1779.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1157.0" y="1790.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.06%)</title><rect x="1154.0" y="1763.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1157.0" y="1774.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.06%)</title><rect x="1154.0" y="1747.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1157.0" y="1758.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.06%)</title><rect x="1154.0" y="1731.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.0" y="1742.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.06%)</title><rect x="1154.0" y="1715.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.0" y="1726.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.06%)</title><rect x="1154.0" y="1699.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1157.0" y="1710.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.06%)</title><rect x="1154.0" y="1683.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1157.0" y="1694.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1154.0" y="1667.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1157.0" y="1678.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1154.0" y="1651.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1157.0" y="1662.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1154.0" y="1635.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1157.0" y="1646.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1154.0" y="1619.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1157.0" y="1630.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="1154.0" y="1603.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.0" y="1614.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1154.0" y="1587.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1157.0" y="1598.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1154.0" y="1571.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1157.0" y="1582.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="1154.0" y="1555.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1157.0" y="1566.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="1154.0" y="1539.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.0" y="1550.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.03%)</title><rect x="1154.0" y="1523.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.0" y="1534.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="1154.0" y="1507.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.0" y="1518.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="1154.0" y="1491.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1157.0" y="1502.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1154.0" y="1475.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1157.0" y="1486.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="1154.0" y="1459.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.0" y="1470.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="1154.0" y="1443.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.0" y="1454.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="1154.0" y="1427.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1157.0" y="1438.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.03%)</title><rect x="1154.0" y="1411.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.0" y="1422.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.03%)</title><rect x="1154.4" y="1667.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.4" y="1678.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.06%)</title><rect x="1154.8" y="1955.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1157.8" y="1966.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="1155.2" y="1939.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1158.2" y="1950.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1155.2" y="1923.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1158.2" y="1934.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="1155.5" y="1987.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1158.5" y="1998.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="1155.5" y="1971.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1158.5" y="1982.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="1155.5" y="1955.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.5" y="1966.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="1155.5" y="1939.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.5" y="1950.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.06%)</title><rect x="1155.9" y="2003.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1158.9" y="2014.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="1155.9" y="1987.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1158.9" y="1998.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="1155.9" y="1971.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1158.9" y="1982.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1156.3" y="1955.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1159.3" y="1966.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1156.7" y="2019.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.7" y="2030.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1157.0" y="2131.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.0" y="2142.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1157.0" y="2115.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1160.0" y="2126.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1157.0" y="2099.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1160.0" y="2110.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1157.4" y="2147.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.4" y="2158.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1157.4" y="2131.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1160.4" y="2142.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1157.4" y="2115.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1160.4" y="2126.0"></text>
</g>
<g>
<title>start_thread (86 samples, 2.73%)</title><rect x="1157.8" y="2163.0" width="32.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1160.8" y="2174.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (86 samples, 2.73%)</title><rect x="1157.8" y="2147.0" width="32.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1160.8" y="2158.0">th..</text>
</g>
<g>
<title>Thread::call_run() (86 samples, 2.73%)</title><rect x="1157.8" y="2131.0" width="32.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.8" y="2142.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (54 samples, 1.71%)</title><rect x="1157.8" y="2115.0" width="20.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.8" y="2126.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1157.8" y="2099.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.8" y="2110.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (1 samples, 0.03%)</title><rect x="1157.8" y="2083.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.8" y="2094.0"></text>
</g>
<g>
<title>SparsePRT::clear() (1 samples, 0.03%)</title><rect x="1157.8" y="2067.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.8" y="2078.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (49 samples, 1.56%)</title><rect x="1158.2" y="2099.0" width="18.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.2" y="2110.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (7 samples, 0.22%)</title><rect x="1158.2" y="2083.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.2" y="2094.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.22%)</title><rect x="1158.2" y="2067.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1161.2" y="2078.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (29 samples, 0.92%)</title><rect x="1160.8" y="2083.0" width="10.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.8" y="2094.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (29 samples, 0.92%)</title><rect x="1160.8" y="2067.0" width="10.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.8" y="2078.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (29 samples, 0.92%)</title><rect x="1160.8" y="2051.0" width="10.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.8" y="2062.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (29 samples, 0.92%)</title><rect x="1160.8" y="2035.0" width="10.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.8" y="2046.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (29 samples, 0.92%)</title><rect x="1160.8" y="2019.0" width="10.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.8" y="2030.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (6 samples, 0.19%)</title><rect x="1161.2" y="2003.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.2" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.06%)</title><rect x="1162.3" y="1987.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.3" y="1998.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1162.7" y="1971.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.7" y="1982.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="1163.0" y="1987.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1166.0" y="1998.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (22 samples, 0.70%)</title><rect x="1163.4" y="2003.0" width="8.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.4" y="2014.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (21 samples, 0.67%)</title><rect x="1163.4" y="1987.0" width="7.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.4" y="1998.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (7 samples, 0.22%)</title><rect x="1165.3" y="1971.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.3" y="1982.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (1 samples, 0.03%)</title><rect x="1166.0" y="1955.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.0" y="1966.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (4 samples, 0.13%)</title><rect x="1166.4" y="1955.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.4" y="1966.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.03%)</title><rect x="1167.9" y="1971.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.9" y="1982.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.03%)</title><rect x="1168.3" y="1971.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.3" y="1982.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.06%)</title><rect x="1168.7" y="1971.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.7" y="1982.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.03%)</title><rect x="1169.4" y="1971.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.4" y="1982.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (4 samples, 0.13%)</title><rect x="1169.8" y="1971.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.8" y="1982.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1170.9" y="1955.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.9" y="1966.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.03%)</title><rect x="1171.3" y="1987.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.3" y="1998.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="1171.7" y="2083.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.7" y="2094.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.03%)</title><rect x="1171.7" y="2067.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.7" y="2078.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="1171.7" y="2051.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.7" y="2062.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.03%)</title><rect x="1171.7" y="2035.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.7" y="2046.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (12 samples, 0.38%)</title><rect x="1172.0" y="2083.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.0" y="2094.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (8 samples, 0.25%)</title><rect x="1172.0" y="2067.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.0" y="2078.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (8 samples, 0.25%)</title><rect x="1172.0" y="2051.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.0" y="2062.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (8 samples, 0.25%)</title><rect x="1172.0" y="2035.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.0" y="2046.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (5 samples, 0.16%)</title><rect x="1172.0" y="2019.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.0" y="2030.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (5 samples, 0.16%)</title><rect x="1172.0" y="2003.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.0" y="2014.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (1 samples, 0.03%)</title><rect x="1173.1" y="1987.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.1" y="1998.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (1 samples, 0.03%)</title><rect x="1173.5" y="1987.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.5" y="1998.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (1 samples, 0.03%)</title><rect x="1173.5" y="1971.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.5" y="1982.0"></text>
</g>
<g>
<title>HandleArea::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="1173.9" y="2019.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.9" y="2030.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (2 samples, 0.06%)</title><rect x="1174.3" y="2019.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.3" y="2030.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 0.03%)</title><rect x="1174.6" y="2003.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.6" y="2014.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1175.0" y="2067.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.0" y="2078.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="1175.0" y="2051.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.0" y="2062.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (3 samples, 0.10%)</title><rect x="1175.4" y="2067.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.4" y="2078.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (2 samples, 0.06%)</title><rect x="1176.5" y="2099.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.5" y="2110.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.06%)</title><rect x="1176.5" y="2083.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1179.5" y="2094.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1177.3" y="2099.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.3" y="2110.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.03%)</title><rect x="1177.3" y="2083.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.3" y="2094.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.68] (1 samples, 0.03%)</title><rect x="1177.3" y="2067.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.3" y="2078.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (1 samples, 0.03%)</title><rect x="1177.6" y="2099.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.6" y="2110.0"></text>
</g>
<g>
<title>__GI___pthread_testcancel (1 samples, 0.03%)</title><rect x="1177.6" y="2083.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1180.6" y="2094.0"></text>
</g>
<g>
<title>JavaThread::run() (4 samples, 0.13%)</title><rect x="1178.0" y="2115.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.0" y="2126.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (4 samples, 0.13%)</title><rect x="1178.0" y="2099.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.0" y="2110.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (4 samples, 0.13%)</title><rect x="1178.0" y="2083.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.0" y="2094.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.13%)</title><rect x="1178.0" y="2067.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.0" y="2078.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4 samples, 0.13%)</title><rect x="1178.0" y="2051.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.0" y="2062.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.06%)</title><rect x="1178.0" y="2035.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.0" y="2046.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.03%)</title><rect x="1178.0" y="2019.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.0" y="2030.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.03%)</title><rect x="1178.0" y="2003.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.0" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1178.0" y="1987.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.0" y="1998.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.03%)</title><rect x="1178.0" y="1971.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.0" y="1982.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1178.0" y="1955.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.0" y="1966.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1178.0" y="1939.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.0" y="1950.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1178.0" y="1923.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.0" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.03%)</title><rect x="1178.4" y="2019.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.4" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.03%)</title><rect x="1178.4" y="2003.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.4" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.03%)</title><rect x="1178.4" y="1987.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.4" y="1998.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="1178.4" y="1971.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.4" y="1982.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1178.8" y="2035.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.8" y="2046.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1178.8" y="2019.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.8" y="2030.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1178.8" y="2003.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.8" y="2014.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1178.8" y="1987.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.8" y="1998.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1178.8" y="1971.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.8" y="1982.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1178.8" y="1955.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.8" y="1966.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1178.8" y="1939.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.8" y="1950.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1178.8" y="1923.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.8" y="1934.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1178.8" y="1907.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.8" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1178.8" y="1891.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.8" y="1902.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1178.8" y="1875.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.8" y="1886.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1178.8" y="1859.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.8" y="1870.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1178.8" y="1843.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.8" y="1854.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1178.8" y="1827.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.8" y="1838.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1178.8" y="1811.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.8" y="1822.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1178.8" y="1795.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.8" y="1806.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1178.8" y="1779.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.8" y="1790.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1179.1" y="2035.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.1" y="2046.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1179.1" y="2019.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.1" y="2030.0"></text>
</g>
<g>
<title>VMThread::run() (27 samples, 0.86%)</title><rect x="1179.5" y="2115.0" width="10.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.5" y="2126.0"></text>
</g>
<g>
<title>VMThread::loop() (27 samples, 0.86%)</title><rect x="1179.5" y="2099.0" width="10.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.5" y="2110.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (9 samples, 0.29%)</title><rect x="1179.5" y="2083.0" width="3.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.5" y="2094.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.06%)</title><rect x="1181.8" y="2067.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.8" y="2078.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1182.1" y="2051.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.1" y="2062.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="1182.1" y="2035.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1185.1" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1182.1" y="2019.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.1" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1182.1" y="2003.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1185.1" y="2014.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.03%)</title><rect x="1182.5" y="2067.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.5" y="2078.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.03%)</title><rect x="1182.5" y="2051.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.5" y="2062.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="1182.5" y="2035.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.5" y="2046.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.03%)</title><rect x="1182.5" y="2019.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1185.5" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1182.5" y="2003.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1185.5" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1182.5" y="1987.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1185.5" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1182.5" y="1971.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1185.5" y="1982.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1182.5" y="1955.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.5" y="1966.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="1182.5" y="1939.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.5" y="1950.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="1182.5" y="1923.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.5" y="1934.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1182.5" y="1907.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1185.5" y="1918.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1182.5" y="1891.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1185.5" y="1902.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (6 samples, 0.19%)</title><rect x="1182.9" y="2083.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.9" y="2094.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (6 samples, 0.19%)</title><rect x="1182.9" y="2067.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.9" y="2078.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (6 samples, 0.19%)</title><rect x="1182.9" y="2051.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.9" y="2062.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (6 samples, 0.19%)</title><rect x="1182.9" y="2035.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.9" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (1 samples, 0.03%)</title><rect x="1182.9" y="2019.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.9" y="2030.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="1182.9" y="2003.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.9" y="2014.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="1182.9" y="1987.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.9" y="1998.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.03%)</title><rect x="1182.9" y="1971.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1185.9" y="1982.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1182.9" y="1955.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.9" y="1966.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1182.9" y="1939.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.9" y="1950.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1182.9" y="1923.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1185.9" y="1934.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1182.9" y="1907.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1185.9" y="1918.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="1182.9" y="1891.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1185.9" y="1902.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="1182.9" y="1875.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1185.9" y="1886.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1182.9" y="1859.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.9" y="1870.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1182.9" y="1843.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1185.9" y="1854.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (3 samples, 0.10%)</title><rect x="1183.3" y="2019.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.3" y="2030.0"></text>
</g>
<g>
<title>DerivedPointerTable::update_pointers() (1 samples, 0.03%)</title><rect x="1183.3" y="2003.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.3" y="2014.0"></text>
</g>
<g>
<title>G1RemSet::cleanup_after_oops_into_collection_set_do() (1 samples, 0.03%)</title><rect x="1183.6" y="2003.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.6" y="2014.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="1183.6" y="1987.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.6" y="1998.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1184.0" y="2003.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.0" y="2014.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1184.0" y="1987.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.0" y="1998.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1184.0" y="1971.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.0" y="1982.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_humongous_regions_with_cset() (1 samples, 0.03%)</title><rect x="1184.4" y="2019.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.4" y="2030.0"></text>
</g>
<g>
<title>RegisterHumongousWithInCSetFastTestClosure::do_heap_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="1184.4" y="2003.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.4" y="2014.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::reset() (1 samples, 0.03%)</title><rect x="1184.8" y="2019.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="2030.0"></text>
</g>
<g>
<title>sched_yield (12 samples, 0.38%)</title><rect x="1185.1" y="2083.0" width="4.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1188.1" y="2094.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.29%)</title><rect x="1186.3" y="2067.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1189.3" y="2078.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.29%)</title><rect x="1186.3" y="2051.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1189.3" y="2062.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (8 samples, 0.25%)</title><rect x="1186.6" y="2035.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1189.6" y="2046.0"></text>
</g>
<g>
<title>do_sched_yield (8 samples, 0.25%)</title><rect x="1186.6" y="2019.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1189.6" y="2030.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.25%)</title><rect x="1186.6" y="2003.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1189.6" y="2014.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.25%)</title><rect x="1186.6" y="1987.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1189.6" y="1998.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="1189.6" y="2115.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.6" y="2126.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.03%)</title><rect x="1189.6" y="2099.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.6" y="2110.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1189.6" y="2083.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.6" y="2094.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1189.6" y="2067.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.6" y="2078.0"></text>
</g>
<g>
<title>Thread::muxRelease(long volatile*) (1 samples, 0.03%)</title><rect x="1189.6" y="2051.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.6" y="2062.0"></text>
</g>
</g>
</svg>
