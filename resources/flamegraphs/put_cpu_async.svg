<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">async Java client | CPU</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (3,037 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.20%)</title><rect x="10.0" y="1139.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.20%)</title><rect x="10.0" y="1123.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (5 samples, 0.16%)</title><rect x="10.4" y="1107.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.4" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (5 samples, 0.16%)</title><rect x="10.4" y="1091.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.4" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.10%)</title><rect x="10.4" y="1075.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.4" y="1086.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="11.6" y="1075.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.6" y="1086.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.03%)</title><rect x="12.3" y="1139.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="15.3" y="1150.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.16%)</title><rect x="12.7" y="1139.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="15.7" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="12.7" y="1123.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.7" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.10%)</title><rect x="13.1" y="1123.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.1" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.10%)</title><rect x="13.1" y="1107.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.1" y="1118.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.07%)</title><rect x="13.1" y="1091.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.1" y="1102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="13.5" y="1075.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.5" y="1086.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="13.5" y="1059.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.5" y="1070.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="13.9" y="1091.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.9" y="1102.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="13.9" y="1075.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.9" y="1086.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="13.9" y="1059.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.9" y="1070.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="13.9" y="1043.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.9" y="1054.0"></text>
</g>
<g>
<title>_new_array_nozero_Java (1 samples, 0.03%)</title><rect x="14.3" y="1123.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="17.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="14.7" y="1139.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="17.7" y="1150.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="14.7" y="1123.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="17.7" y="1134.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.07%)</title><rect x="15.1" y="1139.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="18.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="15.1" y="1123.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="18.1" y="1134.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="15.1" y="1107.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="18.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="15.4" y="1123.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="18.4" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="15.4" y="1107.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="18.4" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="15.4" y="1091.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="18.4" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="15.4" y="1075.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="18.4" y="1086.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="15.4" y="1059.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="18.4" y="1070.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="15.4" y="1043.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="18.4" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="15.4" y="1027.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.4" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="15.4" y="1011.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="18.4" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="15.4" y="995.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="18.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.10%)</title><rect x="15.8" y="1139.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="18.8" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="15.8" y="1123.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.8" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="15.8" y="1107.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.8" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="16.6" y="1091.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.6" y="1102.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="16.6" y="1075.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="19.6" y="1086.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="16.6" y="1059.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="19.6" y="1070.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="16.6" y="1043.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="19.6" y="1054.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="16.6" y="1027.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="19.6" y="1038.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="16.6" y="1011.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="19.6" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="16.6" y="995.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,694 samples, 55.78%)</title><rect x="17.0" y="1139.0" width="658.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.0" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,694 samples, 55.78%)</title><rect x="17.0" y="1123.0" width="658.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.0" y="1134.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,694 samples, 55.78%)</title><rect x="17.0" y="1107.0" width="658.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.0" y="1118.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (478 samples, 15.74%)</title><rect x="17.4" y="1091.0" width="185.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.4" y="1102.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (226 samples, 7.44%)</title><rect x="17.4" y="1075.0" width="87.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.4" y="1086.0">java/util/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="18.2" y="1059.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="21.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (1 samples, 0.03%)</title><rect x="18.5" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="18.5" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="18.5" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="18.5" y="1011.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="21.5" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="18.5" y="995.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="21.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="18.5" y="979.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="21.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="18.5" y="963.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="21.5" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="18.5" y="947.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.5" y="958.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="18.5" y="931.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="21.5" y="942.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="18.5" y="915.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="21.5" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="18.5" y="899.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.5" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="18.5" y="883.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="21.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (220 samples, 7.24%)</title><rect x="18.9" y="1059.0" width="85.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.9" y="1070.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.16%)</title><rect x="18.9" y="1043.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.9" y="1054.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="19.3" y="1027.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="22.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1 samples, 0.03%)</title><rect x="20.1" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.03%)</title><rect x="20.1" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.03%)</title><rect x="20.1" y="995.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.03%)</title><rect x="20.1" y="979.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.1" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (1 samples, 0.03%)</title><rect x="20.1" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.1" y="974.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (1 samples, 0.03%)</title><rect x="20.1" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.1" y="958.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (1 samples, 0.03%)</title><rect x="20.1" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.apply (1 samples, 0.03%)</title><rect x="20.5" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.apply (215 samples, 7.08%)</title><rect x="20.9" y="1043.0" width="83.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.9" y="1054.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (215 samples, 7.08%)</title><rect x="20.9" y="1027.0" width="83.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.9" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (215 samples, 7.08%)</title><rect x="20.9" y="1011.0" width="83.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.9" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.07%)</title><rect x="20.9" y="995.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.07%)</title><rect x="20.9" y="979.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="21.3" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (164 samples, 5.40%)</title><rect x="21.7" y="995.0" width="63.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.7" y="1006.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (164 samples, 5.40%)</title><rect x="21.7" y="979.0" width="63.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.7" y="990.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (164 samples, 5.40%)</title><rect x="21.7" y="963.0" width="63.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.7" y="974.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (91 samples, 3.00%)</title><rect x="21.7" y="947.0" width="35.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.7" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (91 samples, 3.00%)</title><rect x="21.7" y="931.0" width="35.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.7" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (2 samples, 0.07%)</title><rect x="21.7" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.07%)</title><rect x="21.7" y="899.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (2 samples, 0.07%)</title><rect x="21.7" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.03%)</title><rect x="22.0" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (89 samples, 2.93%)</title><rect x="22.4" y="915.0" width="34.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.4" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="22.4" y="899.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/1812886357.apply (1 samples, 0.03%)</title><rect x="22.4" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/1812886357.apply (88 samples, 2.90%)</title><rect x="22.8" y="899.0" width="34.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.8" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (88 samples, 2.90%)</title><rect x="22.8" y="883.0" width="34.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.8" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (88 samples, 2.90%)</title><rect x="22.8" y="867.0" width="34.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.8" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1400327321.apply (1 samples, 0.03%)</title><rect x="23.2" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.03%)</title><rect x="23.2" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.03%)</title><rect x="23.2" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.03%)</title><rect x="23.2" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.03%)</title><rect x="23.2" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1 samples, 0.03%)</title><rect x="23.2" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="23.2" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (1 samples, 0.03%)</title><rect x="23.2" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="23.2" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="23.2" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1571858567.apply (86 samples, 2.83%)</title><rect x="23.6" y="851.0" width="33.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.6" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (86 samples, 2.83%)</title><rect x="23.6" y="835.0" width="33.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.6" y="846.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.10%)</title><rect x="23.6" y="819.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="24.4" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="24.4" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (83 samples, 2.73%)</title><rect x="24.8" y="819.0" width="32.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.8" y="830.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (68 samples, 2.24%)</title><rect x="24.8" y="803.0" width="26.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.8" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (68 samples, 2.24%)</title><rect x="24.8" y="787.0" width="26.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.8" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.07%)</title><rect x="25.2" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$185/1589824935.apply (1 samples, 0.03%)</title><rect x="25.5" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$183/36443311.apply (65 samples, 2.14%)</title><rect x="25.9" y="771.0" width="25.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.9" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (65 samples, 2.14%)</title><rect x="25.9" y="755.0" width="25.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.9" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.10%)</title><rect x="26.3" y="739.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.10%)</title><rect x="26.3" y="723.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.10%)</title><rect x="26.3" y="707.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.10%)</title><rect x="26.3" y="691.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.3" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="26.3" y="675.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="29.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="26.7" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="27.1" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="27.1" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="27.1" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.03%)</title><rect x="27.1" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (21 samples, 0.69%)</title><rect x="27.5" y="739.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (19 samples, 0.63%)</title><rect x="28.3" y="723.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.03%)</title><rect x="28.3" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (4 samples, 0.13%)</title><rect x="28.6" y="707.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.10%)</title><rect x="29.0" y="691.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.10%)</title><rect x="29.0" y="675.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.10%)</title><rect x="29.0" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.10%)</title><rect x="29.0" y="643.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.10%)</title><rect x="29.0" y="627.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.03%)</title><rect x="29.8" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="29.8" y="595.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="32.8" y="606.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.03%)</title><rect x="29.8" y="579.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="32.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="29.8" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="32.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="29.8" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="32.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (14 samples, 0.46%)</title><rect x="30.2" y="707.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (14 samples, 0.46%)</title><rect x="30.2" y="691.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.2" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="31.0" y="675.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="34.0" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="31.0" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="34.0" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.03%)</title><rect x="31.0" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="34.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (9 samples, 0.30%)</title><rect x="31.4" y="675.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9 samples, 0.30%)</title><rect x="31.4" y="659.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.30%)</title><rect x="31.4" y="643.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.4" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="31.8" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="34.8" y="638.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="31.8" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="34.8" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="31.8" y="595.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.8" y="606.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="31.8" y="579.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="34.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7 samples, 0.23%)</title><rect x="32.1" y="627.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.1" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="32.5" y="611.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="35.5" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="32.5" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="35.5" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="32.5" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="35.5" y="590.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="32.5" y="563.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="35.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.16%)</title><rect x="32.9" y="611.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="32.9" y="595.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="35.9" y="606.0"></text>
</g>
<g>
<title>__GI_write (5 samples, 0.16%)</title><rect x="32.9" y="579.0" width="2.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="35.9" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.16%)</title><rect x="32.9" y="563.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="35.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.16%)</title><rect x="32.9" y="547.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.9" y="558.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.13%)</title><rect x="33.3" y="531.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="36.3" y="542.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 0.13%)</title><rect x="33.3" y="515.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="36.3" y="526.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.13%)</title><rect x="33.3" y="499.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.3" y="510.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.10%)</title><rect x="33.7" y="483.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.7" y="494.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.10%)</title><rect x="33.7" y="467.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="36.7" y="478.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.10%)</title><rect x="33.7" y="451.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="36.7" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.10%)</title><rect x="33.7" y="435.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="36.7" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.10%)</title><rect x="33.7" y="419.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.7" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="33.7" y="403.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="36.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (2 samples, 0.07%)</title><rect x="34.9" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.07%)</title><rect x="34.9" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (40 samples, 1.32%)</title><rect x="35.6" y="739.0" width="15.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.07%)</title><rect x="36.4" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.07%)</title><rect x="36.4" y="707.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2 samples, 0.07%)</title><rect x="36.4" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.4" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="36.8" y="675.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="39.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (26 samples, 0.86%)</title><rect x="37.2" y="723.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (1 samples, 0.03%)</title><rect x="37.2" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.2" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="37.2" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.2" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="37.2" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="37.2" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="37.2" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="37.2" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (16 samples, 0.53%)</title><rect x="37.6" y="707.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.6" y="718.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.03%)</title><rect x="41.1" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.1" y="702.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.03%)</title><rect x="41.1" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.1" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$199/1275166273.test (3 samples, 0.10%)</title><rect x="41.5" y="691.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.5" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1 samples, 0.03%)</title><rect x="42.2" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/299644693.test (1 samples, 0.03%)</title><rect x="42.2" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.03%)</title><rect x="42.2" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.2" y="654.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1172131546.test (1 samples, 0.03%)</title><rect x="42.2" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.2" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.03%)</title><rect x="42.2" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1790421142.test (1 samples, 0.03%)</title><rect x="42.2" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.03%)</title><rect x="42.2" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="42.2" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="42.2" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="42.2" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="42.2" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="42.2" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.2" y="510.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="42.2" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.2" y="494.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="42.2" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.2" y="478.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.10%)</title><rect x="42.6" y="691.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="45.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="43.4" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="43.4" y="659.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="43.4" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="46.4" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="43.4" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.4" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="43.4" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="46.4" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="43.4" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (9 samples, 0.30%)</title><rect x="43.8" y="707.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.8" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.30%)</title><rect x="43.8" y="691.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.8" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.30%)</title><rect x="43.8" y="675.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.8" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.30%)</title><rect x="43.8" y="659.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.8" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (7 samples, 0.23%)</title><rect x="44.2" y="643.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.2" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.23%)</title><rect x="44.2" y="627.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.16%)</title><rect x="44.2" y="611.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.2" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (5 samples, 0.16%)</title><rect x="44.2" y="595.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.2" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.16%)</title><rect x="44.2" y="579.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.13%)</title><rect x="44.6" y="563.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.13%)</title><rect x="44.6" y="547.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.6" y="558.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="45.4" y="531.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="48.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="46.1" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="46.1" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="46.1" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="46.1" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.1" y="574.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="46.5" y="611.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="49.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="46.9" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (3 samples, 0.10%)</title><rect x="47.3" y="723.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.07%)</title><rect x="47.7" y="707.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (2 samples, 0.07%)</title><rect x="47.7" y="691.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.7" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="48.1" y="675.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="51.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.23%)</title><rect x="48.5" y="723.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.16%)</title><rect x="49.2" y="707.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.10%)</title><rect x="49.6" y="691.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.10%)</title><rect x="49.6" y="675.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.10%)</title><rect x="49.6" y="659.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="50.8" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (2 samples, 0.07%)</title><rect x="51.2" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (12 samples, 0.40%)</title><rect x="52.0" y="803.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (12 samples, 0.40%)</title><rect x="52.0" y="787.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.16%)</title><rect x="52.4" y="771.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.16%)</title><rect x="52.4" y="755.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.20%)</title><rect x="54.3" y="771.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.20%)</title><rect x="54.3" y="755.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="54.3" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.16%)</title><rect x="54.7" y="739.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.16%)</title><rect x="54.7" y="723.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.13%)</title><rect x="54.7" y="707.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (4 samples, 0.13%)</title><rect x="54.7" y="691.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.13%)</title><rect x="54.7" y="675.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (2 samples, 0.07%)</title><rect x="54.7" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2 samples, 0.07%)</title><rect x="54.7" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.07%)</title><rect x="55.5" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="55.5" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="55.5" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="55.5" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="55.5" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="55.5" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="55.5" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.03%)</title><rect x="55.8" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="55.8" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="55.8" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="56.2" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.03%)</title><rect x="56.6" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="57.0" y="947.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="57.0" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (72 samples, 2.37%)</title><rect x="57.4" y="947.0" width="28.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.4" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.07%)</title><rect x="57.4" y="931.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.07%)</title><rect x="57.4" y="915.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="57.4" y="899.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$169/812541756.apply (1 samples, 0.03%)</title><rect x="57.4" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$169/812541756.apply (1 samples, 0.03%)</title><rect x="57.8" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.03%)</title><rect x="57.8" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="57.8" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="57.8" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="57.8" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.16%)</title><rect x="58.2" y="931.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.16%)</title><rect x="58.2" y="915.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.16%)</title><rect x="58.2" y="899.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.10%)</title><rect x="58.6" y="883.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.10%)</title><rect x="58.6" y="867.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.10%)</title><rect x="58.6" y="851.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.10%)</title><rect x="58.6" y="835.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.10%)</title><rect x="58.6" y="819.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.10%)</title><rect x="58.6" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.10%)</title><rect x="58.6" y="787.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.6" y="798.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="58.6" y="771.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="61.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/1769974407.accept (1 samples, 0.03%)</title><rect x="59.7" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.03%)</title><rect x="59.7" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (65 samples, 2.14%)</title><rect x="60.1" y="931.0" width="25.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.1" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (65 samples, 2.14%)</title><rect x="60.1" y="915.0" width="25.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.1" y="926.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="60.1" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="63.1" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="60.1" y="883.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="63.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (61 samples, 2.01%)</title><rect x="60.5" y="899.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.5" y="910.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="60.5" y="883.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="60.5" y="867.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$142/1979135536.get$Lambda (2 samples, 0.07%)</title><rect x="60.5" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$142/1979135536.&lt;init&gt; (2 samples, 0.07%)</title><rect x="60.5" y="835.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.07%)</title><rect x="60.5" y="819.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.5" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="61.3" y="883.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.3" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.10%)</title><rect x="61.7" y="883.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.7" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="61.7" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.7" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.07%)</title><rect x="62.1" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="62.8" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4 samples, 0.13%)</title><rect x="63.2" y="883.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (1 samples, 0.03%)</title><rect x="64.0" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="64.4" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (10 samples, 0.33%)</title><rect x="64.8" y="883.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="67.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="65.9" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="66.3" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="66.3" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$143/1197481961.get$Lambda (1 samples, 0.03%)</title><rect x="66.3" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.07%)</title><rect x="66.7" y="867.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.03%)</title><rect x="67.5" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.07%)</title><rect x="67.9" y="867.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="68.3" y="851.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="68.3" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="68.3" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="68.3" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.3" y="814.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.03%)</title><rect x="68.3" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.3" y="798.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.03%)</title><rect x="68.3" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (12 samples, 0.40%)</title><rect x="68.7" y="883.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (7 samples, 0.23%)</title><rect x="69.1" y="867.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (6 samples, 0.20%)</title><rect x="69.4" y="851.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.07%)</title><rect x="71.0" y="835.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.0" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.07%)</title><rect x="71.0" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.0" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.07%)</title><rect x="71.0" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.0" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.07%)</title><rect x="71.0" y="787.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.0" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.07%)</title><rect x="71.0" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.10%)</title><rect x="71.8" y="867.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.resolveAddress (1 samples, 0.03%)</title><rect x="72.9" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (26 samples, 0.86%)</title><rect x="73.3" y="883.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.3" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (26 samples, 0.86%)</title><rect x="73.3" y="867.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.3" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (18 samples, 0.59%)</title><rect x="73.3" y="851.0" width="7.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="76.3" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.07%)</title><rect x="74.5" y="835.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="77.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (2 samples, 0.07%)</title><rect x="74.5" y="819.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="77.5" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="75.3" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="78.3" y="846.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.03%)</title><rect x="75.3" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="78.3" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="75.7" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="78.7" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.16%)</title><rect x="76.1" y="835.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="79.1" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.07%)</title><rect x="76.1" y="819.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="79.1" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.10%)</title><rect x="76.8" y="819.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="79.8" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.07%)</title><rect x="76.8" y="803.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="79.8" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="77.2" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="80.2" y="798.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="77.6" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="80.6" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.20%)</title><rect x="78.0" y="835.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="81.0" y="846.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="78.8" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="81.8" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="79.2" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="82.2" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.07%)</title><rect x="79.5" y="819.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="82.5" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.07%)</title><rect x="79.5" y="803.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="82.5" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.07%)</title><rect x="79.5" y="787.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="82.5" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.07%)</title><rect x="79.5" y="771.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="82.5" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="80.3" y="851.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="83.3" y="862.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.03%)</title><rect x="80.7" y="851.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.7" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="81.1" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="84.1" y="862.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.03%)</title><rect x="81.5" y="851.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="84.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/188927272.run (3 samples, 0.10%)</title><rect x="81.9" y="851.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.10%)</title><rect x="81.9" y="835.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.9" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.03%)</title><rect x="82.7" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.7" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.03%)</title><rect x="82.7" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.7" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.03%)</title><rect x="82.7" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.7" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.03%)</title><rect x="82.7" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.7" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.03%)</title><rect x="82.7" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.7" y="766.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="83.0" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="86.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="83.4" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.03%)</title><rect x="83.4" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="83.8" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="83.8" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="83.8" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="83.8" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.8" y="846.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.03%)</title><rect x="83.8" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.8" y="830.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.03%)</title><rect x="83.8" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.10%)</title><rect x="84.2" y="899.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="84.2" y="883.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="84.2" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.07%)</title><rect x="84.6" y="883.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="84.6" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="85.0" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (34 samples, 1.12%)</title><rect x="85.4" y="995.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.4" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (5 samples, 0.16%)</title><rect x="85.4" y="979.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.10%)</title><rect x="85.8" y="963.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.8" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="86.2" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.03%)</title><rect x="86.2" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="86.5" y="947.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (1 samples, 0.03%)</title><rect x="86.9" y="963.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (29 samples, 0.95%)</title><rect x="87.3" y="979.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.3" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (29 samples, 0.95%)</title><rect x="87.3" y="963.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.3" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (29 samples, 0.95%)</title><rect x="87.3" y="947.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.95%)</title><rect x="87.3" y="931.0" width="11.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="90.3" y="942.0"></text>
</g>
<g>
<title>__GI_write (29 samples, 0.95%)</title><rect x="87.3" y="915.0" width="11.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="90.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.92%)</title><rect x="87.7" y="899.0" width="10.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.92%)</title><rect x="87.7" y="883.0" width="10.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="90.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_write (25 samples, 0.82%)</title><rect x="88.9" y="867.0" width="9.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.9" y="878.0"></text>
</g>
<g>
<title>ksys_write (25 samples, 0.82%)</title><rect x="88.9" y="851.0" width="9.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="91.9" y="862.0"></text>
</g>
<g>
<title>vfs_write (25 samples, 0.82%)</title><rect x="88.9" y="835.0" width="9.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="91.9" y="846.0"></text>
</g>
<g>
<title>__vfs_write (24 samples, 0.79%)</title><rect x="88.9" y="819.0" width="9.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="91.9" y="830.0"></text>
</g>
<g>
<title>new_sync_write (24 samples, 0.79%)</title><rect x="88.9" y="803.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.9" y="814.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.03%)</title><rect x="88.9" y="787.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="91.9" y="798.0"></text>
</g>
<g>
<title>pipe_write (23 samples, 0.76%)</title><rect x="89.3" y="787.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.3" y="798.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.63%)</title><rect x="90.0" y="771.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="93.0" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.59%)</title><rect x="90.0" y="755.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="93.0" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.59%)</title><rect x="90.0" y="739.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="97.0" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="100.0" y="766.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="97.4" y="771.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="100.4" y="782.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="97.4" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="100.4" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="97.8" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="100.8" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="98.2" y="819.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.2" y="830.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="98.2" y="803.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (2 samples, 0.07%)</title><rect x="98.6" y="995.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (9 samples, 0.30%)</title><rect x="99.4" y="995.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (8 samples, 0.26%)</title><rect x="99.8" y="979.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.8" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.03%)</title><rect x="100.1" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.03%)</title><rect x="100.5" y="963.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.16%)</title><rect x="100.9" y="963.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.9" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (5 samples, 0.16%)</title><rect x="100.9" y="947.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.9" y="958.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.03%)</title><rect x="100.9" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.9" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.03%)</title><rect x="101.3" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.3" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.10%)</title><rect x="101.7" y="931.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.10%)</title><rect x="101.7" y="915.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.7" y="926.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.03%)</title><rect x="102.1" y="899.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="105.1" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="102.5" y="899.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="105.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (4 samples, 0.13%)</title><rect x="102.9" y="995.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (4 samples, 0.13%)</title><rect x="102.9" y="979.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (4 samples, 0.13%)</title><rect x="102.9" y="963.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.9" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.13%)</title><rect x="102.9" y="947.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.9" y="958.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.13%)</title><rect x="102.9" y="931.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="104.0" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.0" y="926.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="104.0" y="899.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="107.0" y="910.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.03%)</title><rect x="104.0" y="883.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.0" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="104.0" y="867.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="107.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1016124894.get (2 samples, 0.07%)</title><rect x="104.4" y="1059.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$120/984099083.get (252 samples, 8.30%)</title><rect x="105.2" y="1075.0" width="97.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.2" y="1086.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$upsertWithMultipleNodes$3 (252 samples, 8.30%)</title><rect x="105.2" y="1059.0" width="97.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.2" y="1070.0">ru/mail/pol..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="105.2" y="1043.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="108.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValueWithFutures (251 samples, 8.26%)</title><rect x="105.6" y="1043.0" width="97.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.6" y="1054.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (251 samples, 8.26%)</title><rect x="105.6" y="1027.0" width="97.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.6" y="1038.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (249 samples, 8.20%)</title><rect x="105.6" y="1011.0" width="96.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.6" y="1022.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (246 samples, 8.10%)</title><rect x="106.4" y="995.0" width="95.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.4" y="1006.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (169 samples, 5.56%)</title><rect x="106.4" y="979.0" width="65.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="109.4" y="990.0">Java_or..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.03%)</title><rect x="106.7" y="963.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="109.7" y="974.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.10%)</title><rect x="107.1" y="963.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="110.1" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="107.9" y="947.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="110.9" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="107.9" y="931.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="110.9" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="107.9" y="915.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="110.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="108.3" y="963.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="111.3" y="974.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (163 samples, 5.37%)</title><rect x="108.7" y="963.0" width="63.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="111.7" y="974.0">rocksdb..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="109.1" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="112.1" y="958.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.23%)</title><rect x="109.5" y="947.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="112.5" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="109.9" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="112.9" y="942.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.16%)</title><rect x="110.2" y="931.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="113.2" y="942.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.10%)</title><rect x="111.0" y="915.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="114.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (151 samples, 4.97%)</title><rect x="112.2" y="947.0" width="58.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="115.2" y="958.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="112.6" y="931.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="115.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (149 samples, 4.91%)</title><rect x="113.0" y="931.0" width="57.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="116.0" y="942.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (146 samples, 4.81%)</title><rect x="113.0" y="915.0" width="56.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="116.0" y="926.0">rocksd..</text>
</g>
<g>
<title>free@plt (1 samples, 0.03%)</title><rect x="113.0" y="899.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="116.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.03%)</title><rect x="113.4" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="116.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (132 samples, 4.35%)</title><rect x="113.7" y="899.0" width="51.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="116.7" y="910.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (125 samples, 4.12%)</title><rect x="113.7" y="883.0" width="48.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="116.7" y="894.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="116.5" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.03%)</title><rect x="116.8" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.8" y="878.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.03%)</title><rect x="116.8" y="851.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="119.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (36 samples, 1.19%)</title><rect x="117.2" y="867.0" width="14.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="120.2" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.03%)</title><rect x="118.0" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="121.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (31 samples, 1.02%)</title><rect x="118.4" y="851.0" width="12.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="121.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() [clone .plt] (1 samples, 0.03%)</title><rect x="118.8" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="121.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (28 samples, 0.92%)</title><rect x="119.2" y="835.0" width="10.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="122.2" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4513982023456556414.so (8 samples, 0.26%)</title><rect x="120.0" y="819.0" width="3.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="123.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.03%)</title><rect x="123.1" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="126.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="123.5" y="819.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="126.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (8 samples, 0.26%)</title><rect x="124.2" y="819.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="127.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (8 samples, 0.26%)</title><rect x="124.2" y="803.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="127.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.03%)</title><rect x="127.0" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="130.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.07%)</title><rect x="127.3" y="819.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="130.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (5 samples, 0.16%)</title><rect x="128.1" y="819.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="131.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.03%)</title><rect x="128.1" y="803.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="131.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="128.5" y="803.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="131.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="129.3" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="132.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="130.1" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="133.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="130.4" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="133.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.03%)</title><rect x="130.8" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="133.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.03%)</title><rect x="131.2" y="867.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="134.2" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="131.2" y="851.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="134.2" y="862.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.03%)</title><rect x="131.6" y="867.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="134.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (71 samples, 2.34%)</title><rect x="132.0" y="867.0" width="27.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="135.0" y="878.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (70 samples, 2.30%)</title><rect x="132.4" y="851.0" width="27.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="135.4" y="862.0">r..</text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="132.4" y="835.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="135.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (69 samples, 2.27%)</title><rect x="132.8" y="835.0" width="26.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="135.8" y="846.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (65 samples, 2.14%)</title><rect x="133.2" y="819.0" width="25.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="136.2" y="830.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.03%)</title><rect x="133.2" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="136.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.03%)</title><rect x="133.6" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="136.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.03%)</title><rect x="133.9" y="803.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="136.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (62 samples, 2.04%)</title><rect x="134.3" y="803.0" width="24.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="137.3" y="814.0">r..</text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.07%)</title><rect x="136.3" y="787.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="139.3" y="798.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="136.7" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.7" y="782.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="136.7" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="139.7" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="136.7" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.7" y="750.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="136.7" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="139.7" y="734.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="136.7" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.7" y="718.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.03%)</title><rect x="136.7" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="139.7" y="702.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="136.7" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="139.7" y="686.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="136.7" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.03%)</title><rect x="137.1" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="140.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (54 samples, 1.78%)</title><rect x="137.4" y="787.0" width="21.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="140.4" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4513982023456556414.so (5 samples, 0.16%)</title><rect x="138.6" y="771.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="141.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.03%)</title><rect x="140.2" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="143.2" y="766.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (43 samples, 1.42%)</title><rect x="140.5" y="771.0" width="16.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="143.5" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4513982023456556414.so (38 samples, 1.25%)</title><rect x="142.1" y="755.0" width="14.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="145.1" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4513982023456556414.so (9 samples, 0.30%)</title><rect x="152.2" y="739.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="155.2" y="750.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="153.0" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="156.0" y="734.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.03%)</title><rect x="153.4" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="156.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.16%)</title><rect x="153.8" y="723.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="156.8" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4513982023456556414.so (2 samples, 0.07%)</title><rect x="154.9" y="707.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="157.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.10%)</title><rect x="155.7" y="739.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="158.7" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4513982023456556414.so (1 samples, 0.03%)</title><rect x="156.5" y="723.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="159.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.03%)</title><rect x="156.9" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="159.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.10%)</title><rect x="157.3" y="771.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="160.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.03%)</title><rect x="158.0" y="755.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="161.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="158.4" y="819.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="161.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) [clone .plt] (1 samples, 0.03%)</title><rect x="158.8" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="161.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.03%)</title><rect x="159.2" y="819.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="162.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (3 samples, 0.10%)</title><rect x="159.6" y="867.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="162.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.03%)</title><rect x="160.8" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="163.8" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.03%)</title><rect x="161.1" y="867.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="164.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.03%)</title><rect x="161.1" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="164.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.03%)</title><rect x="161.5" y="867.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="164.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.03%)</title><rect x="161.9" y="867.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="164.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.10%)</title><rect x="162.3" y="883.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="165.3" y="894.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.03%)</title><rect x="163.5" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="166.5" y="894.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() [clone .plt] (1 samples, 0.03%)</title><rect x="163.9" y="883.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="166.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="164.3" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="167.3" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.03%)</title><rect x="164.6" y="883.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="167.6" y="894.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.03%)</title><rect x="165.0" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="168.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) [clone .plt] (1 samples, 0.03%)</title><rect x="165.4" y="899.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="168.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.13%)</title><rect x="165.8" y="899.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="168.8" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.03%)</title><rect x="165.8" y="883.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="168.8" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.03%)</title><rect x="166.2" y="883.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="169.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (1 samples, 0.03%)</title><rect x="166.6" y="883.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="169.6" y="894.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="167.0" y="883.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="170.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.07%)</title><rect x="167.4" y="899.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="170.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="168.1" y="899.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="171.1" y="910.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.07%)</title><rect x="168.5" y="899.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="171.5" y="910.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.03%)</title><rect x="169.3" y="899.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="172.3" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.03%)</title><rect x="169.7" y="915.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="172.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="170.1" y="915.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="173.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="170.5" y="915.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="173.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.10%)</title><rect x="170.9" y="947.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="173.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 2.40%)</title><rect x="172.0" y="979.0" width="28.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="175.0" y="990.0">[u..</text>
</g>
<g>
<title>__GI_write (72 samples, 2.37%)</title><rect x="172.0" y="963.0" width="28.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="175.0" y="974.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (71 samples, 2.34%)</title><rect x="172.4" y="947.0" width="27.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="175.4" y="958.0">e..</text>
</g>
<g>
<title>do_syscall_64 (71 samples, 2.34%)</title><rect x="172.4" y="931.0" width="27.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="175.4" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_write (62 samples, 2.04%)</title><rect x="175.9" y="915.0" width="24.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="178.9" y="926.0">_..</text>
</g>
<g>
<title>ksys_write (62 samples, 2.04%)</title><rect x="175.9" y="899.0" width="24.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="178.9" y="910.0">k..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.10%)</title><rect x="175.9" y="883.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="178.9" y="894.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="175.9" y="867.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="178.9" y="878.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.10%)</title><rect x="175.9" y="851.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="178.9" y="862.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="177.1" y="883.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="180.1" y="894.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="178.2" y="883.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="181.2" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="178.2" y="867.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="181.2" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="178.2" y="851.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="181.2" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="178.2" y="835.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="181.2" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="178.2" y="819.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="181.2" y="830.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="178.2" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="181.2" y="814.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.03%)</title><rect x="178.2" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="181.2" y="798.0"></text>
</g>
<g>
<title>vfs_write (55 samples, 1.81%)</title><rect x="178.6" y="883.0" width="21.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="181.6" y="894.0">v..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="179.0" y="867.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="182.0" y="878.0"></text>
</g>
<g>
<title>__vfs_write (50 samples, 1.65%)</title><rect x="179.4" y="867.0" width="19.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="182.4" y="878.0"></text>
</g>
<g>
<title>new_sync_write (49 samples, 1.61%)</title><rect x="179.8" y="851.0" width="19.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.8" y="862.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.03%)</title><rect x="179.8" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="182.8" y="846.0"></text>
</g>
<g>
<title>down_write_trylock (1 samples, 0.03%)</title><rect x="180.2" y="835.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.2" y="846.0"></text>
</g>
<g>
<title>ext4_file_write_iter (47 samples, 1.55%)</title><rect x="180.6" y="835.0" width="18.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.6" y="846.0"></text>
</g>
<g>
<title>__generic_file_write_iter (44 samples, 1.45%)</title><rect x="181.0" y="819.0" width="17.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="184.0" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r10 (1 samples, 0.03%)</title><rect x="181.0" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="184.0" y="814.0"></text>
</g>
<g>
<title>file_update_time (14 samples, 0.46%)</title><rect x="181.3" y="803.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.3" y="814.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.03%)</title><rect x="181.3" y="787.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="184.3" y="798.0"></text>
</g>
<g>
<title>generic_update_time (13 samples, 0.43%)</title><rect x="181.7" y="787.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="184.7" y="798.0"></text>
</g>
<g>
<title>__mark_inode_dirty (13 samples, 0.43%)</title><rect x="181.7" y="771.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.7" y="782.0"></text>
</g>
<g>
<title>ext4_dirty_inode (13 samples, 0.43%)</title><rect x="181.7" y="755.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="184.7" y="766.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.07%)</title><rect x="182.1" y="739.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="185.1" y="750.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.07%)</title><rect x="182.1" y="723.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="185.1" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="182.1" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="185.1" y="718.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.03%)</title><rect x="182.5" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="185.5" y="718.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.03%)</title><rect x="182.5" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="185.5" y="702.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.03%)</title><rect x="182.9" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="185.9" y="750.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.03%)</title><rect x="182.9" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="185.9" y="734.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (7 samples, 0.23%)</title><rect x="183.3" y="739.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="186.3" y="750.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="183.3" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="186.3" y="734.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.10%)</title><rect x="183.7" y="723.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="186.7" y="734.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.10%)</title><rect x="183.7" y="707.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="186.7" y="718.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.03%)</title><rect x="183.7" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="186.7" y="702.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.03%)</title><rect x="184.1" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="187.1" y="702.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.03%)</title><rect x="184.5" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.5" y="702.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.03%)</title><rect x="184.5" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="187.5" y="686.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.03%)</title><rect x="184.5" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.5" y="670.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.03%)</title><rect x="184.5" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.5" y="654.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.07%)</title><rect x="184.8" y="723.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="187.8" y="734.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.07%)</title><rect x="184.8" y="707.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.8" y="718.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.03%)</title><rect x="185.2" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="188.2" y="702.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="185.6" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="188.6" y="734.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="185.6" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="188.6" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="185.6" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="188.6" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="185.6" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="188.6" y="686.0"></text>
</g>
<g>
<title>tasklet_hi_action (1 samples, 0.03%)</title><rect x="185.6" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="188.6" y="670.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.23 (1 samples, 0.03%)</title><rect x="185.6" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.6" y="654.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.03%)</title><rect x="186.0" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="189.0" y="750.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.03%)</title><rect x="186.4" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="189.4" y="750.0"></text>
</g>
<g>
<title>generic_perform_write (27 samples, 0.89%)</title><rect x="186.8" y="803.0" width="10.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="189.8" y="814.0"></text>
</g>
<g>
<title>ext4_da_write_begin (15 samples, 0.49%)</title><rect x="186.8" y="787.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="189.8" y="798.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.13%)</title><rect x="187.2" y="771.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="190.2" y="782.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.13%)</title><rect x="187.2" y="755.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="190.2" y="766.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.03%)</title><rect x="187.6" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.6" y="750.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="188.0" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.0" y="750.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.03%)</title><rect x="188.3" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.3" y="750.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.07%)</title><rect x="188.7" y="771.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="191.7" y="782.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.03%)</title><rect x="189.5" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.5" y="782.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (6 samples, 0.20%)</title><rect x="189.9" y="771.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="192.9" y="782.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.03%)</title><rect x="189.9" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.9" y="766.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.16%)</title><rect x="190.3" y="755.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="193.3" y="766.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.10%)</title><rect x="191.1" y="739.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="194.1" y="750.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.10%)</title><rect x="191.1" y="723.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.1" y="734.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="191.8" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="194.8" y="718.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.03%)</title><rect x="192.2" y="771.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="195.2" y="782.0"></text>
</g>
<g>
<title>ext4_da_write_end (11 samples, 0.36%)</title><rect x="192.6" y="787.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="195.6" y="798.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.07%)</title><rect x="192.6" y="771.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.6" y="782.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.07%)</title><rect x="192.6" y="755.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.6" y="766.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.03%)</title><rect x="193.0" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.0" y="750.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="193.0" y="723.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="196.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="193.0" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.0" y="718.0"></text>
</g>
<g>
<title>generic_write_end (9 samples, 0.30%)</title><rect x="193.4" y="771.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.4" y="782.0"></text>
</g>
<g>
<title>__generic_write_end (9 samples, 0.30%)</title><rect x="193.4" y="755.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.4" y="766.0"></text>
</g>
<g>
<title>__mark_inode_dirty (9 samples, 0.30%)</title><rect x="193.4" y="739.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="196.4" y="750.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.03%)</title><rect x="193.4" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="196.4" y="734.0"></text>
</g>
<g>
<title>ext4_dirty_inode (8 samples, 0.26%)</title><rect x="193.8" y="723.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="196.8" y="734.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (8 samples, 0.26%)</title><rect x="193.8" y="707.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="196.8" y="718.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.03%)</title><rect x="193.8" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.8" y="702.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.10%)</title><rect x="194.2" y="691.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="197.2" y="702.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.07%)</title><rect x="194.6" y="675.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="197.6" y="686.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.07%)</title><rect x="194.6" y="659.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.6" y="670.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (2 samples, 0.07%)</title><rect x="194.6" y="643.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.6" y="654.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.07%)</title><rect x="194.6" y="627.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.6" y="638.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.03%)</title><rect x="194.9" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="197.9" y="622.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (4 samples, 0.13%)</title><rect x="195.3" y="691.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="198.3" y="702.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.07%)</title><rect x="195.3" y="675.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="198.3" y="686.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="196.1" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="199.1" y="686.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.03%)</title><rect x="196.5" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="199.5" y="686.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.03%)</title><rect x="196.9" y="787.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="199.9" y="798.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.03%)</title><rect x="197.3" y="803.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="200.3" y="814.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.03%)</title><rect x="197.7" y="803.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="200.7" y="814.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.03%)</title><rect x="198.1" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="201.1" y="830.0"></text>
</g>
<g>
<title>generic_write_check_limits (1 samples, 0.03%)</title><rect x="198.1" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="201.1" y="814.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.03%)</title><rect x="198.4" y="819.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="201.4" y="830.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.10%)</title><rect x="198.8" y="867.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="201.8" y="878.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.10%)</title><rect x="198.8" y="851.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="201.8" y="862.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.10%)</title><rect x="198.8" y="835.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="201.8" y="846.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.10%)</title><rect x="198.8" y="819.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="201.8" y="830.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="200.0" y="963.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="203.0" y="974.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="200.4" y="979.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="203.4" y="990.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="200.8" y="979.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="203.8" y="990.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="201.2" y="979.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="204.2" y="990.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="201.6" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="204.6" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="201.9" y="995.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="204.9" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="201.9" y="979.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="204.9" y="990.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="201.9" y="963.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="204.9" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (2 samples, 0.07%)</title><rect x="202.3" y="1011.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (1 samples, 0.03%)</title><rect x="202.7" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="205.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (12 samples, 0.40%)</title><rect x="203.1" y="1091.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.40%)</title><rect x="203.1" y="1075.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.40%)</title><rect x="203.1" y="1059.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.40%)</title><rect x="203.1" y="1043.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.1" y="1054.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="204.7" y="1027.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="207.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3 samples, 0.10%)</title><rect x="205.8" y="1027.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.run (2 samples, 0.07%)</title><rect x="207.0" y="1027.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (120 samples, 3.95%)</title><rect x="207.8" y="1091.0" width="46.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.8" y="1102.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (116 samples, 3.82%)</title><rect x="209.3" y="1075.0" width="45.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.3" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (90 samples, 2.96%)</title><rect x="210.5" y="1059.0" width="35.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.5" y="1070.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.07%)</title><rect x="210.5" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="210.5" y="1027.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="210.9" y="1011.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="210.9" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (88 samples, 2.90%)</title><rect x="211.3" y="1043.0" width="34.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.3" y="1054.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (88 samples, 2.90%)</title><rect x="211.3" y="1027.0" width="34.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.3" y="1038.0">jd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="211.7" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="214.7" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (38 samples, 1.25%)</title><rect x="212.0" y="1011.0" width="14.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="215.0" y="1022.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.13%)</title><rect x="212.0" y="995.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="215.0" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.20%)</title><rect x="213.6" y="995.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="216.6" y="1006.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="214.0" y="979.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="217.0" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="214.4" y="979.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="217.4" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="214.8" y="979.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="217.8" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="215.9" y="995.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="218.9" y="1006.0"></text>
</g>
<g>
<title>__lll_unlock_wake (21 samples, 0.69%)</title><rect x="216.3" y="995.0" width="8.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="219.3" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="216.7" y="979.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="219.7" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="216.7" y="963.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="219.7" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="216.7" y="947.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="219.7" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="216.7" y="931.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="219.7" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="216.7" y="915.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.7" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="216.7" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="219.7" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="216.7" y="883.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="219.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.63%)</title><rect x="217.1" y="979.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="220.1" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="217.1" y="963.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="220.1" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.59%)</title><rect x="217.5" y="963.0" width="7.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.5" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.20%)</title><rect x="221.8" y="947.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.8" y="958.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.20%)</title><rect x="221.8" y="931.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="224.8" y="942.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.18 (1 samples, 0.03%)</title><rect x="222.1" y="915.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="225.1" y="926.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.13%)</title><rect x="222.5" y="915.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="225.5" y="926.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.07%)</title><rect x="222.9" y="899.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="225.9" y="910.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="223.7" y="899.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="226.7" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="224.1" y="947.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.1" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="224.1" y="931.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="227.1" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="224.1" y="915.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="227.1" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="224.1" y="899.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.1" y="910.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="224.1" y="883.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="227.1" y="894.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="224.1" y="867.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="227.1" y="878.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.03%)</title><rect x="224.1" y="851.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.1" y="862.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.03%)</title><rect x="224.1" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="227.1" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="224.1" y="819.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.1" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="224.1" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="227.1" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="224.5" y="995.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="227.5" y="1006.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="224.9" y="995.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="227.9" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="225.3" y="995.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="228.3" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="225.6" y="995.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="228.6" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.07%)</title><rect x="226.0" y="995.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="229.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 1.58%)</title><rect x="226.8" y="1011.0" width="18.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="229.8" y="1022.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="226.8" y="995.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="229.8" y="1006.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.10%)</title><rect x="227.2" y="995.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="230.2" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="228.0" y="979.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.0" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="228.0" y="963.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="231.0" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="228.0" y="947.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="231.0" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="228.0" y="931.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="231.0" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="228.0" y="915.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="231.0" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="228.0" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="231.0" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="228.0" y="883.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="231.0" y="894.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (44 samples, 1.45%)</title><rect x="228.4" y="995.0" width="17.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="231.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 1.19%)</title><rect x="231.5" y="979.0" width="14.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="234.5" y="990.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="231.5" y="963.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="234.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 1.15%)</title><rect x="231.9" y="963.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="234.9" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (28 samples, 0.92%)</title><rect x="234.6" y="947.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="237.6" y="958.0"></text>
</g>
<g>
<title>do_futex (25 samples, 0.82%)</title><rect x="235.4" y="931.0" width="9.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="238.4" y="942.0"></text>
</g>
<g>
<title>futex_wait (23 samples, 0.76%)</title><rect x="235.7" y="915.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="238.7" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.46%)</title><rect x="236.5" y="899.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.5" y="910.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.40%)</title><rect x="237.3" y="883.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="240.3" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.36%)</title><rect x="237.7" y="867.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.7" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.30%)</title><rect x="238.5" y="851.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="241.5" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.07%)</title><rect x="240.8" y="835.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="243.8" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="240.8" y="819.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="243.8" y="830.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.07%)</title><rect x="240.8" y="803.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.8" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.07%)</title><rect x="240.8" y="787.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="243.8" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="240.8" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="243.8" y="782.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="241.2" y="771.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="244.2" y="782.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="241.2" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="244.2" y="766.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="241.2" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="244.2" y="750.0"></text>
</g>
<g>
<title>free_task (1 samples, 0.03%)</title><rect x="241.2" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="244.2" y="734.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="241.2" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="244.2" y="718.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="241.2" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="244.2" y="702.0"></text>
</g>
<g>
<title>put_task_stack (1 samples, 0.03%)</title><rect x="241.6" y="835.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="244.6" y="846.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.10%)</title><rect x="242.0" y="899.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.0" y="910.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.07%)</title><rect x="242.3" y="883.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="245.3" y="894.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="243.1" y="899.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="246.1" y="910.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.07%)</title><rect x="243.5" y="899.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="246.5" y="910.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="244.3" y="899.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="247.3" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="244.7" y="915.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.7" y="926.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="245.1" y="931.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="248.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (23 samples, 0.76%)</title><rect x="245.5" y="1059.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.76%)</title><rect x="245.5" y="1043.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.76%)</title><rect x="245.5" y="1027.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.76%)</title><rect x="245.5" y="1011.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.53%)</title><rect x="248.2" y="995.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.2" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="248.2" y="979.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="251.2" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="248.2" y="963.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="251.2" y="974.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="248.6" y="963.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="251.6" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.46%)</title><rect x="249.0" y="979.0" width="5.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="252.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.46%)</title><rect x="249.0" y="963.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="252.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.46%)</title><rect x="249.0" y="947.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="252.0" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.46%)</title><rect x="249.0" y="931.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="252.0" y="942.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.46%)</title><rect x="249.0" y="915.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="252.0" y="926.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.43%)</title><rect x="249.0" y="899.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.0" y="910.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.40%)</title><rect x="249.3" y="883.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="252.3" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.40%)</title><rect x="249.3" y="867.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="252.3" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.40%)</title><rect x="249.3" y="851.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="252.3" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="253.6" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.6" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="253.6" y="819.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.6" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="253.6" y="803.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="256.6" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="253.6" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="256.6" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="253.6" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="256.6" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="253.6" y="755.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.6" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="253.6" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="256.6" y="750.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="254.0" y="899.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="257.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.run (302 samples, 9.94%)</title><rect x="254.4" y="1091.0" width="117.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.4" y="1102.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (302 samples, 9.94%)</title><rect x="254.4" y="1075.0" width="117.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.4" y="1086.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (300 samples, 9.88%)</title><rect x="255.2" y="1059.0" width="116.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="258.2" y="1070.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (297 samples, 9.78%)</title><rect x="256.3" y="1043.0" width="115.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.3" y="1054.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (297 samples, 9.78%)</title><rect x="256.3" y="1027.0" width="115.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.3" y="1038.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (296 samples, 9.75%)</title><rect x="256.7" y="1011.0" width="115.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.7" y="1022.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (295 samples, 9.71%)</title><rect x="257.1" y="995.0" width="114.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.1" y="1006.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.07%)</title><rect x="257.5" y="979.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.07%)</title><rect x="257.5" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.07%)</title><rect x="257.5" y="947.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.07%)</title><rect x="257.5" y="931.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.07%)</title><rect x="257.5" y="915.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.5" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="257.5" y="899.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="260.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (292 samples, 9.61%)</title><rect x="258.3" y="979.0" width="113.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.3" y="990.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.03%)</title><rect x="258.3" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.03%)</title><rect x="258.3" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.3" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="258.3" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (291 samples, 9.58%)</title><rect x="258.7" y="963.0" width="113.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.7" y="974.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (290 samples, 9.55%)</title><rect x="258.7" y="947.0" width="112.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.7" y="958.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (290 samples, 9.55%)</title><rect x="258.7" y="931.0" width="112.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.7" y="942.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (63 samples, 2.07%)</title><rect x="259.1" y="915.0" width="24.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.1" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (59 samples, 1.94%)</title><rect x="259.4" y="899.0" width="23.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.4" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (56 samples, 1.84%)</title><rect x="260.6" y="883.0" width="21.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.6" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (55 samples, 1.81%)</title><rect x="260.6" y="867.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.6" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55 samples, 1.81%)</title><rect x="260.6" y="851.0" width="21.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.6" y="862.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="262.2" y="835.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="265.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.26%)</title><rect x="262.6" y="835.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.07%)</title><rect x="262.6" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.6" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="262.6" y="803.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="265.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1 samples, 0.03%)</title><rect x="262.9" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.03%)</title><rect x="262.9" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="263.3" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="263.3" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="266.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/556718513.apply (3 samples, 0.10%)</title><rect x="263.7" y="819.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="266.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.10%)</title><rect x="263.7" y="803.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.10%)</title><rect x="263.7" y="787.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="266.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.07%)</title><rect x="264.1" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.07%)</title><rect x="264.1" y="755.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.07%)</title><rect x="264.1" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.07%)</title><rect x="264.1" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/704105605.apply (2 samples, 0.07%)</title><rect x="264.9" y="819.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.07%)</title><rect x="264.9" y="803.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.07%)</title><rect x="264.9" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.07%)</title><rect x="264.9" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.07%)</title><rect x="264.9" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.07%)</title><rect x="264.9" y="739.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/611985749.run (2 samples, 0.07%)</title><rect x="264.9" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2 samples, 0.07%)</title><rect x="264.9" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.07%)</title><rect x="264.9" y="691.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.07%)</title><rect x="264.9" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.07%)</title><rect x="264.9" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.07%)</title><rect x="264.9" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.07%)</title><rect x="264.9" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.07%)</title><rect x="264.9" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (2 samples, 0.07%)</title><rect x="264.9" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.07%)</title><rect x="264.9" y="579.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.07%)</title><rect x="264.9" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.07%)</title><rect x="264.9" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.07%)</title><rect x="264.9" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/1882091062.run (2 samples, 0.07%)</title><rect x="264.9" y="515.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.07%)</title><rect x="264.9" y="499.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.07%)</title><rect x="264.9" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.07%)</title><rect x="264.9" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.07%)</title><rect x="264.9" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.07%)</title><rect x="264.9" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.07%)</title><rect x="264.9" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.03%)</title><rect x="264.9" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.03%)</title><rect x="264.9" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="264.9" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.03%)</title><rect x="264.9" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.03%)</title><rect x="264.9" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="264.9" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.9" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="264.9" y="307.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="267.9" y="318.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="264.9" y="291.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="267.9" y="302.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="264.9" y="275.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="267.9" y="286.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="264.9" y="259.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="267.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.03%)</title><rect x="265.3" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.03%)</title><rect x="265.3" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.03%)</title><rect x="265.3" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.03%)</title><rect x="265.3" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.03%)</title><rect x="265.3" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="265.3" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.03%)</title><rect x="265.3" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.3" y="318.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="265.3" y="291.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="268.3" y="302.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.03%)</title><rect x="265.3" y="275.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="268.3" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="265.3" y="259.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="268.3" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="265.3" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="268.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (35 samples, 1.15%)</title><rect x="265.7" y="835.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="265.7" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="265.7" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (34 samples, 1.12%)</title><rect x="266.0" y="819.0" width="13.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.07%)</title><rect x="266.0" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.0" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="266.0" y="787.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="269.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$192/1238073191.apply (1 samples, 0.03%)</title><rect x="266.4" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$192/1238073191.apply (32 samples, 1.05%)</title><rect x="266.8" y="803.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.03%)</title><rect x="266.8" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (31 samples, 1.02%)</title><rect x="267.2" y="787.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (31 samples, 1.02%)</title><rect x="267.2" y="771.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.2" y="782.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="267.2" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1400327321.apply (30 samples, 0.99%)</title><rect x="267.6" y="755.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (30 samples, 0.99%)</title><rect x="267.6" y="739.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.10%)</title><rect x="267.6" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.07%)</title><rect x="268.0" y="707.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="268.4" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForLog (1 samples, 0.03%)</title><rect x="268.8" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.requests (1 samples, 0.03%)</title><rect x="268.8" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.8" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="268.8" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="271.8" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="268.8" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="271.8" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="268.8" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="271.8" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="268.8" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="271.8" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="268.8" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="271.8" y="638.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="268.8" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="271.8" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="268.8" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="271.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (26 samples, 0.86%)</title><rect x="269.2" y="723.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (17 samples, 0.56%)</title><rect x="269.2" y="707.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (17 samples, 0.56%)</title><rect x="269.2" y="691.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (17 samples, 0.56%)</title><rect x="269.2" y="675.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$202/1500652670.accept (3 samples, 0.10%)</title><rect x="269.5" y="659.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (3 samples, 0.10%)</title><rect x="269.5" y="643.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (3 samples, 0.10%)</title><rect x="269.5" y="627.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.10%)</title><rect x="269.5" y="611.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.10%)</title><rect x="269.5" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$204/1682365891.accept (10 samples, 0.33%)</title><rect x="270.7" y="659.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (10 samples, 0.33%)</title><rect x="270.7" y="643.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (10 samples, 0.33%)</title><rect x="270.7" y="627.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (10 samples, 0.33%)</title><rect x="270.7" y="611.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (10 samples, 0.33%)</title><rect x="270.7" y="595.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.33%)</title><rect x="270.7" y="579.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.33%)</title><rect x="270.7" y="563.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.33%)</title><rect x="270.7" y="547.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.33%)</title><rect x="270.7" y="531.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (9 samples, 0.30%)</title><rect x="270.7" y="515.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (2 samples, 0.07%)</title><rect x="270.7" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.07%)</title><rect x="271.5" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.07%)</title><rect x="271.5" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.07%)</title><rect x="271.5" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.07%)</title><rect x="271.5" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.16%)</title><rect x="272.3" y="499.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.16%)</title><rect x="272.3" y="483.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.16%)</title><rect x="272.3" y="467.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.16%)</title><rect x="272.3" y="451.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.16%)</title><rect x="272.3" y="435.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="275.3" y="446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="273.8" y="419.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="276.8" y="430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="273.8" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="276.8" y="414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="273.8" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="274.2" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.10%)</title><rect x="274.6" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.10%)</title><rect x="274.6" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.6" y="654.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="274.6" y="627.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="277.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$204/1682365891.accept (1 samples, 0.03%)</title><rect x="275.4" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (9 samples, 0.30%)</title><rect x="275.8" y="707.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (9 samples, 0.30%)</title><rect x="275.8" y="691.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (4 samples, 0.13%)</title><rect x="275.8" y="675.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (2 samples, 0.07%)</title><rect x="275.8" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (2 samples, 0.07%)</title><rect x="275.8" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.07%)</title><rect x="275.8" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.07%)</title><rect x="275.8" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.07%)</title><rect x="275.8" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.07%)</title><rect x="275.8" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (2 samples, 0.07%)</title><rect x="276.5" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.03%)</title><rect x="276.5" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (1 samples, 0.03%)</title><rect x="276.5" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.03%)</title><rect x="276.5" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.03%)</title><rect x="276.9" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.&lt;init&gt; (1 samples, 0.03%)</title><rect x="276.9" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.03%)</title><rect x="276.9" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (5 samples, 0.16%)</title><rect x="277.3" y="675.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.13%)</title><rect x="277.3" y="659.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.13%)</title><rect x="277.3" y="643.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.13%)</title><rect x="277.3" y="627.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="280.3" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.13%)</title><rect x="277.3" y="611.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="278.9" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.07%)</title><rect x="279.3" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.16%)</title><rect x="280.0" y="835.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.16%)</title><rect x="280.0" y="819.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.16%)</title><rect x="280.0" y="803.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (5 samples, 0.16%)</title><rect x="280.0" y="787.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.07%)</title><rect x="280.0" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.07%)</title><rect x="280.0" y="755.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.07%)</title><rect x="280.0" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.0" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (2 samples, 0.07%)</title><rect x="280.0" y="723.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.0" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (2 samples, 0.07%)</title><rect x="280.0" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.0" y="718.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (2 samples, 0.07%)</title><rect x="280.0" y="691.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="283.0" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="280.0" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="283.0" y="686.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="280.0" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="283.0" y="670.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="280.0" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.0" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="280.0" y="627.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="283.0" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="280.0" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.0" y="622.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="280.0" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="283.0" y="606.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="280.0" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="283.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="280.0" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="283.0" y="574.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="280.4" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="283.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.start (3 samples, 0.10%)</title><rect x="280.8" y="771.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (3 samples, 0.10%)</title><rect x="280.8" y="755.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.8" y="766.0"></text>
</g>
<g>
<title>JVM_StartThread (3 samples, 0.10%)</title><rect x="280.8" y="739.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="283.8" y="750.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (1 samples, 0.03%)</title><rect x="280.8" y="723.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="283.8" y="734.0"></text>
</g>
<g>
<title>Thread::Thread() (1 samples, 0.03%)</title><rect x="280.8" y="707.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="283.8" y="718.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (1 samples, 0.03%)</title><rect x="280.8" y="691.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="283.8" y="702.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (1 samples, 0.03%)</title><rect x="281.2" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="284.2" y="734.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (1 samples, 0.03%)</title><rect x="281.2" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="284.2" y="718.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.03%)</title><rect x="281.2" y="691.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="284.2" y="702.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (1 samples, 0.03%)</title><rect x="281.6" y="723.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="284.6" y="734.0"></text>
</g>
<g>
<title>__clone (1 samples, 0.03%)</title><rect x="281.6" y="707.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="284.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="281.6" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="284.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="281.6" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="284.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_clone (1 samples, 0.03%)</title><rect x="281.6" y="659.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.6" y="670.0"></text>
</g>
<g>
<title>_do_fork (1 samples, 0.03%)</title><rect x="281.6" y="643.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="284.6" y="654.0"></text>
</g>
<g>
<title>copy_process.part.34 (1 samples, 0.03%)</title><rect x="281.6" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="284.6" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="281.6" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="284.6" y="622.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="281.6" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="284.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="282.0" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="282.0" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="282.0" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="282.0" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="282.0" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.0" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="282.0" y="787.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="285.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (2 samples, 0.07%)</title><rect x="282.4" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.03%)</title><rect x="282.8" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.03%)</title><rect x="282.8" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="283.1" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="283.1" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="283.1" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="283.1" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="283.1" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="283.1" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$207/693312092.run (1 samples, 0.03%)</title><rect x="283.1" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (3 samples, 0.10%)</title><rect x="283.5" y="915.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.10%)</title><rect x="283.5" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.10%)</title><rect x="283.5" y="883.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (223 samples, 7.34%)</title><rect x="284.7" y="915.0" width="86.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.7" y="926.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (223 samples, 7.34%)</title><rect x="284.7" y="899.0" width="86.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="287.7" y="910.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (223 samples, 7.34%)</title><rect x="284.7" y="883.0" width="86.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.7" y="894.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (222 samples, 7.31%)</title><rect x="285.1" y="867.0" width="86.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.1" y="878.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$206/1836344170.run (3 samples, 0.10%)</title><rect x="285.5" y="851.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.10%)</title><rect x="285.5" y="835.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.07%)</title><rect x="285.9" y="819.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.03%)</title><rect x="286.3" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="286.3" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (218 samples, 7.18%)</title><rect x="286.6" y="851.0" width="84.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.6" y="862.0">jdk/intern..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (211 samples, 6.95%)</title><rect x="286.6" y="835.0" width="82.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.6" y="846.0">java/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (211 samples, 6.95%)</title><rect x="286.6" y="819.0" width="82.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.6" y="830.0">sun/nio/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.10%)</title><rect x="286.6" y="803.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.10%)</title><rect x="286.6" y="787.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.10%)</title><rect x="286.6" y="771.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.10%)</title><rect x="286.6" y="755.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (208 samples, 6.85%)</title><rect x="287.8" y="803.0" width="80.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.8" y="814.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (207 samples, 6.82%)</title><rect x="288.2" y="787.0" width="80.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.2" y="798.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.10%)</title><rect x="288.2" y="771.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.2" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.10%)</title><rect x="288.2" y="755.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (3 samples, 0.10%)</title><rect x="288.2" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (204 samples, 6.72%)</title><rect x="289.4" y="771.0" width="79.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.4" y="782.0">sun/nio/c..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="291.7" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="294.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (196 samples, 6.45%)</title><rect x="292.1" y="755.0" width="76.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.1" y="766.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.07%)</title><rect x="292.9" y="739.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="295.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (189 samples, 6.22%)</title><rect x="293.6" y="739.0" width="73.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="296.6" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (189 samples, 6.22%)</title><rect x="293.6" y="723.0" width="73.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="296.6" y="734.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (189 samples, 6.22%)</title><rect x="293.6" y="707.0" width="73.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="296.6" y="718.0">__GI___w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (186 samples, 6.12%)</title><rect x="294.8" y="691.0" width="72.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="297.8" y="702.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (186 samples, 6.12%)</title><rect x="294.8" y="675.0" width="72.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="297.8" y="686.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_writev (178 samples, 5.86%)</title><rect x="297.9" y="659.0" width="69.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="300.9" y="670.0">__x64_s..</text>
</g>
<g>
<title>do_writev (178 samples, 5.86%)</title><rect x="297.9" y="643.0" width="69.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="300.9" y="654.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="297.9" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="300.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="297.9" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="300.9" y="622.0"></text>
</g>
<g>
<title>vfs_writev (177 samples, 5.83%)</title><rect x="298.3" y="627.0" width="68.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="301.3" y="638.0">vfs_wri..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="298.3" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="301.3" y="622.0"></text>
</g>
<g>
<title>do_iter_write (175 samples, 5.76%)</title><rect x="298.7" y="611.0" width="68.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="301.7" y="622.0">do_iter..</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.13%)</title><rect x="299.1" y="595.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="302.1" y="606.0"></text>
</g>
<g>
<title>do_iter_readv_writev (167 samples, 5.50%)</title><rect x="300.6" y="595.0" width="64.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="303.6" y="606.0">do_iter..</text>
</g>
<g>
<title>sock_write_iter (166 samples, 5.47%)</title><rect x="301.0" y="579.0" width="64.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="304.0" y="590.0">sock_wr..</text>
</g>
<g>
<title>sock_sendmsg (163 samples, 5.37%)</title><rect x="302.2" y="563.0" width="63.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.2" y="574.0">sock_se..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="302.2" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="305.2" y="558.0"></text>
</g>
<g>
<title>inet_sendmsg (159 samples, 5.24%)</title><rect x="302.6" y="547.0" width="61.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="305.6" y="558.0">inet_s..</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="302.6" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="305.6" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (158 samples, 5.20%)</title><rect x="303.0" y="531.0" width="61.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="306.0" y="542.0">tcp_se..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="303.0" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="306.0" y="526.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.07%)</title><rect x="303.3" y="515.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="306.3" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="303.7" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="306.7" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="304.1" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="307.1" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (154 samples, 5.07%)</title><rect x="304.5" y="515.0" width="59.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="307.5" y="526.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="307.6" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="310.6" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="307.6" y="483.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="310.6" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="308.0" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="311.0" y="510.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="308.4" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.4" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.23%)</title><rect x="308.8" y="499.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="311.8" y="510.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.13%)</title><rect x="308.8" y="483.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="311.8" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.07%)</title><rect x="309.6" y="467.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="312.6" y="478.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.10%)</title><rect x="310.3" y="483.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="313.3" y="494.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="311.5" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="314.5" y="510.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="311.9" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.9" y="510.0"></text>
</g>
<g>
<title>tcp_push (130 samples, 4.28%)</title><rect x="312.3" y="499.0" width="50.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="315.3" y="510.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (129 samples, 4.25%)</title><rect x="312.7" y="483.0" width="50.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="315.7" y="494.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (128 samples, 4.21%)</title><rect x="313.1" y="467.0" width="49.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="316.1" y="478.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (110 samples, 3.62%)</title><rect x="313.8" y="451.0" width="42.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="316.8" y="462.0">__tc..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="318.1" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="321.1" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (97 samples, 3.19%)</title><rect x="318.5" y="435.0" width="37.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.5" y="446.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (97 samples, 3.19%)</title><rect x="318.5" y="419.0" width="37.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="321.5" y="430.0">__i..</text>
</g>
<g>
<title>ip_local_out (96 samples, 3.16%)</title><rect x="318.5" y="403.0" width="37.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.5" y="414.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="318.5" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="321.5" y="398.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="318.5" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="321.5" y="382.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="318.9" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.9" y="398.0"></text>
</g>
<g>
<title>ip_output (94 samples, 3.10%)</title><rect x="319.3" y="387.0" width="36.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="322.3" y="398.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="319.3" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="322.3" y="382.0"></text>
</g>
<g>
<title>ip_finish_output (93 samples, 3.06%)</title><rect x="319.7" y="371.0" width="36.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="322.7" y="382.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="319.7" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="322.7" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.03%)</title><rect x="320.1" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="323.1" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (91 samples, 3.00%)</title><rect x="320.4" y="355.0" width="35.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="323.4" y="366.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (78 samples, 2.57%)</title><rect x="322.0" y="339.0" width="30.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="325.0" y="350.0">__..</text>
</g>
<g>
<title>do_softirq.part.21 (78 samples, 2.57%)</title><rect x="322.0" y="323.0" width="30.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="325.0" y="334.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (77 samples, 2.54%)</title><rect x="322.4" y="307.0" width="29.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="325.4" y="318.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (77 samples, 2.54%)</title><rect x="322.4" y="291.0" width="29.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="325.4" y="302.0">__..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="322.8" y="275.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="325.8" y="286.0"></text>
</g>
<g>
<title>net_rx_action (74 samples, 2.44%)</title><rect x="323.2" y="275.0" width="28.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.2" y="286.0">ne..</text>
</g>
<g>
<title>process_backlog (73 samples, 2.40%)</title><rect x="323.6" y="259.0" width="28.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="326.6" y="270.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (72 samples, 2.37%)</title><rect x="323.9" y="243.0" width="28.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="326.9" y="254.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (72 samples, 2.37%)</title><rect x="323.9" y="227.0" width="28.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="326.9" y="238.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.16%)</title><rect x="324.7" y="211.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv (64 samples, 2.11%)</title><rect x="326.7" y="211.0" width="24.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="329.7" y="222.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.03%)</title><rect x="326.7" y="195.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.7" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish (63 samples, 2.07%)</title><rect x="327.0" y="195.0" width="24.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="330.0" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver (63 samples, 2.07%)</title><rect x="327.0" y="179.0" width="24.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="330.0" y="190.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (63 samples, 2.07%)</title><rect x="327.0" y="163.0" width="24.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="330.0" y="174.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (63 samples, 2.07%)</title><rect x="327.0" y="147.0" width="24.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="330.0" y="158.0">i..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="327.4" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (61 samples, 2.01%)</title><rect x="327.8" y="131.0" width="23.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="330.8" y="142.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.13%)</title><rect x="328.2" y="115.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="331.2" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="329.4" y="99.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.4" y="110.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="329.8" y="115.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="332.8" y="126.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="330.2" y="115.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.2" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="330.5" y="115.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.5" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="330.5" y="99.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="333.5" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="330.9" y="115.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="333.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (52 samples, 1.71%)</title><rect x="331.3" y="115.0" width="20.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="334.3" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (52 samples, 1.71%)</title><rect x="331.3" y="99.0" width="20.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="334.3" y="110.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.10%)</title><rect x="332.5" y="83.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="335.5" y="94.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.10%)</title><rect x="332.5" y="67.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="335.5" y="78.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="333.3" y="51.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="336.3" y="62.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="333.3" y="35.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="336.3" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (45 samples, 1.48%)</title><rect x="333.7" y="83.0" width="17.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="336.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="334.4" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="337.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_sync_key (42 samples, 1.38%)</title><rect x="334.8" y="67.0" width="16.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="337.8" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (41 samples, 1.35%)</title><rect x="334.8" y="51.0" width="16.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="337.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (40 samples, 1.32%)</title><rect x="335.2" y="35.0" width="15.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="338.2" y="46.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="350.8" y="51.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.8" y="62.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="351.1" y="83.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="354.1" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="351.1" y="67.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="354.1" y="78.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="351.1" y="51.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="354.1" y="62.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.03%)</title><rect x="351.5" y="211.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.5" y="222.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="351.9" y="275.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="354.9" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.30%)</title><rect x="352.3" y="339.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="355.3" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.26%)</title><rect x="352.3" y="323.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.3" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.13%)</title><rect x="353.5" y="307.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.5" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.10%)</title><rect x="353.5" y="291.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="356.5" y="302.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.07%)</title><rect x="353.5" y="275.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="356.5" y="286.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="354.2" y="275.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="357.2" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="354.2" y="259.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="357.2" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="354.2" y="243.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="357.2" y="254.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="354.6" y="291.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="357.6" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="355.0" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="358.0" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="355.4" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="358.4" y="334.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="355.8" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="358.8" y="414.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="356.2" y="435.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="359.2" y="446.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="356.2" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="359.2" y="430.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="356.2" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="359.2" y="414.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="356.6" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="359.6" y="462.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="357.0" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.0" y="462.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="357.4" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="360.4" y="462.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="357.7" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="360.7" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.16%)</title><rect x="358.1" y="451.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="361.1" y="462.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="358.5" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="361.5" y="446.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="358.5" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="361.5" y="430.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.10%)</title><rect x="358.9" y="435.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="361.9" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="358.9" y="419.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="361.9" y="430.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.07%)</title><rect x="359.3" y="403.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="362.3" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="359.3" y="387.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="362.3" y="398.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="360.1" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="363.1" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.07%)</title><rect x="360.5" y="451.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="363.5" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="360.9" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="363.9" y="446.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="360.9" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="363.9" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="360.9" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="363.9" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="360.9" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="363.9" y="398.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="360.9" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="363.9" y="382.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="360.9" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="363.9" y="366.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.03%)</title><rect x="360.9" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="363.9" y="350.0"></text>
</g>
<g>
<title>tcp_write_timer_handler (1 samples, 0.03%)</title><rect x="360.9" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="363.9" y="334.0"></text>
</g>
<g>
<title>__sk_mem_reclaim (1 samples, 0.03%)</title><rect x="360.9" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="363.9" y="318.0"></text>
</g>
<g>
<title>__sk_mem_reduce_allocated (1 samples, 0.03%)</title><rect x="360.9" y="291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="363.9" y="302.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.07%)</title><rect x="361.2" y="451.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="364.2" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="361.2" y="435.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="364.2" y="446.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="361.6" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="364.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="361.6" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="364.6" y="414.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="361.6" y="387.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="364.6" y="398.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="361.6" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.6" y="382.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="361.6" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="364.6" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="361.6" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.6" y="350.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="361.6" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.6" y="334.0"></text>
</g>
<g>
<title>delayed_put_pid (1 samples, 0.03%)</title><rect x="361.6" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="364.6" y="318.0"></text>
</g>
<g>
<title>put_pid (1 samples, 0.03%)</title><rect x="361.6" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="364.6" y="302.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="361.6" y="275.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="364.6" y="286.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="362.0" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="365.0" y="462.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="362.4" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="365.4" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.13%)</title><rect x="362.8" y="499.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="365.8" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.13%)</title><rect x="362.8" y="483.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.8" y="494.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="363.6" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.6" y="478.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="364.0" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="367.0" y="478.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.07%)</title><rect x="364.3" y="547.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="367.3" y="558.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.07%)</title><rect x="364.3" y="531.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="367.3" y="542.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.07%)</title><rect x="364.3" y="515.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="367.3" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="365.1" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="368.1" y="558.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="365.5" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="368.5" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="365.9" y="595.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="368.9" y="606.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.07%)</title><rect x="365.9" y="579.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="368.9" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="365.9" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="368.9" y="574.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="365.9" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="368.9" y="558.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="366.3" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.3" y="574.0"></text>
</g>
<g>
<title>import_iovec (1 samples, 0.03%)</title><rect x="366.7" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="369.7" y="622.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (1 samples, 0.03%)</title><rect x="366.7" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="369.7" y="606.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="366.7" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="369.7" y="590.0"></text>
</g>
<g>
<title>__GI___writev (1 samples, 0.03%)</title><rect x="367.1" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="370.1" y="750.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.07%)</title><rect x="367.5" y="739.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="370.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="368.2" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="371.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="368.2" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="371.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="368.2" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="371.2" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.23%)</title><rect x="368.6" y="835.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.6" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (2 samples, 0.07%)</title><rect x="370.6" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="371.3" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (781 samples, 25.72%)</title><rect x="371.7" y="1091.0" width="303.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.7" y="1102.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (781 samples, 25.72%)</title><rect x="371.7" y="1075.0" width="303.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.7" y="1086.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="371.7" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="371.7" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (172 samples, 5.66%)</title><rect x="372.1" y="1059.0" width="66.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.1" y="1070.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (171 samples, 5.63%)</title><rect x="372.5" y="1043.0" width="66.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.5" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (171 samples, 5.63%)</title><rect x="372.5" y="1027.0" width="66.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.5" y="1038.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.03%)</title><rect x="372.5" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="372.5" y="995.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (3 samples, 0.10%)</title><rect x="372.9" y="1011.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (43 samples, 1.42%)</title><rect x="374.1" y="1011.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (43 samples, 1.42%)</title><rect x="374.1" y="995.0" width="16.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (43 samples, 1.42%)</title><rect x="374.1" y="979.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (43 samples, 1.42%)</title><rect x="374.1" y="963.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (41 samples, 1.35%)</title><rect x="374.1" y="947.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="377.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (41 samples, 1.35%)</title><rect x="374.1" y="931.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (41 samples, 1.35%)</title><rect x="374.1" y="915.0" width="15.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (38 samples, 1.25%)</title><rect x="375.2" y="899.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (36 samples, 1.19%)</title><rect x="376.0" y="883.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.0" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="376.0" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="379.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="376.0" y="851.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="379.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (35 samples, 1.15%)</title><rect x="376.4" y="867.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (35 samples, 1.15%)</title><rect x="376.4" y="851.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.12%)</title><rect x="376.4" y="835.0" width="13.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="379.4" y="846.0"></text>
</g>
<g>
<title>__GI_write (34 samples, 1.12%)</title><rect x="376.4" y="819.0" width="13.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="379.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 1.12%)</title><rect x="376.4" y="803.0" width="13.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="379.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 1.12%)</title><rect x="376.4" y="787.0" width="13.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_write (28 samples, 0.92%)</title><rect x="378.7" y="771.0" width="10.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="381.7" y="782.0"></text>
</g>
<g>
<title>ksys_write (28 samples, 0.92%)</title><rect x="378.7" y="755.0" width="10.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="381.7" y="766.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="378.7" y="739.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="381.7" y="750.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="378.7" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="381.7" y="734.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="378.7" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="381.7" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="378.7" y="691.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="381.7" y="702.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="378.7" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="381.7" y="686.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="378.7" y="659.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="381.7" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="378.7" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="381.7" y="654.0"></text>
</g>
<g>
<title>vfs_write (27 samples, 0.89%)</title><rect x="379.1" y="739.0" width="10.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="382.1" y="750.0"></text>
</g>
<g>
<title>__vfs_write (25 samples, 0.82%)</title><rect x="379.5" y="723.0" width="9.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.5" y="734.0"></text>
</g>
<g>
<title>new_sync_write (25 samples, 0.82%)</title><rect x="379.5" y="707.0" width="9.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="382.5" y="718.0"></text>
</g>
<g>
<title>pipe_write (25 samples, 0.82%)</title><rect x="379.5" y="691.0" width="9.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="382.5" y="702.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 0.66%)</title><rect x="380.7" y="675.0" width="7.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="383.7" y="686.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.66%)</title><rect x="380.7" y="659.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.7" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.66%)</title><rect x="380.7" y="643.0" width="7.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="383.7" y="654.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="388.4" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="391.4" y="686.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.03%)</title><rect x="388.8" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="391.8" y="686.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.03%)</title><rect x="388.8" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="391.8" y="670.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="389.2" y="723.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="392.2" y="734.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.03%)</title><rect x="389.6" y="835.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="392.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.03%)</title><rect x="390.0" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.0" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="390.0" y="931.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="393.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.03%)</title><rect x="390.4" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="390.8" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="390.8" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="390.8" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="390.8" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="390.8" y="947.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="390.8" y="931.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="393.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="390.8" y="915.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (123 samples, 4.05%)</title><rect x="391.2" y="1011.0" width="47.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.2" y="1022.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (123 samples, 4.05%)</title><rect x="391.2" y="995.0" width="47.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.2" y="1006.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (123 samples, 4.05%)</title><rect x="391.2" y="979.0" width="47.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.2" y="990.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (123 samples, 4.05%)</title><rect x="391.2" y="963.0" width="47.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.2" y="974.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (76 samples, 2.50%)</title><rect x="391.5" y="947.0" width="29.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.5" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (76 samples, 2.50%)</title><rect x="391.5" y="931.0" width="29.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.5" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (76 samples, 2.50%)</title><rect x="391.5" y="915.0" width="29.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.5" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (75 samples, 2.47%)</title><rect x="391.9" y="899.0" width="29.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.9" y="910.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (75 samples, 2.47%)</title><rect x="391.9" y="883.0" width="29.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.9" y="894.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (73 samples, 2.40%)</title><rect x="391.9" y="867.0" width="28.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.9" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (73 samples, 2.40%)</title><rect x="391.9" y="851.0" width="28.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.9" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.13%)</title><rect x="391.9" y="835.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (4 samples, 0.13%)</title><rect x="391.9" y="819.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (4 samples, 0.13%)</title><rect x="391.9" y="803.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (4 samples, 0.13%)</title><rect x="391.9" y="787.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (4 samples, 0.13%)</title><rect x="391.9" y="771.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="394.9" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (2 samples, 0.07%)</title><rect x="392.7" y="755.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.7" y="766.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (2 samples, 0.07%)</title><rect x="392.7" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.03%)</title><rect x="392.7" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="393.1" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (64 samples, 2.11%)</title><rect x="393.5" y="835.0" width="24.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.5" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 2.11%)</title><rect x="393.5" y="819.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.5" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (49 samples, 1.61%)</title><rect x="393.5" y="803.0" width="19.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="393.9" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.9" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="393.9" y="771.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="396.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/704105605.apply (36 samples, 1.19%)</title><rect x="394.3" y="787.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (36 samples, 1.19%)</title><rect x="394.3" y="771.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.03%)</title><rect x="394.3" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="394.3" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (35 samples, 1.15%)</title><rect x="394.7" y="755.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (35 samples, 1.15%)</title><rect x="394.7" y="739.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (35 samples, 1.15%)</title><rect x="394.7" y="723.0" width="13.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (13 samples, 0.43%)</title><rect x="395.4" y="707.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.4" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="395.4" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.4" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="395.4" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="395.4" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="395.4" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="395.4" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (12 samples, 0.40%)</title><rect x="395.8" y="691.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.40%)</title><rect x="395.8" y="675.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (12 samples, 0.40%)</title><rect x="395.8" y="659.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.26%)</title><rect x="397.0" y="643.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.16%)</title><rect x="397.4" y="627.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="397.4" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.03%)</title><rect x="397.4" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$187/1350857380.test (1 samples, 0.03%)</title><rect x="397.4" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (1 samples, 0.03%)</title><rect x="397.4" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.13%)</title><rect x="397.8" y="611.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.13%)</title><rect x="397.8" y="595.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.8" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.07%)</title><rect x="398.5" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (2 samples, 0.07%)</title><rect x="398.5" y="563.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$212/595921453.applyAsLong (2 samples, 0.07%)</title><rect x="398.5" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.07%)</title><rect x="398.5" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.07%)</title><rect x="398.5" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.07%)</title><rect x="398.5" y="499.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.07%)</title><rect x="398.5" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="401.5" y="494.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="398.9" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.07%)</title><rect x="399.3" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.03%)</title><rect x="400.1" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.03%)</title><rect x="400.1" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.1" y="638.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.03%)</title><rect x="400.1" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.1" y="622.0"></text>
</g>
<g>
<title>java/util/OptionalLong.&lt;init&gt; (1 samples, 0.03%)</title><rect x="400.1" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="400.1" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.66%)</title><rect x="400.5" y="707.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/611985749.run (20 samples, 0.66%)</title><rect x="400.5" y="691.0" width="7.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="403.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (20 samples, 0.66%)</title><rect x="400.5" y="675.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (9 samples, 0.30%)</title><rect x="400.5" y="659.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (6 samples, 0.20%)</title><rect x="400.9" y="643.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (6 samples, 0.20%)</title><rect x="400.9" y="627.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.07%)</title><rect x="403.2" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.07%)</title><rect x="403.2" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5 samples, 0.16%)</title><rect x="404.0" y="659.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (5 samples, 0.16%)</title><rect x="404.0" y="643.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.0" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (5 samples, 0.16%)</title><rect x="404.0" y="627.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.0" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (5 samples, 0.16%)</title><rect x="404.0" y="611.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.0" y="622.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (5 samples, 0.16%)</title><rect x="404.0" y="595.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.0" y="606.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.07%)</title><rect x="404.4" y="579.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="407.4" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="404.8" y="563.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="407.8" y="574.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="404.8" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="407.8" y="558.0"></text>
</g>
<g>
<title>JVM_IHashCode@plt (1 samples, 0.03%)</title><rect x="405.1" y="579.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="408.1" y="590.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (1 samples, 0.03%)</title><rect x="405.5" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="408.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (3 samples, 0.10%)</title><rect x="405.9" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (3 samples, 0.10%)</title><rect x="405.9" y="643.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.9" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="406.7" y="627.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="409.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.10%)</title><rect x="407.1" y="659.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$194/381966895.apply (11 samples, 0.36%)</title><rect x="408.3" y="787.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (11 samples, 0.36%)</title><rect x="408.3" y="771.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (9 samples, 0.30%)</title><rect x="408.3" y="755.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (5 samples, 0.16%)</title><rect x="409.8" y="739.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.16%)</title><rect x="409.8" y="723.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.8" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (5 samples, 0.16%)</title><rect x="409.8" y="707.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="412.8" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.07%)</title><rect x="409.8" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.8" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.10%)</title><rect x="410.6" y="691.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.07%)</title><rect x="411.0" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="414.0" y="686.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.03%)</title><rect x="411.4" y="659.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="414.4" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="411.4" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="414.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.07%)</title><rect x="411.8" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.07%)</title><rect x="411.8" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.07%)</title><rect x="411.8" y="723.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (13 samples, 0.43%)</title><rect x="412.5" y="803.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.43%)</title><rect x="412.5" y="787.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.10%)</title><rect x="412.5" y="771.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.5" y="782.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="412.5" y="755.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="415.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$196/1579352741.apply (10 samples, 0.33%)</title><rect x="413.7" y="771.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (10 samples, 0.33%)</title><rect x="413.7" y="755.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (8 samples, 0.26%)</title><rect x="413.7" y="739.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (8 samples, 0.26%)</title><rect x="413.7" y="723.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (7 samples, 0.23%)</title><rect x="414.1" y="707.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.1" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (4 samples, 0.13%)</title><rect x="415.2" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (3 samples, 0.10%)</title><rect x="415.2" y="675.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.03%)</title><rect x="416.0" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.rightOf (1 samples, 0.03%)</title><rect x="416.0" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="416.4" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.07%)</title><rect x="416.8" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="417.2" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="417.2" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.2" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.03%)</title><rect x="417.2" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.07%)</title><rect x="417.6" y="803.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (2 samples, 0.07%)</title><rect x="417.6" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.07%)</title><rect x="417.6" y="771.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.07%)</title><rect x="417.6" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$209/1821490069.apply (5 samples, 0.16%)</title><rect x="418.4" y="835.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="421.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.16%)</title><rect x="418.4" y="819.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.07%)</title><rect x="418.4" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.10%)</title><rect x="419.1" y="803.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="419.1" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="419.1" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="419.1" y="755.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="419.9" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.07%)</title><rect x="420.3" y="867.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.07%)</title><rect x="420.3" y="851.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.07%)</title><rect x="420.3" y="835.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.07%)</title><rect x="420.3" y="819.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="423.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.07%)</title><rect x="420.3" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="423.3" y="814.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="420.3" y="787.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="423.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="421.1" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (43 samples, 1.42%)</title><rect x="421.5" y="947.0" width="16.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (6 samples, 0.20%)</title><rect x="421.9" y="931.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="424.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.16%)</title><rect x="422.2" y="915.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.2" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.16%)</title><rect x="422.2" y="899.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.03%)</title><rect x="424.2" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4 samples, 0.13%)</title><rect x="424.6" y="931.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.13%)</title><rect x="424.6" y="915.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.13%)</title><rect x="424.6" y="899.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="427.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (13 samples, 0.43%)</title><rect x="426.1" y="931.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.1" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13 samples, 0.43%)</title><rect x="426.1" y="915.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.1" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.43%)</title><rect x="426.1" y="899.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.1" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="426.9" y="883.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="429.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (10 samples, 0.33%)</title><rect x="427.3" y="883.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.3" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (8 samples, 0.26%)</title><rect x="428.1" y="867.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.1" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.26%)</title><rect x="428.1" y="851.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="428.1" y="835.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.16%)</title><rect x="428.5" y="835.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.5" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (2 samples, 0.07%)</title><rect x="429.6" y="819.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.6" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.07%)</title><rect x="429.6" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.07%)</title><rect x="429.6" y="787.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.07%)</title><rect x="429.6" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="430.0" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="430.0" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.0" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.07%)</title><rect x="430.4" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="430.8" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="430.8" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="430.8" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (18 samples, 0.59%)</title><rect x="431.2" y="931.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (14 samples, 0.46%)</title><rect x="432.3" y="915.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8 samples, 0.26%)</title><rect x="432.7" y="899.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.7" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="434.7" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.7" y="894.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="435.1" y="883.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="438.1" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="435.5" y="883.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="438.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="435.8" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="435.8" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="436.2" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.2" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.10%)</title><rect x="436.6" y="899.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="439.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="436.6" y="883.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="436.6" y="867.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.07%)</title><rect x="436.6" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.03%)</title><rect x="437.4" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.4" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="437.8" y="915.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="440.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$173/449866345.accept (1 samples, 0.03%)</title><rect x="438.2" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="438.2" y="931.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.2" y="942.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="438.6" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.6" y="958.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="438.6" y="931.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="441.6" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="438.6" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="441.6" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="438.6" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="441.6" y="910.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.03%)</title><rect x="438.6" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="441.6" y="894.0"></text>
</g>
<g>
<title>scsi_softirq_done (1 samples, 0.03%)</title><rect x="438.6" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="441.6" y="878.0"></text>
</g>
<g>
<title>scsi_finish_command (1 samples, 0.03%)</title><rect x="438.6" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="441.6" y="862.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.03%)</title><rect x="438.6" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.6" y="846.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.03%)</title><rect x="438.6" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.6" y="830.0"></text>
</g>
<g>
<title>__blk_mq_end_request (1 samples, 0.03%)</title><rect x="438.6" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.6" y="814.0"></text>
</g>
<g>
<title>blk_account_io_done (1 samples, 0.03%)</title><rect x="438.6" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (608 samples, 20.02%)</title><rect x="438.9" y="1059.0" width="236.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.9" y="1070.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (607 samples, 19.99%)</title><rect x="439.3" y="1043.0" width="235.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.3" y="1054.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (606 samples, 19.95%)</title><rect x="439.3" y="1027.0" width="235.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.3" y="1038.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (606 samples, 19.95%)</title><rect x="439.3" y="1011.0" width="235.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.3" y="1022.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (606 samples, 19.95%)</title><rect x="439.3" y="995.0" width="235.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.3" y="1006.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (604 samples, 19.89%)</title><rect x="439.3" y="979.0" width="234.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="442.3" y="990.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (603 samples, 19.86%)</title><rect x="439.3" y="963.0" width="234.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.3" y="974.0">jdk/internal/net/http/Http1Resp..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (603 samples, 19.86%)</title><rect x="439.3" y="947.0" width="234.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.3" y="958.0">jdk/internal/net/http/ResponseC..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/1882091062.run (86 samples, 2.83%)</title><rect x="439.3" y="931.0" width="33.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.3" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (86 samples, 2.83%)</title><rect x="439.3" y="915.0" width="33.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.3" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (86 samples, 2.83%)</title><rect x="439.3" y="899.0" width="33.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.3" y="910.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.10%)</title><rect x="439.3" y="883.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.3" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.07%)</title><rect x="439.3" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.3" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.07%)</title><rect x="439.3" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.3" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.07%)</title><rect x="439.3" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.3" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.07%)</title><rect x="439.3" y="819.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.3" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.07%)</title><rect x="439.3" y="803.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.03%)</title><rect x="440.1" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="440.1" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.03%)</title><rect x="440.1" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="440.1" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="440.1" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="440.1" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="443.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.03%)</title><rect x="440.1" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$187/1350857380.test (1 samples, 0.03%)</title><rect x="440.1" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (1 samples, 0.03%)</title><rect x="440.1" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (82 samples, 2.70%)</title><rect x="440.5" y="883.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.5" y="894.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.07%)</title><rect x="440.5" y="867.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.5" y="878.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.07%)</title><rect x="440.5" y="851.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.5" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.03%)</title><rect x="440.9" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.9" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.03%)</title><rect x="440.9" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (80 samples, 2.63%)</title><rect x="441.3" y="867.0" width="31.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.3" y="878.0">jd..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="441.3" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="444.3" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="441.3" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="444.3" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="441.3" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="444.3" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="441.3" y="803.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="444.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (32 samples, 1.05%)</title><rect x="441.7" y="851.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="444.7" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.07%)</title><rect x="451.8" y="835.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="454.8" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="451.8" y="819.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="454.8" y="830.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.07%)</title><rect x="451.8" y="803.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="454.8" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.07%)</title><rect x="451.8" y="787.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="454.8" y="798.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="451.8" y="771.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.8" y="782.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="451.8" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="454.8" y="766.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="451.8" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="454.8" y="750.0"></text>
</g>
<g>
<title>free_task (1 samples, 0.03%)</title><rect x="451.8" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="454.8" y="734.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="451.8" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="454.8" y="718.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="451.8" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="454.8" y="702.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="452.2" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="455.2" y="782.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="452.2" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="455.2" y="766.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.03%)</title><rect x="452.2" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="452.2" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="455.2" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1 samples, 0.03%)</title><rect x="452.5" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.5" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.03%)</title><rect x="452.5" y="819.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.5" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.03%)</title><rect x="452.5" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.5" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.03%)</title><rect x="452.5" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="455.5" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.03%)</title><rect x="452.5" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.5" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.07%)</title><rect x="452.9" y="835.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.9" y="846.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="453.7" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="456.7" y="846.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="453.7" y="819.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="456.7" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="453.7" y="803.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.7" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="453.7" y="787.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="456.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.10%)</title><rect x="454.1" y="851.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="454.1" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="454.1" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="454.1" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="457.1" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.03%)</title><rect x="454.5" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.5" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.03%)</title><rect x="454.5" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (1 samples, 0.03%)</title><rect x="454.9" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (1 samples, 0.03%)</title><rect x="454.9" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (44 samples, 1.45%)</title><rect x="455.3" y="851.0" width="17.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="458.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (43 samples, 1.42%)</title><rect x="455.7" y="835.0" width="16.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2 samples, 0.07%)</title><rect x="455.7" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.07%)</title><rect x="455.7" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.07%)</title><rect x="455.7" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.07%)</title><rect x="455.7" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.07%)</title><rect x="455.7" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.7" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="455.7" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="455.7" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.7" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="455.7" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.7" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="455.7" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="458.7" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.03%)</title><rect x="455.7" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="456.0" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (41 samples, 1.35%)</title><rect x="456.4" y="819.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (41 samples, 1.35%)</title><rect x="456.4" y="803.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.4" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="456.8" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="459.8" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="456.8" y="771.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="459.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (39 samples, 1.28%)</title><rect x="457.2" y="787.0" width="15.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (39 samples, 1.28%)</title><rect x="457.2" y="771.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (39 samples, 1.28%)</title><rect x="457.2" y="755.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (39 samples, 1.28%)</title><rect x="457.2" y="739.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (38 samples, 1.25%)</title><rect x="457.6" y="723.0" width="14.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="460.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.22%)</title><rect x="458.0" y="707.0" width="14.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="461.0" y="718.0"></text>
</g>
<g>
<title>__GI_write (37 samples, 1.22%)</title><rect x="458.0" y="691.0" width="14.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="461.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.22%)</title><rect x="458.0" y="675.0" width="14.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="461.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.22%)</title><rect x="458.0" y="659.0" width="14.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="461.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (30 samples, 0.99%)</title><rect x="460.7" y="643.0" width="11.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="463.7" y="654.0"></text>
</g>
<g>
<title>ksys_write (29 samples, 0.95%)</title><rect x="461.1" y="627.0" width="11.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="464.1" y="638.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="461.5" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.5" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="461.5" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.5" y="606.0"></text>
</g>
<g>
<title>vfs_write (27 samples, 0.89%)</title><rect x="461.9" y="611.0" width="10.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="464.9" y="622.0"></text>
</g>
<g>
<title>__vfs_write (25 samples, 0.82%)</title><rect x="461.9" y="595.0" width="9.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="464.9" y="606.0"></text>
</g>
<g>
<title>new_sync_write (25 samples, 0.82%)</title><rect x="461.9" y="579.0" width="9.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="464.9" y="590.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="461.9" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.9" y="574.0"></text>
</g>
<g>
<title>pipe_write (24 samples, 0.79%)</title><rect x="462.3" y="563.0" width="9.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="465.3" y="574.0"></text>
</g>
<g>
<title>__wake_up_sync_key (18 samples, 0.59%)</title><rect x="464.2" y="547.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="467.2" y="558.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.59%)</title><rect x="464.2" y="531.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="467.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.59%)</title><rect x="464.2" y="515.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="467.2" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="470.8" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="473.8" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="470.8" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="473.8" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="470.8" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="473.8" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="470.8" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="473.8" y="462.0"></text>
</g>
<g>
<title>fasync_free_rcu (1 samples, 0.03%)</title><rect x="470.8" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="473.8" y="446.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.03%)</title><rect x="471.2" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="474.2" y="558.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.03%)</title><rect x="471.2" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="474.2" y="542.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.03%)</title><rect x="471.2" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="474.2" y="526.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="471.6" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="474.6" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="472.0" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="475.0" y="606.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="472.0" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="475.0" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="472.0" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.0" y="574.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="472.0" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.0" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="472.0" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="475.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.03%)</title><rect x="472.4" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.03%)</title><rect x="472.4" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/1584023611.accept (9 samples, 0.30%)</title><rect x="472.8" y="931.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (9 samples, 0.30%)</title><rect x="472.8" y="915.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (9 samples, 0.30%)</title><rect x="472.8" y="899.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.30%)</title><rect x="472.8" y="883.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.30%)</title><rect x="472.8" y="867.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.23%)</title><rect x="473.5" y="851.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.23%)</title><rect x="473.5" y="835.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.16%)</title><rect x="473.9" y="819.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.16%)</title><rect x="473.9" y="803.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.16%)</title><rect x="473.9" y="787.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.16%)</title><rect x="473.9" y="771.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.16%)</title><rect x="473.9" y="755.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.16%)</title><rect x="473.9" y="739.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.16%)</title><rect x="473.9" y="723.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$221/1241568452.accept (3 samples, 0.10%)</title><rect x="473.9" y="707.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$222/334740189.accept (2 samples, 0.07%)</title><rect x="475.1" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$222/334740189.accept (1 samples, 0.03%)</title><rect x="475.9" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (1 samples, 0.03%)</title><rect x="475.9" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (1 samples, 0.03%)</title><rect x="475.9" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.9" y="798.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.03%)</title><rect x="475.9" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.9" y="782.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.03%)</title><rect x="475.9" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (505 samples, 16.63%)</title><rect x="476.2" y="931.0" width="196.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.2" y="942.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (505 samples, 16.63%)</title><rect x="476.2" y="915.0" width="196.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.2" y="926.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (505 samples, 16.63%)</title><rect x="476.2" y="899.0" width="196.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.2" y="910.0">jdk/internal/net/http/Resp..</text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="476.6" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (499 samples, 16.43%)</title><rect x="477.0" y="883.0" width="193.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.0" y="894.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (499 samples, 16.43%)</title><rect x="477.0" y="867.0" width="193.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.0" y="878.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (498 samples, 16.40%)</title><rect x="477.4" y="851.0" width="193.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.4" y="862.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (498 samples, 16.40%)</title><rect x="477.4" y="835.0" width="193.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.4" y="846.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.10%)</title><rect x="477.4" y="819.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.10%)</title><rect x="477.4" y="803.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.10%)</title><rect x="477.4" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.10%)</title><rect x="477.4" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.10%)</title><rect x="477.4" y="755.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.10%)</title><rect x="477.4" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.10%)</title><rect x="477.4" y="723.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$223/1023865256.accept (2 samples, 0.07%)</title><rect x="477.8" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="478.6" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.03%)</title><rect x="478.6" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="478.6" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="478.6" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.03%)</title><rect x="479.0" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$223/1023865256.accept (493 samples, 16.23%)</title><rect x="479.4" y="819.0" width="191.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.4" y="830.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (492 samples, 16.20%)</title><rect x="479.7" y="803.0" width="191.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.7" y="814.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (492 samples, 16.20%)</title><rect x="479.7" y="787.0" width="191.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.7" y="798.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (492 samples, 16.20%)</title><rect x="479.7" y="771.0" width="191.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.7" y="782.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7 samples, 0.23%)</title><rect x="480.1" y="755.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$226/363328708.apply (6 samples, 0.20%)</title><rect x="480.5" y="739.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (6 samples, 0.20%)</title><rect x="480.5" y="723.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.5" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="480.5" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="483.5" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="480.5" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="483.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (5 samples, 0.16%)</title><rect x="480.9" y="707.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.9" y="718.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (5 samples, 0.16%)</title><rect x="480.9" y="691.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.9" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.of (5 samples, 0.16%)</title><rect x="480.9" y="675.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (483 samples, 15.90%)</title><rect x="482.9" y="755.0" width="187.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.9" y="766.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (483 samples, 15.90%)</title><rect x="482.9" y="739.0" width="187.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.9" y="750.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (483 samples, 15.90%)</title><rect x="482.9" y="723.0" width="187.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.9" y="734.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (476 samples, 15.67%)</title><rect x="482.9" y="707.0" width="184.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.9" y="718.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (77 samples, 2.54%)</title><rect x="482.9" y="691.0" width="29.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.9" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="482.9" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="482.9" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (76 samples, 2.50%)</title><rect x="483.2" y="675.0" width="29.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.2" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (76 samples, 2.50%)</title><rect x="483.2" y="659.0" width="29.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.2" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="483.2" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority (2 samples, 0.07%)</title><rect x="483.6" y="643.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (2 samples, 0.07%)</title><rect x="483.6" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.6" y="638.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (1 samples, 0.03%)</title><rect x="483.6" y="611.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="486.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="484.0" y="611.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="487.0" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="484.0" y="595.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="487.0" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="484.0" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="487.0" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="484.0" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="487.0" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="484.0" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.0" y="558.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="484.0" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="487.0" y="542.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="484.0" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.0" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (73 samples, 2.40%)</title><rect x="484.4" y="643.0" width="28.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.4" y="654.0">ja..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (5 samples, 0.16%)</title><rect x="484.4" y="627.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.4" y="638.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (1 samples, 0.03%)</title><rect x="484.8" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.8" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (2 samples, 0.07%)</title><rect x="485.2" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.2" y="622.0"></text>
</g>
<g>
<title>JVM_GetInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="485.6" y="595.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="488.6" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (1 samples, 0.03%)</title><rect x="486.0" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.0" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (68 samples, 2.24%)</title><rect x="486.4" y="627.0" width="26.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.4" y="638.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (2 samples, 0.07%)</title><rect x="486.4" y="611.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="489.4" y="622.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.07%)</title><rect x="487.1" y="611.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="490.1" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (1 samples, 0.03%)</title><rect x="487.9" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="490.9" y="622.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (58 samples, 1.91%)</title><rect x="488.3" y="611.0" width="22.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="491.3" y="622.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.16%)</title><rect x="500.3" y="595.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="503.3" y="606.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (2 samples, 0.07%)</title><rect x="502.3" y="595.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="505.3" y="606.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.03%)</title><rect x="503.1" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="506.1" y="606.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="503.4" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="506.4" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="503.8" y="595.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="506.8" y="606.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="504.2" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="507.2" y="606.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="504.6" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="507.6" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="505.0" y="595.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="508.0" y="606.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="505.4" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="508.4" y="606.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (10 samples, 0.33%)</title><rect x="505.8" y="595.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="508.8" y="606.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="505.8" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="508.8" y="590.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (9 samples, 0.30%)</title><rect x="506.2" y="579.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="509.2" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.20%)</title><rect x="506.6" y="563.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="509.6" y="574.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.16%)</title><rect x="506.6" y="547.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="509.6" y="558.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="508.5" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="511.5" y="558.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.07%)</title><rect x="508.9" y="563.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="511.9" y="574.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (2 samples, 0.07%)</title><rect x="509.7" y="595.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="512.7" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="509.7" y="579.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="512.7" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.07%)</title><rect x="509.7" y="563.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="512.7" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="510.1" y="547.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="513.1" y="558.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="510.1" y="531.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="513.1" y="542.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="510.4" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="513.4" y="606.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="510.4" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="513.4" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="510.4" y="563.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="513.4" y="574.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::~JvmtiVMObjectAllocEventCollector() (1 samples, 0.03%)</title><rect x="510.8" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="513.8" y="622.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (1 samples, 0.03%)</title><rect x="511.2" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="514.2" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="511.6" y="611.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="514.6" y="622.0"></text>
</g>
<g>
<title>frame::interpreter_frame_method() const (1 samples, 0.03%)</title><rect x="512.0" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="515.0" y="622.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="512.4" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="515.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.start (399 samples, 13.14%)</title><rect x="512.8" y="691.0" width="155.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.8" y="702.0">java/lang/Thread.start</text>
</g>
<g>
<title>java/lang/Thread.start0 (393 samples, 12.94%)</title><rect x="514.7" y="675.0" width="152.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="517.7" y="686.0">java/lang/Thread.st..</text>
</g>
<g>
<title>JVM_StartThread (261 samples, 8.59%)</title><rect x="515.9" y="659.0" width="101.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="518.9" y="670.0">JVM_StartThr..</text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (19 samples, 0.63%)</title><rect x="517.0" y="643.0" width="7.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="520.0" y="654.0"></text>
</g>
<g>
<title>G1BarrierSet::on_thread_create(Thread*) (1 samples, 0.03%)</title><rect x="517.0" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="520.0" y="638.0"></text>
</g>
<g>
<title>PtrQueue::PtrQueue(PtrQueueSet*, bool, bool) (1 samples, 0.03%)</title><rect x="517.0" y="611.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="520.0" y="622.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="517.4" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="520.4" y="638.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (1 samples, 0.03%)</title><rect x="517.8" y="627.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="520.8" y="638.0"></text>
</g>
<g>
<title>sem_init@plt (1 samples, 0.03%)</title><rect x="517.8" y="611.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="520.8" y="622.0"></text>
</g>
<g>
<title>JavaThread::initialize() (2 samples, 0.07%)</title><rect x="518.2" y="627.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="521.2" y="638.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (1 samples, 0.03%)</title><rect x="519.0" y="627.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="522.0" y="638.0"></text>
</g>
<g>
<title>Thread::Thread() (12 samples, 0.40%)</title><rect x="519.4" y="627.0" width="4.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="522.4" y="638.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (2 samples, 0.07%)</title><rect x="519.4" y="611.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="522.4" y="622.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.07%)</title><rect x="519.4" y="595.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="522.4" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="519.8" y="579.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="522.8" y="590.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned long) (3 samples, 0.10%)</title><rect x="520.2" y="611.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="523.2" y="622.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.10%)</title><rect x="520.2" y="595.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="523.2" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="520.9" y="579.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="523.9" y="590.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (1 samples, 0.03%)</title><rect x="521.3" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="524.3" y="622.0"></text>
</g>
<g>
<title>Thread::SpinRelease(int volatile*) (1 samples, 0.03%)</title><rect x="521.3" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="524.3" y="606.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, ResourceObj::allocation_type, MemoryType) (1 samples, 0.03%)</title><rect x="521.7" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="524.7" y="622.0"></text>
</g>
<g>
<title>ThreadHeapSampler::pick_next_sample(unsigned long) (1 samples, 0.03%)</title><rect x="522.1" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="525.1" y="622.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (3 samples, 0.10%)</title><rect x="522.5" y="611.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="525.5" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="523.7" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="526.7" y="622.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="523.7" y="595.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="526.7" y="606.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="523.7" y="579.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="526.7" y="590.0"></text>
</g>
<g>
<title>ThreadHeapSampler::pick_next_sample(unsigned long) (1 samples, 0.03%)</title><rect x="524.0" y="627.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="527.0" y="638.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="524.4" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="527.4" y="654.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (51 samples, 1.68%)</title><rect x="524.8" y="643.0" width="19.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="527.8" y="654.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (3 samples, 0.10%)</title><rect x="525.2" y="627.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="528.2" y="638.0"></text>
</g>
<g>
<title>jio_vsnprintf (2 samples, 0.07%)</title><rect x="525.6" y="611.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="528.6" y="622.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (2 samples, 0.07%)</title><rect x="525.6" y="595.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="528.6" y="606.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.07%)</title><rect x="526.4" y="627.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="529.4" y="638.0"></text>
</g>
<g>
<title>ThreadService::add_thread(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="527.1" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="530.1" y="638.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (43 samples, 1.42%)</title><rect x="527.5" y="627.0" width="16.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="530.5" y="638.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (32 samples, 1.05%)</title><rect x="527.9" y="611.0" width="12.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="530.9" y="622.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (3 samples, 0.10%)</title><rect x="539.2" y="595.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="542.2" y="606.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (2 samples, 0.07%)</title><rect x="539.6" y="579.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="542.6" y="590.0"></text>
</g>
<g>
<title>__memset_erms (9 samples, 0.30%)</title><rect x="540.4" y="611.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="543.4" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="543.5" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="546.5" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="543.5" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="546.5" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="543.5" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="546.5" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="543.5" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="546.5" y="558.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="543.5" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="546.5" y="542.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="543.5" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="546.5" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="543.5" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="546.5" y="510.0"></text>
</g>
<g>
<title>os::free(void*) (1 samples, 0.03%)</title><rect x="543.9" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="546.9" y="622.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="544.2" y="627.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="547.2" y="638.0"></text>
</g>
<g>
<title>Monitor::lock() (19 samples, 0.63%)</title><rect x="544.6" y="643.0" width="7.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="547.6" y="654.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (11 samples, 0.36%)</title><rect x="545.0" y="627.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="548.0" y="638.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="545.0" y="611.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="548.0" y="622.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.16%)</title><rect x="545.4" y="611.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="548.4" y="622.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.13%)</title><rect x="547.4" y="611.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="550.4" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.13%)</title><rect x="547.4" y="595.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="550.4" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.13%)</title><rect x="547.4" y="579.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.4" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="548.5" y="563.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.5" y="574.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="548.9" y="611.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="551.9" y="622.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (1 samples, 0.03%)</title><rect x="549.3" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="552.3" y="638.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.20%)</title><rect x="549.7" y="627.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="552.7" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="552.0" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="555.0" y="654.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.07%)</title><rect x="552.4" y="643.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="555.4" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="553.2" y="643.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="556.2" y="654.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (151 samples, 4.97%)</title><rect x="554.0" y="643.0" width="58.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="557.0" y="654.0">os::cr..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (12 samples, 0.40%)</title><rect x="555.9" y="627.0" width="4.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="558.9" y="638.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (12 samples, 0.40%)</title><rect x="555.9" y="611.0" width="4.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="558.9" y="622.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.20%)</title><rect x="556.3" y="595.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="559.3" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.20%)</title><rect x="556.3" y="579.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="559.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.20%)</title><rect x="556.3" y="563.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="559.3" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="557.5" y="547.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.5" y="558.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="557.5" y="531.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.5" y="542.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="557.8" y="515.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.8" y="526.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="558.2" y="499.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="561.2" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="558.6" y="595.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="561.6" y="606.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.07%)</title><rect x="559.0" y="595.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="562.0" y="606.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="559.8" y="595.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="562.8" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="560.2" y="595.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="563.2" y="606.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (2 samples, 0.07%)</title><rect x="560.6" y="627.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.6" y="638.0"></text>
</g>
<g>
<title>OSThread::pd_initialize() (2 samples, 0.07%)</title><rect x="560.6" y="611.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="563.6" y="622.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="560.6" y="595.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="563.6" y="606.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (1 samples, 0.03%)</title><rect x="561.0" y="595.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="564.0" y="606.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (2 samples, 0.07%)</title><rect x="561.3" y="627.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="564.3" y="638.0"></text>
</g>
<g>
<title>__clone (118 samples, 3.89%)</title><rect x="562.1" y="627.0" width="45.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="565.1" y="638.0">__cl..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (116 samples, 3.82%)</title><rect x="562.9" y="611.0" width="45.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="565.9" y="622.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (116 samples, 3.82%)</title><rect x="562.9" y="595.0" width="45.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="565.9" y="606.0">do_s..</text>
</g>
<g>
<title>__x64_sys_clone (108 samples, 3.56%)</title><rect x="566.0" y="579.0" width="42.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="569.0" y="590.0">__x..</text>
</g>
<g>
<title>__put_user_4 (1 samples, 0.03%)</title><rect x="566.0" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="569.0" y="574.0"></text>
</g>
<g>
<title>_do_fork (107 samples, 3.52%)</title><rect x="566.4" y="563.0" width="41.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="569.4" y="574.0">_do..</text>
</g>
<g>
<title>clear_ti_thread_flag (1 samples, 0.03%)</title><rect x="566.4" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="569.4" y="558.0"></text>
</g>
<g>
<title>copy_process.part.34 (75 samples, 2.47%)</title><rect x="566.8" y="547.0" width="29.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="569.8" y="558.0">co..</text>
</g>
<g>
<title>__percpu_down_read (1 samples, 0.03%)</title><rect x="570.7" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="573.7" y="542.0"></text>
</g>
<g>
<title>__vmalloc_node_range (17 samples, 0.56%)</title><rect x="571.1" y="531.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="574.1" y="542.0"></text>
</g>
<g>
<title>__get_vm_area_node (9 samples, 0.30%)</title><rect x="571.1" y="515.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="574.1" y="526.0"></text>
</g>
<g>
<title>alloc_vmap_area (6 samples, 0.20%)</title><rect x="571.1" y="499.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="574.1" y="510.0"></text>
</g>
<g>
<title>__insert_vmap_area (4 samples, 0.13%)</title><rect x="571.8" y="483.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.8" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (3 samples, 0.10%)</title><rect x="573.4" y="499.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="576.4" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="573.8" y="483.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.8" y="494.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="573.8" y="467.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="576.8" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="574.2" y="483.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="577.2" y="494.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="574.2" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="577.2" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="574.2" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="577.2" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="574.2" y="435.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="577.2" y="446.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="574.2" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="577.2" y="430.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="574.2" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="577.2" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="574.2" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="577.2" y="398.0"></text>
</g>
<g>
<title>__kmalloc_node (1 samples, 0.03%)</title><rect x="574.6" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="577.6" y="526.0"></text>
</g>
<g>
<title>alloc_pages_current (6 samples, 0.20%)</title><rect x="574.9" y="515.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="577.9" y="526.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (6 samples, 0.20%)</title><rect x="574.9" y="499.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="577.9" y="510.0"></text>
</g>
<g>
<title>clear_page_erms (5 samples, 0.16%)</title><rect x="574.9" y="483.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.9" y="494.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="576.9" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="579.9" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="577.3" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="580.3" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="577.7" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="580.7" y="542.0"></text>
</g>
<g>
<title>alloc_pid (5 samples, 0.16%)</title><rect x="578.0" y="531.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.0" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="579.6" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="582.6" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="579.6" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="582.6" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="580.0" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="583.0" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="580.0" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.0" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="580.0" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="583.0" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="580.0" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="583.0" y="494.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="580.0" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.0" y="478.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="580.0" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="583.0" y="462.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.03%)</title><rect x="580.0" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="583.0" y="446.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.03%)</title><rect x="580.0" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.0" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="580.0" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="583.0" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="580.0" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="583.0" y="398.0"></text>
</g>
<g>
<title>arch_dup_task_struct (1 samples, 0.03%)</title><rect x="580.4" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="583.4" y="542.0"></text>
</g>
<g>
<title>fpu__copy (1 samples, 0.03%)</title><rect x="580.4" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="583.4" y="526.0"></text>
</g>
<g>
<title>arch_local_irq_enable (3 samples, 0.10%)</title><rect x="580.8" y="531.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.8" y="542.0"></text>
</g>
<g>
<title>cgroup_can_fork (2 samples, 0.07%)</title><rect x="581.9" y="531.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="584.9" y="542.0"></text>
</g>
<g>
<title>pids_can_fork (1 samples, 0.03%)</title><rect x="582.3" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.3" y="526.0"></text>
</g>
<g>
<title>cgroup_post_fork (4 samples, 0.13%)</title><rect x="582.7" y="531.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="585.7" y="542.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (2 samples, 0.07%)</title><rect x="583.5" y="515.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="586.5" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="583.5" y="499.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="586.5" y="510.0"></text>
</g>
<g>
<title>copy_thread_tls (2 samples, 0.07%)</title><rect x="584.3" y="531.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.3" y="542.0"></text>
</g>
<g>
<title>do_arch_prctl_64 (1 samples, 0.03%)</title><rect x="584.7" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.7" y="526.0"></text>
</g>
<g>
<title>cpuset_fork (1 samples, 0.03%)</title><rect x="585.0" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.0" y="542.0"></text>
</g>
<g>
<title>get_random_u64 (8 samples, 0.26%)</title><rect x="585.4" y="531.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.4" y="542.0"></text>
</g>
<g>
<title>idr_preload (1 samples, 0.03%)</title><rect x="588.5" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="591.5" y="542.0"></text>
</g>
<g>
<title>init_entity_runnable_average (1 samples, 0.03%)</title><rect x="588.9" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="591.9" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.07%)</title><rect x="589.3" y="531.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="592.3" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="589.7" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="592.7" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="590.1" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.1" y="542.0"></text>
</g>
<g>
<title>memcpy_erms (5 samples, 0.16%)</title><rect x="590.5" y="531.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="593.5" y="542.0"></text>
</g>
<g>
<title>perf_event_init_task (3 samples, 0.10%)</title><rect x="592.4" y="531.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="595.4" y="542.0"></text>
</g>
<g>
<title>perf_unpin_context (1 samples, 0.03%)</title><rect x="592.8" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.8" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="592.8" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="595.8" y="510.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="593.2" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="596.2" y="526.0"></text>
</g>
<g>
<title>sched_fork (6 samples, 0.20%)</title><rect x="593.6" y="531.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="596.6" y="542.0"></text>
</g>
<g>
<title>__sched_fork (1 samples, 0.03%)</title><rect x="594.0" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="597.0" y="526.0"></text>
</g>
<g>
<title>init_numa_balancing (1 samples, 0.03%)</title><rect x="594.0" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="597.0" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.13%)</title><rect x="594.4" y="515.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="597.4" y="526.0"></text>
</g>
<g>
<title>ftrace_graph_init_task (1 samples, 0.03%)</title><rect x="595.9" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="598.9" y="558.0"></text>
</g>
<g>
<title>memset_erms (9 samples, 0.30%)</title><rect x="596.3" y="547.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="599.3" y="558.0"></text>
</g>
<g>
<title>pid_vnr (1 samples, 0.03%)</title><rect x="599.8" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="602.8" y="558.0"></text>
</g>
<g>
<title>task_active_pid_ns (1 samples, 0.03%)</title><rect x="600.2" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="603.2" y="558.0"></text>
</g>
<g>
<title>tsk_fork_get_node (2 samples, 0.07%)</title><rect x="600.6" y="547.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="603.6" y="558.0"></text>
</g>
<g>
<title>wake_up_new_task (17 samples, 0.56%)</title><rect x="601.4" y="547.0" width="6.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="604.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.56%)</title><rect x="601.4" y="531.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="604.4" y="542.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.07%)</title><rect x="608.0" y="627.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="611.0" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="608.7" y="627.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="611.7" y="638.0"></text>
</g>
<g>
<title>os::vm_page_size() (1 samples, 0.03%)</title><rect x="609.1" y="627.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="612.1" y="638.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (8 samples, 0.26%)</title><rect x="609.5" y="627.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="612.5" y="638.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="612.2" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="615.2" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="612.2" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="615.2" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="612.2" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="615.2" y="590.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.03%)</title><rect x="612.2" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="615.2" y="574.0"></text>
</g>
<g>
<title>os::set_native_priority(Thread*, int) (4 samples, 0.13%)</title><rect x="612.6" y="643.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="615.6" y="654.0"></text>
</g>
<g>
<title>os::set_priority(Thread*, ThreadPriority) (1 samples, 0.03%)</title><rect x="614.2" y="643.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="617.2" y="654.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (7 samples, 0.23%)</title><rect x="614.6" y="643.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="617.6" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="615.0" y="627.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="618.0" y="638.0"></text>
</g>
<g>
<title>os::pd_start_thread(Thread*) (1 samples, 0.03%)</title><rect x="616.1" y="627.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="619.1" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="616.5" y="627.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="619.5" y="638.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.03%)</title><rect x="617.3" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="620.3" y="670.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="617.7" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="620.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 1.88%)</title><rect x="618.1" y="659.0" width="22.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="621.1" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.13%)</title><rect x="618.1" y="643.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="621.1" y="654.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="618.1" y="627.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="621.1" y="638.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="618.5" y="627.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="621.5" y="638.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.07%)</title><rect x="618.8" y="627.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="621.8" y="638.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="618.8" y="611.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="621.8" y="622.0"></text>
</g>
<g>
<title>_IO_padn (1 samples, 0.03%)</title><rect x="619.6" y="643.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="622.6" y="654.0"></text>
</g>
<g>
<title>__GI__IO_setb (1 samples, 0.03%)</title><rect x="620.0" y="643.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="623.0" y="654.0"></text>
</g>
<g>
<title>__cxa_pure_virtual (1 samples, 0.03%)</title><rect x="620.4" y="643.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="623.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="620.4" y="627.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="623.4" y="638.0"></text>
</g>
<g>
<title>thread_entry(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="620.4" y="611.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="623.4" y="622.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="620.4" y="595.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="623.4" y="606.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="620.4" y="579.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="623.4" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake_private (1 samples, 0.03%)</title><rect x="620.8" y="643.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="623.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="620.8" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="623.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="620.8" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.8" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="620.8" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="623.8" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="620.8" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="623.8" y="590.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="620.8" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.8" y="574.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="620.8" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="623.8" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="620.8" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="623.8" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="620.8" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.8" y="526.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.07%)</title><rect x="621.2" y="643.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="624.2" y="654.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.03%)</title><rect x="622.0" y="643.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="625.0" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="622.3" y="643.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="625.3" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="622.7" y="643.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="625.7" y="654.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.07%)</title><rect x="623.1" y="643.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="626.1" y="654.0"></text>
</g>
<g>
<title>malloc_consolidate (6 samples, 0.20%)</title><rect x="623.9" y="643.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="626.9" y="654.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (36 samples, 1.19%)</title><rect x="626.2" y="643.0" width="14.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="629.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.82%)</title><rect x="630.5" y="627.0" width="9.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="633.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.82%)</title><rect x="630.5" y="611.0" width="9.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="633.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.49%)</title><rect x="634.0" y="595.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="637.0" y="606.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.49%)</title><rect x="634.0" y="579.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="637.0" y="590.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.43%)</title><rect x="634.8" y="563.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.8" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.20%)</title><rect x="634.8" y="547.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="637.8" y="558.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.16%)</title><rect x="635.2" y="531.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="638.2" y="542.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.16%)</title><rect x="635.2" y="515.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.2" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.13%)</title><rect x="635.6" y="499.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="638.6" y="510.0"></text>
</g>
<g>
<title>kprobe_flush_task (1 samples, 0.03%)</title><rect x="636.7" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="639.7" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="636.7" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="639.7" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.20%)</title><rect x="637.1" y="547.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="640.1" y="558.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.07%)</title><rect x="638.7" y="531.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="641.7" y="542.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="639.4" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="642.4" y="558.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="639.8" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="642.8" y="606.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (3 samples, 0.10%)</title><rect x="640.2" y="659.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="643.2" y="670.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (1 samples, 0.03%)</title><rect x="640.2" y="643.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="643.2" y="654.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (2 samples, 0.07%)</title><rect x="640.6" y="643.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="643.6" y="654.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (2 samples, 0.07%)</title><rect x="641.4" y="659.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="644.4" y="670.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.16%)</title><rect x="642.2" y="659.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="645.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (49 samples, 1.61%)</title><rect x="644.1" y="659.0" width="19.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="647.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 1.51%)</title><rect x="645.3" y="643.0" width="17.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 1.51%)</title><rect x="645.3" y="627.0" width="17.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="648.3" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (39 samples, 1.28%)</title><rect x="648.0" y="611.0" width="15.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="651.0" y="622.0"></text>
</g>
<g>
<title>do_futex (39 samples, 1.28%)</title><rect x="648.0" y="595.0" width="15.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="651.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.07%)</title><rect x="648.0" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="651.0" y="590.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 1.19%)</title><rect x="648.8" y="579.0" width="13.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.8" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.07%)</title><rect x="648.8" y="563.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="651.8" y="574.0"></text>
</g>
<g>
<title>wake_up_q (34 samples, 1.12%)</title><rect x="649.5" y="563.0" width="13.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.5" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (34 samples, 1.12%)</title><rect x="649.5" y="547.0" width="13.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 1.12%)</title><rect x="649.5" y="531.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.5" y="542.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="662.7" y="579.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.7" y="590.0"></text>
</g>
<g>
<title>_int_malloc (10 samples, 0.33%)</title><rect x="663.1" y="659.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="666.1" y="670.0"></text>
</g>
<g>
<title>mempcpy (1 samples, 0.03%)</title><rect x="667.0" y="659.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="670.0" y="670.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="667.0" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.0" y="654.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="667.0" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.0" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="667.0" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="670.0" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="667.0" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="670.0" y="606.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="667.0" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="670.0" y="590.0"></text>
</g>
<g>
<title>rcu_cblist_dequeue (1 samples, 0.03%)</title><rect x="667.0" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="670.0" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.add (1 samples, 0.03%)</title><rect x="667.4" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 0.03%)</title><rect x="667.4" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.23%)</title><rect x="667.8" y="707.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.23%)</title><rect x="667.8" y="691.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.23%)</title><rect x="667.8" y="675.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.13%)</title><rect x="667.8" y="659.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.13%)</title><rect x="667.8" y="643.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.13%)</title><rect x="667.8" y="627.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.8" y="638.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.calculateFields (2 samples, 0.07%)</title><rect x="668.6" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.10%)</title><rect x="669.4" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="672.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.10%)</title><rect x="669.4" y="643.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.10%)</title><rect x="669.4" y="627.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$225/1153235963.accept (1 samples, 0.03%)</title><rect x="669.4" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/2030828916.accept (1 samples, 0.03%)</title><rect x="669.7" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$134/981260519.accept (1 samples, 0.03%)</title><rect x="670.1" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.1" y="622.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="670.5" y="755.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="673.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (4 samples, 0.13%)</title><rect x="670.9" y="883.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (4 samples, 0.13%)</title><rect x="670.9" y="867.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.03%)</title><rect x="672.1" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (3 samples, 0.10%)</title><rect x="672.5" y="931.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (3 samples, 0.10%)</title><rect x="672.5" y="915.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.10%)</title><rect x="672.5" y="899.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.10%)</title><rect x="672.5" y="883.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.03%)</title><rect x="673.6" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="673.6" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="673.6" y="931.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.07%)</title><rect x="674.0" y="979.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 0.07%)</title><rect x="674.0" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.07%)</title><rect x="674.0" y="947.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.07%)</title><rect x="674.0" y="931.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="674.8" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="674.8" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (456 samples, 15.01%)</title><rect x="675.2" y="1139.0" width="177.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.2" y="1150.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="681.8" y="1123.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="684.8" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="681.8" y="1107.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="684.8" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.03%)</title><rect x="681.8" y="1091.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="684.8" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (6 samples, 0.20%)</title><rect x="682.2" y="1123.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (6 samples, 0.20%)</title><rect x="682.2" y="1107.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.2" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.16%)</title><rect x="684.5" y="1123.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.03%)</title><rect x="686.1" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.1" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (139 samples, 4.58%)</title><rect x="686.5" y="1123.0" width="54.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.5" y="1134.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$190/467524561.accept (134 samples, 4.41%)</title><rect x="686.8" y="1107.0" width="52.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.8" y="1118.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (134 samples, 4.41%)</title><rect x="686.8" y="1091.0" width="52.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.8" y="1102.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (134 samples, 4.41%)</title><rect x="686.8" y="1075.0" width="52.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.8" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (134 samples, 4.41%)</title><rect x="686.8" y="1059.0" width="52.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.8" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (134 samples, 4.41%)</title><rect x="686.8" y="1043.0" width="52.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.8" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.23%)</title><rect x="686.8" y="1027.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.20%)</title><rect x="687.2" y="1011.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.2" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="687.2" y="995.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="687.2" y="979.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="687.2" y="963.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (5 samples, 0.16%)</title><rect x="687.6" y="995.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.6" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.16%)</title><rect x="687.6" y="979.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.16%)</title><rect x="687.6" y="963.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.6" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.16%)</title><rect x="687.6" y="947.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (127 samples, 4.18%)</title><rect x="689.6" y="1027.0" width="49.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.6" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (127 samples, 4.18%)</title><rect x="689.6" y="1011.0" width="49.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.6" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (127 samples, 4.18%)</title><rect x="689.6" y="995.0" width="49.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.6" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.07%)</title><rect x="689.6" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (125 samples, 4.12%)</title><rect x="690.3" y="979.0" width="48.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="693.3" y="990.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (125 samples, 4.12%)</title><rect x="690.3" y="963.0" width="48.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.3" y="974.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (124 samples, 4.08%)</title><rect x="690.7" y="947.0" width="48.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.7" y="958.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (121 samples, 3.98%)</title><rect x="691.1" y="931.0" width="47.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.1" y="942.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (21 samples, 0.69%)</title><rect x="691.1" y="915.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (21 samples, 0.69%)</title><rect x="691.1" y="899.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (21 samples, 0.69%)</title><rect x="691.1" y="883.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 0.69%)</title><rect x="691.1" y="867.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.56%)</title><rect x="692.7" y="851.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.56%)</title><rect x="692.7" y="835.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.56%)</title><rect x="692.7" y="819.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (16 samples, 0.53%)</title><rect x="692.7" y="803.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.53%)</title><rect x="692.7" y="787.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.53%)</title><rect x="692.7" y="771.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.53%)</title><rect x="692.7" y="755.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.53%)</title><rect x="692.7" y="739.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.53%)</title><rect x="692.7" y="723.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.7" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.23%)</title><rect x="692.7" y="707.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="695.7" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="692.7" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="695.7" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="693.1" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="696.1" y="702.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="693.1" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="696.1" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="693.1" y="659.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="696.1" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.07%)</title><rect x="693.4" y="691.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="696.4" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.10%)</title><rect x="694.2" y="691.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="697.2" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.30%)</title><rect x="695.4" y="707.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="698.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.26%)</title><rect x="695.8" y="691.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="698.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.26%)</title><rect x="695.8" y="675.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="698.8" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.26%)</title><rect x="695.8" y="659.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="698.8" y="670.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.26%)</title><rect x="695.8" y="643.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="698.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.26%)</title><rect x="695.8" y="627.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="698.8" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="695.8" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="698.8" y="622.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="695.8" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="698.8" y="606.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.23%)</title><rect x="696.2" y="611.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="699.2" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.23%)</title><rect x="696.2" y="595.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.23%)</title><rect x="696.2" y="579.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="699.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="698.9" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="699.3" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.10%)</title><rect x="699.7" y="915.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.10%)</title><rect x="699.7" y="899.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.10%)</title><rect x="699.7" y="883.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="700.4" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (96 samples, 3.16%)</title><rect x="700.8" y="915.0" width="37.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.03%)</title><rect x="700.8" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.8" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="700.8" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="700.8" y="867.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="703.8" y="878.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="700.8" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="703.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (95 samples, 3.13%)</title><rect x="701.2" y="899.0" width="36.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.2" y="910.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (95 samples, 3.13%)</title><rect x="701.2" y="883.0" width="36.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.2" y="894.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (85 samples, 2.80%)</title><rect x="705.1" y="867.0" width="33.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.1" y="878.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.36%)</title><rect x="705.1" y="851.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.1" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.36%)</title><rect x="705.1" y="835.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="708.1" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="708.2" y="819.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="711.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.07%)</title><rect x="708.6" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (74 samples, 2.44%)</title><rect x="709.4" y="851.0" width="28.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.4" y="862.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (74 samples, 2.44%)</title><rect x="709.4" y="835.0" width="28.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.4" y="846.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (72 samples, 2.37%)</title><rect x="710.2" y="819.0" width="27.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.2" y="830.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.03%)</title><rect x="711.3" y="803.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="714.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 2.14%)</title><rect x="711.7" y="803.0" width="25.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="714.7" y="814.0">[..</text>
</g>
<g>
<title>__GI___libc_read (64 samples, 2.11%)</title><rect x="711.7" y="787.0" width="24.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="714.7" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 2.01%)</title><rect x="712.9" y="771.0" width="23.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.9" y="782.0">e..</text>
</g>
<g>
<title>do_syscall_64 (61 samples, 2.01%)</title><rect x="712.9" y="755.0" width="23.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.9" y="766.0">d..</text>
</g>
<g>
<title>__x64_sys_read (56 samples, 1.84%)</title><rect x="714.8" y="739.0" width="21.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.8" y="750.0">_..</text>
</g>
<g>
<title>ksys_read (56 samples, 1.84%)</title><rect x="714.8" y="723.0" width="21.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="717.8" y="734.0">k..</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.13%)</title><rect x="715.2" y="707.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="718.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.13%)</title><rect x="715.2" y="691.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="718.2" y="702.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.13%)</title><rect x="715.2" y="675.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="718.2" y="686.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="716.8" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="719.8" y="718.0"></text>
</g>
<g>
<title>vfs_read (50 samples, 1.65%)</title><rect x="717.1" y="707.0" width="19.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="720.1" y="718.0"></text>
</g>
<g>
<title>__vfs_read (41 samples, 1.35%)</title><rect x="717.1" y="691.0" width="16.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.1" y="702.0"></text>
</g>
<g>
<title>new_sync_read (41 samples, 1.35%)</title><rect x="717.1" y="675.0" width="16.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="720.1" y="686.0"></text>
</g>
<g>
<title>sock_read_iter (41 samples, 1.35%)</title><rect x="717.1" y="659.0" width="16.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="720.1" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="717.5" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="720.5" y="654.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="717.5" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="720.5" y="638.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="717.5" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="720.5" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="717.5" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="720.5" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="717.5" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="720.5" y="590.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="717.5" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="720.5" y="574.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="717.5" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.5" y="558.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="717.5" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="720.5" y="542.0"></text>
</g>
<g>
<title>free_task (1 samples, 0.03%)</title><rect x="717.5" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="720.5" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="717.5" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.5" y="510.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="717.5" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="720.5" y="494.0"></text>
</g>
<g>
<title>sock_recvmsg (39 samples, 1.28%)</title><rect x="717.9" y="643.0" width="15.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="720.9" y="654.0"></text>
</g>
<g>
<title>inet_recvmsg (34 samples, 1.12%)</title><rect x="717.9" y="627.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="720.9" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (34 samples, 1.12%)</title><rect x="717.9" y="611.0" width="13.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="720.9" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.10%)</title><rect x="718.3" y="595.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.3" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.07%)</title><rect x="718.3" y="579.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="721.3" y="590.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.07%)</title><rect x="718.3" y="563.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="721.3" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="718.3" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="721.3" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="718.7" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="721.7" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="718.7" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="721.7" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="719.1" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="722.1" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (30 samples, 0.99%)</title><rect x="719.5" y="595.0" width="11.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.5" y="606.0"></text>
</g>
<g>
<title>tcp_send_ack (30 samples, 0.99%)</title><rect x="719.5" y="579.0" width="11.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="722.5" y="590.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (30 samples, 0.99%)</title><rect x="719.5" y="563.0" width="11.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.5" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.10%)</title><rect x="719.5" y="547.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="722.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.10%)</title><rect x="719.5" y="531.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="722.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.10%)</title><rect x="719.5" y="515.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.5" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="720.3" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="723.3" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (26 samples, 0.86%)</title><rect x="720.6" y="547.0" width="10.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="723.6" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (23 samples, 0.76%)</title><rect x="721.4" y="531.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="724.4" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (22 samples, 0.72%)</title><rect x="721.8" y="515.0" width="8.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="724.8" y="526.0"></text>
</g>
<g>
<title>ip_local_out (22 samples, 0.72%)</title><rect x="721.8" y="499.0" width="8.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="724.8" y="510.0"></text>
</g>
<g>
<title>ip_output (22 samples, 0.72%)</title><rect x="721.8" y="483.0" width="8.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="724.8" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="721.8" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="724.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (21 samples, 0.69%)</title><rect x="722.2" y="467.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="725.2" y="478.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="722.2" y="451.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="725.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (20 samples, 0.66%)</title><rect x="722.6" y="451.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="725.6" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (15 samples, 0.49%)</title><rect x="723.0" y="435.0" width="5.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="726.0" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.21 (15 samples, 0.49%)</title><rect x="723.0" y="419.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="726.0" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (15 samples, 0.49%)</title><rect x="723.0" y="403.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.0" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (15 samples, 0.49%)</title><rect x="723.0" y="387.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.0" y="398.0"></text>
</g>
<g>
<title>net_rx_action (13 samples, 0.43%)</title><rect x="723.8" y="371.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="726.8" y="382.0"></text>
</g>
<g>
<title>process_backlog (12 samples, 0.40%)</title><rect x="724.1" y="355.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="727.1" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 0.36%)</title><rect x="724.5" y="339.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="727.5" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 0.36%)</title><rect x="724.5" y="323.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="727.5" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.07%)</title><rect x="724.5" y="307.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="727.5" y="318.0"></text>
</g>
<g>
<title>ip_rcv (9 samples, 0.30%)</title><rect x="725.3" y="307.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (9 samples, 0.30%)</title><rect x="725.3" y="291.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.3" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (9 samples, 0.30%)</title><rect x="725.3" y="275.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.3" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 0.30%)</title><rect x="725.3" y="259.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.3" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 0.30%)</title><rect x="725.3" y="243.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="728.3" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 0.30%)</title><rect x="725.3" y="227.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="728.3" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="725.3" y="211.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="728.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.23%)</title><rect x="725.7" y="211.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.7" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 0.23%)</title><rect x="725.7" y="195.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.7" y="206.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.20%)</title><rect x="726.1" y="179.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="729.1" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.13%)</title><rect x="726.5" y="163.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="729.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="726.5" y="147.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="729.5" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="726.5" y="131.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="729.5" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="726.5" y="115.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="729.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="726.9" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.9" y="142.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="726.9" y="115.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="729.9" y="126.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="727.2" y="147.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="730.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.03%)</title><rect x="727.6" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="730.6" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="728.0" y="163.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="728.4" y="211.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="731.4" y="222.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.13%)</title><rect x="728.8" y="435.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="731.8" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.13%)</title><rect x="728.8" y="419.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="731.8" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.13%)</title><rect x="728.8" y="403.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="731.8" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="730.0" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="733.0" y="398.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="730.4" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="733.4" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="730.4" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="733.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="730.7" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.7" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.13%)</title><rect x="731.1" y="627.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.10%)</title><rect x="731.5" y="611.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="734.5" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.10%)</title><rect x="731.5" y="595.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.5" y="606.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="731.9" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="734.9" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="732.3" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.3" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.03%)</title><rect x="732.7" y="627.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="735.7" y="638.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="733.1" y="691.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="736.1" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.26%)</title><rect x="733.5" y="691.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="736.5" y="702.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.23%)</title><rect x="733.9" y="675.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="736.9" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="733.9" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="736.9" y="670.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="733.9" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="736.9" y="654.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="734.2" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="737.2" y="670.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.13%)</title><rect x="735.0" y="659.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="738.0" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="736.6" y="787.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="739.6" y="798.0"></text>
</g>
<g>
<title>__GI___errno_location (1 samples, 0.03%)</title><rect x="737.0" y="803.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="740.0" y="814.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.03%)</title><rect x="737.3" y="803.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="740.3" y="814.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.03%)</title><rect x="737.7" y="803.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="740.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.07%)</title><rect x="738.1" y="931.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$195/1595160449.accept (4 samples, 0.13%)</title><rect x="738.9" y="1107.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.13%)</title><rect x="738.9" y="1091.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1748993312.run (4 samples, 0.13%)</title><rect x="738.9" y="1075.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.13%)</title><rect x="738.9" y="1059.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.10%)</title><rect x="739.3" y="1043.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="740.1" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.1" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="740.1" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="740.1" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.1" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="740.1" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.1" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (13 samples, 0.43%)</title><rect x="740.5" y="1123.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.43%)</title><rect x="740.5" y="1107.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.5" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.03%)</title><rect x="740.5" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (12 samples, 0.40%)</title><rect x="740.8" y="1091.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.8" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (12 samples, 0.40%)</title><rect x="740.8" y="1075.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="743.8" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.23%)</title><rect x="742.8" y="1059.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.8" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.23%)</title><rect x="742.8" y="1043.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.20%)</title><rect x="742.8" y="1027.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.8" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (6 samples, 0.20%)</title><rect x="742.8" y="1011.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.8" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (3 samples, 0.10%)</title><rect x="742.8" y="995.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.interestOps (2 samples, 0.07%)</title><rect x="743.2" y="979.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$187/1350857380.test (3 samples, 0.10%)</title><rect x="744.0" y="995.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (3 samples, 0.10%)</title><rect x="744.0" y="979.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.0" y="990.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="744.0" y="963.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="747.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="745.1" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (35 samples, 1.15%)</title><rect x="745.5" y="1123.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/715486789.run (28 samples, 0.92%)</title><rect x="745.5" y="1107.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (28 samples, 0.92%)</title><rect x="745.5" y="1091.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.92%)</title><rect x="745.5" y="1075.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 0.82%)</title><rect x="746.7" y="1059.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.03%)</title><rect x="747.1" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="750.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (23 samples, 0.76%)</title><rect x="747.5" y="1043.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (23 samples, 0.76%)</title><rect x="747.5" y="1027.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (22 samples, 0.72%)</title><rect x="747.5" y="1011.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (22 samples, 0.72%)</title><rect x="747.5" y="995.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (22 samples, 0.72%)</title><rect x="747.5" y="979.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (1 samples, 0.03%)</title><rect x="748.2" y="963.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.03%)</title><rect x="748.2" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (19 samples, 0.63%)</title><rect x="748.6" y="963.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (6 samples, 0.20%)</title><rect x="748.6" y="947.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4 samples, 0.13%)</title><rect x="749.4" y="931.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4 samples, 0.13%)</title><rect x="749.4" y="915.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.4" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/502800944.linkToTargetMethod (2 samples, 0.07%)</title><rect x="749.4" y="899.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1076770748.invoke (2 samples, 0.07%)</title><rect x="749.4" y="883.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="749.4" y="867.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.4" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.07%)</title><rect x="749.4" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.07%)</title><rect x="749.4" y="835.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.4" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="749.8" y="819.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="752.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.07%)</title><rect x="750.2" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.07%)</title><rect x="750.2" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.07%)</title><rect x="750.2" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.07%)</title><rect x="750.2" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.2" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="750.2" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.2" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="750.2" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="750.2" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.03%)</title><rect x="750.6" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="750.6" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (13 samples, 0.43%)</title><rect x="750.9" y="947.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.03%)</title><rect x="751.3" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.36%)</title><rect x="751.7" y="931.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.33%)</title><rect x="752.1" y="915.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.03%)</title><rect x="752.1" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.30%)</title><rect x="752.5" y="899.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.30%)</title><rect x="752.5" y="883.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (9 samples, 0.30%)</title><rect x="752.5" y="867.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="752.5" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="752.5" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.26%)</title><rect x="752.9" y="851.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.26%)</title><rect x="752.9" y="835.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.26%)</title><rect x="752.9" y="819.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.20%)</title><rect x="753.7" y="803.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.20%)</title><rect x="753.7" y="787.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.7" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.20%)</title><rect x="753.7" y="771.0" width="2.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="756.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.20%)</title><rect x="753.7" y="755.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="756.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.20%)</title><rect x="753.7" y="739.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="756.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.20%)</title><rect x="753.7" y="723.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.7" y="734.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.20%)</title><rect x="753.7" y="707.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="756.7" y="718.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.20%)</title><rect x="753.7" y="691.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="756.7" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="753.7" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="756.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.16%)</title><rect x="754.1" y="675.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="757.1" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.16%)</title><rect x="754.1" y="659.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="757.1" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.16%)</title><rect x="754.1" y="643.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="756.0" y="1011.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$160/810264248.run (7 samples, 0.23%)</title><rect x="756.4" y="1107.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (7 samples, 0.23%)</title><rect x="756.4" y="1091.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.16%)</title><rect x="757.2" y="1075.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.16%)</title><rect x="757.2" y="1059.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.16%)</title><rect x="757.2" y="1043.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="757.2" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="757.2" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="757.2" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.03%)</title><rect x="757.2" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.03%)</title><rect x="757.2" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.2" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="757.2" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.2" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="757.2" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.2" y="942.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="757.2" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.13%)</title><rect x="757.6" y="1027.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.13%)</title><rect x="757.6" y="1011.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.13%)</title><rect x="757.6" y="995.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.10%)</title><rect x="757.9" y="979.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.10%)</title><rect x="757.9" y="963.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.9" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="757.9" y="947.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="760.9" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="757.9" y="931.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="760.9" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="758.3" y="947.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="761.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="758.3" y="931.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="761.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="758.3" y="915.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="761.3" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="758.3" y="899.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="761.3" y="910.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="758.3" y="883.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="761.3" y="894.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="758.3" y="867.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="761.3" y="878.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="758.3" y="851.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="761.3" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="758.3" y="835.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="761.3" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="758.3" y="819.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="761.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (15 samples, 0.49%)</title><rect x="759.1" y="1123.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.1" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.10%)</title><rect x="760.3" y="1107.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.3" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.10%)</title><rect x="760.3" y="1091.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.07%)</title><rect x="760.7" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.7" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.07%)</title><rect x="760.7" y="1059.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="763.7" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="760.7" y="1043.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="763.7" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.03%)</title><rect x="761.1" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="764.1" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="761.1" y="1027.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="764.1" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="761.1" y="1011.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="764.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9 samples, 0.30%)</title><rect x="761.4" y="1107.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.4" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="762.6" y="1091.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="765.6" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="763.0" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="766.0" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="763.0" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="766.0" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="763.0" y="1059.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="766.0" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="763.0" y="1043.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="766.0" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.10%)</title><rect x="763.4" y="1091.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="766.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1 samples, 0.03%)</title><rect x="764.5" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="764.9" y="1123.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="764.9" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="764.9" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.9" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="764.9" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (25 samples, 0.82%)</title><rect x="765.3" y="1123.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.3" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.07%)</title><rect x="766.9" y="1107.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="769.9" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.07%)</title><rect x="766.9" y="1091.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="769.9" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.07%)</title><rect x="766.9" y="1075.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="769.9" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.07%)</title><rect x="766.9" y="1059.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="769.9" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.now (11 samples, 0.36%)</title><rect x="767.7" y="1107.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.7" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (11 samples, 0.36%)</title><rect x="767.7" y="1091.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (9 samples, 0.30%)</title><rect x="768.4" y="1075.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.4" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (8 samples, 0.26%)</title><rect x="768.4" y="1059.0" width="3.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="771.4" y="1070.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.03%)</title><rect x="770.0" y="1043.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="773.0" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.10%)</title><rect x="770.4" y="1043.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="773.4" y="1054.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="770.4" y="1027.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="773.4" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="770.8" y="1027.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="773.8" y="1038.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="770.8" y="1011.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="773.8" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.03%)</title><rect x="771.5" y="1059.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="774.5" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.until (1 samples, 0.03%)</title><rect x="771.9" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.9" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.07%)</title><rect x="772.3" y="1107.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.3" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.07%)</title><rect x="772.3" y="1091.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.3" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.07%)</title><rect x="772.3" y="1075.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.3" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5 samples, 0.16%)</title><rect x="773.1" y="1107.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.1" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.16%)</title><rect x="773.1" y="1091.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.13%)</title><rect x="773.5" y="1075.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.5" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.13%)</title><rect x="773.5" y="1059.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="774.6" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.03%)</title><rect x="775.0" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.0" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (174 samples, 5.73%)</title><rect x="775.4" y="1123.0" width="67.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.4" y="1134.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (174 samples, 5.73%)</title><rect x="775.4" y="1107.0" width="67.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.4" y="1118.0">sun/nio..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.07%)</title><rect x="775.4" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (171 samples, 5.63%)</title><rect x="776.2" y="1091.0" width="66.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.2" y="1102.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (98 samples, 3.23%)</title><rect x="777.0" y="1075.0" width="38.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.0" y="1086.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.07%)</title><rect x="777.0" y="1059.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="780.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 3.03%)</title><rect x="777.8" y="1059.0" width="35.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="780.8" y="1070.0">[un..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="777.8" y="1043.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="780.8" y="1054.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="778.1" y="1043.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="781.1" y="1054.0"></text>
</g>
<g>
<title>epoll_wait (90 samples, 2.96%)</title><rect x="778.5" y="1043.0" width="35.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="781.5" y="1054.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 2.83%)</title><rect x="780.1" y="1027.0" width="33.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.1" y="1038.0">en..</text>
</g>
<g>
<title>do_syscall_64 (86 samples, 2.83%)</title><rect x="780.1" y="1011.0" width="33.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="783.1" y="1022.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (76 samples, 2.50%)</title><rect x="784.0" y="995.0" width="29.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="787.0" y="1006.0">__..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="784.0" y="979.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="787.0" y="990.0"></text>
</g>
<g>
<title>do_epoll_wait (74 samples, 2.44%)</title><rect x="784.4" y="979.0" width="28.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="787.4" y="990.0">do..</text>
</g>
<g>
<title>__fdget (6 samples, 0.20%)</title><rect x="784.8" y="963.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="787.8" y="974.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.20%)</title><rect x="784.8" y="947.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.8" y="958.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.16%)</title><rect x="785.1" y="931.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.1" y="942.0"></text>
</g>
<g>
<title>ep_poll (65 samples, 2.14%)</title><rect x="787.1" y="963.0" width="25.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="790.1" y="974.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (23 samples, 0.76%)</title><rect x="791.4" y="947.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="794.4" y="958.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="795.6" y="931.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="798.6" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.30%)</title><rect x="796.0" y="931.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="799.0" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.10%)</title><rect x="798.4" y="915.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="801.4" y="926.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.03%)</title><rect x="799.1" y="899.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="802.1" y="910.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.07%)</title><rect x="799.5" y="931.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="802.5" y="942.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="799.9" y="915.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="802.9" y="926.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="799.9" y="899.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="802.9" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="800.3" y="947.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="803.3" y="958.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="800.7" y="947.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="803.7" y="958.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="801.1" y="947.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="804.1" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (26 samples, 0.86%)</title><rect x="801.5" y="947.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="804.5" y="958.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="801.5" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="804.5" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (25 samples, 0.82%)</title><rect x="801.8" y="931.0" width="9.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="804.8" y="942.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="802.6" y="915.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="805.6" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.07%)</title><rect x="803.0" y="915.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="806.0" y="926.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (8 samples, 0.26%)</title><rect x="803.8" y="915.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="806.8" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.20%)</title><rect x="804.6" y="899.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="807.6" y="910.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (7 samples, 0.23%)</title><rect x="806.9" y="915.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="809.9" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.23%)</title><rect x="806.9" y="899.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="809.9" y="910.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.16%)</title><rect x="809.6" y="915.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="812.6" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.13%)</title><rect x="810.0" y="899.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="813.0" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.10%)</title><rect x="810.4" y="883.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.4" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="810.4" y="867.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="813.4" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="810.4" y="851.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="813.4" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="810.4" y="835.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="813.4" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="810.4" y="819.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.4" y="830.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="810.4" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="813.4" y="814.0"></text>
</g>
<g>
<title>kprobe_flush_task (1 samples, 0.03%)</title><rect x="810.8" y="867.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="813.8" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="810.8" y="851.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="813.8" y="862.0"></text>
</g>
<g>
<title>put_task_stack (1 samples, 0.03%)</title><rect x="811.2" y="867.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="814.2" y="878.0"></text>
</g>
<g>
<title>account_kernel_stack (1 samples, 0.03%)</title><rect x="811.2" y="851.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="814.2" y="862.0"></text>
</g>
<g>
<title>select_estimate_accuracy (2 samples, 0.07%)</title><rect x="811.6" y="947.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="814.6" y="958.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.07%)</title><rect x="811.6" y="931.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.6" y="942.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="811.9" y="915.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.9" y="926.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="812.3" y="963.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="815.3" y="974.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="812.7" y="963.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.7" y="974.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="813.1" y="979.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="816.1" y="990.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.13%)</title><rect x="813.5" y="1059.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="816.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (60 samples, 1.98%)</title><rect x="815.1" y="1075.0" width="23.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.1" y="1086.0">s..</text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.20%)</title><rect x="815.8" y="1059.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.10%)</title><rect x="815.8" y="1043.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.10%)</title><rect x="817.0" y="1043.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (2 samples, 0.07%)</title><rect x="817.4" y="1027.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (49 samples, 1.61%)</title><rect x="818.2" y="1059.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (45 samples, 1.48%)</title><rect x="819.7" y="1043.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.7" y="1054.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.03%)</title><rect x="820.5" y="1027.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="823.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.35%)</title><rect x="820.9" y="1027.0" width="15.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="823.9" y="1038.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (1 samples, 0.03%)</title><rect x="820.9" y="1011.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="823.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="820.9" y="995.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="823.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="820.9" y="979.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="823.9" y="990.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.03%)</title><rect x="820.9" y="963.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="823.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="820.9" y="947.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="823.9" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="820.9" y="931.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="823.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.86%)</title><rect x="821.3" y="1011.0" width="10.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="824.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="821.3" y="995.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="824.3" y="1006.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.07%)</title><rect x="821.3" y="979.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="824.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="821.3" y="963.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="824.3" y="974.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.07%)</title><rect x="821.3" y="947.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="824.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="821.3" y="931.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="824.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="821.3" y="915.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="824.3" y="926.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.07%)</title><rect x="821.3" y="899.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="824.3" y="910.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.07%)</title><rect x="821.3" y="883.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.3" y="894.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.07%)</title><rect x="821.3" y="867.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="824.3" y="878.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.07%)</title><rect x="821.3" y="851.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.3" y="862.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.07%)</title><rect x="821.3" y="835.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="824.3" y="846.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="821.3" y="819.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.3" y="830.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="821.7" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="824.7" y="830.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="821.7" y="803.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.7" y="814.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="821.7" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="824.7" y="798.0"></text>
</g>
<g>
<title>__GI___libc_read (24 samples, 0.79%)</title><rect x="822.1" y="995.0" width="9.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="825.1" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.79%)</title><rect x="822.1" y="979.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="825.1" y="990.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="822.1" y="963.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="825.1" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.76%)</title><rect x="822.4" y="963.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="825.4" y="974.0"></text>
</g>
<g>
<title>__x64_sys_read (16 samples, 0.53%)</title><rect x="825.2" y="947.0" width="6.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.2" y="958.0"></text>
</g>
<g>
<title>ksys_read (16 samples, 0.53%)</title><rect x="825.2" y="931.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="828.2" y="942.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="825.5" y="915.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="828.5" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="825.9" y="915.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="828.9" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="825.9" y="899.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="828.9" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="825.9" y="883.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="828.9" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="825.9" y="867.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="828.9" y="878.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="825.9" y="851.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="828.9" y="862.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="825.9" y="835.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="828.9" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="825.9" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="828.9" y="830.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.43%)</title><rect x="826.3" y="915.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.3" y="926.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.16%)</title><rect x="826.3" y="899.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="829.3" y="910.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.16%)</title><rect x="826.3" y="883.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.3" y="894.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.10%)</title><rect x="827.1" y="867.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="830.1" y="878.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="827.9" y="851.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.9" y="862.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="827.9" y="835.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="830.9" y="846.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.23%)</title><rect x="828.3" y="899.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.3" y="910.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.20%)</title><rect x="828.7" y="883.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="831.7" y="894.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="829.0" y="867.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="832.0" y="878.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="829.0" y="851.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="832.0" y="862.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="829.8" y="867.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="832.8" y="878.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.07%)</title><rect x="830.2" y="867.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="833.2" y="878.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="831.0" y="899.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="834.0" y="910.0"></text>
</g>
<g>
<title>__GI___libc_read (14 samples, 0.46%)</title><rect x="831.4" y="1011.0" width="5.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="834.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.40%)</title><rect x="831.4" y="995.0" width="4.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="834.4" y="1006.0"></text>
</g>
<g>
<title>__GI___libc_read (11 samples, 0.36%)</title><rect x="831.4" y="979.0" width="4.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="834.4" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.30%)</title><rect x="832.2" y="963.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="835.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.30%)</title><rect x="832.2" y="947.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.2" y="958.0"></text>
</g>
<g>
<title>__x64_sys_read (9 samples, 0.30%)</title><rect x="832.2" y="931.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="835.2" y="942.0"></text>
</g>
<g>
<title>ksys_read (9 samples, 0.30%)</title><rect x="832.2" y="915.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.2" y="926.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="832.2" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.2" y="910.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.26%)</title><rect x="832.5" y="899.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.5" y="910.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.23%)</title><rect x="832.9" y="883.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="835.9" y="894.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.23%)</title><rect x="832.9" y="867.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="835.9" y="878.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.03%)</title><rect x="832.9" y="851.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="835.9" y="862.0"></text>
</g>
<g>
<title>pipe_read (5 samples, 0.16%)</title><rect x="833.3" y="851.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="836.3" y="862.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.10%)</title><rect x="833.3" y="835.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="836.3" y="846.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.10%)</title><rect x="833.3" y="819.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="836.3" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="833.3" y="803.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="836.3" y="814.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.07%)</title><rect x="834.5" y="835.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="837.5" y="846.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.07%)</title><rect x="834.5" y="819.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="837.5" y="830.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="834.9" y="803.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="837.9" y="814.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="834.9" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="837.9" y="798.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="835.3" y="851.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="838.3" y="862.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="835.7" y="979.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="838.7" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="836.0" y="995.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="839.0" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="836.0" y="979.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="839.0" y="990.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="836.4" y="963.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="839.4" y="974.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="836.4" y="947.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="839.4" y="958.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="836.4" y="931.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="839.4" y="942.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="836.4" y="915.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="839.4" y="926.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="836.4" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.4" y="910.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="836.4" y="883.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="839.4" y="894.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="836.4" y="867.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="839.4" y="878.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="836.4" y="851.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="839.4" y="862.0"></text>
</g>
<g>
<title>read@plt (1 samples, 0.03%)</title><rect x="836.8" y="1027.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="839.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.10%)</title><rect x="837.2" y="1059.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.10%)</title><rect x="837.2" y="1043.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.10%)</title><rect x="837.2" y="1027.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.2" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.10%)</title><rect x="837.2" y="1011.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.03%)</title><rect x="838.0" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.0" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="838.0" y="979.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="841.0" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="838.0" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="841.0" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="838.0" y="947.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="841.0" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="838.0" y="931.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="841.0" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="838.0" y="915.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="841.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.03%)</title><rect x="838.4" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.03%)</title><rect x="838.4" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.4" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="838.4" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="838.4" y="1027.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="838.4" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (5 samples, 0.16%)</title><rect x="838.8" y="1075.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.8" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (5 samples, 0.16%)</title><rect x="838.8" y="1059.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.16%)</title><rect x="838.8" y="1043.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.16%)</title><rect x="838.8" y="1027.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.16%)</title><rect x="838.8" y="1011.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (5 samples, 0.16%)</title><rect x="840.7" y="1075.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (1 samples, 0.03%)</title><rect x="841.9" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.9" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="842.3" y="1059.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="845.3" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="842.3" y="1043.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="845.3" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="842.3" y="1027.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="845.3" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.03%)</title><rect x="842.6" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.03%)</title><rect x="842.6" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.6" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="842.6" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.6" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="842.6" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="842.6" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (21 samples, 0.69%)</title><rect x="843.0" y="1123.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.0" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (21 samples, 0.69%)</title><rect x="843.0" y="1107.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.03%)</title><rect x="843.0" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (20 samples, 0.66%)</title><rect x="843.4" y="1091.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (12 samples, 0.40%)</title><rect x="843.8" y="1075.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.33%)</title><rect x="844.2" y="1059.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="847.2" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.33%)</title><rect x="844.2" y="1043.0" width="3.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="847.2" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.30%)</title><rect x="844.6" y="1027.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="847.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.30%)</title><rect x="844.6" y="1011.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="847.6" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.13%)</title><rect x="846.5" y="995.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="849.5" y="1006.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.13%)</title><rect x="846.5" y="979.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="849.5" y="990.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="846.9" y="963.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="849.9" y="974.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="846.9" y="947.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="849.9" y="958.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="846.9" y="931.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="849.9" y="942.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.07%)</title><rect x="847.3" y="963.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="850.3" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (2 samples, 0.07%)</title><rect x="847.3" y="947.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.3" y="958.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="847.7" y="931.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.7" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.03%)</title><rect x="847.7" y="915.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="850.7" y="926.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="847.7" y="899.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="850.7" y="910.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="847.7" y="883.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.7" y="894.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="848.1" y="1059.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="851.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (5 samples, 0.16%)</title><rect x="848.5" y="1075.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.03%)</title><rect x="848.5" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.03%)</title><rect x="848.9" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.03%)</title><rect x="848.9" y="1043.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="848.9" y="1027.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="851.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="848.9" y="1011.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="851.9" y="1022.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.03%)</title><rect x="848.9" y="995.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="851.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="848.9" y="979.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="851.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="848.9" y="963.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="851.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.10%)</title><rect x="849.2" y="1059.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="849.2" y="1043.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="849.2" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="852.2" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="849.2" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (2 samples, 0.07%)</title><rect x="849.6" y="1043.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (2 samples, 0.07%)</title><rect x="849.6" y="1027.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (2 samples, 0.07%)</title><rect x="849.6" y="1011.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.6" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (1 samples, 0.03%)</title><rect x="850.0" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="850.4" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (1 samples, 0.03%)</title><rect x="850.4" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="850.4" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="850.8" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.8" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (1 samples, 0.03%)</title><rect x="850.8" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="850.8" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (3 samples, 0.10%)</title><rect x="851.2" y="1123.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (3 samples, 0.10%)</title><rect x="851.2" y="1107.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="854.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (3 samples, 0.10%)</title><rect x="851.2" y="1091.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="854.2" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.03%)</title><rect x="852.0" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (818 samples, 26.93%)</title><rect x="852.4" y="1139.0" width="317.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.4" y="1150.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.07%)</title><rect x="852.4" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (44 samples, 1.45%)</title><rect x="853.1" y="1123.0" width="17.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (43 samples, 1.42%)</title><rect x="853.5" y="1107.0" width="16.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.5" y="1118.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.07%)</title><rect x="853.5" y="1091.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="856.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.32%)</title><rect x="854.3" y="1091.0" width="15.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="857.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="854.3" y="1075.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="857.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="854.3" y="1059.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="857.3" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="854.3" y="1043.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="857.3" y="1054.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="854.3" y="1027.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="857.3" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 1.28%)</title><rect x="854.7" y="1075.0" width="15.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="857.7" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 1.28%)</title><rect x="854.7" y="1059.0" width="15.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="857.7" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 1.28%)</title><rect x="854.7" y="1043.0" width="15.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="857.7" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (34 samples, 1.12%)</title><rect x="856.2" y="1027.0" width="13.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="859.2" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (34 samples, 1.12%)</title><rect x="856.2" y="1011.0" width="13.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="859.2" y="1022.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.13%)</title><rect x="857.0" y="995.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="860.0" y="1006.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.13%)</title><rect x="857.0" y="979.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="860.0" y="990.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.13%)</title><rect x="857.0" y="963.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="860.0" y="974.0"></text>
</g>
<g>
<title>ep_poll (27 samples, 0.89%)</title><rect x="858.6" y="995.0" width="10.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.6" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (16 samples, 0.53%)</title><rect x="859.4" y="979.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="862.4" y="990.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.07%)</title><rect x="859.7" y="963.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="862.7" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.43%)</title><rect x="860.5" y="963.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.5" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (9 samples, 0.30%)</title><rect x="862.1" y="947.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="865.1" y="958.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.20%)</title><rect x="863.2" y="931.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="866.2" y="942.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.10%)</title><rect x="864.0" y="915.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="867.0" y="926.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="865.2" y="915.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="868.2" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.30%)</title><rect x="865.6" y="979.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="868.6" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.30%)</title><rect x="865.6" y="963.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.6" y="974.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.20%)</title><rect x="866.7" y="947.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="869.7" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.16%)</title><rect x="867.1" y="931.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="870.1" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.13%)</title><rect x="867.5" y="915.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="870.5" y="926.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="869.1" y="995.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="872.1" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="869.5" y="1027.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="872.5" y="1038.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="869.5" y="1011.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="872.5" y="1022.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="869.5" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.5" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="869.5" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="872.5" y="990.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="869.5" y="963.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="872.5" y="974.0"></text>
</g>
<g>
<title>raise_softirq (1 samples, 0.03%)</title><rect x="869.5" y="947.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="872.5" y="958.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="869.8" y="1091.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="872.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (772 samples, 25.42%)</title><rect x="870.2" y="1123.0" width="300.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.2" y="1134.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (771 samples, 25.39%)</title><rect x="870.6" y="1107.0" width="299.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.6" y="1118.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (695 samples, 22.88%)</title><rect x="871.0" y="1091.0" width="270.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.0" y="1102.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.03%)</title><rect x="874.1" y="1075.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="877.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (667 samples, 21.96%)</title><rect x="874.5" y="1075.0" width="259.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.5" y="1086.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (666 samples, 21.93%)</title><rect x="874.9" y="1059.0" width="258.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.9" y="1070.0">one/nio/http/HttpServer.handleRequ..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (659 samples, 21.70%)</title><rect x="875.3" y="1043.0" width="256.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.3" y="1054.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.07%)</title><rect x="875.3" y="1027.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="875.3" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="875.3" y="995.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="875.3" y="979.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (657 samples, 21.63%)</title><rect x="876.1" y="1027.0" width="255.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.1" y="1038.0">ru/mail/polis/service/codearound/R..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.getNodes (1 samples, 0.03%)</title><rect x="876.1" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="879.1" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.invokeHandlerByMethod (656 samples, 21.60%)</title><rect x="876.4" y="1011.0" width="254.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="879.4" y="1022.0">ru/mail/polis/service/codearound/R..</text>
</g>
<g>
<title>java/util/Set.of (1 samples, 0.03%)</title><rect x="877.2" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.10%)</title><rect x="877.6" y="995.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="880.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="878.0" y="979.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="878.0" y="963.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.0" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.07%)</title><rect x="878.0" y="947.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.07%)</title><rect x="878.0" y="931.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.0" y="942.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.07%)</title><rect x="878.0" y="915.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="878.8" y="995.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.8" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="878.8" y="979.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="881.8" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="878.8" y="963.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="881.8" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="878.8" y="947.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="881.8" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="878.8" y="931.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="881.8" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="878.8" y="915.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="881.8" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="878.8" y="899.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="881.8" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="878.8" y="883.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="881.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (1 samples, 0.03%)</title><rect x="879.2" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="882.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="879.2" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (1 samples, 0.03%)</title><rect x="879.6" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.03%)</title><rect x="879.6" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (647 samples, 21.30%)</title><rect x="879.9" y="995.0" width="251.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.9" y="1006.0">ru/mail/polis/service/codearound/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="881.5" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="884.5" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="881.5" y="963.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="884.5" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="881.5" y="947.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="884.5" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="881.5" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="884.5" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="881.5" y="915.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="884.5" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="881.5" y="899.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="884.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="881.9" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="881.9" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.9" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$136/744653440.get$Lambda (1 samples, 0.03%)</title><rect x="881.9" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.9" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="881.9" y="931.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="884.9" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="881.9" y="915.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="884.9" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="881.9" y="899.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="884.9" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="881.9" y="883.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="884.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="882.3" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.3" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="882.3" y="963.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.3" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="882.3" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.3" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="882.3" y="931.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.3" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="882.3" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.03%)</title><rect x="882.7" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (506 samples, 16.66%)</title><rect x="883.1" y="979.0" width="196.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.1" y="990.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (505 samples, 16.63%)</title><rect x="883.4" y="963.0" width="196.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.4" y="974.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="883.8" y="947.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="886.8" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="883.8" y="931.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="886.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (472 samples, 15.54%)</title><rect x="884.2" y="947.0" width="183.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.2" y="958.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (84 samples, 2.77%)</title><rect x="884.2" y="931.0" width="32.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.2" y="942.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="884.2" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.2" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="884.2" y="899.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.2" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="884.2" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.2" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="884.2" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.2" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (82 samples, 2.70%)</title><rect x="884.6" y="915.0" width="31.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.6" y="926.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (82 samples, 2.70%)</title><rect x="884.6" y="899.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.6" y="910.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.setPriority (8 samples, 0.26%)</title><rect x="884.6" y="883.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (8 samples, 0.26%)</title><rect x="884.6" y="867.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.6" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="885.0" y="851.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="888.0" y="862.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (4 samples, 0.13%)</title><rect x="885.4" y="851.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="888.4" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="885.8" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="888.8" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.07%)</title><rect x="886.2" y="835.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="889.2" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="886.9" y="851.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="889.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="887.3" y="851.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="890.3" y="862.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="887.3" y="835.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="890.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="887.3" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="890.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="887.3" y="803.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="890.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="887.3" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="890.3" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="887.3" y="771.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="890.3" y="782.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="887.3" y="755.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="890.3" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="887.3" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="890.3" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="887.3" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="890.3" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="887.3" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="890.3" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="887.3" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="890.3" y="702.0"></text>
</g>
<g>
<title>put_task_stack (1 samples, 0.03%)</title><rect x="887.3" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="890.3" y="686.0"></text>
</g>
<g>
<title>account_kernel_stack (1 samples, 0.03%)</title><rect x="887.3" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="890.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.addUnstarted (2 samples, 0.07%)</title><rect x="887.7" y="883.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.7" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="888.1" y="867.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="891.1" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="888.1" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="891.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="888.1" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="891.1" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="888.1" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="891.1" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (72 samples, 2.37%)</title><rect x="888.5" y="883.0" width="28.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.5" y="894.0">j..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (6 samples, 0.20%)</title><rect x="891.2" y="867.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.2" y="878.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.calculateFields (1 samples, 0.03%)</title><rect x="891.2" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.2" y="862.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (4 samples, 0.13%)</title><rect x="891.6" y="851.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.start (2 samples, 0.07%)</title><rect x="892.0" y="835.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.0" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="892.8" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.8" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="893.2" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.2" y="862.0"></text>
</g>
<g>
<title>JVM_GetInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="893.2" y="835.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="896.2" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (59 samples, 1.94%)</title><rect x="893.5" y="867.0" width="23.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.5" y="878.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.03%)</title><rect x="893.5" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="896.5" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (6 samples, 0.20%)</title><rect x="893.9" y="851.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="896.9" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (1 samples, 0.03%)</title><rect x="896.3" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="899.3" y="862.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.07%)</title><rect x="896.7" y="851.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="899.7" y="862.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (45 samples, 1.48%)</title><rect x="897.4" y="851.0" width="17.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="900.4" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.07%)</title><rect x="906.4" y="835.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="909.4" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="907.1" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="910.1" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.07%)</title><rect x="907.5" y="835.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="910.5" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="907.5" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="910.5" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="907.5" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="910.5" y="814.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="907.5" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="910.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="907.9" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="910.9" y="830.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="907.9" y="803.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="910.9" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="908.3" y="835.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="911.3" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="908.7" y="835.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="911.7" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="909.9" y="835.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="912.9" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="909.9" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.9" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="909.9" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="912.9" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="909.9" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="912.9" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="909.9" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="912.9" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="909.9" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="912.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="909.9" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="912.9" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.23%)</title><rect x="910.3" y="835.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="913.3" y="846.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (7 samples, 0.23%)</title><rect x="910.3" y="819.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="913.3" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.20%)</title><rect x="910.3" y="803.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="913.3" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (6 samples, 0.20%)</title><rect x="910.3" y="787.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="913.3" y="798.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="912.6" y="803.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="915.6" y="814.0"></text>
</g>
<g>
<title>java_lang_Class::protection_domain(oopDesc*) (1 samples, 0.03%)</title><rect x="913.0" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="916.0" y="846.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (3 samples, 0.10%)</title><rect x="913.4" y="835.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="916.4" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="913.7" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="916.7" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="914.1" y="819.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="917.1" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="914.1" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.1" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="914.1" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="917.1" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="914.5" y="835.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="917.5" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="914.5" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="917.5" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="914.5" y="803.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="917.5" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="914.5" y="787.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="917.5" y="798.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_getStackAccessControlContext (1 samples, 0.03%)</title><rect x="914.9" y="851.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="917.9" y="862.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.07%)</title><rect x="915.3" y="851.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="918.3" y="862.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="916.1" y="851.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="919.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.nextThreadNum (1 samples, 0.03%)</title><rect x="916.5" y="915.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.5" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.start (388 samples, 12.78%)</title><rect x="916.9" y="931.0" width="150.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.9" y="942.0">java/lang/Thread.st..</text>
</g>
<g>
<title>java/lang/Thread.start0 (388 samples, 12.78%)</title><rect x="916.9" y="915.0" width="150.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.9" y="926.0">java/lang/Thread.st..</text>
</g>
<g>
<title>JVM_StartThread (255 samples, 8.40%)</title><rect x="917.2" y="899.0" width="99.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="920.2" y="910.0">JVM_StartThr..</text>
</g>
<g>
<title>G1BarrierSet::on_thread_attach(JavaThread*) (2 samples, 0.07%)</title><rect x="917.2" y="883.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="920.2" y="894.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (25 samples, 0.82%)</title><rect x="918.0" y="883.0" width="9.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="921.0" y="894.0"></text>
</g>
<g>
<title>Arena::operator new(unsigned long, MemoryType) (1 samples, 0.03%)</title><rect x="918.4" y="867.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="921.4" y="878.0"></text>
</g>
<g>
<title>G1BarrierSet::on_thread_create(Thread*) (1 samples, 0.03%)</title><rect x="918.8" y="867.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="921.8" y="878.0"></text>
</g>
<g>
<title>PtrQueue::PtrQueue(PtrQueueSet*, bool, bool) (1 samples, 0.03%)</title><rect x="918.8" y="851.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="921.8" y="862.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (2 samples, 0.07%)</title><rect x="919.2" y="867.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="922.2" y="878.0"></text>
</g>
<g>
<title>__errno_location@plt (1 samples, 0.03%)</title><rect x="919.2" y="851.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="922.2" y="862.0"></text>
</g>
<g>
<title>sem_init@plt (1 samples, 0.03%)</title><rect x="919.6" y="851.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="922.6" y="862.0"></text>
</g>
<g>
<title>JavaThread::initialize() (2 samples, 0.07%)</title><rect x="920.0" y="867.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="923.0" y="878.0"></text>
</g>
<g>
<title>Parker::Allocate(JavaThread*) (1 samples, 0.03%)</title><rect x="920.0" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="923.0" y="862.0"></text>
</g>
<g>
<title>ThreadStatistics::ThreadStatistics() (1 samples, 0.03%)</title><rect x="920.4" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="923.4" y="862.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (1 samples, 0.03%)</title><rect x="920.7" y="867.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="923.7" y="878.0"></text>
</g>
<g>
<title>SATBMarkQueue::SATBMarkQueue(SATBMarkQueueSet*, bool) (1 samples, 0.03%)</title><rect x="921.1" y="867.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="924.1" y="878.0"></text>
</g>
<g>
<title>SafepointMechanism::initialize_header(JavaThread*) (1 samples, 0.03%)</title><rect x="921.5" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="924.5" y="878.0"></text>
</g>
<g>
<title>Thread::Thread() (14 samples, 0.46%)</title><rect x="921.9" y="867.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="924.9" y="878.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="922.7" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="925.7" y="862.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (3 samples, 0.10%)</title><rect x="923.1" y="851.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="926.1" y="862.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (3 samples, 0.10%)</title><rect x="923.1" y="835.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="926.1" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.07%)</title><rect x="923.5" y="819.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="926.5" y="830.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (3 samples, 0.10%)</title><rect x="924.2" y="851.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.2" y="862.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, ResourceObj::allocation_type, MemoryType) (2 samples, 0.07%)</title><rect x="925.4" y="851.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="928.4" y="862.0"></text>
</g>
<g>
<title>Thread::SpinAcquire(int volatile*, char const*) (1 samples, 0.03%)</title><rect x="926.2" y="851.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="929.2" y="862.0"></text>
</g>
<g>
<title>Thread::SpinRelease(int volatile*) (1 samples, 0.03%)</title><rect x="926.6" y="851.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="929.6" y="862.0"></text>
</g>
<g>
<title>ThreadHeapSampler::pick_next_sample(unsigned long) (1 samples, 0.03%)</title><rect x="927.0" y="851.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="930.0" y="862.0"></text>
</g>
<g>
<title>jni_functions() (1 samples, 0.03%)</title><rect x="927.3" y="867.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="930.3" y="878.0"></text>
</g>
<g>
<title>JavaThread::initialize() (1 samples, 0.03%)</title><rect x="927.7" y="883.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="930.7" y="894.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (44 samples, 1.45%)</title><rect x="928.1" y="883.0" width="17.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="931.1" y="894.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (38 samples, 1.25%)</title><rect x="928.9" y="867.0" width="14.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="931.9" y="878.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="929.3" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="932.3" y="862.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="929.3" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="932.3" y="846.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (28 samples, 0.92%)</title><rect x="929.7" y="851.0" width="10.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="932.7" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="940.2" y="835.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="943.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="940.2" y="819.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="943.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="940.2" y="803.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="943.2" y="814.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.07%)</title><rect x="940.6" y="851.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="943.6" y="862.0"></text>
</g>
<g>
<title>__memset_erms (5 samples, 0.16%)</title><rect x="941.3" y="851.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="944.3" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="942.9" y="835.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="945.9" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="942.9" y="819.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="945.9" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="942.9" y="803.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="945.9" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="942.9" y="787.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="945.9" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="942.9" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="945.9" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="942.9" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="945.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="942.9" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.9" y="750.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="943.3" y="851.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="946.3" y="862.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (2 samples, 0.07%)</title><rect x="943.7" y="867.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="946.7" y="878.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.03%)</title><rect x="944.4" y="867.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="947.4" y="878.0"></text>
</g>
<g>
<title>os::set_priority(Thread*, ThreadPriority) (1 samples, 0.03%)</title><rect x="944.8" y="867.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="947.8" y="878.0"></text>
</g>
<g>
<title>Monitor::lock() (12 samples, 0.40%)</title><rect x="945.2" y="883.0" width="4.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="948.2" y="894.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (9 samples, 0.30%)</title><rect x="945.2" y="867.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="948.2" y="878.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="945.6" y="851.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="948.6" y="862.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="946.0" y="851.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="949.0" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.10%)</title><rect x="946.8" y="851.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="949.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="946.8" y="835.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="949.8" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="946.8" y="819.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.8" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="947.9" y="851.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="950.9" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="948.3" y="851.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="951.3" y="862.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.10%)</title><rect x="948.7" y="867.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="951.7" y="878.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (1 samples, 0.03%)</title><rect x="949.9" y="883.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="952.9" y="894.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="949.9" y="867.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="952.9" y="878.0"></text>
</g>
<g>
<title>Thread::start(Thread*) (1 samples, 0.03%)</title><rect x="950.3" y="883.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="953.3" y="894.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="950.3" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="953.3" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="950.7" y="883.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="953.7" y="894.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.03%)</title><rect x="951.0" y="883.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="954.0" y="894.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (158 samples, 5.20%)</title><rect x="951.4" y="883.0" width="61.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="954.4" y="894.0">os::cr..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (13 samples, 0.43%)</title><rect x="951.8" y="867.0" width="5.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="954.8" y="878.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (13 samples, 0.43%)</title><rect x="951.8" y="851.0" width="5.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="954.8" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.26%)</title><rect x="953.0" y="835.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="956.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.20%)</title><rect x="953.8" y="819.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="956.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.20%)</title><rect x="953.8" y="803.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="956.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="955.7" y="787.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="958.7" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="955.7" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.7" y="782.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="955.7" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="958.7" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="956.1" y="835.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="959.1" y="846.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (4 samples, 0.13%)</title><rect x="956.9" y="867.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="959.9" y="878.0"></text>
</g>
<g>
<title>OSThread::pd_initialize() (1 samples, 0.03%)</title><rect x="956.9" y="851.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="959.9" y="862.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="956.9" y="835.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="959.9" y="846.0"></text>
</g>
<g>
<title>__GI_sigemptyset (3 samples, 0.10%)</title><rect x="957.3" y="851.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="960.3" y="862.0"></text>
</g>
<g>
<title>__clone (124 samples, 4.08%)</title><rect x="958.4" y="867.0" width="48.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="961.4" y="878.0">__cl..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (121 samples, 3.98%)</title><rect x="959.6" y="851.0" width="47.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="962.6" y="862.0">entr..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="959.6" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="962.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (120 samples, 3.95%)</title><rect x="960.0" y="835.0" width="46.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="963.0" y="846.0">do_s..</text>
</g>
<g>
<title>__x64_sys_clone (118 samples, 3.89%)</title><rect x="960.8" y="819.0" width="45.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="963.8" y="830.0">__x6..</text>
</g>
<g>
<title>__put_user_4 (1 samples, 0.03%)</title><rect x="960.8" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.8" y="814.0"></text>
</g>
<g>
<title>_do_fork (115 samples, 3.79%)</title><rect x="961.1" y="803.0" width="44.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="964.1" y="814.0">_do_..</text>
</g>
<g>
<title>copy_process.part.34 (95 samples, 3.13%)</title><rect x="961.1" y="787.0" width="37.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.1" y="798.0">cop..</text>
</g>
<g>
<title>__delayacct_tsk_init (1 samples, 0.03%)</title><rect x="964.6" y="771.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="967.6" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="964.6" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="967.6" y="766.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="964.6" y="739.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="967.6" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="964.6" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="967.6" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node (1 samples, 0.03%)</title><rect x="965.0" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="968.0" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="965.0" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="968.0" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="965.0" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.0" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="965.0" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="968.0" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="965.0" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="968.0" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="965.0" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="968.0" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="965.0" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.0" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="965.0" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="968.0" y="670.0"></text>
</g>
<g>
<title>__vmalloc_node_range (21 samples, 0.69%)</title><rect x="965.4" y="771.0" width="8.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="968.4" y="782.0"></text>
</g>
<g>
<title>__get_vm_area_node (7 samples, 0.23%)</title><rect x="965.4" y="755.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.4" y="766.0"></text>
</g>
<g>
<title>alloc_vmap_area (5 samples, 0.16%)</title><rect x="965.8" y="739.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="968.8" y="750.0"></text>
</g>
<g>
<title>__insert_vmap_area (1 samples, 0.03%)</title><rect x="965.8" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="968.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="966.2" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="969.2" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (3 samples, 0.10%)</title><rect x="966.6" y="723.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="969.6" y="734.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="967.0" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="970.0" y="718.0"></text>
</g>
<g>
<title>___slab_alloc (1 samples, 0.03%)</title><rect x="967.0" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="970.0" y="702.0"></text>
</g>
<g>
<title>new_slab (1 samples, 0.03%)</title><rect x="967.0" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.0" y="686.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.03%)</title><rect x="967.0" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.0" y="670.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="967.0" y="643.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="970.0" y="654.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="967.4" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="970.4" y="718.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="967.4" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="970.4" y="702.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (1 samples, 0.03%)</title><rect x="967.8" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="970.8" y="750.0"></text>
</g>
<g>
<title>alloc_pages_current (13 samples, 0.43%)</title><rect x="968.1" y="755.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="971.1" y="766.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (12 samples, 0.40%)</title><rect x="968.5" y="739.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="971.5" y="750.0"></text>
</g>
<g>
<title>clear_page_erms (10 samples, 0.33%)</title><rect x="968.5" y="723.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="971.5" y="734.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="972.4" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.4" y="734.0"></text>
</g>
<g>
<title>kernel_poison_pages (1 samples, 0.03%)</title><rect x="972.8" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="975.8" y="734.0"></text>
</g>
<g>
<title>map_vm_area (1 samples, 0.03%)</title><rect x="973.2" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="976.2" y="766.0"></text>
</g>
<g>
<title>vmap_page_range_noflush (1 samples, 0.03%)</title><rect x="973.2" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="976.2" y="750.0"></text>
</g>
<g>
<title>alloc_pid (7 samples, 0.23%)</title><rect x="973.6" y="771.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="976.6" y="782.0"></text>
</g>
<g>
<title>arch_local_irq_enable (2 samples, 0.07%)</title><rect x="976.3" y="771.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.3" y="782.0"></text>
</g>
<g>
<title>cgroup_can_fork (1 samples, 0.03%)</title><rect x="977.1" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="980.1" y="782.0"></text>
</g>
<g>
<title>cgroup_post_fork (4 samples, 0.13%)</title><rect x="977.5" y="771.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="980.5" y="782.0"></text>
</g>
<g>
<title>copy_semundo (2 samples, 0.07%)</title><rect x="979.0" y="771.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="982.0" y="782.0"></text>
</g>
<g>
<title>cpuset_fork (1 samples, 0.03%)</title><rect x="979.8" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="982.8" y="782.0"></text>
</g>
<g>
<title>find_first_bit (1 samples, 0.03%)</title><rect x="980.2" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.2" y="782.0"></text>
</g>
<g>
<title>find_next_bit (1 samples, 0.03%)</title><rect x="980.6" y="771.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="983.6" y="782.0"></text>
</g>
<g>
<title>get_random_u64 (8 samples, 0.26%)</title><rect x="981.0" y="771.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="984.0" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.20%)</title><rect x="984.1" y="771.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="987.1" y="782.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.20%)</title><rect x="984.1" y="755.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="987.1" y="766.0"></text>
</g>
<g>
<title>memcg_kmem_charge (1 samples, 0.03%)</title><rect x="986.4" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.4" y="782.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="986.4" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="989.4" y="766.0"></text>
</g>
<g>
<title>memcpy_erms (4 samples, 0.13%)</title><rect x="986.8" y="771.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="989.8" y="782.0"></text>
</g>
<g>
<title>perf_event_fork (1 samples, 0.03%)</title><rect x="988.3" y="771.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.3" y="782.0"></text>
</g>
<g>
<title>perf_event_init_task (7 samples, 0.23%)</title><rect x="988.7" y="771.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="991.7" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="989.1" y="755.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="992.1" y="766.0"></text>
</g>
<g>
<title>perf_pin_task_context (4 samples, 0.13%)</title><rect x="989.9" y="755.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="992.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.13%)</title><rect x="989.9" y="739.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="992.9" y="750.0"></text>
</g>
<g>
<title>pids_can_fork (1 samples, 0.03%)</title><rect x="991.5" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="994.5" y="782.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="991.8" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.8" y="782.0"></text>
</g>
<g>
<title>sched_fork (12 samples, 0.40%)</title><rect x="992.2" y="771.0" width="4.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.2" y="782.0"></text>
</g>
<g>
<title>__dl_clear_params (1 samples, 0.03%)</title><rect x="992.2" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.2" y="766.0"></text>
</g>
<g>
<title>__sched_fork (3 samples, 0.10%)</title><rect x="992.6" y="755.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="995.6" y="766.0"></text>
</g>
<g>
<title>init_dl_task_timer (1 samples, 0.03%)</title><rect x="992.6" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="995.6" y="750.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="992.6" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="995.6" y="734.0"></text>
</g>
<g>
<title>init_numa_balancing (2 samples, 0.07%)</title><rect x="993.0" y="739.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="996.0" y="750.0"></text>
</g>
<g>
<title>task_scan_max (1 samples, 0.03%)</title><rect x="993.4" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="996.4" y="734.0"></text>
</g>
<g>
<title>task_scan_min (1 samples, 0.03%)</title><rect x="993.4" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="996.4" y="718.0"></text>
</g>
<g>
<title>task_nr_scan_windows (1 samples, 0.03%)</title><rect x="993.4" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="996.4" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.16%)</title><rect x="993.8" y="755.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="996.8" y="766.0"></text>
</g>
<g>
<title>init_dl_task_timer (2 samples, 0.07%)</title><rect x="995.7" y="755.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.7" y="766.0"></text>
</g>
<g>
<title>init_numa_balancing (1 samples, 0.03%)</title><rect x="996.5" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.5" y="766.0"></text>
</g>
<g>
<title>security_task_alloc (2 samples, 0.07%)</title><rect x="996.9" y="771.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="999.9" y="782.0"></text>
</g>
<g>
<title>apparmor_task_alloc (1 samples, 0.03%)</title><rect x="997.3" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1000.3" y="766.0"></text>
</g>
<g>
<title>task_active_pid_ns (1 samples, 0.03%)</title><rect x="997.7" y="771.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.7" y="782.0"></text>
</g>
<g>
<title>memset_erms (8 samples, 0.26%)</title><rect x="998.1" y="787.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1001.1" y="798.0"></text>
</g>
<g>
<title>wake_up_new_task (12 samples, 0.40%)</title><rect x="1001.2" y="787.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1004.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.40%)</title><rect x="1001.2" y="771.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1004.2" y="782.0"></text>
</g>
<g>
<title>get_task_pid (2 samples, 0.07%)</title><rect x="1005.8" y="803.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1008.8" y="814.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="1006.6" y="867.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1009.6" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1007.0" y="867.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1010.0" y="878.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (14 samples, 0.46%)</title><rect x="1007.4" y="867.0" width="5.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1010.4" y="878.0"></text>
</g>
<g>
<title>os::pd_start_thread(Thread*) (1 samples, 0.03%)</title><rect x="1012.8" y="883.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1015.8" y="894.0"></text>
</g>
<g>
<title>os::set_native_priority(Thread*, int) (1 samples, 0.03%)</title><rect x="1013.2" y="883.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1016.2" y="894.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (4 samples, 0.13%)</title><rect x="1013.6" y="883.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1016.6" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1013.6" y="867.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1016.6" y="878.0"></text>
</g>
<g>
<title>os::pd_start_thread(Thread*) (3 samples, 0.10%)</title><rect x="1014.0" y="867.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1017.0" y="878.0"></text>
</g>
<g>
<title>Monitor::notify() (1 samples, 0.03%)</title><rect x="1014.0" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1017.0" y="862.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (2 samples, 0.07%)</title><rect x="1014.4" y="851.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1017.4" y="862.0"></text>
</g>
<g>
<title>pthread_attr_destroy (1 samples, 0.03%)</title><rect x="1015.2" y="883.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1018.2" y="894.0"></text>
</g>
<g>
<title>pthread_attr_destroy@plt (1 samples, 0.03%)</title><rect x="1015.5" y="883.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1018.5" y="894.0"></text>
</g>
<g>
<title>pthread_attr_init@@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="1015.9" y="883.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1018.9" y="894.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (1 samples, 0.03%)</title><rect x="1016.3" y="899.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1019.3" y="910.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (1 samples, 0.03%)</title><rect x="1016.7" y="899.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1019.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 2.04%)</title><rect x="1017.1" y="899.0" width="24.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1020.1" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1017.1" y="883.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1020.1" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1017.1" y="867.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1020.1" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="1017.5" y="867.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1020.5" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1017.5" y="851.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1020.5" y="862.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.03%)</title><rect x="1017.9" y="883.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1020.9" y="894.0"></text>
</g>
<g>
<title>_IO_padn (1 samples, 0.03%)</title><rect x="1018.3" y="883.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1021.3" y="894.0"></text>
</g>
<g>
<title>__malloc (4 samples, 0.13%)</title><rect x="1018.7" y="883.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1021.7" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1020.2" y="883.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1023.2" y="894.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1020.6" y="883.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1023.6" y="894.0"></text>
</g>
<g>
<title>_int_malloc (8 samples, 0.26%)</title><rect x="1021.0" y="883.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1024.0" y="894.0"></text>
</g>
<g>
<title>malloc_consolidate (4 samples, 0.13%)</title><rect x="1024.1" y="883.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1027.1" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1025.3" y="867.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1028.3" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1025.3" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.3" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1025.3" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1028.3" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1025.3" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1028.3" y="830.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="1025.3" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1028.3" y="814.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="1025.3" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1028.3" y="798.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="1025.3" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.3" y="782.0"></text>
</g>
<g>
<title>exit_creds (1 samples, 0.03%)</title><rect x="1025.3" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.3" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (40 samples, 1.32%)</title><rect x="1025.6" y="883.0" width="15.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1028.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.82%)</title><rect x="1031.5" y="867.0" width="9.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1034.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.82%)</title><rect x="1031.5" y="851.0" width="9.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1034.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.56%)</title><rect x="1034.2" y="835.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1037.2" y="846.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.49%)</title><rect x="1035.0" y="819.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1038.0" y="830.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.33%)</title><rect x="1036.9" y="803.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1039.9" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.13%)</title><rect x="1038.5" y="787.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1041.5" y="798.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="1038.9" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1041.9" y="782.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.07%)</title><rect x="1039.2" y="771.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1042.2" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.07%)</title><rect x="1039.2" y="755.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.2" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.07%)</title><rect x="1039.2" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1042.2" y="750.0"></text>
</g>
<g>
<title>kprobe_flush_task (1 samples, 0.03%)</title><rect x="1039.6" y="723.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1042.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1039.6" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1042.6" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="1040.0" y="787.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1043.0" y="798.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="1040.4" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1043.4" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1040.8" y="835.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1043.8" y="846.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (4 samples, 0.13%)</title><rect x="1041.2" y="899.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1044.2" y="910.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (2 samples, 0.07%)</title><rect x="1041.2" y="883.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1044.2" y="894.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (1 samples, 0.03%)</title><rect x="1042.0" y="883.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1045.0" y="894.0"></text>
</g>
<g>
<title>_itoa_word (1 samples, 0.03%)</title><rect x="1042.4" y="883.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1045.4" y="894.0"></text>
</g>
<g>
<title>__malloc (15 samples, 0.49%)</title><rect x="1042.7" y="899.0" width="5.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1045.7" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (30 samples, 0.99%)</title><rect x="1048.6" y="899.0" width="11.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1051.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.89%)</title><rect x="1049.7" y="883.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1052.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.89%)</title><rect x="1049.7" y="867.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1052.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.76%)</title><rect x="1051.3" y="851.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.3" y="862.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.76%)</title><rect x="1051.3" y="835.0" width="8.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1054.3" y="846.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.76%)</title><rect x="1051.3" y="819.0" width="8.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1054.3" y="830.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1052.1" y="803.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1055.1" y="814.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.66%)</title><rect x="1052.5" y="803.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1055.5" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.66%)</title><rect x="1052.5" y="787.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.5" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.66%)</title><rect x="1052.5" y="771.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1055.5" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1059.8" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1062.8" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1059.8" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1062.8" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1059.8" y="723.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1062.8" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1059.8" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1062.8" y="718.0"></text>
</g>
<g>
<title>rcu_jiffies_till_stall_check (1 samples, 0.03%)</title><rect x="1059.8" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1062.8" y="702.0"></text>
</g>
<g>
<title>_int_malloc (17 samples, 0.56%)</title><rect x="1060.2" y="899.0" width="6.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1063.2" y="910.0"></text>
</g>
<g>
<title>malloc_consolidate (1 samples, 0.03%)</title><rect x="1066.8" y="899.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1069.8" y="910.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (1 samples, 0.03%)</title><rect x="1067.2" y="899.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1070.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (31 samples, 1.02%)</title><rect x="1067.6" y="947.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1070.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (30 samples, 0.99%)</title><rect x="1068.0" y="931.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.0" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1068.0" y="915.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.0" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1068.0" y="899.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1071.0" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1068.0" y="883.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1071.0" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1068.0" y="867.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1071.0" y="878.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="1068.0" y="851.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.0" y="862.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="1068.0" y="835.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1071.0" y="846.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.03%)</title><rect x="1068.0" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1071.0" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1068.0" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1071.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.07%)</title><rect x="1068.4" y="915.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="1068.4" y="899.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 0.89%)</title><rect x="1069.2" y="915.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.89%)</title><rect x="1069.2" y="899.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1072.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 0.89%)</title><rect x="1069.2" y="883.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1072.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.89%)</title><rect x="1069.2" y="867.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1072.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.89%)</title><rect x="1069.2" y="851.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.2" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.20%)</title><rect x="1069.2" y="835.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1072.2" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="1069.9" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1072.9" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="1070.3" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.3" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.07%)</title><rect x="1070.7" y="819.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1073.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.59%)</title><rect x="1071.5" y="835.0" width="7.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1074.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.53%)</title><rect x="1072.3" y="819.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1075.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.53%)</title><rect x="1072.3" y="803.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1075.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.46%)</title><rect x="1073.0" y="787.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1076.0" y="798.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.43%)</title><rect x="1073.4" y="771.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1076.4" y="782.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.43%)</title><rect x="1073.4" y="755.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1076.4" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="1073.8" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1076.8" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1073.8" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1076.8" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1073.8" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1076.8" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1073.8" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1076.8" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1073.8" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1076.8" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1073.8" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1076.8" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1073.8" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1076.8" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1073.8" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1076.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.36%)</title><rect x="1074.2" y="739.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1077.2" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.36%)</title><rect x="1074.2" y="723.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1077.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.36%)</title><rect x="1074.2" y="707.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1077.2" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="1078.5" y="835.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1081.5" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1079.3" y="819.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1082.3" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1079.3" y="803.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1082.3" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1079.3" y="787.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1082.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.03%)</title><rect x="1079.7" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.03%)</title><rect x="1079.7" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="1079.7" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (78 samples, 2.57%)</title><rect x="1080.0" y="979.0" width="30.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.0" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (78 samples, 2.57%)</title><rect x="1080.0" y="963.0" width="30.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.0" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (77 samples, 2.54%)</title><rect x="1080.4" y="947.0" width="29.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.4" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (77 samples, 2.54%)</title><rect x="1080.4" y="931.0" width="29.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.4" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (49 samples, 1.61%)</title><rect x="1080.4" y="915.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1080.4" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1083.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1 samples, 0.03%)</title><rect x="1080.4" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.4" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.10%)</title><rect x="1080.8" y="899.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.8" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="1080.8" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1083.8" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="1080.8" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.8" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="1080.8" y="851.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1083.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="1080.8" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.8" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="1080.8" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1083.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="1080.8" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="1080.8" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="1080.8" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1083.8" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="1081.2" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="1081.2" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1084.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.03%)</title><rect x="1081.2" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.2" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="1081.2" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.03%)</title><rect x="1081.6" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="1081.6" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.03%)</title><rect x="1081.6" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.6" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.26%)</title><rect x="1082.0" y="899.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1085.0" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.20%)</title><rect x="1082.8" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.8" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (6 samples, 0.20%)</title><rect x="1082.8" y="867.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.8" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.20%)</title><rect x="1082.8" y="851.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.8" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (5 samples, 0.16%)</title><rect x="1082.8" y="835.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.8" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.16%)</title><rect x="1082.8" y="819.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.07%)</title><rect x="1082.8" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.8" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (1 samples, 0.03%)</title><rect x="1083.2" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.2" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="1083.2" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/360062456.test (1 samples, 0.03%)</title><rect x="1083.2" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.03%)</title><rect x="1083.2" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2084663827.test (1 samples, 0.03%)</title><rect x="1083.2" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.03%)</title><rect x="1083.2" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.2" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="1083.2" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.03%)</title><rect x="1083.2" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.03%)</title><rect x="1083.2" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="1083.2" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="1083.2" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.03%)</title><rect x="1083.5" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.07%)</title><rect x="1083.9" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.07%)</title><rect x="1083.9" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.07%)</title><rect x="1083.9" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.07%)</title><rect x="1083.9" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="1084.7" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.03%)</title><rect x="1085.1" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1085.1" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (34 samples, 1.12%)</title><rect x="1085.5" y="899.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.5" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (34 samples, 1.12%)</title><rect x="1085.5" y="883.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1085.5" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1085.5" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1088.5" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 1.09%)</title><rect x="1085.9" y="867.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1088.9" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="1085.9" y="851.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.9" y="862.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.03%)</title><rect x="1086.3" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1089.3" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (24 samples, 0.79%)</title><rect x="1086.6" y="851.0" width="9.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1089.6" y="862.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="1087.0" y="835.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1090.0" y="846.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.03%)</title><rect x="1087.4" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1090.4" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.10%)</title><rect x="1087.8" y="835.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1090.8" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (3 samples, 0.10%)</title><rect x="1087.8" y="819.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.8" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.16%)</title><rect x="1089.0" y="835.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1092.0" y="846.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.03%)</title><rect x="1089.4" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1092.4" y="830.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="1089.8" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1092.8" y="830.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.03%)</title><rect x="1090.1" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1093.1" y="830.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="1090.5" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1093.5" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="1090.9" y="835.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1093.9" y="846.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.03%)</title><rect x="1091.3" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1094.3" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.20%)</title><rect x="1091.7" y="835.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1094.7" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.16%)</title><rect x="1092.1" y="819.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1095.1" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.10%)</title><rect x="1092.1" y="803.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1095.1" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="1093.3" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1096.3" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1093.3" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1096.3" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1093.3" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1096.3" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1093.3" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1096.3" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1093.3" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1096.3" y="750.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="1093.3" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1096.3" y="734.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="1093.3" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1096.3" y="718.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.03%)</title><rect x="1093.3" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1096.3" y="702.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.03%)</title><rect x="1093.3" y="675.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1096.3" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1093.3" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1096.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1093.3" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1096.3" y="654.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="1093.6" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.6" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.16%)</title><rect x="1094.0" y="835.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.0" y="846.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="1094.4" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1097.4" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.10%)</title><rect x="1094.8" y="819.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1097.8" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.10%)</title><rect x="1094.8" y="803.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.8" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.07%)</title><rect x="1094.8" y="787.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1097.8" y="798.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.07%)</title><rect x="1094.8" y="771.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1097.8" y="782.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="1095.6" y="787.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1098.6" y="798.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7 samples, 0.23%)</title><rect x="1096.0" y="851.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.0" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (7 samples, 0.23%)</title><rect x="1096.0" y="835.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="1096.4" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1099.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1096.4" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1096.4" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.4" y="798.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (5 samples, 0.16%)</title><rect x="1096.8" y="819.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.8" y="830.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.03%)</title><rect x="1096.8" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.8" y="814.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="1096.8" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.8" y="798.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="1096.8" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="1096.8" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="1096.8" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1099.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="1096.8" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.8" y="734.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.13%)</title><rect x="1097.1" y="803.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1100.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.13%)</title><rect x="1097.1" y="787.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.13%)</title><rect x="1097.1" y="771.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.13%)</title><rect x="1097.1" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.1" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1098.3" y="739.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1101.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.07%)</title><rect x="1098.7" y="899.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.7" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="1098.7" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.7" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="1098.7" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.7" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="1098.7" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1101.7" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="1098.7" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.7" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="1098.7" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.7" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="1099.1" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1102.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (16 samples, 0.53%)</title><rect x="1099.5" y="915.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (4 samples, 0.13%)</title><rect x="1100.2" y="899.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1103.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.03%)</title><rect x="1101.8" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (1 samples, 0.03%)</title><rect x="1102.2" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1105.2" y="910.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.03%)</title><rect x="1102.2" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.2" y="894.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.03%)</title><rect x="1102.2" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.2" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="1102.2" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1105.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (8 samples, 0.26%)</title><rect x="1102.6" y="899.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (7 samples, 0.23%)</title><rect x="1103.0" y="883.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.07%)</title><rect x="1103.0" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.07%)</title><rect x="1103.0" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (2 samples, 0.07%)</title><rect x="1103.0" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.03%)</title><rect x="1103.7" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.7" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.03%)</title><rect x="1103.7" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.7" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.03%)</title><rect x="1103.7" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.7" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.03%)</title><rect x="1103.7" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (3 samples, 0.10%)</title><rect x="1104.1" y="867.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.1" y="878.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="1105.3" y="867.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1108.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (12 samples, 0.40%)</title><rect x="1105.7" y="915.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (12 samples, 0.40%)</title><rect x="1105.7" y="899.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.40%)</title><rect x="1105.7" y="883.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (12 samples, 0.40%)</title><rect x="1105.7" y="867.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="1105.7" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1108.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="1105.7" y="835.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.36%)</title><rect x="1106.1" y="851.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.36%)</title><rect x="1106.1" y="835.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.36%)</title><rect x="1106.1" y="819.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.36%)</title><rect x="1106.1" y="803.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1109.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.33%)</title><rect x="1106.5" y="787.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="1106.5" y="771.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1109.5" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1106.9" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.26%)</title><rect x="1107.2" y="771.0" width="3.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1110.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.26%)</title><rect x="1107.2" y="755.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1110.2" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.26%)</title><rect x="1107.2" y="739.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1110.2" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.23%)</title><rect x="1107.6" y="723.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1110.6" y="734.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.23%)</title><rect x="1107.6" y="707.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1110.6" y="718.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.23%)</title><rect x="1107.6" y="691.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1110.6" y="702.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.23%)</title><rect x="1107.6" y="675.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1110.6" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.23%)</title><rect x="1107.6" y="659.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.6" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.23%)</title><rect x="1107.6" y="643.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1110.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.PUT (1 samples, 0.03%)</title><rect x="1110.3" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (18 samples, 0.59%)</title><rect x="1110.7" y="979.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (17 samples, 0.56%)</title><rect x="1111.1" y="963.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.1" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (17 samples, 0.56%)</title><rect x="1111.1" y="947.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.1" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (17 samples, 0.56%)</title><rect x="1111.1" y="931.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.1" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1112.3" y="915.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1115.3" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1112.3" y="899.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1115.3" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1112.3" y="883.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.3" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1112.3" y="867.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1115.3" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1112.3" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1115.3" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.43%)</title><rect x="1112.7" y="915.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.7" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (11 samples, 0.36%)</title><rect x="1113.5" y="899.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.5" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.36%)</title><rect x="1113.5" y="883.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.5" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (1 samples, 0.03%)</title><rect x="1113.8" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.8" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.26%)</title><rect x="1114.2" y="867.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.2" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (7 samples, 0.23%)</title><rect x="1114.6" y="851.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.6" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (7 samples, 0.23%)</title><rect x="1114.6" y="835.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.10%)</title><rect x="1115.0" y="819.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1118.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.10%)</title><rect x="1115.0" y="803.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2084663827.test (2 samples, 0.07%)</title><rect x="1115.4" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2084663827.test (3 samples, 0.10%)</title><rect x="1116.2" y="819.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.10%)</title><rect x="1116.2" y="803.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.2" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.10%)</title><rect x="1116.2" y="787.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.10%)</title><rect x="1116.2" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.10%)</title><rect x="1116.2" y="755.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.10%)</title><rect x="1116.2" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.2" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.10%)</title><rect x="1116.2" y="723.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.07%)</title><rect x="1116.6" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.07%)</title><rect x="1116.6" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.07%)</title><rect x="1116.6" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="1117.3" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="1117.3" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="1117.3" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="1117.3" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.03%)</title><rect x="1117.7" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.setRequestPattern (34 samples, 1.12%)</title><rect x="1118.1" y="979.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.1" y="990.0"></text>
</g>
<g>
<title>java/net/URI.create (26 samples, 0.86%)</title><rect x="1118.1" y="963.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.1" y="974.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (26 samples, 0.86%)</title><rect x="1118.1" y="947.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.1" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (26 samples, 0.86%)</title><rect x="1118.1" y="931.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.1" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (3 samples, 0.10%)</title><rect x="1119.7" y="915.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.7" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.10%)</title><rect x="1119.7" y="899.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.7" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.10%)</title><rect x="1119.7" y="883.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.7" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="1120.8" y="915.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1123.8" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="1120.8" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.8" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (18 samples, 0.59%)</title><rect x="1121.2" y="915.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.2" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.10%)</title><rect x="1121.2" y="899.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.2" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.10%)</title><rect x="1121.2" y="883.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.2" y="894.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="1122.0" y="867.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1125.0" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (15 samples, 0.49%)</title><rect x="1122.4" y="899.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.4" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.20%)</title><rect x="1122.8" y="883.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.8" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.13%)</title><rect x="1122.8" y="867.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1125.8" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.13%)</title><rect x="1122.8" y="851.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1125.8" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.07%)</title><rect x="1124.3" y="867.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="1124.3" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="1124.3" y="835.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.3" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.26%)</title><rect x="1125.1" y="883.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.20%)</title><rect x="1125.5" y="867.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1128.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.20%)</title><rect x="1125.5" y="851.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.20%)</title><rect x="1125.5" y="835.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.03%)</title><rect x="1127.8" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.23%)</title><rect x="1128.2" y="963.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.23%)</title><rect x="1128.2" y="947.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (5 samples, 0.16%)</title><rect x="1128.2" y="931.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2084663827.test (5 samples, 0.16%)</title><rect x="1128.2" y="915.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.10%)</title><rect x="1129.0" y="899.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.0" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.10%)</title><rect x="1129.0" y="883.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.0" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="1129.0" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.0" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="1129.0" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="1129.0" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="1129.0" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="1129.0" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.0" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.03%)</title><rect x="1129.0" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.0" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.07%)</title><rect x="1129.4" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.4" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.07%)</title><rect x="1129.4" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.4" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.07%)</title><rect x="1129.4" y="835.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.4" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.07%)</title><rect x="1129.4" y="819.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.07%)</title><rect x="1129.4" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.07%)</title><rect x="1129.4" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1132.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.07%)</title><rect x="1129.4" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.03%)</title><rect x="1130.2" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="1130.2" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.2" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1130.2" y="899.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1133.2" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1130.2" y="883.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 0.03%)</title><rect x="1130.6" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.03%)</title><rect x="1130.9" y="963.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.03%)</title><rect x="1130.9" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.03%)</title><rect x="1130.9" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="1130.9" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.20%)</title><rect x="1131.3" y="1043.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.20%)</title><rect x="1131.3" y="1027.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.13%)</title><rect x="1131.3" y="1011.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1134.3" y="1022.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.03%)</title><rect x="1131.7" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.7" y="1006.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="1132.1" y="995.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1135.1" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="1132.9" y="1011.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="1132.9" y="995.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1135.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="1133.3" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.36%)</title><rect x="1133.7" y="1075.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.23%)</title><rect x="1133.7" y="1059.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.20%)</title><rect x="1134.1" y="1043.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.1" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="1134.8" y="1027.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.8" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1134.8" y="1011.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1137.8" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1135.2" y="1011.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.2" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1135.2" y="995.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.2" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1135.2" y="979.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.2" y="990.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="1135.2" y="963.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.2" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1135.6" y="1027.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1138.6" y="1038.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1135.6" y="1011.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1138.6" y="1022.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1135.6" y="995.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1138.6" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1135.6" y="979.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1138.6" y="990.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="1135.6" y="963.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1138.6" y="974.0"></text>
</g>
<g>
<title>fasync_free_rcu (1 samples, 0.03%)</title><rect x="1135.6" y="947.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1138.6" y="958.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1135.6" y="931.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1136.0" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1136.0" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="1136.0" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1139.0" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1136.0" y="979.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1139.0" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1136.0" y="963.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1139.0" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1136.0" y="947.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.0" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1136.0" y="931.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.0" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1136.0" y="915.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.13%)</title><rect x="1136.4" y="1059.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.16%)</title><rect x="1137.9" y="1075.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.16%)</title><rect x="1137.9" y="1059.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.16%)</title><rect x="1137.9" y="1043.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.10%)</title><rect x="1138.3" y="1027.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.10%)</title><rect x="1138.3" y="1011.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.10%)</title><rect x="1138.3" y="995.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.3" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1139.5" y="1027.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1142.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="1139.9" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1140.3" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1140.7" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.7" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1140.7" y="1043.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1143.7" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1140.7" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.7" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1140.7" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1143.7" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1140.7" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.7" y="1006.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="1140.7" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1143.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (75 samples, 2.47%)</title><rect x="1141.0" y="1091.0" width="29.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.0" y="1102.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (72 samples, 2.37%)</title><rect x="1141.0" y="1075.0" width="28.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1144.0" y="1086.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.30%)</title><rect x="1141.0" y="1059.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1144.0" y="1070.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.20%)</title><rect x="1141.0" y="1043.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1144.0" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.10%)</title><rect x="1143.4" y="1043.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1146.4" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.07%)</title><rect x="1143.4" y="1027.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.4" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="1144.2" y="1027.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1147.2" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="1144.2" y="1011.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.2" y="1022.0"></text>
</g>
<g>
<title>__GI___recv (62 samples, 2.04%)</title><rect x="1144.5" y="1059.0" width="24.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1147.5" y="1070.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 2.01%)</title><rect x="1144.9" y="1043.0" width="23.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1147.9" y="1054.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="1144.9" y="1027.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1147.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 1.98%)</title><rect x="1145.3" y="1027.0" width="23.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1148.3" y="1038.0">d..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="1146.5" y="1011.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1149.5" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (56 samples, 1.84%)</title><rect x="1146.9" y="1011.0" width="21.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1149.9" y="1022.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (56 samples, 1.84%)</title><rect x="1146.9" y="995.0" width="21.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.9" y="1006.0">_..</text>
</g>
<g>
<title>sock_recvmsg (55 samples, 1.81%)</title><rect x="1146.9" y="979.0" width="21.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.9" y="990.0">s..</text>
</g>
<g>
<title>inet_recvmsg (48 samples, 1.58%)</title><rect x="1147.3" y="963.0" width="18.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1150.3" y="974.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.07%)</title><rect x="1148.0" y="947.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.0" y="958.0"></text>
</g>
<g>
<title>tcp_recvmsg (44 samples, 1.45%)</title><rect x="1148.8" y="947.0" width="17.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1151.8" y="958.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.13%)</title><rect x="1149.6" y="931.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1152.6" y="942.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.13%)</title><rect x="1149.6" y="915.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.6" y="926.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1149.6" y="899.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1152.6" y="910.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.10%)</title><rect x="1150.0" y="899.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.0" y="910.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.07%)</title><rect x="1150.0" y="883.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1153.0" y="894.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="1150.8" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1153.8" y="894.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.13%)</title><rect x="1151.1" y="931.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1154.1" y="942.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.13%)</title><rect x="1151.1" y="915.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1154.1" y="926.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.10%)</title><rect x="1151.5" y="899.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1154.5" y="910.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="1151.5" y="883.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1154.5" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="1151.9" y="867.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1154.9" y="878.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="1152.3" y="883.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.3" y="894.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (33 samples, 1.09%)</title><rect x="1152.7" y="931.0" width="12.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1155.7" y="942.0"></text>
</g>
<g>
<title>tcp_send_ack (32 samples, 1.05%)</title><rect x="1153.1" y="915.0" width="12.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1156.1" y="926.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (32 samples, 1.05%)</title><rect x="1153.1" y="899.0" width="12.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1156.1" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.03%)</title><rect x="1153.1" y="883.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1156.1" y="894.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="1153.1" y="867.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1156.1" y="878.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (28 samples, 0.92%)</title><rect x="1153.5" y="883.0" width="10.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1156.5" y="894.0"></text>
</g>
<g>
<title>ip_queue_xmit (28 samples, 0.92%)</title><rect x="1153.5" y="867.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1156.5" y="878.0"></text>
</g>
<g>
<title>__ip_queue_xmit (26 samples, 0.86%)</title><rect x="1153.5" y="851.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1156.5" y="862.0"></text>
</g>
<g>
<title>ip_local_out (25 samples, 0.82%)</title><rect x="1153.9" y="835.0" width="9.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1156.9" y="846.0"></text>
</g>
<g>
<title>ip_output (24 samples, 0.79%)</title><rect x="1153.9" y="819.0" width="9.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1156.9" y="830.0"></text>
</g>
<g>
<title>ip_finish_output (24 samples, 0.79%)</title><rect x="1153.9" y="803.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1156.9" y="814.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="1154.3" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1157.3" y="798.0"></text>
</g>
<g>
<title>ip_finish_output2 (22 samples, 0.72%)</title><rect x="1154.6" y="787.0" width="8.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1157.6" y="798.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (18 samples, 0.59%)</title><rect x="1154.6" y="771.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1157.6" y="782.0"></text>
</g>
<g>
<title>do_softirq.part.21 (18 samples, 0.59%)</title><rect x="1154.6" y="755.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1157.6" y="766.0"></text>
</g>
<g>
<title>do_softirq_own_stack (18 samples, 0.59%)</title><rect x="1154.6" y="739.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.6" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (18 samples, 0.59%)</title><rect x="1154.6" y="723.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1157.6" y="734.0"></text>
</g>
<g>
<title>net_rx_action (17 samples, 0.56%)</title><rect x="1155.0" y="707.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1158.0" y="718.0"></text>
</g>
<g>
<title>process_backlog (17 samples, 0.56%)</title><rect x="1155.0" y="691.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1158.0" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb (17 samples, 0.56%)</title><rect x="1155.0" y="675.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.0" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (17 samples, 0.56%)</title><rect x="1155.0" y="659.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1158.0" y="670.0"></text>
</g>
<g>
<title>ip_rcv (17 samples, 0.56%)</title><rect x="1155.0" y="643.0" width="6.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.0" y="654.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.03%)</title><rect x="1155.0" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.0" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (16 samples, 0.53%)</title><rect x="1155.4" y="627.0" width="6.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1158.4" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver (16 samples, 0.53%)</title><rect x="1155.4" y="611.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1158.4" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (16 samples, 0.53%)</title><rect x="1155.4" y="595.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1158.4" y="606.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 0.53%)</title><rect x="1155.4" y="579.0" width="6.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.4" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 0.49%)</title><rect x="1155.8" y="563.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1158.8" y="574.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.07%)</title><rect x="1156.6" y="547.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.6" y="558.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="1157.4" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.4" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (10 samples, 0.33%)</title><rect x="1157.8" y="547.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.8" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_established (10 samples, 0.33%)</title><rect x="1157.8" y="531.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.8" y="542.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="1157.8" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.8" y="526.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1157.8" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.8" y="510.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.26%)</title><rect x="1158.1" y="515.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.1" y="526.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="1158.5" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1161.5" y="510.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.20%)</title><rect x="1158.9" y="499.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1161.9" y="510.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="1159.7" y="483.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1162.7" y="494.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.07%)</title><rect x="1159.7" y="467.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.7" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.07%)</title><rect x="1159.7" y="451.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.7" y="462.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="1160.1" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.1" y="446.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="1160.5" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.5" y="478.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1160.5" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.5" y="462.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="1160.5" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.5" y="446.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="1160.5" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1163.5" y="430.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.03%)</title><rect x="1160.9" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.9" y="494.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="1161.2" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.2" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1161.2" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.2" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1161.2" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1164.2" y="494.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.13%)</title><rect x="1161.6" y="771.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1164.6" y="782.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.13%)</title><rect x="1161.6" y="755.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1164.6" y="766.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.10%)</title><rect x="1161.6" y="739.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1164.6" y="750.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.10%)</title><rect x="1161.6" y="723.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.6" y="734.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="1162.8" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.8" y="750.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="1163.2" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1166.2" y="830.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.07%)</title><rect x="1163.6" y="851.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1166.6" y="862.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.07%)</title><rect x="1164.4" y="883.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1167.4" y="894.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="1165.1" y="883.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1168.1" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="1165.5" y="931.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1168.5" y="942.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.20%)</title><rect x="1165.9" y="963.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1168.9" y="974.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="1165.9" y="947.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1168.9" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.16%)</title><rect x="1166.3" y="947.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1169.3" y="958.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.16%)</title><rect x="1166.3" y="931.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1169.3" y="942.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="1167.1" y="915.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1170.1" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="1168.2" y="979.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.2" y="990.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1168.2" y="963.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.2" y="974.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1168.2" y="947.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1171.2" y="958.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1168.2" y="931.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1171.2" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="1168.6" y="1059.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1171.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.10%)</title><rect x="1169.0" y="1075.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1172.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.03%)</title><rect x="1169.8" y="1059.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.8" y="1070.0"></text>
</g>
<g>
<title>start_thread (51 samples, 1.68%)</title><rect x="1170.2" y="1139.0" width="19.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1173.2" y="1150.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (51 samples, 1.68%)</title><rect x="1170.2" y="1123.0" width="19.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1173.2" y="1134.0"></text>
</g>
<g>
<title>Thread::call_run() (51 samples, 1.68%)</title><rect x="1170.2" y="1107.0" width="19.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.2" y="1118.0"></text>
</g>
<g>
<title>GangWorker::loop() (17 samples, 0.56%)</title><rect x="1170.2" y="1091.0" width="6.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.2" y="1102.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (17 samples, 0.56%)</title><rect x="1170.2" y="1075.0" width="6.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.2" y="1086.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.10%)</title><rect x="1170.2" y="1059.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.2" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.03%)</title><rect x="1170.2" y="1043.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.2" y="1054.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="1170.2" y="1027.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1173.2" y="1038.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="1170.6" y="1043.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1173.6" y="1054.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (8 samples, 0.26%)</title><rect x="1171.4" y="1059.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.4" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (8 samples, 0.26%)</title><rect x="1171.4" y="1043.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.4" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (8 samples, 0.26%)</title><rect x="1171.4" y="1027.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.4" y="1038.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (8 samples, 0.26%)</title><rect x="1171.4" y="1011.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.4" y="1022.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (8 samples, 0.26%)</title><rect x="1171.4" y="995.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.4" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1171.4" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.4" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.07%)</title><rect x="1171.7" y="979.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.7" y="990.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="1172.1" y="963.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1175.1" y="974.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (5 samples, 0.16%)</title><rect x="1172.5" y="979.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.5" y="990.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (4 samples, 0.13%)</title><rect x="1172.5" y="963.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.5" y="974.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.07%)</title><rect x="1172.9" y="947.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.9" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1173.7" y="947.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.7" y="958.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.03%)</title><rect x="1174.1" y="963.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.1" y="974.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.20%)</title><rect x="1174.5" y="1059.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.5" y="1070.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (2 samples, 0.07%)</title><rect x="1174.5" y="1043.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.5" y="1054.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.07%)</title><rect x="1175.2" y="1043.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.2" y="1054.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.03%)</title><rect x="1175.2" y="1027.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.2" y="1038.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1175.6" y="1027.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.6" y="1038.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1175.6" y="1011.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.6" y="1022.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="1175.6" y="995.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.6" y="1006.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.07%)</title><rect x="1176.0" y="1043.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.0" y="1054.0"></text>
</g>
<g>
<title>JavaThread::run() (27 samples, 0.89%)</title><rect x="1176.8" y="1091.0" width="10.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.8" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (27 samples, 0.89%)</title><rect x="1176.8" y="1075.0" width="10.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.8" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (27 samples, 0.89%)</title><rect x="1176.8" y="1059.0" width="10.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.8" y="1070.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (27 samples, 0.89%)</title><rect x="1176.8" y="1043.0" width="10.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.8" y="1054.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (27 samples, 0.89%)</title><rect x="1176.8" y="1027.0" width="10.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.8" y="1038.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (20 samples, 0.66%)</title><rect x="1176.8" y="1011.0" width="7.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.8" y="1022.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.03%)</title><rect x="1176.8" y="995.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.8" y="1006.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="1176.8" y="979.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1179.8" y="990.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.03%)</title><rect x="1177.2" y="995.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.2" y="1006.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.03%)</title><rect x="1177.2" y="979.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.2" y="990.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.03%)</title><rect x="1177.2" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.2" y="974.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.07%)</title><rect x="1177.6" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.6" y="1006.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.07%)</title><rect x="1177.6" y="979.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.6" y="990.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.03%)</title><rect x="1178.0" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.0" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.07%)</title><rect x="1178.3" y="995.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.3" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.07%)</title><rect x="1178.3" y="979.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.3" y="990.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.03%)</title><rect x="1178.3" y="963.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.3" y="974.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1178.3" y="947.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.3" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1178.3" y="931.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.3" y="942.0"></text>
</g>
<g>
<title>bytes_reverse_intNode::out_RegMask() const (1 samples, 0.03%)</title><rect x="1178.7" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.7" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (14 samples, 0.46%)</title><rect x="1179.1" y="995.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.1" y="1006.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.03%)</title><rect x="1179.1" y="979.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.1" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.03%)</title><rect x="1179.5" y="979.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.5" y="990.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.03%)</title><rect x="1179.5" y="963.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.5" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.07%)</title><rect x="1179.9" y="979.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.9" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.13%)</title><rect x="1180.7" y="979.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.7" y="990.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.03%)</title><rect x="1180.7" y="963.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.7" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.07%)</title><rect x="1181.1" y="963.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.1" y="974.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="1181.1" y="947.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.1" y="958.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.03%)</title><rect x="1181.5" y="947.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.5" y="958.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.03%)</title><rect x="1181.8" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.8" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.10%)</title><rect x="1182.2" y="979.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.2" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.03%)</title><rect x="1183.4" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.4" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.03%)</title><rect x="1183.4" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.4" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.03%)</title><rect x="1183.8" y="979.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.8" y="990.0"></text>
</g>
<g>
<title>checkCastPPNode::ideal_Opcode() const (1 samples, 0.03%)</title><rect x="1184.2" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.2" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.16%)</title><rect x="1184.6" y="1011.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.6" y="1022.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.03%)</title><rect x="1184.6" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.6" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.03%)</title><rect x="1184.6" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.6" y="990.0"></text>
</g>
<g>
<title>SuperWord::SuperWord(PhaseIdealLoop*) (1 samples, 0.03%)</title><rect x="1184.6" y="963.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.07%)</title><rect x="1184.9" y="995.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.9" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1184.9" y="979.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.9" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.03%)</title><rect x="1185.3" y="979.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.3" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.07%)</title><rect x="1185.7" y="995.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.07%)</title><rect x="1185.7" y="979.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.7" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::is_IterGVN() (1 samples, 0.03%)</title><rect x="1185.7" y="963.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.7" y="974.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1186.1" y="963.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.1" y="974.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.03%)</title><rect x="1186.1" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.1" y="958.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.03%)</title><rect x="1186.1" y="931.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.1" y="942.0"></text>
</g>
<g>
<title>Type::hash() const (1 samples, 0.03%)</title><rect x="1186.1" y="915.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.1" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1186.5" y="1011.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.5" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1186.5" y="995.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1186.5" y="979.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1186.5" y="963.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1186.5" y="947.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1186.5" y="931.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.5" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1186.5" y="915.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1186.5" y="899.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1186.5" y="883.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1186.5" y="867.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1186.5" y="851.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1186.5" y="835.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1186.5" y="819.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1186.5" y="803.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1186.5" y="787.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1186.5" y="771.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1186.5" y="755.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1186.5" y="739.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1186.5" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1186.5" y="707.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1186.5" y="691.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1186.5" y="675.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1186.5" y="659.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1186.5" y="643.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1186.5" y="627.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.5" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1186.5" y="611.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1186.5" y="595.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1186.5" y="579.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1186.5" y="563.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1186.5" y="547.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.5" y="558.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.03%)</title><rect x="1186.5" y="531.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.5" y="542.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.03%)</title><rect x="1186.5" y="515.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.5" y="526.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1186.5" y="499.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="510.0"></text>
</g>
<g>
<title>TypeFunc::hash() const (1 samples, 0.03%)</title><rect x="1186.5" y="483.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.5" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1186.9" y="531.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1186.9" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1186.9" y="499.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1186.9" y="483.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1186.9" y="467.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1186.9" y="451.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.9" y="462.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1186.9" y="435.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.9" y="446.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1186.9" y="419.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="430.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::method_if_resolved(constantPoolHandle const&amp;) (1 samples, 0.03%)</title><rect x="1186.9" y="403.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.9" y="414.0"></text>
</g>
<g>
<title>VMThread::run() (7 samples, 0.23%)</title><rect x="1187.3" y="1091.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="1102.0"></text>
</g>
<g>
<title>VMThread::loop() (7 samples, 0.23%)</title><rect x="1187.3" y="1075.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.3" y="1086.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1187.3" y="1059.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="1070.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1187.3" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="1187.3" y="1027.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.3" y="1038.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.07%)</title><rect x="1187.7" y="1059.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="1070.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.07%)</title><rect x="1188.4" y="1059.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.4" y="1070.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.07%)</title><rect x="1188.4" y="1043.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="1054.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.07%)</title><rect x="1188.4" y="1027.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.4" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.07%)</title><rect x="1188.4" y="1011.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.4" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::pre_evacuate_collection_set() (1 samples, 0.03%)</title><rect x="1188.4" y="995.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.4" y="1006.0"></text>
</g>
<g>
<title>G1RemSet::prepare_for_oops_into_collection_set_do() (1 samples, 0.03%)</title><rect x="1188.4" y="979.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.4" y="990.0"></text>
</g>
<g>
<title>compare_region_idx(unsigned int, unsigned int) (1 samples, 0.03%)</title><rect x="1188.8" y="995.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1191.8" y="1006.0"></text>
</g>
<g>
<title>sched_yield (2 samples, 0.07%)</title><rect x="1189.2" y="1059.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1192.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1189.6" y="1043.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1189.6" y="1027.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1192.6" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.03%)</title><rect x="1189.6" y="1011.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.6" y="1022.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.03%)</title><rect x="1189.6" y="995.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1192.6" y="1006.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1189.6" y="979.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1192.6" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="1189.6" y="963.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1192.6" y="974.0"></text>
</g>
</g>
</svg>
