<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">async Java client | RAM</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (85,808 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (62,047 samples, 72.31%)</title><rect x="10.0" y="691.0" width="853.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (49,480 samples, 57.66%)</title><rect x="10.0" y="675.0" width="680.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (411 samples, 0.48%)</title><rect x="10.0" y="659.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (411 samples, 0.48%)</title><rect x="10.0" y="643.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$231/1127741028.accept (411 samples, 0.48%)</title><rect x="10.0" y="627.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$getWithMultipleNodes$2 (411 samples, 0.48%)</title><rect x="10.0" y="611.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execGetWithFutures (411 samples, 0.48%)</title><rect x="10.0" y="595.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncConnectUtils.body (24 samples, 0.03%)</title><rect x="10.0" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncConnectUtils.body (24 samples, 0.03%)</title><rect x="10.0" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.03%)</title><rect x="10.0" y="547.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (387 samples, 0.45%)</title><rect x="10.3" y="579.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (387 samples, 0.45%)</title><rect x="10.3" y="563.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (387 samples, 0.45%)</title><rect x="10.3" y="547.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.3" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (387 samples, 0.45%)</title><rect x="10.3" y="531.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$230/510381842.get (49,069 samples, 57.18%)</title><rect x="15.7" y="659.0" width="674.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.7" y="670.0">ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$230/510381842.get</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$getWithMultipleNodes$1 (49,069 samples, 57.18%)</title><rect x="15.7" y="643.0" width="674.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.7" y="654.0">ru/mail/polis/service/codearound/ReplicationLsm.lambda$getWithMultipleNodes$1</text>
</g>
<g>
<title>java/util/ArrayList.toArray (49,069 samples, 57.18%)</title><rect x="15.7" y="627.0" width="674.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.7" y="638.0">java/util/ArrayList.toArray</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (49,069 samples, 57.18%)</title><rect x="15.7" y="611.0" width="674.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="18.7" y="622.0">java.util.concurrent.CompletableFuture[]</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12,567 samples, 14.65%)</title><rect x="690.4" y="675.0" width="172.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.4" y="686.0">java/util/concurrent/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12,567 samples, 14.65%)</title><rect x="690.4" y="659.0" width="172.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.4" y="670.0">java/util/concurrent/T..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9,195 samples, 10.72%)</title><rect x="690.4" y="643.0" width="126.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.4" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,866 samples, 3.34%)</title><rect x="690.4" y="627.0" width="39.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.4" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,866 samples, 3.34%)</title><rect x="690.4" y="611.0" width="39.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.4" y="622.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (19 samples, 0.02%)</title><rect x="690.4" y="595.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="693.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.apply (2,847 samples, 3.32%)</title><rect x="690.7" y="595.0" width="39.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.7" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (2,847 samples, 3.32%)</title><rect x="690.7" y="579.0" width="39.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.7" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2,847 samples, 3.32%)</title><rect x="690.7" y="563.0" width="39.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.7" y="574.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (46 samples, 0.05%)</title><rect x="690.9" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (46 samples, 0.05%)</title><rect x="690.9" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.04%)</title><rect x="691.1" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.04%)</title><rect x="691.1" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.04%)</title><rect x="691.1" y="483.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="694.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (76 samples, 0.09%)</title><rect x="691.5" y="547.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (76 samples, 0.09%)</title><rect x="691.5" y="531.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (48 samples, 0.06%)</title><rect x="691.5" y="515.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="694.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.03%)</title><rect x="692.2" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.03%)</title><rect x="692.2" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.03%)</title><rect x="692.2" y="483.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="695.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2,633 samples, 3.07%)</title><rect x="692.6" y="547.0" width="36.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.6" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2,633 samples, 3.07%)</title><rect x="692.6" y="531.0" width="36.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.6" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2,633 samples, 3.07%)</title><rect x="692.6" y="515.0" width="36.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.6" y="526.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.03%)</title><rect x="692.6" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.03%)</title><rect x="692.6" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,845 samples, 2.15%)</title><rect x="693.0" y="499.0" width="25.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,845 samples, 2.15%)</title><rect x="693.0" y="483.0" width="25.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,828 samples, 2.13%)</title><rect x="693.0" y="467.0" width="25.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.0" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/1812886357.apply (1,828 samples, 2.13%)</title><rect x="693.0" y="451.0" width="25.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.0" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,828 samples, 2.13%)</title><rect x="693.0" y="435.0" width="25.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.0" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,828 samples, 2.13%)</title><rect x="693.0" y="419.0" width="25.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.0" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1571858567.apply (1,828 samples, 2.13%)</title><rect x="693.0" y="403.0" width="25.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.0" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,828 samples, 2.13%)</title><rect x="693.0" y="387.0" width="25.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.0" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (33 samples, 0.04%)</title><rect x="693.2" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (33 samples, 0.04%)</title><rect x="693.2" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (32 samples, 0.04%)</title><rect x="693.6" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (32 samples, 0.04%)</title><rect x="693.6" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.03%)</title><rect x="693.6" y="339.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="696.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,748 samples, 2.04%)</title><rect x="694.1" y="371.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.1" y="382.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.03%)</title><rect x="694.1" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.03%)</title><rect x="694.1" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,413 samples, 1.65%)</title><rect x="694.4" y="355.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,413 samples, 1.65%)</title><rect x="694.4" y="339.0" width="19.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$183/36443311.apply (1,371 samples, 1.60%)</title><rect x="694.5" y="323.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,371 samples, 1.60%)</title><rect x="694.5" y="307.0" width="18.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (37 samples, 0.04%)</title><rect x="694.7" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (37 samples, 0.04%)</title><rect x="694.7" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.7" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.02%)</title><rect x="694.7" y="259.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="697.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.04%)</title><rect x="695.2" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="698.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (27 samples, 0.03%)</title><rect x="695.7" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (49 samples, 0.06%)</title><rect x="696.0" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (49 samples, 0.06%)</title><rect x="696.0" y="275.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (40 samples, 0.05%)</title><rect x="696.2" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (40 samples, 0.05%)</title><rect x="696.2" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (23 samples, 0.03%)</title><rect x="696.2" y="227.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="699.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,214 samples, 1.41%)</title><rect x="696.7" y="291.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (81 samples, 0.09%)</title><rect x="696.8" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (81 samples, 0.09%)</title><rect x="696.8" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (81 samples, 0.09%)</title><rect x="696.8" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.8" y="254.0"></text>
</g>
<g>
<title>byte[] (81 samples, 0.09%)</title><rect x="696.8" y="227.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="699.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.05%)</title><rect x="697.9" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.9" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.05%)</title><rect x="697.9" y="259.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.9" y="270.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="697.9" y="243.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="700.9" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (93 samples, 0.11%)</title><rect x="698.6" y="275.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.11%)</title><rect x="698.6" y="259.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (93 samples, 0.11%)</title><rect x="698.6" y="243.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.6" y="254.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.11%)</title><rect x="698.6" y="227.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="701.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.03%)</title><rect x="699.8" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.03%)</title><rect x="699.8" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (27 samples, 0.03%)</title><rect x="699.8" y="243.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="702.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (762 samples, 0.89%)</title><rect x="700.3" y="275.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (411 samples, 0.48%)</title><rect x="700.6" y="259.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (254 samples, 0.30%)</title><rect x="700.6" y="243.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.6" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (254 samples, 0.30%)</title><rect x="700.6" y="227.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.6" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (254 samples, 0.30%)</title><rect x="700.6" y="211.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.6" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (254 samples, 0.30%)</title><rect x="700.6" y="195.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.6" y="206.0"></text>
</g>
<g>
<title>byte[] (254 samples, 0.30%)</title><rect x="700.6" y="179.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="703.6" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (36 samples, 0.04%)</title><rect x="704.0" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (36 samples, 0.04%)</title><rect x="704.0" y="227.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (36 samples, 0.04%)</title><rect x="704.0" y="211.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (36 samples, 0.04%)</title><rect x="704.0" y="195.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="707.0" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (42 samples, 0.05%)</title><rect x="704.5" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.5" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (22 samples, 0.03%)</title><rect x="704.5" y="227.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="707.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (20 samples, 0.02%)</title><rect x="704.8" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.8" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (20 samples, 0.02%)</title><rect x="704.8" y="211.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="707.8" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$199/1275166273.test (79 samples, 0.09%)</title><rect x="705.1" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (79 samples, 0.09%)</title><rect x="705.1" y="227.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/299644693.test (79 samples, 0.09%)</title><rect x="705.1" y="211.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (79 samples, 0.09%)</title><rect x="705.1" y="195.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.1" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1172131546.test (79 samples, 0.09%)</title><rect x="705.1" y="179.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.1" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (79 samples, 0.09%)</title><rect x="705.1" y="163.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1790421142.test (79 samples, 0.09%)</title><rect x="705.1" y="147.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (79 samples, 0.09%)</title><rect x="705.1" y="131.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (79 samples, 0.09%)</title><rect x="705.1" y="115.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 0.09%)</title><rect x="705.1" y="99.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.05%)</title><rect x="705.1" y="83.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="708.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.04%)</title><rect x="705.7" y="83.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.7" y="94.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="705.7" y="67.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="708.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (335 samples, 0.39%)</title><rect x="706.2" y="259.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (335 samples, 0.39%)</title><rect x="706.2" y="243.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (335 samples, 0.39%)</title><rect x="706.2" y="227.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.2" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.03%)</title><rect x="706.5" y="211.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="709.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.02%)</title><rect x="707.0" y="211.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.02%)</title><rect x="707.0" y="195.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.0" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.get$Lambda (19 samples, 0.02%)</title><rect x="707.0" y="179.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.0" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (19 samples, 0.02%)</title><rect x="707.0" y="163.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="710.0" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (220 samples, 0.26%)</title><rect x="707.5" y="211.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.5" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (220 samples, 0.26%)</title><rect x="707.5" y="195.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.5" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (220 samples, 0.26%)</title><rect x="707.5" y="179.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.05%)</title><rect x="707.5" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.05%)</title><rect x="707.5" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.5" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.get$Lambda (46 samples, 0.05%)</title><rect x="707.5" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.5" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (46 samples, 0.05%)</title><rect x="707.5" y="115.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="710.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (30 samples, 0.03%)</title><rect x="708.1" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.1" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (30 samples, 0.03%)</title><rect x="708.1" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (30 samples, 0.03%)</title><rect x="708.1" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (30 samples, 0.03%)</title><rect x="708.1" y="115.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (30 samples, 0.03%)</title><rect x="708.1" y="99.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.1" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (30 samples, 0.03%)</title><rect x="708.1" y="83.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (30 samples, 0.03%)</title><rect x="708.1" y="67.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.03%)</title><rect x="708.1" y="51.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.03%)</title><rect x="708.1" y="35.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="711.1" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (82 samples, 0.10%)</title><rect x="708.5" y="163.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (82 samples, 0.10%)</title><rect x="708.5" y="147.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (41 samples, 0.05%)</title><rect x="708.5" y="131.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.05%)</title><rect x="708.5" y="115.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.05%)</title><rect x="708.5" y="99.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="711.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (41 samples, 0.05%)</title><rect x="709.1" y="131.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.1" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (41 samples, 0.05%)</title><rect x="709.1" y="115.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="712.1" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (62 samples, 0.07%)</title><rect x="709.6" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (62 samples, 0.07%)</title><rect x="709.6" y="147.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="712.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (24 samples, 0.03%)</title><rect x="710.5" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (24 samples, 0.03%)</title><rect x="710.5" y="195.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="713.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (44 samples, 0.05%)</title><rect x="710.8" y="275.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.03%)</title><rect x="711.0" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (30 samples, 0.03%)</title><rect x="711.0" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/249155636.invoke (30 samples, 0.03%)</title><rect x="711.0" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.03%)</title><rect x="711.0" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.02%)</title><rect x="711.2" y="195.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.02%)</title><rect x="711.2" y="179.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.2" y="190.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.02%)</title><rect x="711.2" y="163.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="714.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (43 samples, 0.05%)</title><rect x="711.4" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (43 samples, 0.05%)</title><rect x="711.4" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.05%)</title><rect x="711.4" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (43 samples, 0.05%)</title><rect x="711.4" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/249155636.invoke (43 samples, 0.05%)</title><rect x="711.4" y="211.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.05%)</title><rect x="711.4" y="195.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (28 samples, 0.03%)</title><rect x="711.6" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (28 samples, 0.03%)</title><rect x="711.6" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.6" y="174.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.03%)</title><rect x="711.6" y="147.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="714.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (101 samples, 0.12%)</title><rect x="712.0" y="275.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.0" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.03%)</title><rect x="712.0" y="259.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="715.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (31 samples, 0.04%)</title><rect x="712.4" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="715.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.04%)</title><rect x="712.4" y="243.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="715.4" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (43 samples, 0.05%)</title><rect x="712.8" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.8" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (43 samples, 0.05%)</title><rect x="712.8" y="243.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="715.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.04%)</title><rect x="713.4" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.04%)</title><rect x="713.4" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.04%)</title><rect x="713.4" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="716.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (62 samples, 0.07%)</title><rect x="713.8" y="355.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="716.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (235 samples, 0.27%)</title><rect x="714.9" y="355.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (26 samples, 0.03%)</title><rect x="715.3" y="339.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="718.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (23 samples, 0.03%)</title><rect x="715.6" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="718.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (70 samples, 0.08%)</title><rect x="716.0" y="339.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 0.08%)</title><rect x="716.0" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 0.08%)</title><rect x="716.0" y="307.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (70 samples, 0.08%)</title><rect x="716.0" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (70 samples, 0.08%)</title><rect x="716.0" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (70 samples, 0.08%)</title><rect x="716.0" y="259.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (70 samples, 0.08%)</title><rect x="716.0" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (70 samples, 0.08%)</title><rect x="716.0" y="227.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (70 samples, 0.08%)</title><rect x="716.0" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.03%)</title><rect x="716.0" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.03%)</title><rect x="716.0" y="179.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (24 samples, 0.03%)</title><rect x="716.6" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (24 samples, 0.03%)</title><rect x="716.6" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (68 samples, 0.08%)</title><rect x="716.9" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.9" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (25 samples, 0.03%)</title><rect x="717.1" y="323.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="720.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (30 samples, 0.03%)</title><rect x="717.4" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.4" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (30 samples, 0.03%)</title><rect x="717.4" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.4" y="318.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.03%)</title><rect x="717.4" y="291.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="720.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (20 samples, 0.02%)</title><rect x="717.9" y="339.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.02%)</title><rect x="717.9" y="323.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="720.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (29 samples, 0.03%)</title><rect x="718.4" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (29 samples, 0.03%)</title><rect x="718.4" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (729 samples, 0.85%)</title><rect x="718.8" y="499.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="718.8" y="483.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="718.8" y="467.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (31 samples, 0.04%)</title><rect x="719.0" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (31 samples, 0.04%)</title><rect x="719.0" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (24 samples, 0.03%)</title><rect x="719.5" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (24 samples, 0.03%)</title><rect x="719.5" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="719.5" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="719.5" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="719.5" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="722.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (653 samples, 0.76%)</title><rect x="719.8" y="483.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (653 samples, 0.76%)</title><rect x="719.8" y="467.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (51 samples, 0.06%)</title><rect x="719.8" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="722.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (576 samples, 0.67%)</title><rect x="720.5" y="451.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.5" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (21 samples, 0.02%)</title><rect x="720.5" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="723.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (29 samples, 0.03%)</title><rect x="721.1" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (29 samples, 0.03%)</title><rect x="721.1" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (29 samples, 0.03%)</title><rect x="721.1" y="403.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="724.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (23 samples, 0.03%)</title><rect x="721.7" y="435.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="724.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (32 samples, 0.04%)</title><rect x="722.0" y="435.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="725.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (39 samples, 0.05%)</title><rect x="722.5" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="725.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.03%)</title><rect x="723.0" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="726.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (182 samples, 0.21%)</title><rect x="723.4" y="435.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="726.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.02%)</title><rect x="724.8" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="727.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (59 samples, 0.07%)</title><rect x="725.1" y="419.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (30 samples, 0.03%)</title><rect x="725.5" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (109 samples, 0.13%)</title><rect x="725.9" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (71 samples, 0.08%)</title><rect x="726.4" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (25 samples, 0.03%)</title><rect x="726.6" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="729.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (25 samples, 0.03%)</title><rect x="727.0" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (19 samples, 0.02%)</title><rect x="727.5" y="435.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (19 samples, 0.02%)</title><rect x="727.5" y="419.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="730.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (19 samples, 0.02%)</title><rect x="727.5" y="403.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.5" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (19 samples, 0.02%)</title><rect x="727.5" y="387.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.5" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (19 samples, 0.02%)</title><rect x="727.5" y="371.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (19 samples, 0.02%)</title><rect x="727.5" y="355.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.02%)</title><rect x="727.5" y="339.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="730.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (50 samples, 0.06%)</title><rect x="727.7" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.7" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (40 samples, 0.05%)</title><rect x="727.9" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/188927272.run (40 samples, 0.05%)</title><rect x="727.9" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (40 samples, 0.05%)</title><rect x="727.9" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.9" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (28 samples, 0.03%)</title><rect x="728.0" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (26 samples, 0.03%)</title><rect x="728.4" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.03%)</title><rect x="728.4" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="731.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (22 samples, 0.03%)</title><rect x="728.8" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (22 samples, 0.03%)</title><rect x="728.8" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.03%)</title><rect x="728.8" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.03%)</title><rect x="728.8" y="499.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="731.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (55 samples, 0.06%)</title><rect x="729.1" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (37 samples, 0.04%)</title><rect x="729.1" y="531.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="732.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$229/607495298.get (6,329 samples, 7.38%)</title><rect x="729.8" y="627.0" width="87.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.8" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$getWithMultipleNodes$0 (6,329 samples, 7.38%)</title><rect x="729.8" y="611.0" width="87.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.8" y="622.0">ru/mail/po..</text>
</g>
<g>
<title>ru.mail.polis.service.codearound.AsyncConnectUtils (259 samples, 0.30%)</title><rect x="729.8" y="595.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="732.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncConnectUtils.setBody (189 samples, 0.22%)</title><rect x="733.4" y="595.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.4" y="606.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.22%)</title><rect x="733.4" y="579.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="736.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueWithFutures (5,881 samples, 6.85%)</title><rect x="736.0" y="595.0" width="80.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.0" y="606.0">ru/mail/p..</text>
</g>
<g>
<title>one.nio.http.Response (233 samples, 0.27%)</title><rect x="736.0" y="579.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="739.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,111 samples, 1.29%)</title><rect x="739.2" y="579.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.2" y="590.0"></text>
</g>
<g>
<title>byte[] (275 samples, 0.32%)</title><rect x="739.2" y="563.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="742.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (213 samples, 0.25%)</title><rect x="743.0" y="563.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="746.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (623 samples, 0.73%)</title><rect x="745.9" y="563.0" width="8.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="748.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.evaluateFromBuffer (4,537 samples, 5.29%)</title><rect x="754.5" y="579.0" width="62.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.5" y="590.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (3,226 samples, 3.76%)</title><rect x="754.5" y="563.0" width="44.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.5" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (2,319 samples, 2.70%)</title><rect x="754.5" y="547.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.5" y="558.0">ru..</text>
</g>
<g>
<title>java.util.NoSuchElementException (30 samples, 0.03%)</title><rect x="754.5" y="531.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="757.5" y="542.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (768 samples, 0.90%)</title><rect x="754.9" y="531.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.9" y="542.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (768 samples, 0.90%)</title><rect x="754.9" y="515.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (768 samples, 0.90%)</title><rect x="754.9" y="499.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (768 samples, 0.90%)</title><rect x="754.9" y="483.0" width="10.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (768 samples, 0.90%)</title><rect x="754.9" y="467.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.9" y="478.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (768 samples, 0.90%)</title><rect x="754.9" y="451.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.9" y="462.0"></text>
</g>
<g>
<title>int[] (76 samples, 0.09%)</title><rect x="754.9" y="435.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="757.9" y="446.0"></text>
</g>
<g>
<title>int[] (53 samples, 0.06%)</title><rect x="755.9" y="435.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="758.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (158 samples, 0.18%)</title><rect x="756.7" y="435.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="759.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (99 samples, 0.12%)</title><rect x="758.8" y="435.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="761.8" y="446.0"></text>
</g>
<g>
<title>long[] (61 samples, 0.07%)</title><rect x="760.2" y="435.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="763.2" y="446.0"></text>
</g>
<g>
<title>long[] (277 samples, 0.32%)</title><rect x="761.0" y="435.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.0" y="446.0"></text>
</g>
<g>
<title>short[] (25 samples, 0.03%)</title><rect x="764.9" y="435.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="767.9" y="446.0"></text>
</g>
<g>
<title>short[] (19 samples, 0.02%)</title><rect x="765.2" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="768.2" y="446.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (244 samples, 0.28%)</title><rect x="765.5" y="531.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.5" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (244 samples, 0.28%)</title><rect x="765.5" y="515.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.5" y="526.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.28%)</title><rect x="765.5" y="499.0" width="3.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="768.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (1,277 samples, 1.49%)</title><rect x="768.8" y="531.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (1,277 samples, 1.49%)</title><rect x="768.8" y="515.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.8" y="526.0"></text>
</g>
<g>
<title>byte[] (236 samples, 0.28%)</title><rect x="768.8" y="499.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="771.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,041 samples, 1.21%)</title><rect x="772.1" y="499.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.1" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,041 samples, 1.21%)</title><rect x="772.1" y="483.0" width="14.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="775.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (907 samples, 1.06%)</title><rect x="786.4" y="547.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (907 samples, 1.06%)</title><rect x="786.4" y="531.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (907 samples, 1.06%)</title><rect x="786.4" y="515.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (907 samples, 1.06%)</title><rect x="786.4" y="499.0" width="12.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="789.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (1,311 samples, 1.53%)</title><rect x="798.8" y="563.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (532 samples, 0.62%)</title><rect x="798.8" y="547.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (308 samples, 0.36%)</title><rect x="798.8" y="531.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="801.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (224 samples, 0.26%)</title><rect x="803.1" y="531.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.1" y="542.0"></text>
</g>
<g>
<title>byte[] (224 samples, 0.26%)</title><rect x="803.1" y="515.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="806.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (779 samples, 0.91%)</title><rect x="806.2" y="547.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (779 samples, 0.91%)</title><rect x="806.2" y="531.0" width="10.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="809.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (316 samples, 0.37%)</title><rect x="816.9" y="643.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (316 samples, 0.37%)</title><rect x="816.9" y="627.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (316 samples, 0.37%)</title><rect x="816.9" y="611.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (316 samples, 0.37%)</title><rect x="816.9" y="595.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (316 samples, 0.37%)</title><rect x="816.9" y="579.0" width="4.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="819.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.run (315 samples, 0.37%)</title><rect x="821.2" y="643.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (315 samples, 0.37%)</title><rect x="821.2" y="627.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (315 samples, 0.37%)</title><rect x="821.2" y="611.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (315 samples, 0.37%)</title><rect x="821.2" y="595.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (315 samples, 0.37%)</title><rect x="821.2" y="579.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (315 samples, 0.37%)</title><rect x="821.2" y="563.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (315 samples, 0.37%)</title><rect x="821.2" y="547.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (315 samples, 0.37%)</title><rect x="821.2" y="531.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (315 samples, 0.37%)</title><rect x="821.2" y="515.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (315 samples, 0.37%)</title><rect x="821.2" y="499.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (315 samples, 0.37%)</title><rect x="821.2" y="483.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (283 samples, 0.33%)</title><rect x="821.2" y="467.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.02%)</title><rect x="821.2" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.02%)</title><rect x="821.2" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (264 samples, 0.31%)</title><rect x="821.5" y="451.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (28 samples, 0.03%)</title><rect x="821.5" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="824.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (236 samples, 0.28%)</title><rect x="821.9" y="435.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (236 samples, 0.28%)</title><rect x="821.9" y="419.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (236 samples, 0.28%)</title><rect x="821.9" y="403.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (117 samples, 0.14%)</title><rect x="821.9" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (37 samples, 0.04%)</title><rect x="821.9" y="371.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="824.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/556718513.apply (66 samples, 0.08%)</title><rect x="822.4" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (66 samples, 0.08%)</title><rect x="822.4" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (66 samples, 0.08%)</title><rect x="822.4" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (19 samples, 0.02%)</title><rect x="822.4" y="323.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.4" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (19 samples, 0.02%)</title><rect x="822.4" y="307.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.4" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (19 samples, 0.02%)</title><rect x="822.4" y="291.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="825.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (47 samples, 0.05%)</title><rect x="822.6" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (40 samples, 0.05%)</title><rect x="822.7" y="307.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (40 samples, 0.05%)</title><rect x="822.7" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (23 samples, 0.03%)</title><rect x="822.7" y="275.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="825.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (117 samples, 0.14%)</title><rect x="823.5" y="387.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (117 samples, 0.14%)</title><rect x="823.5" y="371.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$192/1238073191.apply (116 samples, 0.14%)</title><rect x="823.5" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (116 samples, 0.14%)</title><rect x="823.5" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (116 samples, 0.14%)</title><rect x="823.5" y="323.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1400327321.apply (116 samples, 0.14%)</title><rect x="823.5" y="307.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (116 samples, 0.14%)</title><rect x="823.5" y="291.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (39 samples, 0.05%)</title><rect x="823.6" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (39 samples, 0.05%)</title><rect x="823.6" y="259.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.03%)</title><rect x="823.6" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="826.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (68 samples, 0.08%)</title><rect x="824.1" y="275.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (37 samples, 0.04%)</title><rect x="824.1" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (21 samples, 0.02%)</title><rect x="824.1" y="243.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="827.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (31 samples, 0.04%)</title><rect x="824.6" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (19 samples, 0.02%)</title><rect x="824.6" y="243.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="827.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (32 samples, 0.04%)</title><rect x="825.1" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (32 samples, 0.04%)</title><rect x="825.1" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (32 samples, 0.04%)</title><rect x="825.1" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (32 samples, 0.04%)</title><rect x="825.1" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (32 samples, 0.04%)</title><rect x="825.1" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.1" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (32 samples, 0.04%)</title><rect x="825.1" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.1" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (20 samples, 0.02%)</title><rect x="825.3" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.3" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (20 samples, 0.02%)</title><rect x="825.3" y="355.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="828.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,741 samples, 3.19%)</title><rect x="825.6" y="643.0" width="37.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.6" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,741 samples, 3.19%)</title><rect x="825.6" y="627.0" width="37.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.6" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,929 samples, 2.25%)</title><rect x="825.6" y="611.0" width="26.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="828.6" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (1,929 samples, 2.25%)</title><rect x="825.6" y="595.0" width="26.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.6" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,929 samples, 2.25%)</title><rect x="825.6" y="579.0" width="26.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.6" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (38 samples, 0.04%)</title><rect x="825.6" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (38 samples, 0.04%)</title><rect x="825.6" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (38 samples, 0.04%)</title><rect x="825.6" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (38 samples, 0.04%)</title><rect x="825.6" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/502800944.linkToTargetMethod (22 samples, 0.03%)</title><rect x="825.6" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1076770748.invoke (22 samples, 0.03%)</title><rect x="825.6" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.03%)</title><rect x="825.6" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (22 samples, 0.03%)</title><rect x="825.6" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (22 samples, 0.03%)</title><rect x="825.6" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.6" y="446.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.03%)</title><rect x="825.6" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="828.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,891 samples, 2.20%)</title><rect x="826.1" y="563.0" width="26.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.1" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,891 samples, 2.20%)</title><rect x="826.1" y="547.0" width="26.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.1" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,891 samples, 2.20%)</title><rect x="826.1" y="531.0" width="26.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.1" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,891 samples, 2.20%)</title><rect x="826.1" y="515.0" width="26.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.1" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (880 samples, 1.03%)</title><rect x="826.1" y="499.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (880 samples, 1.03%)</title><rect x="826.1" y="483.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (880 samples, 1.03%)</title><rect x="826.1" y="467.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (880 samples, 1.03%)</title><rect x="826.1" y="451.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="829.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (880 samples, 1.03%)</title><rect x="826.1" y="435.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (880 samples, 1.03%)</title><rect x="826.1" y="419.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (880 samples, 1.03%)</title><rect x="826.1" y="403.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (862 samples, 1.00%)</title><rect x="826.1" y="387.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (862 samples, 1.00%)</title><rect x="826.1" y="371.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (837 samples, 0.98%)</title><rect x="826.1" y="355.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/704105605.apply (777 samples, 0.91%)</title><rect x="826.3" y="339.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (777 samples, 0.91%)</title><rect x="826.3" y="323.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (37 samples, 0.04%)</title><rect x="826.5" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (37 samples, 0.04%)</title><rect x="826.5" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (23 samples, 0.03%)</title><rect x="826.5" y="275.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="829.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (728 samples, 0.85%)</title><rect x="827.0" y="307.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (33 samples, 0.04%)</title><rect x="827.1" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (33 samples, 0.04%)</title><rect x="827.1" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (688 samples, 0.80%)</title><rect x="827.5" y="291.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.5" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$124/917536706.apply (52 samples, 0.06%)</title><rect x="827.5" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (52 samples, 0.06%)</title><rect x="827.5" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (52 samples, 0.06%)</title><rect x="827.5" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (19 samples, 0.02%)</title><rect x="827.5" y="227.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="830.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (33 samples, 0.04%)</title><rect x="827.8" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.03%)</title><rect x="827.9" y="211.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="830.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (636 samples, 0.74%)</title><rect x="828.2" y="275.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (127 samples, 0.15%)</title><rect x="828.7" y="259.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (48 samples, 0.06%)</title><rect x="828.7" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (32 samples, 0.04%)</title><rect x="828.9" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.9" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (32 samples, 0.04%)</title><rect x="828.9" y="211.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="831.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (34 samples, 0.04%)</title><rect x="829.3" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.04%)</title><rect x="829.3" y="227.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="832.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (34 samples, 0.04%)</title><rect x="829.3" y="211.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (45 samples, 0.05%)</title><rect x="829.8" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (45 samples, 0.05%)</title><rect x="829.8" y="227.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="832.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (85 samples, 0.10%)</title><rect x="830.4" y="259.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (33 samples, 0.04%)</title><rect x="830.4" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (52 samples, 0.06%)</title><rect x="830.9" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (52 samples, 0.06%)</title><rect x="830.9" y="227.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="833.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.04%)</title><rect x="830.9" y="211.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="833.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.02%)</title><rect x="831.3" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.02%)</title><rect x="831.3" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.3" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.02%)</title><rect x="831.3" y="179.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="834.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (337 samples, 0.39%)</title><rect x="832.3" y="259.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/611985749.run (337 samples, 0.39%)</title><rect x="832.3" y="243.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (337 samples, 0.39%)</title><rect x="832.3" y="227.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.05%)</title><rect x="832.3" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="835.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.05%)</title><rect x="832.3" y="195.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$221/1241568452.get$Lambda (19 samples, 0.02%)</title><rect x="832.7" y="179.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$221 (19 samples, 0.02%)</title><rect x="832.7" y="163.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="835.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (48 samples, 0.06%)</title><rect x="833.0" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (48 samples, 0.06%)</title><rect x="833.0" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.03%)</title><rect x="833.0" y="179.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="836.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.03%)</title><rect x="833.3" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.03%)</title><rect x="833.3" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.03%)</title><rect x="833.3" y="147.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="836.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (23 samples, 0.03%)</title><rect x="833.6" y="211.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="836.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (61 samples, 0.07%)</title><rect x="834.2" y="211.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (61 samples, 0.07%)</title><rect x="834.2" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.05%)</title><rect x="834.4" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (44 samples, 0.05%)</title><rect x="834.4" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (44 samples, 0.05%)</title><rect x="834.4" y="147.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.03%)</title><rect x="834.4" y="131.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="837.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (48 samples, 0.06%)</title><rect x="835.0" y="211.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.06%)</title><rect x="835.0" y="195.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/926370398.invoke (48 samples, 0.06%)</title><rect x="835.0" y="179.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.06%)</title><rect x="835.0" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (41 samples, 0.05%)</title><rect x="835.1" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (41 samples, 0.05%)</title><rect x="835.1" y="131.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.1" y="142.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.05%)</title><rect x="835.1" y="115.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="838.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (96 samples, 0.11%)</title><rect x="835.7" y="211.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (35 samples, 0.04%)</title><rect x="835.7" y="195.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="838.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (61 samples, 0.07%)</title><rect x="836.1" y="195.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.07%)</title><rect x="836.1" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/926370398.invoke (61 samples, 0.07%)</title><rect x="836.1" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.07%)</title><rect x="836.1" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.06%)</title><rect x="836.3" y="131.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.06%)</title><rect x="836.3" y="115.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.3" y="126.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.06%)</title><rect x="836.3" y="99.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="839.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$194/381966895.apply (44 samples, 0.05%)</title><rect x="837.0" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (44 samples, 0.05%)</title><rect x="837.0" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (25 samples, 0.03%)</title><rect x="837.0" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.0" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (25 samples, 0.03%)</title><rect x="837.0" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.0" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (25 samples, 0.03%)</title><rect x="837.0" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.0" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (25 samples, 0.03%)</title><rect x="837.0" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="840.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (19 samples, 0.02%)</title><rect x="837.3" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.02%)</title><rect x="837.3" y="291.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="840.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (25 samples, 0.03%)</title><rect x="837.6" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (25 samples, 0.03%)</title><rect x="837.6" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$196/1579352741.apply (25 samples, 0.03%)</title><rect x="837.6" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (25 samples, 0.03%)</title><rect x="837.6" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (25 samples, 0.03%)</title><rect x="837.6" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.03%)</title><rect x="837.6" y="275.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="840.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,011 samples, 1.18%)</title><rect x="838.2" y="499.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (50 samples, 0.06%)</title><rect x="838.2" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (50 samples, 0.06%)</title><rect x="838.2" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (50 samples, 0.06%)</title><rect x="838.2" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.2" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (50 samples, 0.06%)</title><rect x="838.2" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.06%)</title><rect x="838.2" y="419.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.2" y="430.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.06%)</title><rect x="838.2" y="403.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="841.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (124 samples, 0.14%)</title><rect x="838.9" y="483.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.02%)</title><rect x="839.2" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.02%)</title><rect x="839.2" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.2" y="462.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.02%)</title><rect x="839.2" y="435.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="842.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (76 samples, 0.09%)</title><rect x="839.5" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (76 samples, 0.09%)</title><rect x="839.5" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.06%)</title><rect x="839.5" y="435.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="842.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.03%)</title><rect x="840.2" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.2" y="446.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="840.2" y="419.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="843.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (304 samples, 0.35%)</title><rect x="840.6" y="483.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (304 samples, 0.35%)</title><rect x="840.6" y="467.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (304 samples, 0.35%)</title><rect x="840.6" y="451.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (24 samples, 0.03%)</title><rect x="840.9" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="843.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.03%)</title><rect x="841.4" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.03%)</title><rect x="841.4" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.get$Lambda (23 samples, 0.03%)</title><rect x="841.4" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.4" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (23 samples, 0.03%)</title><rect x="841.4" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="844.4" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (20 samples, 0.02%)</title><rect x="841.7" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.7" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (20 samples, 0.02%)</title><rect x="841.7" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="844.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (177 samples, 0.21%)</title><rect x="842.0" y="435.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (177 samples, 0.21%)</title><rect x="842.0" y="419.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (177 samples, 0.21%)</title><rect x="842.0" y="403.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.03%)</title><rect x="842.0" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="845.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.03%)</title><rect x="842.0" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.get$Lambda (22 samples, 0.03%)</title><rect x="842.0" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="845.0" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (22 samples, 0.03%)</title><rect x="842.0" y="339.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="845.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (35 samples, 0.04%)</title><rect x="842.3" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (35 samples, 0.04%)</title><rect x="842.3" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (35 samples, 0.04%)</title><rect x="842.3" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (35 samples, 0.04%)</title><rect x="842.3" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (35 samples, 0.04%)</title><rect x="842.3" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (35 samples, 0.04%)</title><rect x="842.3" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (35 samples, 0.04%)</title><rect x="842.3" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="845.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.04%)</title><rect x="842.3" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.04%)</title><rect x="842.3" y="259.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="845.3" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (73 samples, 0.09%)</title><rect x="842.8" y="387.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.8" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (73 samples, 0.09%)</title><rect x="842.8" y="371.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (39 samples, 0.05%)</title><rect x="842.8" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.05%)</title><rect x="842.8" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.05%)</title><rect x="842.8" y="323.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="845.8" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (34 samples, 0.04%)</title><rect x="843.3" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.3" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (34 samples, 0.04%)</title><rect x="843.3" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="846.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (47 samples, 0.05%)</title><rect x="843.8" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.8" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (47 samples, 0.05%)</title><rect x="843.8" y="371.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="846.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (25 samples, 0.03%)</title><rect x="844.4" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.03%)</title><rect x="844.4" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="847.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (533 samples, 0.62%)</title><rect x="844.8" y="483.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.8" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (29 samples, 0.03%)</title><rect x="844.8" y="467.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="847.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (38 samples, 0.04%)</title><rect x="845.2" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (38 samples, 0.04%)</title><rect x="845.2" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.2" y="462.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.04%)</title><rect x="845.2" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="848.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (70 samples, 0.08%)</title><rect x="845.7" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (70 samples, 0.08%)</title><rect x="845.7" y="451.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="848.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.03%)</title><rect x="845.7" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="848.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (44 samples, 0.05%)</title><rect x="846.0" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.0" y="446.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.05%)</title><rect x="846.0" y="419.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="849.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (396 samples, 0.46%)</title><rect x="846.6" y="467.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (114 samples, 0.13%)</title><rect x="846.6" y="451.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (114 samples, 0.13%)</title><rect x="846.6" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.06%)</title><rect x="846.6" y="419.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="849.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.07%)</title><rect x="847.3" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.3" y="430.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.07%)</title><rect x="847.3" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="850.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (65 samples, 0.08%)</title><rect x="848.2" y="451.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (65 samples, 0.08%)</title><rect x="848.2" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.2" y="446.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="848.2" y="419.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="851.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.03%)</title><rect x="848.7" y="419.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="851.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (62 samples, 0.07%)</title><rect x="849.1" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="852.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (62 samples, 0.07%)</title><rect x="849.1" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.07%)</title><rect x="849.1" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.03%)</title><rect x="849.1" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="852.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.04%)</title><rect x="849.5" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.5" y="414.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.04%)</title><rect x="849.5" y="387.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="852.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (57 samples, 0.07%)</title><rect x="849.9" y="451.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (57 samples, 0.07%)</title><rect x="849.9" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (57 samples, 0.07%)</title><rect x="849.9" y="419.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (57 samples, 0.07%)</title><rect x="849.9" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.07%)</title><rect x="849.9" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.07%)</title><rect x="849.9" y="371.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="852.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (98 samples, 0.11%)</title><rect x="850.7" y="451.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (38 samples, 0.04%)</title><rect x="850.7" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (38 samples, 0.04%)</title><rect x="850.7" y="419.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="853.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (38 samples, 0.04%)</title><rect x="851.3" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (38 samples, 0.04%)</title><rect x="851.3" y="419.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="854.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$211/1826361417.apply (22 samples, 0.03%)</title><rect x="851.8" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (22 samples, 0.03%)</title><rect x="851.8" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.8" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.03%)</title><rect x="851.8" y="403.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="854.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (812 samples, 0.95%)</title><rect x="852.1" y="611.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (812 samples, 0.95%)</title><rect x="852.1" y="595.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (812 samples, 0.95%)</title><rect x="852.1" y="579.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (812 samples, 0.95%)</title><rect x="852.1" y="563.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (812 samples, 0.95%)</title><rect x="852.1" y="547.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (60 samples, 0.07%)</title><rect x="852.1" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (20 samples, 0.02%)</title><rect x="852.3" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="855.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (23 samples, 0.03%)</title><rect x="852.6" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (23 samples, 0.03%)</title><rect x="852.6" y="499.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (752 samples, 0.88%)</title><rect x="852.9" y="531.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (752 samples, 0.88%)</title><rect x="852.9" y="515.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (752 samples, 0.88%)</title><rect x="852.9" y="499.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (752 samples, 0.88%)</title><rect x="852.9" y="483.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (752 samples, 0.88%)</title><rect x="852.9" y="467.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (752 samples, 0.88%)</title><rect x="852.9" y="451.0" width="10.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (29 samples, 0.03%)</title><rect x="852.9" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.9" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (29 samples, 0.03%)</title><rect x="852.9" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.9" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (29 samples, 0.03%)</title><rect x="852.9" y="403.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="855.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/1882091062.run (279 samples, 0.33%)</title><rect x="853.5" y="435.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (279 samples, 0.33%)</title><rect x="853.5" y="419.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (279 samples, 0.33%)</title><rect x="853.5" y="403.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.5" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (80 samples, 0.09%)</title><rect x="853.5" y="387.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.5" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (56 samples, 0.07%)</title><rect x="853.5" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.5" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (25 samples, 0.03%)</title><rect x="853.5" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.5" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (25 samples, 0.03%)</title><rect x="853.5" y="339.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="856.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (31 samples, 0.04%)</title><rect x="853.8" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (31 samples, 0.04%)</title><rect x="853.8" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="856.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (24 samples, 0.03%)</title><rect x="854.2" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (24 samples, 0.03%)</title><rect x="854.2" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="857.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (24 samples, 0.03%)</title><rect x="854.2" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (199 samples, 0.23%)</title><rect x="854.6" y="387.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (184 samples, 0.21%)</title><rect x="854.8" y="371.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (88 samples, 0.10%)</title><rect x="854.8" y="355.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.8" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (21 samples, 0.02%)</title><rect x="855.2" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (21 samples, 0.02%)</title><rect x="855.2" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (21 samples, 0.02%)</title><rect x="855.2" y="307.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="858.2" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (19 samples, 0.02%)</title><rect x="855.5" y="339.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (19 samples, 0.02%)</title><rect x="855.5" y="323.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.5" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (19 samples, 0.02%)</title><rect x="855.5" y="307.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="858.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (32 samples, 0.04%)</title><rect x="856.0" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (64 samples, 0.07%)</title><rect x="856.4" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (51 samples, 0.06%)</title><rect x="856.6" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (37 samples, 0.04%)</title><rect x="856.8" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (37 samples, 0.04%)</title><rect x="856.8" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="859.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (26 samples, 0.03%)</title><rect x="856.8" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="859.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (394 samples, 0.46%)</title><rect x="857.3" y="435.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (394 samples, 0.46%)</title><rect x="857.3" y="419.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (394 samples, 0.46%)</title><rect x="857.3" y="403.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (372 samples, 0.43%)</title><rect x="857.3" y="387.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (372 samples, 0.43%)</title><rect x="857.3" y="371.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (372 samples, 0.43%)</title><rect x="857.3" y="355.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (372 samples, 0.43%)</title><rect x="857.3" y="339.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$223/1023865256.accept (372 samples, 0.43%)</title><rect x="857.3" y="323.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (372 samples, 0.43%)</title><rect x="857.3" y="307.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (372 samples, 0.43%)</title><rect x="857.3" y="291.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (372 samples, 0.43%)</title><rect x="857.3" y="275.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (44 samples, 0.05%)</title><rect x="857.3" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$226/363328708.apply (44 samples, 0.05%)</title><rect x="857.3" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="860.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (44 samples, 0.05%)</title><rect x="857.3" y="227.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (44 samples, 0.05%)</title><rect x="857.3" y="211.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="860.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (328 samples, 0.38%)</title><rect x="857.9" y="259.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (328 samples, 0.38%)</title><rect x="857.9" y="243.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (328 samples, 0.38%)</title><rect x="857.9" y="227.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (328 samples, 0.38%)</title><rect x="857.9" y="211.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Thread (208 samples, 0.24%)</title><rect x="857.9" y="195.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="860.9" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (120 samples, 0.14%)</title><rect x="860.8" y="195.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="863.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (19 samples, 0.02%)</title><rect x="861.0" y="179.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.0" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (19 samples, 0.02%)</title><rect x="861.0" y="163.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.0" y="174.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.02%)</title><rect x="861.0" y="147.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="864.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (27 samples, 0.03%)</title><rect x="861.2" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.03%)</title><rect x="861.2" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (61 samples, 0.07%)</title><rect x="861.6" y="179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.6" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (61 samples, 0.07%)</title><rect x="861.6" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.6" y="174.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (54 samples, 0.06%)</title><rect x="861.7" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="864.7" y="158.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (21 samples, 0.02%)</title><rect x="861.7" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="864.7" y="142.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (21 samples, 0.02%)</title><rect x="861.7" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="864.7" y="126.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (21 samples, 0.02%)</title><rect x="861.7" y="99.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="864.7" y="110.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (33 samples, 0.04%)</title><rect x="862.0" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.0" y="142.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (20 samples, 0.02%)</title><rect x="862.0" y="115.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="865.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (22 samples, 0.03%)</title><rect x="862.4" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.4" y="398.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.03%)</title><rect x="862.4" y="371.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="865.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (38 samples, 0.04%)</title><rect x="862.7" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (38 samples, 0.04%)</title><rect x="862.7" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (38 samples, 0.04%)</title><rect x="862.7" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (38 samples, 0.04%)</title><rect x="862.7" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (38 samples, 0.04%)</title><rect x="862.7" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.03%)</title><rect x="862.9" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.03%)</title><rect x="862.9" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.03%)</title><rect x="862.9" y="323.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="865.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,998 samples, 3.49%)</title><rect x="863.2" y="691.0" width="41.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.2" y="702.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.11%)</title><rect x="863.2" y="675.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.11%)</title><rect x="863.2" y="659.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="866.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$188/927563624.get$Lambda (54 samples, 0.06%)</title><rect x="863.2" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$188 (54 samples, 0.06%)</title><rect x="863.2" y="627.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="866.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$193/719479391.get$Lambda (42 samples, 0.05%)</title><rect x="864.0" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$193 (42 samples, 0.05%)</title><rect x="864.0" y="627.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="867.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/63001505.linkToTargetMethod (67 samples, 0.08%)</title><rect x="864.6" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.08%)</title><rect x="864.6" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1748993312.get$Lambda (67 samples, 0.08%)</title><rect x="864.6" y="643.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$189 (67 samples, 0.08%)</title><rect x="864.6" y="627.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="867.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (659 samples, 0.77%)</title><rect x="865.5" y="675.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$190/467524561.accept (549 samples, 0.64%)</title><rect x="865.5" y="659.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (549 samples, 0.64%)</title><rect x="865.5" y="643.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (549 samples, 0.64%)</title><rect x="865.5" y="627.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (549 samples, 0.64%)</title><rect x="865.5" y="611.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (549 samples, 0.64%)</title><rect x="865.5" y="595.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="868.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (549 samples, 0.64%)</title><rect x="865.5" y="579.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (549 samples, 0.64%)</title><rect x="865.5" y="563.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="868.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (549 samples, 0.64%)</title><rect x="865.5" y="547.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (549 samples, 0.64%)</title><rect x="865.5" y="531.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (549 samples, 0.64%)</title><rect x="865.5" y="515.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (549 samples, 0.64%)</title><rect x="865.5" y="499.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (549 samples, 0.64%)</title><rect x="865.5" y="483.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (80 samples, 0.09%)</title><rect x="865.5" y="467.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (80 samples, 0.09%)</title><rect x="865.5" y="451.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (80 samples, 0.09%)</title><rect x="865.5" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (80 samples, 0.09%)</title><rect x="865.5" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (80 samples, 0.09%)</title><rect x="865.5" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (80 samples, 0.09%)</title><rect x="865.5" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (80 samples, 0.09%)</title><rect x="865.5" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (80 samples, 0.09%)</title><rect x="865.5" y="355.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="868.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (58 samples, 0.07%)</title><rect x="866.6" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.07%)</title><rect x="866.6" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.07%)</title><rect x="866.6" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/1402872104.get$Lambda (58 samples, 0.07%)</title><rect x="866.6" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200 (58 samples, 0.07%)</title><rect x="866.6" y="403.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="869.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (411 samples, 0.48%)</title><rect x="867.4" y="467.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="870.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (217 samples, 0.25%)</title><rect x="867.4" y="451.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (141 samples, 0.16%)</title><rect x="867.4" y="435.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.4" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (141 samples, 0.16%)</title><rect x="867.4" y="419.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="870.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (76 samples, 0.09%)</title><rect x="869.3" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (76 samples, 0.09%)</title><rect x="869.3" y="419.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.3" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (76 samples, 0.09%)</title><rect x="869.3" y="403.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="872.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (194 samples, 0.23%)</title><rect x="870.4" y="451.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$153/863571012.get (194 samples, 0.23%)</title><rect x="870.4" y="435.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (194 samples, 0.23%)</title><rect x="870.4" y="419.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (194 samples, 0.23%)</title><rect x="870.4" y="403.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (193 samples, 0.22%)</title><rect x="870.4" y="387.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.4" y="398.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.22%)</title><rect x="870.4" y="371.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="873.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$195/1595160449.accept (110 samples, 0.13%)</title><rect x="873.0" y="659.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (110 samples, 0.13%)</title><rect x="873.0" y="643.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1748993312.run (110 samples, 0.13%)</title><rect x="873.0" y="627.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (110 samples, 0.13%)</title><rect x="873.0" y="611.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (110 samples, 0.13%)</title><rect x="873.0" y="595.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (110 samples, 0.13%)</title><rect x="873.0" y="579.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (110 samples, 0.13%)</title><rect x="873.0" y="563.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (110 samples, 0.13%)</title><rect x="873.0" y="547.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="876.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (266 samples, 0.31%)</title><rect x="874.6" y="675.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.6" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (266 samples, 0.31%)</title><rect x="874.6" y="659.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="877.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (143 samples, 0.17%)</title><rect x="878.2" y="675.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (61 samples, 0.07%)</title><rect x="878.2" y="659.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (61 samples, 0.07%)</title><rect x="878.2" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (61 samples, 0.07%)</title><rect x="878.2" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (61 samples, 0.07%)</title><rect x="878.2" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (61 samples, 0.07%)</title><rect x="878.2" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (61 samples, 0.07%)</title><rect x="878.2" y="579.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="881.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (61 samples, 0.07%)</title><rect x="878.2" y="563.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="881.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (82 samples, 0.10%)</title><rect x="879.0" y="659.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="882.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (82 samples, 0.10%)</title><rect x="879.0" y="643.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="882.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (263 samples, 0.31%)</title><rect x="880.2" y="675.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/715486789.run (165 samples, 0.19%)</title><rect x="880.2" y="659.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (165 samples, 0.19%)</title><rect x="880.2" y="643.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (165 samples, 0.19%)</title><rect x="880.2" y="627.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="883.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (165 samples, 0.19%)</title><rect x="880.2" y="611.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="883.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (165 samples, 0.19%)</title><rect x="880.2" y="595.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (165 samples, 0.19%)</title><rect x="880.2" y="579.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (165 samples, 0.19%)</title><rect x="880.2" y="563.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (165 samples, 0.19%)</title><rect x="880.2" y="547.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (165 samples, 0.19%)</title><rect x="880.2" y="531.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (165 samples, 0.19%)</title><rect x="880.2" y="515.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (165 samples, 0.19%)</title><rect x="880.2" y="499.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (165 samples, 0.19%)</title><rect x="880.2" y="483.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (165 samples, 0.19%)</title><rect x="880.2" y="467.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/502800944.linkToTargetMethod (119 samples, 0.14%)</title><rect x="880.2" y="451.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1076770748.invoke (119 samples, 0.14%)</title><rect x="880.2" y="435.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="883.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.14%)</title><rect x="880.2" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (119 samples, 0.14%)</title><rect x="880.2" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="883.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (119 samples, 0.14%)</title><rect x="880.2" y="387.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.2" y="398.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.14%)</title><rect x="880.2" y="371.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="883.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (46 samples, 0.05%)</title><rect x="881.8" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.05%)</title><rect x="881.8" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.05%)</title><rect x="881.8" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/1402872104.get$Lambda (46 samples, 0.05%)</title><rect x="881.8" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200 (46 samples, 0.05%)</title><rect x="881.8" y="387.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="884.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$160/810264248.run (98 samples, 0.11%)</title><rect x="882.4" y="659.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (98 samples, 0.11%)</title><rect x="882.4" y="643.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.11%)</title><rect x="882.4" y="627.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.11%)</title><rect x="882.4" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.get$Lambda (98 samples, 0.11%)</title><rect x="882.4" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$198 (98 samples, 0.11%)</title><rect x="882.4" y="579.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="885.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (666 samples, 0.78%)</title><rect x="883.8" y="675.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.8" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (168 samples, 0.20%)</title><rect x="883.8" y="659.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="886.8" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (168 samples, 0.20%)</title><rect x="883.8" y="643.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.8" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (168 samples, 0.20%)</title><rect x="883.8" y="627.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (168 samples, 0.20%)</title><rect x="883.8" y="611.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="886.8" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (168 samples, 0.20%)</title><rect x="883.8" y="595.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="886.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (498 samples, 0.58%)</title><rect x="886.1" y="659.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.12%)</title><rect x="886.1" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.12%)</title><rect x="886.1" y="627.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="889.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$228/451835415.get$Lambda (105 samples, 0.12%)</title><rect x="886.1" y="611.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$228 (105 samples, 0.12%)</title><rect x="886.1" y="595.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="889.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (393 samples, 0.46%)</title><rect x="887.5" y="643.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (170 samples, 0.20%)</title><rect x="887.5" y="627.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="890.5" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (223 samples, 0.26%)</title><rect x="889.9" y="627.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (223 samples, 0.26%)</title><rect x="889.9" y="611.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.9" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (223 samples, 0.26%)</title><rect x="889.9" y="595.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="892.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (553 samples, 0.64%)</title><rect x="893.0" y="675.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.06%)</title><rect x="893.0" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.06%)</title><rect x="893.0" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$187/1350857380.get$Lambda (51 samples, 0.06%)</title><rect x="893.0" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$187 (51 samples, 0.06%)</title><rect x="893.0" y="611.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="896.0" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (316 samples, 0.37%)</title><rect x="893.7" y="659.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.7" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (111 samples, 0.13%)</title><rect x="893.7" y="643.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.7" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (111 samples, 0.13%)</title><rect x="893.7" y="627.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="896.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (205 samples, 0.24%)</title><rect x="895.2" y="643.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.2" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (205 samples, 0.24%)</title><rect x="895.2" y="627.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="898.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (186 samples, 0.22%)</title><rect x="898.0" y="659.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (186 samples, 0.22%)</title><rect x="898.0" y="643.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="901.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (157 samples, 0.18%)</title><rect x="900.6" y="675.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (157 samples, 0.18%)</title><rect x="900.6" y="659.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="903.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (157 samples, 0.18%)</title><rect x="900.6" y="643.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (157 samples, 0.18%)</title><rect x="900.6" y="627.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (39 samples, 0.05%)</title><rect x="900.6" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (39 samples, 0.05%)</title><rect x="900.6" y="595.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="903.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (118 samples, 0.14%)</title><rect x="901.1" y="611.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (118 samples, 0.14%)</title><rect x="901.1" y="595.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (118 samples, 0.14%)</title><rect x="901.1" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (118 samples, 0.14%)</title><rect x="901.1" y="563.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (118 samples, 0.14%)</title><rect x="901.1" y="547.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (118 samples, 0.14%)</title><rect x="901.1" y="531.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="904.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (35 samples, 0.04%)</title><rect x="902.7" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (35 samples, 0.04%)</title><rect x="902.7" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (35 samples, 0.04%)</title><rect x="902.7" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="905.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (35 samples, 0.04%)</title><rect x="902.7" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (35 samples, 0.04%)</title><rect x="902.7" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (35 samples, 0.04%)</title><rect x="902.7" y="595.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="905.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (93 samples, 0.11%)</title><rect x="903.2" y="675.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (93 samples, 0.11%)</title><rect x="903.2" y="659.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (93 samples, 0.11%)</title><rect x="903.2" y="643.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (93 samples, 0.11%)</title><rect x="903.2" y="627.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="906.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (20,763 samples, 24.20%)</title><rect x="904.5" y="691.0" width="285.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.5" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (217 samples, 0.25%)</title><rect x="904.5" y="675.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (217 samples, 0.25%)</title><rect x="904.5" y="659.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="907.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (20,546 samples, 23.94%)</title><rect x="907.5" y="675.0" width="282.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.5" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (20,546 samples, 23.94%)</title><rect x="907.5" y="659.0" width="282.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.5" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (20,546 samples, 23.94%)</title><rect x="907.5" y="643.0" width="282.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.5" y="654.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15,235 samples, 17.75%)</title><rect x="907.5" y="627.0" width="209.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.5" y="638.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15,235 samples, 17.75%)</title><rect x="907.5" y="611.0" width="209.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.5" y="622.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (14,894 samples, 17.36%)</title><rect x="907.5" y="595.0" width="204.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.5" y="606.0">RequestHandler1_entity.hand..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (296 samples, 0.34%)</title><rect x="907.5" y="579.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (296 samples, 0.34%)</title><rect x="907.5" y="563.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (296 samples, 0.34%)</title><rect x="907.5" y="547.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (296 samples, 0.34%)</title><rect x="907.5" y="531.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (139 samples, 0.16%)</title><rect x="907.5" y="515.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="910.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (157 samples, 0.18%)</title><rect x="909.4" y="515.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.4" y="526.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.18%)</title><rect x="909.4" y="499.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="912.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (14,598 samples, 17.01%)</title><rect x="911.5" y="579.0" width="200.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.5" y="590.0">ru/mail/polis/service/code..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.getNodes (411 samples, 0.48%)</title><rect x="911.5" y="563.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.5" y="574.0"></text>
</g>
<g>
<title>java/util/Set.of (411 samples, 0.48%)</title><rect x="911.5" y="547.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.5" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (147 samples, 0.17%)</title><rect x="911.5" y="531.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="914.5" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (264 samples, 0.31%)</title><rect x="913.6" y="531.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (264 samples, 0.31%)</title><rect x="913.6" y="515.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="916.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.invokeHandlerByMethod (14,187 samples, 16.53%)</title><rect x="917.2" y="563.0" width="195.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.2" y="574.0">ru/mail/polis/service/cod..</text>
</g>
<g>
<title>java.lang.String[] (170 samples, 0.20%)</title><rect x="917.2" y="547.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="920.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (125 samples, 0.15%)</title><rect x="919.5" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (125 samples, 0.15%)</title><rect x="919.5" y="531.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (125 samples, 0.15%)</title><rect x="919.5" y="515.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (125 samples, 0.15%)</title><rect x="919.5" y="499.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.5" y="510.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.15%)</title><rect x="919.5" y="483.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="922.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (245 samples, 0.29%)</title><rect x="921.2" y="547.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (245 samples, 0.29%)</title><rect x="921.2" y="531.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="924.2" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (245 samples, 0.29%)</title><rect x="921.2" y="515.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="924.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (385 samples, 0.45%)</title><rect x="924.6" y="547.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (385 samples, 0.45%)</title><rect x="924.6" y="531.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (385 samples, 0.45%)</title><rect x="924.6" y="515.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (117 samples, 0.14%)</title><rect x="924.6" y="499.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="927.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (268 samples, 0.31%)</title><rect x="926.2" y="499.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.2" y="510.0"></text>
</g>
<g>
<title>byte[] (268 samples, 0.31%)</title><rect x="926.2" y="483.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="929.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (27 samples, 0.03%)</title><rect x="929.9" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="932.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.03%)</title><rect x="929.9" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="932.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (13,235 samples, 15.42%)</title><rect x="930.3" y="547.0" width="182.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="933.3" y="558.0">ru/mail/polis/service/co..</text>
</g>
<g>
<title>java.util.ArrayList (407 samples, 0.47%)</title><rect x="930.3" y="531.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="933.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (257 samples, 0.30%)</title><rect x="935.9" y="531.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="938.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (257 samples, 0.30%)</title><rect x="935.9" y="515.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="938.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$229/607495298.get$Lambda (146 samples, 0.17%)</title><rect x="935.9" y="499.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="938.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$229 (146 samples, 0.17%)</title><rect x="935.9" y="483.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="938.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$230/510381842.get$Lambda (111 samples, 0.13%)</title><rect x="937.9" y="499.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$230 (111 samples, 0.13%)</title><rect x="937.9" y="483.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="940.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2000433204.linkToTargetMethod (476 samples, 0.55%)</title><rect x="939.4" y="531.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1244617524.invokeStatic (476 samples, 0.55%)</title><rect x="939.4" y="515.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="942.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$231/1127741028.get$Lambda (476 samples, 0.55%)</title><rect x="939.4" y="499.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.4" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$231 (476 samples, 0.55%)</title><rect x="939.4" y="483.0" width="6.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="942.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (178 samples, 0.21%)</title><rect x="945.9" y="531.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (178 samples, 0.21%)</title><rect x="945.9" y="515.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="948.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (6,643 samples, 7.74%)</title><rect x="948.4" y="531.0" width="91.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.4" y="542.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (6,643 samples, 7.74%)</title><rect x="948.4" y="515.0" width="91.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.4" y="526.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (318 samples, 0.37%)</title><rect x="948.4" y="499.0" width="4.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="951.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (272 samples, 0.32%)</title><rect x="952.8" y="499.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="955.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (6,053 samples, 7.05%)</title><rect x="956.5" y="499.0" width="83.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.5" y="510.0">java/util..</text>
</g>
<g>
<title>java.lang.Thread (1,053 samples, 1.23%)</title><rect x="956.5" y="483.0" width="14.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="959.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Thread (2,010 samples, 2.34%)</title><rect x="971.0" y="483.0" width="27.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="974.0" y="494.0">j..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2,990 samples, 3.48%)</title><rect x="998.6" y="483.0" width="41.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.6" y="494.0">jav..</text>
</g>
<g>
<title>java.lang.StringBuilder (176 samples, 0.21%)</title><rect x="998.6" y="467.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1001.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (236 samples, 0.28%)</title><rect x="1001.1" y="467.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (236 samples, 0.28%)</title><rect x="1001.1" y="451.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.1" y="462.0"></text>
</g>
<g>
<title>byte[] (236 samples, 0.28%)</title><rect x="1001.1" y="435.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1004.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (567 samples, 0.66%)</title><rect x="1004.3" y="467.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (567 samples, 0.66%)</title><rect x="1004.3" y="451.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (242 samples, 0.28%)</title><rect x="1004.3" y="435.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1007.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (325 samples, 0.38%)</title><rect x="1007.6" y="435.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.6" y="446.0"></text>
</g>
<g>
<title>byte[] (325 samples, 0.38%)</title><rect x="1007.6" y="419.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1010.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2,011 samples, 2.34%)</title><rect x="1012.1" y="467.0" width="27.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.1" y="478.0">j..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2,011 samples, 2.34%)</title><rect x="1012.1" y="451.0" width="27.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.1" y="462.0">j..</text>
</g>
<g>
<title>java.lang.Object (219 samples, 0.26%)</title><rect x="1012.1" y="435.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1015.1" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (1,792 samples, 2.09%)</title><rect x="1015.1" y="435.0" width="24.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1018.1" y="446.0">j..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (868 samples, 1.01%)</title><rect x="1015.1" y="419.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.1" y="430.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (868 samples, 1.01%)</title><rect x="1015.1" y="403.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1018.1" y="414.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (868 samples, 1.01%)</title><rect x="1015.1" y="387.0" width="11.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1018.1" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (924 samples, 1.08%)</title><rect x="1027.0" y="419.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.0" y="430.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (560 samples, 0.65%)</title><rect x="1027.0" y="403.0" width="7.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1030.0" y="414.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (364 samples, 0.42%)</title><rect x="1034.7" y="403.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1037.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (700 samples, 0.82%)</title><rect x="1039.7" y="531.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (700 samples, 0.82%)</title><rect x="1039.7" y="515.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (453 samples, 0.53%)</title><rect x="1039.7" y="499.0" width="6.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1042.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (247 samples, 0.29%)</title><rect x="1046.0" y="499.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (247 samples, 0.29%)</title><rect x="1046.0" y="483.0" width="3.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1049.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (2,904 samples, 3.38%)</title><rect x="1049.4" y="531.0" width="39.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1052.4" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,904 samples, 3.38%)</title><rect x="1049.4" y="515.0" width="39.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.4" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,904 samples, 3.38%)</title><rect x="1049.4" y="499.0" width="39.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.4" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,904 samples, 3.38%)</title><rect x="1049.4" y="483.0" width="39.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.4" y="494.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.03%)</title><rect x="1049.4" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.03%)</title><rect x="1049.4" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$134/981260519.get$Lambda (30 samples, 0.03%)</title><rect x="1049.4" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$134 (30 samples, 0.03%)</title><rect x="1049.4" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1052.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (106 samples, 0.12%)</title><rect x="1049.8" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (106 samples, 0.12%)</title><rect x="1049.8" y="451.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (62 samples, 0.07%)</title><rect x="1049.8" y="435.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1052.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="1050.6" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="1050.6" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="1050.6" y="403.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1053.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (91 samples, 0.11%)</title><rect x="1051.2" y="467.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (91 samples, 0.11%)</title><rect x="1051.2" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (45 samples, 0.05%)</title><rect x="1051.2" y="435.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1054.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="1051.9" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="1051.9" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="1051.9" y="403.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1054.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (83 samples, 0.10%)</title><rect x="1052.5" y="467.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1055.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (126 samples, 0.15%)</title><rect x="1053.6" y="467.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1056.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,367 samples, 1.59%)</title><rect x="1055.4" y="467.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (152 samples, 0.18%)</title><rect x="1055.4" y="451.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.4" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (120 samples, 0.14%)</title><rect x="1055.4" y="435.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (46 samples, 0.05%)</title><rect x="1055.4" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1058.4" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (46 samples, 0.05%)</title><rect x="1055.4" y="403.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1058.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (74 samples, 0.09%)</title><rect x="1056.0" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.0" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (74 samples, 0.09%)</title><rect x="1056.0" y="403.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1059.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (32 samples, 0.04%)</title><rect x="1057.0" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (32 samples, 0.04%)</title><rect x="1057.0" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1060.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (32 samples, 0.04%)</title><rect x="1057.0" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/22069592.get (32 samples, 0.04%)</title><rect x="1057.0" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.0" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (32 samples, 0.04%)</title><rect x="1057.0" y="371.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1060.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (551 samples, 0.64%)</title><rect x="1057.5" y="451.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (551 samples, 0.64%)</title><rect x="1057.5" y="435.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.5" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (34 samples, 0.04%)</title><rect x="1057.7" y="419.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1060.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (70 samples, 0.08%)</title><rect x="1058.1" y="419.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1061.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (24 samples, 0.03%)</title><rect x="1059.1" y="419.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1062.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.06%)</title><rect x="1059.4" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.06%)</title><rect x="1059.4" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.get$Lambda (48 samples, 0.06%)</title><rect x="1059.4" y="387.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.4" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (48 samples, 0.06%)</title><rect x="1059.4" y="371.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1062.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (251 samples, 0.29%)</title><rect x="1060.1" y="419.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (251 samples, 0.29%)</title><rect x="1060.1" y="403.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (251 samples, 0.29%)</title><rect x="1060.1" y="387.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (251 samples, 0.29%)</title><rect x="1060.1" y="371.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (110 samples, 0.13%)</title><rect x="1060.1" y="355.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (67 samples, 0.08%)</title><rect x="1060.1" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.1" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (67 samples, 0.08%)</title><rect x="1060.1" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1063.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (67 samples, 0.08%)</title><rect x="1060.1" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (67 samples, 0.08%)</title><rect x="1060.1" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1063.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (67 samples, 0.08%)</title><rect x="1060.1" y="275.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1063.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (67 samples, 0.08%)</title><rect x="1060.1" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (67 samples, 0.08%)</title><rect x="1060.1" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (67 samples, 0.08%)</title><rect x="1060.1" y="227.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1063.1" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (43 samples, 0.05%)</title><rect x="1061.0" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.0" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (43 samples, 0.05%)</title><rect x="1061.0" y="323.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1064.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="1061.6" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="1061.6" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.get$Lambda (24 samples, 0.03%)</title><rect x="1061.6" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.6" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (24 samples, 0.03%)</title><rect x="1061.6" y="307.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1064.6" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (59 samples, 0.07%)</title><rect x="1061.9" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.9" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (59 samples, 0.07%)</title><rect x="1061.9" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (27 samples, 0.03%)</title><rect x="1061.9" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.03%)</title><rect x="1061.9" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.03%)</title><rect x="1061.9" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1064.9" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (32 samples, 0.04%)</title><rect x="1062.3" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.3" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (32 samples, 0.04%)</title><rect x="1062.3" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1065.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (58 samples, 0.07%)</title><rect x="1062.7" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.7" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (58 samples, 0.07%)</title><rect x="1062.7" y="339.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1065.7" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (47 samples, 0.05%)</title><rect x="1063.5" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.5" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (47 samples, 0.05%)</title><rect x="1063.5" y="403.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1066.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (63 samples, 0.07%)</title><rect x="1064.2" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (63 samples, 0.07%)</title><rect x="1064.2" y="403.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1067.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (22 samples, 0.03%)</title><rect x="1065.0" y="451.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1068.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (448 samples, 0.52%)</title><rect x="1065.3" y="451.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1068.3" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (448 samples, 0.52%)</title><rect x="1065.3" y="435.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1068.3" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (383 samples, 0.45%)</title><rect x="1065.3" y="419.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.3" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (383 samples, 0.45%)</title><rect x="1065.3" y="403.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.3" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (383 samples, 0.45%)</title><rect x="1065.3" y="387.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1068.3" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (107 samples, 0.12%)</title><rect x="1065.3" y="371.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1068.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (149 samples, 0.17%)</title><rect x="1066.8" y="371.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1069.8" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (149 samples, 0.17%)</title><rect x="1066.8" y="355.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.8" y="366.0"></text>
</g>
<g>
<title>byte[] (149 samples, 0.17%)</title><rect x="1066.8" y="339.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1069.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (127 samples, 0.15%)</title><rect x="1068.9" y="371.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (127 samples, 0.15%)</title><rect x="1068.9" y="355.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (127 samples, 0.15%)</title><rect x="1068.9" y="339.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.9" y="350.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.15%)</title><rect x="1068.9" y="323.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1071.9" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (65 samples, 0.08%)</title><rect x="1070.6" y="419.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1073.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (56 samples, 0.07%)</title><rect x="1071.5" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (56 samples, 0.07%)</title><rect x="1071.5" y="435.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1074.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (138 samples, 0.16%)</title><rect x="1072.3" y="451.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.3" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (43 samples, 0.05%)</title><rect x="1072.3" y="435.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1075.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (39 samples, 0.05%)</title><rect x="1072.9" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.05%)</title><rect x="1072.9" y="419.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1075.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (56 samples, 0.07%)</title><rect x="1073.4" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (56 samples, 0.07%)</title><rect x="1073.4" y="419.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1076.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (767 samples, 0.89%)</title><rect x="1074.2" y="467.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1077.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (21 samples, 0.02%)</title><rect x="1074.2" y="451.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1077.2" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.map (61 samples, 0.07%)</title><rect x="1074.5" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/810424680.apply (61 samples, 0.07%)</title><rect x="1074.5" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (26 samples, 0.03%)</title><rect x="1074.5" y="419.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1077.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (35 samples, 0.04%)</title><rect x="1074.8" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (35 samples, 0.04%)</title><rect x="1074.8" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1077.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (117 samples, 0.14%)</title><rect x="1075.3" y="451.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1078.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (19 samples, 0.02%)</title><rect x="1077.1" y="451.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1080.1" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (19 samples, 0.02%)</title><rect x="1077.1" y="435.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.1" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (19 samples, 0.02%)</title><rect x="1077.1" y="419.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1080.1" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (19 samples, 0.02%)</title><rect x="1077.1" y="403.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1080.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (536 samples, 0.62%)</title><rect x="1077.3" y="451.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (536 samples, 0.62%)</title><rect x="1077.3" y="435.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (41 samples, 0.05%)</title><rect x="1077.3" y="419.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1080.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.06%)</title><rect x="1077.9" y="419.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1080.9" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (39 samples, 0.05%)</title><rect x="1078.6" y="419.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1081.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (259 samples, 0.30%)</title><rect x="1079.1" y="419.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1082.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (259 samples, 0.30%)</title><rect x="1079.1" y="403.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1082.1" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (259 samples, 0.30%)</title><rect x="1079.1" y="387.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (259 samples, 0.30%)</title><rect x="1079.1" y="371.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1082.1" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (259 samples, 0.30%)</title><rect x="1079.1" y="355.0" width="3.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1082.1" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (80 samples, 0.09%)</title><rect x="1082.7" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1085.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (80 samples, 0.09%)</title><rect x="1082.7" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (20 samples, 0.02%)</title><rect x="1082.7" y="387.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (20 samples, 0.02%)</title><rect x="1082.7" y="371.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1085.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (60 samples, 0.07%)</title><rect x="1082.9" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (60 samples, 0.07%)</title><rect x="1082.9" y="371.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1085.9" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (69 samples, 0.08%)</title><rect x="1083.8" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1086.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (69 samples, 0.08%)</title><rect x="1083.8" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.8" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (69 samples, 0.08%)</title><rect x="1083.8" y="387.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1086.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (334 samples, 0.39%)</title><rect x="1084.7" y="467.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (34 samples, 0.04%)</title><rect x="1084.7" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1087.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (34 samples, 0.04%)</title><rect x="1084.7" y="435.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1087.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.05%)</title><rect x="1085.2" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1088.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (261 samples, 0.30%)</title><rect x="1085.7" y="451.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1088.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.06%)</title><rect x="1085.7" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.06%)</title><rect x="1085.7" y="419.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.get$Lambda (23 samples, 0.03%)</title><rect x="1085.7" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (23 samples, 0.03%)</title><rect x="1085.7" y="387.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1088.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/704105605.get$Lambda (28 samples, 0.03%)</title><rect x="1086.0" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$130 (28 samples, 0.03%)</title><rect x="1086.0" y="387.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1089.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (210 samples, 0.24%)</title><rect x="1086.4" y="435.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1089.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (210 samples, 0.24%)</title><rect x="1086.4" y="419.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (114 samples, 0.13%)</title><rect x="1086.4" y="403.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1089.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (96 samples, 0.11%)</title><rect x="1088.0" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (96 samples, 0.11%)</title><rect x="1088.0" y="387.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (96 samples, 0.11%)</title><rect x="1088.0" y="371.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1091.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (643 samples, 0.75%)</title><rect x="1089.3" y="531.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (50 samples, 0.06%)</title><rect x="1089.3" y="515.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1092.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (593 samples, 0.69%)</title><rect x="1090.0" y="515.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (571 samples, 0.67%)</title><rect x="1090.0" y="499.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1093.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (571 samples, 0.67%)</title><rect x="1090.0" y="483.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.0" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (36 samples, 0.04%)</title><rect x="1090.2" y="467.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1093.2" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (75 samples, 0.09%)</title><rect x="1090.7" y="467.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1093.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (23 samples, 0.03%)</title><rect x="1091.7" y="467.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1094.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.06%)</title><rect x="1092.1" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.06%)</title><rect x="1092.1" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.get$Lambda (52 samples, 0.06%)</title><rect x="1092.1" y="435.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.1" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (52 samples, 0.06%)</title><rect x="1092.1" y="419.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1095.1" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (48 samples, 0.06%)</title><rect x="1092.8" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.8" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (48 samples, 0.06%)</title><rect x="1092.8" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1095.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (236 samples, 0.28%)</title><rect x="1093.4" y="467.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (236 samples, 0.28%)</title><rect x="1093.4" y="451.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (236 samples, 0.28%)</title><rect x="1093.4" y="435.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.03%)</title><rect x="1093.4" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.03%)</title><rect x="1093.4" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.get$Lambda (29 samples, 0.03%)</title><rect x="1093.4" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.4" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (29 samples, 0.03%)</title><rect x="1093.4" y="371.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1096.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (75 samples, 0.09%)</title><rect x="1093.8" y="419.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (75 samples, 0.09%)</title><rect x="1093.8" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.8" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (75 samples, 0.09%)</title><rect x="1093.8" y="387.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (75 samples, 0.09%)</title><rect x="1093.8" y="371.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (75 samples, 0.09%)</title><rect x="1093.8" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (75 samples, 0.09%)</title><rect x="1093.8" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (75 samples, 0.09%)</title><rect x="1093.8" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (75 samples, 0.09%)</title><rect x="1093.8" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (75 samples, 0.09%)</title><rect x="1093.8" y="291.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1096.8" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (59 samples, 0.07%)</title><rect x="1094.9" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.9" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (59 samples, 0.07%)</title><rect x="1094.9" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (30 samples, 0.03%)</title><rect x="1094.9" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.03%)</title><rect x="1094.9" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1097.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.03%)</title><rect x="1094.9" y="355.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1097.9" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (29 samples, 0.03%)</title><rect x="1095.3" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.3" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (29 samples, 0.03%)</title><rect x="1095.3" y="371.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1098.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (73 samples, 0.09%)</title><rect x="1095.7" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (73 samples, 0.09%)</title><rect x="1095.7" y="403.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1098.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (85 samples, 0.10%)</title><rect x="1096.7" y="467.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (85 samples, 0.10%)</title><rect x="1096.7" y="451.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1099.7" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (22 samples, 0.03%)</title><rect x="1097.9" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.9" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.of (22 samples, 0.03%)</title><rect x="1097.9" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.9" y="494.0"></text>
</g>
<g>
<title>java.util.Optional (22 samples, 0.03%)</title><rect x="1097.9" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1100.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.setRequestPattern (1,027 samples, 1.20%)</title><rect x="1098.2" y="531.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (138 samples, 0.16%)</title><rect x="1098.2" y="515.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1101.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (138 samples, 0.16%)</title><rect x="1098.2" y="499.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (138 samples, 0.16%)</title><rect x="1098.2" y="483.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1101.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (33 samples, 0.04%)</title><rect x="1098.2" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.04%)</title><rect x="1098.2" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1101.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (105 samples, 0.12%)</title><rect x="1098.6" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (105 samples, 0.12%)</title><rect x="1098.6" y="451.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.6" y="462.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.12%)</title><rect x="1098.6" y="435.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1101.6" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (551 samples, 0.64%)</title><rect x="1100.1" y="515.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.1" y="526.0"></text>
</g>
<g>
<title>java.net.URI (114 samples, 0.13%)</title><rect x="1100.1" y="499.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1103.1" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (437 samples, 0.51%)</title><rect x="1101.6" y="499.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.6" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (40 samples, 0.05%)</title><rect x="1101.6" y="483.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1104.6" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (397 samples, 0.46%)</title><rect x="1102.2" y="483.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (75 samples, 0.09%)</title><rect x="1102.2" y="467.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (75 samples, 0.09%)</title><rect x="1102.2" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.04%)</title><rect x="1102.2" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1105.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.05%)</title><rect x="1102.6" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1105.6" y="446.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.05%)</title><rect x="1102.6" y="419.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1105.6" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (322 samples, 0.38%)</title><rect x="1103.2" y="467.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (146 samples, 0.17%)</title><rect x="1103.2" y="451.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (146 samples, 0.17%)</title><rect x="1103.2" y="435.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.08%)</title><rect x="1103.2" y="419.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1106.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (77 samples, 0.09%)</title><rect x="1104.1" y="419.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1107.1" y="430.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.09%)</title><rect x="1104.1" y="403.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1107.1" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (176 samples, 0.21%)</title><rect x="1105.2" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (83 samples, 0.10%)</title><rect x="1105.2" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1108.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (83 samples, 0.10%)</title><rect x="1105.2" y="419.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.04%)</title><rect x="1105.2" y="403.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1108.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.05%)</title><rect x="1105.7" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.7" y="414.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="1105.7" y="387.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1108.7" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (93 samples, 0.11%)</title><rect x="1106.3" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.3" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (93 samples, 0.11%)</title><rect x="1106.3" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (93 samples, 0.11%)</title><rect x="1106.3" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1109.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.11%)</title><rect x="1106.3" y="387.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1109.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.05%)</title><rect x="1106.3" y="371.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1109.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.06%)</title><rect x="1106.9" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.9" y="382.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.06%)</title><rect x="1106.9" y="355.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1109.9" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (167 samples, 0.19%)</title><rect x="1107.6" y="515.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (54 samples, 0.06%)</title><rect x="1107.6" y="499.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1110.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (113 samples, 0.13%)</title><rect x="1108.4" y="499.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (25 samples, 0.03%)</title><rect x="1108.4" y="483.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1111.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (88 samples, 0.10%)</title><rect x="1108.7" y="483.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.7" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (88 samples, 0.10%)</title><rect x="1108.7" y="467.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1111.7" y="478.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (37 samples, 0.04%)</title><rect x="1109.9" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.9" y="526.0"></text>
</g>
<g>
<title>java/time/Duration.create (37 samples, 0.04%)</title><rect x="1109.9" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.9" y="510.0"></text>
</g>
<g>
<title>java.time.Duration (37 samples, 0.04%)</title><rect x="1109.9" y="483.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1112.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (134 samples, 0.16%)</title><rect x="1110.4" y="515.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (134 samples, 0.16%)</title><rect x="1110.4" y="499.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1113.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (134 samples, 0.16%)</title><rect x="1110.4" y="483.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.4" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (41 samples, 0.05%)</title><rect x="1110.4" y="467.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1113.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (29 samples, 0.03%)</title><rect x="1111.0" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.03%)</title><rect x="1111.0" y="451.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1114.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (64 samples, 0.07%)</title><rect x="1111.4" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (64 samples, 0.07%)</title><rect x="1111.4" y="451.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1114.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (341 samples, 0.40%)</title><rect x="1112.3" y="595.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (341 samples, 0.40%)</title><rect x="1112.3" y="579.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (341 samples, 0.40%)</title><rect x="1112.3" y="563.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (143 samples, 0.17%)</title><rect x="1112.3" y="547.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1115.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (198 samples, 0.23%)</title><rect x="1114.2" y="547.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.2" y="558.0"></text>
</g>
<g>
<title>byte[] (198 samples, 0.23%)</title><rect x="1114.2" y="531.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1117.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,420 samples, 1.65%)</title><rect x="1117.0" y="627.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.0" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Request (230 samples, 0.27%)</title><rect x="1117.0" y="611.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1120.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (444 samples, 0.52%)</title><rect x="1120.1" y="611.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1123.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (374 samples, 0.44%)</title><rect x="1120.1" y="595.0" width="5.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1123.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (70 samples, 0.08%)</title><rect x="1125.3" y="595.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1128.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (746 samples, 0.87%)</title><rect x="1126.2" y="611.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (746 samples, 0.87%)</title><rect x="1126.2" y="595.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.2" y="606.0"></text>
</g>
<g>
<title>char[] (402 samples, 0.47%)</title><rect x="1126.2" y="579.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1129.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (124 samples, 0.14%)</title><rect x="1131.8" y="579.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1134.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (220 samples, 0.26%)</title><rect x="1133.5" y="579.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (220 samples, 0.26%)</title><rect x="1133.5" y="563.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (220 samples, 0.26%)</title><rect x="1133.5" y="547.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.5" y="558.0"></text>
</g>
<g>
<title>byte[] (220 samples, 0.26%)</title><rect x="1133.5" y="531.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1136.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (79 samples, 0.09%)</title><rect x="1136.5" y="627.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.5" y="638.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.09%)</title><rect x="1136.5" y="611.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1139.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (425 samples, 0.50%)</title><rect x="1137.6" y="627.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (425 samples, 0.50%)</title><rect x="1137.6" y="611.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (425 samples, 0.50%)</title><rect x="1137.6" y="595.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (220 samples, 0.26%)</title><rect x="1137.6" y="579.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1140.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (205 samples, 0.24%)</title><rect x="1140.6" y="579.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.6" y="590.0"></text>
</g>
<g>
<title>byte[] (205 samples, 0.24%)</title><rect x="1140.6" y="563.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1143.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,387 samples, 3.95%)</title><rect x="1143.4" y="627.0" width="46.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.4" y="638.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,387 samples, 3.95%)</title><rect x="1143.4" y="611.0" width="46.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.4" y="622.0">one/..</text>
</g>
<g>
<title>char[] (1,437 samples, 1.67%)</title><rect x="1143.4" y="595.0" width="19.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1146.4" y="606.0"></text>
</g>
<g>
<title>char[] (279 samples, 0.33%)</title><rect x="1163.2" y="595.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1166.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (529 samples, 0.62%)</title><rect x="1167.0" y="595.0" width="7.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1170.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,142 samples, 1.33%)</title><rect x="1174.3" y="595.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,142 samples, 1.33%)</title><rect x="1174.3" y="579.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,142 samples, 1.33%)</title><rect x="1174.3" y="563.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.3" y="574.0"></text>
</g>
<g>
<title>byte[] (1,142 samples, 1.33%)</title><rect x="1174.3" y="547.0" width="15.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1177.3" y="558.0"></text>
</g>
</g>
</svg>
