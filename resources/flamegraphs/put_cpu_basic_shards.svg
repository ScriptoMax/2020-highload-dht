<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Basic shard control | CPU</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (6,458 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.23%)</title><rect x="10.0" y="915.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.22%)</title><rect x="10.2" y="899.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.2" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (13 samples, 0.20%)</title><rect x="10.2" y="883.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (12 samples, 0.19%)</title><rect x="10.2" y="867.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.03%)</title><rect x="10.2" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.2" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.12%)</title><rect x="10.5" y="851.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.11%)</title><rect x="10.7" y="835.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="13.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.11%)</title><rect x="10.7" y="819.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="13.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.06%)</title><rect x="11.3" y="803.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="14.3" y="814.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="11.3" y="787.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="14.3" y="798.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="11.3" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="14.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="12.0" y="851.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="15.0" y="862.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.08%)</title><rect x="12.9" y="915.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="15.9" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.06%)</title><rect x="12.9" y="899.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.06%)</title><rect x="12.9" y="883.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.9" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="12.9" y="867.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="13.3" y="867.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.3" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.03%)</title><rect x="13.3" y="851.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="16.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="13.8" y="915.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="16.8" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="13.8" y="899.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="16.8" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (24 samples, 0.37%)</title><rect x="14.2" y="915.0" width="4.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="17.2" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.03%)</title><rect x="14.6" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.6" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.31%)</title><rect x="14.9" y="899.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="17.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.29%)</title><rect x="15.1" y="883.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.29%)</title><rect x="15.1" y="867.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="18.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.28%)</title><rect x="15.1" y="851.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.1" y="862.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.28%)</title><rect x="15.1" y="835.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.1" y="846.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.26%)</title><rect x="15.1" y="819.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.1" y="830.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.25%)</title><rect x="15.3" y="803.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="18.3" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.25%)</title><rect x="15.3" y="787.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="18.3" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.23%)</title><rect x="15.5" y="771.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="18.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (16 samples, 0.25%)</title><rect x="19.1" y="915.0" width="3.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="22.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.19%)</title><rect x="19.9" y="899.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="22.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.19%)</title><rect x="19.9" y="883.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.9" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.14%)</title><rect x="20.2" y="867.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="23.2" y="878.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.12%)</title><rect x="20.4" y="851.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.4" y="862.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.08%)</title><rect x="20.4" y="835.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.4" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="20.4" y="819.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.4" y="830.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.03%)</title><rect x="20.6" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.6" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="20.6" y="787.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,769 samples, 73.85%)</title><rect x="22.2" y="915.0" width="871.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.2" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,769 samples, 73.85%)</title><rect x="22.2" y="899.0" width="871.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.2" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,769 samples, 73.85%)</title><rect x="22.2" y="883.0" width="871.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.2" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.05%)</title><rect x="24.1" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="24.1" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.05%)</title><rect x="24.1" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="24.1" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.03%)</title><rect x="24.3" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (304 samples, 4.71%)</title><rect x="24.6" y="867.0" width="55.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.6" y="878.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (304 samples, 4.71%)</title><rect x="24.6" y="851.0" width="55.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.6" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (295 samples, 4.57%)</title><rect x="24.8" y="835.0" width="53.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.8" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (10 samples, 0.15%)</title><rect x="25.3" y="819.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.11%)</title><rect x="27.2" y="819.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (4 samples, 0.06%)</title><rect x="28.5" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (4 samples, 0.06%)</title><rect x="28.5" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (268 samples, 4.15%)</title><rect x="29.2" y="819.0" width="49.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.2" y="830.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (248 samples, 3.84%)</title><rect x="32.7" y="803.0" width="45.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.7" y="814.0">jdk/..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="33.9" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="36.9" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (115 samples, 1.78%)</title><rect x="34.5" y="787.0" width="21.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="37.5" y="798.0">U..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.05%)</title><rect x="35.4" y="771.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="38.4" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (20 samples, 0.31%)</title><rect x="36.3" y="771.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="39.3" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.05%)</title><rect x="38.3" y="755.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="41.3" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="39.1" y="755.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="42.1" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.03%)</title><rect x="39.6" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="42.6" y="766.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (3 samples, 0.05%)</title><rect x="40.0" y="771.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="43.0" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="40.5" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="43.5" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.05%)</title><rect x="41.1" y="771.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="44.1" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (46 samples, 0.71%)</title><rect x="41.6" y="771.0" width="8.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="44.6" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.56%)</title><rect x="43.4" y="755.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="46.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.56%)</title><rect x="43.4" y="739.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="46.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.22%)</title><rect x="47.5" y="723.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.5" y="734.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.17%)</title><rect x="47.6" y="707.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="50.6" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="48.0" y="691.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.0" y="702.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="48.4" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="51.4" y="686.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.06%)</title><rect x="48.7" y="691.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="51.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="49.7" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="52.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.05%)</title><rect x="50.0" y="771.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="53.0" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="50.6" y="771.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="53.6" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="51.1" y="771.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="54.1" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.05%)</title><rect x="51.5" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="54.5" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.06%)</title><rect x="52.2" y="771.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="55.2" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (10 samples, 0.15%)</title><rect x="53.1" y="771.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="56.1" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (3 samples, 0.05%)</title><rect x="54.9" y="771.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="57.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.89%)</title><rect x="55.5" y="787.0" width="22.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="58.5" y="798.0">[..</text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.03%)</title><rect x="55.9" y="771.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="58.9" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.15%)</title><rect x="56.2" y="771.0" width="1.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="59.2" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="58.1" y="771.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="61.1" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.05%)</title><rect x="58.4" y="771.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="61.4" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (103 samples, 1.59%)</title><rect x="59.0" y="771.0" width="18.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="62.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.88%)</title><rect x="67.4" y="755.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.87%)</title><rect x="67.6" y="739.0" width="10.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.50%)</title><rect x="71.9" y="723.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.9" y="734.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.45%)</title><rect x="72.5" y="707.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="75.5" y="718.0"></text>
</g>
<g>
<title>futex_wait (27 samples, 0.42%)</title><rect x="72.7" y="691.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="75.7" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.14%)</title><rect x="73.8" y="675.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="76.8" y="686.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.05%)</title><rect x="74.0" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.0" y="670.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.08%)</title><rect x="74.5" y="659.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="77.5" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="75.0" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.08%)</title><rect x="75.4" y="675.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.4" y="686.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.03%)</title><rect x="76.0" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.0" y="670.0"></text>
</g>
<g>
<title>hash_futex (7 samples, 0.11%)</title><rect x="76.3" y="675.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.05%)</title><rect x="78.2" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.11%)</title><rect x="78.9" y="835.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.11%)</title><rect x="78.9" y="819.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.11%)</title><rect x="78.9" y="803.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.11%)</title><rect x="78.9" y="787.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.11%)</title><rect x="78.9" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.09%)</title><rect x="79.1" y="755.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="82.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.09%)</title><rect x="79.1" y="739.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="82.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.09%)</title><rect x="79.1" y="723.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="82.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.09%)</title><rect x="79.1" y="707.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="82.1" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="79.3" y="691.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="82.3" y="702.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.08%)</title><rect x="79.3" y="675.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="82.3" y="686.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.08%)</title><rect x="79.3" y="659.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.3" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.08%)</title><rect x="79.3" y="643.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="82.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="79.3" y="627.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.run (4,452 samples, 68.94%)</title><rect x="80.2" y="867.0" width="813.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.2" y="878.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4 (4,450 samples, 68.91%)</title><rect x="80.5" y="851.0" width="813.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.5" y="862.0">ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,736 samples, 26.88%)</title><rect x="80.5" y="835.0" width="317.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.5" y="846.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (24 samples, 0.37%)</title><rect x="84.0" y="819.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (24 samples, 0.37%)</title><rect x="84.0" y="803.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (24 samples, 0.37%)</title><rect x="84.0" y="787.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.9" y="771.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="87.9" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="84.9" y="755.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="87.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="85.5" y="771.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="88.5" y="782.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.03%)</title><rect x="86.2" y="771.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="89.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.15%)</title><rect x="86.6" y="771.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="89.6" y="782.0"></text>
</g>
<g>
<title>gettimeofday (9 samples, 0.14%)</title><rect x="86.7" y="755.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="89.7" y="766.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.14%)</title><rect x="86.7" y="739.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="89.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2 samples, 0.03%)</title><rect x="88.4" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,680 samples, 26.01%)</title><rect x="88.8" y="819.0" width="306.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.8" y="830.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (45 samples, 0.70%)</title><rect x="88.9" y="803.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (27 samples, 0.42%)</title><rect x="92.2" y="787.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (27 samples, 0.42%)</title><rect x="92.2" y="771.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (27 samples, 0.42%)</title><rect x="92.2" y="755.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.2" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="96.6" y="739.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="99.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,634 samples, 25.30%)</title><rect x="97.2" y="803.0" width="298.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.2" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,634 samples, 25.30%)</title><rect x="97.2" y="787.0" width="298.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.2" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.09%)</title><rect x="100.4" y="771.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="103.4" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.08%)</title><rect x="100.6" y="755.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="103.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (3 samples, 0.05%)</title><rect x="100.8" y="739.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="103.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,609 samples, 24.91%)</title><rect x="101.5" y="771.0" width="294.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.5" y="782.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="102.1" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,604 samples, 24.84%)</title><rect x="102.5" y="755.0" width="293.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="105.5" y="766.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (52 samples, 0.81%)</title><rect x="108.1" y="739.0" width="9.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="111.1" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="111.2" y="723.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="114.2" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="111.6" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="114.6" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (11 samples, 0.17%)</title><rect x="112.3" y="723.0" width="2.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="115.3" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (15 samples, 0.23%)</title><rect x="114.5" y="723.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="117.5" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="115.4" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="118.4" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.09%)</title><rect x="116.2" y="707.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="119.2" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="116.9" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="119.9" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="117.3" y="723.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.3" y="734.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="117.6" y="739.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="120.6" y="750.0"></text>
</g>
<g>
<title>__libc_send (1,514 samples, 23.44%)</title><rect x="118.4" y="739.0" width="276.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="121.4" y="750.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,485 samples, 22.99%)</title><rect x="123.7" y="723.0" width="271.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.7" y="734.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (11 samples, 0.17%)</title><rect x="123.7" y="707.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="126.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1,474 samples, 22.82%)</title><rect x="125.7" y="707.0" width="269.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="128.7" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,411 samples, 21.85%)</title><rect x="137.0" y="691.0" width="257.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="140.0" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,402 samples, 21.71%)</title><rect x="137.2" y="675.0" width="256.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="140.2" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="138.8" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="141.8" y="670.0"></text>
</g>
<g>
<title>inet_sendmsg (3 samples, 0.05%)</title><rect x="139.4" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="142.4" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (1,367 samples, 21.17%)</title><rect x="139.9" y="659.0" width="249.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="142.9" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="140.1" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="143.1" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (1,338 samples, 20.72%)</title><rect x="140.5" y="643.0" width="244.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="143.5" y="654.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,327 samples, 20.55%)</title><rect x="142.1" y="627.0" width="242.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="145.1" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="143.0" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="146.0" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="143.4" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="143.9" y="611.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="146.9" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.11%)</title><rect x="144.7" y="611.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="147.7" y="622.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.09%)</title><rect x="145.9" y="611.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="148.9" y="622.0"></text>
</g>
<g>
<title>skb_put (3 samples, 0.05%)</title><rect x="147.2" y="611.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="150.2" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.08%)</title><rect x="148.1" y="611.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="151.1" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,285 samples, 19.90%)</title><rect x="149.2" y="611.0" width="234.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="152.2" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (15 samples, 0.23%)</title><rect x="154.9" y="595.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="157.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (12 samples, 0.19%)</title><rect x="155.4" y="579.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="158.4" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="157.8" y="595.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="160.8" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (13 samples, 0.20%)</title><rect x="158.4" y="595.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="161.4" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (11 samples, 0.17%)</title><rect x="158.7" y="579.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.7" y="590.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (5 samples, 0.08%)</title><rect x="160.9" y="595.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="163.9" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (61 samples, 0.94%)</title><rect x="161.8" y="595.0" width="11.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="164.8" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (53 samples, 0.82%)</title><rect x="162.0" y="579.0" width="9.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.0" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (22 samples, 0.34%)</title><rect x="163.7" y="563.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="166.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (18 samples, 0.28%)</title><rect x="163.7" y="547.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="166.7" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (8 samples, 0.12%)</title><rect x="164.8" y="531.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="167.8" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.05%)</title><rect x="166.4" y="531.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="169.4" y="542.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="167.0" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="170.0" y="558.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.03%)</title><rect x="167.3" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="170.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.28%)</title><rect x="167.9" y="563.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="170.9" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.08%)</title><rect x="170.2" y="547.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="173.2" y="558.0"></text>
</g>
<g>
<title>should_failslab (3 samples, 0.05%)</title><rect x="171.2" y="563.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.2" y="574.0"></text>
</g>
<g>
<title>ksize (7 samples, 0.11%)</title><rect x="171.7" y="579.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.7" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.05%)</title><rect x="173.0" y="595.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.0" y="606.0"></text>
</g>
<g>
<title>tcp_push (1,122 samples, 17.37%)</title><rect x="173.9" y="595.0" width="205.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="176.9" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,116 samples, 17.28%)</title><rect x="174.3" y="579.0" width="203.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="177.3" y="590.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (4 samples, 0.06%)</title><rect x="174.8" y="563.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="177.8" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.06%)</title><rect x="175.7" y="563.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="178.7" y="574.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (3 samples, 0.05%)</title><rect x="176.6" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="179.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,100 samples, 17.03%)</title><rect x="177.2" y="563.0" width="201.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.2" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,013 samples, 15.69%)</title><rect x="182.3" y="547.0" width="185.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="185.3" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.05%)</title><rect x="187.2" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="190.2" y="542.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.05%)</title><rect x="187.8" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="190.8" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="188.5" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.5" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (952 samples, 14.74%)</title><rect x="188.9" y="531.0" width="173.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.9" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (946 samples, 14.65%)</title><rect x="188.9" y="515.0" width="172.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.9" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (930 samples, 14.40%)</title><rect x="190.9" y="499.0" width="169.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="193.9" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (183 samples, 2.83%)</title><rect x="191.3" y="483.0" width="33.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="194.3" y="494.0">__..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.06%)</title><rect x="191.6" y="467.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="194.6" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (7 samples, 0.11%)</title><rect x="192.4" y="467.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="195.4" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 0.11%)</title><rect x="193.6" y="467.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.6" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (153 samples, 2.37%)</title><rect x="194.9" y="467.0" width="28.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.9" y="478.0">n..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.09%)</title><rect x="195.1" y="451.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="198.1" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (35 samples, 0.54%)</title><rect x="196.2" y="451.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.2" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (33 samples, 0.51%)</title><rect x="196.6" y="435.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="199.6" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (91 samples, 1.41%)</title><rect x="202.6" y="451.0" width="16.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="205.6" y="462.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.03%)</title><rect x="202.6" y="435.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.6" y="446.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.03%)</title><rect x="203.0" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="206.0" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (83 samples, 1.29%)</title><rect x="203.3" y="435.0" width="15.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="206.3" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (19 samples, 0.29%)</title><rect x="205.9" y="419.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="208.9" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.03%)</title><rect x="209.3" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="212.3" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (6 samples, 0.09%)</title><rect x="210.1" y="419.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="213.1" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (3 samples, 0.05%)</title><rect x="211.2" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="214.2" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (5 samples, 0.08%)</title><rect x="211.7" y="419.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="214.7" y="430.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (31 samples, 0.48%)</title><rect x="212.8" y="419.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="215.8" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (10 samples, 0.15%)</title><rect x="216.7" y="403.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="219.7" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.05%)</title><rect x="217.9" y="387.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.9" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.06%)</title><rect x="218.5" y="435.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.5" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.05%)</title><rect x="219.2" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (16 samples, 0.25%)</title><rect x="219.9" y="451.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="222.9" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (5 samples, 0.08%)</title><rect x="220.3" y="435.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.3" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (9 samples, 0.14%)</title><rect x="221.2" y="435.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="224.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.06%)</title><rect x="221.2" y="419.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="224.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (5 samples, 0.08%)</title><rect x="222.0" y="419.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="225.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (10 samples, 0.15%)</title><rect x="222.9" y="467.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="225.9" y="478.0"></text>
</g>
<g>
<title>ip_output (729 samples, 11.29%)</title><rect x="224.7" y="483.0" width="133.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="227.7" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.06%)</title><rect x="225.8" y="467.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="228.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="226.5" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="229.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (702 samples, 10.87%)</title><rect x="226.9" y="467.0" width="128.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="229.9" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (10 samples, 0.15%)</title><rect x="228.7" y="451.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.7" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (681 samples, 10.55%)</title><rect x="230.7" y="451.0" width="124.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="233.7" y="462.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (586 samples, 9.07%)</title><rect x="235.1" y="435.0" width="107.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="238.1" y="446.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq.part.21 (581 samples, 9.00%)</title><rect x="236.0" y="419.0" width="106.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="239.0" y="430.0">do_softirq.pa..</text>
</g>
<g>
<title>do_softirq_own_stack (571 samples, 8.84%)</title><rect x="237.9" y="403.0" width="104.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="240.9" y="414.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (570 samples, 8.83%)</title><rect x="237.9" y="387.0" width="104.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.9" y="398.0">__softirqent..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="239.5" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="242.5" y="382.0"></text>
</g>
<g>
<title>net_rx_action (556 samples, 8.61%)</title><rect x="240.0" y="371.0" width="101.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="243.0" y="382.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (543 samples, 8.41%)</title><rect x="242.4" y="355.0" width="99.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="245.4" y="366.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (526 samples, 8.14%)</title><rect x="245.3" y="339.0" width="96.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="248.3" y="350.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (522 samples, 8.08%)</title><rect x="245.7" y="323.0" width="95.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="248.7" y="334.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_core (19 samples, 0.29%)</title><rect x="246.1" y="307.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="249.1" y="318.0"></text>
</g>
<g>
<title>ip_rcv (497 samples, 7.70%)</title><rect x="249.5" y="307.0" width="90.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="252.5" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="250.6" y="291.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.08%)</title><rect x="251.2" y="291.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="254.2" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (461 samples, 7.14%)</title><rect x="252.1" y="291.0" width="84.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="255.1" y="302.0">ip_rcv_fin..</text>
</g>
<g>
<title>ip_local_deliver (453 samples, 7.01%)</title><rect x="252.8" y="275.0" width="82.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="255.8" y="286.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (432 samples, 6.69%)</title><rect x="253.4" y="259.0" width="78.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.4" y="270.0">ip_local_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (426 samples, 6.60%)</title><rect x="253.6" y="243.0" width="77.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="256.6" y="254.0">ip_protoc..</text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (2 samples, 0.03%)</title><rect x="254.8" y="227.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="257.8" y="238.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="255.4" y="227.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="258.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="255.9" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="258.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (409 samples, 6.33%)</title><rect x="256.7" y="227.0" width="74.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="259.7" y="238.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (27 samples, 0.42%)</title><rect x="260.5" y="211.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.5" y="222.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="265.1" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="268.1" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="265.6" y="211.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="268.6" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.08%)</title><rect x="266.0" y="211.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="269.0" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="266.0" y="195.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="269.0" y="206.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="266.9" y="211.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="269.9" y="222.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.03%)</title><rect x="267.3" y="211.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="270.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (347 samples, 5.37%)</title><rect x="267.6" y="211.0" width="63.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="270.6" y="222.0">tcp_v4_..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="267.6" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="270.6" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.08%)</title><rect x="268.2" y="195.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="271.2" y="206.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="269.1" y="195.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.1" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (335 samples, 5.19%)</title><rect x="269.5" y="195.0" width="61.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.5" y="206.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (25 samples, 0.39%)</title><rect x="272.0" y="179.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="275.0" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="272.0" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="275.0" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (23 samples, 0.36%)</title><rect x="272.4" y="163.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="275.4" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (22 samples, 0.34%)</title><rect x="272.6" y="147.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="275.6" y="158.0"></text>
</g>
<g>
<title>mod_timer (21 samples, 0.33%)</title><rect x="272.8" y="131.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.8" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.25%)</title><rect x="273.5" y="115.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.5" y="126.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.08%)</title><rect x="276.8" y="179.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="279.8" y="190.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="277.7" y="179.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="280.7" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="278.4" y="179.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.4" y="190.0"></text>
</g>
<g>
<title>tcp_ack (103 samples, 1.59%)</title><rect x="278.8" y="179.0" width="18.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="281.8" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (74 samples, 1.15%)</title><rect x="282.6" y="163.0" width="13.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="285.6" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (38 samples, 0.59%)</title><rect x="285.7" y="147.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="288.7" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (11 samples, 0.17%)</title><rect x="285.7" y="131.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="288.7" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.09%)</title><rect x="286.6" y="115.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="289.6" y="126.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="287.2" y="99.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="290.2" y="110.0"></text>
</g>
<g>
<title>skb_release_all (23 samples, 0.36%)</title><rect x="287.9" y="131.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.9" y="142.0"></text>
</g>
<g>
<title>skb_release_data (21 samples, 0.33%)</title><rect x="287.9" y="115.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="290.9" y="126.0"></text>
</g>
<g>
<title>skb_free_head (17 samples, 0.26%)</title><rect x="288.6" y="99.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="291.6" y="110.0"></text>
</g>
<g>
<title>kfree (16 samples, 0.25%)</title><rect x="288.8" y="83.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.8" y="94.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.08%)</title><rect x="290.8" y="67.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="293.8" y="78.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="291.4" y="51.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="294.4" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="291.8" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="294.8" y="126.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="292.3" y="131.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="295.3" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="293.0" y="147.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="296.0" y="158.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.05%)</title><rect x="293.6" y="147.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="296.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (6 samples, 0.09%)</title><rect x="294.3" y="147.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.3" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (4 samples, 0.06%)</title><rect x="295.4" y="147.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="298.4" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.05%)</title><rect x="296.1" y="163.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="299.1" y="174.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="297.2" y="163.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="300.2" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (9 samples, 0.14%)</title><rect x="297.6" y="179.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="300.6" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (148 samples, 2.29%)</title><rect x="299.4" y="179.0" width="27.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="302.4" y="190.0">t..</text>
</g>
<g>
<title>sock_def_readable (128 samples, 1.98%)</title><rect x="302.2" y="163.0" width="23.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="305.2" y="174.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (120 samples, 1.86%)</title><rect x="303.6" y="147.0" width="22.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="306.6" y="158.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (118 samples, 1.83%)</title><rect x="303.6" y="131.0" width="21.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.6" y="142.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (116 samples, 1.80%)</title><rect x="304.0" y="115.0" width="21.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="307.0" y="126.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="325.2" y="131.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="328.2" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="325.6" y="163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="328.6" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="325.9" y="163.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="328.9" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.06%)</title><rect x="326.5" y="179.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="329.5" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="327.2" y="179.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="330.2" y="190.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="327.2" y="163.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="330.2" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.06%)</title><rect x="328.1" y="179.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="331.1" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.06%)</title><rect x="329.2" y="179.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="332.2" y="190.0"></text>
</g>
<g>
<title>tcp_urg (3 samples, 0.05%)</title><rect x="330.1" y="179.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="333.1" y="190.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.03%)</title><rect x="330.7" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="333.7" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.05%)</title><rect x="331.4" y="243.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="334.4" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="332.0" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="335.0" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.05%)</title><rect x="332.3" y="259.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="335.3" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.22%)</title><rect x="333.0" y="259.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="336.0" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (8 samples, 0.12%)</title><rect x="333.4" y="243.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="336.4" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.11%)</title><rect x="333.6" y="227.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="336.6" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.05%)</title><rect x="334.9" y="243.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="337.9" y="254.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="335.1" y="227.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.1" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="336.0" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.0" y="286.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.05%)</title><rect x="336.5" y="291.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="339.5" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="337.1" y="291.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="340.1" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.23%)</title><rect x="337.6" y="291.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="340.6" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (5 samples, 0.08%)</title><rect x="338.0" y="275.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="341.0" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.08%)</title><rect x="338.0" y="259.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="341.0" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="338.9" y="275.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="341.9" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (6 samples, 0.09%)</title><rect x="339.3" y="275.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="342.3" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.06%)</title><rect x="339.6" y="259.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="342.6" y="270.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.05%)</title><rect x="339.6" y="243.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="342.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (2 samples, 0.03%)</title><rect x="340.4" y="307.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="343.4" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="340.7" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="343.7" y="318.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="341.1" y="323.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="344.1" y="334.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="341.6" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="344.6" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (71 samples, 1.10%)</title><rect x="342.2" y="435.0" width="13.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="345.2" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (69 samples, 1.07%)</title><rect x="342.2" y="419.0" width="12.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="345.2" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (40 samples, 0.62%)</title><rect x="345.1" y="403.0" width="7.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="348.1" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (32 samples, 0.50%)</title><rect x="345.8" y="387.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="348.8" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.09%)</title><rect x="346.6" y="371.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="349.6" y="382.0"></text>
</g>
<g>
<title>netif_rx (16 samples, 0.25%)</title><rect x="347.7" y="371.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="350.7" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (16 samples, 0.25%)</title><rect x="347.7" y="355.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="350.7" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (14 samples, 0.22%)</title><rect x="348.0" y="339.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="351.0" y="350.0"></text>
</g>
<g>
<title>sk_free (3 samples, 0.05%)</title><rect x="350.8" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="353.8" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="351.3" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.3" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.05%)</title><rect x="351.7" y="387.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="354.7" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="352.4" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="355.4" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (11 samples, 0.17%)</title><rect x="352.8" y="403.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="355.8" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.08%)</title><rect x="353.7" y="387.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="356.7" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="355.3" y="467.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="358.3" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.17%)</title><rect x="355.9" y="467.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="358.9" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (5 samples, 0.08%)</title><rect x="356.3" y="451.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="359.3" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (3 samples, 0.05%)</title><rect x="356.6" y="435.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="359.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="357.3" y="451.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="360.3" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="357.5" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="360.5" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="357.5" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.5" y="430.0"></text>
</g>
<g>
<title>ip_send_check (7 samples, 0.11%)</title><rect x="357.9" y="483.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.9" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.14%)</title><rect x="359.2" y="483.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="362.2" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.06%)</title><rect x="361.0" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.0" y="510.0"></text>
</g>
<g>
<title>ip_copy_addrs (4 samples, 0.06%)</title><rect x="361.7" y="515.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="364.7" y="526.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="362.5" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.5" y="526.0"></text>
</g>
<g>
<title>skb_clone (16 samples, 0.25%)</title><rect x="362.8" y="531.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="365.8" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.08%)</title><rect x="363.0" y="515.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="366.0" y="526.0"></text>
</g>
<g>
<title>__skb_clone (10 samples, 0.15%)</title><rect x="363.9" y="515.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="366.9" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.08%)</title><rect x="364.8" y="499.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="367.8" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.06%)</title><rect x="366.1" y="531.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="369.1" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="366.9" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="369.9" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.05%)</title><rect x="366.9" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="369.9" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.05%)</title><rect x="367.4" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="370.4" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="368.1" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.1" y="558.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.03%)</title><rect x="368.5" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="371.5" y="558.0"></text>
</g>
<g>
<title>ktime_get (11 samples, 0.17%)</title><rect x="368.9" y="547.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="371.9" y="558.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="370.9" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.9" y="558.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="371.2" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.2" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.22%)</title><rect x="372.0" y="547.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="375.0" y="558.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="372.9" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="375.9" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.03%)</title><rect x="372.9" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="375.9" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.11%)</title><rect x="373.2" y="531.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="376.2" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="373.6" y="515.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="376.6" y="526.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="373.6" y="499.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="376.6" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.08%)</title><rect x="373.6" y="483.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.6" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.03%)</title><rect x="374.7" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="377.7" y="558.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="375.1" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="378.1" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.08%)</title><rect x="375.4" y="547.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="378.4" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.06%)</title><rect x="376.4" y="547.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="379.4" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.06%)</title><rect x="377.1" y="547.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="380.1" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="377.8" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="380.8" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.06%)</title><rect x="378.2" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.2" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (6 samples, 0.09%)</title><rect x="378.9" y="595.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.9" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (19 samples, 0.29%)</title><rect x="380.0" y="595.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.0" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="380.4" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="383.4" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (15 samples, 0.23%)</title><rect x="380.7" y="579.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="383.7" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="382.7" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.7" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="383.5" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="386.5" y="606.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="384.0" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.0" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.03%)</title><rect x="384.6" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.6" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (22 samples, 0.34%)</title><rect x="384.9" y="643.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.9" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.08%)</title><rect x="384.9" y="627.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="387.9" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (17 samples, 0.26%)</title><rect x="385.9" y="627.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.9" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="385.9" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="388.9" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (15 samples, 0.23%)</title><rect x="386.2" y="611.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="389.2" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.17%)</title><rect x="386.9" y="595.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="389.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.06%)</title><rect x="389.0" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="392.0" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (20 samples, 0.31%)</title><rect x="389.7" y="659.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="392.7" y="670.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.28%)</title><rect x="390.1" y="643.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="393.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (17 samples, 0.26%)</title><rect x="390.2" y="627.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="393.2" y="638.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.20%)</title><rect x="391.0" y="611.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="394.0" y="622.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.06%)</title><rect x="393.5" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="396.5" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="394.3" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="397.3" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.05%)</title><rect x="395.0" y="739.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="398.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.17%)</title><rect x="395.7" y="819.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="398.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.08%)</title><rect x="396.8" y="803.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.08%)</title><rect x="396.8" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$66/2021148767.exec (2,714 samples, 42.03%)</title><rect x="397.7" y="835.0" width="495.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.7" y="846.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$66/2021148767...</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$entity$2 (2,714 samples, 42.03%)</title><rect x="397.7" y="819.0" width="495.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.7" y="830.0">ru/mail/polis/service/codearound/AsyncService.lambda$entity$2</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.upsert (2,714 samples, 42.03%)</title><rect x="397.7" y="803.0" width="495.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.7" y="814.0">ru/mail/polis/service/codearound/AsyncService.upsert</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.09%)</title><rect x="397.7" y="787.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.09%)</title><rect x="397.7" y="771.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="397.7" y="755.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="397.7" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="397.7" y="723.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="397.7" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="398.5" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="398.5" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.proxy (1,279 samples, 19.80%)</title><rect x="398.8" y="787.0" width="233.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.8" y="798.0">ru/mail/polis/service/codearoun..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.36%)</title><rect x="398.8" y="771.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1354003114.invoke (23 samples, 0.36%)</title><rect x="398.8" y="755.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="401.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.36%)</title><rect x="398.8" y="739.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.8" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.05%)</title><rect x="401.4" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="404.4" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="401.9" y="723.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="404.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.06%)</title><rect x="403.0" y="771.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.06%)</title><rect x="403.0" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="403.4" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,252 samples, 19.39%)</title><rect x="403.8" y="771.0" width="228.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.8" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.08%)</title><rect x="403.8" y="755.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,247 samples, 19.31%)</title><rect x="404.7" y="755.0" width="227.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.7" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.14%)</title><rect x="407.0" y="739.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.14%)</title><rect x="407.0" y="723.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.14%)</title><rect x="407.0" y="707.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (261 samples, 4.04%)</title><rect x="408.7" y="739.0" width="47.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.7" y="750.0">one/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="421.3" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="424.3" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="421.3" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="424.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="421.3" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="424.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="421.3" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="424.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (188 samples, 2.91%)</title><rect x="421.8" y="723.0" width="34.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.8" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (30 samples, 0.46%)</title><rect x="422.9" y="707.0" width="5.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="425.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="424.4" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="427.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="424.8" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="427.8" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.09%)</title><rect x="425.1" y="691.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="428.1" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.15%)</title><rect x="426.2" y="691.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="429.2" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.06%)</title><rect x="426.8" y="675.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="429.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="427.5" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="430.5" y="686.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.03%)</title><rect x="428.1" y="691.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="431.1" y="702.0"></text>
</g>
<g>
<title>__GI___recv (147 samples, 2.28%)</title><rect x="428.4" y="707.0" width="26.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="431.4" y="718.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (143 samples, 2.21%)</title><rect x="429.2" y="691.0" width="26.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="432.2" y="702.0">e..</text>
</g>
<g>
<title>do_syscall_64 (143 samples, 2.21%)</title><rect x="429.2" y="675.0" width="26.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="432.2" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (125 samples, 1.94%)</title><rect x="432.4" y="659.0" width="22.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="435.4" y="670.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (124 samples, 1.92%)</title><rect x="432.4" y="643.0" width="22.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="435.4" y="654.0">_..</text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.03%)</title><rect x="433.5" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="436.5" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (105 samples, 1.63%)</title><rect x="434.1" y="627.0" width="19.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.1" y="638.0"></text>
</g>
<g>
<title>inet_recvmsg (95 samples, 1.47%)</title><rect x="434.3" y="611.0" width="17.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.3" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (90 samples, 1.39%)</title><rect x="435.2" y="595.0" width="16.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="438.2" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.05%)</title><rect x="438.7" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.7" y="590.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="438.7" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="441.7" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="439.2" y="579.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.2" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="440.1" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="443.1" y="590.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="440.9" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="443.9" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (27 samples, 0.42%)</title><rect x="441.6" y="579.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.6" y="590.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="442.1" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="445.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="442.1" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="445.1" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.11%)</title><rect x="442.5" y="563.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.11%)</title><rect x="442.5" y="547.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="445.5" y="558.0"></text>
</g>
<g>
<title>remove_wait_queue (6 samples, 0.09%)</title><rect x="443.8" y="563.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="446.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="443.8" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="446.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="444.1" y="547.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="447.1" y="558.0"></text>
</g>
<g>
<title>wait_woken (9 samples, 0.14%)</title><rect x="444.9" y="563.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.9" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (6 samples, 0.09%)</title><rect x="445.4" y="547.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="448.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="445.8" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="448.8" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (22 samples, 0.34%)</title><rect x="446.5" y="579.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.5" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (18 samples, 0.28%)</title><rect x="446.9" y="563.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="449.9" y="574.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="446.9" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="449.9" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (16 samples, 0.25%)</title><rect x="447.2" y="547.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="450.2" y="558.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.09%)</title><rect x="447.2" y="531.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="450.2" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="447.6" y="515.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.6" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.11%)</title><rect x="448.3" y="531.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.3" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.09%)</title><rect x="448.5" y="515.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="451.5" y="526.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.05%)</title><rect x="449.6" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="452.6" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.05%)</title><rect x="450.7" y="579.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="453.7" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="450.9" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="453.9" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="450.9" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.9" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.11%)</title><rect x="451.6" y="611.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="454.6" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.11%)</title><rect x="451.6" y="595.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="454.6" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.09%)</title><rect x="451.8" y="579.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="454.8" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="452.4" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.4" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.03%)</title><rect x="452.9" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="455.9" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.15%)</title><rect x="453.3" y="627.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="456.3" y="638.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.14%)</title><rect x="453.3" y="611.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="456.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.14%)</title><rect x="453.3" y="595.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.3" y="606.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.08%)</title><rect x="454.0" y="579.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="457.0" y="590.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="455.3" y="707.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="458.3" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.05%)</title><rect x="455.7" y="707.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="458.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (83 samples, 1.29%)</title><rect x="456.4" y="739.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.06%)</title><rect x="457.7" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="457.7" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="457.7" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.05%)</title><rect x="457.7" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.05%)</title><rect x="457.7" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.7" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (3 samples, 0.05%)</title><rect x="457.7" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.12%)</title><rect x="458.4" y="723.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.09%)</title><rect x="458.8" y="707.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.09%)</title><rect x="458.8" y="691.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="459.9" y="723.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="462.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (24 samples, 0.37%)</title><rect x="460.2" y="723.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.28%)</title><rect x="461.3" y="707.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.28%)</title><rect x="461.3" y="691.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.11%)</title><rect x="464.6" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (4 samples, 0.06%)</title><rect x="465.9" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (27 samples, 0.42%)</title><rect x="466.6" y="723.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.19%)</title><rect x="469.2" y="707.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.19%)</title><rect x="469.2" y="691.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (36 samples, 0.56%)</title><rect x="471.5" y="739.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.17%)</title><rect x="476.1" y="723.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.17%)</title><rect x="476.1" y="707.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.17%)</title><rect x="476.1" y="691.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.03%)</title><rect x="478.1" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="478.1" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="478.1" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="478.5" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (144 samples, 2.23%)</title><rect x="478.9" y="739.0" width="26.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.9" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (10 samples, 0.15%)</title><rect x="480.5" y="723.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="483.5" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (125 samples, 1.94%)</title><rect x="482.3" y="723.0" width="22.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="485.3" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (121 samples, 1.87%)</title><rect x="483.1" y="707.0" width="22.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="486.1" y="718.0">e..</text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.03%)</title><rect x="483.1" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (119 samples, 1.84%)</title><rect x="483.4" y="691.0" width="21.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.4" y="702.0">d..</text>
</g>
<g>
<title>__sys_setsockopt (3 samples, 0.05%)</title><rect x="489.5" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="492.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (83 samples, 1.29%)</title><rect x="490.0" y="675.0" width="15.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.0" y="686.0"></text>
</g>
<g>
<title>__sys_setsockopt (79 samples, 1.22%)</title><rect x="490.2" y="659.0" width="14.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="493.2" y="670.0"></text>
</g>
<g>
<title>__get_user_4 (4 samples, 0.06%)</title><rect x="490.7" y="643.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="493.7" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (3 samples, 0.05%)</title><rect x="491.5" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="494.5" y="654.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="492.4" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.4" y="654.0"></text>
</g>
<g>
<title>security_socket_setsockopt (19 samples, 0.29%)</title><rect x="492.9" y="643.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="495.9" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.03%)</title><rect x="493.8" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="496.8" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (12 samples, 0.19%)</title><rect x="494.2" y="627.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.2" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (11 samples, 0.17%)</title><rect x="494.4" y="611.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="497.4" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.14%)</title><rect x="494.8" y="595.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="497.8" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="496.0" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="499.0" y="590.0"></text>
</g>
<g>
<title>sock_setsockopt (28 samples, 0.43%)</title><rect x="496.4" y="643.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.4" y="654.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.05%)</title><rect x="497.9" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="500.9" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="498.4" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="501.4" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="499.0" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="502.0" y="638.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="499.3" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="502.3" y="638.0"></text>
</g>
<g>
<title>sock_set_timeout (9 samples, 0.14%)</title><rect x="499.7" y="627.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="502.7" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="500.4" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="503.4" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="500.8" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="503.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.26%)</title><rect x="501.5" y="643.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.5" y="654.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.20%)</title><rect x="501.7" y="627.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="504.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.19%)</title><rect x="501.9" y="611.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.9" y="622.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.12%)</title><rect x="502.6" y="595.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="504.1" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="507.1" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.03%)</title><rect x="504.8" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="507.8" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (693 samples, 10.73%)</title><rect x="505.2" y="739.0" width="126.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.2" y="750.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (25 samples, 0.39%)</title><rect x="511.4" y="723.0" width="4.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="514.4" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="512.7" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="515.7" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="513.0" y="707.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="516.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="513.4" y="707.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="516.4" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.09%)</title><rect x="513.8" y="707.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="516.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="514.9" y="707.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="517.9" y="718.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.03%)</title><rect x="515.2" y="707.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="518.2" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="515.6" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="518.6" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="515.9" y="723.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="518.9" y="734.0"></text>
</g>
<g>
<title>__libc_send (628 samples, 9.72%)</title><rect x="516.7" y="723.0" width="114.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="519.7" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (618 samples, 9.57%)</title><rect x="518.5" y="707.0" width="112.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="521.5" y="718.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (618 samples, 9.57%)</title><rect x="518.5" y="691.0" width="112.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="521.5" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (595 samples, 9.21%)</title><rect x="522.2" y="675.0" width="108.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="525.2" y="686.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (591 samples, 9.15%)</title><rect x="522.3" y="659.0" width="108.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="525.3" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="522.5" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="525.5" y="654.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="522.9" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="525.9" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (577 samples, 8.93%)</title><rect x="523.4" y="643.0" width="105.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="526.4" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (567 samples, 8.78%)</title><rect x="524.2" y="627.0" width="103.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="527.2" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (563 samples, 8.72%)</title><rect x="524.5" y="611.0" width="102.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="527.5" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="524.9" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="527.9" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="525.3" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="528.3" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="525.3" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="528.3" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="525.6" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.6" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.06%)</title><rect x="526.0" y="595.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.0" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.05%)</title><rect x="527.1" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="530.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (544 samples, 8.42%)</title><rect x="527.6" y="595.0" width="99.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="530.6" y="606.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="529.7" y="579.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="532.7" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="529.7" y="563.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="532.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (33 samples, 0.51%)</title><rect x="530.9" y="579.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="533.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (24 samples, 0.37%)</title><rect x="531.5" y="563.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="534.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (11 samples, 0.17%)</title><rect x="532.0" y="547.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="535.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.14%)</title><rect x="532.0" y="531.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="535.0" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.08%)</title><rect x="532.8" y="515.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="535.8" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.14%)</title><rect x="534.2" y="547.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="537.2" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.05%)</title><rect x="535.3" y="531.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.3" y="542.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.08%)</title><rect x="536.0" y="563.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="539.0" y="574.0"></text>
</g>
<g>
<title>tcp_push (479 samples, 7.42%)</title><rect x="537.3" y="579.0" width="87.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="540.3" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (477 samples, 7.39%)</title><rect x="537.7" y="563.0" width="87.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.7" y="574.0">__tcp_push..</text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="537.9" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="540.9" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="538.6" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="541.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (468 samples, 7.25%)</title><rect x="539.3" y="547.0" width="85.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="542.3" y="558.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (437 samples, 6.77%)</title><rect x="541.0" y="531.0" width="79.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="544.0" y="542.0">__tcp_tra..</text>
</g>
<g>
<title>ip_queue_xmit (418 samples, 6.47%)</title><rect x="542.8" y="515.0" width="76.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="545.8" y="526.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (417 samples, 6.46%)</title><rect x="542.8" y="499.0" width="76.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="545.8" y="510.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (406 samples, 6.29%)</title><rect x="544.5" y="483.0" width="74.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="547.5" y="494.0">ip_local..</text>
</g>
<g>
<title>__ip_local_out (58 samples, 0.90%)</title><rect x="544.6" y="467.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="547.6" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="545.2" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.2" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (51 samples, 0.79%)</title><rect x="545.7" y="451.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="548.7" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.14%)</title><rect x="546.1" y="435.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="549.1" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.14%)</title><rect x="546.1" y="419.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="549.1" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (32 samples, 0.50%)</title><rect x="547.7" y="435.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="550.7" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (28 samples, 0.43%)</title><rect x="548.3" y="419.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="551.3" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.09%)</title><rect x="549.2" y="403.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="552.2" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (3 samples, 0.05%)</title><rect x="550.3" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="553.3" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.03%)</title><rect x="551.0" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="554.0" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (11 samples, 0.17%)</title><rect x="551.4" y="403.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="554.4" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.09%)</title><rect x="552.3" y="387.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="555.3" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="553.6" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (6 samples, 0.09%)</title><rect x="554.0" y="435.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="557.0" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="554.0" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="557.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.06%)</title><rect x="554.3" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="557.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="554.5" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="557.5" y="414.0"></text>
</g>
<g>
<title>ip_output (344 samples, 5.33%)</title><rect x="555.2" y="467.0" width="62.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="558.2" y="478.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (336 samples, 5.20%)</title><rect x="555.8" y="451.0" width="61.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="558.8" y="462.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.06%)</title><rect x="556.3" y="435.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="559.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (328 samples, 5.08%)</title><rect x="557.1" y="435.0" width="59.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.1" y="446.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (290 samples, 4.49%)</title><rect x="558.7" y="419.0" width="53.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="561.7" y="430.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.21 (289 samples, 4.48%)</title><rect x="558.9" y="403.0" width="52.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="561.9" y="414.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (287 samples, 4.44%)</title><rect x="559.3" y="387.0" width="52.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="562.3" y="398.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (287 samples, 4.44%)</title><rect x="559.3" y="371.0" width="52.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="562.3" y="382.0">__sof..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="559.8" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="562.8" y="366.0"></text>
</g>
<g>
<title>net_rx_action (280 samples, 4.34%)</title><rect x="560.3" y="355.0" width="51.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="563.3" y="366.0">net_r..</text>
</g>
<g>
<title>process_backlog (277 samples, 4.29%)</title><rect x="560.9" y="339.0" width="50.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="563.9" y="350.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (271 samples, 4.20%)</title><rect x="562.0" y="323.0" width="49.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="565.0" y="334.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (268 samples, 4.15%)</title><rect x="562.2" y="307.0" width="48.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="565.2" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.09%)</title><rect x="562.4" y="291.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="565.4" y="302.0"></text>
</g>
<g>
<title>ip_rcv (255 samples, 3.95%)</title><rect x="563.5" y="291.0" width="46.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="566.5" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (3 samples, 0.05%)</title><rect x="564.0" y="275.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="567.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (243 samples, 3.76%)</title><rect x="564.6" y="275.0" width="44.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="567.6" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (240 samples, 3.72%)</title><rect x="564.7" y="259.0" width="43.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="567.7" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (233 samples, 3.61%)</title><rect x="564.7" y="243.0" width="42.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="567.7" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (232 samples, 3.59%)</title><rect x="564.7" y="227.0" width="42.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="567.7" y="238.0">ip_p..</text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="565.1" y="211.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="568.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (225 samples, 3.48%)</title><rect x="566.0" y="211.0" width="41.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="569.0" y="222.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.05%)</title><rect x="566.9" y="195.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="569.9" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="567.8" y="195.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="570.8" y="206.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.03%)</title><rect x="568.2" y="195.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="571.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (210 samples, 3.25%)</title><rect x="568.6" y="195.0" width="38.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.6" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (204 samples, 3.16%)</title><rect x="569.7" y="179.0" width="37.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="572.7" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.12%)</title><rect x="570.4" y="163.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.4" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.06%)</title><rect x="571.1" y="147.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="574.1" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="571.1" y="131.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="574.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="571.1" y="115.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="574.1" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="571.3" y="99.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="574.3" y="110.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="571.9" y="163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="574.9" y="174.0"></text>
</g>
<g>
<title>tcp_ack (48 samples, 0.74%)</title><rect x="572.4" y="163.0" width="8.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.4" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="574.1" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="577.1" y="158.0"></text>
</g>
<g>
<title>rb_erase (5 samples, 0.08%)</title><rect x="574.4" y="147.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="577.4" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (28 samples, 0.43%)</title><rect x="575.7" y="147.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="578.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.23%)</title><rect x="577.5" y="131.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="580.5" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="577.5" y="115.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.5" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="577.7" y="99.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.7" y="110.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.14%)</title><rect x="578.3" y="115.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="581.3" y="126.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.12%)</title><rect x="578.3" y="99.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="581.3" y="110.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.09%)</title><rect x="578.6" y="83.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="581.6" y="94.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.09%)</title><rect x="578.6" y="67.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="581.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.08%)</title><rect x="578.8" y="51.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="581.8" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="579.4" y="35.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="582.4" y="46.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="580.3" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="583.3" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (127 samples, 1.97%)</title><rect x="581.2" y="163.0" width="23.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.2" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (115 samples, 1.78%)</title><rect x="582.3" y="147.0" width="21.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="585.3" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (114 samples, 1.77%)</title><rect x="582.5" y="131.0" width="20.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="585.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (112 samples, 1.73%)</title><rect x="582.6" y="115.0" width="20.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="585.6" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (111 samples, 1.72%)</title><rect x="582.8" y="99.0" width="20.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="585.8" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.08%)</title><rect x="603.3" y="147.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="606.3" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.05%)</title><rect x="604.4" y="163.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="607.4" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="604.9" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="607.9" y="174.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="604.9" y="147.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="607.9" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="605.5" y="163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="608.5" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="605.8" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="608.8" y="174.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="606.2" y="163.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.2" y="174.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.03%)</title><rect x="606.6" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.6" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.11%)</title><rect x="607.3" y="243.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="610.3" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.08%)</title><rect x="607.5" y="227.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="610.5" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.08%)</title><rect x="607.5" y="211.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.5" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.06%)</title><rect x="609.3" y="275.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="612.3" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="609.7" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="612.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (3 samples, 0.05%)</title><rect x="610.0" y="291.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="613.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.05%)</title><rect x="610.6" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="613.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="611.1" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="614.1" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (28 samples, 0.43%)</title><rect x="611.7" y="419.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="614.7" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (26 samples, 0.40%)</title><rect x="611.7" y="403.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.7" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (16 samples, 0.25%)</title><rect x="612.1" y="387.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.1" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="612.2" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="615.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.20%)</title><rect x="612.6" y="371.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="615.6" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="613.3" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="616.3" y="366.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.09%)</title><rect x="613.7" y="355.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.7" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.09%)</title><rect x="613.7" y="339.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="616.7" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.09%)</title><rect x="613.7" y="323.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="616.7" y="334.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="615.3" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="618.3" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.06%)</title><rect x="615.7" y="387.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="618.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="616.4" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="619.4" y="414.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.03%)</title><rect x="617.2" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.2" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="617.5" y="451.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="620.5" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="618.3" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="621.3" y="478.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.09%)</title><rect x="619.2" y="515.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="622.2" y="526.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.06%)</title><rect x="619.6" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.6" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.06%)</title><rect x="619.6" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="622.6" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="620.8" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="623.8" y="542.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.06%)</title><rect x="621.4" y="531.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="624.4" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.09%)</title><rect x="622.7" y="531.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="625.7" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="623.0" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="626.0" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.03%)</title><rect x="623.0" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="626.0" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="623.4" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="626.4" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="624.1" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.1" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="624.5" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.5" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (12 samples, 0.19%)</title><rect x="624.8" y="579.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="627.8" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (11 samples, 0.17%)</title><rect x="625.0" y="563.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="628.0" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="626.5" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.5" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.03%)</title><rect x="627.4" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="630.4" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="627.8" y="627.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="630.8" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="628.0" y="611.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="631.0" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="628.0" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="631.0" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="628.1" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="631.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="628.5" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.5" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.12%)</title><rect x="628.9" y="643.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.9" y="654.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.09%)</title><rect x="628.9" y="627.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="631.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="628.9" y="611.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="631.9" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="629.6" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="632.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="630.0" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.0" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="630.3" y="659.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="633.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="630.9" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="633.9" y="686.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="630.9" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="633.9" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="630.9" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="633.9" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="630.9" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="633.9" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="630.9" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="633.9" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="630.9" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="633.9" y="606.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="630.9" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.9" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="630.9" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="633.9" y="574.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="630.9" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="633.9" y="558.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="630.9" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="633.9" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="630.9" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="633.9" y="526.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.06%)</title><rect x="631.8" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (16 samples, 0.25%)</title><rect x="632.5" y="787.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (16 samples, 0.25%)</title><rect x="632.5" y="771.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (16 samples, 0.25%)</title><rect x="632.5" y="755.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsert (1,413 samples, 21.88%)</title><rect x="635.4" y="787.0" width="258.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.4" y="798.0">ru/mail/polis/service/codearound/T..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,377 samples, 21.32%)</title><rect x="635.4" y="771.0" width="251.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.4" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="636.2" y="755.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="639.2" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,370 samples, 21.21%)</title><rect x="636.7" y="755.0" width="250.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.7" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (966 samples, 14.96%)</title><rect x="638.6" y="739.0" width="176.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="641.6" y="750.0">Java_org_rocksdb_RocksD..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.05%)</title><rect x="639.7" y="723.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="642.7" y="734.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.11%)</title><rect x="640.2" y="723.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="643.2" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="641.5" y="723.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="644.5" y="734.0"></text>
</g>
<g>
<title>operator delete(void*) (5 samples, 0.08%)</title><rect x="642.2" y="723.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="645.2" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.06%)</title><rect x="643.1" y="723.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="646.1" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="643.9" y="723.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="646.9" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.05%)</title><rect x="644.2" y="723.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="647.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.09%)</title><rect x="644.9" y="723.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="647.9" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (924 samples, 14.31%)</title><rect x="646.2" y="723.0" width="168.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="649.2" y="734.0">rocksdb_put_helper(JNI..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="646.8" y="707.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="649.8" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="647.5" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="650.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="648.1" y="707.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="651.1" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.11%)</title><rect x="648.6" y="707.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="651.6" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.09%)</title><rect x="649.9" y="707.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="652.9" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.03%)</title><rect x="650.2" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="653.2" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="650.6" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="653.6" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (21 samples, 0.33%)</title><rect x="651.0" y="707.0" width="3.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="654.0" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="652.1" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="655.1" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.08%)</title><rect x="652.4" y="691.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="655.4" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.12%)</title><rect x="653.4" y="691.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="656.4" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.11%)</title><rect x="653.5" y="675.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="656.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (871 samples, 13.49%)</title><rect x="654.8" y="707.0" width="159.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="657.8" y="718.0">rocksdb::DB::Put(roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (866 samples, 13.41%)</title><rect x="655.7" y="691.0" width="158.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="658.7" y="702.0">rocksdb::DBImpl::Put..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (852 samples, 13.19%)</title><rect x="655.7" y="675.0" width="155.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="658.7" y="686.0">rocksdb::DB::Put(roc..</text>
</g>
<g>
<title>__libc_free (6 samples, 0.09%)</title><rect x="656.1" y="659.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="659.1" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) (3 samples, 0.05%)</title><rect x="657.4" y="659.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="660.4" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (2 samples, 0.03%)</title><rect x="657.9" y="659.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="660.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (7 samples, 0.11%)</title><rect x="658.3" y="659.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="661.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (765 samples, 11.85%)</title><rect x="659.6" y="659.0" width="139.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="662.6" y="670.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (7 samples, 0.11%)</title><rect x="659.9" y="643.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="662.9" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (6 samples, 0.09%)</title><rect x="661.2" y="643.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="664.2" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.08%)</title><rect x="662.3" y="643.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="665.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="663.2" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="666.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) [clone .plt] (5 samples, 0.08%)</title><rect x="663.6" y="643.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="666.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (694 samples, 10.75%)</title><rect x="664.7" y="643.0" width="126.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="667.7" y="654.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="675.1" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="678.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="675.6" y="627.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="678.6" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.08%)</title><rect x="676.4" y="627.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="679.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (10 samples, 0.15%)</title><rect x="677.5" y="627.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="680.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) [clone .plt] (4 samples, 0.06%)</title><rect x="679.3" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="682.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (7 samples, 0.11%)</title><rect x="680.0" y="627.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="683.0" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="680.9" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="683.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.03%)</title><rect x="681.3" y="627.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="684.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (183 samples, 2.83%)</title><rect x="681.9" y="627.0" width="33.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="684.9" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (160 samples, 2.48%)</title><rect x="683.5" y="611.0" width="29.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="686.5" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.08%)</title><rect x="684.8" y="595.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="687.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (137 samples, 2.12%)</title><rect x="685.9" y="595.0" width="25.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="688.9" y="606.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (32 samples, 0.50%)</title><rect x="688.6" y="579.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="691.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="694.5" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="697.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.03%)</title><rect x="694.8" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="697.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="695.2" y="579.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="698.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (54 samples, 0.84%)</title><rect x="695.9" y="579.0" width="9.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="698.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.06%)</title><rect x="697.4" y="563.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="700.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="698.3" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="701.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (4 samples, 0.06%)</title><rect x="698.7" y="563.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="701.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (34 samples, 0.53%)</title><rect x="699.6" y="563.0" width="6.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="702.6" y="574.0"></text>
</g>
<g>
<title>__GI_write (2 samples, 0.03%)</title><rect x="702.3" y="547.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="705.3" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.14%)</title><rect x="702.7" y="547.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="705.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (4 samples, 0.06%)</title><rect x="704.3" y="547.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="707.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (4 samples, 0.06%)</title><rect x="705.1" y="547.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="708.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="705.8" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="708.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (7 samples, 0.11%)</title><rect x="706.2" y="579.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="709.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (19 samples, 0.29%)</title><rect x="707.4" y="579.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="710.4" y="590.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="707.4" y="563.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="710.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="708.0" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="711.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.03%)</title><rect x="708.4" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="711.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (7 samples, 0.11%)</title><rect x="708.7" y="563.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="711.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.03%)</title><rect x="709.6" y="547.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="712.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (5 samples, 0.08%)</title><rect x="710.0" y="563.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="713.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (8 samples, 0.12%)</title><rect x="710.9" y="595.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="713.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="712.4" y="595.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="715.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="712.7" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="715.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.03%)</title><rect x="713.1" y="611.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="716.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 0.09%)</title><rect x="713.5" y="611.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="716.5" y="622.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (4 samples, 0.06%)</title><rect x="714.6" y="611.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="717.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (3 samples, 0.05%)</title><rect x="715.3" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="718.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (15 samples, 0.23%)</title><rect x="715.8" y="627.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="718.8" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (13 samples, 0.20%)</title><rect x="716.0" y="611.0" width="2.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="719.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (2 samples, 0.03%)</title><rect x="718.8" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="721.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.03%)</title><rect x="719.5" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="722.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (2 samples, 0.03%)</title><rect x="719.9" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="722.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.09%)</title><rect x="720.4" y="627.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="723.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const [clone .plt] (3 samples, 0.05%)</title><rect x="721.5" y="627.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="724.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (332 samples, 5.14%)</title><rect x="722.1" y="627.0" width="60.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="725.1" y="638.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (319 samples, 4.94%)</title><rect x="724.1" y="611.0" width="58.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="727.1" y="622.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="724.2" y="595.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="727.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (5 samples, 0.08%)</title><rect x="725.0" y="595.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="728.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (307 samples, 4.75%)</title><rect x="726.1" y="595.0" width="56.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="729.1" y="606.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (284 samples, 4.40%)</title><rect x="727.7" y="579.0" width="51.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="730.7" y="590.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (3 samples, 0.05%)</title><rect x="727.9" y="563.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="730.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (3 samples, 0.05%)</title><rect x="728.5" y="563.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="731.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (2 samples, 0.03%)</title><rect x="729.0" y="563.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="732.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.03%)</title><rect x="729.4" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="732.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) [clone .plt] (2 samples, 0.03%)</title><rect x="729.7" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="732.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (271 samples, 4.20%)</title><rect x="730.1" y="563.0" width="49.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="733.1" y="574.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (6 samples, 0.09%)</title><rect x="730.8" y="547.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="733.8" y="558.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (7 samples, 0.11%)</title><rect x="731.9" y="547.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="734.9" y="558.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="732.8" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="735.8" y="542.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="732.8" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="735.8" y="526.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="732.8" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="735.8" y="510.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="732.8" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.8" y="494.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.08%)</title><rect x="733.2" y="547.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="736.2" y="558.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (7 samples, 0.11%)</title><rect x="734.1" y="547.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="737.1" y="558.0"></text>
</g>
<g>
<title>memcpy@plt (4 samples, 0.06%)</title><rect x="735.4" y="547.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="738.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (3 samples, 0.05%)</title><rect x="736.1" y="547.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="739.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (3 samples, 0.05%)</title><rect x="736.7" y="547.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="739.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="737.2" y="547.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="740.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (218 samples, 3.38%)</title><rect x="737.6" y="547.0" width="39.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="740.6" y="558.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (16 samples, 0.25%)</title><rect x="738.9" y="531.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="741.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (8 samples, 0.12%)</title><rect x="740.1" y="515.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="743.1" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (183 samples, 2.83%)</title><rect x="741.8" y="531.0" width="33.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="744.8" y="542.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (156 samples, 2.42%)</title><rect x="743.4" y="515.0" width="28.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="746.4" y="526.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (60 samples, 0.93%)</title><rect x="758.2" y="499.0" width="11.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="761.2" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (3 samples, 0.05%)</title><rect x="758.4" y="483.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="761.4" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.14%)</title><rect x="759.1" y="483.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="762.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (45 samples, 0.70%)</title><rect x="761.0" y="483.0" width="8.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="764.0" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (5 samples, 0.08%)</title><rect x="765.0" y="467.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="768.0" y="478.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (13 samples, 0.20%)</title><rect x="766.1" y="467.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="769.1" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="768.5" y="467.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="771.5" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="769.2" y="499.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="772.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (12 samples, 0.19%)</title><rect x="769.7" y="499.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="772.7" y="510.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (6 samples, 0.09%)</title><rect x="770.8" y="483.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="773.8" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="771.9" y="515.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="774.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (10 samples, 0.15%)</title><rect x="772.5" y="515.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="775.5" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.05%)</title><rect x="773.4" y="499.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="776.4" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="773.9" y="499.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="776.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.08%)</title><rect x="774.3" y="515.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="777.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (5 samples, 0.08%)</title><rect x="775.2" y="531.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="778.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.03%)</title><rect x="776.3" y="531.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="779.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.03%)</title><rect x="777.1" y="531.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="780.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (4 samples, 0.06%)</title><rect x="777.4" y="547.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="780.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() [clone .plt] (2 samples, 0.03%)</title><rect x="778.2" y="547.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="781.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.03%)</title><rect x="778.5" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="781.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.05%)</title><rect x="778.9" y="547.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="781.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.06%)</title><rect x="779.6" y="579.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="782.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (9 samples, 0.14%)</title><rect x="780.5" y="579.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="783.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="782.4" y="611.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="785.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.03%)</title><rect x="782.7" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="785.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) [clone .plt] (3 samples, 0.05%)</title><rect x="783.1" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="786.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (5 samples, 0.08%)</title><rect x="783.6" y="627.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="786.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (11 samples, 0.17%)</title><rect x="784.5" y="627.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="787.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (4 samples, 0.06%)</title><rect x="786.6" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="789.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (4 samples, 0.06%)</title><rect x="787.5" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="790.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="788.4" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="791.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.06%)</title><rect x="788.7" y="627.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="791.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (3 samples, 0.05%)</title><rect x="788.9" y="611.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="791.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.03%)</title><rect x="789.8" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="792.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (2 samples, 0.03%)</title><rect x="790.2" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="793.2" y="638.0"></text>
</g>
<g>
<title>sched_yield (5 samples, 0.08%)</title><rect x="790.6" y="627.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="793.6" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="790.6" y="611.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="793.6" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="790.6" y="595.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="793.6" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (4 samples, 0.06%)</title><rect x="790.8" y="579.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.8" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (4 samples, 0.06%)</title><rect x="790.8" y="563.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.8" y="574.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="790.8" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="793.8" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.06%)</title><rect x="790.8" y="531.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="793.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (6 samples, 0.09%)</title><rect x="791.5" y="643.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="794.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.09%)</title><rect x="792.6" y="643.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="795.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (3 samples, 0.05%)</title><rect x="793.7" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="796.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (5 samples, 0.08%)</title><rect x="794.2" y="643.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="797.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="795.1" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="798.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (5 samples, 0.08%)</title><rect x="795.5" y="643.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="798.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.05%)</title><rect x="797.0" y="643.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="800.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="797.7" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="800.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.05%)</title><rect x="798.1" y="643.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="801.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.03%)</title><rect x="798.6" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="801.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) [clone .plt] (2 samples, 0.03%)</title><rect x="799.0" y="643.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="802.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.03%)</title><rect x="799.3" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="802.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.06%)</title><rect x="799.9" y="659.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="802.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) [clone .plt] (2 samples, 0.03%)</title><rect x="800.6" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="803.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (32 samples, 0.50%)</title><rect x="801.0" y="659.0" width="5.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="804.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (4 samples, 0.06%)</title><rect x="801.5" y="643.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="804.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.05%)</title><rect x="802.3" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="805.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (3 samples, 0.05%)</title><rect x="802.8" y="643.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="805.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (2 samples, 0.03%)</title><rect x="803.4" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="806.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const [clone .plt] (2 samples, 0.03%)</title><rect x="803.7" y="643.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="806.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.14%)</title><rect x="804.3" y="643.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="807.3" y="654.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.05%)</title><rect x="805.2" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="808.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (2 samples, 0.03%)</title><rect x="805.9" y="643.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="808.9" y="654.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="806.3" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="809.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (5 samples, 0.08%)</title><rect x="806.8" y="659.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="809.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.03%)</title><rect x="807.8" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="808.1" y="659.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="811.1" y="670.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (3 samples, 0.05%)</title><rect x="808.7" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="811.7" y="670.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (3 samples, 0.05%)</title><rect x="809.2" y="659.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="812.2" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (7 samples, 0.11%)</title><rect x="809.8" y="659.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="812.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="811.6" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="814.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="812.3" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="815.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="812.7" y="675.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="815.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.03%)</title><rect x="813.1" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="816.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() [clone .plt] (3 samples, 0.05%)</title><rect x="813.4" y="675.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="816.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.05%)</title><rect x="814.0" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="817.0" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="814.7" y="707.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="817.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (357 samples, 5.53%)</title><rect x="815.1" y="739.0" width="65.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="818.1" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="815.1" y="723.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="818.1" y="734.0"></text>
</g>
<g>
<title>__GI_write (345 samples, 5.34%)</title><rect x="815.4" y="723.0" width="63.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="818.4" y="734.0">__GI_wr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (332 samples, 5.14%)</title><rect x="817.8" y="707.0" width="60.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="820.8" y="718.0">entry_..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.03%)</title><rect x="817.8" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="820.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (330 samples, 5.11%)</title><rect x="818.2" y="691.0" width="60.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="821.2" y="702.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_write (289 samples, 4.48%)</title><rect x="825.5" y="675.0" width="52.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="828.5" y="686.0">__x64..</text>
</g>
<g>
<title>ksys_write (289 samples, 4.48%)</title><rect x="825.5" y="659.0" width="52.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="828.5" y="670.0">ksys_..</text>
</g>
<g>
<title>__fdget_pos (14 samples, 0.22%)</title><rect x="826.0" y="643.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.20%)</title><rect x="826.0" y="627.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="829.0" y="638.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.14%)</title><rect x="826.8" y="611.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="829.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="828.6" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="831.6" y="654.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="829.7" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.7" y="654.0"></text>
</g>
<g>
<title>vfs_write (263 samples, 4.07%)</title><rect x="830.2" y="643.0" width="48.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="833.2" y="654.0">vfs_..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.03%)</title><rect x="832.1" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="835.1" y="638.0"></text>
</g>
<g>
<title>__sb_start_write (9 samples, 0.14%)</title><rect x="832.4" y="627.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.4" y="638.0"></text>
</g>
<g>
<title>__vfs_write (227 samples, 3.52%)</title><rect x="834.1" y="627.0" width="41.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="837.1" y="638.0">__v..</text>
</g>
<g>
<title>new_sync_write (224 samples, 3.47%)</title><rect x="834.6" y="611.0" width="40.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.6" y="622.0">new..</text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.05%)</title><rect x="835.3" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="838.3" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (217 samples, 3.36%)</title><rect x="835.9" y="595.0" width="39.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="838.9" y="606.0">ext..</text>
</g>
<g>
<title>__generic_file_write_iter (206 samples, 3.19%)</title><rect x="836.6" y="579.0" width="37.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="839.6" y="590.0">__g..</text>
</g>
<g>
<title>file_remove_privs (3 samples, 0.05%)</title><rect x="837.5" y="563.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="840.5" y="574.0"></text>
</g>
<g>
<title>file_update_time (13 samples, 0.20%)</title><rect x="838.1" y="563.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="841.1" y="574.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="838.4" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="841.4" y="558.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="838.4" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="841.4" y="542.0"></text>
</g>
<g>
<title>generic_update_time (9 samples, 0.14%)</title><rect x="838.8" y="547.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="841.8" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (9 samples, 0.14%)</title><rect x="838.8" y="531.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.8" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (9 samples, 0.14%)</title><rect x="838.8" y="515.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="841.8" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.05%)</title><rect x="838.8" y="499.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="841.8" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.05%)</title><rect x="838.8" y="483.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="841.8" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="839.4" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="842.4" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="839.4" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="842.4" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.06%)</title><rect x="839.7" y="499.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="842.7" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.03%)</title><rect x="839.7" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.7" y="494.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.03%)</title><rect x="839.7" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="842.7" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.03%)</title><rect x="839.7" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.7" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (2 samples, 0.03%)</title><rect x="839.7" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="842.7" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.03%)</title><rect x="839.7" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="842.7" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.03%)</title><rect x="840.1" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="843.1" y="494.0"></text>
</g>
<g>
<title>generic_perform_write (184 samples, 2.85%)</title><rect x="840.5" y="563.0" width="33.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="843.5" y="574.0">ge..</text>
</g>
<g>
<title>ext4_da_write_begin (69 samples, 1.07%)</title><rect x="842.1" y="547.0" width="12.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="845.1" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (26 samples, 0.40%)</title><rect x="842.8" y="531.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="845.8" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (25 samples, 0.39%)</title><rect x="842.8" y="515.0" width="4.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="845.8" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (7 samples, 0.11%)</title><rect x="843.2" y="499.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="846.2" y="510.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.06%)</title><rect x="844.5" y="499.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="847.5" y="510.0"></text>
</g>
<g>
<title>start_this_handle (12 samples, 0.19%)</title><rect x="845.2" y="499.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="848.2" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (6 samples, 0.09%)</title><rect x="846.3" y="483.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="849.3" y="494.0"></text>
</g>
<g>
<title>ext4_block_write_begin (8 samples, 0.12%)</title><rect x="847.6" y="531.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="850.6" y="542.0"></text>
</g>
<g>
<title>clean_bdev_aliases (2 samples, 0.03%)</title><rect x="848.3" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="851.3" y="526.0"></text>
</g>
<g>
<title>ext4_nonda_switch (3 samples, 0.05%)</title><rect x="849.0" y="531.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="852.0" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (25 samples, 0.39%)</title><rect x="849.6" y="531.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.6" y="542.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.03%)</title><rect x="849.6" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="852.6" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (21 samples, 0.33%)</title><rect x="850.0" y="515.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.0" y="526.0"></text>
</g>
<g>
<title>__page_cache_alloc (2 samples, 0.03%)</title><rect x="850.3" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="853.3" y="510.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.03%)</title><rect x="850.3" y="483.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.3" y="494.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="850.3" y="467.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.3" y="478.0"></text>
</g>
<g>
<title>find_get_entry (14 samples, 0.22%)</title><rect x="850.9" y="499.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.9" y="510.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.09%)</title><rect x="852.2" y="483.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="855.2" y="494.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="852.9" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="855.9" y="478.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="853.4" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="856.4" y="510.0"></text>
</g>
<g>
<title>wait_for_stable_page (2 samples, 0.03%)</title><rect x="853.8" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.8" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (91 samples, 1.41%)</title><rect x="854.7" y="547.0" width="16.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="857.7" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_stop (16 samples, 0.25%)</title><rect x="854.7" y="531.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="857.7" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (15 samples, 0.23%)</title><rect x="854.7" y="515.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="857.7" y="526.0"></text>
</g>
<g>
<title>__wake_up (10 samples, 0.15%)</title><rect x="854.9" y="499.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="857.9" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.15%)</title><rect x="854.9" y="483.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="857.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.14%)</title><rect x="855.1" y="467.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="858.1" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="856.9" y="499.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="859.9" y="510.0"></text>
</g>
<g>
<title>generic_write_end (73 samples, 1.13%)</title><rect x="858.0" y="531.0" width="13.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.0" y="542.0"></text>
</g>
<g>
<title>__generic_write_end (68 samples, 1.05%)</title><rect x="858.5" y="515.0" width="12.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="861.5" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (62 samples, 0.96%)</title><rect x="859.1" y="499.0" width="11.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="862.1" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (60 samples, 0.93%)</title><rect x="859.3" y="483.0" width="10.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="862.3" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="859.5" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="862.5" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (57 samples, 0.88%)</title><rect x="859.8" y="467.0" width="10.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="862.8" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (32 samples, 0.50%)</title><rect x="860.2" y="451.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="863.2" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (27 samples, 0.42%)</title><rect x="860.4" y="435.0" width="4.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="863.4" y="446.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (6 samples, 0.09%)</title><rect x="861.1" y="419.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="864.1" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (4 samples, 0.06%)</title><rect x="861.5" y="403.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="864.5" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (13 samples, 0.20%)</title><rect x="862.2" y="419.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="865.2" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (13 samples, 0.20%)</title><rect x="862.2" y="403.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="865.2" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (12 samples, 0.19%)</title><rect x="862.4" y="387.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="865.4" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (10 samples, 0.15%)</title><rect x="862.8" y="371.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="865.8" y="382.0"></text>
</g>
<g>
<title>from_kgid (2 samples, 0.03%)</title><rect x="864.6" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="867.6" y="430.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.03%)</title><rect x="864.6" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="867.6" y="414.0"></text>
</g>
<g>
<title>from_kuid (3 samples, 0.05%)</title><rect x="865.5" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="868.5" y="446.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (23 samples, 0.36%)</title><rect x="866.0" y="451.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="869.0" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (11 samples, 0.17%)</title><rect x="866.4" y="435.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.4" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (8 samples, 0.12%)</title><rect x="866.8" y="419.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="869.8" y="430.0"></text>
</g>
<g>
<title>__find_get_block (6 samples, 0.09%)</title><rect x="866.8" y="403.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="869.8" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.03%)</title><rect x="867.5" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="870.5" y="398.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.03%)</title><rect x="867.9" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="870.9" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.08%)</title><rect x="868.4" y="435.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="871.4" y="446.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (4 samples, 0.06%)</title><rect x="868.6" y="419.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.6" y="430.0"></text>
</g>
<g>
<title>ext4_inode_table (3 samples, 0.05%)</title><rect x="869.3" y="435.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="872.3" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.03%)</title><rect x="869.9" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="872.9" y="446.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="870.6" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.6" y="510.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.03%)</title><rect x="871.0" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.0" y="526.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.03%)</title><rect x="871.0" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.0" y="510.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.03%)</title><rect x="871.5" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.5" y="558.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (7 samples, 0.11%)</title><rect x="872.1" y="547.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="875.1" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.09%)</title><rect x="872.3" y="531.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="875.3" y="542.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (4 samples, 0.06%)</title><rect x="873.3" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="876.3" y="558.0"></text>
</g>
<g>
<title>ext4_write_checks (5 samples, 0.08%)</title><rect x="874.4" y="579.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="877.4" y="590.0"></text>
</g>
<g>
<title>generic_write_checks (4 samples, 0.06%)</title><rect x="874.6" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.6" y="574.0"></text>
</g>
<g>
<title>generic_write_check_limits (4 samples, 0.06%)</title><rect x="874.6" y="547.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="877.6" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (13 samples, 0.20%)</title><rect x="875.7" y="627.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="878.7" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.06%)</title><rect x="875.7" y="611.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="878.7" y="622.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.14%)</title><rect x="876.5" y="611.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="879.5" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.05%)</title><rect x="876.6" y="595.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="879.6" y="606.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.05%)</title><rect x="876.6" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.6" y="590.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.08%)</title><rect x="877.2" y="595.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="880.2" y="606.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="878.5" y="723.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="881.5" y="734.0"></text>
</g>
<g>
<title>__libc_free (5 samples, 0.08%)</title><rect x="880.3" y="739.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="883.3" y="750.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.08%)</title><rect x="881.2" y="739.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="884.2" y="750.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (16 samples, 0.25%)</title><rect x="882.1" y="739.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="885.1" y="750.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (5 samples, 0.08%)</title><rect x="885.0" y="739.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="888.0" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) [clone .plt] (2 samples, 0.03%)</title><rect x="886.0" y="739.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="889.0" y="750.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.06%)</title><rect x="886.3" y="739.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="889.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (7 samples, 0.11%)</title><rect x="887.1" y="771.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.11%)</title><rect x="887.1" y="755.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="887.1" y="739.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="887.1" y="723.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="887.1" y="707.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.05%)</title><rect x="887.8" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (29 samples, 0.45%)</title><rect x="888.3" y="771.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (26 samples, 0.40%)</title><rect x="888.9" y="755.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (12 samples, 0.19%)</title><rect x="888.9" y="739.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.19%)</title><rect x="888.9" y="723.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (12 samples, 0.19%)</title><rect x="888.9" y="707.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="891.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.03%)</title><rect x="889.4" y="691.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.4" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.06%)</title><rect x="889.8" y="691.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="892.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="890.5" y="691.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="893.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.22%)</title><rect x="891.1" y="739.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.22%)</title><rect x="891.1" y="723.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.22%)</title><rect x="891.1" y="707.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.08%)</title><rect x="892.7" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.7" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,613 samples, 24.98%)</title><rect x="893.6" y="915.0" width="294.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.6" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="896.0" y="899.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="899.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="896.0" y="883.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="899.0" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="896.0" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="899.0" y="878.0"></text>
</g>
<g>
<title>gettimeofday (18 samples, 0.28%)</title><rect x="896.4" y="899.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="899.4" y="910.0"></text>
</g>
<g>
<title>gettimeofday@plt (3 samples, 0.05%)</title><rect x="899.7" y="899.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="902.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.06%)</title><rect x="900.2" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (567 samples, 8.78%)</title><rect x="900.9" y="899.0" width="103.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.9" y="910.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (551 samples, 8.53%)</title><rect x="903.9" y="883.0" width="100.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.9" y="894.0">one/nio/net/..</text>
</g>
<g>
<title>JVM_IHashCode (169 samples, 2.62%)</title><rect x="905.3" y="867.0" width="30.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="908.3" y="878.0">JV..</text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.11%)</title><rect x="905.3" y="851.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="908.3" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="906.6" y="851.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="909.6" y="862.0"></text>
</g>
<g>
<title>epoll_wait (160 samples, 2.48%)</title><rect x="907.0" y="851.0" width="29.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="910.0" y="862.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (150 samples, 2.32%)</title><rect x="908.8" y="835.0" width="27.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="911.8" y="846.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.03%)</title><rect x="908.8" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="911.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (148 samples, 2.29%)</title><rect x="909.2" y="819.0" width="27.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="912.2" y="830.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (121 samples, 1.87%)</title><rect x="913.5" y="803.0" width="22.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="916.5" y="814.0">_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="913.5" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.5" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (119 samples, 1.84%)</title><rect x="913.9" y="787.0" width="21.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="916.9" y="798.0">d..</text>
</g>
<g>
<title>__fdget (5 samples, 0.08%)</title><rect x="914.1" y="771.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="917.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="914.3" y="755.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="917.3" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="914.5" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="917.5" y="750.0"></text>
</g>
<g>
<title>ep_poll (106 samples, 1.64%)</title><rect x="915.2" y="771.0" width="19.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="918.2" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.03%)</title><rect x="917.6" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="920.6" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (82 samples, 1.27%)</title><rect x="917.9" y="755.0" width="15.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="920.9" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (55 samples, 0.85%)</title><rect x="921.2" y="739.0" width="10.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.2" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (41 samples, 0.63%)</title><rect x="923.4" y="723.0" width="7.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.4" y="734.0"></text>
</g>
<g>
<title>sock_poll (33 samples, 0.51%)</title><rect x="923.8" y="707.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="926.8" y="718.0"></text>
</g>
<g>
<title>tcp_poll (19 samples, 0.29%)</title><rect x="924.9" y="691.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.9" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (8 samples, 0.12%)</title><rect x="928.3" y="691.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="931.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.09%)</title><rect x="929.8" y="707.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="932.8" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="930.9" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.9" y="734.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.12%)</title><rect x="931.3" y="739.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="934.3" y="750.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.05%)</title><rect x="932.2" y="723.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="935.2" y="734.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="932.9" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.08%)</title><rect x="933.5" y="755.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="936.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.06%)</title><rect x="933.6" y="739.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.6" y="750.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="933.8" y="723.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="936.8" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="934.0" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="937.0" y="718.0"></text>
</g>
<g>
<title>fput (4 samples, 0.06%)</title><rect x="934.7" y="771.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="937.7" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.05%)</title><rect x="935.7" y="803.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="938.7" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (12 samples, 0.19%)</title><rect x="936.4" y="867.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="939.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (328 samples, 5.08%)</title><rect x="938.6" y="867.0" width="59.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="941.6" y="878.0">[unkno..</text>
</g>
<g>
<title>[unknown] (22 samples, 0.34%)</title><rect x="938.6" y="851.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="941.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.34%)</title><rect x="938.6" y="835.0" width="4.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="941.6" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="938.6" y="819.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="941.6" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (11 samples, 0.17%)</title><rect x="938.9" y="819.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="941.9" y="830.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.14%)</title><rect x="941.0" y="819.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="944.0" y="830.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.08%)</title><rect x="941.7" y="803.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="944.7" y="814.0"></text>
</g>
<g>
<title>epoll_wait (305 samples, 4.72%)</title><rect x="942.8" y="851.0" width="55.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="945.8" y="862.0">epoll..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (295 samples, 4.57%)</title><rect x="944.6" y="835.0" width="53.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="947.6" y="846.0">entry..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.08%)</title><rect x="944.6" y="819.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="947.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (290 samples, 4.49%)</title><rect x="945.5" y="819.0" width="53.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.5" y="830.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (212 samples, 3.28%)</title><rect x="958.7" y="803.0" width="38.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="961.7" y="814.0">__x..</text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="959.0" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.0" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (206 samples, 3.19%)</title><rect x="959.6" y="787.0" width="37.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.6" y="798.0">do_..</text>
</g>
<g>
<title>__fdget (20 samples, 0.31%)</title><rect x="959.8" y="771.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="962.8" y="782.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.29%)</title><rect x="960.0" y="755.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="963.0" y="766.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.23%)</title><rect x="960.7" y="739.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="963.7" y="750.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.08%)</title><rect x="963.4" y="771.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="966.4" y="782.0"></text>
</g>
<g>
<title>ep_poll (176 samples, 2.73%)</title><rect x="964.3" y="771.0" width="32.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="967.3" y="782.0">ep..</text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.03%)</title><rect x="968.4" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="971.4" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (130 samples, 2.01%)</title><rect x="968.7" y="755.0" width="23.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="971.7" y="766.0">e..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="972.7" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="975.7" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (83 samples, 1.29%)</title><rect x="973.3" y="739.0" width="15.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="976.3" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (60 samples, 0.93%)</title><rect x="976.0" y="723.0" width="11.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.0" y="734.0"></text>
</g>
<g>
<title>sock_poll (45 samples, 0.70%)</title><rect x="977.7" y="707.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.7" y="718.0"></text>
</g>
<g>
<title>tcp_poll (22 samples, 0.34%)</title><rect x="981.3" y="691.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="984.3" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="985.0" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="988.0" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="985.4" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="988.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.09%)</title><rect x="985.9" y="707.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="988.9" y="718.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.12%)</title><rect x="987.0" y="723.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="990.0" y="734.0"></text>
</g>
<g>
<title>mutex_lock (22 samples, 0.34%)</title><rect x="988.5" y="739.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.5" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.06%)</title><rect x="992.5" y="755.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="995.5" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (4 samples, 0.06%)</title><rect x="993.4" y="755.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="996.4" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.19%)</title><rect x="994.1" y="755.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="997.1" y="766.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="994.1" y="739.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="997.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.12%)</title><rect x="994.9" y="739.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="997.9" y="750.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.09%)</title><rect x="995.2" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="998.2" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.09%)</title><rect x="995.2" y="707.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.2" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.06%)</title><rect x="995.6" y="691.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="998.6" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="996.0" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="999.0" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="996.0" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="999.0" y="670.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="996.0" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.0" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="996.0" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.0" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="996.0" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="999.0" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="996.0" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="996.0" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.0" y="590.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (2 samples, 0.03%)</title><rect x="996.5" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="999.5" y="782.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="996.9" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.9" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.08%)</title><rect x="997.6" y="803.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1000.6" y="814.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.12%)</title><rect x="998.5" y="867.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1001.5" y="878.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.03%)</title><rect x="1000.0" y="867.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1003.0" y="878.0"></text>
</g>
<g>
<title>epoll_wait (18 samples, 0.28%)</title><rect x="1000.3" y="867.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1003.3" y="878.0"></text>
</g>
<g>
<title>epoll_wait@plt (5 samples, 0.08%)</title><rect x="1003.6" y="867.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1006.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (991 samples, 15.35%)</title><rect x="1004.5" y="899.0" width="181.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1007.5" y="910.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.06%)</title><rect x="1006.6" y="883.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1009.6" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.06%)</title><rect x="1006.6" y="867.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1009.6" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="1006.7" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (976 samples, 15.11%)</title><rect x="1007.3" y="883.0" width="178.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.3" y="894.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (616 samples, 9.54%)</title><rect x="1008.0" y="867.0" width="112.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.0" y="878.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (8 samples, 0.12%)</title><rect x="1011.7" y="851.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.7" y="862.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.22%)</title><rect x="1013.1" y="851.0" width="2.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1016.1" y="862.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.06%)</title><rect x="1015.7" y="851.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1018.7" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1016.4" y="851.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1019.4" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.09%)</title><rect x="1016.8" y="851.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1019.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (445 samples, 6.89%)</title><rect x="1017.9" y="851.0" width="81.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.9" y="862.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (445 samples, 6.89%)</title><rect x="1017.9" y="835.0" width="81.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1020.9" y="846.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (420 samples, 6.50%)</title><rect x="1019.0" y="819.0" width="76.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.0" y="830.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.05%)</title><rect x="1019.0" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1022.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (41 samples, 0.63%)</title><rect x="1019.5" y="803.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1022.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (40 samples, 0.62%)</title><rect x="1019.7" y="787.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1022.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.15%)</title><rect x="1022.4" y="771.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1025.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.15%)</title><rect x="1022.4" y="755.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1025.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.12%)</title><rect x="1022.8" y="739.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1025.8" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="1024.3" y="771.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1027.3" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="1024.6" y="771.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1027.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (9 samples, 0.14%)</title><rect x="1025.4" y="771.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.12%)</title><rect x="1025.6" y="755.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.12%)</title><rect x="1025.6" y="739.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.12%)</title><rect x="1025.6" y="723.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1028.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.entity (376 samples, 5.82%)</title><rect x="1027.0" y="803.0" width="68.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.0" y="814.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.09%)</title><rect x="1027.2" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.09%)</title><rect x="1027.2" y="771.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.09%)</title><rect x="1027.2" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.2" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.09%)</title><rect x="1027.2" y="739.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.03%)</title><rect x="1027.9" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.runAsyncHandler (355 samples, 5.50%)</title><rect x="1028.3" y="787.0" width="64.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.3" y="798.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (355 samples, 5.50%)</title><rect x="1028.3" y="771.0" width="64.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.3" y="782.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (321 samples, 4.97%)</title><rect x="1034.5" y="755.0" width="58.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1037.5" y="766.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (21 samples, 0.33%)</title><rect x="1034.5" y="739.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (21 samples, 0.33%)</title><rect x="1034.5" y="723.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (21 samples, 0.33%)</title><rect x="1034.5" y="707.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.09%)</title><rect x="1037.2" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (3 samples, 0.05%)</title><rect x="1037.2" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.05%)</title><rect x="1037.2" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title><rect x="1037.2" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.05%)</title><rect x="1037.8" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.05%)</title><rect x="1037.8" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.05%)</title><rect x="1037.8" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.05%)</title><rect x="1037.8" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.05%)</title><rect x="1038.3" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.05%)</title><rect x="1038.3" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="1038.5" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (297 samples, 4.60%)</title><rect x="1038.9" y="739.0" width="54.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.9" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (297 samples, 4.60%)</title><rect x="1038.9" y="723.0" width="54.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.9" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (297 samples, 4.60%)</title><rect x="1038.9" y="707.0" width="54.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.9" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (296 samples, 4.58%)</title><rect x="1039.1" y="691.0" width="54.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.1" y="702.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (296 samples, 4.58%)</title><rect x="1039.1" y="675.0" width="54.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.1" y="686.0">jdk/i..</text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.05%)</title><rect x="1039.6" y="659.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1042.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1040.4" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1043.4" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="1041.1" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1044.1" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (70 samples, 1.08%)</title><rect x="1041.4" y="659.0" width="12.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1044.4" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="1042.7" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1045.7" y="654.0"></text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.05%)</title><rect x="1043.1" y="643.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1046.1" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="1043.6" y="643.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1046.6" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1044.2" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1047.2" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.08%)</title><rect x="1044.6" y="643.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1047.6" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (11 samples, 0.17%)</title><rect x="1045.5" y="643.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1048.5" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (4 samples, 0.06%)</title><rect x="1047.5" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1050.5" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (4 samples, 0.06%)</title><rect x="1048.4" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1051.4" y="654.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.05%)</title><rect x="1049.1" y="643.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1052.1" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (19 samples, 0.29%)</title><rect x="1049.7" y="643.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1052.7" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.08%)</title><rect x="1053.3" y="643.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1056.3" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (201 samples, 3.11%)</title><rect x="1054.2" y="659.0" width="36.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1057.2" y="670.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (182 samples, 2.82%)</title><rect x="1057.7" y="643.0" width="33.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1060.7" y="654.0">en..</text>
</g>
<g>
<title>do_syscall_64 (182 samples, 2.82%)</title><rect x="1057.7" y="627.0" width="33.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1060.7" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (150 samples, 2.32%)</title><rect x="1063.6" y="611.0" width="27.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1066.6" y="622.0">_..</text>
</g>
<g>
<title>do_futex (148 samples, 2.29%)</title><rect x="1063.9" y="595.0" width="27.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1066.9" y="606.0">d..</text>
</g>
<g>
<title>futex_wake (145 samples, 2.25%)</title><rect x="1064.5" y="579.0" width="26.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1067.5" y="590.0">f..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="1066.3" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1069.3" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.06%)</title><rect x="1066.8" y="563.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.8" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="1067.6" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1070.6" y="574.0"></text>
</g>
<g>
<title>wake_up_q (125 samples, 1.94%)</title><rect x="1068.1" y="563.0" width="22.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1071.1" y="574.0">w..</text>
</g>
<g>
<title>try_to_wake_up (125 samples, 1.94%)</title><rect x="1068.1" y="547.0" width="22.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.1" y="558.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (125 samples, 1.94%)</title><rect x="1068.1" y="531.0" width="22.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1071.1" y="542.0">_..</text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.09%)</title><rect x="1091.0" y="659.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1094.0" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.03%)</title><rect x="1092.1" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.1" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="1092.4" y="659.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1095.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (14 samples, 0.22%)</title><rect x="1093.2" y="787.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.2" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1095.4" y="771.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1098.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (18 samples, 0.28%)</title><rect x="1095.7" y="819.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.28%)</title><rect x="1095.7" y="803.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.12%)</title><rect x="1095.7" y="787.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1098.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.15%)</title><rect x="1097.2" y="787.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (10 samples, 0.15%)</title><rect x="1097.2" y="771.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (10 samples, 0.15%)</title><rect x="1097.2" y="755.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 0.57%)</title><rect x="1099.2" y="851.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.17%)</title><rect x="1099.6" y="835.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1102.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.17%)</title><rect x="1099.6" y="819.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.17%)</title><rect x="1099.6" y="803.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.17%)</title><rect x="1099.6" y="787.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.08%)</title><rect x="1100.7" y="771.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.29%)</title><rect x="1101.6" y="835.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.29%)</title><rect x="1101.6" y="819.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.08%)</title><rect x="1105.0" y="835.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.26%)</title><rect x="1106.1" y="851.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.20%)</title><rect x="1106.7" y="835.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.20%)</title><rect x="1106.7" y="819.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="1108.5" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (62 samples, 0.96%)</title><rect x="1109.2" y="851.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.36%)</title><rect x="1116.4" y="835.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.4" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="1120.0" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.0" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="1120.0" y="803.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1123.0" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="1120.0" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.0" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1120.0" y="771.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1123.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="1120.6" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (354 samples, 5.48%)</title><rect x="1120.9" y="867.0" width="64.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1123.9" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (351 samples, 5.44%)</title><rect x="1121.5" y="851.0" width="64.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.5" y="862.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (72 samples, 1.11%)</title><rect x="1125.0" y="835.0" width="13.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1128.0" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.09%)</title><rect x="1127.0" y="819.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1130.0" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.05%)</title><rect x="1128.1" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.1" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="1128.6" y="819.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.6" y="830.0"></text>
</g>
<g>
<title>__memmove_ssse3 (16 samples, 0.25%)</title><rect x="1129.2" y="819.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1132.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (29 samples, 0.45%)</title><rect x="1132.1" y="819.0" width="5.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1135.1" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1133.7" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.7" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="1134.1" y="803.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.1" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.08%)</title><rect x="1134.5" y="803.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1137.5" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.09%)</title><rect x="1135.4" y="803.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.4" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.08%)</title><rect x="1136.5" y="803.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1139.5" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.05%)</title><rect x="1136.8" y="787.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.8" y="798.0"></text>
</g>
<g>
<title>memmove@plt (3 samples, 0.05%)</title><rect x="1137.4" y="819.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1140.4" y="830.0"></text>
</g>
<g>
<title>__GI___recv (251 samples, 3.89%)</title><rect x="1138.1" y="835.0" width="45.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1141.1" y="846.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (234 samples, 3.62%)</title><rect x="1141.2" y="819.0" width="42.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.2" y="830.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.03%)</title><rect x="1141.2" y="803.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (232 samples, 3.59%)</title><rect x="1141.6" y="803.0" width="42.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1144.6" y="814.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (168 samples, 2.60%)</title><rect x="1153.3" y="787.0" width="30.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1156.3" y="798.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (165 samples, 2.55%)</title><rect x="1153.3" y="771.0" width="30.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.3" y="782.0">__..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1153.6" y="755.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1156.6" y="766.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="1154.2" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.2" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (139 samples, 2.15%)</title><rect x="1154.6" y="755.0" width="25.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1157.6" y="766.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="1154.9" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1157.9" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (109 samples, 1.69%)</title><rect x="1155.3" y="739.0" width="19.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.3" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="1155.8" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1158.8" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.05%)</title><rect x="1156.7" y="723.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1159.7" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (98 samples, 1.52%)</title><rect x="1157.3" y="723.0" width="17.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.3" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.14%)</title><rect x="1159.9" y="707.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1162.9" y="718.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.11%)</title><rect x="1160.0" y="691.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1163.0" y="702.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.06%)</title><rect x="1160.2" y="675.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1163.2" y="686.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="1160.9" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1163.9" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1161.5" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.5" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.05%)</title><rect x="1162.0" y="707.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.0" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="1162.6" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1165.6" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1163.3" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1166.3" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.09%)</title><rect x="1163.7" y="707.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1166.7" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="1164.1" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1167.1" y="702.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="1164.8" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1167.8" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="1165.0" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1168.0" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (34 samples, 0.53%)</title><rect x="1165.3" y="707.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1168.3" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (33 samples, 0.51%)</title><rect x="1165.5" y="691.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1168.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="1166.1" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1169.1" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (28 samples, 0.43%)</title><rect x="1166.4" y="675.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1169.4" y="686.0"></text>
</g>
<g>
<title>__check_object_size (12 samples, 0.19%)</title><rect x="1166.4" y="659.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1169.4" y="670.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="1167.3" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1170.3" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.08%)</title><rect x="1167.7" y="643.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1170.7" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1168.6" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.6" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (12 samples, 0.19%)</title><rect x="1169.0" y="659.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1172.0" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.15%)</title><rect x="1169.2" y="643.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.2" y="654.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="1171.2" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1174.2" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.12%)</title><rect x="1171.5" y="707.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1174.5" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (10 samples, 0.15%)</title><rect x="1173.2" y="707.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1176.2" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.11%)</title><rect x="1173.7" y="691.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1176.7" y="702.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="1173.7" y="675.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.7" y="686.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1173.9" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.9" y="670.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.06%)</title><rect x="1174.3" y="675.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1177.3" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (26 samples, 0.40%)</title><rect x="1175.2" y="739.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1178.2" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (24 samples, 0.37%)</title><rect x="1175.6" y="723.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1178.6" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (23 samples, 0.36%)</title><rect x="1175.7" y="707.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.7" y="718.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.05%)</title><rect x="1176.1" y="691.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1179.1" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (18 samples, 0.28%)</title><rect x="1176.7" y="691.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1179.7" y="702.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1179.2" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.2" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1179.6" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.6" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (19 samples, 0.29%)</title><rect x="1180.0" y="755.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1183.0" y="766.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.28%)</title><rect x="1180.1" y="739.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.28%)</title><rect x="1180.1" y="723.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.17%)</title><rect x="1181.4" y="707.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.4" y="718.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="1183.4" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1186.4" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="1184.0" y="835.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1187.0" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.08%)</title><rect x="1184.7" y="835.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1187.7" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (15 samples, 0.23%)</title><rect x="1185.6" y="899.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.6" y="910.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1186.2" y="883.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1189.2" y="894.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.15%)</title><rect x="1186.5" y="883.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1189.5" y="894.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.12%)</title><rect x="1186.9" y="867.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1189.9" y="878.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.14%)</title><rect x="1188.4" y="915.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1191.4" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.14%)</title><rect x="1188.4" y="899.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1191.4" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (9 samples, 0.14%)</title><rect x="1188.4" y="883.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.11%)</title><rect x="1188.4" y="867.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.4" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.11%)</title><rect x="1188.4" y="851.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.06%)</title><rect x="1188.4" y="835.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.05%)</title><rect x="1188.5" y="819.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1189.3" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.3" y="846.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.6" y="867.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.6" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>sched_yield (2 samples, 0.03%)</title><rect x="1189.6" y="835.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1189.6" y="819.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1189.6" y="803.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1192.6" y="814.0"></text>
</g>
</g>
</svg>
