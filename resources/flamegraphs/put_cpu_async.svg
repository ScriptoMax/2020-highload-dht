<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2230" onload="init(evt)" viewBox="0 0 1200 2230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Java async client | CPU</text>
<text id="details" x="10" y="2213"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2213"> </text>
<g id="frames">
<g>
<title>all (2,949 samples, 100.00%)</title><rect x="10.0" y="2179.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="2190.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.20%)</title><rect x="10.0" y="2163.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="2174.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.20%)</title><rect x="10.0" y="2147.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="2158.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (6 samples, 0.20%)</title><rect x="10.0" y="2131.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.20%)</title><rect x="10.0" y="2115.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.07%)</title><rect x="10.4" y="2099.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.4" y="2110.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="11.2" y="2099.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="14.2" y="2110.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="11.6" y="2099.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="14.6" y="2110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="11.6" y="2083.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="14.6" y="2094.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="11.6" y="2067.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="14.6" y="2078.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="11.6" y="2051.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="14.6" y="2062.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="11.6" y="2035.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="14.6" y="2046.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="11.6" y="2019.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="14.6" y="2030.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="12.0" y="2099.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="15.0" y="2110.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.10%)</title><rect x="12.4" y="2163.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="15.4" y="2174.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.10%)</title><rect x="12.4" y="2147.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.4" y="2158.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.10%)</title><rect x="12.4" y="2131.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.4" y="2142.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="12.4" y="2115.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.4" y="2126.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="12.4" y="2099.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.4" y="2110.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="12.4" y="2083.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.4" y="2094.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.03%)</title><rect x="12.8" y="2115.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.8" y="2126.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="13.2" y="2115.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.2" y="2126.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (1 samples, 0.03%)</title><rect x="13.2" y="2099.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.2" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="13.6" y="2163.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="16.6" y="2174.0"></text>
</g>
<g>
<title>_IO_str_init_static_internal (1 samples, 0.03%)</title><rect x="13.6" y="2147.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="16.6" y="2158.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="14.0" y="2147.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="17.0" y="2158.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="14.0" y="2131.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="17.0" y="2142.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="14.0" y="2115.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="17.0" y="2126.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="14.0" y="2099.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="17.0" y="2110.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="14.0" y="2083.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="17.0" y="2094.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="14.0" y="2067.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="17.0" y="2078.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="14.0" y="2051.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="17.0" y="2062.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="14.0" y="2035.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="17.0" y="2046.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="14.0" y="2019.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="17.0" y="2030.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="14.0" y="2003.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="17.0" y="2014.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.31%)</title><rect x="14.4" y="2163.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="17.4" y="2174.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (2 samples, 0.07%)</title><rect x="14.4" y="2147.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.4" y="2158.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (2 samples, 0.07%)</title><rect x="15.2" y="2147.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.2" y="2158.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="16.0" y="2147.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="19.0" y="2158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="16.0" y="2131.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="19.0" y="2142.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="16.0" y="2115.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="19.0" y="2126.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="16.0" y="2099.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="19.0" y="2110.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="16.4" y="2131.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="19.4" y="2142.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="16.4" y="2115.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="19.4" y="2126.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="16.8" y="2147.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="19.8" y="2158.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="16.8" y="2131.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="19.8" y="2142.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="16.8" y="2115.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.8" y="2126.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="17.2" y="2115.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="20.2" y="2126.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="17.2" y="2099.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="20.2" y="2110.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="17.2" y="2083.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="20.2" y="2094.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="17.2" y="2067.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="20.2" y="2078.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="17.2" y="2051.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="20.2" y="2062.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="17.2" y="2035.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="20.2" y="2046.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="17.2" y="2019.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="20.2" y="2030.0"></text>
</g>
<g>
<title>checkcast_arraycopy_uninit (1 samples, 0.03%)</title><rect x="17.6" y="2147.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="20.6" y="2158.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="18.0" y="2163.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="21.0" y="2174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="18.0" y="2147.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="21.0" y="2158.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="18.0" y="2131.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="21.0" y="2142.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="18.0" y="2115.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.0" y="2126.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="18.0" y="2099.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="21.0" y="2110.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="18.0" y="2083.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.0" y="2094.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="18.0" y="2067.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="21.0" y="2078.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="18.0" y="2051.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="21.0" y="2062.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="18.0" y="2035.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="21.0" y="2046.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.10%)</title><rect x="18.4" y="2163.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="21.4" y="2174.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="18.4" y="2147.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="21.4" y="2158.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="18.4" y="2131.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="21.4" y="2142.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="19.6" y="2163.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="22.6" y="2174.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,284 samples, 43.54%)</title><rect x="20.0" y="2163.0" width="513.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.0" y="2174.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,284 samples, 43.54%)</title><rect x="20.0" y="2147.0" width="513.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.0" y="2158.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,284 samples, 43.54%)</title><rect x="20.0" y="2131.0" width="513.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.0" y="2142.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="20.4" y="2115.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="23.4" y="2126.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (199 samples, 6.75%)</title><rect x="20.8" y="2115.0" width="79.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.8" y="2126.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (199 samples, 6.75%)</title><rect x="20.8" y="2099.0" width="79.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.8" y="2110.0">java/util..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="20.8" y="2083.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="23.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (197 samples, 6.68%)</title><rect x="21.2" y="2083.0" width="78.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.2" y="2094.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="21.2" y="2067.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.2" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="21.2" y="2051.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.2" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="21.2" y="2035.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.2" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="21.2" y="2019.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.2" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="21.2" y="2003.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.2" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="21.2" y="1987.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.2" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1557312951.apply (196 samples, 6.65%)</title><rect x="21.6" y="2067.0" width="78.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.6" y="2078.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (196 samples, 6.65%)</title><rect x="21.6" y="2051.0" width="78.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.6" y="2062.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (196 samples, 6.65%)</title><rect x="21.6" y="2035.0" width="78.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.6" y="2046.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.07%)</title><rect x="21.6" y="2019.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.6" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.07%)</title><rect x="21.6" y="2003.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.6" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="22.0" y="1987.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.0" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (141 samples, 4.78%)</title><rect x="22.4" y="2019.0" width="56.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.4" y="2030.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (141 samples, 4.78%)</title><rect x="22.4" y="2003.0" width="56.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.4" y="2014.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (141 samples, 4.78%)</title><rect x="22.4" y="1987.0" width="56.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.4" y="1998.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (78 samples, 2.64%)</title><rect x="22.4" y="1971.0" width="31.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.4" y="1982.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (78 samples, 2.64%)</title><rect x="22.4" y="1955.0" width="31.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.4" y="1966.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (78 samples, 2.64%)</title><rect x="22.4" y="1939.0" width="31.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.4" y="1950.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="22.4" y="1923.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.4" y="1934.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="22.4" y="1907.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="25.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1014279463.apply (77 samples, 2.61%)</title><rect x="22.8" y="1923.0" width="30.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.8" y="1934.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (77 samples, 2.61%)</title><rect x="22.8" y="1907.0" width="30.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.8" y="1918.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (77 samples, 2.61%)</title><rect x="22.8" y="1891.0" width="30.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.8" y="1902.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/885247476.apply (77 samples, 2.61%)</title><rect x="22.8" y="1875.0" width="30.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.8" y="1886.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (77 samples, 2.61%)</title><rect x="22.8" y="1859.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.8" y="1870.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.03%)</title><rect x="22.8" y="1843.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.03%)</title><rect x="22.8" y="1827.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="22.8" y="1811.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="22.8" y="1795.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.8" y="1806.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="22.8" y="1779.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.8" y="1790.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="22.8" y="1763.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.8" y="1774.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="22.8" y="1747.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="25.8" y="1758.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="22.8" y="1731.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.8" y="1742.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="22.8" y="1715.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="25.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (76 samples, 2.58%)</title><rect x="23.2" y="1843.0" width="30.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.2" y="1854.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (66 samples, 2.24%)</title><rect x="23.2" y="1827.0" width="26.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.2" y="1838.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (65 samples, 2.20%)</title><rect x="23.6" y="1811.0" width="26.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.6" y="1822.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$175/1685208549.apply (65 samples, 2.20%)</title><rect x="23.6" y="1795.0" width="26.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.6" y="1806.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (65 samples, 2.20%)</title><rect x="23.6" y="1779.0" width="26.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.6" y="1790.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="24.4" y="1763.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="27.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.17%)</title><rect x="24.8" y="1763.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.17%)</title><rect x="24.8" y="1747.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.17%)</title><rect x="24.8" y="1731.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.14%)</title><rect x="25.2" y="1715.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.07%)</title><rect x="25.2" y="1699.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.2" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.07%)</title><rect x="25.2" y="1683.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.2" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.07%)</title><rect x="25.2" y="1667.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.2" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.07%)</title><rect x="25.2" y="1651.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.2" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.07%)</title><rect x="25.2" y="1635.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.2" y="1646.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="25.2" y="1619.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="28.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.07%)</title><rect x="26.0" y="1699.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.07%)</title><rect x="26.0" y="1683.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.07%)</title><rect x="26.0" y="1667.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.0" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (2 samples, 0.07%)</title><rect x="26.0" y="1651.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.07%)</title><rect x="26.0" y="1635.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.0" y="1646.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="26.4" y="1619.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="29.4" y="1630.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="26.4" y="1603.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.4" y="1614.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="26.4" y="1587.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="29.4" y="1598.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="26.4" y="1571.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.4" y="1582.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="26.4" y="1555.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="29.4" y="1566.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="26.4" y="1539.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.4" y="1550.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="26.4" y="1523.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="29.4" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (22 samples, 0.75%)</title><rect x="26.8" y="1763.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (22 samples, 0.75%)</title><rect x="26.8" y="1747.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5 samples, 0.17%)</title><rect x="26.8" y="1731.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.03%)</title><rect x="26.8" y="1715.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4 samples, 0.14%)</title><rect x="27.2" y="1715.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4 samples, 0.14%)</title><rect x="27.2" y="1699.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.07%)</title><rect x="27.2" y="1683.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.07%)</title><rect x="27.2" y="1667.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.2" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.07%)</title><rect x="27.2" y="1651.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.2" y="1662.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="27.6" y="1635.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.6" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.07%)</title><rect x="28.0" y="1683.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17 samples, 0.58%)</title><rect x="28.8" y="1731.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (16 samples, 0.54%)</title><rect x="29.2" y="1715.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (14 samples, 0.47%)</title><rect x="29.6" y="1699.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.6" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (14 samples, 0.47%)</title><rect x="29.6" y="1683.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (14 samples, 0.47%)</title><rect x="29.6" y="1667.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.6" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (14 samples, 0.47%)</title><rect x="29.6" y="1651.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.6" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (13 samples, 0.44%)</title><rect x="30.0" y="1635.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.44%)</title><rect x="30.0" y="1619.0" width="5.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="33.0" y="1630.0"></text>
</g>
<g>
<title>__GI_write (13 samples, 0.44%)</title><rect x="30.0" y="1603.0" width="5.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="33.0" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.41%)</title><rect x="30.4" y="1587.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="33.4" y="1598.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="30.4" y="1571.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="33.4" y="1582.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.37%)</title><rect x="30.8" y="1571.0" width="4.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="33.8" y="1582.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.34%)</title><rect x="31.2" y="1555.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="34.2" y="1566.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.34%)</title><rect x="31.2" y="1539.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="34.2" y="1550.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="31.2" y="1523.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="34.2" y="1534.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="31.2" y="1507.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.2" y="1518.0"></text>
</g>
<g>
<title>vfs_write (9 samples, 0.31%)</title><rect x="31.6" y="1523.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="34.6" y="1534.0"></text>
</g>
<g>
<title>__vfs_write (7 samples, 0.24%)</title><rect x="31.6" y="1507.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.6" y="1518.0"></text>
</g>
<g>
<title>new_sync_write (7 samples, 0.24%)</title><rect x="31.6" y="1491.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="34.6" y="1502.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.24%)</title><rect x="31.6" y="1475.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="34.6" y="1486.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.17%)</title><rect x="31.6" y="1459.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.6" y="1470.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.17%)</title><rect x="31.6" y="1443.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="34.6" y="1454.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.17%)</title><rect x="31.6" y="1427.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.6" y="1438.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="33.6" y="1459.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.6" y="1470.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="33.6" y="1443.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.6" y="1454.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="34.0" y="1459.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="37.0" y="1470.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="34.4" y="1507.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="37.4" y="1518.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="34.8" y="1507.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="37.8" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="35.2" y="1699.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (35 samples, 1.19%)</title><rect x="35.6" y="1763.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.6" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.10%)</title><rect x="35.6" y="1747.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.6" y="1758.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.10%)</title><rect x="35.6" y="1731.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.6" y="1742.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.10%)</title><rect x="35.6" y="1715.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.6" y="1726.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.17%)</title><rect x="36.8" y="1747.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.8" y="1758.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.17%)</title><rect x="36.8" y="1731.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.8" y="1742.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="38.4" y="1715.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.4" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="38.4" y="1699.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (20 samples, 0.68%)</title><rect x="38.8" y="1747.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.07%)</title><rect x="38.8" y="1731.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.8" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.07%)</title><rect x="38.8" y="1715.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.8" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.07%)</title><rect x="38.8" y="1699.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.8" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.07%)</title><rect x="38.8" y="1683.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.8" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.07%)</title><rect x="38.8" y="1667.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.8" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.07%)</title><rect x="38.8" y="1651.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.8" y="1662.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="39.2" y="1635.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="39.2" y="1619.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="42.2" y="1630.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="39.2" y="1603.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (10 samples, 0.34%)</title><rect x="39.6" y="1731.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.6" y="1742.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="40.4" y="1715.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.4" y="1726.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="40.4" y="1699.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.4" y="1710.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="40.4" y="1683.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.4" y="1694.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="40.4" y="1667.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.4" y="1678.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="40.4" y="1651.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="43.4" y="1662.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="40.4" y="1635.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="43.4" y="1646.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="40.4" y="1619.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="43.4" y="1630.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="40.4" y="1603.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="43.4" y="1614.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.10%)</title><rect x="40.8" y="1715.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.8" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.10%)</title><rect x="40.8" y="1699.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.8" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.10%)</title><rect x="40.8" y="1683.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.8" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (3 samples, 0.10%)</title><rect x="40.8" y="1667.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.8" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.10%)</title><rect x="40.8" y="1651.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.8" y="1662.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.10%)</title><rect x="40.8" y="1635.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.8" y="1646.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$191/1521704547.test (4 samples, 0.14%)</title><rect x="42.0" y="1715.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.0" y="1726.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (4 samples, 0.14%)</title><rect x="42.0" y="1699.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/27319466.test (4 samples, 0.14%)</title><rect x="42.0" y="1683.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (4 samples, 0.14%)</title><rect x="42.0" y="1667.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.0" y="1678.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1627857534.test (4 samples, 0.14%)</title><rect x="42.0" y="1651.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.0" y="1662.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (4 samples, 0.14%)</title><rect x="42.0" y="1635.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/728258269.test (4 samples, 0.14%)</title><rect x="42.0" y="1619.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.0" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (4 samples, 0.14%)</title><rect x="42.0" y="1603.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.14%)</title><rect x="42.0" y="1587.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.0" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.10%)</title><rect x="42.0" y="1571.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.0" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="43.2" y="1571.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.2" y="1582.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="43.2" y="1555.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.2" y="1566.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="43.2" y="1539.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="46.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (8 samples, 0.27%)</title><rect x="43.6" y="1731.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.6" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.27%)</title><rect x="43.6" y="1715.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.6" y="1726.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.27%)</title><rect x="43.6" y="1699.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.6" y="1710.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="44.4" y="1683.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="47.4" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.17%)</title><rect x="44.8" y="1683.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.8" y="1694.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (3 samples, 0.10%)</title><rect x="45.2" y="1667.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.2" y="1678.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.10%)</title><rect x="45.2" y="1651.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.03%)</title><rect x="45.2" y="1635.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.2" y="1646.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.03%)</title><rect x="45.6" y="1635.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.6" y="1646.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (1 samples, 0.03%)</title><rect x="45.6" y="1619.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.6" y="1630.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="45.6" y="1603.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.6" y="1614.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="46.0" y="1635.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="49.0" y="1646.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="46.4" y="1667.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.4" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (3 samples, 0.10%)</title><rect x="46.8" y="1747.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3 samples, 0.10%)</title><rect x="46.8" y="1731.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (3 samples, 0.10%)</title><rect x="46.8" y="1715.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.8" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="47.6" y="1699.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.6" y="1710.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="47.6" y="1683.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.6" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.14%)</title><rect x="48.0" y="1747.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.0" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="49.2" y="1731.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.2" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="49.2" y="1715.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (10 samples, 0.34%)</title><rect x="49.6" y="1827.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (10 samples, 0.34%)</title><rect x="49.6" y="1811.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.6" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.10%)</title><rect x="50.0" y="1795.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.10%)</title><rect x="50.0" y="1779.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.20%)</title><rect x="51.2" y="1795.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.20%)</title><rect x="51.2" y="1779.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="51.2" y="1763.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.2" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="51.2" y="1747.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.2" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="51.2" y="1731.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.2" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="51.2" y="1715.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.2" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="51.2" y="1699.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="51.2" y="1683.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.17%)</title><rect x="51.6" y="1763.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.17%)</title><rect x="51.6" y="1747.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.6" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="52.0" y="1731.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="52.0" y="1715.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.07%)</title><rect x="52.4" y="1731.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (1 samples, 0.03%)</title><rect x="52.8" y="1715.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.8" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="52.8" y="1699.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.03%)</title><rect x="52.8" y="1683.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.03%)</title><rect x="52.8" y="1667.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="53.2" y="1731.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.2" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="53.2" y="1715.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="53.2" y="1699.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.2" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="53.6" y="1971.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.6" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="53.6" y="1955.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.6" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="53.6" y="1939.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.6" y="1950.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="53.6" y="1923.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="56.6" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (62 samples, 2.10%)</title><rect x="54.0" y="1971.0" width="24.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.0" y="1982.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="54.0" y="1955.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="54.0" y="1939.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="54.0" y="1923.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.07%)</title><rect x="54.4" y="1955.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.07%)</title><rect x="54.4" y="1939.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="54.4" y="1923.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="54.4" y="1907.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.4" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1 samples, 0.03%)</title><rect x="54.4" y="1891.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.4" y="1902.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.4" y="1875.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.4" y="1886.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.4" y="1859.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.03%)</title><rect x="54.4" y="1843.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.4" y="1854.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (1 samples, 0.03%)</title><rect x="54.4" y="1827.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.4" y="1838.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (1 samples, 0.03%)</title><rect x="54.4" y="1811.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.4" y="1822.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (1 samples, 0.03%)</title><rect x="54.4" y="1795.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.4" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/186376468.accept (1 samples, 0.03%)</title><rect x="54.4" y="1779.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.4" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="54.8" y="1923.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="54.8" y="1907.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (59 samples, 2.00%)</title><rect x="55.2" y="1955.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.2" y="1966.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (59 samples, 2.00%)</title><rect x="55.2" y="1939.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.2" y="1950.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (57 samples, 1.93%)</title><rect x="55.2" y="1923.0" width="22.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.2" y="1934.0">j..</text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.03%)</title><rect x="55.2" y="1907.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.2" y="1918.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.03%)</title><rect x="55.2" y="1891.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.2" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.03%)</title><rect x="55.6" y="1907.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="56.0" y="1907.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (6 samples, 0.20%)</title><rect x="56.4" y="1907.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.4" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="56.8" y="1891.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="56.8" y="1875.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$159/1610410133.get$Lambda (1 samples, 0.03%)</title><rect x="56.8" y="1859.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.8" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.get$Lambda (1 samples, 0.03%)</title><rect x="57.2" y="1859.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.&lt;init&gt; (1 samples, 0.03%)</title><rect x="57.6" y="1891.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.6" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.03%)</title><rect x="58.0" y="1891.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="58.4" y="1891.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3 samples, 0.10%)</title><rect x="58.8" y="1907.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.8" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.03%)</title><rect x="59.2" y="1891.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.2" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="59.6" y="1891.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.6" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="60.0" y="1907.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.03%)</title><rect x="60.0" y="1891.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (15 samples, 0.51%)</title><rect x="60.4" y="1907.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (10 samples, 0.34%)</title><rect x="60.4" y="1891.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (9 samples, 0.31%)</title><rect x="60.8" y="1875.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.8" y="1886.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.10%)</title><rect x="61.6" y="1859.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.6" y="1870.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="61.6" y="1843.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.6" y="1854.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="62.0" y="1843.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.0" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.07%)</title><rect x="62.0" y="1827.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.0" y="1838.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.07%)</title><rect x="62.0" y="1811.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.0" y="1822.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.07%)</title><rect x="62.0" y="1795.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (4 samples, 0.14%)</title><rect x="62.8" y="1859.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.8" y="1870.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.14%)</title><rect x="62.8" y="1843.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.8" y="1854.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.14%)</title><rect x="62.8" y="1827.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.8" y="1838.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.14%)</title><rect x="62.8" y="1811.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.8" y="1822.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (4 samples, 0.14%)</title><rect x="62.8" y="1795.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (5 samples, 0.17%)</title><rect x="64.4" y="1891.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.03%)</title><rect x="66.0" y="1875.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (26 samples, 0.88%)</title><rect x="66.4" y="1907.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.4" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/992802731.linkToTargetMethod (1 samples, 0.03%)</title><rect x="66.4" y="1891.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.4" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="66.4" y="1875.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.4" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$143/1532545.get$Lambda (1 samples, 0.03%)</title><rect x="66.4" y="1859.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.4" y="1870.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 0.85%)</title><rect x="66.8" y="1891.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.8" y="1902.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (19 samples, 0.64%)</title><rect x="66.8" y="1875.0" width="7.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="69.8" y="1886.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.03%)</title><rect x="68.4" y="1859.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="71.4" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.10%)</title><rect x="68.8" y="1859.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="71.8" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (2 samples, 0.07%)</title><rect x="69.2" y="1843.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="72.2" y="1854.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.10%)</title><rect x="70.0" y="1859.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="73.0" y="1870.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="70.8" y="1843.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="73.8" y="1854.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="70.8" y="1827.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="73.8" y="1838.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="70.8" y="1811.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="73.8" y="1822.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="71.2" y="1859.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="74.2" y="1870.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="71.6" y="1859.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="74.6" y="1870.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.10%)</title><rect x="72.0" y="1859.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="75.0" y="1870.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="72.0" y="1843.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="75.0" y="1854.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.07%)</title><rect x="72.4" y="1843.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="75.4" y="1854.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="72.4" y="1827.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="75.4" y="1838.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="72.8" y="1827.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="75.8" y="1838.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.10%)</title><rect x="73.2" y="1859.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="76.2" y="1870.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.10%)</title><rect x="73.2" y="1843.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="76.2" y="1854.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.07%)</title><rect x="73.6" y="1827.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="76.6" y="1838.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="73.6" y="1811.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="76.6" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="73.6" y="1795.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="76.6" y="1806.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="74.0" y="1811.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="77.0" y="1822.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.03%)</title><rect x="74.4" y="1875.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="77.4" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$143/1532545.run (5 samples, 0.17%)</title><rect x="74.8" y="1875.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.17%)</title><rect x="74.8" y="1859.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.8" y="1870.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (4 samples, 0.14%)</title><rect x="75.2" y="1843.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.2" y="1854.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (4 samples, 0.14%)</title><rect x="75.2" y="1827.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.2" y="1838.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.14%)</title><rect x="75.2" y="1811.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.2" y="1822.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.14%)</title><rect x="75.2" y="1795.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.2" y="1806.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.14%)</title><rect x="75.2" y="1779.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="76.0" y="1763.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="79.0" y="1774.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="76.0" y="1747.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="79.0" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="76.4" y="1763.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.4" y="1774.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="76.4" y="1747.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.10%)</title><rect x="76.8" y="1907.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="76.8" y="1891.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.8" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.03%)</title><rect x="77.2" y="1891.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.2" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.03%)</title><rect x="77.6" y="1891.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.6" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.07%)</title><rect x="78.0" y="1923.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.0" y="1934.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="78.0" y="1907.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="81.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="78.4" y="1907.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.4" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.03%)</title><rect x="78.4" y="1891.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (38 samples, 1.29%)</title><rect x="78.8" y="2019.0" width="15.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.8" y="2030.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (9 samples, 0.31%)</title><rect x="78.8" y="2003.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.8" y="2014.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.27%)</title><rect x="79.2" y="1987.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.2" y="1998.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="80.8" y="1971.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="83.8" y="1982.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="81.2" y="1971.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.2" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.07%)</title><rect x="81.6" y="1971.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.6" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (29 samples, 0.98%)</title><rect x="82.4" y="2003.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.4" y="2014.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (29 samples, 0.98%)</title><rect x="82.4" y="1987.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.4" y="1998.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="82.4" y="1971.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="85.4" y="1982.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="82.8" y="1971.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="85.8" y="1982.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="82.8" y="1955.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="85.8" y="1966.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="82.8" y="1939.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="85.8" y="1950.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="82.8" y="1923.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="85.8" y="1934.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (27 samples, 0.92%)</title><rect x="83.2" y="1971.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.92%)</title><rect x="83.2" y="1955.0" width="10.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="86.2" y="1966.0"></text>
</g>
<g>
<title>__GI_write (27 samples, 0.92%)</title><rect x="83.2" y="1939.0" width="10.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="86.2" y="1950.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.92%)</title><rect x="83.2" y="1923.0" width="10.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="86.2" y="1934.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="83.2" y="1907.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.2" y="1918.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.88%)</title><rect x="83.6" y="1907.0" width="10.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.6" y="1918.0"></text>
</g>
<g>
<title>__x64_sys_write (24 samples, 0.81%)</title><rect x="84.4" y="1891.0" width="9.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="87.4" y="1902.0"></text>
</g>
<g>
<title>ksys_write (24 samples, 0.81%)</title><rect x="84.4" y="1875.0" width="9.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.4" y="1886.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.14%)</title><rect x="84.4" y="1859.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="87.4" y="1870.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.14%)</title><rect x="84.4" y="1843.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="87.4" y="1854.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.14%)</title><rect x="84.4" y="1827.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.4" y="1838.0"></text>
</g>
<g>
<title>vfs_write (20 samples, 0.68%)</title><rect x="86.0" y="1859.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="89.0" y="1870.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 0.64%)</title><rect x="86.4" y="1843.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.4" y="1854.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.64%)</title><rect x="86.4" y="1827.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.4" y="1838.0"></text>
</g>
<g>
<title>pipe_write (18 samples, 0.61%)</title><rect x="86.8" y="1811.0" width="7.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.8" y="1822.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.51%)</title><rect x="87.6" y="1795.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.6" y="1806.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.47%)</title><rect x="87.6" y="1779.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.6" y="1790.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="87.6" y="1763.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="90.6" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.44%)</title><rect x="88.0" y="1763.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="91.0" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="93.2" y="1779.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.2" y="1790.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="93.6" y="1795.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.6" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (6 samples, 0.20%)</title><rect x="94.0" y="2019.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.0" y="2030.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.07%)</title><rect x="94.0" y="2003.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.0" y="2014.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.07%)</title><rect x="94.0" y="1987.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.0" y="1998.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.07%)</title><rect x="94.0" y="1971.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.0" y="1982.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.07%)</title><rect x="94.0" y="1955.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.0" y="1966.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.07%)</title><rect x="94.0" y="1939.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.07%)</title><rect x="94.0" y="1923.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (4 samples, 0.14%)</title><rect x="94.8" y="2003.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (4 samples, 0.14%)</title><rect x="94.8" y="1987.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.8" y="1998.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.10%)</title><rect x="95.2" y="1971.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.2" y="1982.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.07%)</title><rect x="95.2" y="1955.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.2" y="1966.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.07%)</title><rect x="95.2" y="1939.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.07%)</title><rect x="95.2" y="1923.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.2" y="1934.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.03%)</title><rect x="96.0" y="1955.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.03%)</title><rect x="96.0" y="1939.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.0" y="1950.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="96.0" y="1923.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="99.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (9 samples, 0.31%)</title><rect x="96.4" y="2019.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.4" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (9 samples, 0.31%)</title><rect x="96.4" y="2003.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.4" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (7 samples, 0.24%)</title><rect x="97.2" y="1987.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.2" y="1998.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.10%)</title><rect x="97.2" y="1971.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.2" y="1982.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.10%)</title><rect x="97.2" y="1955.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.2" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.07%)</title><rect x="97.6" y="1939.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.6" y="1950.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.07%)</title><rect x="97.6" y="1923.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="100.6" y="1934.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.07%)</title><rect x="97.6" y="1907.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="100.6" y="1918.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="97.6" y="1891.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="100.6" y="1902.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="98.0" y="1891.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="101.0" y="1902.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="98.0" y="1875.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="101.0" y="1886.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.14%)</title><rect x="98.4" y="1971.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.4" y="1982.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (4 samples, 0.14%)</title><rect x="98.4" y="1955.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.4" y="1966.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.14%)</title><rect x="98.4" y="1939.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.4" y="1950.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.14%)</title><rect x="98.4" y="1923.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.4" y="1934.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (4 samples, 0.14%)</title><rect x="98.4" y="1907.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.4" y="1918.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.14%)</title><rect x="98.4" y="1891.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.4" y="1902.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.14%)</title><rect x="98.4" y="1875.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.4" y="1886.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.14%)</title><rect x="98.4" y="1859.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.4" y="1870.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="100.0" y="2083.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="103.0" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (32 samples, 1.09%)</title><rect x="100.4" y="2115.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.4" y="2126.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="102.4" y="2099.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="105.4" y="2110.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="102.4" y="2083.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="105.4" y="2094.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="102.4" y="2067.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="105.4" y="2078.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="102.4" y="2051.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.4" y="2062.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="102.4" y="2035.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.4" y="2046.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="102.4" y="2019.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="105.4" y="2030.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="102.4" y="2003.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.4" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (26 samples, 0.88%)</title><rect x="102.8" y="2099.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.8" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (19 samples, 0.64%)</title><rect x="103.2" y="2083.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.2" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.03%)</title><rect x="103.2" y="2067.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.2" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 0.58%)</title><rect x="103.6" y="2067.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.58%)</title><rect x="103.6" y="2051.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.6" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.17%)</title><rect x="104.0" y="2035.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="107.0" y="2046.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="104.0" y="2019.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.0" y="2030.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="104.4" y="2019.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="107.4" y="2030.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="104.8" y="2019.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="107.8" y="2030.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.07%)</title><rect x="105.2" y="2019.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="108.2" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="105.6" y="2003.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="108.6" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="105.6" y="1987.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="108.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.37%)</title><rect x="106.0" y="2035.0" width="4.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="109.0" y="2046.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="106.0" y="2019.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="109.0" y="2030.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (10 samples, 0.34%)</title><rect x="106.4" y="2019.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="109.4" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.27%)</title><rect x="107.2" y="2003.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="110.2" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.27%)</title><rect x="107.2" y="1987.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="110.2" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.14%)</title><rect x="108.8" y="1971.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="111.8" y="1982.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.14%)</title><rect x="108.8" y="1955.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.8" y="1966.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.14%)</title><rect x="108.8" y="1939.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.8" y="1950.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.10%)</title><rect x="108.8" y="1923.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="111.8" y="1934.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.10%)</title><rect x="108.8" y="1907.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.8" y="1918.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.10%)</title><rect x="108.8" y="1891.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="111.8" y="1902.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.10%)</title><rect x="108.8" y="1875.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.8" y="1886.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="109.6" y="1859.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="112.6" y="1870.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="109.6" y="1843.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="112.6" y="1854.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="109.6" y="1827.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="112.6" y="1838.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="109.6" y="1811.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="112.6" y="1822.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="109.6" y="1795.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="112.6" y="1806.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="109.6" y="1779.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="112.6" y="1790.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="109.6" y="1763.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="112.6" y="1774.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="110.0" y="1923.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="110.4" y="2067.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.4" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="110.8" y="2083.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.8" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="110.8" y="2067.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.8" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="110.8" y="2051.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.8" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="110.8" y="2035.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.8" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="110.8" y="2019.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.8" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.17%)</title><rect x="111.2" y="2083.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.2" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.17%)</title><rect x="111.2" y="2067.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.2" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="112.8" y="2051.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.8" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="112.8" y="2035.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.8" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="112.8" y="2019.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.8" y="2030.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="112.8" y="2003.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="115.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$190/680108995.run (286 samples, 9.70%)</title><rect x="113.2" y="2115.0" width="114.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.2" y="2126.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (285 samples, 9.66%)</title><rect x="113.6" y="2099.0" width="114.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.6" y="2110.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (283 samples, 9.60%)</title><rect x="114.4" y="2083.0" width="113.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.4" y="2094.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (276 samples, 9.36%)</title><rect x="117.2" y="2067.0" width="110.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.2" y="2078.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (276 samples, 9.36%)</title><rect x="117.2" y="2051.0" width="110.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.2" y="2062.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (274 samples, 9.29%)</title><rect x="118.0" y="2035.0" width="109.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.0" y="2046.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (273 samples, 9.26%)</title><rect x="118.0" y="2019.0" width="109.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.0" y="2030.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (273 samples, 9.26%)</title><rect x="118.0" y="2003.0" width="109.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.0" y="2014.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (273 samples, 9.26%)</title><rect x="118.0" y="1987.0" width="109.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.0" y="1998.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="118.0" y="1971.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.0" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="118.0" y="1955.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.0" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (272 samples, 9.22%)</title><rect x="118.4" y="1971.0" width="108.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.4" y="1982.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (1 samples, 0.03%)</title><rect x="118.4" y="1955.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (271 samples, 9.19%)</title><rect x="118.8" y="1955.0" width="108.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="1966.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (42 samples, 1.42%)</title><rect x="119.6" y="1939.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (34 samples, 1.15%)</title><rect x="120.0" y="1923.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.0" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.10%)</title><rect x="120.0" y="1907.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.0" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.10%)</title><rect x="120.0" y="1891.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.0" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.10%)</title><rect x="120.0" y="1875.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.10%)</title><rect x="120.0" y="1859.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.0" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.07%)</title><rect x="120.4" y="1843.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.4" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (31 samples, 1.05%)</title><rect x="121.2" y="1907.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.2" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (27 samples, 0.92%)</title><rect x="121.2" y="1891.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.2" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.92%)</title><rect x="121.2" y="1875.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.2" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.20%)</title><rect x="122.8" y="1859.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.07%)</title><rect x="122.8" y="1843.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.8" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.07%)</title><rect x="122.8" y="1827.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.8" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.07%)</title><rect x="122.8" y="1811.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.8" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.07%)</title><rect x="122.8" y="1795.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.8" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.07%)</title><rect x="122.8" y="1779.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.8" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="122.8" y="1763.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.8" y="1774.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="122.8" y="1747.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="125.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/659260885.apply (1 samples, 0.03%)</title><rect x="123.2" y="1747.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/659260885.apply (4 samples, 0.14%)</title><rect x="123.6" y="1843.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.6" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.14%)</title><rect x="123.6" y="1827.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.14%)</title><rect x="123.6" y="1811.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.6" y="1822.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.07%)</title><rect x="123.6" y="1795.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.6" y="1806.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.07%)</title><rect x="123.6" y="1779.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.07%)</title><rect x="124.4" y="1795.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.4" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.07%)</title><rect x="124.4" y="1779.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.4" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.07%)</title><rect x="124.4" y="1763.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.4" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (15 samples, 0.51%)</title><rect x="125.2" y="1859.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.51%)</title><rect x="125.2" y="1843.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.2" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.07%)</title><rect x="125.2" y="1827.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.2" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$182/511051166.apply (2 samples, 0.07%)</title><rect x="125.2" y="1811.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$182/511051166.apply (13 samples, 0.44%)</title><rect x="126.0" y="1827.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (13 samples, 0.44%)</title><rect x="126.0" y="1811.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (13 samples, 0.44%)</title><rect x="126.0" y="1795.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/912003413.apply (13 samples, 0.44%)</title><rect x="126.0" y="1779.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (13 samples, 0.44%)</title><rect x="126.0" y="1763.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.0" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="126.0" y="1747.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.0" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="126.0" y="1731.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.0" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="126.0" y="1715.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (12 samples, 0.41%)</title><rect x="126.4" y="1747.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.4" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (8 samples, 0.27%)</title><rect x="126.4" y="1731.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.4" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (8 samples, 0.27%)</title><rect x="126.4" y="1715.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.4" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (7 samples, 0.24%)</title><rect x="126.4" y="1699.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.4" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$194/1211410956.accept (1 samples, 0.03%)</title><rect x="126.4" y="1683.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.4" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.03%)</title><rect x="126.4" y="1667.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.4" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.03%)</title><rect x="126.4" y="1651.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.4" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.03%)</title><rect x="126.4" y="1635.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.4" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.screenExecutor (1 samples, 0.03%)</title><rect x="126.4" y="1619.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.4" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1497088112.accept (6 samples, 0.20%)</title><rect x="126.8" y="1683.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (6 samples, 0.20%)</title><rect x="126.8" y="1667.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (6 samples, 0.20%)</title><rect x="126.8" y="1651.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.8" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (6 samples, 0.20%)</title><rect x="126.8" y="1635.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.8" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (6 samples, 0.20%)</title><rect x="126.8" y="1619.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.8" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.17%)</title><rect x="127.2" y="1603.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.17%)</title><rect x="127.2" y="1587.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="127.2" y="1571.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.2" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="127.2" y="1555.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="130.2" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="127.2" y="1539.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.2" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="127.2" y="1523.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.2" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="127.2" y="1507.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.2" y="1518.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="127.2" y="1491.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="130.2" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.14%)</title><rect x="127.6" y="1571.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.6" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.14%)</title><rect x="127.6" y="1555.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.6" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.14%)</title><rect x="127.6" y="1539.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.6" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.03%)</title><rect x="127.6" y="1523.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1 samples, 0.03%)</title><rect x="128.0" y="1523.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.0" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="128.0" y="1507.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.0" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="128.0" y="1491.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="128.0" y="1475.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="128.0" y="1459.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.0" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.07%)</title><rect x="128.4" y="1523.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.4" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.07%)</title><rect x="128.4" y="1507.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.07%)</title><rect x="128.4" y="1491.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.07%)</title><rect x="128.4" y="1475.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.07%)</title><rect x="128.4" y="1459.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.4" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="128.8" y="1443.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.8" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="129.2" y="1699.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.2" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="129.2" y="1683.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (4 samples, 0.14%)</title><rect x="129.6" y="1731.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.6" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (1 samples, 0.03%)</title><rect x="129.6" y="1715.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.6" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.03%)</title><rect x="129.6" y="1699.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.6" y="1710.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="129.6" y="1683.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="132.6" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="129.6" y="1667.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="132.6" y="1678.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="129.6" y="1651.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="132.6" y="1662.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="129.6" y="1635.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="132.6" y="1646.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="129.6" y="1619.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="132.6" y="1630.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.03%)</title><rect x="129.6" y="1603.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="132.6" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (3 samples, 0.10%)</title><rect x="130.0" y="1715.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1 samples, 0.03%)</title><rect x="130.0" y="1699.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="130.0" y="1683.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (1 samples, 0.03%)</title><rect x="130.0" y="1667.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.0" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="130.0" y="1651.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.0" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="130.0" y="1635.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.0" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2 samples, 0.07%)</title><rect x="130.4" y="1699.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.4" y="1710.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="130.8" y="1683.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$193/1129848231.get (1 samples, 0.03%)</title><rect x="131.2" y="1859.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.2" y="1870.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="131.6" y="1859.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="134.6" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.14%)</title><rect x="132.0" y="1891.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.0" y="1902.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="132.0" y="1875.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="135.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.03%)</title><rect x="133.2" y="1875.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.2" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (4 samples, 0.14%)</title><rect x="133.6" y="1923.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.03%)</title><rect x="134.8" y="1907.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.8" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.03%)</title><rect x="134.8" y="1891.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.8" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.10%)</title><rect x="135.2" y="1923.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.2" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$200/1774030016.run (1 samples, 0.03%)</title><rect x="136.0" y="1907.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.0" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.03%)</title><rect x="136.0" y="1891.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.03%)</title><rect x="136.0" y="1875.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.03%)</title><rect x="136.0" y="1859.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.0" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="136.0" y="1843.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.0" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.07%)</title><rect x="136.4" y="1939.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.4" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.07%)</title><rect x="136.4" y="1923.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.07%)</title><rect x="136.4" y="1907.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (225 samples, 7.63%)</title><rect x="137.2" y="1939.0" width="90.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.2" y="1950.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (225 samples, 7.63%)</title><rect x="137.2" y="1923.0" width="90.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.2" y="1934.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (225 samples, 7.63%)</title><rect x="137.2" y="1907.0" width="90.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.2" y="1918.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1 samples, 0.03%)</title><rect x="137.2" y="1891.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.2" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (224 samples, 7.60%)</title><rect x="137.6" y="1891.0" width="89.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.6" y="1902.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$199/1203950755.run (4 samples, 0.14%)</title><rect x="138.4" y="1875.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.4" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4 samples, 0.14%)</title><rect x="138.4" y="1859.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.4" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.07%)</title><rect x="138.8" y="1843.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.8" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2 samples, 0.07%)</title><rect x="138.8" y="1827.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.07%)</title><rect x="138.8" y="1811.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.8" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.03%)</title><rect x="139.6" y="1843.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.6" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (218 samples, 7.39%)</title><rect x="140.0" y="1875.0" width="87.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.0" y="1886.0">jdk/intern..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (216 samples, 7.32%)</title><rect x="140.0" y="1859.0" width="86.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.0" y="1870.0">java/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (216 samples, 7.32%)</title><rect x="140.0" y="1843.0" width="86.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.0" y="1854.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (216 samples, 7.32%)</title><rect x="140.0" y="1827.0" width="86.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.0" y="1838.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (216 samples, 7.32%)</title><rect x="140.0" y="1811.0" width="86.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.0" y="1822.0">sun/nio/ch..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.07%)</title><rect x="140.0" y="1795.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.0" y="1806.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.07%)</title><rect x="140.0" y="1779.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.0" y="1790.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.07%)</title><rect x="140.0" y="1763.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.0" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.03%)</title><rect x="140.4" y="1747.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.4" y="1758.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (214 samples, 7.26%)</title><rect x="140.8" y="1795.0" width="85.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.8" y="1806.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (205 samples, 6.95%)</title><rect x="144.4" y="1779.0" width="82.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.4" y="1790.0">sun/nio/c..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.03%)</title><rect x="146.0" y="1763.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="149.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (197 samples, 6.68%)</title><rect x="146.4" y="1763.0" width="78.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="149.4" y="1774.0">[unknown]</text>
</g>
<g>
<title>[unknown] (197 samples, 6.68%)</title><rect x="146.4" y="1747.0" width="78.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="149.4" y="1758.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (197 samples, 6.68%)</title><rect x="146.4" y="1731.0" width="78.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="149.4" y="1742.0">__GI___wr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (191 samples, 6.48%)</title><rect x="148.8" y="1715.0" width="76.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="151.8" y="1726.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (191 samples, 6.48%)</title><rect x="148.8" y="1699.0" width="76.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="151.8" y="1710.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_writev (183 samples, 6.21%)</title><rect x="151.6" y="1683.0" width="73.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="154.6" y="1694.0">__x64_sy..</text>
</g>
<g>
<title>do_writev (181 samples, 6.14%)</title><rect x="151.6" y="1667.0" width="72.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="154.6" y="1678.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.10%)</title><rect x="152.0" y="1651.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="155.0" y="1662.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="152.0" y="1635.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="155.0" y="1646.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.10%)</title><rect x="152.0" y="1619.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="155.0" y="1630.0"></text>
</g>
<g>
<title>import_iovec (1 samples, 0.03%)</title><rect x="153.2" y="1651.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="156.2" y="1662.0"></text>
</g>
<g>
<title>vfs_writev (176 samples, 5.97%)</title><rect x="153.6" y="1651.0" width="70.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="156.6" y="1662.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (166 samples, 5.63%)</title><rect x="154.4" y="1635.0" width="66.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="157.4" y="1646.0">do_iter..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="154.4" y="1619.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="157.4" y="1630.0"></text>
</g>
<g>
<title>do_iter_readv_writev (162 samples, 5.49%)</title><rect x="154.8" y="1619.0" width="64.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="157.8" y="1630.0">do_iter..</text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.03%)</title><rect x="155.2" y="1603.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="158.2" y="1614.0"></text>
</g>
<g>
<title>sock_write_iter (160 samples, 5.43%)</title><rect x="155.6" y="1603.0" width="64.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="158.6" y="1614.0">sock_wr..</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="156.4" y="1587.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="159.4" y="1598.0"></text>
</g>
<g>
<title>sock_sendmsg (157 samples, 5.32%)</title><rect x="156.8" y="1587.0" width="62.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="159.8" y="1598.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (154 samples, 5.22%)</title><rect x="157.2" y="1571.0" width="61.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="160.2" y="1582.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (154 samples, 5.22%)</title><rect x="157.2" y="1555.0" width="61.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="160.2" y="1566.0">tcp_se..</text>
</g>
<g>
<title>release_sock (3 samples, 0.10%)</title><rect x="158.1" y="1539.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="161.1" y="1550.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.03%)</title><rect x="158.5" y="1523.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="161.5" y="1534.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="158.5" y="1507.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="161.5" y="1518.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="158.5" y="1491.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="161.5" y="1502.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="158.5" y="1475.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="161.5" y="1486.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="158.9" y="1523.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="161.9" y="1534.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="158.9" y="1507.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.9" y="1518.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="159.3" y="1539.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="162.3" y="1550.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (147 samples, 4.98%)</title><rect x="159.7" y="1539.0" width="58.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.7" y="1550.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="163.3" y="1523.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="166.3" y="1534.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="163.3" y="1507.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="166.3" y="1518.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="163.7" y="1523.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="166.7" y="1534.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="163.7" y="1507.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="166.7" y="1518.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="164.1" y="1523.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="167.1" y="1534.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="164.1" y="1507.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.1" y="1518.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="164.1" y="1491.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="167.1" y="1502.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="164.1" y="1475.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="167.1" y="1486.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="164.1" y="1459.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.1" y="1470.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="164.1" y="1443.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="167.1" y="1454.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="164.1" y="1427.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="167.1" y="1438.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="164.5" y="1523.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="167.5" y="1534.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.27%)</title><rect x="164.9" y="1523.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="167.9" y="1534.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.24%)</title><rect x="164.9" y="1507.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.9" y="1518.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.10%)</title><rect x="165.7" y="1491.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.7" y="1502.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.10%)</title><rect x="165.7" y="1475.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="168.7" y="1486.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="166.1" y="1459.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="169.1" y="1470.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="166.5" y="1459.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="169.5" y="1470.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.07%)</title><rect x="166.9" y="1491.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="169.9" y="1502.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="167.3" y="1475.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.3" y="1486.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="167.3" y="1459.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="170.3" y="1470.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="167.3" y="1443.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="170.3" y="1454.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="167.3" y="1427.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.3" y="1438.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="167.3" y="1411.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.3" y="1422.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="167.3" y="1395.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.3" y="1406.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="167.3" y="1379.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="170.3" y="1390.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.03%)</title><rect x="167.3" y="1363.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="170.3" y="1374.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.03%)</title><rect x="167.3" y="1347.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.3" y="1358.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="167.3" y="1331.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="170.3" y="1342.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="167.3" y="1315.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="170.3" y="1326.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="167.7" y="1507.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="170.7" y="1518.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.03%)</title><rect x="168.1" y="1523.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="171.1" y="1534.0"></text>
</g>
<g>
<title>tcp_push (120 samples, 4.07%)</title><rect x="168.5" y="1523.0" width="48.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="171.5" y="1534.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (120 samples, 4.07%)</title><rect x="168.5" y="1507.0" width="48.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="171.5" y="1518.0">__tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="168.5" y="1491.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="171.5" y="1502.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="168.9" y="1491.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="171.9" y="1502.0"></text>
</g>
<g>
<title>tcp_write_xmit (118 samples, 4.00%)</title><rect x="169.3" y="1491.0" width="47.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="172.3" y="1502.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (103 samples, 3.49%)</title><rect x="170.1" y="1475.0" width="41.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="173.1" y="1486.0">__t..</text>
</g>
<g>
<title>__skb_clone (3 samples, 0.10%)</title><rect x="173.3" y="1459.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="176.3" y="1470.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="174.5" y="1459.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="177.5" y="1470.0"></text>
</g>
<g>
<title>ip_queue_xmit (87 samples, 2.95%)</title><rect x="174.9" y="1459.0" width="34.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="177.9" y="1470.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (87 samples, 2.95%)</title><rect x="174.9" y="1443.0" width="34.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="177.9" y="1454.0">__..</text>
</g>
<g>
<title>ip_local_out (86 samples, 2.92%)</title><rect x="175.3" y="1427.0" width="34.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="178.3" y="1438.0">ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="175.7" y="1411.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="178.7" y="1422.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="175.7" y="1395.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="178.7" y="1406.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="176.1" y="1411.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="179.1" y="1422.0"></text>
</g>
<g>
<title>ip_output (83 samples, 2.81%)</title><rect x="176.5" y="1411.0" width="33.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="179.5" y="1422.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="176.9" y="1395.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.9" y="1406.0"></text>
</g>
<g>
<title>ip_finish_output (81 samples, 2.75%)</title><rect x="177.3" y="1395.0" width="32.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="180.3" y="1406.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.10%)</title><rect x="178.1" y="1379.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="181.1" y="1390.0"></text>
</g>
<g>
<title>ip_finish_output2 (76 samples, 2.58%)</title><rect x="179.3" y="1379.0" width="30.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="182.3" y="1390.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (60 samples, 2.03%)</title><rect x="180.5" y="1363.0" width="24.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.5" y="1374.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (60 samples, 2.03%)</title><rect x="180.5" y="1347.0" width="24.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="183.5" y="1358.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (59 samples, 2.00%)</title><rect x="180.9" y="1331.0" width="23.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="183.9" y="1342.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (59 samples, 2.00%)</title><rect x="180.9" y="1315.0" width="23.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="183.9" y="1326.0">_..</text>
</g>
<g>
<title>net_rx_action (56 samples, 1.90%)</title><rect x="181.7" y="1299.0" width="22.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="184.7" y="1310.0">n..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="181.7" y="1283.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="184.7" y="1294.0"></text>
</g>
<g>
<title>process_backlog (55 samples, 1.87%)</title><rect x="182.1" y="1283.0" width="22.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="185.1" y="1294.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (50 samples, 1.70%)</title><rect x="184.1" y="1267.0" width="20.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.1" y="1278.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (50 samples, 1.70%)</title><rect x="184.1" y="1251.0" width="20.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.1" y="1262.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="184.1" y="1235.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.1" y="1246.0"></text>
</g>
<g>
<title>ip_rcv (46 samples, 1.56%)</title><rect x="184.5" y="1235.0" width="18.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.5" y="1246.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.03%)</title><rect x="184.5" y="1219.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="187.5" y="1230.0"></text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 1.53%)</title><rect x="184.9" y="1219.0" width="18.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="187.9" y="1230.0"></text>
</g>
<g>
<title>ip_local_deliver (45 samples, 1.53%)</title><rect x="184.9" y="1203.0" width="18.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.9" y="1214.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 1.53%)</title><rect x="184.9" y="1187.0" width="18.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.9" y="1198.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (44 samples, 1.49%)</title><rect x="184.9" y="1171.0" width="17.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="187.9" y="1182.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="184.9" y="1155.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="187.9" y="1166.0"></text>
</g>
<g>
<title>tcp_v4_rcv (43 samples, 1.46%)</title><rect x="185.3" y="1155.0" width="17.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="188.3" y="1166.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.27%)</title><rect x="187.3" y="1139.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="190.3" y="1150.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.07%)</title><rect x="189.7" y="1123.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="192.7" y="1134.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 0.98%)</title><rect x="190.5" y="1139.0" width="11.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.5" y="1150.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.07%)</title><rect x="190.9" y="1123.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.9" y="1134.0"></text>
</g>
<g>
<title>tcp_rcv_established (26 samples, 0.88%)</title><rect x="191.7" y="1123.0" width="10.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="194.7" y="1134.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.17%)</title><rect x="192.9" y="1107.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.9" y="1118.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.03%)</title><rect x="193.3" y="1091.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.3" y="1102.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (1 samples, 0.03%)</title><rect x="193.3" y="1075.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.3" y="1086.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="193.3" y="1059.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.3" y="1070.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.10%)</title><rect x="193.7" y="1091.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.7" y="1102.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="194.1" y="1075.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="197.1" y="1086.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="194.5" y="1059.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="197.5" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="194.5" y="1043.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="197.5" y="1054.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.51%)</title><rect x="194.9" y="1107.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.9" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.44%)</title><rect x="195.7" y="1091.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="198.7" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.41%)</title><rect x="195.7" y="1075.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="198.7" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="195.7" y="1059.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.7" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.37%)</title><rect x="196.1" y="1059.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="199.1" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="200.5" y="1075.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="203.5" y="1086.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="200.9" y="1107.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="203.9" y="1118.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="201.3" y="1107.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="204.3" y="1118.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="201.7" y="1107.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="204.7" y="1118.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="202.1" y="1139.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.1" y="1150.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="202.5" y="1171.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="205.5" y="1182.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (3 samples, 0.10%)</title><rect x="202.9" y="1235.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="205.9" y="1246.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="204.1" y="1299.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="207.1" y="1310.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="204.1" y="1283.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="207.1" y="1294.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="204.1" y="1267.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="207.1" y="1278.0"></text>
</g>
<g>
<title>dev_queue_xmit (13 samples, 0.44%)</title><rect x="204.5" y="1363.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="207.5" y="1374.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.37%)</title><rect x="204.5" y="1347.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="207.5" y="1358.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.20%)</title><rect x="205.7" y="1331.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="208.7" y="1342.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.14%)</title><rect x="206.1" y="1315.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="209.1" y="1326.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.07%)</title><rect x="206.9" y="1299.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="209.9" y="1310.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.07%)</title><rect x="206.9" y="1283.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="209.9" y="1294.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="206.9" y="1267.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="209.9" y="1278.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="207.7" y="1315.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="210.7" y="1326.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="208.1" y="1331.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.1" y="1342.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="208.5" y="1331.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="211.5" y="1342.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="208.9" y="1347.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="211.9" y="1358.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.03%)</title><rect x="209.3" y="1347.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="212.3" y="1358.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.07%)</title><rect x="209.7" y="1459.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="212.7" y="1470.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="209.7" y="1443.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="212.7" y="1454.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="210.1" y="1443.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="213.1" y="1454.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="210.1" y="1427.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="213.1" y="1438.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="210.5" y="1459.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="213.5" y="1470.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="210.9" y="1459.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="213.9" y="1470.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="210.9" y="1443.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="213.9" y="1454.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="210.9" y="1427.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="213.9" y="1438.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="210.9" y="1411.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="213.9" y="1422.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="210.9" y="1395.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="213.9" y="1406.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="210.9" y="1379.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.9" y="1390.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="210.9" y="1363.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="213.9" y="1374.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="210.9" y="1347.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.9" y="1358.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="211.3" y="1475.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.3" y="1486.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.07%)</title><rect x="211.7" y="1475.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.7" y="1486.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="212.1" y="1459.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="215.1" y="1470.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="212.5" y="1475.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="215.5" y="1486.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="212.9" y="1475.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="215.9" y="1486.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.20%)</title><rect x="213.3" y="1475.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="216.3" y="1486.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.17%)</title><rect x="213.7" y="1459.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.7" y="1470.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="213.7" y="1443.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="216.7" y="1454.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.14%)</title><rect x="214.1" y="1443.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="217.1" y="1454.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="214.5" y="1427.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.5" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="214.5" y="1411.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="217.5" y="1422.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.07%)</title><rect x="215.7" y="1475.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="218.7" y="1486.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="215.7" y="1459.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="218.7" y="1470.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.07%)</title><rect x="215.7" y="1443.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="218.7" y="1454.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="215.7" y="1427.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="218.7" y="1438.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.17%)</title><rect x="216.5" y="1523.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="219.5" y="1534.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.17%)</title><rect x="216.5" y="1507.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="219.5" y="1518.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="218.5" y="1539.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="221.5" y="1550.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.07%)</title><rect x="218.9" y="1571.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="221.9" y="1582.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="218.9" y="1555.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="221.9" y="1566.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="219.3" y="1555.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="222.3" y="1566.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="219.3" y="1539.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="222.3" y="1550.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="219.7" y="1619.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="222.7" y="1630.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="220.1" y="1619.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="223.1" y="1630.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="220.5" y="1603.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="223.5" y="1614.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="220.5" y="1587.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="223.5" y="1598.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="220.5" y="1571.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="223.5" y="1582.0"></text>
</g>
<g>
<title>import_iovec (7 samples, 0.24%)</title><rect x="220.9" y="1635.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="223.9" y="1646.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (7 samples, 0.24%)</title><rect x="220.9" y="1619.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="223.9" y="1630.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.14%)</title><rect x="220.9" y="1603.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="223.9" y="1614.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.10%)</title><rect x="221.3" y="1587.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.3" y="1598.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.10%)</title><rect x="222.5" y="1603.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="225.5" y="1614.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="223.7" y="1635.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="226.7" y="1646.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="224.1" y="1667.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="227.1" y="1678.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.03%)</title><rect x="224.5" y="1667.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="227.5" y="1678.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="224.9" y="1683.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="227.9" y="1694.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="224.9" y="1667.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="227.9" y="1678.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="224.9" y="1651.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="227.9" y="1662.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="224.9" y="1635.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="227.9" y="1646.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="224.9" y="1619.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="227.9" y="1630.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="224.9" y="1603.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="227.9" y="1614.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="224.9" y="1587.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="227.9" y="1598.0"></text>
</g>
<g>
<title>__GI___writev (1 samples, 0.03%)</title><rect x="225.3" y="1763.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="228.3" y="1774.0"></text>
</g>
<g>
<title>convertLongReturnVal (1 samples, 0.03%)</title><rect x="225.7" y="1763.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="228.7" y="1774.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="226.1" y="1763.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="229.1" y="1774.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.07%)</title><rect x="226.5" y="1859.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.5" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="227.3" y="2019.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.3" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (765 samples, 25.94%)</title><rect x="227.7" y="2115.0" width="306.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.7" y="2126.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (761 samples, 25.81%)</title><rect x="229.3" y="2099.0" width="304.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.3" y="2110.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (163 samples, 5.53%)</title><rect x="229.7" y="2083.0" width="65.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.7" y="2094.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (163 samples, 5.53%)</title><rect x="229.7" y="2067.0" width="65.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.7" y="2078.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (162 samples, 5.49%)</title><rect x="230.1" y="2051.0" width="64.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.1" y="2062.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.remove (1 samples, 0.03%)</title><rect x="230.1" y="2035.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.1" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (30 samples, 1.02%)</title><rect x="230.5" y="2035.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.5" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (30 samples, 1.02%)</title><rect x="230.5" y="2019.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.5" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (30 samples, 1.02%)</title><rect x="230.5" y="2003.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.5" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (30 samples, 1.02%)</title><rect x="230.5" y="1987.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (28 samples, 0.95%)</title><rect x="231.3" y="1971.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.3" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (27 samples, 0.92%)</title><rect x="231.7" y="1955.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.7" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (27 samples, 0.92%)</title><rect x="231.7" y="1939.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.7" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (26 samples, 0.88%)</title><rect x="232.1" y="1923.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.07%)</title><rect x="232.1" y="1907.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.1" y="1918.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="232.5" y="1891.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="235.5" y="1902.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="232.5" y="1875.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="235.5" y="1886.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.03%)</title><rect x="232.5" y="1859.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="235.5" y="1870.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="232.5" y="1843.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="235.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.81%)</title><rect x="232.9" y="1907.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.9" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (24 samples, 0.81%)</title><rect x="232.9" y="1891.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.9" y="1902.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (21 samples, 0.71%)</title><rect x="234.1" y="1875.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.71%)</title><rect x="234.1" y="1859.0" width="8.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="237.1" y="1870.0"></text>
</g>
<g>
<title>__GI_write (21 samples, 0.71%)</title><rect x="234.1" y="1843.0" width="8.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="237.1" y="1854.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.68%)</title><rect x="234.5" y="1827.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="237.5" y="1838.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.68%)</title><rect x="234.5" y="1811.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.5" y="1822.0"></text>
</g>
<g>
<title>__x64_sys_write (18 samples, 0.61%)</title><rect x="235.3" y="1795.0" width="7.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="238.3" y="1806.0"></text>
</g>
<g>
<title>ksys_write (18 samples, 0.61%)</title><rect x="235.3" y="1779.0" width="7.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.3" y="1790.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="235.3" y="1763.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.3" y="1774.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="235.3" y="1747.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="238.3" y="1758.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.07%)</title><rect x="235.3" y="1731.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="238.3" y="1742.0"></text>
</g>
<g>
<title>vfs_write (16 samples, 0.54%)</title><rect x="236.1" y="1763.0" width="6.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="239.1" y="1774.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="236.1" y="1747.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="239.1" y="1758.0"></text>
</g>
<g>
<title>__vfs_write (13 samples, 0.44%)</title><rect x="236.5" y="1747.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="239.5" y="1758.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.44%)</title><rect x="236.5" y="1731.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="239.5" y="1742.0"></text>
</g>
<g>
<title>pipe_write (13 samples, 0.44%)</title><rect x="236.5" y="1715.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="239.5" y="1726.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.41%)</title><rect x="236.5" y="1699.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="239.5" y="1710.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.41%)</title><rect x="236.5" y="1683.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.5" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.41%)</title><rect x="236.5" y="1667.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="239.5" y="1678.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="241.3" y="1699.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="244.3" y="1710.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="241.7" y="1747.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="244.7" y="1758.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="242.1" y="1731.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="245.1" y="1742.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="242.1" y="1715.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="245.1" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="242.5" y="2035.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.5" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.03%)</title><rect x="242.5" y="2019.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.5" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="242.5" y="2003.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.5" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="242.5" y="1987.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.5" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.03%)</title><rect x="242.9" y="2035.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.9" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.03%)</title><rect x="242.9" y="2019.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.9" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="242.9" y="2003.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.9" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (129 samples, 4.37%)</title><rect x="243.3" y="2035.0" width="51.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.3" y="2046.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (129 samples, 4.37%)</title><rect x="243.3" y="2019.0" width="51.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.3" y="2030.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (129 samples, 4.37%)</title><rect x="243.3" y="2003.0" width="51.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.3" y="2014.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (129 samples, 4.37%)</title><rect x="243.3" y="1987.0" width="51.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.3" y="1998.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (80 samples, 2.71%)</title><rect x="244.1" y="1971.0" width="32.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.1" y="1982.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (80 samples, 2.71%)</title><rect x="244.1" y="1955.0" width="32.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.1" y="1966.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (80 samples, 2.71%)</title><rect x="244.1" y="1939.0" width="32.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.1" y="1950.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (80 samples, 2.71%)</title><rect x="244.1" y="1923.0" width="32.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.1" y="1934.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (80 samples, 2.71%)</title><rect x="244.1" y="1907.0" width="32.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.1" y="1918.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (78 samples, 2.64%)</title><rect x="244.1" y="1891.0" width="31.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.1" y="1902.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (78 samples, 2.64%)</title><rect x="244.1" y="1875.0" width="31.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.1" y="1886.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.31%)</title><rect x="244.1" y="1859.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.1" y="1870.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="247.3" y="1843.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.3" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="247.3" y="1827.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="250.3" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="247.3" y="1811.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.3" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="247.3" y="1795.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="250.3" y="1806.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="247.3" y="1779.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.3" y="1790.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="247.3" y="1763.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="250.3" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="247.3" y="1747.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (69 samples, 2.34%)</title><rect x="247.7" y="1859.0" width="27.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.7" y="1870.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (69 samples, 2.34%)</title><rect x="247.7" y="1843.0" width="27.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.7" y="1854.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (58 samples, 1.97%)</title><rect x="247.7" y="1827.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.7" y="1838.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.14%)</title><rect x="247.7" y="1811.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.14%)</title><rect x="247.7" y="1795.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.7" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.14%)</title><rect x="247.7" y="1779.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.7" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.14%)</title><rect x="247.7" y="1763.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.7" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.14%)</title><rect x="247.7" y="1747.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.7" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.14%)</title><rect x="247.7" y="1731.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.7" y="1742.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$45/836514715.apply (1 samples, 0.03%)</title><rect x="248.1" y="1715.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.1" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/1729175167.apply (1 samples, 0.03%)</title><rect x="248.5" y="1715.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.5" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/1949660912.apply (1 samples, 0.03%)</title><rect x="248.9" y="1715.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.9" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/1729175167.apply (44 samples, 1.49%)</title><rect x="249.3" y="1811.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (44 samples, 1.49%)</title><rect x="249.3" y="1795.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.3" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="249.3" y="1779.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.3" y="1790.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="249.3" y="1763.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/1020364899.get$Lambda (2 samples, 0.07%)</title><rect x="249.3" y="1747.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.3" y="1758.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="249.3" y="1731.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="252.3" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/1020364899.&lt;init&gt; (1 samples, 0.03%)</title><rect x="249.7" y="1731.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.7" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.03%)</title><rect x="249.7" y="1715.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.7" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.03%)</title><rect x="250.1" y="1779.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (41 samples, 1.39%)</title><rect x="250.5" y="1779.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.5" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="250.5" y="1763.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.5" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="250.5" y="1747.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.5" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (40 samples, 1.36%)</title><rect x="250.9" y="1763.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.9" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (39 samples, 1.32%)</title><rect x="250.9" y="1747.0" width="15.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.9" y="1758.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (13 samples, 0.44%)</title><rect x="251.3" y="1731.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.3" y="1742.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.10%)</title><rect x="251.3" y="1715.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.3" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="252.1" y="1699.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.1" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="252.1" y="1683.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.1" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="252.1" y="1667.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.1" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="252.1" y="1651.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.1" y="1662.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="252.1" y="1635.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.1" y="1646.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="252.1" y="1619.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.1" y="1630.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="252.1" y="1603.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.1" y="1614.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="252.5" y="1715.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.5" y="1726.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="252.5" y="1699.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.5" y="1710.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="252.5" y="1683.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="255.5" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="252.5" y="1667.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="255.5" y="1678.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="252.5" y="1651.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="255.5" y="1662.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="252.5" y="1635.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="255.5" y="1646.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="252.5" y="1619.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="255.5" y="1630.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="252.5" y="1603.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="255.5" y="1614.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="252.5" y="1587.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="255.5" y="1598.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.03%)</title><rect x="252.5" y="1571.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="255.5" y="1582.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (9 samples, 0.31%)</title><rect x="252.9" y="1715.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.9" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="253.3" y="1699.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.3" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.24%)</title><rect x="253.7" y="1699.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.7" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.20%)</title><rect x="253.7" y="1683.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.7" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.17%)</title><rect x="254.1" y="1667.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.1" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.14%)</title><rect x="254.1" y="1651.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.1" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.14%)</title><rect x="254.1" y="1635.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.1" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.07%)</title><rect x="254.5" y="1619.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.5" y="1630.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.07%)</title><rect x="254.5" y="1603.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.5" y="1614.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.get (2 samples, 0.07%)</title><rect x="254.5" y="1587.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.5" y="1598.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (2 samples, 0.07%)</title><rect x="254.5" y="1571.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.5" y="1582.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="255.3" y="1619.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.3" y="1630.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="255.3" y="1603.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="258.3" y="1614.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="255.3" y="1587.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="258.3" y="1598.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="255.3" y="1571.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="258.3" y="1582.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="255.3" y="1555.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="258.3" y="1566.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="255.3" y="1539.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="258.3" y="1550.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="255.3" y="1523.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="258.3" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="255.3" y="1507.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="258.3" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="255.7" y="1651.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.7" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.03%)</title><rect x="255.7" y="1635.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.7" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="255.7" y="1619.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.7" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="255.7" y="1603.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.7" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.03%)</title><rect x="256.1" y="1683.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.1" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.03%)</title><rect x="256.1" y="1667.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.1" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="256.1" y="1651.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.1" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="256.1" y="1635.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.1" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="256.5" y="1731.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.5" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.81%)</title><rect x="256.9" y="1731.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.9" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.07%)</title><rect x="256.9" y="1715.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.9" y="1726.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="256.9" y="1699.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="259.9" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$211/1190816396.run (1 samples, 0.03%)</title><rect x="257.3" y="1699.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="260.3" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$211/1190816396.run (22 samples, 0.75%)</title><rect x="257.7" y="1715.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (22 samples, 0.75%)</title><rect x="257.7" y="1699.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.7" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.20%)</title><rect x="258.1" y="1683.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.1" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.07%)</title><rect x="258.1" y="1667.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.1" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.07%)</title><rect x="258.1" y="1651.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.1" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.14%)</title><rect x="258.9" y="1667.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.9" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (1 samples, 0.03%)</title><rect x="260.5" y="1683.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (12 samples, 0.41%)</title><rect x="260.9" y="1683.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.9" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (12 samples, 0.41%)</title><rect x="260.9" y="1667.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.9" y="1678.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (5 samples, 0.17%)</title><rect x="260.9" y="1651.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.9" y="1662.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (5 samples, 0.17%)</title><rect x="260.9" y="1635.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (5 samples, 0.17%)</title><rect x="260.9" y="1619.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.9" y="1630.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.10%)</title><rect x="260.9" y="1603.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="263.9" y="1614.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.07%)</title><rect x="261.3" y="1587.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="264.3" y="1598.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="261.7" y="1571.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="264.7" y="1582.0"></text>
</g>
<g>
<title>JVM_IHashCode@plt (1 samples, 0.03%)</title><rect x="262.1" y="1603.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="265.1" y="1614.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (1 samples, 0.03%)</title><rect x="262.5" y="1603.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="265.5" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.24%)</title><rect x="262.9" y="1651.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.9" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.24%)</title><rect x="262.9" y="1635.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.9" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.24%)</title><rect x="262.9" y="1619.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.9" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.24%)</title><rect x="262.9" y="1603.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.9" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.24%)</title><rect x="262.9" y="1587.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.9" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (7 samples, 0.24%)</title><rect x="262.9" y="1571.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.9" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (7 samples, 0.24%)</title><rect x="262.9" y="1555.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.9" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.07%)</title><rect x="265.7" y="1683.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (2 samples, 0.07%)</title><rect x="265.7" y="1667.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="266.5" y="1747.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.5" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.03%)</title><rect x="266.5" y="1731.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.5" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/1949660912.apply (10 samples, 0.34%)</title><rect x="266.9" y="1811.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.9" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (10 samples, 0.34%)</title><rect x="266.9" y="1795.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (7 samples, 0.24%)</title><rect x="267.7" y="1779.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="270.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (4 samples, 0.14%)</title><rect x="268.9" y="1763.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.9" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.10%)</title><rect x="269.3" y="1747.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.3" y="1758.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.10%)</title><rect x="269.3" y="1731.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.3" y="1742.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.07%)</title><rect x="269.7" y="1715.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.7" y="1726.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.07%)</title><rect x="269.7" y="1699.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.7" y="1710.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.07%)</title><rect x="269.7" y="1683.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="272.7" y="1694.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="269.7" y="1667.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="272.7" y="1678.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="270.1" y="1667.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="273.1" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="270.5" y="1779.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.5" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="270.5" y="1763.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.5" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="270.5" y="1747.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.5" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.31%)</title><rect x="270.9" y="1827.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="270.9" y="1811.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.9" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="270.9" y="1795.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.9" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.03%)</title><rect x="270.9" y="1779.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.9" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8 samples, 0.27%)</title><rect x="271.3" y="1811.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.3" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="271.3" y="1795.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1522648861.apply (1 samples, 0.03%)</title><rect x="271.3" y="1779.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1522648861.apply (7 samples, 0.24%)</title><rect x="271.7" y="1795.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7 samples, 0.24%)</title><rect x="271.7" y="1779.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.7" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (6 samples, 0.20%)</title><rect x="271.7" y="1763.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (6 samples, 0.20%)</title><rect x="271.7" y="1747.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.7" y="1758.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (5 samples, 0.17%)</title><rect x="272.1" y="1731.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.1" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (5 samples, 0.17%)</title><rect x="272.1" y="1715.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.1" y="1726.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.17%)</title><rect x="272.1" y="1699.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.1" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.03%)</title><rect x="273.7" y="1683.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.7" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.03%)</title><rect x="274.1" y="1763.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.1" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="274.5" y="1827.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.5" y="1838.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="274.9" y="1827.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="277.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.07%)</title><rect x="275.3" y="1891.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.3" y="1902.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="275.3" y="1875.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="278.3" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (47 samples, 1.59%)</title><rect x="276.1" y="1971.0" width="18.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (3 samples, 0.10%)</title><rect x="280.9" y="1955.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.9" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.07%)</title><rect x="282.1" y="1955.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.1" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.07%)</title><rect x="282.1" y="1939.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.07%)</title><rect x="282.1" y="1923.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.1" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (4 samples, 0.14%)</title><rect x="282.9" y="1955.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.9" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.14%)</title><rect x="282.9" y="1939.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.14%)</title><rect x="282.9" y="1923.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.9" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (14 samples, 0.47%)</title><rect x="284.5" y="1955.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.5" y="1966.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.47%)</title><rect x="284.5" y="1939.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.5" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.44%)</title><rect x="284.9" y="1923.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.9" y="1934.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="285.7" y="1907.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="288.7" y="1918.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (8 samples, 0.27%)</title><rect x="286.9" y="1907.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.9" y="1918.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (8 samples, 0.27%)</title><rect x="286.9" y="1891.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.9" y="1902.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.27%)</title><rect x="286.9" y="1875.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.9" y="1886.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="286.9" y="1859.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.9" y="1870.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.20%)</title><rect x="287.3" y="1859.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.3" y="1870.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.10%)</title><rect x="288.1" y="1843.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="291.1" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/330084561.test (1 samples, 0.03%)</title><rect x="289.3" y="1843.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.3" y="1854.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="289.7" y="1859.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.7" y="1870.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="289.7" y="1843.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.7" y="1854.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="289.7" y="1827.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.7" y="1838.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="289.7" y="1811.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (12 samples, 0.41%)</title><rect x="290.1" y="1955.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.1" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (10 samples, 0.34%)</title><rect x="290.9" y="1939.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (5 samples, 0.17%)</title><rect x="291.7" y="1923.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="292.9" y="1907.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.9" y="1918.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="293.3" y="1907.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="296.3" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="293.7" y="1923.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="293.7" y="1907.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.7" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="294.1" y="1923.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.1" y="1934.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.03%)</title><rect x="294.5" y="1923.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (597 samples, 20.24%)</title><rect x="294.9" y="2083.0" width="238.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.9" y="2094.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (595 samples, 20.18%)</title><rect x="295.7" y="2067.0" width="238.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.7" y="2078.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (594 samples, 20.14%)</title><rect x="295.7" y="2051.0" width="237.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.7" y="2062.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (594 samples, 20.14%)</title><rect x="295.7" y="2035.0" width="237.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.7" y="2046.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (594 samples, 20.14%)</title><rect x="295.7" y="2019.0" width="237.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.7" y="2030.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (590 samples, 20.01%)</title><rect x="295.7" y="2003.0" width="236.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.7" y="2014.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (588 samples, 19.94%)</title><rect x="296.1" y="1987.0" width="235.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.1" y="1998.0">jdk/internal/net/http/Http1Resp..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (588 samples, 19.94%)</title><rect x="296.1" y="1971.0" width="235.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.1" y="1982.0">jdk/internal/net/http/ResponseC..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/1706852430.run (90 samples, 3.05%)</title><rect x="296.1" y="1955.0" width="36.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.1" y="1966.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (90 samples, 3.05%)</title><rect x="296.1" y="1939.0" width="36.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.1" y="1950.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (90 samples, 3.05%)</title><rect x="296.1" y="1923.0" width="36.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.1" y="1934.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.27%)</title><rect x="296.1" y="1907.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.1" y="1918.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.17%)</title><rect x="296.1" y="1891.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.1" y="1902.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.17%)</title><rect x="296.1" y="1875.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.1" y="1886.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.17%)</title><rect x="296.1" y="1859.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.1" y="1870.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.17%)</title><rect x="296.1" y="1843.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.1" y="1854.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.17%)</title><rect x="296.1" y="1827.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.1" y="1838.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="297.7" y="1811.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.7" y="1822.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="297.7" y="1795.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.7" y="1806.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="297.7" y="1779.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.7" y="1790.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.10%)</title><rect x="298.1" y="1891.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.1" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.10%)</title><rect x="298.1" y="1875.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.1" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.03%)</title><rect x="298.1" y="1859.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.1" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (1 samples, 0.03%)</title><rect x="298.1" y="1843.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.1" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.07%)</title><rect x="298.5" y="1859.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.5" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="298.5" y="1843.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.5" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="298.5" y="1827.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.5" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.03%)</title><rect x="298.9" y="1843.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.9" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.03%)</title><rect x="298.9" y="1827.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.9" y="1838.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.03%)</title><rect x="298.9" y="1811.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.9" y="1822.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="298.9" y="1795.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="301.9" y="1806.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="298.9" y="1779.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="301.9" y="1790.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="298.9" y="1763.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="301.9" y="1774.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="298.9" y="1747.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="301.9" y="1758.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="298.9" y="1731.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="301.9" y="1742.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="298.9" y="1715.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="301.9" y="1726.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="298.9" y="1699.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="301.9" y="1710.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="298.9" y="1683.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="301.9" y="1694.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="298.9" y="1667.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="301.9" y="1678.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.03%)</title><rect x="298.9" y="1651.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="301.9" y="1662.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.03%)</title><rect x="298.9" y="1635.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="301.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (81 samples, 2.75%)</title><rect x="299.3" y="1907.0" width="32.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.3" y="1918.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.20%)</title><rect x="299.3" y="1891.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.3" y="1902.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.20%)</title><rect x="299.3" y="1875.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.3" y="1886.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.03%)</title><rect x="300.5" y="1859.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.5" y="1870.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.03%)</title><rect x="300.5" y="1843.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="300.5" y="1827.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.5" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.07%)</title><rect x="300.9" y="1859.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.9" y="1870.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.07%)</title><rect x="300.9" y="1843.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="303.9" y="1854.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.07%)</title><rect x="300.9" y="1827.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="303.9" y="1838.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="300.9" y="1811.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="303.9" y="1822.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="300.9" y="1795.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="303.9" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (75 samples, 2.54%)</title><rect x="301.7" y="1891.0" width="30.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.7" y="1902.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (24 samples, 0.81%)</title><rect x="301.7" y="1875.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.7" y="1886.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (2 samples, 0.07%)</title><rect x="309.7" y="1859.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.7" y="1870.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.03%)</title><rect x="310.1" y="1843.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.1" y="1854.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.03%)</title><rect x="310.1" y="1827.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.1" y="1838.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.03%)</title><rect x="310.1" y="1811.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.1" y="1822.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.03%)</title><rect x="310.1" y="1795.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.1" y="1806.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.07%)</title><rect x="310.5" y="1859.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.5" y="1870.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="310.9" y="1843.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.9" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="310.9" y="1827.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.9" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="310.9" y="1811.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="313.9" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="310.9" y="1795.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.9" y="1806.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="310.9" y="1779.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="313.9" y="1790.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="310.9" y="1763.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="313.9" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="310.9" y="1747.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.9" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (6 samples, 0.20%)</title><rect x="311.3" y="1875.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.3" y="1886.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.14%)</title><rect x="311.3" y="1859.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.3" y="1870.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.07%)</title><rect x="311.3" y="1843.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.03%)</title><rect x="311.3" y="1827.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.3" y="1838.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.03%)</title><rect x="311.3" y="1811.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.3" y="1822.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.03%)</title><rect x="311.3" y="1795.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.3" y="1806.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.03%)</title><rect x="311.3" y="1779.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.03%)</title><rect x="311.7" y="1827.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.7" y="1838.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="312.1" y="1843.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.1" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.03%)</title><rect x="312.5" y="1827.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.5" y="1838.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.03%)</title><rect x="312.5" y="1811.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.5" y="1822.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.03%)</title><rect x="312.5" y="1795.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.5" y="1806.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.03%)</title><rect x="312.5" y="1779.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.5" y="1790.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (1 samples, 0.03%)</title><rect x="312.5" y="1763.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.5" y="1774.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (1 samples, 0.03%)</title><rect x="312.5" y="1747.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="315.5" y="1758.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="312.5" y="1731.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="315.5" y="1742.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="312.5" y="1715.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="315.5" y="1726.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="312.5" y="1699.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="315.5" y="1710.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="312.5" y="1683.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="315.5" y="1694.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="312.5" y="1667.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="315.5" y="1678.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="312.5" y="1651.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="315.5" y="1662.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="312.5" y="1635.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="315.5" y="1646.0"></text>
</g>
<g>
<title>profile_handoff_task (1 samples, 0.03%)</title><rect x="312.5" y="1619.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="315.5" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (2 samples, 0.07%)</title><rect x="312.9" y="1859.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (2 samples, 0.07%)</title><rect x="312.9" y="1843.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="315.9" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (45 samples, 1.53%)</title><rect x="313.7" y="1875.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.7" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (45 samples, 1.53%)</title><rect x="313.7" y="1859.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.7" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2 samples, 0.07%)</title><rect x="313.7" y="1843.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.7" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.07%)</title><rect x="313.7" y="1827.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.7" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.07%)</title><rect x="313.7" y="1811.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.7" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.07%)</title><rect x="313.7" y="1795.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.7" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.07%)</title><rect x="313.7" y="1779.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.7" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="314.1" y="1763.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (43 samples, 1.46%)</title><rect x="314.5" y="1843.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (43 samples, 1.46%)</title><rect x="314.5" y="1827.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.5" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (38 samples, 1.29%)</title><rect x="316.1" y="1811.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (38 samples, 1.29%)</title><rect x="316.1" y="1795.0" width="15.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (38 samples, 1.29%)</title><rect x="316.1" y="1779.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.1" y="1790.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (38 samples, 1.29%)</title><rect x="316.1" y="1763.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.1" y="1774.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (35 samples, 1.19%)</title><rect x="317.3" y="1747.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.3" y="1758.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.03%)</title><rect x="317.7" y="1731.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="320.7" y="1742.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.09%)</title><rect x="318.1" y="1731.0" width="12.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="321.1" y="1742.0"></text>
</g>
<g>
<title>__GI_write (32 samples, 1.09%)</title><rect x="318.1" y="1715.0" width="12.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="321.1" y="1726.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 1.05%)</title><rect x="318.5" y="1699.0" width="12.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="321.5" y="1710.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="318.5" y="1683.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="321.5" y="1694.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 1.02%)</title><rect x="318.9" y="1683.0" width="12.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="321.9" y="1694.0"></text>
</g>
<g>
<title>__x64_sys_write (28 samples, 0.95%)</title><rect x="319.7" y="1667.0" width="11.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.7" y="1678.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="319.7" y="1651.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="322.7" y="1662.0"></text>
</g>
<g>
<title>ksys_write (27 samples, 0.92%)</title><rect x="320.1" y="1651.0" width="10.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.1" y="1662.0"></text>
</g>
<g>
<title>vfs_write (27 samples, 0.92%)</title><rect x="320.1" y="1635.0" width="10.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="323.1" y="1646.0"></text>
</g>
<g>
<title>__vfs_write (24 samples, 0.81%)</title><rect x="320.1" y="1619.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.1" y="1630.0"></text>
</g>
<g>
<title>new_sync_write (23 samples, 0.78%)</title><rect x="320.1" y="1603.0" width="9.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="323.1" y="1614.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="320.5" y="1587.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="323.5" y="1598.0"></text>
</g>
<g>
<title>pipe_write (21 samples, 0.71%)</title><rect x="320.9" y="1587.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="323.9" y="1598.0"></text>
</g>
<g>
<title>__wake_up_sync_key (18 samples, 0.61%)</title><rect x="321.3" y="1571.0" width="7.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="324.3" y="1582.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.61%)</title><rect x="321.3" y="1555.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="324.3" y="1566.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.61%)</title><rect x="321.3" y="1539.0" width="7.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="324.3" y="1550.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.07%)</title><rect x="328.5" y="1571.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.5" y="1582.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="328.9" y="1555.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="331.9" y="1566.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.03%)</title><rect x="329.3" y="1603.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="332.3" y="1614.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.03%)</title><rect x="329.7" y="1619.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="332.7" y="1630.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.07%)</title><rect x="330.1" y="1619.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="333.1" y="1630.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="330.1" y="1603.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.1" y="1614.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="330.5" y="1603.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="333.5" y="1614.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="330.5" y="1587.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="333.5" y="1598.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.03%)</title><rect x="330.5" y="1571.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.5" y="1582.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.03%)</title><rect x="330.9" y="1731.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="333.9" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="331.3" y="1811.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.03%)</title><rect x="331.7" y="1907.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.7" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.03%)</title><rect x="331.7" y="1891.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.7" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/1630268396.accept (6 samples, 0.20%)</title><rect x="332.1" y="1955.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.1" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (6 samples, 0.20%)</title><rect x="332.1" y="1939.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="335.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (6 samples, 0.20%)</title><rect x="332.1" y="1923.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.1" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.20%)</title><rect x="332.1" y="1907.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.1" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.20%)</title><rect x="332.1" y="1891.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.1" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.17%)</title><rect x="332.5" y="1875.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.5" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="332.9" y="1859.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="332.9" y="1843.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.9" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="332.9" y="1827.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.9" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.10%)</title><rect x="333.3" y="1859.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.3" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$216/1099447619.accept (3 samples, 0.10%)</title><rect x="333.3" y="1843.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.3" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.10%)</title><rect x="333.3" y="1827.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.3" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.10%)</title><rect x="333.3" y="1811.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.3" y="1822.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (3 samples, 0.10%)</title><rect x="333.3" y="1795.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.3" y="1806.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (3 samples, 0.10%)</title><rect x="333.3" y="1779.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (490 samples, 16.62%)</title><rect x="334.5" y="1955.0" width="196.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.5" y="1966.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (490 samples, 16.62%)</title><rect x="334.5" y="1939.0" width="196.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.5" y="1950.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (490 samples, 16.62%)</title><rect x="334.5" y="1923.0" width="196.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.5" y="1934.0">jdk/internal/net/http/Resp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (490 samples, 16.62%)</title><rect x="334.5" y="1907.0" width="196.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.5" y="1918.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (490 samples, 16.62%)</title><rect x="334.5" y="1891.0" width="196.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.5" y="1902.0">java/util/concurrent/Compl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (488 samples, 16.55%)</title><rect x="334.9" y="1875.0" width="195.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.9" y="1886.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="335.3" y="1859.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.3" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="335.3" y="1843.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.3" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="335.3" y="1827.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.3" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (486 samples, 16.48%)</title><rect x="335.7" y="1859.0" width="194.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.7" y="1870.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.14%)</title><rect x="335.7" y="1843.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.7" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (4 samples, 0.14%)</title><rect x="335.7" y="1827.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.7" y="1838.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (4 samples, 0.14%)</title><rect x="335.7" y="1811.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.7" y="1822.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (4 samples, 0.14%)</title><rect x="335.7" y="1795.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.7" y="1806.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (4 samples, 0.14%)</title><rect x="335.7" y="1779.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.7" y="1790.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (4 samples, 0.14%)</title><rect x="335.7" y="1763.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.7" y="1774.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (4 samples, 0.14%)</title><rect x="335.7" y="1747.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.7" y="1758.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (4 samples, 0.14%)</title><rect x="335.7" y="1731.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.7" y="1742.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="336.1" y="1715.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="339.1" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/691981639.accept (2 samples, 0.07%)</title><rect x="336.5" y="1715.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.5" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/691981639.accept (482 samples, 16.34%)</title><rect x="337.3" y="1843.0" width="192.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.3" y="1854.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (480 samples, 16.28%)</title><rect x="338.1" y="1827.0" width="192.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.1" y="1838.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (480 samples, 16.28%)</title><rect x="338.1" y="1811.0" width="192.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.1" y="1822.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (480 samples, 16.28%)</title><rect x="338.1" y="1795.0" width="192.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.1" y="1806.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.10%)</title><rect x="338.1" y="1779.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.1" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.10%)</title><rect x="338.1" y="1763.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.1" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.07%)</title><rect x="339.3" y="1779.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.3" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (474 samples, 16.07%)</title><rect x="340.1" y="1779.0" width="189.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.1" y="1790.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="340.1" y="1763.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.1" y="1774.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="340.1" y="1747.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.1" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="340.1" y="1731.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.1" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (473 samples, 16.04%)</title><rect x="340.5" y="1763.0" width="189.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.5" y="1774.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (470 samples, 15.94%)</title><rect x="340.5" y="1747.0" width="188.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.5" y="1758.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (467 samples, 15.84%)</title><rect x="341.3" y="1731.0" width="186.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.3" y="1742.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="341.3" y="1715.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="344.3" y="1726.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="341.3" y="1699.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="344.3" y="1710.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="341.3" y="1683.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="344.3" y="1694.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="341.3" y="1667.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="344.3" y="1678.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="341.3" y="1651.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="344.3" y="1662.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (74 samples, 2.51%)</title><rect x="341.7" y="1715.0" width="29.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.7" y="1726.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (74 samples, 2.51%)</title><rect x="341.7" y="1699.0" width="29.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.7" y="1710.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (74 samples, 2.51%)</title><rect x="341.7" y="1683.0" width="29.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.7" y="1694.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.nextThreadID (1 samples, 0.03%)</title><rect x="341.7" y="1667.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.7" y="1678.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority (4 samples, 0.14%)</title><rect x="342.1" y="1667.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.1" y="1678.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (3 samples, 0.10%)</title><rect x="342.5" y="1651.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.5" y="1662.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (2 samples, 0.07%)</title><rect x="342.5" y="1635.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="345.5" y="1646.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="342.9" y="1619.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="345.9" y="1630.0"></text>
</g>
<g>
<title>java_lang_Thread::set_priority(oopDesc*, ThreadPriority) (1 samples, 0.03%)</title><rect x="343.3" y="1635.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="346.3" y="1646.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (69 samples, 2.34%)</title><rect x="343.7" y="1667.0" width="27.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.7" y="1678.0">j..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (8 samples, 0.27%)</title><rect x="343.7" y="1651.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.7" y="1662.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.calculateFields (1 samples, 0.03%)</title><rect x="344.5" y="1635.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.5" y="1646.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (5 samples, 0.17%)</title><rect x="344.9" y="1635.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.9" y="1646.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="344.9" y="1619.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="347.9" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$219/764460352.accept (1 samples, 0.03%)</title><rect x="345.3" y="1619.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/762511240.accept (1 samples, 0.03%)</title><rect x="345.7" y="1619.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/1447974469.accept (2 samples, 0.07%)</title><rect x="346.1" y="1619.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.1" y="1630.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (61 samples, 2.07%)</title><rect x="346.9" y="1651.0" width="24.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.9" y="1662.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (2 samples, 0.07%)</title><rect x="346.9" y="1635.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="349.9" y="1646.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="347.7" y="1635.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="350.7" y="1646.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="348.1" y="1635.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="351.1" y="1646.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (2 samples, 0.07%)</title><rect x="348.5" y="1635.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="351.5" y="1646.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (50 samples, 1.70%)</title><rect x="349.3" y="1635.0" width="20.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="352.3" y="1646.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.10%)</title><rect x="359.3" y="1619.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="362.3" y="1630.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.10%)</title><rect x="360.5" y="1619.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="363.5" y="1630.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="360.5" y="1603.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="363.5" y="1614.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="360.5" y="1587.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="363.5" y="1598.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="360.9" y="1603.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="363.9" y="1614.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="360.9" y="1587.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="363.9" y="1598.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="361.3" y="1603.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="364.3" y="1614.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="361.7" y="1619.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="364.7" y="1630.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="362.1" y="1619.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="365.1" y="1630.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="362.5" y="1619.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="365.5" y="1630.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (12 samples, 0.41%)</title><rect x="362.9" y="1619.0" width="4.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="365.9" y="1630.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="363.7" y="1603.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="366.7" y="1614.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (9 samples, 0.31%)</title><rect x="364.1" y="1603.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="367.1" y="1614.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.24%)</title><rect x="364.1" y="1587.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="367.1" y="1598.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (6 samples, 0.20%)</title><rect x="364.5" y="1571.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="367.5" y="1582.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.07%)</title><rect x="366.9" y="1587.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="369.9" y="1598.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (1 samples, 0.03%)</title><rect x="367.7" y="1619.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="370.7" y="1630.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.03%)</title><rect x="367.7" y="1603.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="370.7" y="1614.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.10%)</title><rect x="368.1" y="1619.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="371.1" y="1630.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="368.1" y="1603.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="371.1" y="1614.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="368.1" y="1587.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="371.1" y="1598.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.07%)</title><rect x="368.5" y="1603.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="371.5" y="1614.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (2 samples, 0.07%)</title><rect x="369.3" y="1635.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="372.3" y="1646.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.03%)</title><rect x="370.1" y="1635.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="373.1" y="1646.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="370.5" y="1635.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="373.5" y="1646.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (1 samples, 0.03%)</title><rect x="370.9" y="1635.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="373.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/Thread.start (392 samples, 13.29%)</title><rect x="371.3" y="1715.0" width="156.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.3" y="1726.0">java/lang/Thread.start</text>
</g>
<g>
<title>java/lang/Thread.start0 (392 samples, 13.29%)</title><rect x="371.3" y="1699.0" width="156.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.3" y="1710.0">java/lang/Thread.sta..</text>
</g>
<g>
<title>JVM_StartThread (274 samples, 9.29%)</title><rect x="371.3" y="1683.0" width="109.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="374.3" y="1694.0">JVM_StartThread</text>
</g>
<g>
<title>G1BarrierSet::on_thread_attach(JavaThread*) (1 samples, 0.03%)</title><rect x="371.7" y="1667.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="374.7" y="1678.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="372.1" y="1667.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="375.1" y="1678.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (25 samples, 0.85%)</title><rect x="372.5" y="1667.0" width="10.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="375.5" y="1678.0"></text>
</g>
<g>
<title>HandleMark::operator new(unsigned long) (1 samples, 0.03%)</title><rect x="372.5" y="1651.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="375.5" y="1662.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (1 samples, 0.03%)</title><rect x="372.9" y="1651.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="375.9" y="1662.0"></text>
</g>
<g>
<title>sem_init@@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="372.9" y="1635.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="375.9" y="1646.0"></text>
</g>
<g>
<title>JavaThread::initialize() (7 samples, 0.24%)</title><rect x="373.3" y="1651.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="376.3" y="1662.0"></text>
</g>
<g>
<title>Parker::Allocate(JavaThread*) (4 samples, 0.14%)</title><rect x="374.5" y="1635.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="377.5" y="1646.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="375.7" y="1619.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="378.7" y="1630.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (1 samples, 0.03%)</title><rect x="376.1" y="1651.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="379.1" y="1662.0"></text>
</g>
<g>
<title>Thread::Thread() (15 samples, 0.51%)</title><rect x="376.5" y="1651.0" width="6.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="379.5" y="1662.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (5 samples, 0.17%)</title><rect x="377.3" y="1635.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="380.3" y="1646.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (4 samples, 0.14%)</title><rect x="377.3" y="1619.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="380.3" y="1630.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="378.5" y="1603.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="381.5" y="1614.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.03%)</title><rect x="378.9" y="1619.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="381.9" y="1630.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned long) (3 samples, 0.10%)</title><rect x="379.3" y="1635.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="382.3" y="1646.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="380.1" y="1619.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="383.1" y="1630.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (1 samples, 0.03%)</title><rect x="380.5" y="1635.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="383.5" y="1646.0"></text>
</g>
<g>
<title>JfrTraceId::assign_thread_id() (1 samples, 0.03%)</title><rect x="380.5" y="1619.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="383.5" y="1630.0"></text>
</g>
<g>
<title>ThreadHeapSampler::pick_next_sample(unsigned long) (2 samples, 0.07%)</title><rect x="380.9" y="1635.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="383.9" y="1646.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (1 samples, 0.03%)</title><rect x="381.7" y="1635.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="384.7" y="1646.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="382.1" y="1635.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="385.1" y="1646.0"></text>
</g>
<g>
<title>JavaThread::initialize() (1 samples, 0.03%)</title><rect x="382.5" y="1667.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="385.5" y="1678.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (55 samples, 1.87%)</title><rect x="382.9" y="1667.0" width="22.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="385.9" y="1678.0">J..</text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (2 samples, 0.07%)</title><rect x="382.9" y="1651.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="385.9" y="1662.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.03%)</title><rect x="383.3" y="1635.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="386.3" y="1646.0"></text>
</g>
<g>
<title>ThreadService::add_thread(JavaThread*, bool) (4 samples, 0.14%)</title><rect x="383.7" y="1651.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="386.7" y="1662.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (43 samples, 1.46%)</title><rect x="385.3" y="1651.0" width="17.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="388.3" y="1662.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (37 samples, 1.25%)</title><rect x="385.3" y="1635.0" width="14.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="388.3" y="1646.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (1 samples, 0.03%)</title><rect x="399.7" y="1619.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="402.7" y="1630.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (1 samples, 0.03%)</title><rect x="399.7" y="1603.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="402.7" y="1614.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.07%)</title><rect x="400.1" y="1635.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="403.1" y="1646.0"></text>
</g>
<g>
<title>__memset_erms (3 samples, 0.10%)</title><rect x="400.9" y="1635.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="403.9" y="1646.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="402.1" y="1635.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="405.1" y="1646.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (5 samples, 0.17%)</title><rect x="402.5" y="1651.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="405.5" y="1662.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.03%)</title><rect x="404.5" y="1651.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="407.5" y="1662.0"></text>
</g>
<g>
<title>Monitor::lock() (5 samples, 0.17%)</title><rect x="404.9" y="1667.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="407.9" y="1678.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.10%)</title><rect x="405.3" y="1651.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="408.3" y="1662.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="405.3" y="1635.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="408.3" y="1646.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="406.1" y="1635.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="409.1" y="1646.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="406.1" y="1619.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.1" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="406.1" y="1603.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="409.1" y="1614.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="406.1" y="1587.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="409.1" y="1598.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="406.1" y="1571.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="409.1" y="1582.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="406.1" y="1555.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="409.1" y="1566.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="406.5" y="1651.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="409.5" y="1662.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="406.9" y="1667.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="409.9" y="1678.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (1 samples, 0.03%)</title><rect x="407.3" y="1667.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="410.3" y="1678.0"></text>
</g>
<g>
<title>Thread::start(Thread*) (2 samples, 0.07%)</title><rect x="407.7" y="1667.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="410.7" y="1678.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="408.1" y="1651.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="411.1" y="1662.0"></text>
</g>
<g>
<title>__getpagesize (2 samples, 0.07%)</title><rect x="408.5" y="1667.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="411.5" y="1678.0"></text>
</g>
<g>
<title>__getpagesize@plt (1 samples, 0.03%)</title><rect x="409.3" y="1667.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="412.3" y="1678.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="409.7" y="1667.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="412.7" y="1678.0"></text>
</g>
<g>
<title>__pthread_attr_destroy (1 samples, 0.03%)</title><rect x="410.1" y="1667.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="413.1" y="1678.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="410.5" y="1667.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="413.5" y="1678.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (169 samples, 5.73%)</title><rect x="410.9" y="1667.0" width="67.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="413.9" y="1678.0">os::cre..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (15 samples, 0.51%)</title><rect x="413.3" y="1651.0" width="6.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="416.3" y="1662.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (15 samples, 0.51%)</title><rect x="413.3" y="1635.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="416.3" y="1646.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.27%)</title><rect x="414.1" y="1619.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="417.1" y="1630.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.20%)</title><rect x="414.9" y="1603.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="417.9" y="1614.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.20%)</title><rect x="414.9" y="1587.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="417.9" y="1598.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="416.9" y="1571.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="419.9" y="1582.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="417.3" y="1619.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="420.3" y="1630.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="417.7" y="1619.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="420.7" y="1630.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.10%)</title><rect x="418.1" y="1619.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="421.1" y="1630.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="418.9" y="1603.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.9" y="1614.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="418.9" y="1587.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="421.9" y="1598.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="418.9" y="1571.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.9" y="1582.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (1 samples, 0.03%)</title><rect x="419.3" y="1651.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="422.3" y="1662.0"></text>
</g>
<g>
<title>__clone (124 samples, 4.20%)</title><rect x="419.7" y="1651.0" width="49.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="422.7" y="1662.0">__clone</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (123 samples, 4.17%)</title><rect x="419.7" y="1635.0" width="49.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="422.7" y="1646.0">entry..</text>
</g>
<g>
<title>__x64_sys_clone (2 samples, 0.07%)</title><rect x="419.7" y="1619.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="422.7" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (121 samples, 4.10%)</title><rect x="420.5" y="1619.0" width="48.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.5" y="1630.0">do_s..</text>
</g>
<g>
<title>__x64_sys_clone (116 samples, 3.93%)</title><rect x="422.5" y="1603.0" width="46.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="425.5" y="1614.0">__x6..</text>
</g>
<g>
<title>_do_fork (115 samples, 3.90%)</title><rect x="422.5" y="1587.0" width="46.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="425.5" y="1598.0">_do_..</text>
</g>
<g>
<title>acct_clear_integrals (1 samples, 0.03%)</title><rect x="422.5" y="1571.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="425.5" y="1582.0"></text>
</g>
<g>
<title>clear_ti_thread_flag (1 samples, 0.03%)</title><rect x="422.9" y="1571.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="425.9" y="1582.0"></text>
</g>
<g>
<title>copy_process.part.34 (78 samples, 2.64%)</title><rect x="423.3" y="1571.0" width="31.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.3" y="1582.0">co..</text>
</g>
<g>
<title>__delayacct_tsk_init (2 samples, 0.07%)</title><rect x="426.9" y="1555.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="429.9" y="1566.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.07%)</title><rect x="426.9" y="1539.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="429.9" y="1550.0"></text>
</g>
<g>
<title>__vmalloc_node_range (17 samples, 0.58%)</title><rect x="427.7" y="1555.0" width="6.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="430.7" y="1566.0"></text>
</g>
<g>
<title>__get_vm_area_node (4 samples, 0.14%)</title><rect x="428.1" y="1539.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="431.1" y="1550.0"></text>
</g>
<g>
<title>alloc_vmap_area (3 samples, 0.10%)</title><rect x="428.1" y="1523.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="431.1" y="1534.0"></text>
</g>
<g>
<title>__insert_vmap_area (3 samples, 0.10%)</title><rect x="428.1" y="1507.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="431.1" y="1518.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.07%)</title><rect x="428.5" y="1491.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="431.5" y="1502.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="429.3" y="1523.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.3" y="1534.0"></text>
</g>
<g>
<title>alloc_pages_current (11 samples, 0.37%)</title><rect x="429.7" y="1539.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="432.7" y="1550.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (10 samples, 0.34%)</title><rect x="429.7" y="1523.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.7" y="1534.0"></text>
</g>
<g>
<title>clear_page_erms (8 samples, 0.27%)</title><rect x="429.7" y="1507.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="432.7" y="1518.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="432.5" y="1491.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="435.5" y="1502.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="432.5" y="1475.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="435.5" y="1486.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="432.5" y="1459.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="435.5" y="1470.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="432.5" y="1443.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="435.5" y="1454.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="432.5" y="1427.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="435.5" y="1438.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="432.5" y="1411.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="435.5" y="1422.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="432.5" y="1395.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="435.5" y="1406.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.07%)</title><rect x="432.9" y="1507.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="435.9" y="1518.0"></text>
</g>
<g>
<title>policy_nodemask (1 samples, 0.03%)</title><rect x="433.7" y="1523.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="436.7" y="1534.0"></text>
</g>
<g>
<title>map_vm_area (1 samples, 0.03%)</title><rect x="434.1" y="1539.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.1" y="1550.0"></text>
</g>
<g>
<title>vmap_page_range_noflush (1 samples, 0.03%)</title><rect x="434.1" y="1523.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="437.1" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="434.5" y="1555.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.5" y="1566.0"></text>
</g>
<g>
<title>account_kernel_stack (1 samples, 0.03%)</title><rect x="434.9" y="1555.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="437.9" y="1566.0"></text>
</g>
<g>
<title>alloc_pid (6 samples, 0.20%)</title><rect x="435.3" y="1555.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="438.3" y="1566.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="437.3" y="1539.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="440.3" y="1550.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="437.3" y="1523.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="440.3" y="1534.0"></text>
</g>
<g>
<title>arch_dup_task_struct (1 samples, 0.03%)</title><rect x="437.7" y="1555.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="440.7" y="1566.0"></text>
</g>
<g>
<title>fpu__copy (1 samples, 0.03%)</title><rect x="437.7" y="1539.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.7" y="1550.0"></text>
</g>
<g>
<title>arch_local_irq_enable (1 samples, 0.03%)</title><rect x="438.1" y="1555.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="441.1" y="1566.0"></text>
</g>
<g>
<title>audit_alloc (1 samples, 0.03%)</title><rect x="438.5" y="1555.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="441.5" y="1566.0"></text>
</g>
<g>
<title>cgroup_can_fork (3 samples, 0.10%)</title><rect x="438.9" y="1555.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.9" y="1566.0"></text>
</g>
<g>
<title>pids_can_fork (3 samples, 0.10%)</title><rect x="438.9" y="1539.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.9" y="1550.0"></text>
</g>
<g>
<title>cgroup_post_fork (3 samples, 0.10%)</title><rect x="440.1" y="1555.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="443.1" y="1566.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (2 samples, 0.07%)</title><rect x="440.5" y="1539.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.5" y="1550.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="440.5" y="1523.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.5" y="1534.0"></text>
</g>
<g>
<title>cpuset_fork (1 samples, 0.03%)</title><rect x="441.3" y="1555.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="444.3" y="1566.0"></text>
</g>
<g>
<title>find_first_bit (2 samples, 0.07%)</title><rect x="441.7" y="1555.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.7" y="1566.0"></text>
</g>
<g>
<title>get_random_u64 (7 samples, 0.24%)</title><rect x="442.5" y="1555.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="445.5" y="1566.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="445.3" y="1555.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.3" y="1566.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="445.7" y="1555.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="448.7" y="1566.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="445.7" y="1539.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.7" y="1550.0"></text>
</g>
<g>
<title>memcg_kmem_charge (1 samples, 0.03%)</title><rect x="446.1" y="1555.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="449.1" y="1566.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="446.1" y="1539.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.1" y="1550.0"></text>
</g>
<g>
<title>memcpy_erms (6 samples, 0.20%)</title><rect x="446.5" y="1555.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="449.5" y="1566.0"></text>
</g>
<g>
<title>mod_zone_page_state (2 samples, 0.07%)</title><rect x="448.9" y="1555.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="451.9" y="1566.0"></text>
</g>
<g>
<title>perf_event_init_task (2 samples, 0.07%)</title><rect x="449.7" y="1555.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="452.7" y="1566.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="449.7" y="1539.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="452.7" y="1550.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="450.1" y="1539.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.1" y="1550.0"></text>
</g>
<g>
<title>rcuwait_wake_up (1 samples, 0.03%)</title><rect x="450.5" y="1555.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="453.5" y="1566.0"></text>
</g>
<g>
<title>sched_fork (8 samples, 0.27%)</title><rect x="450.9" y="1555.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="453.9" y="1566.0"></text>
</g>
<g>
<title>__sched_fork (3 samples, 0.10%)</title><rect x="450.9" y="1539.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="453.9" y="1550.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="450.9" y="1523.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="453.9" y="1534.0"></text>
</g>
<g>
<title>init_dl_task_timer (1 samples, 0.03%)</title><rect x="451.3" y="1523.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="454.3" y="1534.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="451.3" y="1507.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="454.3" y="1518.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="451.3" y="1491.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="454.3" y="1502.0"></text>
</g>
<g>
<title>init_numa_balancing (1 samples, 0.03%)</title><rect x="451.7" y="1523.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="454.7" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="452.1" y="1539.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.1" y="1550.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.14%)</title><rect x="452.6" y="1539.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.6" y="1550.0"></text>
</g>
<g>
<title>security_task_alloc (1 samples, 0.03%)</title><rect x="454.2" y="1555.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.2" y="1566.0"></text>
</g>
<g>
<title>memset_erms (8 samples, 0.27%)</title><rect x="454.6" y="1571.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.6" y="1582.0"></text>
</g>
<g>
<title>task_active_pid_ns (1 samples, 0.03%)</title><rect x="457.8" y="1571.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="460.8" y="1582.0"></text>
</g>
<g>
<title>wake_up_new_task (26 samples, 0.88%)</title><rect x="458.2" y="1571.0" width="10.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="461.2" y="1582.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.88%)</title><rect x="458.2" y="1555.0" width="10.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.2" y="1566.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="468.2" y="1539.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.2" y="1550.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="468.2" y="1523.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.2" y="1534.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="468.2" y="1507.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="471.2" y="1518.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="468.2" y="1491.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.2" y="1502.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="468.2" y="1475.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="471.2" y="1486.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="468.2" y="1459.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="471.2" y="1470.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.03%)</title><rect x="468.2" y="1443.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="471.2" y="1454.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.03%)</title><rect x="468.2" y="1427.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.2" y="1438.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="468.2" y="1411.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="471.2" y="1422.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="468.2" y="1395.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="471.2" y="1406.0"></text>
</g>
<g>
<title>put_pid (1 samples, 0.03%)</title><rect x="468.6" y="1587.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.6" y="1598.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="469.0" y="1635.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.0" y="1646.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="469.0" y="1619.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.0" y="1630.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="469.0" y="1603.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="472.0" y="1614.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.14%)</title><rect x="469.4" y="1651.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="472.4" y="1662.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="471.0" y="1651.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="474.0" y="1662.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="471.8" y="1651.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="474.8" y="1662.0"></text>
</g>
<g>
<title>os::vm_page_size() (1 samples, 0.03%)</title><rect x="472.2" y="1651.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="475.2" y="1662.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (15 samples, 0.51%)</title><rect x="472.6" y="1651.0" width="6.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="475.6" y="1662.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.10%)</title><rect x="477.4" y="1635.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.4" y="1646.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.10%)</title><rect x="477.4" y="1619.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="480.4" y="1630.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.10%)</title><rect x="477.4" y="1603.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.4" y="1614.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.10%)</title><rect x="477.4" y="1587.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="480.4" y="1598.0"></text>
</g>
<g>
<title>__handle_mm_fault (3 samples, 0.10%)</title><rect x="477.4" y="1571.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="480.4" y="1582.0"></text>
</g>
<g>
<title>__pte_alloc (1 samples, 0.03%)</title><rect x="477.4" y="1555.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.4" y="1566.0"></text>
</g>
<g>
<title>pte_alloc_one (1 samples, 0.03%)</title><rect x="477.4" y="1539.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.4" y="1550.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.03%)</title><rect x="477.4" y="1523.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="480.4" y="1534.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="477.4" y="1507.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="480.4" y="1518.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="477.4" y="1491.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="480.4" y="1502.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.07%)</title><rect x="477.8" y="1555.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.8" y="1566.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.07%)</title><rect x="477.8" y="1539.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="480.8" y="1550.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="477.8" y="1523.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="480.8" y="1534.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="478.2" y="1523.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="481.2" y="1534.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (6 samples, 0.20%)</title><rect x="478.6" y="1667.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="481.6" y="1678.0"></text>
</g>
<g>
<title>Monitor::notify() (1 samples, 0.03%)</title><rect x="478.6" y="1651.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="481.6" y="1662.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="479.0" y="1651.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="482.0" y="1662.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="479.4" y="1651.0" width="1.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="482.4" y="1662.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="480.6" y="1651.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="483.6" y="1662.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (1 samples, 0.03%)</title><rect x="481.0" y="1683.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="484.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.36%)</title><rect x="481.4" y="1683.0" width="16.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="484.4" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="481.4" y="1667.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="484.4" y="1678.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="481.4" y="1651.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="484.4" y="1662.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="481.4" y="1635.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="484.4" y="1646.0"></text>
</g>
<g>
<title>__cxa_pure_virtual (1 samples, 0.03%)</title><rect x="481.8" y="1667.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="484.8" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="481.8" y="1651.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="484.8" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="481.8" y="1635.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="484.8" y="1646.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.03%)</title><rect x="481.8" y="1619.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="484.8" y="1630.0"></text>
</g>
<g>
<title>__lll_unlock_wake_private (2 samples, 0.07%)</title><rect x="482.2" y="1667.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="485.2" y="1678.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="482.2" y="1651.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.2" y="1662.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="482.2" y="1635.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="485.2" y="1646.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="483.0" y="1667.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="486.0" y="1678.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.10%)</title><rect x="483.4" y="1667.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="486.4" y="1678.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="484.6" y="1667.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="487.6" y="1678.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="485.0" y="1667.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="488.0" y="1678.0"></text>
</g>
<g>
<title>_int_malloc (5 samples, 0.17%)</title><rect x="485.4" y="1667.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="488.4" y="1678.0"></text>
</g>
<g>
<title>malloc_consolidate (8 samples, 0.27%)</title><rect x="487.4" y="1667.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="490.4" y="1678.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (17 samples, 0.58%)</title><rect x="490.6" y="1667.0" width="6.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="493.6" y="1678.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.24%)</title><rect x="494.6" y="1651.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.6" y="1662.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="494.6" y="1635.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="497.6" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.20%)</title><rect x="495.0" y="1635.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.0" y="1646.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.14%)</title><rect x="495.8" y="1619.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="498.8" y="1630.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="496.2" y="1603.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.2" y="1614.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.10%)</title><rect x="496.2" y="1587.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.2" y="1598.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.07%)</title><rect x="496.2" y="1571.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="499.2" y="1582.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="496.2" y="1555.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="499.2" y="1566.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="496.6" y="1555.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.6" y="1566.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="496.6" y="1539.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="499.6" y="1550.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="496.6" y="1523.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="499.6" y="1534.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="497.0" y="1571.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="500.0" y="1582.0"></text>
</g>
<g>
<title>__GI___mmap64 (2 samples, 0.07%)</title><rect x="497.4" y="1683.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="500.4" y="1694.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="497.4" y="1667.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="500.4" y="1678.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="497.4" y="1651.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="500.4" y="1662.0"></text>
</g>
<g>
<title>__x64_sys_mmap (2 samples, 0.07%)</title><rect x="497.4" y="1635.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="500.4" y="1646.0"></text>
</g>
<g>
<title>ksys_mmap_pgoff (2 samples, 0.07%)</title><rect x="497.4" y="1619.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="500.4" y="1630.0"></text>
</g>
<g>
<title>vm_mmap_pgoff (2 samples, 0.07%)</title><rect x="497.4" y="1603.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="500.4" y="1614.0"></text>
</g>
<g>
<title>do_mmap (1 samples, 0.03%)</title><rect x="497.4" y="1587.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="500.4" y="1598.0"></text>
</g>
<g>
<title>mmap_region (1 samples, 0.03%)</title><rect x="497.4" y="1571.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="500.4" y="1582.0"></text>
</g>
<g>
<title>security_mmap_file (1 samples, 0.03%)</title><rect x="497.8" y="1587.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.8" y="1598.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (4 samples, 0.14%)</title><rect x="498.2" y="1683.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="501.2" y="1694.0"></text>
</g>
<g>
<title>_IO_default_xsputn (2 samples, 0.07%)</title><rect x="498.2" y="1667.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="501.2" y="1678.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (2 samples, 0.07%)</title><rect x="499.0" y="1667.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="502.0" y="1678.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (1 samples, 0.03%)</title><rect x="499.8" y="1683.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="502.8" y="1694.0"></text>
</g>
<g>
<title>__libc_free (5 samples, 0.17%)</title><rect x="500.2" y="1683.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="503.2" y="1694.0"></text>
</g>
<g>
<title>__malloc (10 samples, 0.34%)</title><rect x="502.2" y="1683.0" width="4.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="505.2" y="1694.0"></text>
</g>
<g>
<title>__pthread_cond_signal (39 samples, 1.32%)</title><rect x="506.2" y="1683.0" width="15.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="509.2" y="1694.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.25%)</title><rect x="507.0" y="1667.0" width="14.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="510.0" y="1678.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.25%)</title><rect x="507.0" y="1651.0" width="14.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="510.0" y="1662.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 1.05%)</title><rect x="509.4" y="1635.0" width="12.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="512.4" y="1646.0"></text>
</g>
<g>
<title>do_futex (31 samples, 1.05%)</title><rect x="509.4" y="1619.0" width="12.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="512.4" y="1630.0"></text>
</g>
<g>
<title>futex_wake (31 samples, 1.05%)</title><rect x="509.4" y="1603.0" width="12.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.4" y="1614.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="509.8" y="1587.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="512.8" y="1598.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="509.8" y="1571.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.8" y="1582.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="509.8" y="1555.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="512.8" y="1566.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="509.8" y="1539.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.8" y="1550.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="509.8" y="1523.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="512.8" y="1534.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="509.8" y="1507.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="512.8" y="1518.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="509.8" y="1491.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.8" y="1502.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="510.2" y="1587.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="513.2" y="1598.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.07%)</title><rect x="510.6" y="1587.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="513.6" y="1598.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.03%)</title><rect x="511.0" y="1571.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="514.0" y="1582.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="511.4" y="1587.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="514.4" y="1598.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.85%)</title><rect x="511.8" y="1587.0" width="10.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.8" y="1598.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 0.85%)</title><rect x="511.8" y="1571.0" width="10.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="514.8" y="1582.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.85%)</title><rect x="511.8" y="1555.0" width="10.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.8" y="1566.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="521.4" y="1539.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="524.4" y="1550.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="521.4" y="1523.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="524.4" y="1534.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="521.4" y="1507.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.4" y="1518.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="521.4" y="1491.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="524.4" y="1502.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="521.4" y="1475.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.4" y="1486.0"></text>
</g>
<g>
<title>fasync_free_rcu (1 samples, 0.03%)</title><rect x="521.4" y="1459.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="524.4" y="1470.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="521.4" y="1443.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="524.4" y="1454.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="521.4" y="1427.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="524.4" y="1438.0"></text>
</g>
<g>
<title>_int_malloc (16 samples, 0.54%)</title><rect x="521.8" y="1683.0" width="6.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="524.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="528.2" y="1731.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.2" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="528.2" y="1715.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.2" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.03%)</title><rect x="528.2" y="1699.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.2" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="528.2" y="1683.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.2" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="528.2" y="1667.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.2" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$219/764460352.accept (2 samples, 0.07%)</title><rect x="528.6" y="1747.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.6" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.07%)</title><rect x="528.6" y="1731.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.6" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/1447974469.accept (1 samples, 0.03%)</title><rect x="529.4" y="1747.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.03%)</title><rect x="529.4" y="1731.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.03%)</title><rect x="529.4" y="1715.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.4" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.03%)</title><rect x="529.4" y="1699.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.4" y="1710.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="529.8" y="1779.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="532.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.03%)</title><rect x="530.2" y="1875.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="533.2" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.07%)</title><rect x="530.6" y="1955.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.6" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.07%)</title><rect x="530.6" y="1939.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.6" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.07%)</title><rect x="530.6" y="1923.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.6" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.07%)</title><rect x="530.6" y="1907.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="531.0" y="1891.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.0" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.03%)</title><rect x="531.4" y="1987.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.4" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="531.4" y="1971.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.4" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="531.4" y="1955.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4 samples, 0.14%)</title><rect x="531.8" y="2003.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4 samples, 0.14%)</title><rect x="531.8" y="1987.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.8" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.14%)</title><rect x="531.8" y="1971.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.14%)</title><rect x="531.8" y="1955.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.8" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.03%)</title><rect x="533.0" y="1939.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.0" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="533.4" y="2051.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.4" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.03%)</title><rect x="533.4" y="2035.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.4" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (493 samples, 16.72%)</title><rect x="533.8" y="2163.0" width="197.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.8" y="2174.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.14%)</title><rect x="542.6" y="2147.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="545.6" y="2158.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.14%)</title><rect x="542.6" y="2131.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="545.6" y="2142.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.14%)</title><rect x="542.6" y="2115.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="545.6" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.07%)</title><rect x="542.6" y="2099.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="545.6" y="2110.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="543.4" y="2099.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="546.4" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.07%)</title><rect x="544.2" y="2147.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.2" y="2158.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.07%)</title><rect x="544.2" y="2131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.2" y="2142.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (7 samples, 0.24%)</title><rect x="545.0" y="2147.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.0" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1 samples, 0.03%)</title><rect x="547.4" y="2131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.4" y="2142.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (135 samples, 4.58%)</title><rect x="547.8" y="2147.0" width="54.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.8" y="2158.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1705485627.accept (129 samples, 4.37%)</title><rect x="548.6" y="2131.0" width="51.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.6" y="2142.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (129 samples, 4.37%)</title><rect x="548.6" y="2115.0" width="51.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="551.6" y="2126.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (129 samples, 4.37%)</title><rect x="548.6" y="2099.0" width="51.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.6" y="2110.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (129 samples, 4.37%)</title><rect x="548.6" y="2083.0" width="51.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.6" y="2094.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (129 samples, 4.37%)</title><rect x="548.6" y="2067.0" width="51.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.6" y="2078.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.20%)</title><rect x="548.6" y="2051.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.6" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.14%)</title><rect x="549.4" y="2035.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.14%)</title><rect x="549.4" y="2019.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.4" y="2030.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.14%)</title><rect x="549.4" y="2003.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.4" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.14%)</title><rect x="549.4" y="1987.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.4" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.14%)</title><rect x="549.4" y="1971.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.4" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (123 samples, 4.17%)</title><rect x="551.0" y="2051.0" width="49.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.0" y="2062.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (123 samples, 4.17%)</title><rect x="551.0" y="2035.0" width="49.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.0" y="2046.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (123 samples, 4.17%)</title><rect x="551.0" y="2019.0" width="49.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.0" y="2030.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.10%)</title><rect x="551.0" y="2003.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.0" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.10%)</title><rect x="551.0" y="1987.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.0" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.10%)</title><rect x="551.0" y="1971.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.10%)</title><rect x="551.0" y="1955.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.10%)</title><rect x="551.0" y="1939.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.0" y="1950.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="551.0" y="1923.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="554.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.03%)</title><rect x="551.8" y="1923.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (120 samples, 4.07%)</title><rect x="552.2" y="2003.0" width="48.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.2" y="2014.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (118 samples, 4.00%)</title><rect x="553.0" y="1987.0" width="47.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.0" y="1998.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/133136300.run (116 samples, 3.93%)</title><rect x="553.4" y="1971.0" width="46.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.4" y="1982.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (116 samples, 3.93%)</title><rect x="553.4" y="1955.0" width="46.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.4" y="1966.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (7 samples, 0.24%)</title><rect x="553.4" y="1939.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.4" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (7 samples, 0.24%)</title><rect x="553.4" y="1923.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.4" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (7 samples, 0.24%)</title><rect x="553.4" y="1907.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.24%)</title><rect x="553.4" y="1891.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.4" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.10%)</title><rect x="555.0" y="1875.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.10%)</title><rect x="555.0" y="1859.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.10%)</title><rect x="555.0" y="1843.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.10%)</title><rect x="555.0" y="1827.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.10%)</title><rect x="555.0" y="1811.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.0" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.10%)</title><rect x="555.0" y="1795.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.0" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="555.4" y="1779.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.4" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="555.4" y="1763.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.07%)</title><rect x="555.4" y="1747.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.4" y="1758.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="555.4" y="1731.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="558.4" y="1742.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="555.8" y="1715.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="558.8" y="1726.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="555.8" y="1699.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.8" y="1710.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="555.8" y="1683.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="558.8" y="1694.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="555.8" y="1667.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="558.8" y="1678.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="555.8" y="1651.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.8" y="1662.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="555.8" y="1635.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="558.8" y="1646.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="555.8" y="1619.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.8" y="1630.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="555.8" y="1603.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="558.8" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.07%)</title><rect x="556.2" y="1939.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.2" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (2 samples, 0.07%)</title><rect x="556.2" y="1923.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.2" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.10%)</title><rect x="557.0" y="1939.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.0" y="1950.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="557.0" y="1923.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="560.0" y="1934.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="557.0" y="1907.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.0" y="1918.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="557.0" y="1891.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="560.0" y="1902.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="557.0" y="1875.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="560.0" y="1886.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="557.0" y="1859.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="560.0" y="1870.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="557.0" y="1843.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="560.0" y="1854.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.03%)</title><rect x="557.0" y="1827.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="560.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.07%)</title><rect x="557.4" y="1923.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.4" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.07%)</title><rect x="557.4" y="1907.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="557.8" y="1891.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.8" y="1902.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="557.8" y="1875.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.8" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (102 samples, 3.46%)</title><rect x="558.2" y="1939.0" width="40.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.2" y="1950.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.03%)</title><rect x="561.0" y="1923.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.0" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$149/338232184.get (1 samples, 0.03%)</title><rect x="561.0" y="1907.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.0" y="1918.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="561.0" y="1891.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="564.0" y="1902.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="561.0" y="1875.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.0" y="1886.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="561.0" y="1859.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="564.0" y="1870.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="561.0" y="1843.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="564.0" y="1854.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.03%)</title><rect x="561.0" y="1827.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="564.0" y="1838.0"></text>
</g>
<g>
<title>scsi_softirq_done (1 samples, 0.03%)</title><rect x="561.0" y="1811.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.0" y="1822.0"></text>
</g>
<g>
<title>scsi_finish_command (1 samples, 0.03%)</title><rect x="561.0" y="1795.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.0" y="1806.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.03%)</title><rect x="561.0" y="1779.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="564.0" y="1790.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.03%)</title><rect x="561.0" y="1763.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.0" y="1774.0"></text>
</g>
<g>
<title>blk_update_request (1 samples, 0.03%)</title><rect x="561.0" y="1747.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="564.0" y="1758.0"></text>
</g>
<g>
<title>bio_endio (1 samples, 0.03%)</title><rect x="561.0" y="1731.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.0" y="1742.0"></text>
</g>
<g>
<title>ext4_end_bio (1 samples, 0.03%)</title><rect x="561.0" y="1715.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="564.0" y="1726.0"></text>
</g>
<g>
<title>ext4_finish_bio (1 samples, 0.03%)</title><rect x="561.0" y="1699.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="564.0" y="1710.0"></text>
</g>
<g>
<title>test_clear_page_writeback (1 samples, 0.03%)</title><rect x="561.0" y="1683.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="564.0" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (94 samples, 3.19%)</title><rect x="561.4" y="1923.0" width="37.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.4" y="1934.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.03%)</title><rect x="565.0" y="1907.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.0" y="1918.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (83 samples, 2.81%)</title><rect x="565.4" y="1907.0" width="33.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.4" y="1918.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (83 samples, 2.81%)</title><rect x="565.4" y="1891.0" width="33.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.4" y="1902.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (83 samples, 2.81%)</title><rect x="565.4" y="1875.0" width="33.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.4" y="1886.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (83 samples, 2.81%)</title><rect x="565.4" y="1859.0" width="33.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.4" y="1870.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (79 samples, 2.68%)</title><rect x="567.0" y="1843.0" width="31.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.0" y="1854.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (3 samples, 0.10%)</title><rect x="569.0" y="1827.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="572.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 2.37%)</title><rect x="570.2" y="1827.0" width="28.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="573.2" y="1838.0">[u..</text>
</g>
<g>
<title>__GI___libc_read (68 samples, 2.31%)</title><rect x="570.2" y="1811.0" width="27.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="573.2" y="1822.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 2.27%)</title><rect x="570.6" y="1795.0" width="26.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="573.6" y="1806.0">e..</text>
</g>
<g>
<title>do_syscall_64 (67 samples, 2.27%)</title><rect x="570.6" y="1779.0" width="26.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="573.6" y="1790.0">d..</text>
</g>
<g>
<title>__x64_sys_read (60 samples, 2.03%)</title><rect x="573.0" y="1763.0" width="24.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="576.0" y="1774.0">_..</text>
</g>
<g>
<title>ksys_read (60 samples, 2.03%)</title><rect x="573.0" y="1747.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="576.0" y="1758.0">k..</text>
</g>
<g>
<title>vfs_read (60 samples, 2.03%)</title><rect x="573.0" y="1731.0" width="24.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.0" y="1742.0">v..</text>
</g>
<g>
<title>__vfs_read (53 samples, 1.80%)</title><rect x="573.0" y="1715.0" width="21.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="576.0" y="1726.0">_..</text>
</g>
<g>
<title>new_sync_read (53 samples, 1.80%)</title><rect x="573.0" y="1699.0" width="21.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="576.0" y="1710.0">n..</text>
</g>
<g>
<title>sock_read_iter (51 samples, 1.73%)</title><rect x="573.8" y="1683.0" width="20.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="576.8" y="1694.0"></text>
</g>
<g>
<title>sock_recvmsg (51 samples, 1.73%)</title><rect x="573.8" y="1667.0" width="20.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="576.8" y="1678.0"></text>
</g>
<g>
<title>inet_recvmsg (50 samples, 1.70%)</title><rect x="573.8" y="1651.0" width="20.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="576.8" y="1662.0"></text>
</g>
<g>
<title>tcp_recvmsg (49 samples, 1.66%)</title><rect x="574.2" y="1635.0" width="19.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="577.2" y="1646.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="574.6" y="1619.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="577.6" y="1630.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="574.6" y="1603.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="577.6" y="1614.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="574.6" y="1587.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.6" y="1598.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="574.6" y="1571.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="577.6" y="1582.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="575.0" y="1619.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.0" y="1630.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="575.4" y="1619.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="578.4" y="1630.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="575.4" y="1603.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="578.4" y="1614.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="575.4" y="1587.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="578.4" y="1598.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="575.4" y="1571.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="578.4" y="1582.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="575.4" y="1555.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="578.4" y="1566.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="575.4" y="1539.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="578.4" y="1550.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="575.4" y="1523.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="578.4" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="575.4" y="1507.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="578.4" y="1518.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.14%)</title><rect x="575.8" y="1619.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="578.8" y="1630.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.10%)</title><rect x="576.2" y="1603.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="579.2" y="1614.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.07%)</title><rect x="577.4" y="1619.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="580.4" y="1630.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.03%)</title><rect x="577.4" y="1603.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="580.4" y="1614.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="577.4" y="1587.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.4" y="1598.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="577.4" y="1571.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="580.4" y="1582.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="577.4" y="1555.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="580.4" y="1566.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="577.8" y="1603.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.8" y="1614.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (38 samples, 1.29%)</title><rect x="578.2" y="1619.0" width="15.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.2" y="1630.0"></text>
</g>
<g>
<title>tcp_send_ack (37 samples, 1.25%)</title><rect x="578.6" y="1603.0" width="14.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.6" y="1614.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (36 samples, 1.22%)</title><rect x="578.6" y="1587.0" width="14.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="581.6" y="1598.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.03%)</title><rect x="579.0" y="1571.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.0" y="1582.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="579.0" y="1555.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.0" y="1566.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 1.15%)</title><rect x="579.4" y="1571.0" width="13.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.4" y="1582.0"></text>
</g>
<g>
<title>ip_queue_xmit (34 samples, 1.15%)</title><rect x="579.4" y="1555.0" width="13.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="582.4" y="1566.0"></text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 1.15%)</title><rect x="579.4" y="1539.0" width="13.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="582.4" y="1550.0"></text>
</g>
<g>
<title>ip_local_out (34 samples, 1.15%)</title><rect x="579.4" y="1523.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.4" y="1534.0"></text>
</g>
<g>
<title>ip_output (34 samples, 1.15%)</title><rect x="579.4" y="1507.0" width="13.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.4" y="1518.0"></text>
</g>
<g>
<title>ip_finish_output (34 samples, 1.15%)</title><rect x="579.4" y="1491.0" width="13.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="582.4" y="1502.0"></text>
</g>
<g>
<title>ip_finish_output2 (31 samples, 1.05%)</title><rect x="580.2" y="1475.0" width="12.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.2" y="1486.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 0.85%)</title><rect x="580.2" y="1459.0" width="10.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="583.2" y="1470.0"></text>
</g>
<g>
<title>do_softirq.part.21 (25 samples, 0.85%)</title><rect x="580.2" y="1443.0" width="10.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="583.2" y="1454.0"></text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 0.85%)</title><rect x="580.2" y="1427.0" width="10.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.2" y="1438.0"></text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 0.85%)</title><rect x="580.2" y="1411.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="583.2" y="1422.0"></text>
</g>
<g>
<title>net_rx_action (24 samples, 0.81%)</title><rect x="580.6" y="1395.0" width="9.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="583.6" y="1406.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="581.0" y="1379.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="584.0" y="1390.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 0.75%)</title><rect x="581.4" y="1379.0" width="8.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="584.4" y="1390.0"></text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 0.75%)</title><rect x="581.4" y="1363.0" width="8.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="584.4" y="1374.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 0.75%)</title><rect x="581.4" y="1347.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="584.4" y="1358.0"></text>
</g>
<g>
<title>ip_rcv (22 samples, 0.75%)</title><rect x="581.4" y="1331.0" width="8.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="584.4" y="1342.0"></text>
</g>
<g>
<title>ip_rcv_finish (22 samples, 0.75%)</title><rect x="581.4" y="1315.0" width="8.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="584.4" y="1326.0"></text>
</g>
<g>
<title>ip_local_deliver (22 samples, 0.75%)</title><rect x="581.4" y="1299.0" width="8.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="584.4" y="1310.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (22 samples, 0.75%)</title><rect x="581.4" y="1283.0" width="8.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="584.4" y="1294.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 0.71%)</title><rect x="581.4" y="1267.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.4" y="1278.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 0.68%)</title><rect x="581.8" y="1251.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="584.8" y="1262.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="583.0" y="1235.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.0" y="1246.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.14%)</title><rect x="583.4" y="1235.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="586.4" y="1246.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="584.6" y="1219.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="587.6" y="1230.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.07%)</title><rect x="585.0" y="1235.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="588.0" y="1246.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (10 samples, 0.34%)</title><rect x="585.8" y="1235.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="588.8" y="1246.0"></text>
</g>
<g>
<title>tcp_rcv_established (10 samples, 0.34%)</title><rect x="585.8" y="1219.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="588.8" y="1230.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="585.8" y="1203.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.8" y="1214.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="585.8" y="1187.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.8" y="1198.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="585.8" y="1171.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="588.8" y="1182.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="585.8" y="1155.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="588.8" y="1166.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="585.8" y="1139.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.8" y="1150.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="586.2" y="1203.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="589.2" y="1214.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.27%)</title><rect x="586.6" y="1203.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="589.6" y="1214.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="588.2" y="1187.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.2" y="1198.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.07%)</title><rect x="588.6" y="1187.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="591.6" y="1198.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="588.6" y="1171.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="591.6" y="1182.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="588.6" y="1155.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="591.6" y="1166.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="588.6" y="1139.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="591.6" y="1150.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="589.0" y="1155.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="592.0" y="1166.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="589.4" y="1187.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="592.4" y="1198.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="589.8" y="1267.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="592.8" y="1278.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.20%)</title><rect x="590.2" y="1459.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="593.2" y="1470.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.17%)</title><rect x="590.2" y="1443.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="593.2" y="1454.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.07%)</title><rect x="591.0" y="1427.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="594.0" y="1438.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.07%)</title><rect x="591.0" y="1411.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="594.0" y="1422.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.07%)</title><rect x="591.0" y="1395.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="594.0" y="1406.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.07%)</title><rect x="591.0" y="1379.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="594.0" y="1390.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="591.0" y="1363.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="594.0" y="1374.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="591.8" y="1427.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="594.8" y="1438.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="592.2" y="1443.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="595.2" y="1454.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="592.6" y="1475.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="595.6" y="1486.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="593.0" y="1587.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.0" y="1598.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="593.4" y="1619.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.4" y="1630.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="593.8" y="1651.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="596.8" y="1662.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="593.8" y="1635.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.8" y="1646.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="593.8" y="1619.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="596.8" y="1630.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="593.8" y="1603.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="596.8" y="1614.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="594.2" y="1715.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="597.2" y="1726.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.20%)</title><rect x="594.6" y="1715.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="597.6" y="1726.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="595.4" y="1699.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.4" y="1710.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.10%)</title><rect x="595.8" y="1699.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="598.8" y="1710.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="595.8" y="1683.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="598.8" y="1694.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="595.8" y="1667.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="598.8" y="1678.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="596.6" y="1683.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.6" y="1694.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="597.0" y="1763.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.0" y="1774.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.07%)</title><rect x="597.4" y="1811.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="600.4" y="1822.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="598.2" y="1827.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="601.2" y="1838.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="598.6" y="1907.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="601.6" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="599.0" y="1939.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.0" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.03%)</title><rect x="599.4" y="1939.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.4" y="1950.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.03%)</title><rect x="599.4" y="1923.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.4" y="1934.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.03%)</title><rect x="599.4" y="1907.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.4" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.03%)</title><rect x="599.8" y="1971.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$188/546108432.accept (4 samples, 0.14%)</title><rect x="600.2" y="2131.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.2" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.14%)</title><rect x="600.2" y="2115.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.2" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$181/525718990.run (4 samples, 0.14%)</title><rect x="600.2" y="2099.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.2" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.14%)</title><rect x="600.2" y="2083.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.2" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (4 samples, 0.14%)</title><rect x="600.2" y="2067.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.2" y="2078.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.10%)</title><rect x="600.6" y="2051.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.6" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.10%)</title><rect x="600.6" y="2035.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.6" y="2046.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.10%)</title><rect x="600.6" y="2019.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.6" y="2030.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.10%)</title><rect x="600.6" y="2003.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="601.4" y="1987.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.4" y="1998.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.03%)</title><rect x="601.8" y="2147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.8" y="2158.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="601.8" y="2131.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="604.8" y="2142.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="601.8" y="2115.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="604.8" y="2126.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="601.8" y="2099.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="604.8" y="2110.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="601.8" y="2083.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="604.8" y="2094.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.07%)</title><rect x="602.2" y="2147.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.2" y="2158.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.07%)</title><rect x="602.2" y="2131.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.2" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (11 samples, 0.37%)</title><rect x="603.0" y="2147.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.0" y="2158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.31%)</title><rect x="603.8" y="2131.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.8" y="2142.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.07%)</title><rect x="603.8" y="2115.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.8" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="604.2" y="2099.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.2" y="2110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="604.2" y="2083.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.2" y="2094.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="604.2" y="2067.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.2" y="2078.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.24%)</title><rect x="604.6" y="2115.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.6" y="2126.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.24%)</title><rect x="604.6" y="2099.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.6" y="2110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.24%)</title><rect x="604.6" y="2083.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.6" y="2094.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.14%)</title><rect x="604.6" y="2067.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.6" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.10%)</title><rect x="604.6" y="2051.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.6" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.10%)</title><rect x="604.6" y="2035.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.6" y="2046.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.07%)</title><rect x="605.0" y="2019.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.0" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.interestOps (2 samples, 0.07%)</title><rect x="605.0" y="2003.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.0" y="2014.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="605.4" y="1987.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="608.4" y="1998.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="605.4" y="1971.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="608.4" y="1982.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="605.4" y="1955.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="608.4" y="1966.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="605.4" y="1939.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="608.4" y="1950.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="605.4" y="1923.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="608.4" y="1934.0"></text>
</g>
<g>
<title>delayed_put_pid (1 samples, 0.03%)</title><rect x="605.4" y="1907.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="608.4" y="1918.0"></text>
</g>
<g>
<title>put_pid (1 samples, 0.03%)</title><rect x="605.4" y="1891.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="608.4" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="605.8" y="2051.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.8" y="2062.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.10%)</title><rect x="606.2" y="2067.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.2" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (46 samples, 1.56%)</title><rect x="607.4" y="2147.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.4" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/2085266465.run (34 samples, 1.15%)</title><rect x="607.4" y="2131.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.4" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (34 samples, 1.15%)</title><rect x="607.4" y="2115.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.4" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 1.15%)</title><rect x="607.4" y="2099.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.4" y="2110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 1.15%)</title><rect x="607.4" y="2083.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="610.4" y="2094.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.07%)</title><rect x="607.4" y="2067.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.4" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.07%)</title><rect x="607.4" y="2051.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.4" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.07%)</title><rect x="607.4" y="2035.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.4" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.07%)</title><rect x="607.4" y="2019.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.07%)</title><rect x="607.4" y="2003.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.4" y="2014.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="607.4" y="1987.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="610.4" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (32 samples, 1.09%)</title><rect x="608.2" y="2067.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.2" y="2078.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (32 samples, 1.09%)</title><rect x="608.2" y="2051.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.2" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/133136300.run (30 samples, 1.02%)</title><rect x="608.2" y="2035.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (28 samples, 0.95%)</title><rect x="609.0" y="2019.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.0" y="2030.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (26 samples, 0.88%)</title><rect x="609.4" y="2003.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.4" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (3 samples, 0.10%)</title><rect x="609.4" y="1987.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.4" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (2 samples, 0.07%)</title><rect x="609.8" y="1971.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.8" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (23 samples, 0.78%)</title><rect x="610.6" y="1987.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.6" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (14 samples, 0.47%)</title><rect x="611.0" y="1971.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.0" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (13 samples, 0.44%)</title><rect x="611.4" y="1955.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (13 samples, 0.44%)</title><rect x="611.4" y="1939.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.4" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1800031768.linkToTargetMethod (6 samples, 0.20%)</title><rect x="611.4" y="1923.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.4" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1344199921.invoke (6 samples, 0.20%)</title><rect x="611.4" y="1907.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="614.4" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.20%)</title><rect x="611.4" y="1891.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.4" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.20%)</title><rect x="611.4" y="1875.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.4" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.20%)</title><rect x="611.4" y="1859.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.4" y="1870.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="611.8" y="1843.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="614.8" y="1854.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="611.8" y="1827.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="614.8" y="1838.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="611.8" y="1811.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="614.8" y="1822.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.10%)</title><rect x="612.2" y="1843.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="615.2" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.03%)</title><rect x="613.4" y="1843.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.4" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.24%)</title><rect x="613.8" y="1923.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.8" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6 samples, 0.20%)</title><rect x="614.2" y="1907.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.2" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.17%)</title><rect x="614.6" y="1891.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.6" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.14%)</title><rect x="615.0" y="1875.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.0" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.14%)</title><rect x="615.0" y="1859.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.0" y="1870.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="616.2" y="1843.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.2" y="1854.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="616.2" y="1827.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.2" y="1838.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="616.2" y="1811.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (8 samples, 0.27%)</title><rect x="616.6" y="1971.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.6" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.03%)</title><rect x="616.6" y="1955.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.6" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.24%)</title><rect x="617.0" y="1955.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.0" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.24%)</title><rect x="617.0" y="1939.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.0" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.20%)</title><rect x="617.4" y="1923.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.4" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.20%)</title><rect x="617.4" y="1907.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.4" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.20%)</title><rect x="617.4" y="1891.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.4" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="617.4" y="1875.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.4" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="617.4" y="1859.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.4" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="617.4" y="1843.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.4" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.17%)</title><rect x="617.8" y="1875.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.8" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.17%)</title><rect x="617.8" y="1859.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.8" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.17%)</title><rect x="617.8" y="1843.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.8" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.17%)</title><rect x="617.8" y="1827.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.8" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.17%)</title><rect x="617.8" y="1811.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.8" y="1822.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.14%)</title><rect x="617.8" y="1795.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="620.8" y="1806.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.14%)</title><rect x="617.8" y="1779.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="620.8" y="1790.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.14%)</title><rect x="617.8" y="1763.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.8" y="1774.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="618.2" y="1747.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="621.2" y="1758.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="618.2" y="1731.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="621.2" y="1742.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.10%)</title><rect x="618.2" y="1715.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="621.2" y="1726.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.10%)</title><rect x="618.2" y="1699.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="621.2" y="1710.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.10%)</title><rect x="618.2" y="1683.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="621.2" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="618.2" y="1667.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="621.2" y="1678.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="619.4" y="1795.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="622.4" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1 samples, 0.03%)</title><rect x="619.8" y="2003.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.8" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="619.8" y="1987.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.8" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.07%)</title><rect x="620.2" y="2035.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.2" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$156/184979527.run (12 samples, 0.41%)</title><rect x="621.0" y="2131.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.0" y="2142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (12 samples, 0.41%)</title><rect x="621.0" y="2115.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.0" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.37%)</title><rect x="621.4" y="2099.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.4" y="2110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.37%)</title><rect x="621.4" y="2083.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.4" y="2094.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (11 samples, 0.37%)</title><rect x="621.4" y="2067.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.4" y="2078.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="621.4" y="2051.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.4" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="621.4" y="2035.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.4" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="621.4" y="2019.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="621.4" y="2003.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.4" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="621.4" y="1987.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.4" y="1998.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="621.4" y="1971.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="621.4" y="1955.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.4" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.34%)</title><rect x="621.8" y="2051.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.8" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.34%)</title><rect x="621.8" y="2035.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.8" y="2046.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="623.0" y="2019.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.0" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.20%)</title><rect x="623.4" y="2019.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.20%)</title><rect x="623.4" y="2003.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.4" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.20%)</title><rect x="623.4" y="1987.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.4" y="1998.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="623.8" y="1971.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="626.8" y="1982.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.14%)</title><rect x="624.2" y="1971.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="627.2" y="1982.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.14%)</title><rect x="624.2" y="1955.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="627.2" y="1966.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.14%)</title><rect x="624.2" y="1939.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="627.2" y="1950.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="624.6" y="1923.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="627.6" y="1934.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="624.6" y="1907.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="627.6" y="1918.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.10%)</title><rect x="624.6" y="1891.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="627.6" y="1902.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.18 (1 samples, 0.03%)</title><rect x="624.6" y="1875.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="627.6" y="1886.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="625.0" y="1875.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="628.0" y="1886.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="625.0" y="1859.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="628.0" y="1870.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="625.0" y="1843.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="628.0" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (17 samples, 0.58%)</title><rect x="625.8" y="2147.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.8" y="2158.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.07%)</title><rect x="627.0" y="2131.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.0" y="2142.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.07%)</title><rect x="627.0" y="2115.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.0" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (12 samples, 0.41%)</title><rect x="627.8" y="2131.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.8" y="2142.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.17%)</title><rect x="629.0" y="2115.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.0" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (4 samples, 0.14%)</title><rect x="631.0" y="2115.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.0" y="2126.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.03%)</title><rect x="632.2" y="2099.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.2" y="2110.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="632.2" y="2083.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.2" y="2094.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="632.2" y="2067.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="635.2" y="2078.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="632.2" y="2051.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="635.2" y="2062.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="632.6" y="2147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.6" y="2158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (20 samples, 0.68%)</title><rect x="633.0" y="2147.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.0" y="2158.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="634.6" y="2131.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="637.6" y="2142.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="634.6" y="2115.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="637.6" y="2126.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.03%)</title><rect x="634.6" y="2099.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="637.6" y="2110.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.24%)</title><rect x="635.0" y="2131.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.0" y="2142.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.24%)</title><rect x="635.0" y="2115.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.0" y="2126.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.17%)</title><rect x="635.4" y="2099.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.4" y="2110.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.17%)</title><rect x="635.4" y="2083.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="638.4" y="2094.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="636.2" y="2067.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="639.2" y="2078.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.07%)</title><rect x="636.6" y="2067.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="639.6" y="2078.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="637.0" y="2051.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="640.0" y="2062.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="637.0" y="2035.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="640.0" y="2046.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.03%)</title><rect x="637.4" y="2099.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.4" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (4 samples, 0.14%)</title><rect x="637.8" y="2131.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.8" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (4 samples, 0.14%)</title><rect x="637.8" y="2115.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.8" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.14%)</title><rect x="637.8" y="2099.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.8" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (4 samples, 0.14%)</title><rect x="639.4" y="2131.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.4" y="2142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.14%)</title><rect x="639.4" y="2115.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.4" y="2126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.14%)</title><rect x="639.4" y="2099.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.4" y="2110.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.14%)</title><rect x="639.4" y="2083.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.4" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (198 samples, 6.71%)</title><rect x="641.0" y="2147.0" width="79.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.0" y="2158.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (198 samples, 6.71%)</title><rect x="641.0" y="2131.0" width="79.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.0" y="2142.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (196 samples, 6.65%)</title><rect x="641.8" y="2115.0" width="78.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.8" y="2126.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (125 samples, 4.24%)</title><rect x="642.6" y="2099.0" width="50.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.6" y="2110.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (3 samples, 0.10%)</title><rect x="643.0" y="2083.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="646.0" y="2094.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="643.8" y="2067.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="646.8" y="2078.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="643.8" y="2051.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.8" y="2062.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="643.8" y="2035.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="646.8" y="2046.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="643.8" y="2019.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.8" y="2030.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="643.8" y="2003.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="646.8" y="2014.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="643.8" y="1987.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.8" y="1998.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="643.8" y="1971.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="646.8" y="1982.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 4.04%)</title><rect x="644.2" y="2083.0" width="47.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="647.2" y="2094.0">[unk..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="644.2" y="2067.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="647.2" y="2078.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="644.6" y="2067.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="647.6" y="2078.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="644.6" y="2051.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="647.6" y="2062.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="644.6" y="2035.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.6" y="2046.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="644.6" y="2019.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="647.6" y="2030.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="644.6" y="2003.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="647.6" y="2014.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="644.6" y="1987.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="647.6" y="1998.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="644.6" y="1971.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="647.6" y="1982.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="644.6" y="1955.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.6" y="1966.0"></text>
</g>
<g>
<title>epoll_wait (117 samples, 3.97%)</title><rect x="645.0" y="2067.0" width="46.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="648.0" y="2078.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 3.83%)</title><rect x="646.6" y="2051.0" width="45.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="649.6" y="2062.0">entr..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="646.6" y="2035.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="649.6" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (112 samples, 3.80%)</title><rect x="647.0" y="2035.0" width="44.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="650.0" y="2046.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (93 samples, 3.15%)</title><rect x="654.6" y="2019.0" width="37.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="657.6" y="2030.0">__x..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="654.6" y="2003.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="657.6" y="2014.0"></text>
</g>
<g>
<title>do_epoll_wait (90 samples, 3.05%)</title><rect x="655.0" y="2003.0" width="36.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="658.0" y="2014.0">do_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.07%)</title><rect x="655.0" y="1987.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="658.0" y="1998.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="655.0" y="1971.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="658.0" y="1982.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="655.4" y="1955.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="658.4" y="1966.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="655.8" y="1987.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="658.8" y="1998.0"></text>
</g>
<g>
<title>ep_poll (83 samples, 2.81%)</title><rect x="656.2" y="1987.0" width="33.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="659.2" y="1998.0">ep..</text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.07%)</title><rect x="662.2" y="1971.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="665.2" y="1982.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (33 samples, 1.12%)</title><rect x="663.0" y="1971.0" width="13.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="666.0" y="1982.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="669.4" y="1955.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.4" y="1966.0"></text>
</g>
<g>
<title>ep_send_events_proc (15 samples, 0.51%)</title><rect x="669.8" y="1955.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.8" y="1966.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (11 samples, 0.37%)</title><rect x="671.0" y="1939.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.0" y="1950.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.03%)</title><rect x="673.4" y="1923.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="676.4" y="1934.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.14%)</title><rect x="673.8" y="1923.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="676.8" y="1934.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="675.0" y="1907.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="678.0" y="1918.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.03%)</title><rect x="675.4" y="1939.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="678.4" y="1950.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="675.8" y="1955.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="678.8" y="1966.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="676.2" y="1971.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.2" y="1982.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="676.6" y="1971.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.6" y="1982.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.07%)</title><rect x="677.0" y="1971.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="680.0" y="1982.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.07%)</title><rect x="677.8" y="1971.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.8" y="1982.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (21 samples, 0.71%)</title><rect x="678.6" y="1971.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="681.6" y="1982.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (21 samples, 0.71%)</title><rect x="678.6" y="1955.0" width="8.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="681.6" y="1966.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (12 samples, 0.41%)</title><rect x="678.6" y="1939.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="681.6" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.34%)</title><rect x="679.0" y="1923.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="682.0" y="1934.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.21 (1 samples, 0.03%)</title><rect x="683.0" y="1923.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="686.0" y="1934.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.07%)</title><rect x="683.4" y="1939.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="686.4" y="1950.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="683.4" y="1923.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="686.4" y="1934.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.24%)</title><rect x="684.2" y="1939.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="687.2" y="1950.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.24%)</title><rect x="684.2" y="1923.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="687.2" y="1934.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.17%)</title><rect x="685.0" y="1907.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.0" y="1918.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.10%)</title><rect x="685.0" y="1891.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.0" y="1902.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.10%)</title><rect x="685.0" y="1875.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="688.0" y="1886.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.10%)</title><rect x="685.0" y="1859.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="688.0" y="1870.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.10%)</title><rect x="685.0" y="1843.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="688.0" y="1854.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.10%)</title><rect x="685.0" y="1827.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="688.0" y="1838.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.10%)</title><rect x="685.0" y="1811.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="688.0" y="1822.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="685.0" y="1795.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="688.0" y="1806.0"></text>
</g>
<g>
<title>put_task_stack (2 samples, 0.07%)</title><rect x="686.2" y="1891.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.2" y="1902.0"></text>
</g>
<g>
<title>account_kernel_stack (2 samples, 0.07%)</title><rect x="686.2" y="1875.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="689.2" y="1886.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="687.0" y="1971.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.0" y="1982.0"></text>
</g>
<g>
<title>select_estimate_accuracy (4 samples, 0.14%)</title><rect x="687.4" y="1971.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="690.4" y="1982.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="688.6" y="1955.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="691.6" y="1966.0"></text>
</g>
<g>
<title>set_normalized_timespec64 (1 samples, 0.03%)</title><rect x="689.0" y="1971.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="692.0" y="1982.0"></text>
</g>
<g>
<title>fput (3 samples, 0.10%)</title><rect x="689.4" y="1987.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.4" y="1998.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="690.6" y="1987.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="693.6" y="1998.0"></text>
</g>
<g>
<title>fput (2 samples, 0.07%)</title><rect x="691.0" y="2003.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="694.0" y="2014.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.07%)</title><rect x="691.8" y="2083.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="694.8" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (52 samples, 1.76%)</title><rect x="692.6" y="2099.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.6" y="2110.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.10%)</title><rect x="692.6" y="2083.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.6" y="2094.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.10%)</title><rect x="692.6" y="2067.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.6" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (44 samples, 1.49%)</title><rect x="693.8" y="2083.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.8" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (43 samples, 1.46%)</title><rect x="694.2" y="2067.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.2" y="2078.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="2051.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="698.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="2035.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="698.0" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="2019.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="698.0" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="2003.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="698.0" y="2014.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1987.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="698.0" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1971.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="698.0" y="1982.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1955.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="698.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1939.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="698.0" y="1950.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1923.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="698.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1907.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="698.0" y="1918.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1891.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="698.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1875.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="698.0" y="1886.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1859.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="698.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1843.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="698.0" y="1854.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1827.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="698.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1811.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="698.0" y="1822.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1795.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="698.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1779.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="698.0" y="1790.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1763.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="698.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1747.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="698.0" y="1758.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1731.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="698.0" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1715.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="698.0" y="1726.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1699.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="698.0" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1683.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="698.0" y="1694.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1667.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="698.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1651.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="698.0" y="1662.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1635.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="698.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1619.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="698.0" y="1630.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1603.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="698.0" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1587.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="698.0" y="1598.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1571.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="698.0" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1555.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="698.0" y="1566.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1539.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="698.0" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1523.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="698.0" y="1534.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1507.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="698.0" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1491.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="698.0" y="1502.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1475.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="698.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1459.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="698.0" y="1470.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1443.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="698.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1427.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="698.0" y="1438.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1411.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="698.0" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1395.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="698.0" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1379.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="698.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1363.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="698.0" y="1374.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1347.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="698.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1331.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="698.0" y="1342.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1315.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="698.0" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1299.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="698.0" y="1310.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1283.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="698.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1267.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="698.0" y="1278.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1251.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="698.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1235.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="698.0" y="1246.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1219.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="698.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1203.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="698.0" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1187.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="698.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1171.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="698.0" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1155.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="698.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1139.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="698.0" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1123.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="698.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1107.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="698.0" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1091.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="698.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1075.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="698.0" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1059.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="698.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1043.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="698.0" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="1027.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="698.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="1011.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="698.0" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="995.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="698.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="979.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="698.0" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="963.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="698.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="947.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="698.0" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="931.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="698.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="915.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="698.0" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="899.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="698.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="883.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="698.0" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="867.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="698.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="851.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="698.0" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="835.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="698.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="819.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="698.0" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="803.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="698.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="787.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="698.0" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="771.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="698.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="755.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="698.0" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="739.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="698.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="723.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="698.0" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="707.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="698.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="691.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="698.0" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="675.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="698.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="659.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="698.0" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="643.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="698.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="627.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="698.0" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="611.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="698.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="595.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="698.0" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="579.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="698.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="563.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="698.0" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="547.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="698.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="531.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="698.0" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="515.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="698.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="499.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="698.0" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="483.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="698.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="467.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="698.0" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="451.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="698.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="435.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="698.0" y="446.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="419.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="698.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="403.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="698.0" y="414.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="387.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="698.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="371.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="698.0" y="382.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="355.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="698.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="339.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="698.0" y="350.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="323.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="698.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="307.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="698.0" y="318.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="291.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="698.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="275.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="698.0" y="286.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="259.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="698.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="243.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="698.0" y="254.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.07%)</title><rect x="695.0" y="227.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="698.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="695.0" y="211.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="698.0" y="222.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="695.0" y="195.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="698.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="695.0" y="179.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="698.0" y="190.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="695.0" y="163.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="698.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="695.0" y="147.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="698.0" y="158.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.03%)</title><rect x="695.0" y="131.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="698.0" y="142.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="695.0" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.0" y="126.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="695.0" y="99.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.0" y="110.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="695.0" y="83.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="698.0" y="94.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="695.0" y="67.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="698.0" y="78.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="695.0" y="51.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="698.0" y="62.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="695.0" y="35.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="698.0" y="46.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.03%)</title><rect x="695.4" y="195.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="698.4" y="206.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="695.4" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="698.4" y="190.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="695.4" y="163.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="698.4" y="174.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="695.4" y="147.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="698.4" y="158.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="695.4" y="131.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="698.4" y="142.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="695.4" y="115.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="698.4" y="126.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="695.4" y="99.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="698.4" y="110.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="695.4" y="83.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="698.4" y="94.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="695.4" y="67.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="698.4" y="78.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.03%)</title><rect x="695.4" y="51.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="698.4" y="62.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="695.4" y="35.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="698.4" y="46.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.25%)</title><rect x="695.8" y="2051.0" width="14.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="698.8" y="2062.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="695.8" y="2035.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="698.8" y="2046.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.07%)</title><rect x="695.8" y="2019.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="698.8" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="695.8" y="2003.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="698.8" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="695.8" y="1987.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="698.8" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.07%)</title><rect x="695.8" y="1971.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.8" y="1982.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.07%)</title><rect x="695.8" y="1955.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="698.8" y="1966.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.07%)</title><rect x="695.8" y="1939.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="698.8" y="1950.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.03%)</title><rect x="695.8" y="1923.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="698.8" y="1934.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="695.8" y="1907.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="698.8" y="1918.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="695.8" y="1891.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="698.8" y="1902.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="695.8" y="1875.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="698.8" y="1886.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="695.8" y="1859.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.8" y="1870.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="695.8" y="1843.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="698.8" y="1854.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="696.2" y="1923.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="699.2" y="1934.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="696.2" y="1907.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="699.2" y="1918.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="696.2" y="1891.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="699.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.12%)</title><rect x="696.6" y="2035.0" width="13.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="699.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.54%)</title><rect x="696.6" y="2019.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="699.6" y="2030.0"></text>
</g>
<g>
<title>__GI___libc_read (15 samples, 0.51%)</title><rect x="696.6" y="2003.0" width="6.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="699.6" y="2014.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.44%)</title><rect x="697.4" y="1987.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="700.4" y="1998.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.44%)</title><rect x="697.4" y="1971.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="700.4" y="1982.0"></text>
</g>
<g>
<title>__x64_sys_read (11 samples, 0.37%)</title><rect x="697.8" y="1955.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="700.8" y="1966.0"></text>
</g>
<g>
<title>ksys_read (11 samples, 0.37%)</title><rect x="697.8" y="1939.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="700.8" y="1950.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.37%)</title><rect x="697.8" y="1923.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="700.8" y="1934.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.37%)</title><rect x="697.8" y="1907.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.8" y="1918.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.37%)</title><rect x="697.8" y="1891.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="700.8" y="1902.0"></text>
</g>
<g>
<title>pipe_read (11 samples, 0.37%)</title><rect x="697.8" y="1875.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="700.8" y="1886.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.10%)</title><rect x="698.2" y="1859.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="701.2" y="1870.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.10%)</title><rect x="698.2" y="1843.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="701.2" y="1854.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="698.2" y="1827.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.2" y="1838.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.03%)</title><rect x="699.4" y="1859.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="702.4" y="1870.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="699.8" y="1859.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="702.8" y="1870.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.03%)</title><rect x="699.8" y="1843.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="702.8" y="1854.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.03%)</title><rect x="700.2" y="1859.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="703.2" y="1870.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.14%)</title><rect x="700.6" y="1859.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="703.6" y="1870.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.07%)</title><rect x="700.6" y="1843.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="703.6" y="1854.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.07%)</title><rect x="700.6" y="1827.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="703.6" y="1838.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="701.0" y="1811.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.0" y="1822.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="701.4" y="1843.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.4" y="1854.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.03%)</title><rect x="701.8" y="1843.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.8" y="1854.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="701.8" y="1827.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="704.8" y="1838.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="702.2" y="1955.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.2" y="1966.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="702.6" y="2003.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="705.6" y="2014.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="702.6" y="1987.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="705.6" y="1998.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="702.6" y="1971.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="705.6" y="1982.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="702.6" y="1955.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.6" y="1966.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="702.6" y="1939.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="705.6" y="1950.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="702.6" y="1923.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="705.6" y="1934.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="702.6" y="1907.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="705.6" y="1918.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="702.6" y="1891.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="705.6" y="1902.0"></text>
</g>
<g>
<title>__GI___libc_read (17 samples, 0.58%)</title><rect x="703.0" y="2019.0" width="6.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="706.0" y="2030.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.58%)</title><rect x="703.0" y="2003.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="706.0" y="2014.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.58%)</title><rect x="703.0" y="1987.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="706.0" y="1998.0"></text>
</g>
<g>
<title>__x64_sys_read (11 samples, 0.37%)</title><rect x="705.4" y="1971.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="708.4" y="1982.0"></text>
</g>
<g>
<title>ksys_read (11 samples, 0.37%)</title><rect x="705.4" y="1955.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.4" y="1966.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.07%)</title><rect x="705.4" y="1939.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="708.4" y="1950.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="705.4" y="1923.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="708.4" y="1934.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="705.8" y="1907.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.8" y="1918.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.31%)</title><rect x="706.2" y="1939.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="709.2" y="1950.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.20%)</title><rect x="706.2" y="1923.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="709.2" y="1934.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.20%)</title><rect x="706.2" y="1907.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="709.2" y="1918.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.07%)</title><rect x="706.6" y="1891.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="709.6" y="1902.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="707.0" y="1875.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="710.0" y="1886.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="707.0" y="1859.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="710.0" y="1870.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="707.0" y="1843.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="710.0" y="1854.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="707.0" y="1827.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="710.0" y="1838.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="707.0" y="1811.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="710.0" y="1822.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="707.0" y="1795.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.0" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="707.0" y="1779.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.0" y="1790.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.10%)</title><rect x="707.4" y="1891.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="710.4" y="1902.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.07%)</title><rect x="707.8" y="1875.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="710.8" y="1886.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.07%)</title><rect x="707.8" y="1859.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.8" y="1870.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.10%)</title><rect x="708.6" y="1923.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="711.6" y="1934.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.10%)</title><rect x="708.6" y="1907.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="711.6" y="1918.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.07%)</title><rect x="709.0" y="1891.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="712.0" y="1902.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.07%)</title><rect x="709.0" y="1875.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.0" y="1886.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="709.4" y="1859.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="712.4" y="1870.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.07%)</title><rect x="709.8" y="2035.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="712.8" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="709.8" y="2019.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="712.8" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="709.8" y="2003.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="712.8" y="2014.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="710.2" y="1987.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="713.2" y="1998.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="710.2" y="1971.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="713.2" y="1982.0"></text>
</g>
<g>
<title>__GI___libc_read (2 samples, 0.07%)</title><rect x="710.6" y="2051.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="713.6" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.17%)</title><rect x="711.4" y="2083.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.4" y="2094.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="711.8" y="2067.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.8" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="711.8" y="2051.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.8" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="711.8" y="2035.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.8" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (3 samples, 0.10%)</title><rect x="712.2" y="2067.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.2" y="2078.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="712.6" y="2051.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="715.6" y="2062.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="712.6" y="2035.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="715.6" y="2046.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="712.6" y="2019.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.6" y="2030.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="712.6" y="2003.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="715.6" y="2014.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="712.6" y="1987.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.6" y="1998.0"></text>
</g>
<g>
<title>rb_free_rcu (1 samples, 0.03%)</title><rect x="712.6" y="1971.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="715.6" y="1982.0"></text>
</g>
<g>
<title>rb_free (1 samples, 0.03%)</title><rect x="712.6" y="1955.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="715.6" y="1966.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="712.6" y="1939.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="715.6" y="1950.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (1 samples, 0.03%)</title><rect x="713.0" y="2051.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.0" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.03%)</title><rect x="713.0" y="2035.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.0" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (7 samples, 0.24%)</title><rect x="713.4" y="2099.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.4" y="2110.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.03%)</title><rect x="713.4" y="2083.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.4" y="2094.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.03%)</title><rect x="713.4" y="2067.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.4" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.registeredEvents (6 samples, 0.20%)</title><rect x="713.8" y="2083.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.8" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.03%)</title><rect x="715.8" y="2067.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.8" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.03%)</title><rect x="716.2" y="2099.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.2" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.03%)</title><rect x="716.2" y="2083.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.2" y="2094.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="716.2" y="2067.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.2" y="2078.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="716.2" y="2051.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.2" y="2062.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="716.2" y="2035.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.2" y="2046.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.14%)</title><rect x="716.6" y="2099.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.6" y="2110.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (3 samples, 0.10%)</title><rect x="717.0" y="2083.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.0" y="2094.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.10%)</title><rect x="717.0" y="2067.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.0" y="2078.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="717.8" y="2051.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.8" y="2062.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (5 samples, 0.17%)</title><rect x="718.2" y="2099.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.2" y="2110.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.10%)</title><rect x="718.6" y="2083.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="721.6" y="2094.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="719.8" y="2083.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="722.8" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (18 samples, 0.61%)</title><rect x="720.2" y="2147.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.2" y="2158.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (18 samples, 0.61%)</title><rect x="720.2" y="2131.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.2" y="2142.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (18 samples, 0.61%)</title><rect x="720.2" y="2115.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.2" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (13 samples, 0.44%)</title><rect x="721.0" y="2099.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.0" y="2110.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.03%)</title><rect x="721.0" y="2083.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="724.0" y="2094.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.34%)</title><rect x="721.4" y="2083.0" width="4.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="724.4" y="2094.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="721.4" y="2067.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="724.4" y="2078.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.31%)</title><rect x="721.8" y="2067.0" width="3.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="724.8" y="2078.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="721.8" y="2051.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="724.8" y="2062.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="721.8" y="2035.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="724.8" y="2046.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="721.8" y="2019.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="724.8" y="2030.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="721.8" y="2003.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="724.8" y="2014.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="721.8" y="1987.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="724.8" y="1998.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="721.8" y="1971.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="724.8" y="1982.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="721.8" y="1955.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="724.8" y="1966.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.27%)</title><rect x="722.2" y="2051.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="725.2" y="2062.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.27%)</title><rect x="722.2" y="2035.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="725.2" y="2046.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.14%)</title><rect x="723.8" y="2019.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.8" y="2030.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.10%)</title><rect x="723.8" y="2003.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="726.8" y="2014.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="723.8" y="1987.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="726.8" y="1998.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="723.8" y="1971.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="726.8" y="1982.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="723.8" y="1955.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.8" y="1966.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.07%)</title><rect x="724.2" y="1987.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="727.2" y="1998.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (2 samples, 0.07%)</title><rect x="724.2" y="1971.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="727.2" y="1982.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.07%)</title><rect x="724.2" y="1955.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="727.2" y="1966.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.03%)</title><rect x="724.2" y="1939.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="727.2" y="1950.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="724.2" y="1923.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="727.2" y="1934.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="724.2" y="1907.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="727.2" y="1918.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="724.6" y="1939.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="727.6" y="1950.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="725.0" y="2003.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="728.0" y="2014.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="725.4" y="2083.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="728.4" y="2094.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="725.8" y="2083.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="728.8" y="2094.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.07%)</title><rect x="726.2" y="2099.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.2" y="2110.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="726.2" y="2083.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.2" y="2094.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.07%)</title><rect x="726.2" y="2067.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.2" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="727.0" y="2099.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.0" y="2110.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.03%)</title><rect x="727.0" y="2083.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.0" y="2094.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.03%)</title><rect x="727.0" y="2067.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.0" y="2078.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (6 samples, 0.20%)</title><rect x="727.4" y="2147.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.4" y="2158.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (6 samples, 0.20%)</title><rect x="727.4" y="2131.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.4" y="2142.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.20%)</title><rect x="727.4" y="2115.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.4" y="2126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.07%)</title><rect x="729.8" y="2147.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.8" y="2158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.07%)</title><rect x="729.8" y="2131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.8" y="2142.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.07%)</title><rect x="729.8" y="2115.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.8" y="2126.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="729.8" y="2099.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="732.8" y="2110.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="729.8" y="2083.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="732.8" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="729.8" y="2067.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="732.8" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="729.8" y="2051.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="732.8" y="2062.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="729.8" y="2035.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="732.8" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="729.8" y="2019.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="732.8" y="2030.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="729.8" y="2003.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="732.8" y="2014.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="729.8" y="1987.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="732.8" y="1998.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="729.8" y="1971.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="732.8" y="1982.0"></text>
</g>
<g>
<title>MasterFreeRegionListMtSafeChecker::check() (1 samples, 0.03%)</title><rect x="729.8" y="1955.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="732.8" y="1966.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="730.2" y="2099.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.2" y="2110.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="730.2" y="2083.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.2" y="2094.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="730.6" y="2147.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="733.6" y="2158.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="730.6" y="2131.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="733.6" y="2142.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="730.6" y="2115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="733.6" y="2126.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,067 samples, 36.18%)</title><rect x="731.0" y="2163.0" width="427.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.0" y="2174.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="732.6" y="2147.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="735.6" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.03%)</title><rect x="733.0" y="2147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="736.0" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.03%)</title><rect x="733.4" y="2147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.4" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.03%)</title><rect x="733.4" y="2131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.4" y="2142.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="733.4" y="2115.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.4" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 1.05%)</title><rect x="733.8" y="2147.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.8" y="2158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (29 samples, 0.98%)</title><rect x="734.6" y="2131.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.6" y="2142.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.92%)</title><rect x="734.6" y="2115.0" width="10.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="737.6" y="2126.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="734.6" y="2099.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="737.6" y="2110.0"></text>
</g>
<g>
<title>epoll_wait (26 samples, 0.88%)</title><rect x="735.0" y="2099.0" width="10.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="738.0" y="2110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.85%)</title><rect x="735.4" y="2083.0" width="10.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.4" y="2094.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.85%)</title><rect x="735.4" y="2067.0" width="10.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="738.4" y="2078.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (24 samples, 0.81%)</title><rect x="735.8" y="2051.0" width="9.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.8" y="2062.0"></text>
</g>
<g>
<title>do_epoll_wait (24 samples, 0.81%)</title><rect x="735.8" y="2035.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="738.8" y="2046.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="735.8" y="2019.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.8" y="2030.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="735.8" y="2003.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="738.8" y="2014.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.10%)</title><rect x="735.8" y="1987.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="738.8" y="1998.0"></text>
</g>
<g>
<title>ep_poll (21 samples, 0.71%)</title><rect x="737.0" y="2019.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="740.0" y="2030.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (11 samples, 0.37%)</title><rect x="738.6" y="2003.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.6" y="2014.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.31%)</title><rect x="739.4" y="1987.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.4" y="1998.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (6 samples, 0.20%)</title><rect x="740.2" y="1971.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="743.2" y="1982.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.17%)</title><rect x="740.6" y="1955.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="743.6" y="1966.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="742.2" y="1939.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="745.2" y="1950.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="742.6" y="1971.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.6" y="1982.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.20%)</title><rect x="743.0" y="2003.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="746.0" y="2014.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="743.0" y="1987.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.0" y="1998.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.17%)</title><rect x="743.4" y="1987.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.4" y="1998.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.17%)</title><rect x="743.4" y="1971.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="746.4" y="1982.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.17%)</title><rect x="743.4" y="1955.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="746.4" y="1966.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.14%)</title><rect x="743.8" y="1939.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="746.8" y="1950.0"></text>
</g>
<g>
<title>put_task_stack (1 samples, 0.03%)</title><rect x="745.0" y="1923.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="748.0" y="1934.0"></text>
</g>
<g>
<title>account_kernel_stack (1 samples, 0.03%)</title><rect x="745.0" y="1907.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="748.0" y="1918.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="745.4" y="2115.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="748.4" y="2126.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="745.8" y="2115.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="748.8" y="2126.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,029 samples, 34.89%)</title><rect x="746.2" y="2147.0" width="411.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.2" y="2158.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,028 samples, 34.86%)</title><rect x="746.6" y="2131.0" width="411.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.6" y="2142.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (895 samples, 30.35%)</title><rect x="747.0" y="2115.0" width="358.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.0" y="2126.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (872 samples, 29.57%)</title><rect x="747.4" y="2099.0" width="349.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.4" y="2110.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (871 samples, 29.54%)</title><rect x="747.9" y="2083.0" width="348.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.9" y="2094.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (861 samples, 29.20%)</title><rect x="747.9" y="2067.0" width="344.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.9" y="2078.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="748.3" y="2051.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.3" y="2062.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.17%)</title><rect x="748.7" y="2051.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.7" y="2062.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.17%)</title><rect x="748.7" y="2035.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.7" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="749.5" y="2019.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.5" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="749.5" y="2003.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.5" y="2014.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="749.9" y="2019.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="752.9" y="2030.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="750.3" y="2019.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.3" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="750.3" y="2003.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.3" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="750.3" y="1987.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.3" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="750.3" y="1971.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.3" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (854 samples, 28.96%)</title><rect x="750.7" y="2051.0" width="341.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.7" y="2062.0">ru/mail/polis/service/codearound/RepliServiceI..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.17%)</title><rect x="751.1" y="2035.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.1" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="751.1" y="2019.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.1" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="751.1" y="2003.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.1" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="751.9" y="2019.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.9" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="751.9" y="2003.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.9" y="2014.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="751.9" y="1987.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="754.9" y="1998.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="751.9" y="1971.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="754.9" y="1982.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.invokeHandlerByMethod (2 samples, 0.07%)</title><rect x="752.3" y="2019.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.3" y="2030.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="752.7" y="2003.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="755.7" y="2014.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="752.7" y="1987.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="755.7" y="1998.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="752.7" y="1971.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="755.7" y="1982.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="752.7" y="1955.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="755.7" y="1966.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="752.7" y="1939.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="755.7" y="1950.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="752.7" y="1923.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="755.7" y="1934.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="752.7" y="1907.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="755.7" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.getNodes (2 samples, 0.07%)</title><rect x="753.1" y="2035.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.1" y="2046.0"></text>
</g>
<g>
<title>java/util/Set.of (2 samples, 0.07%)</title><rect x="753.1" y="2019.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.1" y="2030.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (2 samples, 0.07%)</title><rect x="753.1" y="2003.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.1" y="2014.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (2 samples, 0.07%)</title><rect x="753.1" y="1987.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.1" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="753.5" y="1971.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="753.5" y="1955.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.5" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.invokeHandlerByMethod (846 samples, 28.69%)</title><rect x="753.9" y="2035.0" width="338.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.9" y="2046.0">ru/mail/polis/service/codearound/ReplicationLs..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (1 samples, 0.03%)</title><rect x="753.9" y="2019.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.9" y="2030.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.03%)</title><rect x="753.9" y="2003.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.9" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (845 samples, 28.65%)</title><rect x="754.3" y="2019.0" width="338.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.3" y="2030.0">ru/mail/polis/service/codearound/ReplicationLs..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (1 samples, 0.03%)</title><rect x="755.9" y="2003.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.9" y="2014.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="756.3" y="2003.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.3" y="2014.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="756.3" y="1987.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.3" y="1998.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="756.3" y="1971.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.3" y="1982.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="756.3" y="1955.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.3" y="1966.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="756.3" y="1939.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.3" y="1950.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (3 samples, 0.10%)</title><rect x="756.7" y="2003.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.7" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.17%)</title><rect x="757.9" y="2003.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="760.9" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.14%)</title><rect x="757.9" y="1987.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.9" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="758.7" y="1971.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="761.7" y="1982.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="759.1" y="1971.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="762.1" y="1982.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="759.5" y="1987.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="759.5" y="1971.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="759.5" y="1955.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.5" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1 samples, 0.03%)</title><rect x="759.9" y="2003.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.9" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (3 samples, 0.10%)</title><rect x="760.3" y="2003.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.3" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (2 samples, 0.07%)</title><rect x="760.7" y="1987.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.7" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (1 samples, 0.03%)</title><rect x="761.1" y="1971.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.1" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.07%)</title><rect x="761.5" y="2003.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.5" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.07%)</title><rect x="761.5" y="1987.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.5" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (6 samples, 0.20%)</title><rect x="762.3" y="2003.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.3" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (6 samples, 0.20%)</title><rect x="762.3" y="1987.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.3" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.14%)</title><rect x="763.1" y="1971.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (69 samples, 2.34%)</title><rect x="764.7" y="2003.0" width="27.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.7" y="2014.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (69 samples, 2.34%)</title><rect x="764.7" y="1987.0" width="27.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.7" y="1998.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (69 samples, 2.34%)</title><rect x="764.7" y="1971.0" width="27.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.7" y="1982.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (69 samples, 2.34%)</title><rect x="764.7" y="1955.0" width="27.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.7" y="1966.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="765.5" y="1939.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.5" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="765.5" y="1923.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (50 samples, 1.70%)</title><rect x="765.9" y="1939.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.9" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.27%)</title><rect x="765.9" y="1923.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.9" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.07%)</title><rect x="765.9" y="1907.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.9" y="1918.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="766.3" y="1891.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.3" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="766.3" y="1875.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.3" y="1886.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="766.3" y="1859.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.3" y="1870.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="766.3" y="1843.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.3" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.20%)</title><rect x="766.7" y="1907.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.7" y="1918.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="767.1" y="1891.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.1" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.14%)</title><rect x="767.5" y="1891.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.5" y="1902.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.10%)</title><rect x="767.5" y="1875.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.5" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="767.9" y="1859.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.9" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="768.3" y="1859.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.3" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="768.3" y="1843.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.3" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="768.3" y="1827.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.3" y="1838.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.03%)</title><rect x="768.3" y="1811.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.3" y="1822.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.03%)</title><rect x="768.7" y="1875.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="771.7" y="1886.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.03%)</title><rect x="768.7" y="1859.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.7" y="1870.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="768.7" y="1843.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.7" y="1854.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="768.7" y="1827.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.7" y="1838.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.10%)</title><rect x="769.1" y="1923.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.1" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.10%)</title><rect x="769.1" y="1907.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.1" y="1918.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="769.1" y="1891.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="772.1" y="1902.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.07%)</title><rect x="769.5" y="1891.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.5" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.07%)</title><rect x="769.5" y="1875.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.5" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (1 samples, 0.03%)</title><rect x="769.5" y="1859.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.5" y="1870.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.03%)</title><rect x="769.5" y="1843.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.5" y="1854.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.03%)</title><rect x="769.5" y="1827.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.5" y="1838.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (1 samples, 0.03%)</title><rect x="769.5" y="1811.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.5" y="1822.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="769.5" y="1795.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.5" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="769.5" y="1779.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.5" y="1790.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="769.5" y="1763.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.5" y="1774.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="769.5" y="1747.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.5" y="1758.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="769.5" y="1731.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.5" y="1742.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="769.9" y="1859.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.9" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (38 samples, 1.29%)</title><rect x="770.3" y="1923.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.3" y="1934.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (38 samples, 1.29%)</title><rect x="770.3" y="1907.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="773.3" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="770.3" y="1891.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.3" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="770.3" y="1875.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.3" y="1886.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (37 samples, 1.25%)</title><rect x="770.7" y="1891.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.7" y="1902.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.07%)</title><rect x="770.7" y="1875.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="773.7" y="1886.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (23 samples, 0.78%)</title><rect x="771.5" y="1875.0" width="9.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="774.5" y="1886.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.03%)</title><rect x="772.7" y="1859.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="775.7" y="1870.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.10%)</title><rect x="773.1" y="1859.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="776.1" y="1870.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="773.9" y="1843.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="776.9" y="1854.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="774.3" y="1859.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="777.3" y="1870.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.07%)</title><rect x="774.7" y="1859.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="777.7" y="1870.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="775.5" y="1859.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="778.5" y="1870.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.03%)</title><rect x="775.9" y="1859.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="778.9" y="1870.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.14%)</title><rect x="776.3" y="1859.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="779.3" y="1870.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="777.1" y="1843.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="780.1" y="1854.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="777.5" y="1843.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="780.5" y="1854.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="777.5" y="1827.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="780.5" y="1838.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (7 samples, 0.24%)</title><rect x="777.9" y="1859.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="780.9" y="1870.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.14%)</title><rect x="778.7" y="1843.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="781.7" y="1854.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="779.9" y="1827.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="782.9" y="1838.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="780.3" y="1843.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="783.3" y="1854.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="780.3" y="1827.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="783.3" y="1838.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="780.3" y="1811.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="783.3" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="780.3" y="1795.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="783.3" y="1806.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.03%)</title><rect x="780.7" y="1875.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="783.7" y="1886.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.03%)</title><rect x="781.1" y="1875.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="784.1" y="1886.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="781.5" y="1875.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="784.5" y="1886.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.31%)</title><rect x="781.9" y="1875.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.9" y="1886.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.31%)</title><rect x="781.9" y="1859.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.9" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="781.9" y="1843.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.9" y="1854.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="781.9" y="1827.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.9" y="1838.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="781.9" y="1811.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.9" y="1822.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="781.9" y="1795.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="784.9" y="1806.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="781.9" y="1779.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="784.9" y="1790.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="781.9" y="1763.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="784.9" y="1774.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="781.9" y="1747.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="784.9" y="1758.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="781.9" y="1731.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="784.9" y="1742.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="781.9" y="1715.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="784.9" y="1726.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (8 samples, 0.27%)</title><rect x="782.3" y="1843.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.3" y="1854.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.10%)</title><rect x="782.3" y="1827.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.3" y="1838.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.10%)</title><rect x="782.3" y="1811.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.3" y="1822.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.10%)</title><rect x="782.3" y="1795.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.3" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.10%)</title><rect x="782.3" y="1779.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="785.3" y="1790.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="782.7" y="1763.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.7" y="1774.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.07%)</title><rect x="782.7" y="1747.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.7" y="1758.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="783.1" y="1731.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="786.1" y="1742.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="783.1" y="1715.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="786.1" y="1726.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="783.1" y="1699.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="786.1" y="1710.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="783.1" y="1683.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="786.1" y="1694.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="783.1" y="1667.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="786.1" y="1678.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="783.1" y="1651.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="786.1" y="1662.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="783.1" y="1635.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.1" y="1646.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.17%)</title><rect x="783.5" y="1827.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.5" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.17%)</title><rect x="783.5" y="1811.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.5" y="1822.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.17%)</title><rect x="783.5" y="1795.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.5" y="1806.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.17%)</title><rect x="783.5" y="1779.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.5" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.03%)</title><rect x="785.5" y="1923.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (7 samples, 0.24%)</title><rect x="785.9" y="1939.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.9" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (7 samples, 0.24%)</title><rect x="785.9" y="1923.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.9" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (7 samples, 0.24%)</title><rect x="785.9" y="1907.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.9" y="1918.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.14%)</title><rect x="785.9" y="1891.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.9" y="1902.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (4 samples, 0.14%)</title><rect x="785.9" y="1875.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.9" y="1886.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (4 samples, 0.14%)</title><rect x="785.9" y="1859.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.9" y="1870.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.10%)</title><rect x="787.5" y="1891.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.5" y="1902.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (3 samples, 0.10%)</title><rect x="787.5" y="1875.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.5" y="1886.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (3 samples, 0.10%)</title><rect x="787.5" y="1859.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.5" y="1870.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (3 samples, 0.10%)</title><rect x="787.5" y="1843.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (3 samples, 0.10%)</title><rect x="787.5" y="1827.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.5" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (3 samples, 0.10%)</title><rect x="787.5" y="1811.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.5" y="1822.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (3 samples, 0.10%)</title><rect x="787.5" y="1795.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.5" y="1806.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (3 samples, 0.10%)</title><rect x="787.5" y="1779.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.5" y="1790.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (3 samples, 0.10%)</title><rect x="787.5" y="1763.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.5" y="1774.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (3 samples, 0.10%)</title><rect x="787.5" y="1747.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.5" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (9 samples, 0.31%)</title><rect x="788.7" y="1939.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.7" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (7 samples, 0.24%)</title><rect x="788.7" y="1923.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.7" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.24%)</title><rect x="788.7" y="1907.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.7" y="1918.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.03%)</title><rect x="789.1" y="1891.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="792.1" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.17%)</title><rect x="789.5" y="1891.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.5" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="789.5" y="1875.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.5" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="789.5" y="1859.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.5" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.14%)</title><rect x="789.9" y="1875.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.14%)</title><rect x="789.9" y="1859.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.14%)</title><rect x="789.9" y="1843.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.9" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.14%)</title><rect x="789.9" y="1827.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.9" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.14%)</title><rect x="789.9" y="1811.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.9" y="1822.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="789.9" y="1795.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="792.9" y="1806.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="789.9" y="1779.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="792.9" y="1790.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="790.3" y="1779.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="793.3" y="1790.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="790.7" y="1795.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="793.7" y="1806.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="791.1" y="1779.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="794.1" y="1790.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="791.1" y="1763.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="794.1" y="1774.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="791.1" y="1747.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="794.1" y="1758.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="791.1" y="1731.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="794.1" y="1742.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="791.1" y="1715.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="794.1" y="1726.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="791.1" y="1699.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.1" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.07%)</title><rect x="791.5" y="1923.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.5" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.07%)</title><rect x="791.5" y="1907.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="791.5" y="1891.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.5" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="791.5" y="1875.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.5" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.03%)</title><rect x="791.9" y="1891.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.9" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (11 samples, 0.37%)</title><rect x="792.3" y="2003.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.3" y="2014.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (9 samples, 0.31%)</title><rect x="793.1" y="1987.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.1" y="1998.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.31%)</title><rect x="793.1" y="1971.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.1" y="1982.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.31%)</title><rect x="793.1" y="1955.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.1" y="1966.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="793.9" y="1939.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="796.9" y="1950.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="793.9" y="1923.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="796.9" y="1934.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="793.9" y="1907.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="796.9" y="1918.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="793.9" y="1891.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="796.9" y="1902.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="793.9" y="1875.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="796.9" y="1886.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="794.3" y="1939.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="797.3" y="1950.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.17%)</title><rect x="794.7" y="1939.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.7" y="1950.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (4 samples, 0.14%)</title><rect x="794.7" y="1923.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.7" y="1934.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.14%)</title><rect x="794.7" y="1907.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.7" y="1918.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.14%)</title><rect x="794.7" y="1891.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.7" y="1902.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="794.7" y="1875.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="797.7" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (2 samples, 0.07%)</title><rect x="795.1" y="1875.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.1" y="1886.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.07%)</title><rect x="795.1" y="1859.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.1" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1043351526.test (1 samples, 0.03%)</title><rect x="795.5" y="1843.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.5" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.03%)</title><rect x="795.5" y="1827.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.5" y="1838.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="795.5" y="1811.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.5" y="1822.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.03%)</title><rect x="795.5" y="1795.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.5" y="1806.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.03%)</title><rect x="795.5" y="1779.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.5" y="1790.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="795.5" y="1763.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.5" y="1774.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="795.5" y="1747.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.5" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1043351526.test (1 samples, 0.03%)</title><rect x="795.9" y="1875.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.9" y="1886.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.03%)</title><rect x="796.3" y="1923.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.3" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.03%)</title><rect x="796.7" y="2003.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execLocalRequest (703 samples, 23.84%)</title><rect x="797.1" y="2003.0" width="281.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.1" y="2014.0">ru/mail/polis/service/codearound/Futur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (703 samples, 23.84%)</title><rect x="797.1" y="1987.0" width="281.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.1" y="1998.0">java/util/concurrent/CompletableFuture..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (703 samples, 23.84%)</title><rect x="797.1" y="1971.0" width="281.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.1" y="1982.0">java/util/concurrent/CompletableFuture..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (695 samples, 23.57%)</title><rect x="800.3" y="1955.0" width="278.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.3" y="1966.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="800.3" y="1939.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="803.3" y="1950.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="800.3" y="1923.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="803.3" y="1934.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="800.3" y="1907.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="803.3" y="1918.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="800.3" y="1891.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="803.3" y="1902.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="800.3" y="1875.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="803.3" y="1886.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (107 samples, 3.63%)</title><rect x="800.7" y="1939.0" width="42.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.7" y="1950.0">java..</text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="800.7" y="1923.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="800.7" y="1907.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.7" y="1918.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="800.7" y="1891.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="803.7" y="1902.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="800.7" y="1875.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="803.7" y="1886.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="800.7" y="1859.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="803.7" y="1870.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="800.7" y="1843.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="803.7" y="1854.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="800.7" y="1827.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="803.7" y="1838.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.14%)</title><rect x="801.1" y="1923.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.1" y="1934.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.10%)</title><rect x="801.5" y="1907.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.5" y="1918.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.10%)</title><rect x="801.5" y="1891.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.5" y="1902.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.10%)</title><rect x="801.5" y="1875.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.5" y="1886.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (102 samples, 3.46%)</title><rect x="802.7" y="1923.0" width="40.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.7" y="1934.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (102 samples, 3.46%)</title><rect x="802.7" y="1907.0" width="40.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.7" y="1918.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.setPriority (13 samples, 0.44%)</title><rect x="802.7" y="1891.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.7" y="1902.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.03%)</title><rect x="803.5" y="1875.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="806.5" y="1886.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (5 samples, 0.17%)</title><rect x="803.9" y="1875.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.9" y="1886.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (5 samples, 0.17%)</title><rect x="803.9" y="1859.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="806.9" y="1870.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="803.9" y="1843.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="806.9" y="1854.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="804.3" y="1843.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="807.3" y="1854.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="804.3" y="1827.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="807.3" y="1838.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="804.3" y="1811.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="807.3" y="1822.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.10%)</title><rect x="804.7" y="1843.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="807.7" y="1854.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (3 samples, 0.10%)</title><rect x="805.9" y="1875.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.9" y="1886.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="807.1" y="1875.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="810.1" y="1886.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="807.5" y="1875.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="810.5" y="1886.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (89 samples, 3.02%)</title><rect x="807.9" y="1891.0" width="35.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.9" y="1902.0">jav..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (7 samples, 0.24%)</title><rect x="808.3" y="1875.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.3" y="1886.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (6 samples, 0.20%)</title><rect x="808.3" y="1859.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.3" y="1870.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="810.7" y="1859.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.7" y="1870.0"></text>
</g>
<g>
<title>JVM_GetInheritedAccessControlContext (1 samples, 0.03%)</title><rect x="810.7" y="1843.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="813.7" y="1854.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (81 samples, 2.75%)</title><rect x="811.1" y="1875.0" width="32.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.1" y="1886.0">ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (6 samples, 0.20%)</title><rect x="811.5" y="1859.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="814.5" y="1870.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="813.9" y="1859.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="816.9" y="1870.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (1 samples, 0.03%)</title><rect x="814.3" y="1859.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="817.3" y="1870.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (66 samples, 2.24%)</title><rect x="814.7" y="1859.0" width="26.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="817.7" y="1870.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.17%)</title><rect x="823.1" y="1843.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="826.1" y="1854.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.07%)</title><rect x="825.1" y="1843.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="828.1" y="1854.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.03%)</title><rect x="825.9" y="1843.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="828.9" y="1854.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.07%)</title><rect x="826.3" y="1843.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="829.3" y="1854.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="827.1" y="1843.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="830.1" y="1854.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.03%)</title><rect x="827.5" y="1843.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="830.5" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.24%)</title><rect x="827.9" y="1843.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="830.9" y="1854.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.10%)</title><rect x="828.3" y="1827.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="831.3" y="1838.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.10%)</title><rect x="828.3" y="1811.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="831.3" y="1822.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.03%)</title><rect x="828.3" y="1795.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="831.3" y="1806.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.07%)</title><rect x="828.7" y="1795.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="831.7" y="1806.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (2 samples, 0.07%)</title><rect x="829.5" y="1827.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="832.5" y="1838.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="829.9" y="1811.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="832.9" y="1822.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="830.3" y="1827.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="833.3" y="1838.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="830.7" y="1843.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="833.7" y="1854.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="831.1" y="1843.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="834.1" y="1854.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (2 samples, 0.07%)</title><rect x="831.5" y="1843.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="834.5" y="1854.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="832.3" y="1843.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="835.3" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="832.3" y="1827.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.3" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="832.3" y="1811.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="835.3" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="832.3" y="1795.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="835.3" y="1806.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="832.3" y="1779.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="835.3" y="1790.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="832.3" y="1763.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.3" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="832.3" y="1747.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.3" y="1758.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.03%)</title><rect x="832.7" y="1843.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="835.7" y="1854.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (13 samples, 0.44%)</title><rect x="833.1" y="1843.0" width="5.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="836.1" y="1854.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (12 samples, 0.41%)</title><rect x="833.5" y="1827.0" width="4.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="836.5" y="1838.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (3 samples, 0.10%)</title><rect x="833.5" y="1811.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="836.5" y="1822.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (8 samples, 0.27%)</title><rect x="834.7" y="1811.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="837.7" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (7 samples, 0.24%)</title><rect x="835.1" y="1795.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="838.1" y="1806.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="837.9" y="1811.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="840.9" y="1822.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (2 samples, 0.07%)</title><rect x="838.3" y="1843.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="841.3" y="1854.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="838.3" y="1827.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="841.3" y="1838.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.07%)</title><rect x="838.3" y="1811.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="841.3" y="1822.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="838.3" y="1795.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="841.3" y="1806.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="838.7" y="1795.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="841.7" y="1806.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.17%)</title><rect x="839.1" y="1843.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="842.1" y="1854.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.14%)</title><rect x="839.5" y="1827.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="842.5" y="1838.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.14%)</title><rect x="839.5" y="1811.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="842.5" y="1822.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="840.7" y="1795.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="843.7" y="1806.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::JvmtiVMObjectAllocEventCollector() (1 samples, 0.03%)</title><rect x="841.1" y="1859.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="844.1" y="1870.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.07%)</title><rect x="841.5" y="1859.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="844.5" y="1870.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="842.3" y="1859.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="845.3" y="1870.0"></text>
</g>
<g>
<title>java_lang_Class::protection_domain(oopDesc*) (1 samples, 0.03%)</title><rect x="842.7" y="1859.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="845.7" y="1870.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="843.1" y="1859.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="846.1" y="1870.0"></text>
</g>
<g>
<title>java/lang/Thread.start (587 samples, 19.91%)</title><rect x="843.5" y="1939.0" width="234.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.5" y="1950.0">java/lang/Thread.start</text>
</g>
<g>
<title>java/lang/Thread.start0 (586 samples, 19.87%)</title><rect x="843.9" y="1923.0" width="234.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.9" y="1934.0">java/lang/Thread.start0</text>
</g>
<g>
<title>JVM_StartThread (402 samples, 13.63%)</title><rect x="844.3" y="1907.0" width="160.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="847.3" y="1918.0">JVM_StartThread</text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (35 samples, 1.19%)</title><rect x="845.1" y="1891.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="848.1" y="1902.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned long) (1 samples, 0.03%)</title><rect x="845.1" y="1875.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="848.1" y="1886.0"></text>
</g>
<g>
<title>Arena::operator new(unsigned long, MemoryType) (1 samples, 0.03%)</title><rect x="845.5" y="1875.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="848.5" y="1886.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (1 samples, 0.03%)</title><rect x="845.9" y="1875.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="848.9" y="1886.0"></text>
</g>
<g>
<title>sem_init@plt (1 samples, 0.03%)</title><rect x="845.9" y="1859.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="848.9" y="1870.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="845.9" y="1843.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="848.9" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="845.9" y="1827.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="848.9" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="845.9" y="1811.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="848.9" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="845.9" y="1795.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="848.9" y="1806.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="845.9" y="1779.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="848.9" y="1790.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.03%)</title><rect x="845.9" y="1763.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="848.9" y="1774.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.03%)</title><rect x="845.9" y="1747.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="848.9" y="1758.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.03%)</title><rect x="845.9" y="1731.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="848.9" y="1742.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.03%)</title><rect x="845.9" y="1715.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="848.9" y="1726.0"></text>
</g>
<g>
<title>JavaThread::initialize() (2 samples, 0.07%)</title><rect x="846.3" y="1875.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="849.3" y="1886.0"></text>
</g>
<g>
<title>Parker::Allocate(JavaThread*) (2 samples, 0.07%)</title><rect x="846.3" y="1859.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="849.3" y="1870.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (1 samples, 0.03%)</title><rect x="847.1" y="1875.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="850.1" y="1886.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="847.1" y="1859.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="850.1" y="1870.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="847.1" y="1843.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.1" y="1854.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="847.1" y="1827.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="850.1" y="1838.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="847.1" y="1811.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="850.1" y="1822.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="847.1" y="1795.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="850.1" y="1806.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="847.1" y="1779.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="850.1" y="1790.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="847.1" y="1763.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="850.1" y="1774.0"></text>
</g>
<g>
<title>security_task_free (1 samples, 0.03%)</title><rect x="847.1" y="1747.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="850.1" y="1758.0"></text>
</g>
<g>
<title>apparmor_task_free (1 samples, 0.03%)</title><rect x="847.1" y="1731.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.1" y="1742.0"></text>
</g>
<g>
<title>Thread::Thread() (28 samples, 0.95%)</title><rect x="847.5" y="1875.0" width="11.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="850.5" y="1886.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (8 samples, 0.27%)</title><rect x="847.5" y="1859.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="850.5" y="1870.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (8 samples, 0.27%)</title><rect x="847.5" y="1843.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="850.5" y="1854.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.10%)</title><rect x="848.7" y="1827.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="851.7" y="1838.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="849.9" y="1827.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="852.9" y="1838.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.03%)</title><rect x="850.3" y="1827.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="853.3" y="1838.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned long) (3 samples, 0.10%)</title><rect x="850.7" y="1859.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="853.7" y="1870.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="851.5" y="1843.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.5" y="1854.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="851.5" y="1827.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="854.5" y="1838.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (1 samples, 0.03%)</title><rect x="851.9" y="1859.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="854.9" y="1870.0"></text>
</g>
<g>
<title>JfrTraceId::assign_thread_id() (1 samples, 0.03%)</title><rect x="851.9" y="1843.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.9" y="1854.0"></text>
</g>
<g>
<title>JfrTraceId::assign_thread_id() (1 samples, 0.03%)</title><rect x="852.3" y="1859.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="855.3" y="1870.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (4 samples, 0.14%)</title><rect x="852.7" y="1859.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="855.7" y="1870.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, ResourceObj::allocation_type, MemoryType) (1 samples, 0.03%)</title><rect x="854.3" y="1859.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="857.3" y="1870.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="854.3" y="1843.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="857.3" y="1854.0"></text>
</g>
<g>
<title>Thread::SpinAcquire(int volatile*, char const*) (1 samples, 0.03%)</title><rect x="854.7" y="1859.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="857.7" y="1870.0"></text>
</g>
<g>
<title>Thread::SpinRelease(int volatile*) (1 samples, 0.03%)</title><rect x="855.1" y="1859.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="858.1" y="1870.0"></text>
</g>
<g>
<title>ThreadHeapSampler::pick_next_sample(unsigned long) (2 samples, 0.07%)</title><rect x="855.5" y="1859.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="858.5" y="1870.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="856.3" y="1859.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="859.3" y="1870.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (1 samples, 0.03%)</title><rect x="856.7" y="1859.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="859.7" y="1870.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="857.1" y="1859.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="860.1" y="1870.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="857.1" y="1843.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="860.1" y="1854.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="857.1" y="1827.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="860.1" y="1838.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="857.9" y="1859.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="860.9" y="1870.0"></text>
</g>
<g>
<title>os::random() (1 samples, 0.03%)</title><rect x="858.3" y="1859.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="861.3" y="1870.0"></text>
</g>
<g>
<title>ThreadHeapSampler::pick_next_sample(unsigned long) (1 samples, 0.03%)</title><rect x="858.7" y="1875.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="861.7" y="1886.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.07%)</title><rect x="859.1" y="1891.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="862.1" y="1902.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (87 samples, 2.95%)</title><rect x="859.9" y="1891.0" width="34.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="862.9" y="1902.0">Ja..</text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (6 samples, 0.20%)</title><rect x="860.3" y="1875.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="863.3" y="1886.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="861.1" y="1859.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="864.1" y="1870.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.03%)</title><rect x="861.5" y="1859.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="864.5" y="1870.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (1 samples, 0.03%)</title><rect x="861.5" y="1843.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="864.5" y="1854.0"></text>
</g>
<g>
<title>os::elapsedTime() (2 samples, 0.07%)</title><rect x="861.9" y="1859.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="864.9" y="1870.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (76 samples, 2.58%)</title><rect x="862.7" y="1875.0" width="30.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="865.7" y="1886.0">Th..</text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="863.9" y="1859.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="866.9" y="1870.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.03%)</title><rect x="863.9" y="1843.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="866.9" y="1854.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (57 samples, 1.93%)</title><rect x="864.3" y="1859.0" width="22.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="867.3" y="1870.0">T..</text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, ResourceObj::allocation_type, MemoryType) (2 samples, 0.07%)</title><rect x="885.5" y="1843.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="888.5" y="1854.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (2 samples, 0.07%)</title><rect x="885.5" y="1827.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="888.5" y="1838.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (1 samples, 0.03%)</title><rect x="886.3" y="1843.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="889.3" y="1854.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (1 samples, 0.03%)</title><rect x="886.3" y="1827.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="889.3" y="1838.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="886.7" y="1843.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.7" y="1854.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="886.7" y="1827.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="889.7" y="1838.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="886.7" y="1811.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.7" y="1822.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="887.1" y="1859.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="890.1" y="1870.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.07%)</title><rect x="887.5" y="1859.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="890.5" y="1870.0"></text>
</g>
<g>
<title>__memset_erms (12 samples, 0.41%)</title><rect x="888.3" y="1859.0" width="4.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="891.3" y="1870.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (3 samples, 0.10%)</title><rect x="893.1" y="1875.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="896.1" y="1886.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.03%)</title><rect x="894.3" y="1875.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="897.3" y="1886.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (1 samples, 0.03%)</title><rect x="894.7" y="1891.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="897.7" y="1902.0"></text>
</g>
<g>
<title>Monitor::lock() (23 samples, 0.78%)</title><rect x="895.1" y="1891.0" width="9.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="898.1" y="1902.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (18 samples, 0.61%)</title><rect x="895.9" y="1875.0" width="7.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="898.9" y="1886.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (1 samples, 0.03%)</title><rect x="895.9" y="1859.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="898.9" y="1870.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="895.9" y="1843.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="898.9" y="1854.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.24%)</title><rect x="896.3" y="1859.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="899.3" y="1870.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.27%)</title><rect x="899.1" y="1859.0" width="3.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="902.1" y="1870.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.24%)</title><rect x="899.5" y="1843.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="902.5" y="1854.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.24%)</title><rect x="899.5" y="1827.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="902.5" y="1838.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="901.1" y="1811.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="904.1" y="1822.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.10%)</title><rect x="901.1" y="1795.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="904.1" y="1806.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="901.5" y="1779.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="904.5" y="1790.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="901.9" y="1779.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="904.9" y="1790.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="902.3" y="1859.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="905.3" y="1870.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.03%)</title><rect x="902.7" y="1859.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="905.7" y="1870.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.10%)</title><rect x="903.1" y="1875.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="906.1" y="1886.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="904.3" y="1891.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="907.3" y="1902.0"></text>
</g>
<g>
<title>Thread::Thread() (1 samples, 0.03%)</title><rect x="904.7" y="1891.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="907.7" y="1902.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (3 samples, 0.10%)</title><rect x="905.1" y="1891.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="908.1" y="1902.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="905.9" y="1875.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="908.9" y="1886.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="906.3" y="1891.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="909.3" y="1902.0"></text>
</g>
<g>
<title>__pthread_attr_setdetachstate (1 samples, 0.03%)</title><rect x="906.7" y="1891.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="909.7" y="1902.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="907.1" y="1891.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="910.1" y="1902.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="907.5" y="1891.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="910.5" y="1902.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="907.9" y="1891.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="910.9" y="1902.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (232 samples, 7.87%)</title><rect x="908.3" y="1891.0" width="92.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="911.3" y="1902.0">os::create_..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (21 samples, 0.71%)</title><rect x="909.1" y="1875.0" width="8.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="912.1" y="1886.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (19 samples, 0.64%)</title><rect x="909.5" y="1859.0" width="7.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="912.5" y="1870.0"></text>
</g>
<g>
<title>__lll_unlock_wake (14 samples, 0.47%)</title><rect x="910.7" y="1843.0" width="5.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="913.7" y="1854.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.37%)</title><rect x="911.9" y="1827.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="914.9" y="1838.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.37%)</title><rect x="911.9" y="1811.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="914.9" y="1822.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.10%)</title><rect x="914.7" y="1795.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="917.7" y="1806.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="915.1" y="1779.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="918.1" y="1790.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="915.5" y="1763.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="918.5" y="1774.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="915.9" y="1795.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="918.9" y="1806.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="915.9" y="1779.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="918.9" y="1790.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="915.9" y="1763.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="918.9" y="1774.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="915.9" y="1747.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="918.9" y="1758.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="915.9" y="1731.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="918.9" y="1742.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="915.9" y="1715.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="918.9" y="1726.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="915.9" y="1699.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="918.9" y="1710.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="916.3" y="1843.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="919.3" y="1854.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="916.7" y="1843.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="919.7" y="1854.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="916.7" y="1827.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="919.7" y="1838.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="916.7" y="1811.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.7" y="1822.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="916.7" y="1795.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="919.7" y="1806.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="916.7" y="1779.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="919.7" y="1790.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="916.7" y="1763.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="919.7" y="1774.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="916.7" y="1747.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.7" y="1758.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="916.7" y="1731.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="919.7" y="1742.0"></text>
</g>
<g>
<title>free_task (1 samples, 0.03%)</title><rect x="916.7" y="1715.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="919.7" y="1726.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="916.7" y="1699.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="919.7" y="1710.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.03%)</title><rect x="917.1" y="1859.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="920.1" y="1870.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (5 samples, 0.17%)</title><rect x="917.5" y="1875.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="920.5" y="1886.0"></text>
</g>
<g>
<title>OSThread::pd_initialize() (4 samples, 0.14%)</title><rect x="917.5" y="1859.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="920.5" y="1870.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (4 samples, 0.14%)</title><rect x="917.5" y="1843.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="920.5" y="1854.0"></text>
</g>
<g>
<title>__GI_sigemptyset (1 samples, 0.03%)</title><rect x="919.1" y="1859.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="922.1" y="1870.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (2 samples, 0.07%)</title><rect x="919.5" y="1875.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="922.5" y="1886.0"></text>
</g>
<g>
<title>__clone (184 samples, 6.24%)</title><rect x="920.3" y="1875.0" width="73.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="923.3" y="1886.0">__clone</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (177 samples, 6.00%)</title><rect x="921.5" y="1859.0" width="70.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="924.5" y="1870.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (177 samples, 6.00%)</title><rect x="921.5" y="1843.0" width="70.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="924.5" y="1854.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_clone (167 samples, 5.66%)</title><rect x="925.5" y="1827.0" width="66.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.5" y="1838.0">__x64_s..</text>
</g>
<g>
<title>_do_fork (167 samples, 5.66%)</title><rect x="925.5" y="1811.0" width="66.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="928.5" y="1822.0">_do_fork</text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.03%)</title><rect x="926.3" y="1795.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.3" y="1806.0"></text>
</g>
<g>
<title>copy_process.part.34 (129 samples, 4.37%)</title><rect x="926.7" y="1795.0" width="51.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="929.7" y="1806.0">copy_..</text>
</g>
<g>
<title>__delayacct_tsk_init (2 samples, 0.07%)</title><rect x="931.1" y="1779.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.1" y="1790.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="931.1" y="1763.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.1" y="1774.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="931.5" y="1763.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="934.5" y="1774.0"></text>
</g>
<g>
<title>__get_vm_area_node (1 samples, 0.03%)</title><rect x="931.9" y="1779.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="934.9" y="1790.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="932.3" y="1779.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="935.3" y="1790.0"></text>
</g>
<g>
<title>__vmalloc_node_range (36 samples, 1.22%)</title><rect x="932.7" y="1779.0" width="14.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="935.7" y="1790.0"></text>
</g>
<g>
<title>__get_vm_area_node (12 samples, 0.41%)</title><rect x="933.5" y="1763.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="936.5" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="933.5" y="1747.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="936.5" y="1758.0"></text>
</g>
<g>
<title>alloc_vmap_area (10 samples, 0.34%)</title><rect x="933.9" y="1747.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.9" y="1758.0"></text>
</g>
<g>
<title>__insert_vmap_area (5 samples, 0.17%)</title><rect x="934.3" y="1731.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="937.3" y="1742.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="935.9" y="1715.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="938.9" y="1726.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="936.3" y="1731.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="939.3" y="1742.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (1 samples, 0.03%)</title><rect x="936.7" y="1731.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="939.7" y="1742.0"></text>
</g>
<g>
<title>rb_prev (2 samples, 0.07%)</title><rect x="937.1" y="1731.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.1" y="1742.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (1 samples, 0.03%)</title><rect x="937.9" y="1747.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="940.9" y="1758.0"></text>
</g>
<g>
<title>__kmalloc_node (1 samples, 0.03%)</title><rect x="938.3" y="1763.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.3" y="1774.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="938.7" y="1763.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.7" y="1774.0"></text>
</g>
<g>
<title>alloc_pages_current (15 samples, 0.51%)</title><rect x="939.1" y="1763.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.1" y="1774.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (15 samples, 0.51%)</title><rect x="939.1" y="1747.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="942.1" y="1758.0"></text>
</g>
<g>
<title>clear_page_erms (7 samples, 0.24%)</title><rect x="939.5" y="1731.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="942.5" y="1742.0"></text>
</g>
<g>
<title>get_page_from_freelist (7 samples, 0.24%)</title><rect x="942.3" y="1731.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="945.3" y="1742.0"></text>
</g>
<g>
<title>alloc_vmap_area (1 samples, 0.03%)</title><rect x="945.1" y="1763.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="948.1" y="1774.0"></text>
</g>
<g>
<title>map_vm_area (1 samples, 0.03%)</title><rect x="945.5" y="1763.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="948.5" y="1774.0"></text>
</g>
<g>
<title>vmap_page_range_noflush (1 samples, 0.03%)</title><rect x="945.5" y="1747.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="948.5" y="1758.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="945.9" y="1763.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.9" y="1774.0"></text>
</g>
<g>
<title>setup_vmalloc_vm (1 samples, 0.03%)</title><rect x="946.3" y="1763.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.3" y="1774.0"></text>
</g>
<g>
<title>vmap_page_range_noflush (1 samples, 0.03%)</title><rect x="946.7" y="1763.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="949.7" y="1774.0"></text>
</g>
<g>
<title>account_kernel_stack (1 samples, 0.03%)</title><rect x="947.1" y="1779.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.1" y="1790.0"></text>
</g>
<g>
<title>alloc_pid (10 samples, 0.34%)</title><rect x="947.5" y="1779.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="950.5" y="1790.0"></text>
</g>
<g>
<title>__radix_tree_preload (1 samples, 0.03%)</title><rect x="949.5" y="1763.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="952.5" y="1774.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.07%)</title><rect x="949.9" y="1763.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="952.9" y="1774.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="949.9" y="1747.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="952.9" y="1758.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.07%)</title><rect x="949.9" y="1731.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="952.9" y="1742.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.07%)</title><rect x="949.9" y="1715.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="952.9" y="1726.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="949.9" y="1699.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="952.9" y="1710.0"></text>
</g>
<g>
<title>rcu_cblist_dequeue (1 samples, 0.03%)</title><rect x="949.9" y="1683.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="952.9" y="1694.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="950.3" y="1699.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.3" y="1710.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="950.3" y="1683.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="953.3" y="1694.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="950.3" y="1667.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="953.3" y="1678.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.07%)</title><rect x="950.7" y="1763.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="953.7" y="1774.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.07%)</title><rect x="950.7" y="1747.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="953.7" y="1758.0"></text>
</g>
<g>
<title>arch_dup_task_struct (3 samples, 0.10%)</title><rect x="951.5" y="1779.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="954.5" y="1790.0"></text>
</g>
<g>
<title>fpu__copy (3 samples, 0.10%)</title><rect x="951.5" y="1763.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="954.5" y="1774.0"></text>
</g>
<g>
<title>arch_local_irq_enable (2 samples, 0.07%)</title><rect x="952.7" y="1779.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="955.7" y="1790.0"></text>
</g>
<g>
<title>audit_alloc (1 samples, 0.03%)</title><rect x="953.5" y="1779.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="956.5" y="1790.0"></text>
</g>
<g>
<title>cgroup_can_fork (3 samples, 0.10%)</title><rect x="953.9" y="1779.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.9" y="1790.0"></text>
</g>
<g>
<title>pids_can_fork (3 samples, 0.10%)</title><rect x="953.9" y="1763.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="956.9" y="1774.0"></text>
</g>
<g>
<title>cgroup_post_fork (7 samples, 0.24%)</title><rect x="955.1" y="1779.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.1" y="1790.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (4 samples, 0.14%)</title><rect x="956.3" y="1763.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="959.3" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.14%)</title><rect x="956.3" y="1747.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="959.3" y="1758.0"></text>
</g>
<g>
<title>copy_creds (1 samples, 0.03%)</title><rect x="957.9" y="1779.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="960.9" y="1790.0"></text>
</g>
<g>
<title>find_vm_area (2 samples, 0.07%)</title><rect x="958.3" y="1779.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="961.3" y="1790.0"></text>
</g>
<g>
<title>find_vmap_area (1 samples, 0.03%)</title><rect x="958.7" y="1763.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="961.7" y="1774.0"></text>
</g>
<g>
<title>freezer_fork (1 samples, 0.03%)</title><rect x="959.1" y="1779.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.1" y="1790.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="959.5" y="1779.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.5" y="1790.0"></text>
</g>
<g>
<title>get_random_u64 (10 samples, 0.34%)</title><rect x="959.9" y="1779.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="962.9" y="1790.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.17%)</title><rect x="963.9" y="1779.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="966.9" y="1790.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.10%)</title><rect x="964.3" y="1763.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="967.3" y="1774.0"></text>
</g>
<g>
<title>___slab_alloc (2 samples, 0.07%)</title><rect x="964.7" y="1747.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.7" y="1758.0"></text>
</g>
<g>
<title>new_slab (2 samples, 0.07%)</title><rect x="964.7" y="1731.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="967.7" y="1742.0"></text>
</g>
<g>
<title>get_random_u32 (1 samples, 0.03%)</title><rect x="965.1" y="1715.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="968.1" y="1726.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="965.5" y="1763.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="968.5" y="1774.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.03%)</title><rect x="965.9" y="1779.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="968.9" y="1790.0"></text>
</g>
<g>
<title>memcg_kmem_charge (1 samples, 0.03%)</title><rect x="966.3" y="1779.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="969.3" y="1790.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="966.3" y="1763.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="969.3" y="1774.0"></text>
</g>
<g>
<title>memcpy_erms (8 samples, 0.27%)</title><rect x="966.7" y="1779.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="969.7" y="1790.0"></text>
</g>
<g>
<title>perf_event_init_task (2 samples, 0.07%)</title><rect x="969.9" y="1779.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="972.9" y="1790.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="969.9" y="1763.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="972.9" y="1774.0"></text>
</g>
<g>
<title>perf_pin_task_context (1 samples, 0.03%)</title><rect x="970.3" y="1763.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="973.3" y="1774.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="970.3" y="1747.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="973.3" y="1758.0"></text>
</g>
<g>
<title>proc_fork_connector (1 samples, 0.03%)</title><rect x="970.7" y="1779.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="973.7" y="1790.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="971.1" y="1779.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="974.1" y="1790.0"></text>
</g>
<g>
<title>sched_fork (9 samples, 0.31%)</title><rect x="971.5" y="1779.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="974.5" y="1790.0"></text>
</g>
<g>
<title>__sched_fork (3 samples, 0.10%)</title><rect x="971.5" y="1763.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="974.5" y="1774.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="971.9" y="1747.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.9" y="1758.0"></text>
</g>
<g>
<title>init_numa_balancing (1 samples, 0.03%)</title><rect x="972.3" y="1747.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="975.3" y="1758.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.20%)</title><rect x="972.7" y="1763.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="975.7" y="1774.0"></text>
</g>
<g>
<title>security_task_alloc (6 samples, 0.20%)</title><rect x="975.1" y="1779.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="978.1" y="1790.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.03%)</title><rect x="975.9" y="1763.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="978.9" y="1774.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="976.3" y="1763.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="979.3" y="1774.0"></text>
</g>
<g>
<title>apparmor_task_alloc (2 samples, 0.07%)</title><rect x="976.7" y="1763.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="979.7" y="1774.0"></text>
</g>
<g>
<title>task_active_pid_ns (1 samples, 0.03%)</title><rect x="977.5" y="1779.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="980.5" y="1790.0"></text>
</g>
<g>
<title>user_disable_single_step (1 samples, 0.03%)</title><rect x="977.9" y="1779.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="980.9" y="1790.0"></text>
</g>
<g>
<title>memset_erms (9 samples, 0.31%)</title><rect x="978.3" y="1795.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="981.3" y="1806.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="981.5" y="1779.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="984.5" y="1790.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="981.5" y="1763.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="984.5" y="1774.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="981.5" y="1747.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="984.5" y="1758.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="981.5" y="1731.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="984.5" y="1742.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="981.5" y="1715.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="984.5" y="1726.0"></text>
</g>
<g>
<title>rb_free_rcu (1 samples, 0.03%)</title><rect x="981.5" y="1699.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.5" y="1710.0"></text>
</g>
<g>
<title>rb_free (1 samples, 0.03%)</title><rect x="981.5" y="1683.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="984.5" y="1694.0"></text>
</g>
<g>
<title>perf_mmap_free_page (1 samples, 0.03%)</title><rect x="981.5" y="1667.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.5" y="1678.0"></text>
</g>
<g>
<title>__free_pages (1 samples, 0.03%)</title><rect x="981.5" y="1651.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.5" y="1662.0"></text>
</g>
<g>
<title>free_unref_page (1 samples, 0.03%)</title><rect x="981.5" y="1635.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="984.5" y="1646.0"></text>
</g>
<g>
<title>proc_fork_connector (3 samples, 0.10%)</title><rect x="981.9" y="1795.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="984.9" y="1806.0"></text>
</g>
<g>
<title>wake_up_new_task (23 samples, 0.78%)</title><rect x="983.1" y="1795.0" width="9.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="986.1" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.78%)</title><rect x="983.1" y="1779.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="986.1" y="1790.0"></text>
</g>
<g>
<title>page_fault (4 samples, 0.14%)</title><rect x="992.3" y="1859.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="995.3" y="1870.0"></text>
</g>
<g>
<title>do_page_fault (4 samples, 0.14%)</title><rect x="992.3" y="1843.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="995.3" y="1854.0"></text>
</g>
<g>
<title>__do_page_fault (4 samples, 0.14%)</title><rect x="992.3" y="1827.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="995.3" y="1838.0"></text>
</g>
<g>
<title>handle_mm_fault (4 samples, 0.14%)</title><rect x="992.3" y="1811.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="995.3" y="1822.0"></text>
</g>
<g>
<title>__handle_mm_fault (4 samples, 0.14%)</title><rect x="992.3" y="1795.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.3" y="1806.0"></text>
</g>
<g>
<title>alloc_pages_vma (3 samples, 0.10%)</title><rect x="992.3" y="1779.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.3" y="1790.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.07%)</title><rect x="992.3" y="1763.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="995.3" y="1774.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="992.7" y="1747.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="995.7" y="1758.0"></text>
</g>
<g>
<title>should_fail_alloc_page (1 samples, 0.03%)</title><rect x="993.1" y="1763.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.1" y="1774.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.03%)</title><rect x="993.5" y="1779.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="996.5" y="1790.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.03%)</title><rect x="993.5" y="1763.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="996.5" y="1774.0"></text>
</g>
<g>
<title>try_charge (1 samples, 0.03%)</title><rect x="993.5" y="1747.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="996.5" y="1758.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.10%)</title><rect x="993.9" y="1875.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="996.9" y="1886.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="995.1" y="1875.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="998.1" y="1886.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="995.1" y="1859.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="998.1" y="1870.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="995.1" y="1843.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="998.1" y="1854.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="995.1" y="1827.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="998.1" y="1838.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="995.1" y="1811.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.1" y="1822.0"></text>
</g>
<g>
<title>rcu_cblist_dequeue (1 samples, 0.03%)</title><rect x="995.1" y="1795.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.1" y="1806.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (14 samples, 0.47%)</title><rect x="995.5" y="1875.0" width="5.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="998.5" y="1886.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.07%)</title><rect x="1000.3" y="1859.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1003.3" y="1870.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.07%)</title><rect x="1000.3" y="1843.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.3" y="1854.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.07%)</title><rect x="1000.3" y="1827.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1003.3" y="1838.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.07%)</title><rect x="1000.3" y="1811.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.3" y="1822.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.07%)</title><rect x="1000.3" y="1795.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1003.3" y="1806.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.03%)</title><rect x="1000.7" y="1779.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1003.7" y="1790.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="1000.7" y="1763.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1003.7" y="1774.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="1000.7" y="1747.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.7" y="1758.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (5 samples, 0.17%)</title><rect x="1001.1" y="1891.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1004.1" y="1902.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.07%)</title><rect x="1001.5" y="1875.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1004.5" y="1886.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="1002.3" y="1875.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1005.3" y="1886.0"></text>
</g>
<g>
<title>pthread_attr_destroy (2 samples, 0.07%)</title><rect x="1003.1" y="1891.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1006.1" y="1902.0"></text>
</g>
<g>
<title>pthread_attr_destroy@plt (1 samples, 0.03%)</title><rect x="1003.9" y="1891.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1006.9" y="1902.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (2 samples, 0.07%)</title><rect x="1004.3" y="1891.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1007.3" y="1902.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.07%)</title><rect x="1005.1" y="1907.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1008.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 2.27%)</title><rect x="1005.9" y="1907.0" width="26.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1008.9" y="1918.0">[..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="1005.9" y="1891.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1008.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="1005.9" y="1875.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1008.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1005.9" y="1859.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1008.9" y="1870.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.03%)</title><rect x="1005.9" y="1843.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1008.9" y="1854.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.03%)</title><rect x="1006.3" y="1859.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1009.3" y="1870.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="1006.7" y="1875.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1009.7" y="1886.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.17%)</title><rect x="1007.1" y="1891.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1010.1" y="1902.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.17%)</title><rect x="1009.1" y="1891.0" width="2.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1012.1" y="1902.0"></text>
</g>
<g>
<title>_int_malloc (8 samples, 0.27%)</title><rect x="1011.1" y="1891.0" width="3.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1014.1" y="1902.0"></text>
</g>
<g>
<title>malloc_consolidate (6 samples, 0.20%)</title><rect x="1014.3" y="1891.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1017.3" y="1902.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (40 samples, 1.36%)</title><rect x="1016.7" y="1891.0" width="16.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1019.7" y="1902.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.92%)</title><rect x="1021.9" y="1875.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1024.9" y="1886.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="1021.9" y="1859.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.9" y="1870.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.85%)</title><rect x="1022.7" y="1859.0" width="10.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1025.7" y="1870.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.34%)</title><rect x="1028.7" y="1843.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1031.7" y="1854.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.34%)</title><rect x="1028.7" y="1827.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1031.7" y="1838.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.31%)</title><rect x="1029.1" y="1811.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1032.1" y="1822.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.27%)</title><rect x="1029.1" y="1795.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.1" y="1806.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.24%)</title><rect x="1029.5" y="1779.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1032.5" y="1790.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.17%)</title><rect x="1030.3" y="1763.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1033.3" y="1774.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.10%)</title><rect x="1031.1" y="1747.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1034.1" y="1758.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="1032.3" y="1795.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1035.3" y="1806.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="1032.3" y="1779.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.3" y="1790.0"></text>
</g>
<g>
<title>_IO_default_xsputn (5 samples, 0.17%)</title><rect x="1032.7" y="1907.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1035.7" y="1918.0"></text>
</g>
<g>
<title>__GI___mmap64 (4 samples, 0.14%)</title><rect x="1034.7" y="1907.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1037.7" y="1918.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.14%)</title><rect x="1034.7" y="1891.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.7" y="1902.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.14%)</title><rect x="1034.7" y="1875.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.7" y="1886.0"></text>
</g>
<g>
<title>__x64_sys_mmap (3 samples, 0.10%)</title><rect x="1035.1" y="1859.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.1" y="1870.0"></text>
</g>
<g>
<title>ksys_mmap_pgoff (3 samples, 0.10%)</title><rect x="1035.1" y="1843.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1038.1" y="1854.0"></text>
</g>
<g>
<title>vm_mmap_pgoff (3 samples, 0.10%)</title><rect x="1035.1" y="1827.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1038.1" y="1838.0"></text>
</g>
<g>
<title>do_mmap (3 samples, 0.10%)</title><rect x="1035.1" y="1811.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1038.1" y="1822.0"></text>
</g>
<g>
<title>get_unmapped_area (2 samples, 0.07%)</title><rect x="1035.1" y="1795.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1038.1" y="1806.0"></text>
</g>
<g>
<title>arch_get_unmapped_area_topdown (2 samples, 0.07%)</title><rect x="1035.1" y="1779.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1038.1" y="1790.0"></text>
</g>
<g>
<title>unmapped_area_topdown (2 samples, 0.07%)</title><rect x="1035.1" y="1763.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1038.1" y="1774.0"></text>
</g>
<g>
<title>mmap_region (1 samples, 0.03%)</title><rect x="1035.9" y="1795.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1038.9" y="1806.0"></text>
</g>
<g>
<title>vma_merge (1 samples, 0.03%)</title><rect x="1035.9" y="1779.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.9" y="1790.0"></text>
</g>
<g>
<title>__vma_adjust (1 samples, 0.03%)</title><rect x="1035.9" y="1763.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1038.9" y="1774.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (9 samples, 0.31%)</title><rect x="1036.3" y="1907.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1039.3" y="1918.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.03%)</title><rect x="1036.3" y="1891.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1039.3" y="1902.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (7 samples, 0.24%)</title><rect x="1036.7" y="1891.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1039.7" y="1902.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (1 samples, 0.03%)</title><rect x="1039.5" y="1891.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1042.5" y="1902.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (2 samples, 0.07%)</title><rect x="1039.9" y="1907.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1042.9" y="1918.0"></text>
</g>
<g>
<title>__libc_free (5 samples, 0.17%)</title><rect x="1040.7" y="1907.0" width="2.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1043.7" y="1918.0"></text>
</g>
<g>
<title>__malloc (12 samples, 0.41%)</title><rect x="1042.8" y="1907.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1045.8" y="1918.0"></text>
</g>
<g>
<title>__pthread_cond_signal (50 samples, 1.70%)</title><rect x="1047.6" y="1907.0" width="20.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1050.6" y="1918.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 1.53%)</title><rect x="1049.6" y="1891.0" width="18.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1052.6" y="1902.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 1.53%)</title><rect x="1049.6" y="1875.0" width="18.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1052.6" y="1886.0"></text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 1.36%)</title><rect x="1051.6" y="1859.0" width="16.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1054.6" y="1870.0"></text>
</g>
<g>
<title>do_futex (39 samples, 1.32%)</title><rect x="1052.0" y="1843.0" width="15.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1055.0" y="1854.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 1.32%)</title><rect x="1052.0" y="1827.0" width="15.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1055.0" y="1838.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.10%)</title><rect x="1052.0" y="1811.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1055.0" y="1822.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="1052.0" y="1795.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.0" y="1806.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.07%)</title><rect x="1052.4" y="1795.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.4" y="1806.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 1.22%)</title><rect x="1053.2" y="1811.0" width="14.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1056.2" y="1822.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 1.22%)</title><rect x="1053.2" y="1795.0" width="14.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1056.2" y="1806.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 1.22%)</title><rect x="1053.2" y="1779.0" width="14.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1056.2" y="1790.0"></text>
</g>
<g>
<title>_int_malloc (25 samples, 0.85%)</title><rect x="1067.6" y="1907.0" width="10.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1070.6" y="1918.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (1 samples, 0.03%)</title><rect x="1077.6" y="1907.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.6" y="1918.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (1 samples, 0.03%)</title><rect x="1078.0" y="1907.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1081.0" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.setRequestPattern (35 samples, 1.19%)</title><rect x="1078.4" y="2003.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.4" y="2014.0"></text>
</g>
<g>
<title>java/net/URI.create (24 samples, 0.81%)</title><rect x="1078.4" y="1987.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.4" y="1998.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (24 samples, 0.81%)</title><rect x="1078.4" y="1971.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.4" y="1982.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (24 samples, 0.81%)</title><rect x="1078.4" y="1955.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.4" y="1966.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (4 samples, 0.14%)</title><rect x="1078.8" y="1939.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1081.8" y="1950.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.14%)</title><rect x="1078.8" y="1923.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.8" y="1934.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.14%)</title><rect x="1078.8" y="1907.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.8" y="1918.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (18 samples, 0.61%)</title><rect x="1080.4" y="1939.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1083.4" y="1950.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (12 samples, 0.41%)</title><rect x="1080.4" y="1923.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.4" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1080.8" y="1907.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1080.8" y="1891.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1080.8" y="1875.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1083.8" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (5 samples, 0.17%)</title><rect x="1081.2" y="1907.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.2" y="1918.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="1081.6" y="1891.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1084.6" y="1902.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="1081.6" y="1875.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.6" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.03%)</title><rect x="1081.6" y="1859.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1084.6" y="1870.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1081.6" y="1843.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1084.6" y="1854.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1081.6" y="1827.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1084.6" y="1838.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1081.6" y="1811.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1084.6" y="1822.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1081.6" y="1795.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1084.6" y="1806.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="1081.6" y="1779.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1084.6" y="1790.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.03%)</title><rect x="1081.6" y="1763.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1084.6" y="1774.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.03%)</title><rect x="1081.6" y="1747.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1084.6" y="1758.0"></text>
</g>
<g>
<title>refcount_dec_not_one (1 samples, 0.03%)</title><rect x="1081.6" y="1731.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.6" y="1742.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.07%)</title><rect x="1082.0" y="1891.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.0" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1082.0" y="1875.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1085.0" y="1886.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1082.0" y="1859.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.0" y="1870.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="1082.4" y="1875.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.4" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="1082.8" y="1891.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1085.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1082.8" y="1875.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.8" y="1886.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.17%)</title><rect x="1083.2" y="1907.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.2" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.14%)</title><rect x="1083.2" y="1891.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.2" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.14%)</title><rect x="1083.2" y="1875.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.2" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.07%)</title><rect x="1083.6" y="1859.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.6" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.03%)</title><rect x="1084.4" y="1859.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1084.8" y="1891.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1087.8" y="1902.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.20%)</title><rect x="1085.2" y="1923.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.2" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.20%)</title><rect x="1085.2" y="1907.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.2" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.20%)</title><rect x="1085.2" y="1891.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1088.2" y="1902.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.20%)</title><rect x="1085.2" y="1875.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.2" y="1886.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1087.2" y="1859.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.2" y="1870.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="1087.6" y="1939.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1090.6" y="1950.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (1 samples, 0.03%)</title><rect x="1088.0" y="1987.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1091.0" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.24%)</title><rect x="1088.4" y="1987.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.4" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.24%)</title><rect x="1088.4" y="1971.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.4" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (4 samples, 0.14%)</title><rect x="1088.4" y="1955.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.4" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1043351526.test (2 samples, 0.07%)</title><rect x="1088.4" y="1939.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1091.4" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.07%)</title><rect x="1088.4" y="1923.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.4" y="1934.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.07%)</title><rect x="1088.4" y="1907.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.4" y="1918.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.07%)</title><rect x="1088.4" y="1891.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.4" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.07%)</title><rect x="1088.4" y="1875.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1091.4" y="1886.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.07%)</title><rect x="1088.4" y="1859.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1091.4" y="1870.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.07%)</title><rect x="1088.4" y="1843.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="1088.8" y="1827.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.8" y="1838.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="1088.8" y="1811.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.8" y="1822.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="1088.8" y="1795.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.8" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.03%)</title><rect x="1089.2" y="1939.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.2" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 0.03%)</title><rect x="1089.6" y="1939.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.6" y="1950.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1089.6" y="1923.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1092.6" y="1934.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1089.6" y="1907.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1092.6" y="1918.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1089.6" y="1891.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1092.6" y="1902.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1089.6" y="1875.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1092.6" y="1886.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1089.6" y="1859.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1092.6" y="1870.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1089.6" y="1843.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1092.6" y="1854.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1089.6" y="1827.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1092.6" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.10%)</title><rect x="1090.0" y="1955.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.0" y="1966.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="1090.0" y="1939.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1093.0" y="1950.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1090.4" y="1939.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1093.4" y="1950.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1090.4" y="1923.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1093.4" y="1934.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1090.4" y="1907.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1093.4" y="1918.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1090.4" y="1891.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1093.4" y="1902.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="1090.8" y="1939.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.8" y="1950.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="1090.8" y="1923.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.8" y="1934.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="1090.8" y="1907.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="1090.8" y="1891.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.8" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.10%)</title><rect x="1091.2" y="1987.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.2" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.10%)</title><rect x="1091.2" y="1971.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.2" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.10%)</title><rect x="1091.2" y="1955.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.2" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.10%)</title><rect x="1091.2" y="1939.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.2" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.31%)</title><rect x="1092.4" y="2067.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.4" y="2078.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.31%)</title><rect x="1092.4" y="2051.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.4" y="2062.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1092.4" y="2035.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.4" y="2046.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.27%)</title><rect x="1092.8" y="2035.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.8" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.27%)</title><rect x="1092.8" y="2019.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.8" y="2030.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="1093.2" y="2003.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1096.2" y="2014.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (6 samples, 0.20%)</title><rect x="1093.6" y="2003.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.6" y="2014.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1095.6" y="1987.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1098.6" y="1998.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="1096.0" y="2067.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.0" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1096.0" y="2051.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.0" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1096.0" y="2035.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1099.0" y="2046.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1096.0" y="2019.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.0" y="2030.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1096.0" y="2003.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1099.0" y="2014.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1096.0" y="1987.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1099.0" y="1998.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1096.0" y="1971.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1099.0" y="1982.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1096.0" y="1955.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.0" y="1966.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="1096.0" y="1939.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1099.0" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.17%)</title><rect x="1096.4" y="2099.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.4" y="2110.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1096.4" y="2083.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.4" y="2094.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1096.4" y="2067.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.4" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1096.4" y="2051.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.4" y="2062.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1096.4" y="2035.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.4" y="2046.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="1096.8" y="2083.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.8" y="2094.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="1096.8" y="2067.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.8" y="2078.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="1098.0" y="2083.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.0" y="2094.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.10%)</title><rect x="1098.4" y="2099.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.4" y="2110.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.10%)</title><rect x="1098.4" y="2083.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.4" y="2094.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.07%)</title><rect x="1098.8" y="2067.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.8" y="2078.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.07%)</title><rect x="1098.8" y="2051.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.8" y="2062.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.17%)</title><rect x="1099.6" y="2099.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.6" y="2110.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.14%)</title><rect x="1100.0" y="2083.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.0" y="2094.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.14%)</title><rect x="1100.0" y="2067.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.0" y="2078.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.31%)</title><rect x="1101.6" y="2099.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1104.6" y="2110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.14%)</title><rect x="1103.6" y="2083.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.6" y="2094.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1104.8" y="2067.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.8" y="2078.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1104.8" y="2051.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.8" y="2062.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1104.8" y="2035.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.8" y="2046.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1104.8" y="2019.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1107.8" y="2030.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1104.8" y="2003.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1107.8" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (132 samples, 4.48%)</title><rect x="1105.2" y="2115.0" width="52.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.2" y="2126.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (129 samples, 4.37%)</title><rect x="1106.4" y="2099.0" width="51.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1109.4" y="2110.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.44%)</title><rect x="1106.8" y="2083.0" width="5.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1109.8" y="2094.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="1108.8" y="2067.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1111.8" y="2078.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.10%)</title><rect x="1109.2" y="2067.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1112.2" y="2078.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="1110.4" y="2067.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1113.4" y="2078.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="1110.4" y="2051.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1113.4" y="2062.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="1110.8" y="2051.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1113.8" y="2062.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.03%)</title><rect x="1111.2" y="2067.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1114.2" y="2078.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="1111.6" y="2067.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1114.6" y="2078.0"></text>
</g>
<g>
<title>__GI___recv (114 samples, 3.87%)</title><rect x="1112.0" y="2083.0" width="45.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1115.0" y="2094.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 3.59%)</title><rect x="1115.2" y="2067.0" width="42.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1118.2" y="2078.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="1115.2" y="2051.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1118.2" y="2062.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 3.56%)</title><rect x="1115.6" y="2051.0" width="42.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1118.6" y="2062.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (99 samples, 3.36%)</title><rect x="1118.0" y="2035.0" width="39.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1121.0" y="2046.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (98 samples, 3.32%)</title><rect x="1118.0" y="2019.0" width="39.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1121.0" y="2030.0">__s..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1118.8" y="2003.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1121.8" y="2014.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1118.8" y="1987.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1121.8" y="1998.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1118.8" y="1971.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1121.8" y="1982.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1118.8" y="1955.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1121.8" y="1966.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1118.8" y="1939.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1121.8" y="1950.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1118.8" y="1923.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1121.8" y="1934.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="1118.8" y="1907.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1121.8" y="1918.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="1118.8" y="1891.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1121.8" y="1902.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="1118.8" y="1875.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1121.8" y="1886.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1118.8" y="1859.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1121.8" y="1870.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1118.8" y="1843.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1121.8" y="1854.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1118.8" y="1827.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1121.8" y="1838.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1118.8" y="1811.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1121.8" y="1822.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="1118.8" y="1795.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1121.8" y="1806.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1118.8" y="1779.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1121.8" y="1790.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="1118.8" y="1763.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1121.8" y="1774.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.03%)</title><rect x="1119.2" y="2003.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1122.2" y="2014.0"></text>
</g>
<g>
<title>sock_recvmsg (91 samples, 3.09%)</title><rect x="1119.6" y="2003.0" width="36.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1122.6" y="2014.0">soc..</text>
</g>
<g>
<title>inet_recvmsg (88 samples, 2.98%)</title><rect x="1119.6" y="1987.0" width="35.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.6" y="1998.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (87 samples, 2.95%)</title><rect x="1120.0" y="1971.0" width="34.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1123.0" y="1982.0">tc..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="1122.0" y="1955.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.0" y="1966.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.10%)</title><rect x="1122.0" y="1939.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.0" y="1950.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="1122.0" y="1923.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.0" y="1934.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="1122.8" y="1923.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1125.8" y="1934.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="1122.8" y="1907.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.8" y="1918.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="1123.2" y="1955.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1126.2" y="1966.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1123.6" y="1955.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1126.6" y="1966.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="1124.0" y="1955.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1127.0" y="1966.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1124.0" y="1939.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1127.0" y="1950.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.44%)</title><rect x="1124.4" y="1955.0" width="5.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1127.4" y="1966.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.44%)</title><rect x="1124.4" y="1939.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1127.4" y="1950.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="1124.8" y="1923.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1127.8" y="1934.0"></text>
</g>
<g>
<title>simple_copy_to_iter (11 samples, 0.37%)</title><rect x="1125.2" y="1923.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1128.2" y="1934.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.17%)</title><rect x="1125.2" y="1907.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1128.2" y="1918.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="1126.4" y="1891.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1129.4" y="1902.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="1126.8" y="1891.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.8" y="1902.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="1127.2" y="1907.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1130.2" y="1918.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.17%)</title><rect x="1127.6" y="1907.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1130.6" y="1918.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.14%)</title><rect x="1127.6" y="1891.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1130.6" y="1902.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1129.2" y="1891.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1132.2" y="1902.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (63 samples, 2.14%)</title><rect x="1129.6" y="1955.0" width="25.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1132.6" y="1966.0">t..</text>
</g>
<g>
<title>tcp_send_ack (60 samples, 2.03%)</title><rect x="1130.8" y="1939.0" width="24.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1133.8" y="1950.0">t..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.03%)</title><rect x="1131.2" y="1923.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1134.2" y="1934.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (58 samples, 1.97%)</title><rect x="1131.6" y="1923.0" width="23.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1134.6" y="1934.0">_..</text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.07%)</title><rect x="1132.0" y="1907.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1135.0" y="1918.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.03%)</title><rect x="1132.0" y="1891.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1135.0" y="1902.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="1132.0" y="1875.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1135.0" y="1886.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="1132.4" y="1891.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1135.4" y="1902.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (53 samples, 1.80%)</title><rect x="1132.8" y="1907.0" width="21.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1135.8" y="1918.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (52 samples, 1.76%)</title><rect x="1133.2" y="1891.0" width="20.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1136.2" y="1902.0"></text>
</g>
<g>
<title>__ip_queue_xmit (51 samples, 1.73%)</title><rect x="1133.6" y="1875.0" width="20.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1136.6" y="1886.0"></text>
</g>
<g>
<title>ip_local_out (49 samples, 1.66%)</title><rect x="1134.4" y="1859.0" width="19.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.4" y="1870.0"></text>
</g>
<g>
<title>ip_output (48 samples, 1.63%)</title><rect x="1134.8" y="1843.0" width="19.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1137.8" y="1854.0"></text>
</g>
<g>
<title>ip_finish_output (48 samples, 1.63%)</title><rect x="1134.8" y="1827.0" width="19.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1137.8" y="1838.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="1136.0" y="1811.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.0" y="1822.0"></text>
</g>
<g>
<title>ip_finish_output2 (44 samples, 1.49%)</title><rect x="1136.4" y="1811.0" width="17.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1139.4" y="1822.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (39 samples, 1.32%)</title><rect x="1136.4" y="1795.0" width="15.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1139.4" y="1806.0"></text>
</g>
<g>
<title>do_softirq.part.21 (39 samples, 1.32%)</title><rect x="1136.4" y="1779.0" width="15.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1139.4" y="1790.0"></text>
</g>
<g>
<title>do_softirq_own_stack (38 samples, 1.29%)</title><rect x="1136.8" y="1763.0" width="15.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1139.8" y="1774.0"></text>
</g>
<g>
<title>__softirqentry_text_start (38 samples, 1.29%)</title><rect x="1136.8" y="1747.0" width="15.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1139.8" y="1758.0"></text>
</g>
<g>
<title>net_rx_action (36 samples, 1.22%)</title><rect x="1137.6" y="1731.0" width="14.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1140.6" y="1742.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="1137.6" y="1715.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.6" y="1726.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="1138.0" y="1715.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1141.0" y="1726.0"></text>
</g>
<g>
<title>process_backlog (34 samples, 1.15%)</title><rect x="1138.4" y="1715.0" width="13.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1141.4" y="1726.0"></text>
</g>
<g>
<title>__netif_receive_skb (34 samples, 1.15%)</title><rect x="1138.4" y="1699.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.4" y="1710.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (34 samples, 1.15%)</title><rect x="1138.4" y="1683.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1141.4" y="1694.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.14%)</title><rect x="1138.8" y="1667.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1141.8" y="1678.0"></text>
</g>
<g>
<title>ip_rcv (29 samples, 0.98%)</title><rect x="1140.4" y="1667.0" width="11.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1143.4" y="1678.0"></text>
</g>
<g>
<title>ip_rcv_finish (29 samples, 0.98%)</title><rect x="1140.4" y="1651.0" width="11.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1143.4" y="1662.0"></text>
</g>
<g>
<title>ip_local_deliver (29 samples, 0.98%)</title><rect x="1140.4" y="1635.0" width="11.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1143.4" y="1646.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (29 samples, 0.98%)</title><rect x="1140.4" y="1619.0" width="11.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1143.4" y="1630.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 0.95%)</title><rect x="1140.8" y="1603.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1143.8" y="1614.0"></text>
</g>
<g>
<title>tcp_v4_rcv (26 samples, 0.88%)</title><rect x="1141.6" y="1587.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1144.6" y="1598.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.14%)</title><rect x="1141.6" y="1571.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1144.6" y="1582.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="1143.2" y="1571.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.2" y="1582.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="1143.6" y="1571.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.6" y="1582.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 0.68%)</title><rect x="1144.0" y="1571.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1147.0" y="1582.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="1144.4" y="1555.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.4" y="1566.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.61%)</title><rect x="1144.8" y="1555.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1147.8" y="1566.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="1144.8" y="1539.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1147.8" y="1550.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.07%)</title><rect x="1144.8" y="1523.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1147.8" y="1534.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1145.2" y="1507.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1148.2" y="1518.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.44%)</title><rect x="1145.6" y="1539.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.6" y="1550.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 0.37%)</title><rect x="1145.6" y="1523.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1148.6" y="1534.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.17%)</title><rect x="1147.2" y="1507.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1150.2" y="1518.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1147.2" y="1491.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1150.2" y="1502.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1147.2" y="1475.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.2" y="1486.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="1147.2" y="1459.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1150.2" y="1470.0"></text>
</g>
<g>
<title>discard_slab (1 samples, 0.03%)</title><rect x="1147.2" y="1443.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1150.2" y="1454.0"></text>
</g>
<g>
<title>__free_slab (1 samples, 0.03%)</title><rect x="1147.2" y="1427.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.2" y="1438.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.14%)</title><rect x="1147.6" y="1491.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1150.6" y="1502.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.14%)</title><rect x="1147.6" y="1475.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.6" y="1486.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.07%)</title><rect x="1148.4" y="1459.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1151.4" y="1470.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.07%)</title><rect x="1148.4" y="1443.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.4" y="1454.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="1148.8" y="1427.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1151.8" y="1438.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="1149.2" y="1507.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1152.2" y="1518.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="1149.6" y="1507.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.6" y="1518.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="1150.0" y="1523.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.0" y="1534.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="1150.4" y="1523.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1153.4" y="1534.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.07%)</title><rect x="1150.8" y="1539.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.8" y="1550.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="1151.6" y="1539.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.6" y="1550.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.14%)</title><rect x="1152.0" y="1795.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.0" y="1806.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.10%)</title><rect x="1152.0" y="1779.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1155.0" y="1790.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.07%)</title><rect x="1152.4" y="1763.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1155.4" y="1774.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.07%)</title><rect x="1152.4" y="1747.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1155.4" y="1758.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="1152.4" y="1731.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.4" y="1742.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="1152.4" y="1715.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1155.4" y="1726.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="1152.4" y="1699.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.4" y="1710.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="1152.8" y="1731.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1155.8" y="1742.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.03%)</title><rect x="1153.2" y="1779.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.2" y="1790.0"></text>
</g>
<g>
<title>do_softirq.part.21 (1 samples, 0.03%)</title><rect x="1153.6" y="1795.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1156.6" y="1806.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="1154.0" y="1907.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1157.0" y="1918.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="1154.4" y="1907.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.4" y="1918.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.10%)</title><rect x="1154.8" y="1987.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1157.8" y="1998.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="1154.8" y="1971.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.8" y="1982.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.07%)</title><rect x="1155.2" y="1971.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.2" y="1982.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.07%)</title><rect x="1155.2" y="1955.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1158.2" y="1966.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="1156.0" y="2003.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1159.0" y="2014.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="1156.0" y="1987.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1159.0" y="1998.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="1156.0" y="1971.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.0" y="1982.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.10%)</title><rect x="1156.0" y="1955.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1159.0" y="1966.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="1157.2" y="2019.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.2" y="2030.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="1157.6" y="2083.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1160.6" y="2094.0"></text>
</g>
<g>
<title>start_thread (80 samples, 2.71%)</title><rect x="1158.0" y="2163.0" width="32.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1161.0" y="2174.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (80 samples, 2.71%)</title><rect x="1158.0" y="2147.0" width="32.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1161.0" y="2158.0">th..</text>
</g>
<g>
<title>Thread::call_run() (80 samples, 2.71%)</title><rect x="1158.0" y="2131.0" width="32.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.0" y="2142.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (50 samples, 1.70%)</title><rect x="1158.0" y="2115.0" width="20.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1161.0" y="2126.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (47 samples, 1.59%)</title><rect x="1158.0" y="2099.0" width="18.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.0" y="2110.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.27%)</title><rect x="1158.0" y="2083.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.0" y="2094.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.07%)</title><rect x="1158.0" y="2067.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.0" y="2078.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1158.0" y="2051.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.0" y="2062.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="1158.4" y="2051.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1161.4" y="2062.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.20%)</title><rect x="1158.8" y="2067.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1161.8" y="2078.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (33 samples, 1.12%)</title><rect x="1161.2" y="2083.0" width="13.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.2" y="2094.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (33 samples, 1.12%)</title><rect x="1161.2" y="2067.0" width="13.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.2" y="2078.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (33 samples, 1.12%)</title><rect x="1161.2" y="2051.0" width="13.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.2" y="2062.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (33 samples, 1.12%)</title><rect x="1161.2" y="2035.0" width="13.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.2" y="2046.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="1161.6" y="2019.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.6" y="2030.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (31 samples, 1.05%)</title><rect x="1162.0" y="2019.0" width="12.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.0" y="2030.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (14 samples, 0.47%)</title><rect x="1162.0" y="2003.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.0" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (7 samples, 0.24%)</title><rect x="1164.0" y="1987.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.0" y="1998.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1166.4" y="1971.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.4" y="1982.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (2 samples, 0.07%)</title><rect x="1166.8" y="1987.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1169.8" y="1998.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (17 samples, 0.58%)</title><rect x="1167.6" y="2003.0" width="6.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.6" y="2014.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (16 samples, 0.54%)</title><rect x="1168.0" y="1987.0" width="6.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.0" y="1998.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::alloc_block_work(HeapWord**, unsigned long*, HeapWord*, HeapWord*) (1 samples, 0.03%)</title><rect x="1168.8" y="1971.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.8" y="1982.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (11 samples, 0.37%)</title><rect x="1169.2" y="1971.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.2" y="1982.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::alloc_block_work(HeapWord**, unsigned long*, HeapWord*, HeapWord*) (1 samples, 0.03%)</title><rect x="1170.8" y="1955.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.8" y="1966.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (6 samples, 0.20%)</title><rect x="1171.2" y="1955.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.2" y="1966.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.03%)</title><rect x="1173.6" y="1971.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.6" y="1982.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1174.0" y="1971.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.0" y="1982.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.20%)</title><rect x="1174.4" y="2083.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.4" y="2094.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="1174.4" y="2067.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.4" y="2078.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (5 samples, 0.17%)</title><rect x="1174.8" y="2067.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.8" y="2078.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.03%)</title><rect x="1174.8" y="2051.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.8" y="2062.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.14%)</title><rect x="1175.2" y="2051.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.2" y="2062.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.14%)</title><rect x="1175.2" y="2035.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.2" y="2046.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.03%)</title><rect x="1175.2" y="2019.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.2" y="2030.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.03%)</title><rect x="1175.2" y="2003.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.2" y="2014.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (1 samples, 0.03%)</title><rect x="1175.2" y="1987.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.2" y="1998.0"></text>
</g>
<g>
<title>HandleArea::oops_do(OopClosure*) (1 samples, 0.03%)</title><rect x="1175.6" y="2019.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.6" y="2030.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="1175.6" y="2003.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.6" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1175.6" y="1987.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.6" y="1998.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1175.6" y="1971.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.6" y="1982.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (1 samples, 0.03%)</title><rect x="1176.0" y="2019.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.0" y="2030.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="1176.4" y="2019.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.4" y="2030.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="1176.4" y="2003.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.4" y="2014.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="1176.4" y="1987.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.4" y="1998.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1176.8" y="2099.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.8" y="2110.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="1176.8" y="2083.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1179.8" y="2094.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1177.2" y="2099.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.2" y="2110.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.03%)</title><rect x="1177.2" y="2083.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.2" y="2094.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.68] (1 samples, 0.03%)</title><rect x="1177.2" y="2067.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.2" y="2078.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="1177.2" y="2051.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.2" y="2062.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.03%)</title><rect x="1177.6" y="2099.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1180.6" y="2110.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1177.6" y="2083.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.6" y="2094.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1177.6" y="2067.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.6" y="2078.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1177.6" y="2051.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.6" y="2062.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1177.6" y="2035.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1180.6" y="2046.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="1177.6" y="2019.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.6" y="2030.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="1177.6" y="2003.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1180.6" y="2014.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1177.6" y="1987.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1180.6" y="1998.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1177.6" y="1971.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.6" y="1982.0"></text>
</g>
<g>
<title>JavaThread::run() (7 samples, 0.24%)</title><rect x="1178.0" y="2115.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.0" y="2126.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (7 samples, 0.24%)</title><rect x="1178.0" y="2099.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.0" y="2110.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (7 samples, 0.24%)</title><rect x="1178.0" y="2083.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.0" y="2094.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (7 samples, 0.24%)</title><rect x="1178.0" y="2067.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.0" y="2078.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (7 samples, 0.24%)</title><rect x="1178.0" y="2051.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.0" y="2062.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 0.17%)</title><rect x="1178.0" y="2035.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.0" y="2046.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.03%)</title><rect x="1178.0" y="2019.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.0" y="2030.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.03%)</title><rect x="1178.0" y="2003.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.0" y="2014.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.03%)</title><rect x="1178.0" y="1987.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.0" y="1998.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.03%)</title><rect x="1178.4" y="2019.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.4" y="2030.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.03%)</title><rect x="1178.4" y="2003.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.4" y="2014.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.03%)</title><rect x="1178.4" y="1987.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.4" y="1998.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1178.4" y="1971.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.4" y="1982.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.10%)</title><rect x="1178.8" y="2019.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.8" y="2030.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.03%)</title><rect x="1178.8" y="2003.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.8" y="2014.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="1178.8" y="1987.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.8" y="1998.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.03%)</title><rect x="1179.2" y="2003.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="2014.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.03%)</title><rect x="1179.2" y="1987.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.2" y="1998.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.03%)</title><rect x="1179.6" y="2003.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.6" y="2014.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1179.6" y="1987.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.6" y="1998.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.03%)</title><rect x="1180.0" y="2035.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.0" y="2046.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.03%)</title><rect x="1180.0" y="2019.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.0" y="2030.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.03%)</title><rect x="1180.0" y="2003.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.0" y="2014.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.03%)</title><rect x="1180.0" y="1987.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.0" y="1998.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1180.4" y="2035.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.4" y="2046.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1180.4" y="2019.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.4" y="2030.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1180.4" y="2003.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.4" y="2014.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1180.4" y="1987.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.4" y="1998.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1180.4" y="1971.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.4" y="1982.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1180.4" y="1955.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.4" y="1966.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1180.4" y="1939.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.4" y="1950.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1180.4" y="1923.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.4" y="1934.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1180.4" y="1907.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.4" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1180.4" y="1891.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.4" y="1902.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1180.4" y="1875.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.4" y="1886.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1180.4" y="1859.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.4" y="1870.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1180.4" y="1843.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.4" y="1854.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1180.4" y="1827.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.4" y="1838.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1180.4" y="1811.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.4" y="1822.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1180.4" y="1795.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.4" y="1806.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1180.4" y="1779.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.4" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1180.4" y="1763.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.4" y="1774.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1180.4" y="1747.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="1758.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1180.4" y="1731.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.4" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1180.4" y="1715.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.4" y="1726.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.03%)</title><rect x="1180.4" y="1699.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.4" y="1710.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.03%)</title><rect x="1180.4" y="1683.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.4" y="1694.0"></text>
</g>
<g>
<title>BuildCutout::BuildCutout(GraphKit*, Node*, float, float) (1 samples, 0.03%)</title><rect x="1180.4" y="1667.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.4" y="1678.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="1180.4" y="1651.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1183.4" y="1662.0"></text>
</g>
<g>
<title>VMThread::run() (22 samples, 0.75%)</title><rect x="1180.8" y="2115.0" width="8.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.8" y="2126.0"></text>
</g>
<g>
<title>VMThread::loop() (22 samples, 0.75%)</title><rect x="1180.8" y="2099.0" width="8.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.8" y="2110.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (16 samples, 0.54%)</title><rect x="1180.8" y="2083.0" width="6.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.8" y="2094.0"></text>
</g>
<g>
<title>Monitor::lock() (2 samples, 0.07%)</title><rect x="1186.4" y="2067.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.4" y="2078.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.07%)</title><rect x="1186.4" y="2051.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="2062.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="1186.4" y="2035.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1189.4" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1186.4" y="2019.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1189.4" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1186.4" y="2003.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1189.4" y="2014.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="1186.8" y="2035.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1189.8" y="2046.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1187.2" y="2083.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1190.2" y="2094.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.03%)</title><rect x="1187.6" y="2083.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.6" y="2094.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.03%)</title><rect x="1187.6" y="2067.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.6" y="2078.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.03%)</title><rect x="1187.6" y="2051.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.6" y="2062.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="1187.6" y="2035.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.6" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::trace_heap(GCWhen::Type, GCTracer const*) (1 samples, 0.03%)</title><rect x="1187.6" y="2019.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.6" y="2030.0"></text>
</g>
<g>
<title>GCTracer::report_metaspace_summary(GCWhen::Type, MetaspaceSummary const&amp;) const (1 samples, 0.03%)</title><rect x="1187.6" y="2003.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.6" y="2014.0"></text>
</g>
<g>
<title>sched_yield (4 samples, 0.14%)</title><rect x="1188.0" y="2083.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1191.0" y="2094.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.14%)</title><rect x="1188.0" y="2067.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1191.0" y="2078.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.14%)</title><rect x="1188.0" y="2051.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.0" y="2062.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.10%)</title><rect x="1188.4" y="2035.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1191.4" y="2046.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.10%)</title><rect x="1188.4" y="2019.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1191.4" y="2030.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.10%)</title><rect x="1188.4" y="2003.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1191.4" y="2014.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.10%)</title><rect x="1188.4" y="1987.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1191.4" y="1998.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="1189.6" y="2115.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.6" y="2126.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.03%)</title><rect x="1189.6" y="2099.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.6" y="2110.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1189.6" y="2083.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.6" y="2094.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1189.6" y="2067.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.6" y="2078.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="1189.6" y="2051.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.6" y="2062.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1189.6" y="2035.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.6" y="2046.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1189.6" y="2019.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.6" y="2030.0"></text>
</g>
</g>
</svg>
