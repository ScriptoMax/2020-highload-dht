<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">GET keys fit in continuous distribution (#3)</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (4,339 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (26 samples, 0.60%)</title><rect x="10.0" y="883.0" width="7.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (26 samples, 0.60%)</title><rect x="10.0" y="867.0" width="7.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (26 samples, 0.60%)</title><rect x="10.0" y="851.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (25 samples, 0.58%)</title><rect x="10.3" y="835.0" width="6.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.3" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (5 samples, 0.12%)</title><rect x="11.4" y="819.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.4" y="830.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.14%)</title><rect x="12.7" y="819.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="15.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="14.4" y="819.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="17.4" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="14.4" y="803.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="17.4" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.09%)</title><rect x="14.6" y="819.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="17.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="14.6" y="803.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="17.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.09%)</title><rect x="14.6" y="787.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="17.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="15.2" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="18.2" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="15.2" y="755.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.2" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="15.4" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="18.4" y="766.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.05%)</title><rect x="15.7" y="819.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.7" y="830.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="16.0" y="803.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="19.0" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="16.3" y="819.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="19.3" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="16.5" y="819.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.5" y="830.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="16.8" y="819.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="19.8" y="830.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.02%)</title><rect x="17.1" y="883.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="20.1" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.18%)</title><rect x="17.3" y="883.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="20.3" y="894.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="17.3" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.3" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.02%)</title><rect x="17.6" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.6" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.12%)</title><rect x="17.9" y="867.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.9" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.12%)</title><rect x="17.9" y="851.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.9" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="17.9" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.9" y="846.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.02%)</title><rect x="17.9" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.9" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.09%)</title><rect x="18.2" y="835.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="21.2" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.05%)</title><rect x="18.2" y="819.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="21.2" y="830.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="18.7" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="21.7" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="19.0" y="819.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.0" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="19.0" y="803.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="22.0" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="19.0" y="787.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.0" y="798.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.02%)</title><rect x="19.2" y="867.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="22.2" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (21 samples, 0.48%)</title><rect x="19.5" y="883.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="22.5" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.02%)</title><rect x="19.5" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.5" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.02%)</title><rect x="19.8" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.8" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.44%)</title><rect x="20.1" y="867.0" width="5.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="23.1" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.41%)</title><rect x="20.3" y="851.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="23.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.41%)</title><rect x="20.3" y="835.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="23.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.37%)</title><rect x="20.9" y="819.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.9" y="830.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.35%)</title><rect x="21.2" y="803.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="24.2" y="814.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.32%)</title><rect x="21.2" y="787.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="21.2" y="771.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="24.2" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="21.4" y="771.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.4" y="782.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.28%)</title><rect x="21.7" y="771.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.7" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.28%)</title><rect x="21.7" y="755.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.7" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.28%)</title><rect x="21.7" y="739.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="24.7" y="750.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="25.0" y="787.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.0" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (29 samples, 0.67%)</title><rect x="25.2" y="883.0" width="7.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="28.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.55%)</title><rect x="26.6" y="867.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="29.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.55%)</title><rect x="26.6" y="851.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="29.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.39%)</title><rect x="28.2" y="835.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.2" y="846.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.37%)</title><rect x="28.2" y="819.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="31.2" y="830.0"></text>
</g>
<g>
<title>futex_wait (16 samples, 0.37%)</title><rect x="28.2" y="803.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.2" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.16%)</title><rect x="29.0" y="787.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="32.0" y="798.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.09%)</title><rect x="29.0" y="771.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="32.0" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="29.0" y="755.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.0" y="766.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="30.1" y="771.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="33.1" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="30.4" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="33.4" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="30.7" y="739.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="33.7" y="750.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.07%)</title><rect x="30.9" y="787.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="33.9" y="798.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.05%)</title><rect x="31.2" y="771.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="34.2" y="782.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.02%)</title><rect x="31.8" y="787.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.8" y="798.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.02%)</title><rect x="31.8" y="771.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="34.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="31.8" y="755.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="34.8" y="766.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="32.0" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.0" y="798.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="32.0" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="35.0" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="32.3" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.3" y="798.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.02%)</title><rect x="32.6" y="819.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.6" y="830.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="32.6" y="803.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.6" y="814.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.02%)</title><rect x="32.8" y="835.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.8" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="33.1" y="883.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="36.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,505 samples, 80.78%)</title><rect x="33.4" y="883.0" width="953.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.4" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,505 samples, 80.78%)</title><rect x="33.4" y="867.0" width="953.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.4" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,505 samples, 80.78%)</title><rect x="33.4" y="851.0" width="953.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.4" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.05%)</title><rect x="35.3" y="835.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.12%)</title><rect x="35.8" y="835.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.12%)</title><rect x="35.8" y="819.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.12%)</title><rect x="35.8" y="803.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.12%)</title><rect x="35.8" y="787.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run (1 samples, 0.02%)</title><rect x="36.9" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (205 samples, 4.72%)</title><rect x="37.2" y="835.0" width="55.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.2" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (202 samples, 4.66%)</title><rect x="37.7" y="819.0" width="55.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.7" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="38.6" y="803.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (193 samples, 4.45%)</title><rect x="38.8" y="803.0" width="52.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.8" y="814.0">java/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (8 samples, 0.18%)</title><rect x="40.2" y="787.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="42.1" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.05%)</title><rect x="42.4" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="42.9" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="42.9" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="42.9" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="42.9" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="42.9" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="42.9" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.02%)</title><rect x="43.2" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="43.2" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="43.5" y="787.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (175 samples, 4.03%)</title><rect x="43.7" y="787.0" width="47.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.7" y="798.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (175 samples, 4.03%)</title><rect x="43.7" y="771.0" width="47.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.7" y="782.0">jdk/..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="44.3" y="755.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="47.3" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="44.5" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="47.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (83 samples, 1.91%)</title><rect x="44.8" y="755.0" width="22.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="47.8" y="766.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.05%)</title><rect x="45.6" y="739.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="48.6" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="46.2" y="739.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="49.2" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 0.35%)</title><rect x="46.4" y="739.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="49.4" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="48.3" y="723.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="51.3" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="48.9" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="51.9" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="48.9" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="51.9" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="48.9" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.9" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="48.9" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.9" y="670.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="48.9" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.9" y="654.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="48.9" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.9" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="48.9" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.9" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="49.2" y="723.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="52.2" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="50.0" y="723.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="53.0" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="50.5" y="739.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="53.5" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.05%)</title><rect x="50.8" y="739.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="53.8" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="51.3" y="739.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="54.3" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (33 samples, 0.76%)</title><rect x="51.9" y="739.0" width="9.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="54.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.58%)</title><rect x="54.1" y="723.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.58%)</title><rect x="54.1" y="707.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="57.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.28%)</title><rect x="57.6" y="691.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.6" y="702.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.28%)</title><rect x="57.6" y="675.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="60.6" y="686.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.18 (1 samples, 0.02%)</title><rect x="57.6" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="60.6" y="670.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.21%)</title><rect x="57.9" y="659.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.9" y="670.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.09%)</title><rect x="59.0" y="643.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="62.0" y="654.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.02%)</title><rect x="59.8" y="627.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="62.8" y="638.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.02%)</title><rect x="60.0" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.0" y="654.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="60.3" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="63.3" y="670.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="60.6" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.6" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="60.9" y="739.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="63.9" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="61.1" y="739.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="64.1" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.07%)</title><rect x="61.7" y="739.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="64.7" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="62.5" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="65.5" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (6 samples, 0.14%)</title><rect x="63.0" y="739.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="66.0" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 0.18%)</title><rect x="64.7" y="739.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="67.7" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.05%)</title><rect x="66.8" y="739.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="69.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.98%)</title><rect x="67.4" y="755.0" width="23.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="70.4" y="766.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="67.4" y="739.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="70.4" y="750.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="67.7" y="739.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="70.7" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="67.9" y="739.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="70.9" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.05%)</title><rect x="68.7" y="739.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="71.7" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="69.3" y="739.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="72.3" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (78 samples, 1.80%)</title><rect x="69.6" y="739.0" width="21.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="72.6" y="750.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.08%)</title><rect x="78.0" y="723.0" width="12.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="81.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 1.08%)</title><rect x="78.0" y="707.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="81.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.58%)</title><rect x="83.7" y="691.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="86.7" y="702.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.55%)</title><rect x="84.0" y="675.0" width="6.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.0" y="686.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 0.51%)</title><rect x="84.2" y="659.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="87.2" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="84.8" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.25%)</title><rect x="85.3" y="643.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="88.3" y="654.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="85.9" y="627.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.9" y="638.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.18%)</title><rect x="86.1" y="627.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.1" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.14%)</title><rect x="86.7" y="611.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="89.7" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="88.1" y="595.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="91.1" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="88.1" y="579.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.1" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="88.1" y="563.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.1" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="88.1" y="547.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="91.1" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="88.1" y="531.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.1" y="542.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="88.1" y="515.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.1" y="526.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.09%)</title><rect x="88.3" y="643.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="91.3" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.05%)</title><rect x="88.9" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="91.9" y="638.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="89.4" y="643.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="92.4" y="654.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="90.0" y="643.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="93.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="90.2" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="93.2" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="90.5" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.5" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="90.8" y="755.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="93.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.12%)</title><rect x="91.3" y="803.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.12%)</title><rect x="91.3" y="787.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.12%)</title><rect x="91.3" y="771.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.12%)</title><rect x="91.3" y="755.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.12%)</title><rect x="91.3" y="739.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.3" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="91.3" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="94.3" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.09%)</title><rect x="91.6" y="723.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="94.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="91.6" y="707.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.09%)</title><rect x="91.6" y="691.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.09%)</title><rect x="91.6" y="675.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.6" y="686.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="91.6" y="659.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.6" y="670.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.09%)</title><rect x="91.6" y="643.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="94.6" y="654.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.07%)</title><rect x="91.9" y="627.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.9" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.07%)</title><rect x="91.9" y="611.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="91.9" y="595.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="94.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.02%)</title><rect x="92.7" y="819.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="92.7" y="803.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run (3,286 samples, 75.73%)</title><rect x="92.9" y="835.0" width="893.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.9" y="846.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6 (3,286 samples, 75.73%)</title><rect x="92.9" y="819.0" width="893.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.9" y="830.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (668 samples, 15.40%)</title><rect x="94.0" y="803.0" width="181.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.0" y="814.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="96.8" y="787.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="99.8" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.07%)</title><rect x="96.8" y="771.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="99.8" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.07%)</title><rect x="96.8" y="755.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="99.8" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.07%)</title><rect x="96.8" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="99.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.21%)</title><rect x="97.6" y="787.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.21%)</title><rect x="97.6" y="771.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.18%)</title><rect x="97.8" y="755.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="99.2" y="739.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="102.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="99.2" y="723.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="102.2" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="99.2" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="102.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.05%)</title><rect x="99.5" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (630 samples, 14.52%)</title><rect x="100.0" y="787.0" width="171.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.0" y="798.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (23 samples, 0.53%)</title><rect x="100.0" y="771.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.14%)</title><rect x="104.4" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.14%)</title><rect x="104.4" y="739.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.14%)</title><rect x="104.4" y="723.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.14%)</title><rect x="104.4" y="707.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.14%)</title><rect x="104.4" y="691.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.4" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="105.5" y="675.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="108.5" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="106.0" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="109.0" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="106.0" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.0" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="106.0" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="109.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (607 samples, 13.99%)</title><rect x="106.3" y="771.0" width="165.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.3" y="782.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session.write (606 samples, 13.97%)</title><rect x="106.5" y="755.0" width="164.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.5" y="766.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (1 samples, 0.02%)</title><rect x="106.8" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="109.8" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.25%)</title><rect x="107.1" y="739.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="110.1" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (11 samples, 0.25%)</title><rect x="107.1" y="723.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="110.1" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (9 samples, 0.21%)</title><rect x="107.6" y="707.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="110.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="110.1" y="739.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="113.1" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="110.1" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="113.1" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="110.4" y="723.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="113.4" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="110.6" y="739.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="113.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (586 samples, 13.51%)</title><rect x="111.2" y="739.0" width="159.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.2" y="750.0">one/nio/net/Session$..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (583 samples, 13.44%)</title><rect x="112.0" y="723.0" width="158.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.0" y="734.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (16 samples, 0.37%)</title><rect x="113.9" y="707.0" width="4.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="116.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="115.0" y="691.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="118.0" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.09%)</title><rect x="115.2" y="691.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="118.2" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="116.3" y="691.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="119.3" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="116.3" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="119.3" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.05%)</title><rect x="116.6" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="119.6" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="117.1" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="120.1" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.07%)</title><rect x="117.4" y="691.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="120.4" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.07%)</title><rect x="118.2" y="707.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="121.2" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="119.1" y="707.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="122.1" y="718.0"></text>
</g>
<g>
<title>__libc_send (553 samples, 12.74%)</title><rect x="119.3" y="707.0" width="150.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="122.3" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (543 samples, 12.51%)</title><rect x="122.0" y="691.0" width="147.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="125.0" y="702.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.09%)</title><rect x="122.0" y="675.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="125.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (539 samples, 12.42%)</title><rect x="123.1" y="675.0" width="146.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="126.1" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (518 samples, 11.94%)</title><rect x="128.6" y="659.0" width="140.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="131.6" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (514 samples, 11.85%)</title><rect x="128.6" y="643.0" width="139.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="131.6" y="654.0">__sys_sendto</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="129.7" y="627.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="132.7" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (493 samples, 11.36%)</title><rect x="129.9" y="627.0" width="134.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="132.9" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="130.5" y="611.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="133.5" y="622.0"></text>
</g>
<g>
<title>inet_sendmsg (481 samples, 11.09%)</title><rect x="130.7" y="611.0" width="130.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="133.7" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="131.0" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (479 samples, 11.04%)</title><rect x="131.3" y="595.0" width="130.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="134.3" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="131.3" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="134.3" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="131.8" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.8" y="590.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="132.1" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.1" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="132.4" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.4" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (472 samples, 10.88%)</title><rect x="132.7" y="579.0" width="128.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="135.7" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.18%)</title><rect x="135.4" y="563.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.16%)</title><rect x="135.6" y="547.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.6" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.12%)</title><rect x="137.5" y="563.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.5" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.09%)</title><rect x="137.8" y="547.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.8" y="558.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="138.9" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.9" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (23 samples, 0.53%)</title><rect x="139.2" y="563.0" width="6.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="142.2" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.41%)</title><rect x="139.7" y="547.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="142.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (5 samples, 0.12%)</title><rect x="140.8" y="531.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="143.8" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.07%)</title><rect x="140.8" y="515.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="143.8" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="141.6" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="144.6" y="526.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="141.9" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="144.9" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="142.2" y="531.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="145.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.18%)</title><rect x="142.4" y="531.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="145.4" y="542.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="144.3" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.3" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="144.3" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="147.3" y="510.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.07%)</title><rect x="144.6" y="547.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="147.6" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="145.4" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="148.4" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="145.7" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="148.7" y="574.0"></text>
</g>
<g>
<title>tcp_push (417 samples, 9.61%)</title><rect x="146.0" y="563.0" width="113.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="149.0" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (415 samples, 9.56%)</title><rect x="146.2" y="547.0" width="112.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.2" y="558.0">__tcp_push_pen..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="146.2" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="149.2" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="146.5" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="149.5" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="146.8" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="149.8" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="147.1" y="531.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="150.1" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (1 samples, 0.02%)</title><rect x="147.3" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="150.3" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (410 samples, 9.45%)</title><rect x="147.6" y="531.0" width="111.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="150.6" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (383 samples, 8.83%)</title><rect x="150.1" y="515.0" width="104.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="153.1" y="526.0">__tcp_transm..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="152.5" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="155.5" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="152.8" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.8" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="153.3" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="156.3" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (366 samples, 8.44%)</title><rect x="153.6" y="499.0" width="99.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="156.6" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (365 samples, 8.41%)</title><rect x="153.9" y="483.0" width="99.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="156.9" y="494.0">__ip_queue_x..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="153.9" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="156.9" y="478.0"></text>
</g>
<g>
<title>ip_local_out (361 samples, 8.32%)</title><rect x="154.4" y="467.0" width="98.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="157.4" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (61 samples, 1.41%)</title><rect x="154.7" y="451.0" width="16.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="157.7" y="462.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="155.2" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="158.2" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.05%)</title><rect x="155.5" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="158.5" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.05%)</title><rect x="156.0" y="435.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="159.0" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (53 samples, 1.22%)</title><rect x="156.6" y="435.0" width="14.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="159.6" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.05%)</title><rect x="156.9" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="159.9" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.12%)</title><rect x="157.4" y="419.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="160.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.12%)</title><rect x="157.4" y="403.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="160.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (39 samples, 0.90%)</title><rect x="158.8" y="419.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="161.8" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.02%)</title><rect x="158.8" y="403.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="161.8" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (37 samples, 0.85%)</title><rect x="159.0" y="403.0" width="10.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="162.0" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (12 samples, 0.28%)</title><rect x="159.8" y="387.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.8" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.02%)</title><rect x="163.1" y="387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.1" y="398.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.05%)</title><rect x="163.4" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.4" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (4 samples, 0.09%)</title><rect x="163.9" y="387.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.9" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.02%)</title><rect x="165.0" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="168.0" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (14 samples, 0.32%)</title><rect x="165.3" y="387.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="168.3" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (9 samples, 0.21%)</title><rect x="166.6" y="371.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="169.6" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (5 samples, 0.12%)</title><rect x="167.7" y="355.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="170.7" y="366.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.02%)</title><rect x="169.1" y="403.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="172.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.02%)</title><rect x="169.4" y="419.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="172.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.02%)</title><rect x="169.6" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="172.6" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.09%)</title><rect x="169.9" y="419.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.07%)</title><rect x="169.9" y="403.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="172.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.02%)</title><rect x="170.7" y="403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="173.7" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="170.7" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="173.7" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.02%)</title><rect x="171.0" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.0" y="446.0"></text>
</g>
<g>
<title>ip_output (297 samples, 6.84%)</title><rect x="171.3" y="451.0" width="80.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.3" y="462.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="171.8" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (287 samples, 6.61%)</title><rect x="172.1" y="435.0" width="78.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="175.1" y="446.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.14%)</title><rect x="172.9" y="419.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="175.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (278 samples, 6.41%)</title><rect x="174.5" y="419.0" width="75.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="177.5" y="430.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (247 samples, 5.69%)</title><rect x="176.2" y="403.0" width="67.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="179.2" y="414.0">__local..</text>
</g>
<g>
<title>do_softirq.part.21 (247 samples, 5.69%)</title><rect x="176.2" y="387.0" width="67.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="179.2" y="398.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (245 samples, 5.65%)</title><rect x="176.7" y="371.0" width="66.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="179.7" y="382.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (244 samples, 5.62%)</title><rect x="176.7" y="355.0" width="66.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.7" y="366.0">__softi..</text>
</g>
<g>
<title>net_rx_action (239 samples, 5.51%)</title><rect x="178.1" y="339.0" width="65.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.1" y="350.0">net_rx_..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="179.4" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (233 samples, 5.37%)</title><rect x="179.7" y="323.0" width="63.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.7" y="334.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (230 samples, 5.30%)</title><rect x="180.5" y="307.0" width="62.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="183.5" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (229 samples, 5.28%)</title><rect x="180.5" y="291.0" width="62.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="183.5" y="302.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.16%)</title><rect x="180.8" y="275.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="183.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (221 samples, 5.09%)</title><rect x="182.7" y="275.0" width="60.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.7" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="183.2" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="186.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (3 samples, 0.07%)</title><rect x="183.5" y="259.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (206 samples, 4.75%)</title><rect x="184.3" y="259.0" width="56.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="187.3" y="270.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (205 samples, 4.72%)</title><rect x="184.3" y="243.0" width="55.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.3" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (201 samples, 4.63%)</title><rect x="184.3" y="227.0" width="54.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.3" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (200 samples, 4.61%)</title><rect x="184.6" y="211.0" width="54.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.6" y="222.0">ip_pr..</text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.02%)</title><rect x="185.1" y="195.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.1" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="185.4" y="195.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="188.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="185.7" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="188.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="186.0" y="195.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="189.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (194 samples, 4.47%)</title><rect x="186.2" y="195.0" width="52.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="189.2" y="206.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.23%)</title><rect x="189.2" y="179.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="192.2" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.07%)</title><rect x="191.1" y="163.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="194.1" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.02%)</title><rect x="191.9" y="179.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="194.9" y="190.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="192.2" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="195.2" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="192.5" y="179.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="195.5" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="192.8" y="179.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="195.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.21%)</title><rect x="193.0" y="179.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="196.0" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.12%)</title><rect x="193.3" y="163.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="196.3" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="194.7" y="163.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.7" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.05%)</title><rect x="194.9" y="163.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="197.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="195.5" y="179.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="198.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (158 samples, 3.64%)</title><rect x="195.7" y="179.0" width="43.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="198.7" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="196.3" y="163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (155 samples, 3.57%)</title><rect x="196.6" y="163.0" width="42.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="199.6" y="174.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.25%)</title><rect x="197.9" y="147.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.9" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (10 samples, 0.23%)</title><rect x="198.2" y="131.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.2" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="198.5" y="115.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="201.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.18%)</title><rect x="198.7" y="115.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="201.7" y="126.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.18%)</title><rect x="198.7" y="99.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="201.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="199.3" y="83.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="202.3" y="94.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="200.6" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="203.6" y="94.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="200.9" y="147.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="203.9" y="158.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="201.5" y="147.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (45 samples, 1.04%)</title><rect x="201.7" y="147.0" width="12.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.7" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (39 samples, 0.90%)</title><rect x="203.4" y="131.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="206.4" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (39 samples, 0.90%)</title><rect x="203.4" y="115.0" width="10.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="206.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (39 samples, 0.90%)</title><rect x="203.4" y="99.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="206.4" y="110.0"></text>
</g>
<g>
<title>tcp_ack (24 samples, 0.55%)</title><rect x="214.0" y="147.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="217.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="215.9" y="131.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="218.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.02%)</title><rect x="216.1" y="131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="219.1" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (14 samples, 0.32%)</title><rect x="216.4" y="131.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.09%)</title><rect x="217.8" y="115.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="220.8" y="126.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.09%)</title><rect x="217.8" y="99.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="217.8" y="83.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="220.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="218.3" y="67.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.3" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="218.3" y="51.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.3" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="218.6" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="221.6" y="94.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="218.9" y="115.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="221.9" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="219.1" y="115.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="222.1" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (3 samples, 0.07%)</title><rect x="219.4" y="115.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.4" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="220.2" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="223.2" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="220.5" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.5" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (57 samples, 1.31%)</title><rect x="221.0" y="147.0" width="15.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.0" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (55 samples, 1.27%)</title><rect x="221.6" y="131.0" width="14.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="224.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (50 samples, 1.15%)</title><rect x="222.9" y="115.0" width="13.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="225.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (50 samples, 1.15%)</title><rect x="222.9" y="99.0" width="13.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="225.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (50 samples, 1.15%)</title><rect x="222.9" y="83.0" width="13.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="225.9" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="236.5" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="239.5" y="158.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.39 (1 samples, 0.02%)</title><rect x="236.5" y="131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="239.5" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="236.8" y="147.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="239.8" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="236.8" y="131.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="239.8" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="237.4" y="147.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="240.4" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="237.6" y="147.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="240.6" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="238.2" y="147.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="241.2" y="158.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="238.4" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="241.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="238.7" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="241.7" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="239.0" y="227.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="242.0" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.07%)</title><rect x="239.3" y="227.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="242.3" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.05%)</title><rect x="239.3" y="211.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="242.3" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.05%)</title><rect x="239.3" y="195.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="242.3" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.02%)</title><rect x="239.8" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.8" y="222.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.02%)</title><rect x="239.8" y="195.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="242.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (1 samples, 0.02%)</title><rect x="240.1" y="243.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="243.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (1 samples, 0.02%)</title><rect x="240.3" y="259.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="243.3" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (6 samples, 0.14%)</title><rect x="240.6" y="259.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.6" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.05%)</title><rect x="242.2" y="259.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="245.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="242.8" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="245.8" y="302.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="243.1" y="355.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="246.1" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (23 samples, 0.53%)</title><rect x="243.3" y="403.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (23 samples, 0.53%)</title><rect x="243.3" y="387.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.3" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="245.5" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="248.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.16%)</title><rect x="245.8" y="371.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="248.8" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.09%)</title><rect x="245.8" y="355.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="248.8" y="366.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="245.8" y="339.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="248.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="245.8" y="323.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="245.8" y="307.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="248.8" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="246.6" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="249.6" y="350.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="246.6" y="323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="249.6" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.05%)</title><rect x="246.9" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.9" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="247.4" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="250.4" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="247.7" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.7" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.14%)</title><rect x="248.0" y="371.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="251.0" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.05%)</title><rect x="248.8" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="251.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="249.3" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="252.3" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.21 (2 samples, 0.05%)</title><rect x="249.6" y="403.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="252.6" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.02%)</title><rect x="250.1" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.1" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (1 samples, 0.02%)</title><rect x="250.4" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="253.4" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="250.7" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="253.7" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.07%)</title><rect x="251.2" y="435.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="254.2" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.05%)</title><rect x="251.2" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="254.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.02%)</title><rect x="251.8" y="419.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="254.8" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="252.0" y="451.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="255.0" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="252.6" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.6" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="252.9" y="467.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.9" y="478.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.09%)</title><rect x="253.1" y="499.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.1" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="253.4" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.4" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="253.7" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="256.7" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.05%)</title><rect x="253.7" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="256.7" y="478.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="254.2" y="515.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="257.2" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="254.2" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="257.2" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.23%)</title><rect x="254.8" y="515.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.8" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (4 samples, 0.09%)</title><rect x="255.0" y="499.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="258.0" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="256.1" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="259.1" y="510.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.02%)</title><rect x="256.1" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="259.1" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.09%)</title><rect x="256.4" y="499.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="259.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.09%)</title><rect x="256.4" y="483.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="259.4" y="494.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.09%)</title><rect x="256.4" y="467.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="259.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="256.7" y="451.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.7" y="462.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="257.5" y="515.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="260.5" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="257.7" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="260.7" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="258.0" y="515.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="261.0" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="258.0" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="261.0" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="258.3" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.3" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="258.6" y="515.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="261.6" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="258.8" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="261.8" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="259.1" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="262.1" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.14%)</title><rect x="259.4" y="563.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.4" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="259.7" y="547.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="262.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.07%)</title><rect x="259.9" y="547.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.9" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="260.2" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.2" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="260.7" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="263.7" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="261.0" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="264.0" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.21%)</title><rect x="261.6" y="611.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.6" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="261.6" y="595.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="264.6" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.18%)</title><rect x="261.8" y="595.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="264.8" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.18%)</title><rect x="261.8" y="579.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.8" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.12%)</title><rect x="262.6" y="563.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="265.6" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.37%)</title><rect x="264.0" y="627.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="267.0" y="638.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.30%)</title><rect x="264.0" y="611.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="267.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.30%)</title><rect x="264.0" y="595.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="267.0" y="606.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.28%)</title><rect x="264.3" y="579.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="267.3" y="590.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="267.5" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.5" y="622.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="268.4" y="643.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.4" y="654.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="268.6" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="271.6" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="269.2" y="643.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.2" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="269.4" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.4" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="269.7" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="272.7" y="718.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.05%)</title><rect x="270.0" y="707.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="273.0" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="270.5" y="739.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="273.5" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="270.8" y="723.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="273.8" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="271.1" y="723.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="274.1" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="271.1" y="707.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="274.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.30%)</title><rect x="271.3" y="787.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.16%)</title><rect x="272.7" y="771.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.16%)</title><rect x="272.7" y="755.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.7" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="274.1" y="739.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="277.1" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="274.3" y="739.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="277.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="274.6" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="274.6" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.6" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="274.6" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.6" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="274.6" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="277.6" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="274.6" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="277.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="274.6" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="277.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="274.6" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="277.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="274.6" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="277.6" y="670.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="274.6" y="643.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="277.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (2 samples, 0.05%)</title><rect x="274.9" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="275.2" y="771.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.02%)</title><rect x="275.4" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.exec (2,614 samples, 60.24%)</title><rect x="275.7" y="803.0" width="710.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.7" y="814.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.exec</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$0 (2,610 samples, 60.15%)</title><rect x="276.8" y="787.0" width="709.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.8" y="798.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (2,610 samples, 60.15%)</title><rect x="276.8" y="771.0" width="709.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.8" y="782.0">ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="277.1" y="755.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1730173572.invoke (1 samples, 0.02%)</title><rect x="277.1" y="739.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="277.1" y="723.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="277.1" y="707.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="277.3" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="277.6" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="277.6" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (728 samples, 16.78%)</title><rect x="277.9" y="755.0" width="198.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.9" y="766.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (5 samples, 0.12%)</title><rect x="277.9" y="739.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.9" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="278.4" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.4" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="278.4" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="281.4" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="278.4" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="281.4" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="278.4" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="281.4" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="278.4" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="281.4" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="278.4" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="281.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="278.4" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="281.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.05%)</title><rect x="278.7" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="278.7" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="278.7" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="278.7" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (723 samples, 16.66%)</title><rect x="279.2" y="739.0" width="196.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.2" y="750.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (723 samples, 16.66%)</title><rect x="279.2" y="723.0" width="196.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.2" y="734.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.23%)</title><rect x="279.5" y="707.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.23%)</title><rect x="279.5" y="691.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="279.8" y="675.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="280.0" y="675.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.07%)</title><rect x="280.6" y="659.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.07%)</title><rect x="280.6" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.6" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.05%)</title><rect x="280.9" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.9" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.02%)</title><rect x="281.4" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.4" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="281.7" y="675.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="284.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.02%)</title><rect x="282.0" y="675.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (120 samples, 2.77%)</title><rect x="282.2" y="707.0" width="32.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.2" y="718.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (120 samples, 2.77%)</title><rect x="282.2" y="691.0" width="32.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.2" y="702.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (15 samples, 0.35%)</title><rect x="283.6" y="675.0" width="4.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="286.6" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="284.7" y="659.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="287.7" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="284.9" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="287.9" y="670.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="284.9" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="287.9" y="654.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="284.9" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="287.9" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="284.9" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="287.9" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="284.9" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="287.9" y="606.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="284.9" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.9" y="590.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="284.9" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="287.9" y="574.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.02%)</title><rect x="284.9" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="287.9" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="285.2" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="288.2" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.07%)</title><rect x="285.5" y="659.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="288.5" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.09%)</title><rect x="286.3" y="659.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="289.3" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="286.6" y="643.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="289.6" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="286.8" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="289.8" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="287.1" y="643.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="290.1" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="287.1" y="627.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="290.1" y="638.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="287.4" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="290.4" y="670.0"></text>
</g>
<g>
<title>__GI___recv (97 samples, 2.24%)</title><rect x="287.7" y="675.0" width="26.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="290.7" y="686.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 2.12%)</title><rect x="289.0" y="659.0" width="25.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="292.0" y="670.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.02%)</title><rect x="289.0" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="292.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (91 samples, 2.10%)</title><rect x="289.3" y="643.0" width="24.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="292.3" y="654.0">d..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.02%)</title><rect x="292.6" y="627.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (78 samples, 1.80%)</title><rect x="292.8" y="627.0" width="21.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="295.8" y="638.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (77 samples, 1.77%)</title><rect x="293.1" y="611.0" width="20.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="296.1" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="293.4" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.4" y="606.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="293.9" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="296.9" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="294.2" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="297.2" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.05%)</title><rect x="294.5" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.5" y="606.0"></text>
</g>
<g>
<title>sock_recvmsg (68 samples, 1.57%)</title><rect x="295.0" y="595.0" width="18.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="298.0" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (63 samples, 1.45%)</title><rect x="295.0" y="579.0" width="17.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="298.0" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (60 samples, 1.38%)</title><rect x="295.8" y="563.0" width="16.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="298.8" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="298.0" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.0" y="558.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="298.0" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="301.0" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="298.0" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="301.0" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="298.3" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="301.3" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="298.8" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="301.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="299.1" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="302.1" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="299.4" y="547.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="299.4" y="531.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="302.4" y="542.0"></text>
</g>
<g>
<title>sk_wait_data (27 samples, 0.62%)</title><rect x="299.6" y="547.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="302.6" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="300.4" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="303.4" y="542.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.05%)</title><rect x="300.7" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="303.7" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="300.7" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="303.7" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="301.0" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.0" y="526.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.16%)</title><rect x="301.3" y="531.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="304.3" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="301.3" y="515.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="304.3" y="526.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="301.5" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="304.5" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="301.5" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="304.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.12%)</title><rect x="301.8" y="515.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="304.8" y="526.0"></text>
</g>
<g>
<title>remove_wait_queue (3 samples, 0.07%)</title><rect x="303.2" y="531.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="306.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.05%)</title><rect x="303.2" y="515.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="306.2" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="303.7" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="306.7" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.05%)</title><rect x="304.0" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="307.0" y="542.0"></text>
</g>
<g>
<title>wait_woken (9 samples, 0.21%)</title><rect x="304.5" y="531.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="307.5" y="542.0"></text>
</g>
<g>
<title>schedule_timeout (7 samples, 0.16%)</title><rect x="305.1" y="515.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="308.1" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="305.1" y="499.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="308.1" y="510.0"></text>
</g>
<g>
<title>del_timer_sync (1 samples, 0.02%)</title><rect x="306.2" y="499.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.2" y="510.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.02%)</title><rect x="306.2" y="483.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="309.2" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="306.2" y="467.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.2" y="478.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="306.4" y="499.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="309.4" y="510.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="306.4" y="483.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="309.4" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="306.7" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="309.7" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="306.7" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.7" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="306.7" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="309.7" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="306.7" y="419.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="309.7" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="306.7" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="309.7" y="414.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="306.7" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="309.7" y="398.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="306.7" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="309.7" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="306.7" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="309.7" y="366.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.35%)</title><rect x="307.0" y="547.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="310.0" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.30%)</title><rect x="307.0" y="531.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="310.0" y="542.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="307.2" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="310.2" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (11 samples, 0.25%)</title><rect x="307.5" y="515.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="310.5" y="526.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.23%)</title><rect x="307.8" y="499.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="310.8" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.12%)</title><rect x="309.1" y="483.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="312.1" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="310.5" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.5" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.07%)</title><rect x="311.1" y="547.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.1" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="311.3" y="531.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.3" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="311.6" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="314.6" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="311.9" y="547.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.9" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.09%)</title><rect x="312.1" y="579.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="315.1" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.09%)</title><rect x="312.1" y="563.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="315.1" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.09%)</title><rect x="312.1" y="547.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="315.1" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="312.7" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="315.7" y="542.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="313.0" y="531.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="316.0" y="542.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="313.0" y="515.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="316.0" y="526.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="313.2" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="316.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="313.5" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="316.5" y="606.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="313.5" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="316.5" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="313.5" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="316.5" y="574.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="313.8" y="563.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="316.8" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="313.8" y="547.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="316.8" y="558.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.05%)</title><rect x="314.0" y="675.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="317.0" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="314.6" y="675.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="317.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="314.6" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="317.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="314.6" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="317.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="314.6" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.6" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="314.6" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="317.6" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="314.6" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="317.6" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="314.6" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="317.6" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="314.6" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="317.6" y="574.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="314.6" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="317.6" y="558.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="314.6" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="317.6" y="542.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.02%)</title><rect x="314.6" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="317.6" y="526.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.02%)</title><rect x="314.6" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="317.6" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="314.6" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.6" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="314.6" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (36 samples, 0.83%)</title><rect x="314.9" y="707.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="315.1" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="315.4" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="315.4" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="315.7" y="659.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (19 samples, 0.44%)</title><rect x="315.9" y="691.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="316.5" y="675.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="319.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.32%)</title><rect x="317.3" y="675.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.32%)</title><rect x="317.3" y="659.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="321.1" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.05%)</title><rect x="321.4" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="321.7" y="675.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.23%)</title><rect x="321.9" y="691.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="323.3" y="675.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.09%)</title><rect x="323.3" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="324.4" y="675.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="324.4" y="659.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (48 samples, 1.11%)</title><rect x="324.6" y="707.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.07%)</title><rect x="326.8" y="691.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.07%)</title><rect x="326.8" y="675.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="327.6" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (31 samples, 0.71%)</title><rect x="328.2" y="691.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="328.7" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.02%)</title><rect x="328.7" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (27 samples, 0.62%)</title><rect x="329.0" y="675.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.charAt (22 samples, 0.51%)</title><rect x="329.5" y="659.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="335.3" y="643.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="335.5" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="335.5" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.5" y="654.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.05%)</title><rect x="335.8" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="336.3" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="339.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="336.3" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.3" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="336.3" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="336.3" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="336.3" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.09%)</title><rect x="336.6" y="691.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.09%)</title><rect x="337.7" y="707.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="338.5" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="338.5" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (114 samples, 2.63%)</title><rect x="338.8" y="707.0" width="31.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.8" y="718.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (10 samples, 0.23%)</title><rect x="341.0" y="691.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="344.0" y="702.0"></text>
</g>
<g>
<title>__GI___setsockopt (95 samples, 2.19%)</title><rect x="343.7" y="691.0" width="25.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="346.7" y="702.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 2.03%)</title><rect x="345.6" y="675.0" width="23.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="348.6" y="686.0">e..</text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.09%)</title><rect x="345.6" y="659.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 1.94%)</title><rect x="346.7" y="659.0" width="22.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.7" y="670.0">d..</text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.05%)</title><rect x="352.4" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="355.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (60 samples, 1.38%)</title><rect x="352.9" y="643.0" width="16.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.9" y="654.0"></text>
</g>
<g>
<title>__sys_setsockopt (57 samples, 1.31%)</title><rect x="352.9" y="627.0" width="15.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="355.9" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="353.5" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.5" y="622.0"></text>
</g>
<g>
<title>__get_user_4 (6 samples, 0.14%)</title><rect x="354.0" y="611.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="357.0" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.02%)</title><rect x="355.7" y="611.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="358.7" y="622.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="355.9" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="358.9" y="622.0"></text>
</g>
<g>
<title>security_socket_setsockopt (9 samples, 0.21%)</title><rect x="356.2" y="611.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="359.2" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.05%)</title><rect x="357.0" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="360.0" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (4 samples, 0.09%)</title><rect x="357.6" y="595.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.6" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="357.6" y="579.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.6" y="590.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (3 samples, 0.07%)</title><rect x="357.8" y="579.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="360.8" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="358.1" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="361.1" y="574.0"></text>
</g>
<g>
<title>sock_setsockopt (26 samples, 0.60%)</title><rect x="358.6" y="611.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.6" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="360.8" y="595.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="363.8" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="361.4" y="595.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="364.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="361.6" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="364.6" y="590.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.16%)</title><rect x="361.9" y="595.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="364.9" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.05%)</title><rect x="363.3" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.3" y="590.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.14%)</title><rect x="363.8" y="595.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.8" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="364.4" y="579.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="367.4" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.07%)</title><rect x="364.6" y="579.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="367.6" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="365.4" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="368.4" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.23%)</title><rect x="365.7" y="611.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="368.7" y="622.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.16%)</title><rect x="365.7" y="595.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="368.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.16%)</title><rect x="365.7" y="579.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="368.7" y="590.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.12%)</title><rect x="366.3" y="563.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="369.3" y="574.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="367.6" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="370.6" y="606.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="368.4" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="371.4" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.02%)</title><rect x="368.7" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="371.7" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="369.0" y="627.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="372.0" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="369.2" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="372.2" y="654.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="369.2" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="372.2" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="369.2" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="372.2" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="369.2" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.2" y="606.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="369.2" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="372.2" y="590.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="369.2" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="372.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="369.2" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="372.2" y="558.0"></text>
</g>
<g>
<title>setsockopt@plt (1 samples, 0.02%)</title><rect x="369.5" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="372.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (388 samples, 8.94%)</title><rect x="369.8" y="707.0" width="105.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.8" y="718.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (17 samples, 0.39%)</title><rect x="372.2" y="691.0" width="4.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="375.2" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.07%)</title><rect x="373.6" y="675.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="376.6" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (5 samples, 0.12%)</title><rect x="374.4" y="675.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="377.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="375.8" y="675.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="378.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="375.8" y="659.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="378.8" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="376.0" y="659.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="379.0" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="376.3" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="379.3" y="654.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.02%)</title><rect x="376.6" y="675.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="379.6" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.05%)</title><rect x="376.9" y="691.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="379.9" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="377.4" y="691.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="380.4" y="702.0"></text>
</g>
<g>
<title>__libc_send (359 samples, 8.27%)</title><rect x="377.7" y="691.0" width="97.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="380.7" y="702.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (353 samples, 8.14%)</title><rect x="379.3" y="675.0" width="96.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.3" y="686.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="379.3" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="382.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (352 samples, 8.11%)</title><rect x="379.6" y="659.0" width="95.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="382.6" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (334 samples, 7.70%)</title><rect x="382.8" y="643.0" width="90.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="385.8" y="654.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (333 samples, 7.67%)</title><rect x="382.8" y="627.0" width="90.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="385.8" y="638.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="382.8" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="385.8" y="622.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="383.1" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.1" y="622.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="383.1" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.1" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="383.4" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.4" y="622.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="383.7" y="611.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="386.7" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (326 samples, 7.51%)</title><rect x="383.9" y="611.0" width="88.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="386.9" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (324 samples, 7.47%)</title><rect x="384.2" y="595.0" width="88.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="387.2" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (322 samples, 7.42%)</title><rect x="384.7" y="579.0" width="87.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="387.7" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="385.0" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.0" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="385.6" y="563.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="388.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="385.8" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="388.8" y="574.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.07%)</title><rect x="386.1" y="563.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="386.4" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="389.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="386.7" y="547.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="389.7" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="386.7" y="531.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="389.7" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="386.9" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="389.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (313 samples, 7.21%)</title><rect x="387.2" y="563.0" width="85.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="390.2" y="574.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="388.0" y="547.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.0" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="388.3" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="391.3" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="388.8" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="391.8" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="389.1" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="392.1" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="389.1" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.1" y="542.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="389.6" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="392.6" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="389.9" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (17 samples, 0.39%)</title><rect x="390.2" y="547.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="393.2" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.35%)</title><rect x="390.5" y="531.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.05%)</title><rect x="391.0" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="394.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="391.0" y="499.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.21%)</title><rect x="391.5" y="515.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="394.5" y="526.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.05%)</title><rect x="394.0" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="394.5" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="397.5" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.05%)</title><rect x="394.8" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.8" y="558.0"></text>
</g>
<g>
<title>tcp_push (282 samples, 6.50%)</title><rect x="395.4" y="547.0" width="76.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="398.4" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (282 samples, 6.50%)</title><rect x="395.4" y="531.0" width="76.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="398.4" y="542.0">__tcp_pu..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="395.4" y="515.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="398.4" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="395.6" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="398.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (280 samples, 6.45%)</title><rect x="395.9" y="515.0" width="76.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="398.9" y="526.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (264 samples, 6.08%)</title><rect x="397.5" y="499.0" width="71.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="400.5" y="510.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="400.5" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="403.5" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (250 samples, 5.76%)</title><rect x="400.8" y="483.0" width="68.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.8" y="494.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (249 samples, 5.74%)</title><rect x="401.1" y="467.0" width="67.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.1" y="478.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (244 samples, 5.62%)</title><rect x="401.6" y="451.0" width="66.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="404.6" y="462.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (40 samples, 0.92%)</title><rect x="401.6" y="435.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="404.6" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="401.6" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="404.6" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.02%)</title><rect x="401.9" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="404.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (36 samples, 0.83%)</title><rect x="402.2" y="419.0" width="9.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="405.2" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.02%)</title><rect x="403.0" y="403.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.0" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.12%)</title><rect x="403.2" y="403.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.2" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.12%)</title><rect x="403.2" y="387.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="406.2" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (22 samples, 0.51%)</title><rect x="404.6" y="403.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="407.6" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (22 samples, 0.51%)</title><rect x="404.6" y="387.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="407.6" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.14%)</title><rect x="404.9" y="371.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="407.9" y="382.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.02%)</title><rect x="406.5" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.5" y="382.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.02%)</title><rect x="406.8" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="409.8" y="382.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.02%)</title><rect x="407.1" y="371.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="410.1" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.05%)</title><rect x="407.3" y="371.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="410.3" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.02%)</title><rect x="407.9" y="371.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="410.9" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (9 samples, 0.21%)</title><rect x="408.1" y="371.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="411.1" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="408.7" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="411.7" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (6 samples, 0.14%)</title><rect x="409.0" y="355.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.0" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.02%)</title><rect x="410.3" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="413.3" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.02%)</title><rect x="410.6" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="413.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.09%)</title><rect x="410.9" y="403.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.05%)</title><rect x="411.4" y="387.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="414.4" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.05%)</title><rect x="411.4" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.4" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.05%)</title><rect x="411.9" y="419.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.9" y="430.0"></text>
</g>
<g>
<title>ip_output (202 samples, 4.66%)</title><rect x="412.5" y="435.0" width="54.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="415.5" y="446.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (198 samples, 4.56%)</title><rect x="412.5" y="419.0" width="53.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="415.5" y="430.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.07%)</title><rect x="412.8" y="403.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="415.8" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (194 samples, 4.47%)</title><rect x="413.6" y="403.0" width="52.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="416.6" y="414.0">ip_fi..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="414.1" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="417.1" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (176 samples, 4.06%)</title><rect x="414.4" y="387.0" width="47.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="417.4" y="398.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.21 (175 samples, 4.03%)</title><rect x="414.7" y="371.0" width="47.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="417.7" y="382.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (171 samples, 3.94%)</title><rect x="415.8" y="355.0" width="46.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.8" y="366.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (171 samples, 3.94%)</title><rect x="415.8" y="339.0" width="46.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="418.8" y="350.0">__so..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="416.6" y="323.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="419.6" y="334.0"></text>
</g>
<g>
<title>net_rx_action (167 samples, 3.85%)</title><rect x="416.8" y="323.0" width="45.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="419.8" y="334.0">net_..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="417.9" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="420.9" y="318.0"></text>
</g>
<g>
<title>process_backlog (162 samples, 3.73%)</title><rect x="418.2" y="307.0" width="44.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.2" y="318.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (158 samples, 3.64%)</title><rect x="419.3" y="291.0" width="43.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.3" y="302.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (158 samples, 3.64%)</title><rect x="419.3" y="275.0" width="43.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="422.3" y="286.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="419.3" y="259.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="422.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv (154 samples, 3.55%)</title><rect x="420.1" y="259.0" width="41.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="423.1" y="270.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (149 samples, 3.43%)</title><rect x="420.4" y="243.0" width="40.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.4" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (147 samples, 3.39%)</title><rect x="420.6" y="227.0" width="40.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.6" y="238.0">ip_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="420.9" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="423.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (141 samples, 3.25%)</title><rect x="421.2" y="211.0" width="38.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.2" y="222.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (140 samples, 3.23%)</title><rect x="421.2" y="195.0" width="38.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.2" y="206.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (138 samples, 3.18%)</title><rect x="421.7" y="179.0" width="37.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="424.7" y="190.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.16%)</title><rect x="423.4" y="163.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.4" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.05%)</title><rect x="424.7" y="147.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="427.7" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.05%)</title><rect x="425.3" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="428.3" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="425.8" y="163.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="428.8" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="425.8" y="147.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.8" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="426.4" y="163.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="429.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (119 samples, 2.74%)</title><rect x="426.6" y="163.0" width="32.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="429.6" y="174.0">tc..</text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.07%)</title><rect x="427.4" y="147.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.4" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (113 samples, 2.60%)</title><rect x="428.3" y="147.0" width="30.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="431.3" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="429.6" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="432.6" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="429.6" y="115.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.6" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="429.6" y="99.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="432.6" y="110.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="429.9" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack (26 samples, 0.60%)</title><rect x="430.2" y="131.0" width="7.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="433.2" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="431.0" y="115.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="434.0" y="126.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.05%)</title><rect x="431.5" y="115.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.5" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="432.1" y="115.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="435.1" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.37%)</title><rect x="432.3" y="115.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="435.3" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.21%)</title><rect x="433.2" y="99.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="436.2" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.07%)</title><rect x="433.2" y="83.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="436.2" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="433.2" y="67.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="436.2" y="78.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.14%)</title><rect x="434.0" y="83.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.0" y="94.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="434.2" y="67.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="437.2" y="78.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.07%)</title><rect x="434.2" y="51.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="437.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="434.2" y="35.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="437.2" y="46.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="434.5" y="35.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="437.5" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="435.1" y="67.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.1" y="78.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.05%)</title><rect x="435.6" y="99.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.05%)</title><rect x="436.1" y="99.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="439.1" y="110.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="436.7" y="115.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="439.7" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="437.0" y="115.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="440.0" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="437.2" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="440.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (75 samples, 1.73%)</title><rect x="437.5" y="131.0" width="20.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.05%)</title><rect x="438.1" y="115.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.1" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (70 samples, 1.61%)</title><rect x="438.6" y="115.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="441.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (69 samples, 1.59%)</title><rect x="438.9" y="99.0" width="18.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="441.9" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (68 samples, 1.57%)</title><rect x="439.1" y="83.0" width="18.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="442.1" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (68 samples, 1.57%)</title><rect x="439.1" y="67.0" width="18.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="442.1" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="457.6" y="115.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="460.6" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="457.9" y="131.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="460.9" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="457.9" y="115.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="460.9" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="457.9" y="99.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="460.9" y="110.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="458.2" y="115.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="461.2" y="126.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="458.4" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.4" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="458.7" y="131.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="461.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="459.0" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="462.0" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="459.0" y="147.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="459.3" y="195.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.3" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="459.5" y="211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="462.5" y="222.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (1 samples, 0.02%)</title><rect x="459.8" y="211.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="462.8" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="460.1" y="211.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="463.1" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.02%)</title><rect x="460.1" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.1" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.02%)</title><rect x="460.1" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="463.1" y="190.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.02%)</title><rect x="460.4" y="195.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="463.4" y="206.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="460.4" y="179.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="463.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="460.6" y="227.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="463.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (1 samples, 0.02%)</title><rect x="460.9" y="243.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.9" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="461.2" y="243.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="464.2" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="461.4" y="243.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="464.4" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.05%)</title><rect x="461.4" y="227.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.4" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.05%)</title><rect x="461.4" y="211.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="464.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="462.0" y="259.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.0" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.35%)</title><rect x="462.3" y="387.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="465.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.30%)</title><rect x="462.3" y="371.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.3" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="463.1" y="355.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="466.1" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.09%)</title><rect x="463.3" y="355.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="463.6" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="466.6" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="463.9" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.9" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="463.9" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.9" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="463.9" y="291.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.9" y="302.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="464.2" y="339.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="467.2" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="464.4" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="467.4" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.09%)</title><rect x="464.7" y="355.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="467.7" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="465.2" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="468.2" y="350.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="465.5" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="468.5" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.05%)</title><rect x="465.8" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="468.8" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.09%)</title><rect x="466.3" y="419.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.3" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.02%)</title><rect x="466.6" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (2 samples, 0.05%)</title><rect x="466.9" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="467.2" y="387.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="470.2" y="398.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="467.4" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="470.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="467.7" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="470.7" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.07%)</title><rect x="468.0" y="451.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="471.0" y="462.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="468.8" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="471.8" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="468.8" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="471.8" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="469.1" y="483.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="472.1" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="469.1" y="467.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.1" y="478.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="469.3" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.3" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="469.6" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.6" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="469.9" y="499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.9" y="510.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="470.1" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="473.1" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="470.4" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="473.4" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="470.7" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="473.7" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.05%)</title><rect x="471.0" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="474.0" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="471.5" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="474.5" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="471.8" y="499.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="474.8" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="472.0" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="475.0" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="472.0" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.0" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="472.3" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.3" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="472.3" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="475.3" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="472.3" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="475.3" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="472.3" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="475.3" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="472.6" y="611.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="475.6" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="472.6" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.6" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="472.6" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="475.6" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="472.9" y="579.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.9" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="472.9" y="563.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.9" y="574.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="473.1" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.1" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="473.4" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="476.4" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.12%)</title><rect x="473.7" y="643.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="476.7" y="654.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.12%)</title><rect x="473.7" y="627.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.7" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.12%)</title><rect x="473.7" y="611.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="476.7" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.09%)</title><rect x="474.0" y="595.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.0" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="474.8" y="579.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.8" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="474.8" y="563.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.8" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="474.8" y="547.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="477.8" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="474.8" y="531.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="477.8" y="542.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="474.8" y="515.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="477.8" y="526.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="474.8" y="499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="477.8" y="510.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="474.8" y="483.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="477.8" y="494.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="475.0" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="478.0" y="654.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="475.0" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="478.0" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="475.0" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="478.0" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="475.0" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="478.0" y="606.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.05%)</title><rect x="475.3" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.3" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.02%)</title><rect x="475.6" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.6" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.02%)</title><rect x="475.6" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.getNodes (15 samples, 0.35%)</title><rect x="475.9" y="755.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="475.9" y="739.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="475.9" y="723.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.16%)</title><rect x="475.9" y="707.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.16%)</title><rect x="475.9" y="691.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="476.7" y="675.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.09%)</title><rect x="476.7" y="659.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.09%)</title><rect x="476.7" y="643.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.7" y="654.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.defaultCharset (1 samples, 0.02%)</title><rect x="477.8" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="477.8" y="723.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (7 samples, 0.16%)</title><rect x="478.0" y="739.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.05%)</title><rect x="479.4" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="479.7" y="707.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueExternalResponse (68 samples, 1.57%)</title><rect x="479.9" y="755.0" width="18.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.14%)</title><rect x="479.9" y="739.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.9" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="481.3" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="484.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.02%)</title><rect x="481.3" y="707.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="484.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="481.3" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="484.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="481.3" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="484.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="481.3" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="484.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.syncReplicaValues (55 samples, 1.27%)</title><rect x="481.6" y="739.0" width="14.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.05%)</title><rect x="489.7" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="490.3" y="723.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.3" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="490.5" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="490.8" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.8" y="734.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (2 samples, 0.05%)</title><rect x="491.1" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.12%)</title><rect x="491.6" y="723.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.12%)</title><rect x="491.6" y="707.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.12%)</title><rect x="491.6" y="691.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (2 samples, 0.05%)</title><rect x="491.6" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.07%)</title><rect x="492.2" y="675.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="492.4" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.02%)</title><rect x="492.4" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="492.4" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="492.4" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="495.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.02%)</title><rect x="492.4" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.4" y="606.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$80/867048386.apply (1 samples, 0.02%)</title><rect x="492.4" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.4" y="590.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.02%)</title><rect x="492.4" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.4" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/1667381018.compare (1 samples, 0.02%)</title><rect x="492.4" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.4" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (1 samples, 0.02%)</title><rect x="492.4" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="492.7" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.02%)</title><rect x="492.7" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="495.7" y="638.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.12%)</title><rect x="493.0" y="723.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="496.0" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.12%)</title><rect x="494.3" y="723.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="497.3" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="495.7" y="723.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="498.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.02%)</title><rect x="496.0" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (1 samples, 0.02%)</title><rect x="496.3" y="723.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytes (3 samples, 0.07%)</title><rect x="496.5" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.02%)</title><rect x="496.8" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="496.8" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="497.1" y="723.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (4 samples, 0.09%)</title><rect x="497.3" y="739.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.05%)</title><rect x="497.3" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="497.3" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="500.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="497.9" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="497.9" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="497.9" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="497.9" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="497.9" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="497.9" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.9" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="497.9" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.9" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="498.2" y="723.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="498.2" y="707.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="498.2" y="691.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.2" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="498.2" y="675.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="501.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalResponse (1,795 samples, 41.37%)</title><rect x="498.4" y="755.0" width="488.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.4" y="766.0">ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalRes..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (251 samples, 5.78%)</title><rect x="498.7" y="739.0" width="68.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.7" y="750.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (251 samples, 5.78%)</title><rect x="498.7" y="723.0" width="68.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.7" y="734.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (247 samples, 5.69%)</title><rect x="499.0" y="707.0" width="67.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.0" y="718.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (241 samples, 5.55%)</title><rect x="499.2" y="691.0" width="65.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.2" y="702.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (240 samples, 5.53%)</title><rect x="499.5" y="675.0" width="65.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.5" y="686.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (240 samples, 5.53%)</title><rect x="499.5" y="659.0" width="65.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.5" y="670.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (240 samples, 5.53%)</title><rect x="499.5" y="643.0" width="65.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.5" y="654.0">ch/qos/..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (231 samples, 5.32%)</title><rect x="500.3" y="627.0" width="62.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.3" y="638.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (231 samples, 5.32%)</title><rect x="500.3" y="611.0" width="62.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.3" y="622.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.02%)</title><rect x="500.3" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.3" y="606.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (1 samples, 0.02%)</title><rect x="500.3" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.3" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.02%)</title><rect x="500.3" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.3" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="500.3" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.3" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="500.3" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.3" y="542.0"></text>
</g>
<g>
<title>java/io/OutputStream.flush (1 samples, 0.02%)</title><rect x="500.3" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.3" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (150 samples, 3.46%)</title><rect x="500.6" y="595.0" width="40.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.6" y="606.0">ch/..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (140 samples, 3.23%)</title><rect x="500.6" y="579.0" width="38.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.6" y="590.0">ch/..</text>
</g>
<g>
<title>java/io/FilterOutputStream.write (140 samples, 3.23%)</title><rect x="500.6" y="563.0" width="38.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.6" y="574.0">jav..</text>
</g>
<g>
<title>java/io/PrintStream.write (140 samples, 3.23%)</title><rect x="500.6" y="547.0" width="38.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.6" y="558.0">jav..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (140 samples, 3.23%)</title><rect x="500.6" y="531.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.6" y="542.0">jav..</text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (140 samples, 3.23%)</title><rect x="500.6" y="515.0" width="38.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.6" y="526.0">jav..</text>
</g>
<g>
<title>java/io/FileOutputStream.write (138 samples, 3.18%)</title><rect x="501.1" y="499.0" width="37.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.1" y="510.0">jav..</text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (138 samples, 3.18%)</title><rect x="501.1" y="483.0" width="37.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.1" y="494.0">jav..</text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (37 samples, 0.85%)</title><rect x="502.2" y="467.0" width="10.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="505.2" y="478.0"></text>
</g>
<g>
<title>jni_GetArrayLength (3 samples, 0.07%)</title><rect x="502.8" y="451.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="505.8" y="462.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="503.6" y="451.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="506.6" y="462.0"></text>
</g>
<g>
<title>writeBytes (31 samples, 0.71%)</title><rect x="503.9" y="451.0" width="8.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="506.9" y="462.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.09%)</title><rect x="503.9" y="435.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="506.9" y="446.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="505.0" y="435.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="508.0" y="446.0"></text>
</g>
<g>
<title>__GI_write (4 samples, 0.09%)</title><rect x="505.2" y="435.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="508.2" y="446.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.02%)</title><rect x="506.3" y="435.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="509.3" y="446.0"></text>
</g>
<g>
<title>handleWrite (3 samples, 0.07%)</title><rect x="506.6" y="435.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="509.6" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (3 samples, 0.07%)</title><rect x="507.4" y="435.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="510.4" y="446.0"></text>
</g>
<g>
<title>jni_GetArrayLength (5 samples, 0.12%)</title><rect x="508.2" y="435.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="511.2" y="446.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="509.0" y="419.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="512.0" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="509.3" y="419.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="512.3" y="430.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="509.6" y="435.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="512.6" y="446.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="509.6" y="419.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="512.6" y="430.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="509.8" y="403.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="512.8" y="414.0"></text>
</g>
<g>
<title>jni_GetObjectField (8 samples, 0.18%)</title><rect x="510.1" y="435.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="513.1" y="446.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.05%)</title><rect x="510.9" y="419.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="513.9" y="430.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (3 samples, 0.07%)</title><rect x="511.5" y="419.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="514.5" y="430.0"></text>
</g>
<g>
<title>AccessBarrierSupport::resolve_unknown_oop_ref_strength(unsigned long, oopDesc*, long) (2 samples, 0.05%)</title><rect x="511.5" y="403.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="514.5" y="414.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.02%)</title><rect x="512.0" y="403.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="515.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 2.24%)</title><rect x="512.3" y="467.0" width="26.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="515.3" y="478.0">[..</text>
</g>
<g>
<title>__GI_write (96 samples, 2.21%)</title><rect x="512.3" y="451.0" width="26.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="515.3" y="462.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (95 samples, 2.19%)</title><rect x="512.6" y="435.0" width="25.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="515.6" y="446.0">e..</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="512.6" y="419.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.6" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="512.8" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.8" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (93 samples, 2.14%)</title><rect x="513.1" y="419.0" width="25.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.1" y="430.0">d..</text>
</g>
<g>
<title>__x64_sys_write (79 samples, 1.82%)</title><rect x="516.9" y="403.0" width="21.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="519.9" y="414.0">_..</text>
</g>
<g>
<title>ksys_write (79 samples, 1.82%)</title><rect x="516.9" y="387.0" width="21.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="519.9" y="398.0">k..</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.12%)</title><rect x="516.9" y="371.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="519.9" y="382.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.12%)</title><rect x="516.9" y="355.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="519.9" y="366.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="517.2" y="339.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="520.2" y="350.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="518.3" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="521.3" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="518.6" y="371.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="521.6" y="382.0"></text>
</g>
<g>
<title>vfs_write (72 samples, 1.66%)</title><rect x="518.8" y="371.0" width="19.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="521.8" y="382.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="519.1" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="522.1" y="366.0"></text>
</g>
<g>
<title>__vfs_write (64 samples, 1.47%)</title><rect x="519.4" y="355.0" width="17.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.4" y="366.0"></text>
</g>
<g>
<title>new_sync_write (64 samples, 1.47%)</title><rect x="519.4" y="339.0" width="17.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="522.4" y="350.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="519.9" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="522.9" y="334.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="520.2" y="323.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="523.2" y="334.0"></text>
</g>
<g>
<title>pipe_write (60 samples, 1.38%)</title><rect x="520.5" y="323.0" width="16.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="523.5" y="334.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="521.5" y="307.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="524.5" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="521.8" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="524.8" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 1.01%)</title><rect x="522.1" y="307.0" width="12.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="525.1" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (44 samples, 1.01%)</title><rect x="522.1" y="291.0" width="12.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="525.1" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (42 samples, 0.97%)</title><rect x="522.4" y="275.0" width="11.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="525.4" y="286.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="533.8" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="536.8" y="286.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="533.8" y="259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="536.8" y="270.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="533.8" y="243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="536.8" y="254.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="533.8" y="227.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="536.8" y="238.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="533.8" y="211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.8" y="222.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="533.8" y="195.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="536.8" y="206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="533.8" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="536.8" y="190.0"></text>
</g>
<g>
<title>copy_page_from_iter (6 samples, 0.14%)</title><rect x="534.1" y="307.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="537.1" y="318.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.09%)</title><rect x="534.6" y="291.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="537.6" y="302.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.09%)</title><rect x="535.7" y="307.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="538.7" y="318.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.07%)</title><rect x="535.7" y="291.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="538.7" y="302.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.05%)</title><rect x="536.0" y="275.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="539.0" y="286.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.02%)</title><rect x="536.5" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.5" y="302.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="536.8" y="355.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="539.8" y="366.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.12%)</title><rect x="537.0" y="355.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.0" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="537.0" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="540.0" y="350.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.09%)</title><rect x="537.3" y="339.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="540.3" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.07%)</title><rect x="537.6" y="323.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="540.6" y="334.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.07%)</title><rect x="537.6" y="307.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="540.6" y="318.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="538.4" y="451.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="541.4" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="538.4" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="541.4" y="446.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="538.4" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="541.4" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="538.4" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="541.4" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="538.4" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="541.4" y="398.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="538.4" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="541.4" y="382.0"></text>
</g>
<g>
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="538.4" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="541.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.09%)</title><rect x="538.7" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.09%)</title><rect x="538.7" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="538.7" y="547.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="538.9" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="538.9" y="515.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="538.9" y="499.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.9" y="510.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="538.9" y="483.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="541.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="539.2" y="483.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="542.2" y="494.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="539.2" y="467.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="542.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="539.5" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="539.5" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.14%)</title><rect x="539.8" y="579.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.14%)</title><rect x="539.8" y="563.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.14%)</title><rect x="539.8" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.14%)</title><rect x="539.8" y="531.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.14%)</title><rect x="539.8" y="515.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.8" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.09%)</title><rect x="539.8" y="499.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="542.8" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="539.8" y="483.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="542.8" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.07%)</title><rect x="540.0" y="483.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="543.0" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="540.9" y="499.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="543.9" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="540.9" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="543.9" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="540.9" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="543.9" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="540.9" y="451.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="543.9" y="462.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="540.9" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="543.9" y="446.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="540.9" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.9" y="430.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.02%)</title><rect x="540.9" y="403.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="543.9" y="414.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="541.1" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="544.1" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (80 samples, 1.84%)</title><rect x="541.4" y="595.0" width="21.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.4" y="606.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (79 samples, 1.82%)</title><rect x="541.4" y="579.0" width="21.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.4" y="590.0">c..</text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (79 samples, 1.82%)</title><rect x="541.4" y="563.0" width="21.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.4" y="574.0">c..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="548.2" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.2" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="548.2" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="551.2" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="548.2" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.2" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="548.2" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="551.2" y="510.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="548.2" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="551.2" y="494.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="548.2" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.2" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="548.2" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="551.2" y="462.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (23 samples, 0.53%)</title><rect x="548.5" y="547.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.5" y="558.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (23 samples, 0.53%)</title><rect x="548.5" y="531.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (2 samples, 0.05%)</title><rect x="548.5" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="548.5" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="548.7" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.7" y="494.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (21 samples, 0.48%)</title><rect x="549.0" y="515.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.0" y="526.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (21 samples, 0.48%)</title><rect x="549.0" y="499.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.02%)</title><rect x="549.0" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.0" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="549.0" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.0" y="478.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (13 samples, 0.30%)</title><rect x="549.3" y="483.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.3" y="494.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (11 samples, 0.25%)</title><rect x="549.3" y="467.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (4 samples, 0.09%)</title><rect x="549.8" y="451.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="550.1" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.05%)</title><rect x="550.1" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.02%)</title><rect x="550.6" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.6" y="430.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (5 samples, 0.12%)</title><rect x="550.9" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.9" y="462.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (5 samples, 0.12%)</title><rect x="550.9" y="435.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.9" y="446.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (5 samples, 0.12%)</title><rect x="550.9" y="419.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (2 samples, 0.05%)</title><rect x="551.5" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.length (1 samples, 0.02%)</title><rect x="552.0" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.0" y="414.0"></text>
</g>
<g>
<title>java/util/Calendar.getDisplayName (1 samples, 0.02%)</title><rect x="552.3" y="467.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.3" y="478.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.02%)</title><rect x="552.5" y="467.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="555.5" y="478.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (7 samples, 0.16%)</title><rect x="552.8" y="483.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.8" y="494.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (7 samples, 0.16%)</title><rect x="552.8" y="467.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.8" y="478.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (7 samples, 0.16%)</title><rect x="552.8" y="451.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.8" y="462.0"></text>
</g>
<g>
<title>java/util/Calendar.setFieldsComputed (2 samples, 0.05%)</title><rect x="552.8" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.8" y="446.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (5 samples, 0.12%)</title><rect x="553.4" y="435.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.4" y="446.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (4 samples, 0.09%)</title><rect x="553.6" y="419.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.6" y="430.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (3 samples, 0.07%)</title><rect x="553.9" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.9" y="414.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTransitionIndex (3 samples, 0.07%)</title><rect x="553.9" y="387.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.9" y="398.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.05%)</title><rect x="554.7" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.7" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.07%)</title><rect x="555.3" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.3" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.05%)</title><rect x="556.1" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.07%)</title><rect x="556.6" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (17 samples, 0.39%)</title><rect x="557.4" y="547.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.4" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (17 samples, 0.39%)</title><rect x="557.4" y="531.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.09%)</title><rect x="557.7" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.09%)</title><rect x="557.7" y="499.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.7" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (6 samples, 0.14%)</title><rect x="558.8" y="515.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.14%)</title><rect x="558.8" y="499.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.8" y="510.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.07%)</title><rect x="558.8" y="483.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="561.8" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="559.6" y="483.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="562.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.14%)</title><rect x="560.4" y="515.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.4" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="561.8" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="564.8" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="561.8" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="564.8" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="561.8" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="564.8" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="561.8" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="564.8" y="462.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="561.8" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="564.8" y="446.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="561.8" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.8" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="561.8" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="564.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="562.1" y="547.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="562.3" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.3" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="562.6" y="547.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="565.6" y="558.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (1 samples, 0.02%)</title><rect x="562.9" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="562.9" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="562.9" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="562.9" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="562.9" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.9" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.getFilterChainDecision (4 samples, 0.09%)</title><rect x="563.2" y="627.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.2" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/FilterAttachableImpl.getFilterChainDecision (4 samples, 0.09%)</title><rect x="563.2" y="611.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="564.2" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.2" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="564.2" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="564.5" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.5" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="564.5" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.5" y="622.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (5 samples, 0.12%)</title><rect x="564.8" y="691.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.8" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.02%)</title><rect x="564.8" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.8" y="686.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="565.1" y="675.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="568.1" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="565.9" y="675.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="568.9" y="686.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="565.9" y="659.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="568.9" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (3 samples, 0.07%)</title><rect x="566.1" y="707.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (2 samples, 0.05%)</title><rect x="566.4" y="691.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (1,529 samples, 35.24%)</title><rect x="567.0" y="739.0" width="415.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.0" y="750.0">ru/mail/polis/service/codearound/TaskDAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (1,520 samples, 35.03%)</title><rect x="567.2" y="723.0" width="413.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.2" y="734.0">ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (143 samples, 3.30%)</title><rect x="567.2" y="707.0" width="38.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.2" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (143 samples, 3.30%)</title><rect x="567.2" y="691.0" width="38.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.2" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (143 samples, 3.30%)</title><rect x="567.2" y="675.0" width="38.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.2" y="686.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (143 samples, 3.30%)</title><rect x="567.2" y="659.0" width="38.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.2" y="670.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (139 samples, 3.20%)</title><rect x="568.3" y="643.0" width="37.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.3" y="654.0">jav..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (138 samples, 3.18%)</title><rect x="568.6" y="627.0" width="37.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.6" y="638.0">jav..</text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.07%)</title><rect x="568.6" y="611.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="571.6" y="622.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (135 samples, 3.11%)</title><rect x="569.4" y="611.0" width="36.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="572.4" y="622.0">Jav..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="569.7" y="595.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="572.7" y="606.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.07%)</title><rect x="570.2" y="595.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="573.2" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="570.8" y="579.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.8" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="570.8" y="563.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="573.8" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="570.8" y="547.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="573.8" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="570.8" y="531.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="573.8" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="570.8" y="515.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="573.8" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="570.8" y="499.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="573.8" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="570.8" y="483.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="573.8" y="494.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (127 samples, 2.93%)</title><rect x="571.0" y="595.0" width="34.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="574.0" y="606.0">JV..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="571.6" y="579.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="574.6" y="590.0"></text>
</g>
<g>
<title>JavaThread::active() (1 samples, 0.02%)</title><rect x="571.9" y="579.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="574.9" y="590.0"></text>
</g>
<g>
<title>PreserveExceptionMark::~PreserveExceptionMark() (1 samples, 0.02%)</title><rect x="572.1" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="575.1" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="572.4" y="579.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="575.4" y="590.0"></text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (1 samples, 0.02%)</title><rect x="572.7" y="579.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="575.7" y="590.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (119 samples, 2.74%)</title><rect x="572.9" y="579.0" width="32.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.9" y="590.0">ja..</text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="573.2" y="563.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="576.2" y="574.0"></text>
</g>
<g>
<title>Method::bcp_from(unsigned char*) const (3 samples, 0.07%)</title><rect x="574.0" y="563.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="577.0" y="574.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (3 samples, 0.07%)</title><rect x="574.8" y="563.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="577.8" y="574.0"></text>
</g>
<g>
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (2 samples, 0.05%)</title><rect x="575.7" y="563.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="578.7" y="574.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.05%)</title><rect x="575.7" y="547.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="578.7" y="558.0"></text>
</g>
<g>
<title>PreserveExceptionMark::~PreserveExceptionMark() (1 samples, 0.02%)</title><rect x="576.2" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="579.2" y="574.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="576.5" y="563.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="579.5" y="574.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.05%)</title><rect x="576.7" y="563.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="579.7" y="574.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.05%)</title><rect x="577.3" y="563.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="580.3" y="574.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (101 samples, 2.33%)</title><rect x="577.8" y="563.0" width="27.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="580.8" y="574.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.09%)</title><rect x="584.6" y="547.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="587.6" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.02%)</title><rect x="585.7" y="547.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="588.7" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (2 samples, 0.05%)</title><rect x="586.0" y="547.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="589.0" y="558.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (22 samples, 0.51%)</title><rect x="586.5" y="547.0" width="6.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="589.5" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.02%)</title><rect x="586.8" y="531.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="589.8" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (17 samples, 0.39%)</title><rect x="587.1" y="531.0" width="4.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="590.1" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.02%)</title><rect x="587.4" y="515.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="590.4" y="526.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (10 samples, 0.23%)</title><rect x="587.6" y="515.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="590.6" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.18%)</title><rect x="587.9" y="499.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="590.9" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.12%)</title><rect x="587.9" y="483.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="590.9" y="494.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="589.0" y="467.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="592.0" y="478.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.07%)</title><rect x="589.3" y="483.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="592.3" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="590.1" y="499.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="593.1" y="510.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.09%)</title><rect x="590.3" y="515.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="593.3" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.07%)</title><rect x="590.6" y="499.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="590.6" y="483.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="593.6" y="494.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="590.9" y="467.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="593.9" y="478.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="591.2" y="467.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="594.2" y="478.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (1 samples, 0.02%)</title><rect x="591.4" y="515.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="594.4" y="526.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.05%)</title><rect x="591.7" y="531.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="594.7" y="542.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="592.2" y="531.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="595.2" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.02%)</title><rect x="592.5" y="547.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="595.5" y="558.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (3 samples, 0.07%)</title><rect x="592.8" y="547.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="595.8" y="558.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.05%)</title><rect x="593.6" y="547.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="596.6" y="558.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="593.9" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="596.9" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="593.9" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="596.9" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="593.9" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="596.9" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="593.9" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="596.9" y="494.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="593.9" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="596.9" y="478.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="593.9" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="596.9" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="593.9" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.9" y="446.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.23%)</title><rect x="594.2" y="547.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="597.2" y="558.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.16%)</title><rect x="594.4" y="531.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="597.4" y="542.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.07%)</title><rect x="595.5" y="515.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="598.5" y="526.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.05%)</title><rect x="596.3" y="531.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="599.3" y="542.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (6 samples, 0.14%)</title><rect x="596.9" y="547.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="599.9" y="558.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.05%)</title><rect x="598.5" y="547.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="601.5" y="558.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.07%)</title><rect x="599.0" y="547.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="602.0" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.07%)</title><rect x="599.0" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="602.0" y="542.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.07%)</title><rect x="599.0" y="515.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="602.0" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.07%)</title><rect x="599.0" y="499.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="602.0" y="510.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="599.0" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="602.0" y="494.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="599.0" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="602.0" y="478.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="599.0" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.0" y="462.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.02%)</title><rect x="599.0" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="602.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="599.0" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.0" y="430.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.05%)</title><rect x="599.3" y="483.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="602.3" y="494.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.05%)</title><rect x="599.3" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.3" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="599.3" y="451.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="602.3" y="462.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="599.9" y="547.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="602.9" y="558.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (18 samples, 0.41%)</title><rect x="600.1" y="547.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="603.1" y="558.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.02%)</title><rect x="600.7" y="531.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="603.7" y="542.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="601.0" y="531.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="604.0" y="542.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (14 samples, 0.32%)</title><rect x="601.2" y="531.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="604.2" y="542.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (12 samples, 0.28%)</title><rect x="601.8" y="515.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="604.8" y="526.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (9 samples, 0.21%)</title><rect x="602.6" y="499.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="605.6" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="605.0" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="608.0" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="605.0" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="608.0" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="605.0" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="608.0" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="605.3" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="608.3" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.02%)</title><rect x="605.6" y="595.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="608.6" y="606.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.02%)</title><rect x="605.8" y="595.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="608.8" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,367 samples, 31.50%)</title><rect x="606.1" y="707.0" width="371.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.1" y="718.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,367 samples, 31.50%)</title><rect x="606.1" y="691.0" width="371.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.1" y="702.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (1,174 samples, 27.06%)</title><rect x="607.5" y="675.0" width="319.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="610.5" y="686.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (1 samples, 0.02%)</title><rect x="608.3" y="659.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="611.3" y="670.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="608.6" y="659.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="611.6" y="670.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.07%)</title><rect x="608.8" y="659.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="611.8" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="609.7" y="659.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="612.7" y="670.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.02%)</title><rect x="610.2" y="659.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="613.2" y="670.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (1 samples, 0.02%)</title><rect x="610.5" y="659.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="613.5" y="670.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="610.7" y="659.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="613.7" y="670.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.02%)</title><rect x="611.0" y="659.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="614.0" y="670.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.05%)</title><rect x="611.3" y="659.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="614.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.05%)</title><rect x="611.8" y="659.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="614.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="612.4" y="659.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="615.4" y="670.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1,154 samples, 26.60%)</title><rect x="612.6" y="659.0" width="313.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="615.6" y="670.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*,..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="613.5" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="616.5" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.05%)</title><rect x="614.0" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="617.0" y="654.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.09%)</title><rect x="614.5" y="643.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="617.5" y="654.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.05%)</title><rect x="615.6" y="643.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="618.6" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="615.9" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="618.9" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.18%)</title><rect x="616.2" y="643.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="619.2" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="616.5" y="627.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="619.5" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="616.7" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="619.7" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.05%)</title><rect x="617.0" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="620.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="617.3" y="611.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="620.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="617.3" y="595.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="620.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="617.3" y="579.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.3" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.07%)</title><rect x="617.5" y="627.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="620.5" y="638.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="618.1" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="621.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1,116 samples, 25.72%)</title><rect x="618.4" y="643.0" width="303.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="621.4" y="654.0">rocksdb::DB::Get(rocksdb::ReadOptions con..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (5 samples, 0.12%)</title><rect x="619.4" y="627.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="622.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.02%)</title><rect x="620.8" y="627.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="623.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1,103 samples, 25.42%)</title><rect x="621.1" y="627.0" width="299.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="624.1" y="638.0">rocksdb::DB::Get(rocksdb::ReadOptions co..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (5 samples, 0.12%)</title><rect x="622.4" y="611.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="625.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (1 samples, 0.02%)</title><rect x="622.4" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="625.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.05%)</title><rect x="622.7" y="595.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="625.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.05%)</title><rect x="623.3" y="595.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="626.3" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="623.3" y="579.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="626.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.02%)</title><rect x="623.5" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="626.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1,092 samples, 25.17%)</title><rect x="623.8" y="611.0" width="297.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="626.8" y="622.0">rocksdb::DBImpl::Get(rocksdb::ReadOption..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1,088 samples, 25.07%)</title><rect x="624.6" y="595.0" width="295.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="627.6" y="606.0">rocksdb::DBImpl::Get(rocksdb::ReadOption..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.07%)</title><rect x="624.9" y="579.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="627.9" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.02%)</title><rect x="625.7" y="579.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="628.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.12%)</title><rect x="626.0" y="579.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="629.0" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="627.1" y="563.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="630.1" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="627.1" y="547.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="630.1" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="627.1" y="531.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="630.1" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="627.1" y="515.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="630.1" y="526.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="627.1" y="499.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="630.1" y="510.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="627.1" y="483.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="630.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="627.1" y="467.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="630.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) [clone .plt] (3 samples, 0.07%)</title><rect x="627.3" y="579.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="630.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.05%)</title><rect x="628.1" y="579.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="631.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.02%)</title><rect x="628.7" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="631.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1,057 samples, 24.36%)</title><rect x="629.0" y="579.0" width="287.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="632.0" y="590.0">rocksdb::DBImpl::GetImpl(rocksdb::ReadO..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.05%)</title><rect x="633.6" y="563.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="636.6" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.09%)</title><rect x="634.1" y="563.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="637.1" y="574.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="635.2" y="563.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="638.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.16%)</title><rect x="635.5" y="563.0" width="1.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="638.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.05%)</title><rect x="637.4" y="563.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="640.4" y="574.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="637.9" y="563.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="640.9" y="574.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="638.2" y="563.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="641.2" y="574.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="638.2" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="641.2" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="638.2" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="641.2" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="638.2" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="641.2" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="638.2" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="641.2" y="510.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="638.2" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="641.2" y="494.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="638.2" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="641.2" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="638.2" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="641.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (9 samples, 0.21%)</title><rect x="638.5" y="563.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="641.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="639.0" y="547.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="642.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (1 samples, 0.02%)</title><rect x="639.3" y="547.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="642.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (4 samples, 0.09%)</title><rect x="639.6" y="547.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="642.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="640.7" y="547.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="643.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="640.7" y="531.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="643.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.05%)</title><rect x="640.9" y="563.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="643.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (7 samples, 0.16%)</title><rect x="641.5" y="563.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="644.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (5 samples, 0.12%)</title><rect x="641.5" y="547.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="644.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="641.5" y="531.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="644.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.05%)</title><rect x="641.7" y="531.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="644.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.05%)</title><rect x="642.3" y="531.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="645.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.05%)</title><rect x="642.8" y="547.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="645.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.02%)</title><rect x="643.4" y="563.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="646.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.02%)</title><rect x="643.6" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="646.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (3 samples, 0.07%)</title><rect x="643.9" y="563.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="646.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (130 samples, 3.00%)</title><rect x="644.7" y="563.0" width="35.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="647.7" y="574.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (6 samples, 0.14%)</title><rect x="646.6" y="547.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="649.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (117 samples, 2.70%)</title><rect x="648.3" y="547.0" width="31.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="651.3" y="558.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (113 samples, 2.60%)</title><rect x="648.8" y="531.0" width="30.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="651.8" y="542.0">/t..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (112 samples, 2.58%)</title><rect x="648.8" y="515.0" width="30.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="651.8" y="526.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.05%)</title><rect x="669.8" y="499.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="672.8" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="670.3" y="499.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="673.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="670.6" y="499.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="673.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (28 samples, 0.65%)</title><rect x="671.7" y="499.0" width="7.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="674.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.07%)</title><rect x="674.4" y="483.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="677.4" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="675.2" y="483.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="678.2" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (7 samples, 0.16%)</title><rect x="675.7" y="483.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="678.7" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="677.6" y="483.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="680.6" y="494.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.02%)</title><rect x="678.7" y="483.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="681.7" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="679.0" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="682.0" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="679.0" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="682.0" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="679.0" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="682.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.02%)</title><rect x="679.3" y="515.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="682.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.05%)</title><rect x="679.5" y="531.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="682.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="680.1" y="563.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="683.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.05%)</title><rect x="680.4" y="563.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="683.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.05%)</title><rect x="680.4" y="547.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="683.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) [clone .plt] (1 samples, 0.02%)</title><rect x="680.9" y="563.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="683.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="681.2" y="563.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="684.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (1 samples, 0.02%)</title><rect x="681.4" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="684.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (2 samples, 0.05%)</title><rect x="681.7" y="563.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="684.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (3 samples, 0.07%)</title><rect x="682.3" y="563.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="685.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="683.1" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="686.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="683.4" y="563.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="686.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (852 samples, 19.64%)</title><rect x="683.6" y="563.0" width="231.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="686.6" y="574.0">rocksdb::Version::Get(rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (12 samples, 0.28%)</title><rect x="689.9" y="547.0" width="3.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="692.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (5 samples, 0.12%)</title><rect x="691.8" y="531.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="694.8" y="542.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="692.6" y="515.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="695.6" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="692.9" y="515.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="695.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (2 samples, 0.05%)</title><rect x="693.1" y="547.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="696.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.05%)</title><rect x="693.7" y="547.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="696.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::FileIndexer::GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const (2 samples, 0.05%)</title><rect x="694.2" y="547.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="697.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::FileIndexer::GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const [clone .plt] (1 samples, 0.02%)</title><rect x="694.8" y="547.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="697.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (5 samples, 0.12%)</title><rect x="695.0" y="547.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="698.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.05%)</title><rect x="696.4" y="547.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="699.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="697.0" y="547.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="700.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (801 samples, 18.46%)</title><rect x="697.2" y="547.0" width="217.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="700.2" y="558.0">rocksdb::TableCache::Get(rock..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (2 samples, 0.05%)</title><rect x="700.8" y="531.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="703.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (3 samples, 0.07%)</title><rect x="701.3" y="531.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="704.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (753 samples, 17.35%)</title><rect x="702.1" y="531.0" width="204.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="705.1" y="542.0">rocksdb::BlockBasedTable::G..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.07%)</title><rect x="708.4" y="515.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="711.4" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.07%)</title><rect x="709.2" y="515.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="712.2" y="526.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.09%)</title><rect x="710.0" y="515.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="713.0" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="711.1" y="515.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="714.1" y="526.0"></text>
</g>
<g>
<title>free@plt (1 samples, 0.02%)</title><rect x="711.4" y="515.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="714.4" y="526.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="711.6" y="515.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="714.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (9 samples, 0.21%)</title><rect x="711.9" y="515.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="714.9" y="526.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.05%)</title><rect x="712.7" y="499.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="715.7" y="510.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.05%)</title><rect x="713.3" y="499.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="716.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.02%)</title><rect x="713.8" y="499.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="716.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.02%)</title><rect x="714.1" y="499.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="717.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.02%)</title><rect x="714.4" y="515.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="717.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.02%)</title><rect x="714.6" y="515.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="717.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (1 samples, 0.02%)</title><rect x="714.9" y="515.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="717.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.02%)</title><rect x="715.2" y="515.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="718.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (5 samples, 0.12%)</title><rect x="715.4" y="515.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="718.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) [clone .plt] (1 samples, 0.02%)</title><rect x="716.8" y="515.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="719.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (4 samples, 0.09%)</title><rect x="717.1" y="515.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="720.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.07%)</title><rect x="718.2" y="515.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="721.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (4 samples, 0.09%)</title><rect x="719.0" y="515.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="722.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) [clone .plt] (1 samples, 0.02%)</title><rect x="720.1" y="515.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="723.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (465 samples, 10.72%)</title><rect x="720.3" y="515.0" width="126.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="723.3" y="526.0">rocksdb::DataBlo..</text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.02%)</title><rect x="722.2" y="499.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="725.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) [clone .plt] (2 samples, 0.05%)</title><rect x="722.5" y="499.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="725.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (4 samples, 0.09%)</title><rect x="723.1" y="499.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="726.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (2 samples, 0.05%)</title><rect x="723.3" y="483.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="726.3" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="723.9" y="483.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="726.9" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="723.9" y="467.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="726.9" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="723.9" y="451.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="726.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (2 samples, 0.05%)</title><rect x="724.1" y="499.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="727.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (448 samples, 10.32%)</title><rect x="724.7" y="499.0" width="121.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="727.7" y="510.0">rocksdb::Status..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (2 samples, 0.05%)</title><rect x="725.2" y="483.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="728.2" y="494.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="725.5" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="728.5" y="478.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="725.5" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="728.5" y="462.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="725.5" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="728.5" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="725.5" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="728.5" y="430.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="725.5" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="728.5" y="414.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="725.5" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="728.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="725.5" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.05%)</title><rect x="725.8" y="483.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="728.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::~BlockFetcher() (3 samples, 0.07%)</title><rect x="726.3" y="483.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="729.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (2 samples, 0.05%)</title><rect x="727.1" y="483.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="730.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) [clone .plt] (1 samples, 0.02%)</title><rect x="727.7" y="483.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="730.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.02%)</title><rect x="728.0" y="483.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="731.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (426 samples, 9.82%)</title><rect x="728.2" y="483.0" width="115.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="731.2" y="494.0">rocksdb::Statu..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.07%)</title><rect x="732.3" y="467.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="735.3" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.05%)</title><rect x="733.1" y="467.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="736.1" y="478.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.05%)</title><rect x="733.7" y="467.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="736.7" y="478.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (15 samples, 0.35%)</title><rect x="734.2" y="467.0" width="4.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="737.2" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="738.0" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="741.0" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="738.0" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="741.0" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="738.0" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="741.0" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="738.0" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.0" y="414.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="738.0" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="741.0" y="398.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="738.0" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.0" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="738.0" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="741.0" y="366.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="738.3" y="467.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="741.3" y="478.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (2 samples, 0.05%)</title><rect x="738.8" y="467.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="741.8" y="478.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="739.4" y="467.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="742.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::Block::ApproximateMemoryUsage() const (2 samples, 0.05%)</title><rect x="739.6" y="467.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="742.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::Block::ApproximateMemoryUsage() const [clone .plt] (2 samples, 0.05%)</title><rect x="740.2" y="467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="743.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::Block::Block(rocksdb::BlockContents&amp;&amp;, unsigned long, rocksdb::Statistics*) (2 samples, 0.05%)</title><rect x="740.7" y="467.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="743.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.02%)</title><rect x="741.3" y="467.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="744.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.12%)</title><rect x="741.6" y="467.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="744.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheInsertionMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long, bool) const [clone .plt] (1 samples, 0.02%)</title><rect x="742.9" y="467.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="745.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (197 samples, 4.54%)</title><rect x="743.2" y="467.0" width="53.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="746.2" y="478.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (148 samples, 3.41%)</title><rect x="746.2" y="451.0" width="40.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="749.2" y="462.0">/tm..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="786.2" y="435.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="789.2" y="446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="786.2" y="419.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="789.2" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="786.2" y="403.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="789.2" y="414.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="786.2" y="387.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="789.2" y="398.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="786.2" y="371.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="789.2" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.14%)</title><rect x="786.4" y="451.0" width="1.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="789.4" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="788.1" y="451.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="791.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::CheckBlockChecksum() (7 samples, 0.16%)</title><rect x="788.3" y="451.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="791.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::Read(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::Slice*, char*, rocksdb::IODebugContext*) const (2 samples, 0.05%)</title><rect x="790.2" y="451.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="793.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (17 samples, 0.39%)</title><rect x="790.8" y="451.0" width="4.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="793.8" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="792.9" y="435.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="795.9" y="446.0"></text>
</g>
<g>
<title>pread64 (3 samples, 0.07%)</title><rect x="793.5" y="435.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="796.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::Read(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::Slice*, char*, rocksdb::IODebugContext*) const (4 samples, 0.09%)</title><rect x="794.3" y="435.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="797.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.02%)</title><rect x="795.4" y="451.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="798.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (1 samples, 0.02%)</title><rect x="795.7" y="451.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="798.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (3 samples, 0.07%)</title><rect x="795.9" y="451.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="798.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (2 samples, 0.05%)</title><rect x="796.8" y="467.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="799.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::use_direct_io() const (1 samples, 0.02%)</title><rect x="797.3" y="467.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="800.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (3 samples, 0.07%)</title><rect x="797.6" y="467.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="800.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const [clone .plt] (2 samples, 0.05%)</title><rect x="798.4" y="467.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="801.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (2 samples, 0.05%)</title><rect x="798.9" y="467.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="801.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (1 samples, 0.02%)</title><rect x="799.5" y="467.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="802.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (67 samples, 1.54%)</title><rect x="799.7" y="467.0" width="18.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="802.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (61 samples, 1.41%)</title><rect x="799.7" y="451.0" width="16.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="802.7" y="462.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (4 samples, 0.09%)</title><rect x="800.6" y="435.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="803.6" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="801.7" y="435.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="804.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (3 samples, 0.07%)</title><rect x="801.9" y="435.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="804.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheMissMetrics(rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.02%)</title><rect x="802.7" y="435.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="805.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="803.0" y="435.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="806.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) [clone .plt] (1 samples, 0.02%)</title><rect x="803.3" y="435.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="806.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (3 samples, 0.07%)</title><rect x="803.6" y="435.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="806.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) [clone .plt] (1 samples, 0.02%)</title><rect x="804.4" y="435.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="807.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (36 samples, 0.83%)</title><rect x="804.6" y="435.0" width="9.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="807.6" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (1 samples, 0.02%)</title><rect x="804.6" y="419.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="807.6" y="430.0"></text>
</g>
<g>
<title>pthread_mutex_lock (11 samples, 0.25%)</title><rect x="804.9" y="419.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="807.9" y="430.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="807.9" y="419.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="810.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (3 samples, 0.07%)</title><rect x="808.2" y="419.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="811.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="809.0" y="419.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="812.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) [clone .plt] (1 samples, 0.02%)</title><rect x="809.3" y="419.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="812.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (17 samples, 0.39%)</title><rect x="809.5" y="419.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="812.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (17 samples, 0.39%)</title><rect x="809.5" y="403.0" width="4.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="812.5" y="414.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="813.9" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="816.9" y="398.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="813.9" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="816.9" y="382.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="813.9" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="816.9" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="813.9" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="816.9" y="350.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="813.9" y="323.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="816.9" y="334.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="813.9" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="816.9" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="813.9" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="816.9" y="302.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.02%)</title><rect x="814.2" y="419.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="817.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="814.4" y="435.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="817.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (4 samples, 0.09%)</title><rect x="814.7" y="435.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="817.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.02%)</title><rect x="815.8" y="435.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="818.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.02%)</title><rect x="816.1" y="435.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="819.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.02%)</title><rect x="816.3" y="451.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="819.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheMissMetrics(rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.02%)</title><rect x="816.6" y="451.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="819.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.05%)</title><rect x="816.9" y="451.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="819.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::GetUsage(rocksdb::Cache::Handle*) const (1 samples, 0.02%)</title><rect x="817.4" y="451.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="820.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.02%)</title><rect x="817.7" y="451.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="820.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const (96 samples, 2.21%)</title><rect x="818.0" y="467.0" width="26.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="821.0" y="478.0">r..</text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.02%)</title><rect x="818.5" y="451.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="821.5" y="462.0"></text>
</g>
<g>
<title>malloc_usable_size (3 samples, 0.07%)</title><rect x="818.8" y="451.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="821.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::Block::Block(rocksdb::BlockContents&amp;&amp;, unsigned long, rocksdb::Statistics*) (3 samples, 0.07%)</title><rect x="819.6" y="451.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="822.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::UnPackIndexTypeAndNumRestarts(unsigned int, rocksdb::BlockBasedTableOptions::DataBlockIndexType*, unsigned int*) (2 samples, 0.05%)</title><rect x="819.9" y="435.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="822.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::Block::IndexType() const (1 samples, 0.02%)</title><rect x="820.4" y="451.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="823.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::Block::NumRestarts() const (1 samples, 0.02%)</title><rect x="820.7" y="451.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="823.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::Block::NumRestarts() const [clone .plt] (2 samples, 0.05%)</title><rect x="821.0" y="451.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="824.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheInsertionMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long, bool) const (2 samples, 0.05%)</title><rect x="821.5" y="451.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="824.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (2 samples, 0.05%)</title><rect x="822.0" y="451.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="825.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (2 samples, 0.05%)</title><rect x="822.6" y="451.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="825.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (77 samples, 1.77%)</title><rect x="823.1" y="451.0" width="21.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="826.1" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (1 samples, 0.02%)</title><rect x="823.4" y="435.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="826.4" y="446.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="823.7" y="435.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="826.7" y="446.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="824.0" y="435.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="827.0" y="446.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.02%)</title><rect x="824.2" y="435.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="827.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::EvictFromLRU(unsigned long, rocksdb::autovector&lt;rocksdb::LRUHandle*, 8ul&gt;*) (2 samples, 0.05%)</title><rect x="824.5" y="435.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="827.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (65 samples, 1.50%)</title><rect x="825.0" y="435.0" width="17.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="828.0" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (8 samples, 0.18%)</title><rect x="826.4" y="419.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="829.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::Block::~Block() (8 samples, 0.18%)</title><rect x="826.4" y="403.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="829.4" y="414.0"></text>
</g>
<g>
<title>__libc_free (10 samples, 0.23%)</title><rect x="828.6" y="419.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="831.6" y="430.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="831.0" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="834.0" y="414.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="831.0" y="387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="834.0" y="398.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="831.0" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="834.0" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="831.0" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="834.0" y="366.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="831.0" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="834.0" y="350.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="831.0" y="323.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="834.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="831.0" y="307.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="834.0" y="318.0"></text>
</g>
<g>
<title>free@plt (1 samples, 0.02%)</title><rect x="831.3" y="419.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="834.3" y="430.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.02%)</title><rect x="831.6" y="419.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="834.6" y="430.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="831.8" y="419.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="834.8" y="430.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (2 samples, 0.05%)</title><rect x="832.1" y="419.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="835.1" y="430.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.14%)</title><rect x="832.7" y="419.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="835.7" y="430.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="834.3" y="419.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="837.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::Block::~Block() (1 samples, 0.02%)</title><rect x="835.1" y="419.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="838.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::Block::~Block() [clone .plt] (1 samples, 0.02%)</title><rect x="835.4" y="419.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="838.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::EvictFromLRU(unsigned long, rocksdb::autovector&lt;rocksdb::LRUHandle*, 8ul&gt;*) (22 samples, 0.51%)</title><rect x="835.6" y="419.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="838.6" y="430.0"></text>
</g>
<g>
<title>malloc_usable_size (3 samples, 0.07%)</title><rect x="835.9" y="403.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="838.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (13 samples, 0.30%)</title><rect x="836.7" y="403.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="839.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Remove(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.12%)</title><rect x="840.3" y="403.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="843.3" y="414.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.05%)</title><rect x="840.3" y="387.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="843.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.07%)</title><rect x="840.8" y="387.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="843.8" y="398.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) [clone .plt] (1 samples, 0.02%)</title><rect x="841.6" y="419.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="844.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Insert(rocksdb::LRUHandle*) (3 samples, 0.07%)</title><rect x="841.9" y="419.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="844.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="842.4" y="403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="845.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Insert(rocksdb::LRUHandle*) (3 samples, 0.07%)</title><rect x="842.7" y="435.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="845.7" y="446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="843.3" y="419.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="846.3" y="430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="843.3" y="403.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.3" y="414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="843.3" y="387.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="846.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.02%)</title><rect x="843.5" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="846.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() [clone .plt] (1 samples, 0.02%)</title><rect x="843.8" y="435.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="846.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.05%)</title><rect x="844.1" y="483.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="847.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const [clone .plt] (1 samples, 0.02%)</title><rect x="844.6" y="483.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="847.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (5 samples, 0.12%)</title><rect x="844.9" y="483.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="847.9" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="846.0" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="849.0" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="846.0" y="451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="849.0" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="846.0" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="849.0" y="446.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="846.0" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="849.0" y="430.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="846.0" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::StopWatch(rocksdb::Env*, rocksdb::Statistics*, unsigned int, unsigned long*, bool, bool) (1 samples, 0.02%)</title><rect x="846.3" y="483.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="849.3" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="846.5" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="849.5" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="846.5" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="849.5" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="846.5" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="849.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (70 samples, 1.61%)</title><rect x="846.8" y="515.0" width="19.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="849.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.07%)</title><rect x="848.4" y="499.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="851.4" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="849.2" y="499.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="852.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (46 samples, 1.06%)</title><rect x="850.1" y="499.0" width="12.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="853.1" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="850.6" y="483.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="853.6" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.02%)</title><rect x="850.9" y="483.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="853.9" y="494.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.07%)</title><rect x="851.1" y="483.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="854.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="852.0" y="483.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="855.0" y="494.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="853.1" y="483.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="856.1" y="494.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="853.1" y="467.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="856.1" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="853.1" y="451.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.1" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="853.1" y="435.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="856.1" y="446.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="853.1" y="419.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="856.1" y="430.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="853.1" y="403.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="856.1" y="414.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.02%)</title><rect x="853.1" y="387.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="856.1" y="398.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="853.3" y="483.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="856.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (23 samples, 0.53%)</title><rect x="853.6" y="483.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="856.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::GetVarint32PtrFallback(char const*, char const*, unsigned int*) (2 samples, 0.05%)</title><rect x="859.9" y="483.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="862.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 0.18%)</title><rect x="860.4" y="483.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="863.4" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.05%)</title><rect x="860.9" y="467.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="863.9" y="478.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.09%)</title><rect x="861.5" y="467.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="864.5" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="862.3" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="865.3" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="862.3" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="865.3" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="862.3" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="865.3" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="862.3" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="865.3" y="414.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="862.3" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="865.3" y="398.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="862.3" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.3" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="862.3" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="865.3" y="366.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (3 samples, 0.07%)</title><rect x="862.6" y="499.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="865.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 0.21%)</title><rect x="863.4" y="499.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="866.4" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.05%)</title><rect x="864.5" y="483.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="867.5" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="865.0" y="483.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="868.0" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="865.3" y="483.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="868.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (9 samples, 0.21%)</title><rect x="865.8" y="515.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="868.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.02%)</title><rect x="865.8" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="868.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (6 samples, 0.14%)</title><rect x="866.1" y="499.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="869.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.02%)</title><rect x="866.4" y="483.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="869.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) [clone .plt] (1 samples, 0.02%)</title><rect x="866.6" y="483.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="869.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.05%)</title><rect x="866.9" y="483.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="869.9" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="866.9" y="467.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="869.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.02%)</title><rect x="867.2" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="870.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (1 samples, 0.02%)</title><rect x="867.5" y="483.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="870.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.05%)</title><rect x="867.7" y="499.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="870.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (4 samples, 0.09%)</title><rect x="868.3" y="515.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="871.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (1 samples, 0.02%)</title><rect x="868.8" y="499.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="871.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.02%)</title><rect x="868.8" y="483.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="871.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.02%)</title><rect x="869.1" y="499.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="872.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::GetVarint32PtrFallback(char const*, char const*, unsigned int*) (1 samples, 0.02%)</title><rect x="869.4" y="515.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="872.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Next() (2 samples, 0.05%)</title><rect x="869.6" y="515.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="872.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (124 samples, 2.86%)</title><rect x="870.2" y="515.0" width="33.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="873.2" y="526.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (1 samples, 0.02%)</title><rect x="897.1" y="499.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="900.1" y="510.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (6 samples, 0.14%)</title><rect x="897.4" y="499.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="900.4" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="899.0" y="499.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="902.0" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="899.8" y="499.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="902.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (4 samples, 0.09%)</title><rect x="900.1" y="499.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="903.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (2 samples, 0.05%)</title><rect x="900.4" y="483.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="903.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.02%)</title><rect x="900.9" y="483.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="903.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (10 samples, 0.23%)</title><rect x="901.2" y="499.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="904.2" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="903.1" y="483.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="906.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="903.6" y="483.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="906.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.02%)</title><rect x="903.9" y="515.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="906.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (3 samples, 0.07%)</title><rect x="904.2" y="515.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="907.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) [clone .plt] (1 samples, 0.02%)</title><rect x="905.0" y="515.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="908.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="905.3" y="515.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="908.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (1 samples, 0.02%)</title><rect x="905.5" y="515.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="908.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="905.8" y="515.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="908.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.07%)</title><rect x="906.1" y="515.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="909.1" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="906.6" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.6" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="906.6" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="909.6" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="906.6" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="909.6" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="906.6" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="909.6" y="462.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="906.6" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="909.6" y="446.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="906.6" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="909.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="906.6" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="909.6" y="414.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (3 samples, 0.07%)</title><rect x="906.9" y="531.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="909.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (3 samples, 0.07%)</title><rect x="907.7" y="531.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="910.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (1 samples, 0.02%)</title><rect x="908.5" y="531.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="911.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() [clone .plt] (2 samples, 0.05%)</title><rect x="908.8" y="531.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="911.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (5 samples, 0.12%)</title><rect x="909.3" y="531.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="912.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.05%)</title><rect x="910.7" y="531.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="913.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="911.2" y="531.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="914.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.02%)</title><rect x="911.8" y="531.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="914.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (2 samples, 0.05%)</title><rect x="912.1" y="531.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="915.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.02%)</title><rect x="912.6" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="915.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() [clone .plt] (1 samples, 0.02%)</title><rect x="912.9" y="531.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="915.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.02%)</title><rect x="913.2" y="531.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="916.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) [clone .plt] (2 samples, 0.05%)</title><rect x="913.4" y="531.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="916.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Next() (2 samples, 0.05%)</title><rect x="914.0" y="531.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="917.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="914.5" y="531.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="917.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.02%)</title><rect x="914.8" y="531.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="917.8" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="915.1" y="547.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="918.1" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="915.1" y="531.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="918.1" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="915.1" y="515.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="918.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (4 samples, 0.09%)</title><rect x="915.3" y="563.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="918.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (3 samples, 0.07%)</title><rect x="916.4" y="579.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="919.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (3 samples, 0.07%)</title><rect x="917.2" y="579.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="920.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.05%)</title><rect x="918.0" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="921.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) [clone .plt] (1 samples, 0.02%)</title><rect x="918.6" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="921.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (4 samples, 0.09%)</title><rect x="918.9" y="579.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="921.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (1 samples, 0.02%)</title><rect x="920.0" y="579.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="923.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.02%)</title><rect x="920.2" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="923.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.02%)</title><rect x="920.5" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="923.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1 samples, 0.02%)</title><rect x="920.8" y="611.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="923.8" y="622.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (2 samples, 0.05%)</title><rect x="921.0" y="627.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="924.0" y="638.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="921.6" y="627.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="924.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (16 samples, 0.37%)</title><rect x="921.9" y="643.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="924.9" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="922.1" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="925.1" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="922.4" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="925.4" y="638.0"></text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.02%)</title><rect x="922.7" y="627.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="925.7" y="638.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="922.9" y="627.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="925.9" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="922.9" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="925.9" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (11 samples, 0.25%)</title><rect x="923.2" y="627.0" width="3.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="926.2" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="924.3" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.3" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="924.6" y="611.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="927.6" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.12%)</title><rect x="924.8" y="611.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.8" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.12%)</title><rect x="924.8" y="595.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="927.8" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="924.8" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="927.8" y="590.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="924.8" y="563.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="927.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="925.1" y="579.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="928.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.05%)</title><rect x="925.7" y="579.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="928.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="926.2" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="929.2" y="654.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.02%)</title><rect x="926.5" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="929.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (153 samples, 3.53%)</title><rect x="926.8" y="675.0" width="41.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="929.8" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (9 samples, 0.21%)</title><rect x="926.8" y="659.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="929.8" y="670.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (7 samples, 0.16%)</title><rect x="926.8" y="643.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="929.8" y="654.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="928.7" y="643.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="931.7" y="654.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="928.9" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="931.9" y="654.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="929.2" y="659.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="932.2" y="670.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.02%)</title><rect x="929.5" y="659.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="932.5" y="670.0"></text>
</g>
<g>
<title>_int_malloc (4 samples, 0.09%)</title><rect x="929.7" y="659.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="932.7" y="670.0"></text>
</g>
<g>
<title>pread64 (138 samples, 3.18%)</title><rect x="930.8" y="659.0" width="37.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="933.8" y="670.0">pre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 2.97%)</title><rect x="933.3" y="643.0" width="35.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.3" y="654.0">ent..</text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.05%)</title><rect x="933.3" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (127 samples, 2.93%)</title><rect x="933.8" y="627.0" width="34.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="936.8" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_pread64 (109 samples, 2.51%)</title><rect x="938.7" y="611.0" width="29.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.7" y="622.0">__..</text>
</g>
<g>
<title>ksys_pread64 (109 samples, 2.51%)</title><rect x="938.7" y="595.0" width="29.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="941.7" y="606.0">ks..</text>
</g>
<g>
<title>__fdget (4 samples, 0.09%)</title><rect x="938.7" y="579.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="941.7" y="590.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="938.7" y="563.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.7" y="574.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="939.0" y="547.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.0" y="558.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="939.8" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.8" y="590.0"></text>
</g>
<g>
<title>vfs_read (104 samples, 2.40%)</title><rect x="940.1" y="579.0" width="28.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="943.1" y="590.0">vf..</text>
</g>
<g>
<title>__vfs_read (88 samples, 2.03%)</title><rect x="940.6" y="563.0" width="24.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="943.6" y="574.0">_..</text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="940.9" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="943.9" y="558.0"></text>
</g>
<g>
<title>new_sync_read (86 samples, 1.98%)</title><rect x="941.2" y="547.0" width="23.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="944.2" y="558.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (83 samples, 1.91%)</title><rect x="942.0" y="531.0" width="22.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="945.0" y="542.0">e..</text>
</g>
<g>
<title>generic_file_read_iter (78 samples, 1.80%)</title><rect x="943.1" y="515.0" width="21.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.1" y="526.0">g..</text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="943.3" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="946.3" y="510.0"></text>
</g>
<g>
<title>copy_page_to_iter (43 samples, 0.99%)</title><rect x="943.6" y="499.0" width="11.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.6" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="943.9" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.9" y="494.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="943.9" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="946.9" y="478.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (40 samples, 0.92%)</title><rect x="944.2" y="483.0" width="10.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="947.2" y="494.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="954.8" y="467.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="957.8" y="478.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="954.8" y="451.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="957.8" y="462.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="954.8" y="435.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="957.8" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="954.8" y="419.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.8" y="430.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="954.8" y="403.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.8" y="414.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="954.8" y="387.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.8" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="954.8" y="371.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="957.8" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="954.8" y="355.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="957.8" y="366.0"></text>
</g>
<g>
<title>ipv6_rcv (1 samples, 0.02%)</title><rect x="954.8" y="339.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="957.8" y="350.0"></text>
</g>
<g>
<title>ip6_rcv_finish (1 samples, 0.02%)</title><rect x="954.8" y="323.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="957.8" y="334.0"></text>
</g>
<g>
<title>ip6_input (1 samples, 0.02%)</title><rect x="954.8" y="307.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="957.8" y="318.0"></text>
</g>
<g>
<title>ip6_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="954.8" y="291.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="957.8" y="302.0"></text>
</g>
<g>
<title>tcp_v6_rcv (1 samples, 0.02%)</title><rect x="954.8" y="275.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="957.8" y="286.0"></text>
</g>
<g>
<title>tcp_v6_do_rcv (1 samples, 0.02%)</title><rect x="954.8" y="259.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="957.8" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="954.8" y="243.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="957.8" y="254.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="954.8" y="227.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.8" y="238.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="954.8" y="211.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="957.8" y="222.0"></text>
</g>
<g>
<title>tcp_try_coalesce (1 samples, 0.02%)</title><rect x="954.8" y="195.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="957.8" y="206.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="955.0" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="958.0" y="494.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.05%)</title><rect x="955.3" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="958.3" y="510.0"></text>
</g>
<g>
<title>activate_page (1 samples, 0.02%)</title><rect x="955.6" y="483.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="958.6" y="494.0"></text>
</g>
<g>
<title>release_pages (1 samples, 0.02%)</title><rect x="955.6" y="467.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.6" y="478.0"></text>
</g>
<g>
<title>pagecache_get_page (27 samples, 0.62%)</title><rect x="955.8" y="499.0" width="7.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="958.8" y="510.0"></text>
</g>
<g>
<title>find_get_entry (26 samples, 0.60%)</title><rect x="956.1" y="483.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.1" y="494.0"></text>
</g>
<g>
<title>xas_load (14 samples, 0.32%)</title><rect x="959.1" y="467.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="962.1" y="478.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.05%)</title><rect x="962.4" y="451.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="965.4" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="962.6" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="965.6" y="446.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="962.6" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="965.6" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="962.6" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="965.6" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="962.6" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="965.6" y="398.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="962.6" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="965.6" y="382.0"></text>
</g>
<g>
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="962.6" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="965.6" y="366.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.02%)</title><rect x="962.9" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="965.9" y="478.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="963.2" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="966.2" y="510.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.07%)</title><rect x="963.5" y="499.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.5" y="510.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.05%)</title><rect x="963.5" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.5" y="494.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="963.5" y="467.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="966.5" y="478.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="963.5" y="451.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="966.5" y="462.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="963.7" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="966.7" y="478.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.02%)</title><rect x="964.0" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="967.0" y="494.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="964.3" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="967.3" y="526.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.32%)</title><rect x="964.6" y="563.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="967.6" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="965.4" y="547.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="968.4" y="558.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.23%)</title><rect x="965.6" y="547.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="968.6" y="558.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="965.6" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="968.6" y="542.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.07%)</title><rect x="965.9" y="531.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="968.9" y="542.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.07%)</title><rect x="965.9" y="515.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.9" y="526.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="966.5" y="499.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="969.5" y="510.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.07%)</title><rect x="966.7" y="531.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="969.7" y="542.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.07%)</title><rect x="967.5" y="531.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="970.5" y="542.0"></text>
</g>
<g>
<title>__libc_free (11 samples, 0.25%)</title><rect x="968.4" y="675.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="971.4" y="686.0"></text>
</g>
<g>
<title>__malloc (12 samples, 0.28%)</title><rect x="971.4" y="675.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="974.4" y="686.0"></text>
</g>
<g>
<title>_int_malloc (5 samples, 0.12%)</title><rect x="974.6" y="675.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="977.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.07%)</title><rect x="976.0" y="675.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="979.0" y="686.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.02%)</title><rect x="976.8" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="979.8" y="686.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.02%)</title><rect x="977.1" y="675.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="980.1" y="686.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="977.3" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="980.3" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.02%)</title><rect x="977.6" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="980.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (10 samples, 0.23%)</title><rect x="977.9" y="707.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (10 samples, 0.23%)</title><rect x="977.9" y="691.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.9" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="977.9" y="675.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="980.9" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="977.9" y="659.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="980.9" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="977.9" y="643.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="980.9" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="977.9" y="627.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="980.9" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="977.9" y="611.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="980.9" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="977.9" y="595.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="980.9" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="977.9" y="579.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="980.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.21%)</title><rect x="978.1" y="675.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.1" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="978.1" y="659.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="981.1" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="978.4" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.14%)</title><rect x="979.0" y="659.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.14%)</title><rect x="979.0" y="643.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.0" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="979.0" y="627.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="979.2" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="979.8" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="982.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="980.1" y="627.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="980.3" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (8 samples, 0.18%)</title><rect x="980.6" y="723.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="980.6" y="707.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="983.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="981.1" y="691.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="981.4" y="675.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="981.4" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="982.2" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="982.2" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="985.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getShort (1 samples, 0.02%)</title><rect x="982.5" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (14 samples, 0.32%)</title><rect x="982.8" y="739.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.32%)</title><rect x="982.8" y="723.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.8" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (2 samples, 0.05%)</title><rect x="985.5" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.getMask (2 samples, 0.05%)</title><rect x="986.0" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.0" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (738 samples, 17.01%)</title><rect x="986.6" y="883.0" width="200.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.6" y="894.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="986.9" y="867.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="989.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="986.9" y="851.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="989.9" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="986.9" y="835.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="989.9" y="846.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="987.1" y="867.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="990.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.02%)</title><rect x="987.7" y="867.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (192 samples, 4.42%)</title><rect x="987.9" y="867.0" width="52.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.9" y="878.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="989.8" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="992.8" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="989.8" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="992.8" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="989.8" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="992.8" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="989.8" y="803.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="992.8" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="989.8" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="992.8" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (184 samples, 4.24%)</title><rect x="990.1" y="851.0" width="50.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="993.1" y="862.0">one/n..</text>
</g>
<g>
<title>JVM_IHashCode (116 samples, 2.67%)</title><rect x="991.7" y="835.0" width="31.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="994.7" y="846.0">JV..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.05%)</title><rect x="991.7" y="819.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="994.7" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.05%)</title><rect x="992.3" y="819.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="995.3" y="830.0"></text>
</g>
<g>
<title>epoll_wait (112 samples, 2.58%)</title><rect x="992.8" y="819.0" width="30.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="995.8" y="830.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 2.40%)</title><rect x="995.0" y="803.0" width="28.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.0" y="814.0">en..</text>
</g>
<g>
<title>do_syscall_64 (104 samples, 2.40%)</title><rect x="995.0" y="787.0" width="28.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.0" y="798.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (87 samples, 2.01%)</title><rect x="998.8" y="771.0" width="23.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1001.8" y="782.0">_..</text>
</g>
<g>
<title>do_epoll_wait (86 samples, 1.98%)</title><rect x="998.8" y="755.0" width="23.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1001.8" y="766.0">d..</text>
</g>
<g>
<title>__fdget (7 samples, 0.16%)</title><rect x="999.4" y="739.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1002.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.16%)</title><rect x="999.4" y="723.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.4" y="734.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.12%)</title><rect x="999.9" y="707.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1002.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="1001.3" y="739.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1004.3" y="750.0"></text>
</g>
<g>
<title>ep_poll (73 samples, 1.68%)</title><rect x="1001.5" y="739.0" width="19.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1004.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="1002.9" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.9" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (57 samples, 1.31%)</title><rect x="1003.2" y="723.0" width="15.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1006.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="1005.6" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1008.6" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (42 samples, 0.97%)</title><rect x="1005.9" y="707.0" width="11.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1008.9" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (31 samples, 0.71%)</title><rect x="1007.8" y="691.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1010.8" y="702.0"></text>
</g>
<g>
<title>sock_poll (23 samples, 0.53%)</title><rect x="1009.2" y="675.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1012.2" y="686.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.12%)</title><rect x="1012.1" y="659.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1015.1" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (7 samples, 0.16%)</title><rect x="1013.5" y="659.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1016.5" y="670.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.07%)</title><rect x="1015.4" y="675.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.4" y="686.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.09%)</title><rect x="1016.2" y="691.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1019.2" y="702.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.12%)</title><rect x="1017.3" y="707.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1020.3" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="1018.7" y="723.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1021.7" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="1018.9" y="723.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1021.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.18%)</title><rect x="1019.2" y="723.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1022.2" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1019.2" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1022.2" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.16%)</title><rect x="1019.5" y="707.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.5" y="718.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.12%)</title><rect x="1020.0" y="691.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.0" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.09%)</title><rect x="1020.3" y="675.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1023.3" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.09%)</title><rect x="1020.3" y="659.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1023.3" y="670.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.07%)</title><rect x="1020.6" y="643.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1023.6" y="654.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.07%)</title><rect x="1020.6" y="627.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1023.6" y="638.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.07%)</title><rect x="1020.6" y="611.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1023.6" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.07%)</title><rect x="1020.6" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1023.6" y="606.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.07%)</title><rect x="1020.6" y="579.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1023.6" y="590.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.07%)</title><rect x="1020.6" y="563.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1023.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="1020.6" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1023.6" y="558.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="1021.4" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1024.4" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="1021.9" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1024.9" y="750.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="1022.2" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1025.2" y="766.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1022.5" y="771.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1025.5" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1022.5" y="755.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1025.5" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1022.5" y="739.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1025.5" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1022.5" y="723.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1025.5" y="734.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1022.5" y="707.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1025.5" y="718.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1022.5" y="691.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1025.5" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1022.5" y="675.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1025.5" y="686.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.05%)</title><rect x="1022.7" y="771.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1025.7" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.05%)</title><rect x="1023.3" y="835.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1026.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.18%)</title><rect x="1023.8" y="835.0" width="13.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1026.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.14%)</title><rect x="1023.8" y="819.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1026.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.14%)</title><rect x="1023.8" y="803.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1026.8" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1023.8" y="787.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1026.8" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.07%)</title><rect x="1024.1" y="787.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1027.1" y="798.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="1024.9" y="787.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1027.9" y="798.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="1024.9" y="771.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1027.9" y="782.0"></text>
</g>
<g>
<title>epoll_wait (45 samples, 1.04%)</title><rect x="1025.5" y="819.0" width="12.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1028.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.01%)</title><rect x="1025.7" y="803.0" width="12.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1028.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.01%)</title><rect x="1025.7" y="787.0" width="12.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1028.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (38 samples, 0.88%)</title><rect x="1027.1" y="771.0" width="10.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1030.1" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (38 samples, 0.88%)</title><rect x="1027.1" y="755.0" width="10.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1030.1" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="1027.1" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.1" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1027.1" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1030.1" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1027.1" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1030.1" y="718.0"></text>
</g>
<g>
<title>ep_poll (37 samples, 0.85%)</title><rect x="1027.4" y="739.0" width="10.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1030.4" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (32 samples, 0.74%)</title><rect x="1027.9" y="723.0" width="8.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1030.9" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.46%)</title><rect x="1030.1" y="707.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.1" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (13 samples, 0.30%)</title><rect x="1031.7" y="691.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1034.7" y="702.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.21%)</title><rect x="1032.3" y="675.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.3" y="686.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.12%)</title><rect x="1033.1" y="659.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1036.1" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="1034.4" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.4" y="670.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="1034.7" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1037.7" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="1035.3" y="691.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.3" y="702.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="1035.5" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1038.5" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="1036.1" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1039.1" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="1036.6" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1039.6" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.05%)</title><rect x="1036.9" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1039.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.05%)</title><rect x="1036.9" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1039.9" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="1036.9" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1039.9" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="1036.9" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1039.9" y="686.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="1037.4" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1040.4" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="1037.7" y="835.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1040.7" y="846.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.16%)</title><rect x="1038.0" y="835.0" width="1.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1041.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.02%)</title><rect x="1039.9" y="835.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1042.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (540 samples, 12.45%)</title><rect x="1040.2" y="867.0" width="146.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.2" y="878.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="1043.1" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1046.1" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.18%)</title><rect x="1043.4" y="851.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1046.4" y="862.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="1043.4" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1046.4" y="846.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="1043.7" y="835.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1046.7" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.14%)</title><rect x="1044.0" y="835.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.0" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.02%)</title><rect x="1044.0" y="819.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1047.0" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.09%)</title><rect x="1044.2" y="819.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1047.2" y="830.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.09%)</title><rect x="1044.2" y="803.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1047.2" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.02%)</title><rect x="1045.3" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1048.3" y="830.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.02%)</title><rect x="1045.3" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1048.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (520 samples, 11.98%)</title><rect x="1045.6" y="851.0" width="141.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.6" y="862.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.02%)</title><rect x="1046.1" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.02%)</title><rect x="1046.1" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="1046.1" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1046.1" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="1046.1" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="1046.1" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (274 samples, 6.31%)</title><rect x="1046.4" y="835.0" width="74.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.4" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (226 samples, 5.21%)</title><rect x="1048.0" y="819.0" width="61.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.0" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (225 samples, 5.19%)</title><rect x="1048.3" y="803.0" width="61.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1051.3" y="814.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (203 samples, 4.68%)</title><rect x="1049.1" y="787.0" width="55.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.1" y="798.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="1049.9" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (26 samples, 0.60%)</title><rect x="1050.2" y="771.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.60%)</title><rect x="1050.2" y="755.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.18%)</title><rect x="1052.7" y="739.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.18%)</title><rect x="1052.7" y="723.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1054.8" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1054.8" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="1054.8" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.8" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.07%)</title><rect x="1055.4" y="739.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1058.4" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1056.2" y="739.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1059.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="1056.7" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1056.7" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1056.7" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1059.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="1056.7" y="691.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (173 samples, 3.99%)</title><rect x="1057.3" y="771.0" width="47.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.3" y="782.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.23%)</title><rect x="1057.8" y="755.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.23%)</title><rect x="1057.8" y="739.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.21%)</title><rect x="1058.1" y="723.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.21%)</title><rect x="1058.1" y="707.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.07%)</title><rect x="1059.7" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1062.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1214003821.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1060.6" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1063.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/985922955.invokeStatic (1 samples, 0.02%)</title><rect x="1060.8" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/1361385511.get$Lambda (1 samples, 0.02%)</title><rect x="1060.8" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/1361385511.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1060.8" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="1061.1" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.12%)</title><rect x="1061.1" y="739.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1061.1" y="723.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.12%)</title><rect x="1061.1" y="707.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1061.4" y="691.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="1061.6" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="1061.6" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1062.2" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1062.2" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.23%)</title><rect x="1062.5" y="755.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.12%)</title><rect x="1063.5" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.12%)</title><rect x="1063.5" y="723.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1064.9" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1067.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1064.9" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.9" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1064.9" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1067.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.21%)</title><rect x="1065.2" y="755.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.18%)</title><rect x="1065.4" y="739.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.18%)</title><rect x="1065.4" y="723.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1068.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (134 samples, 3.09%)</title><rect x="1067.6" y="755.0" width="36.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.6" y="766.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (134 samples, 3.09%)</title><rect x="1067.6" y="739.0" width="36.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.6" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (134 samples, 3.09%)</title><rect x="1067.6" y="723.0" width="36.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.6" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="1067.6" y="707.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="1067.6" y="691.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.07%)</title><rect x="1067.6" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (131 samples, 3.02%)</title><rect x="1068.4" y="707.0" width="35.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.4" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (131 samples, 3.02%)</title><rect x="1068.4" y="691.0" width="35.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.4" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (131 samples, 3.02%)</title><rect x="1068.4" y="675.0" width="35.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.4" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (131 samples, 3.02%)</title><rect x="1068.4" y="659.0" width="35.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.4" y="670.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (116 samples, 2.67%)</title><rect x="1072.5" y="643.0" width="31.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.5" y="654.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.05%)</title><rect x="1073.3" y="627.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1076.3" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.07%)</title><rect x="1073.9" y="627.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1076.9" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.48%)</title><rect x="1074.7" y="627.0" width="5.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1077.7" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1075.8" y="611.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1078.8" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.07%)</title><rect x="1076.1" y="611.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1079.1" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="1076.9" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1079.9" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1077.1" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1080.1" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1077.1" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1080.1" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1077.1" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1080.1" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1077.1" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1080.1" y="558.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1077.1" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1080.1" y="542.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1077.1" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1080.1" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1077.1" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1080.1" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="1077.4" y="611.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1080.4" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="1077.7" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1080.7" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.05%)</title><rect x="1078.2" y="611.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1081.2" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.14%)</title><rect x="1078.8" y="611.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1081.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (83 samples, 1.91%)</title><rect x="1080.4" y="627.0" width="22.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1083.4" y="638.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 1.87%)</title><rect x="1080.9" y="611.0" width="22.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1083.9" y="622.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1080.9" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (80 samples, 1.84%)</title><rect x="1081.2" y="595.0" width="21.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1084.2" y="606.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (75 samples, 1.73%)</title><rect x="1082.6" y="579.0" width="20.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1085.6" y="590.0"></text>
</g>
<g>
<title>do_futex (74 samples, 1.71%)</title><rect x="1082.9" y="563.0" width="20.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1085.9" y="574.0"></text>
</g>
<g>
<title>futex_wake (73 samples, 1.68%)</title><rect x="1083.1" y="547.0" width="19.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1086.1" y="558.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.07%)</title><rect x="1084.8" y="531.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1087.8" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="1085.6" y="531.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1088.6" y="542.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.02%)</title><rect x="1086.1" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1089.1" y="526.0"></text>
</g>
<g>
<title>wake_up_q (61 samples, 1.41%)</title><rect x="1086.4" y="531.0" width="16.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1089.4" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 1.36%)</title><rect x="1086.9" y="515.0" width="16.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1089.9" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (59 samples, 1.36%)</title><rect x="1086.9" y="499.0" width="16.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1089.9" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="1103.0" y="627.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1106.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationFactor.defaultRepliFactor (1 samples, 0.02%)</title><rect x="1104.1" y="755.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1107.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1104.1" y="739.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (16 samples, 0.37%)</title><rect x="1104.3" y="787.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.37%)</title><rect x="1104.3" y="771.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.09%)</title><rect x="1104.3" y="755.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.3" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1105.2" y="739.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1108.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (12 samples, 0.28%)</title><rect x="1105.4" y="755.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1108.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (12 samples, 0.28%)</title><rect x="1105.4" y="739.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1108.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (12 samples, 0.28%)</title><rect x="1105.4" y="723.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1108.4" y="734.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.07%)</title><rect x="1106.5" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.5" y="718.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.12%)</title><rect x="1107.3" y="707.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1110.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.07%)</title><rect x="1108.7" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="1108.7" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1111.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="1108.7" y="755.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27 samples, 0.62%)</title><rect x="1109.5" y="819.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1109.5" y="803.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.5" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1109.5" y="787.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1112.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.05%)</title><rect x="1109.5" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1112.5" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1109.5" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1112.5" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1109.5" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1112.5" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="1109.5" y="723.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1112.5" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1109.5" y="707.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1112.5" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="1109.5" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.5" y="702.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="1109.5" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1112.5" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="1109.5" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1112.5" y="670.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1109.5" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.5" y="654.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.02%)</title><rect x="1109.5" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1112.5" y="638.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.02%)</title><rect x="1109.5" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.5" y="622.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="1109.8" y="707.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1112.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="1109.8" y="691.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1112.8" y="702.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1109.8" y="675.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1110.0" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1110.0" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="1110.0" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1110.3" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="1110.6" y="803.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="1110.6" y="787.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.6" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1112.5" y="771.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1115.5" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1112.5" y="755.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1115.5" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1112.5" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1115.5" y="750.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="1112.5" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1115.5" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1112.8" y="723.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1115.8" y="734.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="1112.8" y="707.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1115.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (14 samples, 0.32%)</title><rect x="1113.0" y="803.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1116.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="1115.8" y="787.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1118.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.02%)</title><rect x="1116.8" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="1116.8" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="1116.8" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.18%)</title><rect x="1117.1" y="819.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.14%)</title><rect x="1117.7" y="803.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="1117.7" y="787.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.14%)</title><rect x="1119.3" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.14%)</title><rect x="1119.3" y="803.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (243 samples, 5.60%)</title><rect x="1120.9" y="835.0" width="66.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.9" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (240 samples, 5.53%)</title><rect x="1121.7" y="819.0" width="65.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.7" y="830.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (26 samples, 0.60%)</title><rect x="1123.6" y="803.0" width="7.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1126.6" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="1125.5" y="787.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1128.5" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="1126.1" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.1" y="798.0"></text>
</g>
<g>
<title>__memmove_ssse3 (5 samples, 0.12%)</title><rect x="1126.4" y="787.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1129.4" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.23%)</title><rect x="1127.7" y="787.0" width="2.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1130.7" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="1129.1" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1132.1" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1129.4" y="771.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1132.4" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.02%)</title><rect x="1129.6" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1132.6" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="1129.9" y="771.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1132.9" y="782.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.02%)</title><rect x="1130.4" y="787.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1133.4" y="798.0"></text>
</g>
<g>
<title>__GI___recv (204 samples, 4.70%)</title><rect x="1130.7" y="803.0" width="55.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1133.7" y="814.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (198 samples, 4.56%)</title><rect x="1132.3" y="787.0" width="53.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1135.3" y="798.0">entry..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.05%)</title><rect x="1132.3" y="771.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1135.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (196 samples, 4.52%)</title><rect x="1132.9" y="771.0" width="53.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1135.9" y="782.0">do_sy..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.02%)</title><rect x="1139.7" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1142.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (170 samples, 3.92%)</title><rect x="1140.0" y="755.0" width="46.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1143.0" y="766.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (166 samples, 3.83%)</title><rect x="1140.0" y="739.0" width="45.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1143.0" y="750.0">__sy..</text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="1141.0" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1144.0" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1141.3" y="723.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.3" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (156 samples, 3.60%)</title><rect x="1141.6" y="723.0" width="42.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.6" y="734.0">sock..</text>
</g>
<g>
<title>inet_recvmsg (145 samples, 3.34%)</title><rect x="1141.9" y="707.0" width="39.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1144.9" y="718.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (141 samples, 3.25%)</title><rect x="1143.0" y="691.0" width="38.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1146.0" y="702.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="1144.3" y="675.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.3" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1144.3" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1147.3" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1144.3" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1147.3" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1144.6" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1147.6" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1144.9" y="659.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1147.9" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1145.1" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1148.1" y="686.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1145.4" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1148.4" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1145.4" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.4" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1145.4" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.4" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1145.4" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1148.4" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1145.4" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1148.4" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1145.4" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1148.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1145.4" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.4" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1145.7" y="675.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1148.7" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1145.7" y="659.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.7" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="1145.9" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1148.9" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.21%)</title><rect x="1146.2" y="675.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1149.2" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.21%)</title><rect x="1146.2" y="659.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.2" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1146.2" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1149.2" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.18%)</title><rect x="1146.5" y="643.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1149.5" y="654.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="1146.5" y="627.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1149.5" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="1146.5" y="611.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1149.5" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1147.3" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1150.3" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.09%)</title><rect x="1147.6" y="627.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.6" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="1147.6" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.6" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="1148.4" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1151.4" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (116 samples, 2.67%)</title><rect x="1148.7" y="675.0" width="31.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1151.7" y="686.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.44 (1 samples, 0.02%)</title><rect x="1149.8" y="659.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1152.8" y="670.0"></text>
</g>
<g>
<title>tcp_send_ack (111 samples, 2.56%)</title><rect x="1150.0" y="659.0" width="30.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1153.0" y="670.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.44 (111 samples, 2.56%)</title><rect x="1150.0" y="643.0" width="30.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.0" y="654.0">__..</text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.05%)</title><rect x="1150.6" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.6" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.02%)</title><rect x="1150.6" y="611.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1153.6" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="1150.6" y="595.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1153.6" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1150.8" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1153.8" y="622.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1151.1" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.1" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (104 samples, 2.40%)</title><rect x="1151.4" y="627.0" width="28.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1154.4" y="638.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="1151.7" y="611.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.7" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (102 samples, 2.35%)</title><rect x="1151.9" y="611.0" width="27.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1154.9" y="622.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (102 samples, 2.35%)</title><rect x="1151.9" y="595.0" width="27.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1154.9" y="606.0">_..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="1152.2" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.2" y="590.0"></text>
</g>
<g>
<title>ip_local_out (99 samples, 2.28%)</title><rect x="1152.7" y="579.0" width="27.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1155.7" y="590.0">i..</text>
</g>
<g>
<title>__ip_local_out (24 samples, 0.55%)</title><rect x="1152.7" y="563.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1155.7" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.05%)</title><rect x="1152.7" y="547.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1155.7" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.02%)</title><rect x="1153.3" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1156.3" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.48%)</title><rect x="1153.6" y="547.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.6" y="558.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.02%)</title><rect x="1153.6" y="531.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.6" y="542.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.05%)</title><rect x="1153.8" y="531.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1156.8" y="542.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.05%)</title><rect x="1153.8" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.8" y="526.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (16 samples, 0.37%)</title><rect x="1154.4" y="531.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.4" y="542.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.02%)</title><rect x="1154.4" y="515.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1157.4" y="526.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.02%)</title><rect x="1154.6" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1157.6" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (13 samples, 0.30%)</title><rect x="1154.9" y="515.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.9" y="526.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.05%)</title><rect x="1156.3" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.3" y="510.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.05%)</title><rect x="1156.8" y="499.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1159.8" y="510.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.02%)</title><rect x="1157.4" y="499.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.4" y="510.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.07%)</title><rect x="1157.6" y="499.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1160.6" y="510.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.05%)</title><rect x="1157.9" y="483.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.9" y="494.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.02%)</title><rect x="1158.5" y="515.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.5" y="526.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.02%)</title><rect x="1158.7" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.7" y="542.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (1 samples, 0.02%)</title><rect x="1159.0" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.0" y="542.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.02%)</title><rect x="1159.0" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1162.0" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1159.3" y="563.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1162.3" y="574.0"></text>
</g>
<g>
<title>ip_output (74 samples, 1.71%)</title><rect x="1159.5" y="563.0" width="20.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.5" y="574.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="1159.8" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1162.8" y="558.0"></text>
</g>
<g>
<title>ip_finish_output (70 samples, 1.61%)</title><rect x="1160.1" y="547.0" width="19.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.1" y="558.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.12%)</title><rect x="1160.6" y="531.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1163.6" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (63 samples, 1.45%)</title><rect x="1162.0" y="531.0" width="17.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1165.0" y="542.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1163.1" y="515.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1166.1" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 1.06%)</title><rect x="1163.3" y="515.0" width="12.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1166.3" y="526.0"></text>
</g>
<g>
<title>do_softirq.part.21 (44 samples, 1.01%)</title><rect x="1163.9" y="499.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1166.9" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (43 samples, 0.99%)</title><rect x="1164.2" y="483.0" width="11.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1167.2" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (42 samples, 0.97%)</title><rect x="1164.2" y="467.0" width="11.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.2" y="478.0"></text>
</g>
<g>
<title>net_rx_action (41 samples, 0.94%)</title><rect x="1164.4" y="451.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1167.4" y="462.0"></text>
</g>
<g>
<title>process_backlog (40 samples, 0.92%)</title><rect x="1164.7" y="435.0" width="10.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.7" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb (37 samples, 0.85%)</title><rect x="1165.5" y="419.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.5" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (36 samples, 0.83%)</title><rect x="1165.8" y="403.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.8" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1166.1" y="387.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1169.1" y="398.0"></text>
</g>
<g>
<title>ip_rcv (34 samples, 0.78%)</title><rect x="1166.3" y="387.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1169.3" y="398.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (2 samples, 0.05%)</title><rect x="1166.6" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1169.6" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish (29 samples, 0.67%)</title><rect x="1167.2" y="371.0" width="7.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1170.2" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (29 samples, 0.67%)</title><rect x="1167.2" y="355.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1170.2" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 0.62%)</title><rect x="1167.2" y="339.0" width="7.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1170.2" y="350.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (25 samples, 0.58%)</title><rect x="1167.4" y="323.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.4" y="334.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="1168.2" y="307.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1171.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 0.48%)</title><rect x="1168.5" y="307.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1171.5" y="318.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="1169.1" y="291.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1172.1" y="302.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="1169.3" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1172.3" y="302.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="1169.6" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.6" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.37%)</title><rect x="1169.9" y="291.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1172.9" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.37%)</title><rect x="1169.9" y="275.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.9" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1169.9" y="259.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.9" y="270.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1169.9" y="243.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1172.9" y="254.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1169.9" y="227.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1172.9" y="238.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.30%)</title><rect x="1170.1" y="259.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1173.1" y="270.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="1171.0" y="243.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1174.0" y="254.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.02%)</title><rect x="1171.2" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.2" y="254.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.18%)</title><rect x="1171.5" y="243.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1174.5" y="254.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.09%)</title><rect x="1172.1" y="227.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.1" y="238.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="1172.1" y="211.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1175.1" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1172.1" y="195.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1175.1" y="206.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.07%)</title><rect x="1172.3" y="211.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1175.3" y="222.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="1172.3" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1175.3" y="206.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="1172.6" y="195.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1175.6" y="206.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="1173.1" y="227.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1176.1" y="238.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.02%)</title><rect x="1173.4" y="227.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1176.4" y="238.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="1173.7" y="259.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1176.7" y="270.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="1174.0" y="259.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.0" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1174.2" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1177.2" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1174.5" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.5" y="350.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.02%)</title><rect x="1174.5" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.5" y="334.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.02%)</title><rect x="1174.5" y="307.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.5" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.02%)</title><rect x="1174.8" y="339.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1177.8" y="350.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (1 samples, 0.02%)</title><rect x="1175.0" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.0" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1175.3" y="371.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.3" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.02%)</title><rect x="1175.3" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1178.3" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.02%)</title><rect x="1175.3" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1175.6" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.6" y="478.0"></text>
</g>
<g>
<title>dev_queue_xmit (12 samples, 0.28%)</title><rect x="1175.9" y="515.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1178.9" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.28%)</title><rect x="1175.9" y="499.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.9" y="510.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.14%)</title><rect x="1176.4" y="483.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.4" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.12%)</title><rect x="1176.4" y="467.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1179.4" y="478.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="1176.7" y="451.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1179.7" y="462.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="1176.9" y="451.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.9" y="462.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="1176.9" y="435.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1179.9" y="446.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="1176.9" y="419.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1179.9" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="1177.5" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1180.5" y="462.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="1177.8" y="467.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.8" y="478.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="1178.0" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.0" y="494.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="1178.3" y="483.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1181.3" y="494.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.05%)</title><rect x="1178.6" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1181.6" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1179.1" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1182.1" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1179.4" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.4" y="558.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="1179.7" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.7" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="1180.2" y="675.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1183.2" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="1180.8" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.8" y="686.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1180.8" y="659.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1183.8" y="670.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="1181.0" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.0" y="670.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1181.0" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1184.0" y="654.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1181.0" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.0" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (9 samples, 0.21%)</title><rect x="1181.3" y="707.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1184.3" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1181.6" y="691.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1184.6" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.16%)</title><rect x="1181.8" y="691.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.8" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1181.8" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.8" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.14%)</title><rect x="1182.1" y="675.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1185.1" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.14%)</title><rect x="1182.1" y="659.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1185.1" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="1183.7" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1186.7" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.09%)</title><rect x="1184.0" y="723.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1187.0" y="734.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.09%)</title><rect x="1184.0" y="707.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1187.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="1184.0" y="691.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.0" y="702.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.09%)</title><rect x="1184.0" y="675.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1187.0" y="686.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="1185.1" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1188.1" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="1185.4" y="739.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1188.4" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="1185.6" y="739.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1188.6" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="1186.2" y="803.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1189.2" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="1186.5" y="803.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1189.5" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="1187.0" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="878.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.23%)</title><rect x="1187.3" y="883.0" width="2.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.23%)</title><rect x="1187.3" y="867.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.23%)</title><rect x="1187.3" y="851.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.02%)</title><rect x="1187.3" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.02%)</title><rect x="1187.3" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.02%)</title><rect x="1187.3" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1187.3" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.12%)</title><rect x="1187.6" y="835.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.6" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.12%)</title><rect x="1187.6" y="819.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.6" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.07%)</title><rect x="1187.6" y="803.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="814.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="1187.8" y="787.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1190.8" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.05%)</title><rect x="1188.4" y="803.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.4" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.05%)</title><rect x="1188.4" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.4" y="798.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.05%)</title><rect x="1188.4" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.4" y="782.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.07%)</title><rect x="1188.9" y="835.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.07%)</title><rect x="1188.9" y="819.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (3 samples, 0.07%)</title><rect x="1188.9" y="803.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.7" y="846.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.02%)</title><rect x="1189.7" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.7" y="830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1189.7" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.7" y="814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1189.7" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.7" y="798.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.02%)</title><rect x="1189.7" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.7" y="782.0"></text>
</g>
</g>
</svg>
