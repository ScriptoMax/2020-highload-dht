<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Basic shard control | CPU</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (5,457 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.16%)</title><rect x="10.2" y="883.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (9 samples, 0.16%)</title><rect x="10.2" y="867.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (9 samples, 0.16%)</title><rect x="10.2" y="851.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 0.13%)</title><rect x="10.6" y="835.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.6" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="10.6" y="819.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.6" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="11.1" y="819.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.1" y="830.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.07%)</title><rect x="12.2" y="883.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="15.2" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="12.4" y="867.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.4" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.05%)</title><rect x="12.4" y="851.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.4" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="12.6" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="15.6" y="846.0"></text>
</g>
<g>
<title>[unknown_Java] (14 samples, 0.26%)</title><rect x="13.0" y="883.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="16.0" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.26%)</title><rect x="13.0" y="867.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="16.0" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.26%)</title><rect x="13.0" y="851.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="16.0" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.26%)</title><rect x="13.0" y="835.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.20%)</title><rect x="13.5" y="819.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="16.5" y="830.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.20%)</title><rect x="13.5" y="803.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="16.5" y="814.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.16%)</title><rect x="13.7" y="787.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="16.7" y="798.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.15%)</title><rect x="13.9" y="771.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="16.9" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.15%)</title><rect x="13.9" y="755.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="16.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.15%)</title><rect x="13.9" y="739.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="16.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (10 samples, 0.18%)</title><rect x="16.1" y="883.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="19.1" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.11%)</title><rect x="16.9" y="867.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="19.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.11%)</title><rect x="16.9" y="851.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="19.9" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="17.6" y="835.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="20.6" y="846.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="17.6" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.6" y="830.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.05%)</title><rect x="17.6" y="803.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="20.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,882 samples, 71.14%)</title><rect x="18.6" y="883.0" width="839.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.6" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,882 samples, 71.14%)</title><rect x="18.6" y="867.0" width="839.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.6" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,882 samples, 71.14%)</title><rect x="18.6" y="851.0" width="839.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.6" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.05%)</title><rect x="20.4" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="20.4" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.05%)</title><rect x="20.4" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="20.4" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (294 samples, 5.39%)</title><rect x="21.0" y="835.0" width="63.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.0" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (294 samples, 5.39%)</title><rect x="21.0" y="819.0" width="63.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.0" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (286 samples, 5.24%)</title><rect x="21.0" y="803.0" width="61.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.0" y="814.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.05%)</title><rect x="21.2" y="787.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.11%)</title><rect x="21.9" y="787.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (4 samples, 0.07%)</title><rect x="23.4" y="787.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (4 samples, 0.07%)</title><rect x="23.4" y="771.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (270 samples, 4.95%)</title><rect x="24.3" y="787.0" width="58.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.3" y="798.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (254 samples, 4.65%)</title><rect x="27.7" y="771.0" width="55.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.7" y="782.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="29.0" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.0" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="29.7" y="755.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.7" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (105 samples, 1.92%)</title><rect x="30.1" y="755.0" width="22.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="33.1" y="766.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.22%)</title><rect x="32.7" y="739.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="35.7" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="34.4" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="37.4" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="34.9" y="723.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="37.9" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.13%)</title><rect x="35.5" y="739.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="38.5" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.05%)</title><rect x="37.0" y="739.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="40.0" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (53 samples, 0.97%)</title><rect x="37.7" y="739.0" width="11.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="40.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.75%)</title><rect x="40.3" y="723.0" width="8.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.75%)</title><rect x="40.3" y="707.0" width="8.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.27%)</title><rect x="45.5" y="691.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="48.5" y="702.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.22%)</title><rect x="45.7" y="675.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.18%)</title><rect x="45.9" y="659.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.9" y="670.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.11%)</title><rect x="46.5" y="643.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="49.5" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="48.3" y="675.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="51.3" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="48.7" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="51.7" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.04%)</title><rect x="49.4" y="739.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="52.4" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.04%)</title><rect x="49.8" y="739.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="52.8" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="50.2" y="739.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="53.2" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 0.15%)</title><rect x="50.7" y="739.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="53.7" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.04%)</title><rect x="52.4" y="739.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="55.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 2.51%)</title><rect x="52.8" y="755.0" width="29.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="55.8" y="766.0">[u..</text>
</g>
<g>
<title>__pthread_cleanup_pop (6 samples, 0.11%)</title><rect x="52.8" y="739.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="55.8" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (13 samples, 0.24%)</title><rect x="54.3" y="739.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="57.3" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.05%)</title><rect x="57.1" y="739.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="60.1" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.04%)</title><rect x="57.8" y="739.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="60.8" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (112 samples, 2.05%)</title><rect x="58.2" y="739.0" width="24.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="61.2" y="750.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 1.04%)</title><rect x="70.1" y="723.0" width="12.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="73.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 1.03%)</title><rect x="70.3" y="707.0" width="12.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="73.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 0.62%)</title><rect x="74.7" y="691.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.7" y="702.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.55%)</title><rect x="75.3" y="675.0" width="6.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.3" y="686.0"></text>
</g>
<g>
<title>futex_wait (27 samples, 0.49%)</title><rect x="75.7" y="659.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="78.7" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.20%)</title><rect x="76.4" y="643.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="79.4" y="654.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.15%)</title><rect x="77.0" y="627.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="80.0" y="638.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.15%)</title><rect x="77.0" y="611.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="80.0" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="78.3" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.3" y="606.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.15%)</title><rect x="78.8" y="643.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="81.8" y="654.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="79.4" y="627.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="82.4" y="638.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.04%)</title><rect x="80.1" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.1" y="638.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.05%)</title><rect x="80.7" y="643.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.7" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="82.0" y="691.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.15%)</title><rect x="82.9" y="803.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.15%)</title><rect x="82.9" y="787.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.15%)</title><rect x="82.9" y="771.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.15%)</title><rect x="82.9" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.15%)</title><rect x="82.9" y="739.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.13%)</title><rect x="83.1" y="723.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="86.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.11%)</title><rect x="83.3" y="707.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="86.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.11%)</title><rect x="83.3" y="691.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.09%)</title><rect x="83.5" y="675.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="86.5" y="686.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.09%)</title><rect x="83.5" y="659.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="86.5" y="670.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.09%)</title><rect x="83.5" y="643.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="86.5" y="654.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="83.7" y="627.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.7" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="83.7" y="611.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.7" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="83.7" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.run (3,577 samples, 65.55%)</title><rect x="84.6" y="835.0" width="773.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.6" y="846.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4 (3,562 samples, 65.27%)</title><rect x="87.8" y="819.0" width="770.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.8" y="830.0">ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,669 samples, 30.58%)</title><rect x="87.8" y="803.0" width="360.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.8" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (11 samples, 0.20%)</title><rect x="91.3" y="787.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.20%)</title><rect x="91.3" y="771.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.20%)</title><rect x="91.3" y="755.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.09%)</title><rect x="92.2" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$70/584530341.exec (2 samples, 0.04%)</title><rect x="93.3" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,626 samples, 29.80%)</title><rect x="93.7" y="787.0" width="351.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.7" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (47 samples, 0.86%)</title><rect x="93.7" y="771.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (28 samples, 0.51%)</title><rect x="97.8" y="755.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (28 samples, 0.51%)</title><rect x="97.8" y="739.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (28 samples, 0.51%)</title><rect x="97.8" y="723.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.8" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="103.0" y="707.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="106.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,579 samples, 28.94%)</title><rect x="103.8" y="771.0" width="341.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.8" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,574 samples, 28.84%)</title><rect x="104.9" y="755.0" width="340.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.9" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.09%)</title><rect x="105.6" y="739.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="108.6" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.09%)</title><rect x="105.6" y="723.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="108.6" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (4 samples, 0.07%)</title><rect x="105.6" y="707.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="108.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.09%)</title><rect x="106.7" y="739.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="109.7" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.07%)</title><rect x="106.9" y="723.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.9" y="734.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.18%)</title><rect x="107.7" y="739.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="110.7" y="750.0"></text>
</g>
<g>
<title>gettimeofday@plt (5 samples, 0.09%)</title><rect x="109.9" y="739.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="112.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,540 samples, 28.22%)</title><rect x="111.2" y="739.0" width="333.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.2" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,531 samples, 28.06%)</title><rect x="113.1" y="723.0" width="331.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.1" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (43 samples, 0.79%)</title><rect x="117.7" y="707.0" width="9.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="120.7" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.11%)</title><rect x="122.7" y="691.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="125.7" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.24%)</title><rect x="124.2" y="691.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="127.2" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="125.7" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="128.7" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.05%)</title><rect x="126.3" y="675.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="129.3" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.09%)</title><rect x="127.0" y="707.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="130.0" y="718.0"></text>
</g>
<g>
<title>__libc_send (1,457 samples, 26.70%)</title><rect x="128.3" y="707.0" width="315.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="131.3" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,435 samples, 26.30%)</title><rect x="133.0" y="691.0" width="310.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.0" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.04%)</title><rect x="133.0" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="136.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1,433 samples, 26.26%)</title><rect x="133.5" y="675.0" width="309.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="136.5" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,366 samples, 25.03%)</title><rect x="148.0" y="659.0" width="295.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="151.0" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,359 samples, 24.90%)</title><rect x="148.2" y="643.0" width="293.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="151.2" y="654.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="151.2" y="627.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.2" y="638.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="151.9" y="627.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (1,316 samples, 24.12%)</title><rect x="152.7" y="627.0" width="284.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="155.7" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="154.0" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.0" y="622.0"></text>
</g>
<g>
<title>inet_sendmsg (1,289 samples, 23.62%)</title><rect x="154.4" y="611.0" width="278.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.4" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,280 samples, 23.46%)</title><rect x="156.2" y="595.0" width="276.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.2" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="156.6" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="159.6" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="157.0" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="160.0" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.04%)</title><rect x="157.5" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.5" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="157.9" y="579.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="158.6" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="161.6" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="159.0" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="159.0" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.0" y="574.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="159.4" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.4" y="590.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="159.9" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="162.9" y="590.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.04%)</title><rect x="160.3" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="163.3" y="590.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.05%)</title><rect x="160.9" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.9" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.07%)</title><rect x="161.6" y="579.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.6" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="162.4" y="579.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="165.4" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,244 samples, 22.80%)</title><rect x="162.9" y="579.0" width="269.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.9" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.15%)</title><rect x="167.9" y="563.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="170.9" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.13%)</title><rect x="168.1" y="547.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="171.1" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.07%)</title><rect x="169.6" y="563.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="172.6" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (9 samples, 0.16%)</title><rect x="170.7" y="563.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="173.7" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.13%)</title><rect x="171.1" y="547.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="174.1" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (4 samples, 0.07%)</title><rect x="172.8" y="563.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="175.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (66 samples, 1.21%)</title><rect x="173.7" y="563.0" width="14.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="176.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (49 samples, 0.90%)</title><rect x="174.8" y="547.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="177.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (25 samples, 0.46%)</title><rect x="175.9" y="531.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="178.9" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (22 samples, 0.40%)</title><rect x="176.1" y="515.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.1" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (8 samples, 0.15%)</title><rect x="177.8" y="499.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="180.8" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.09%)</title><rect x="179.7" y="499.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.7" y="510.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.04%)</title><rect x="180.8" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="183.8" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (19 samples, 0.35%)</title><rect x="181.3" y="531.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.3" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="184.9" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="187.9" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.04%)</title><rect x="185.4" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="188.4" y="558.0"></text>
</g>
<g>
<title>ksize (9 samples, 0.16%)</title><rect x="186.0" y="547.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="189.0" y="558.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.07%)</title><rect x="188.0" y="563.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.0" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.04%)</title><rect x="188.4" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.05%)</title><rect x="189.0" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.0" y="574.0"></text>
</g>
<g>
<title>tcp_push (1,093 samples, 20.03%)</title><rect x="189.7" y="563.0" width="236.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.7" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,090 samples, 19.97%)</title><rect x="189.9" y="547.0" width="235.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.9" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.05%)</title><rect x="190.3" y="531.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="193.3" y="542.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.07%)</title><rect x="191.0" y="531.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="194.0" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.09%)</title><rect x="192.1" y="531.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.1" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (5 samples, 0.09%)</title><rect x="193.2" y="531.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="196.2" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,070 samples, 19.61%)</title><rect x="194.2" y="531.0" width="231.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="197.2" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.05%)</title><rect x="198.8" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="201.8" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (990 samples, 18.14%)</title><rect x="199.4" y="515.0" width="214.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.4" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.05%)</title><rect x="206.1" y="499.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.1" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (946 samples, 17.34%)</title><rect x="206.8" y="499.0" width="204.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="209.8" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (943 samples, 17.28%)</title><rect x="207.0" y="483.0" width="203.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.0" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (922 samples, 16.90%)</title><rect x="209.6" y="467.0" width="199.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="212.6" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (172 samples, 3.15%)</title><rect x="210.2" y="451.0" width="37.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.2" y="462.0">__i..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.07%)</title><rect x="210.7" y="435.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="213.7" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (9 samples, 0.16%)</title><rect x="211.5" y="435.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.5" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 0.13%)</title><rect x="213.5" y="435.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="216.5" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (149 samples, 2.73%)</title><rect x="215.0" y="435.0" width="32.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.0" y="446.0">nf..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.11%)</title><rect x="215.4" y="419.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="218.4" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (24 samples, 0.44%)</title><rect x="216.7" y="419.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="219.7" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (21 samples, 0.38%)</title><rect x="217.4" y="403.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (96 samples, 1.76%)</title><rect x="221.9" y="419.0" width="20.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="224.9" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.04%)</title><rect x="221.9" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="224.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.04%)</title><rect x="222.3" y="403.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="225.3" y="414.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.04%)</title><rect x="222.8" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="225.8" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (4 samples, 0.07%)</title><rect x="223.2" y="403.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="226.2" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (82 samples, 1.50%)</title><rect x="224.1" y="403.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="227.1" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (16 samples, 0.29%)</title><rect x="226.5" y="387.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="229.5" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (3 samples, 0.05%)</title><rect x="229.9" y="387.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="232.9" y="398.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.04%)</title><rect x="230.6" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="233.6" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (6 samples, 0.11%)</title><rect x="231.0" y="387.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="234.0" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (5 samples, 0.09%)</title><rect x="232.3" y="387.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="235.3" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (39 samples, 0.71%)</title><rect x="233.4" y="387.0" width="8.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.4" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="236.6" y="371.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.6" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="236.6" y="355.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="239.6" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (20 samples, 0.37%)</title><rect x="237.5" y="371.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="240.5" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (5 samples, 0.09%)</title><rect x="240.7" y="355.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="243.7" y="366.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.07%)</title><rect x="241.8" y="403.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="244.8" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.07%)</title><rect x="242.7" y="419.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="245.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="243.5" y="419.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="246.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (15 samples, 0.27%)</title><rect x="244.0" y="419.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (5 samples, 0.09%)</title><rect x="244.4" y="403.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="247.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (8 samples, 0.15%)</title><rect x="245.5" y="403.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="248.5" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.07%)</title><rect x="245.7" y="387.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="248.7" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (3 samples, 0.05%)</title><rect x="246.6" y="387.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="249.6" y="398.0"></text>
</g>
<g>
<title>ip_output (743 samples, 13.62%)</title><rect x="247.6" y="451.0" width="160.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="250.6" y="462.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="249.6" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="252.6" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (710 samples, 13.01%)</title><rect x="250.2" y="435.0" width="153.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="253.2" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (11 samples, 0.20%)</title><rect x="252.8" y="419.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.8" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (686 samples, 12.57%)</title><rect x="255.4" y="419.0" width="148.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="258.4" y="430.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (585 samples, 10.72%)</title><rect x="258.9" y="403.0" width="126.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.9" y="414.0">__local_bh_enabl..</text>
</g>
<g>
<title>do_softirq.part.21 (582 samples, 10.67%)</title><rect x="259.5" y="387.0" width="125.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="262.5" y="398.0">do_softirq.part..</text>
</g>
<g>
<title>do_softirq_own_stack (570 samples, 10.45%)</title><rect x="262.1" y="371.0" width="123.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="265.1" y="382.0">do_softirq_own_..</text>
</g>
<g>
<title>__softirqentry_text_start (569 samples, 10.43%)</title><rect x="262.1" y="355.0" width="123.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="265.1" y="366.0">__softirqentry_..</text>
</g>
<g>
<title>net_rx_action (554 samples, 10.15%)</title><rect x="264.9" y="339.0" width="119.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="267.9" y="350.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (536 samples, 9.82%)</title><rect x="268.8" y="323.0" width="115.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="271.8" y="334.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (525 samples, 9.62%)</title><rect x="270.6" y="307.0" width="113.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="273.6" y="318.0">__netif_receiv..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="270.6" y="291.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="273.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (523 samples, 9.58%)</title><rect x="271.0" y="291.0" width="113.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="274.0" y="302.0">__netif_receiv..</text>
</g>
<g>
<title>__netif_receive_skb_core (18 samples, 0.33%)</title><rect x="271.6" y="275.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="274.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (498 samples, 9.13%)</title><rect x="275.5" y="275.0" width="107.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.5" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="277.3" y="259.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="280.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.09%)</title><rect x="277.9" y="259.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="280.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (468 samples, 8.58%)</title><rect x="279.0" y="259.0" width="101.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="282.0" y="270.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (458 samples, 8.39%)</title><rect x="279.6" y="243.0" width="99.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="282.6" y="254.0">ip_local_del..</text>
</g>
<g>
<title>ip_local_deliver_finish (442 samples, 8.10%)</title><rect x="280.1" y="227.0" width="95.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="283.1" y="238.0">ip_local_de..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (441 samples, 8.08%)</title><rect x="280.1" y="211.0" width="95.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="283.1" y="222.0">ip_protocol..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="283.1" y="195.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="286.1" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.04%)</title><rect x="283.5" y="195.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (419 samples, 7.68%)</title><rect x="284.8" y="195.0" width="90.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="287.8" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (20 samples, 0.37%)</title><rect x="287.4" y="179.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.4" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.05%)</title><rect x="291.1" y="163.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="294.1" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (2 samples, 0.04%)</title><rect x="291.8" y="179.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="294.8" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.05%)</title><rect x="292.4" y="179.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.4" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="293.1" y="179.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="296.1" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="293.5" y="179.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="296.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.18%)</title><rect x="293.9" y="179.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="296.9" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="294.1" y="163.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="297.1" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.07%)</title><rect x="294.8" y="163.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="297.8" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="295.6" y="163.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="298.6" y="174.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.04%)</title><rect x="296.1" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="299.1" y="190.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.04%)</title><rect x="296.5" y="179.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="299.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (359 samples, 6.58%)</title><rect x="297.2" y="179.0" width="77.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="300.2" y="190.0">tcp_v4_do..</text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.04%)</title><rect x="298.0" y="163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="301.0" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (351 samples, 6.43%)</title><rect x="298.7" y="163.0" width="75.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="301.7" y="174.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (27 samples, 0.49%)</title><rect x="301.1" y="147.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="304.1" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (22 samples, 0.40%)</title><rect x="302.1" y="131.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="305.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="302.8" y="115.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.8" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.31%)</title><rect x="303.2" y="115.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="306.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (17 samples, 0.31%)</title><rect x="303.2" y="99.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="306.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.27%)</title><rect x="303.6" y="83.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="306.6" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.05%)</title><rect x="306.9" y="147.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="309.9" y="158.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="307.8" y="147.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="310.8" y="158.0"></text>
</g>
<g>
<title>tcp_ack (120 samples, 2.20%)</title><rect x="308.8" y="147.0" width="26.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="311.8" y="158.0">t..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.05%)</title><rect x="313.6" y="131.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="316.6" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.04%)</title><rect x="314.2" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="317.2" y="142.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.04%)</title><rect x="314.7" y="131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.7" y="142.0"></text>
</g>
<g>
<title>rb_next (3 samples, 0.05%)</title><rect x="315.3" y="131.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.3" y="142.0"></text>
</g>
<g>
<title>tcp_chrono_stop (3 samples, 0.05%)</title><rect x="316.2" y="131.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (74 samples, 1.36%)</title><rect x="316.8" y="131.0" width="16.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="319.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (44 samples, 0.81%)</title><rect x="320.7" y="115.0" width="9.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="323.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (10 samples, 0.18%)</title><rect x="320.9" y="99.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.9" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.13%)</title><rect x="321.6" y="83.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.6" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="322.7" y="67.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="325.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (32 samples, 0.59%)</title><rect x="323.1" y="99.0" width="6.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="326.1" y="110.0"></text>
</g>
<g>
<title>skb_release_data (30 samples, 0.55%)</title><rect x="323.1" y="83.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="326.1" y="94.0"></text>
</g>
<g>
<title>skb_free_head (20 samples, 0.37%)</title><rect x="325.3" y="67.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.3" y="78.0"></text>
</g>
<g>
<title>kfree (19 samples, 0.35%)</title><rect x="325.5" y="51.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="328.5" y="62.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.07%)</title><rect x="328.5" y="35.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.5" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="329.6" y="83.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.6" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="330.7" y="115.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="333.7" y="126.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.04%)</title><rect x="331.3" y="115.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="334.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (4 samples, 0.07%)</title><rect x="331.8" y="115.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="334.8" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.04%)</title><rect x="332.8" y="131.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="335.8" y="142.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.04%)</title><rect x="333.5" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="336.5" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.04%)</title><rect x="334.4" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="337.4" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.11%)</title><rect x="334.8" y="147.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="337.8" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (155 samples, 2.84%)</title><rect x="336.1" y="147.0" width="33.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="339.1" y="158.0">tc..</text>
</g>
<g>
<title>dst_release (3 samples, 0.05%)</title><rect x="336.9" y="131.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="339.9" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (135 samples, 2.47%)</title><rect x="337.6" y="131.0" width="29.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="340.6" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="338.9" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="341.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (127 samples, 2.33%)</title><rect x="339.3" y="115.0" width="27.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="342.3" y="126.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (124 samples, 2.27%)</title><rect x="339.5" y="99.0" width="26.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.5" y="110.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (122 samples, 2.24%)</title><rect x="340.0" y="83.0" width="26.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="343.0" y="94.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.09%)</title><rect x="366.8" y="131.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="369.8" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (8 samples, 0.15%)</title><rect x="367.9" y="131.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="370.9" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.05%)</title><rect x="369.6" y="147.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="372.6" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.16%)</title><rect x="370.2" y="147.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="373.2" y="158.0"></text>
</g>
<g>
<title>ktime_get (9 samples, 0.16%)</title><rect x="370.2" y="131.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="373.2" y="142.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.07%)</title><rect x="371.3" y="115.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.3" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.05%)</title><rect x="372.2" y="147.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="375.2" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.04%)</title><rect x="372.8" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="375.8" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="373.9" y="147.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="376.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.04%)</title><rect x="374.8" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.8" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.24%)</title><rect x="375.7" y="227.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="378.7" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (8 samples, 0.15%)</title><rect x="376.1" y="211.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="379.1" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (8 samples, 0.15%)</title><rect x="376.1" y="195.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.1" y="206.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.04%)</title><rect x="377.8" y="211.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="380.8" y="222.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.04%)</title><rect x="377.8" y="195.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="380.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (5 samples, 0.09%)</title><rect x="378.7" y="243.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="381.7" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="379.8" y="243.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="382.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.04%)</title><rect x="380.2" y="259.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="383.2" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.04%)</title><rect x="380.8" y="259.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="383.8" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.15%)</title><rect x="381.5" y="259.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="384.5" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (3 samples, 0.05%)</title><rect x="381.9" y="243.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.9" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.05%)</title><rect x="381.9" y="227.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="384.9" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="382.8" y="243.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="385.8" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="382.8" y="227.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="385.8" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.04%)</title><rect x="383.4" y="275.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="386.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.05%)</title><rect x="384.1" y="307.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="387.1" y="318.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.04%)</title><rect x="384.7" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.7" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (84 samples, 1.54%)</title><rect x="385.4" y="403.0" width="18.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="388.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (83 samples, 1.52%)</title><rect x="385.4" y="387.0" width="17.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="388.4" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (46 samples, 0.84%)</title><rect x="388.6" y="371.0" width="10.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (38 samples, 0.70%)</title><rect x="389.7" y="355.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="392.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (11 samples, 0.20%)</title><rect x="391.7" y="339.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="394.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (16 samples, 0.29%)</title><rect x="394.0" y="339.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="397.0" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="394.0" y="323.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="397.0" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.26%)</title><rect x="394.5" y="323.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="397.5" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (14 samples, 0.26%)</title><rect x="394.5" y="307.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="397.5" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.04%)</title><rect x="397.9" y="355.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="400.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="398.6" y="371.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="401.6" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (17 samples, 0.31%)</title><rect x="399.7" y="371.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (7 samples, 0.13%)</title><rect x="401.2" y="355.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="404.2" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.04%)</title><rect x="402.9" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="405.9" y="366.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.04%)</title><rect x="403.8" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="406.8" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (4 samples, 0.07%)</title><rect x="404.2" y="435.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="407.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.26%)</title><rect x="405.1" y="435.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="408.1" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (6 samples, 0.11%)</title><rect x="405.7" y="419.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="408.7" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (5 samples, 0.09%)</title><rect x="405.9" y="403.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="408.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="407.2" y="419.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="410.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="407.4" y="403.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.05%)</title><rect x="407.4" y="387.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.4" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="408.5" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="411.5" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (9 samples, 0.16%)</title><rect x="409.0" y="467.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="412.0" y="478.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.11%)</title><rect x="411.3" y="499.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="414.3" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="411.6" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="414.6" y="494.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.05%)</title><rect x="412.0" y="483.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="415.0" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="412.2" y="467.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="415.2" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.04%)</title><rect x="413.1" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="416.1" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.04%)</title><rect x="413.1" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="416.1" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.07%)</title><rect x="413.5" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="416.5" y="526.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.04%)</title><rect x="414.6" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="417.6" y="526.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.09%)</title><rect x="415.0" y="515.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="418.0" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="415.7" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="418.7" y="510.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="416.1" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="419.1" y="526.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.05%)</title><rect x="416.7" y="515.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="419.7" y="526.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.04%)</title><rect x="417.4" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.4" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (25 samples, 0.46%)</title><rect x="417.8" y="515.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="420.8" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (3 samples, 0.05%)</title><rect x="418.3" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="421.3" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (20 samples, 0.37%)</title><rect x="418.9" y="499.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="421.9" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="419.3" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="422.3" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (16 samples, 0.29%)</title><rect x="419.8" y="483.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="422.8" y="494.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.27%)</title><rect x="420.0" y="467.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="423.0" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.15%)</title><rect x="420.8" y="451.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="423.8" y="462.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.05%)</title><rect x="422.6" y="451.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="425.6" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="422.8" y="435.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.8" y="446.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.04%)</title><rect x="423.4" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.4" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.04%)</title><rect x="423.9" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="426.9" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="424.3" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="427.3" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="424.7" y="515.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="427.7" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.04%)</title><rect x="425.6" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="428.6" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="426.0" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="429.0" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (22 samples, 0.40%)</title><rect x="426.5" y="563.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="429.5" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (21 samples, 0.38%)</title><rect x="426.7" y="547.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="429.7" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.13%)</title><rect x="429.3" y="531.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.3" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="430.8" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="433.8" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="431.2" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="434.2" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.07%)</title><rect x="431.9" y="579.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="434.9" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (15 samples, 0.27%)</title><rect x="433.2" y="611.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="436.2" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="433.6" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.6" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (11 samples, 0.20%)</title><rect x="434.0" y="595.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="437.0" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (11 samples, 0.20%)</title><rect x="434.0" y="579.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="437.0" y="590.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="434.7" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="437.7" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.11%)</title><rect x="435.1" y="563.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="438.1" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.07%)</title><rect x="436.4" y="611.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="439.4" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (22 samples, 0.40%)</title><rect x="437.3" y="627.0" width="4.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="440.3" y="638.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.33%)</title><rect x="437.3" y="611.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.33%)</title><rect x="437.3" y="595.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.3" y="606.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.22%)</title><rect x="438.6" y="579.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.6" y="590.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="441.2" y="611.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="444.2" y="622.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.04%)</title><rect x="442.3" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="445.3" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="442.7" y="643.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.7" y="654.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.04%)</title><rect x="443.6" y="707.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="446.6" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.09%)</title><rect x="444.2" y="739.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="447.2" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="444.4" y="723.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="447.4" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="444.9" y="723.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="447.9" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="444.9" y="707.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="447.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.22%)</title><rect x="445.3" y="787.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.09%)</title><rect x="446.8" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.09%)</title><rect x="446.8" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (2 samples, 0.04%)</title><rect x="447.9" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="447.9" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.9" y="782.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (2 samples, 0.04%)</title><rect x="448.3" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$70/584530341.exec (1,893 samples, 34.69%)</title><rect x="448.7" y="803.0" width="409.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.7" y="814.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$70..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$entity$1 (1,893 samples, 34.69%)</title><rect x="448.7" y="787.0" width="409.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.7" y="798.0">ru/mail/polis/service/codearound/AsyncService.lambda$ent..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.get (1,891 samples, 34.65%)</title><rect x="449.2" y="771.0" width="408.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.2" y="782.0">ru/mail/polis/service/codearound/AsyncService.get</text>
</g>
<g>
<title>one/nio/http/Response.ok (8 samples, 0.15%)</title><rect x="451.6" y="755.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.13%)</title><rect x="451.6" y="739.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="454.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.proxy (1,207 samples, 22.12%)</title><rect x="453.3" y="755.0" width="261.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.3" y="766.0">ru/mail/polis/service/codearound/As..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.13%)</title><rect x="454.8" y="739.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1354003114.invoke (7 samples, 0.13%)</title><rect x="454.8" y="723.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="454.8" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.05%)</title><rect x="455.0" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.09%)</title><rect x="456.3" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.09%)</title><rect x="456.3" y="723.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.05%)</title><rect x="456.7" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,184 samples, 21.70%)</title><rect x="457.4" y="739.0" width="256.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.4" y="750.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,183 samples, 21.68%)</title><rect x="457.6" y="723.0" width="255.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.6" y="734.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (266 samples, 4.87%)</title><rect x="458.9" y="707.0" width="57.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.9" y="718.0">one/ni..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="469.7" y="691.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="472.7" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="469.9" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="472.9" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="469.9" y="659.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="472.9" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="469.9" y="643.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="472.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (212 samples, 3.88%)</title><rect x="470.4" y="691.0" width="45.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.4" y="702.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (43 samples, 0.79%)</title><rect x="471.2" y="675.0" width="9.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="474.2" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="472.3" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="475.3" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="472.7" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="475.7" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (5 samples, 0.09%)</title><rect x="473.4" y="659.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="476.4" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (25 samples, 0.46%)</title><rect x="474.5" y="659.0" width="5.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="477.5" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="476.4" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="479.4" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (8 samples, 0.15%)</title><rect x="477.1" y="643.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="480.1" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.09%)</title><rect x="478.8" y="643.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="481.8" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="479.4" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="482.4" y="638.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.04%)</title><rect x="479.9" y="659.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="482.9" y="670.0"></text>
</g>
<g>
<title>__GI___recv (155 samples, 2.84%)</title><rect x="480.5" y="675.0" width="33.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="483.5" y="686.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (143 samples, 2.62%)</title><rect x="483.1" y="659.0" width="30.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.1" y="670.0">en..</text>
</g>
<g>
<title>do_syscall_64 (143 samples, 2.62%)</title><rect x="483.1" y="643.0" width="30.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.1" y="654.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (124 samples, 2.27%)</title><rect x="487.2" y="627.0" width="26.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="490.2" y="638.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (120 samples, 2.20%)</title><rect x="487.2" y="611.0" width="26.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="490.2" y="622.0">_..</text>
</g>
<g>
<title>sock_recvmsg (101 samples, 1.85%)</title><rect x="490.0" y="595.0" width="21.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.0" y="606.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="490.0" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="493.0" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (87 samples, 1.59%)</title><rect x="490.5" y="579.0" width="18.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.5" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (85 samples, 1.56%)</title><rect x="490.9" y="563.0" width="18.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="493.9" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.09%)</title><rect x="497.2" y="547.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="500.2" y="558.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.07%)</title><rect x="497.2" y="531.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="500.2" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="497.4" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="500.4" y="526.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="497.4" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="500.4" y="510.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.04%)</title><rect x="498.3" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.3" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="499.1" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.1" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (19 samples, 0.35%)</title><rect x="499.8" y="547.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.8" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="500.9" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.9" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="500.9" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.9" y="526.0"></text>
</g>
<g>
<title>remove_wait_queue (6 samples, 0.11%)</title><rect x="501.3" y="531.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="504.3" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.11%)</title><rect x="501.3" y="515.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="504.3" y="526.0"></text>
</g>
<g>
<title>wait_woken (6 samples, 0.11%)</title><rect x="502.6" y="531.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="505.6" y="542.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.07%)</title><rect x="503.0" y="515.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="506.0" y="526.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="503.5" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="506.5" y="510.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="503.5" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="506.5" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.27%)</title><rect x="503.9" y="547.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.9" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.18%)</title><rect x="504.3" y="531.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="507.3" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (10 samples, 0.18%)</title><rect x="504.3" y="515.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="507.3" y="526.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="504.5" y="499.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="507.5" y="510.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.07%)</title><rect x="505.2" y="499.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="508.2" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="505.4" y="483.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="508.4" y="494.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.04%)</title><rect x="506.0" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="509.0" y="510.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="506.7" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.7" y="542.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.09%)</title><rect x="507.1" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="510.1" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.05%)</title><rect x="508.4" y="547.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="511.4" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="508.6" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="511.6" y="542.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.22%)</title><rect x="509.3" y="579.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="512.3" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (11 samples, 0.20%)</title><rect x="509.5" y="563.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="512.5" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.18%)</title><rect x="509.7" y="547.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="512.7" y="558.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.05%)</title><rect x="509.9" y="531.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="512.9" y="542.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.11%)</title><rect x="510.6" y="531.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="513.6" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.11%)</title><rect x="511.9" y="595.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.9" y="606.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="511.9" y="579.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="514.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="511.9" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="514.9" y="574.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="512.3" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.3" y="558.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="512.7" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="515.7" y="590.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.05%)</title><rect x="513.2" y="611.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="516.2" y="622.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.07%)</title><rect x="514.0" y="675.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="517.0" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.11%)</title><rect x="514.9" y="675.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="517.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (52 samples, 0.95%)</title><rect x="516.4" y="707.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.05%)</title><rect x="516.9" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="516.9" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="516.9" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="516.9" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="516.9" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.13%)</title><rect x="517.5" y="691.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="518.2" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.07%)</title><rect x="518.2" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="518.6" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.6" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="519.0" y="691.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="522.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (27 samples, 0.49%)</title><rect x="519.7" y="691.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.44%)</title><rect x="520.3" y="675.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.44%)</title><rect x="520.3" y="659.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (4 samples, 0.07%)</title><rect x="525.5" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.11%)</title><rect x="526.4" y="691.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="527.0" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="527.0" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (24 samples, 0.44%)</title><rect x="527.7" y="707.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.09%)</title><rect x="529.2" y="691.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.15%)</title><rect x="530.3" y="691.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.05%)</title><rect x="530.5" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.04%)</title><rect x="530.7" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.07%)</title><rect x="531.1" y="675.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="534.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.07%)</title><rect x="531.1" y="659.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.07%)</title><rect x="531.1" y="643.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.05%)</title><rect x="531.3" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.3" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.07%)</title><rect x="532.0" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.05%)</title><rect x="532.2" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.09%)</title><rect x="532.9" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.07%)</title><rect x="533.1" y="691.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.07%)</title><rect x="533.1" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.04%)</title><rect x="533.9" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (138 samples, 2.53%)</title><rect x="534.4" y="707.0" width="29.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.4" y="718.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (7 samples, 0.13%)</title><rect x="537.0" y="691.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="540.0" y="702.0"></text>
</g>
<g>
<title>__GI___setsockopt (118 samples, 2.16%)</title><rect x="538.5" y="691.0" width="25.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="541.5" y="702.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 1.94%)</title><rect x="541.1" y="675.0" width="22.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.1" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (105 samples, 1.92%)</title><rect x="541.3" y="659.0" width="22.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="544.3" y="670.0">d..</text>
</g>
<g>
<title>__sys_setsockopt (3 samples, 0.05%)</title><rect x="549.7" y="643.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="552.7" y="654.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (63 samples, 1.15%)</title><rect x="550.4" y="643.0" width="13.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="553.4" y="654.0"></text>
</g>
<g>
<title>__sys_setsockopt (60 samples, 1.10%)</title><rect x="550.4" y="627.0" width="12.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="553.4" y="638.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.04%)</title><rect x="551.5" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="554.5" y="622.0"></text>
</g>
<g>
<title>security_socket_setsockopt (8 samples, 0.15%)</title><rect x="552.1" y="611.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="555.1" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.04%)</title><rect x="552.1" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="555.1" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (6 samples, 0.11%)</title><rect x="552.5" y="595.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="555.5" y="606.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (5 samples, 0.09%)</title><rect x="552.8" y="579.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="555.8" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="553.2" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="556.2" y="574.0"></text>
</g>
<g>
<title>sock_setsockopt (30 samples, 0.55%)</title><rect x="553.8" y="611.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="556.8" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="556.6" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="559.6" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="557.1" y="595.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="560.1" y="606.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.07%)</title><rect x="557.7" y="595.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="560.7" y="606.0"></text>
</g>
<g>
<title>sock_set_timeout (7 samples, 0.13%)</title><rect x="558.6" y="595.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.6" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="559.2" y="579.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="562.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.26%)</title><rect x="560.3" y="611.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.3" y="622.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.18%)</title><rect x="560.3" y="595.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="563.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.16%)</title><rect x="560.5" y="579.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="563.5" y="590.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.11%)</title><rect x="561.2" y="563.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.2" y="574.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="562.5" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="565.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (684 samples, 12.53%)</title><rect x="564.2" y="707.0" width="147.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.2" y="718.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (37 samples, 0.68%)</title><rect x="571.3" y="691.0" width="8.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="574.3" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="573.3" y="675.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="576.3" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.09%)</title><rect x="573.9" y="675.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.9" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (8 samples, 0.15%)</title><rect x="575.0" y="675.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="578.0" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.22%)</title><rect x="576.8" y="675.0" width="2.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="579.8" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="577.6" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="580.6" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.09%)</title><rect x="578.3" y="659.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="581.3" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.05%)</title><rect x="578.5" y="643.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="581.5" y="654.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="579.3" y="691.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="582.3" y="702.0"></text>
</g>
<g>
<title>__libc_send (610 samples, 11.18%)</title><rect x="580.0" y="691.0" width="131.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="583.0" y="702.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (597 samples, 10.94%)</title><rect x="582.8" y="675.0" width="129.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="585.8" y="686.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.04%)</title><rect x="582.8" y="659.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="585.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (595 samples, 10.90%)</title><rect x="583.2" y="659.0" width="128.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="586.2" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.04%)</title><rect x="587.8" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="590.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (570 samples, 10.45%)</title><rect x="588.2" y="643.0" width="123.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.2" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (570 samples, 10.45%)</title><rect x="588.2" y="627.0" width="123.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.2" y="638.0">__sys_sendto</text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="589.3" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="592.3" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (561 samples, 10.28%)</title><rect x="589.9" y="611.0" width="121.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="592.9" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (550 samples, 10.08%)</title><rect x="590.4" y="595.0" width="118.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.4" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (548 samples, 10.04%)</title><rect x="590.8" y="579.0" width="118.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="593.8" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="591.7" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="594.7" y="574.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.04%)</title><rect x="592.5" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="595.5" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.07%)</title><rect x="593.0" y="563.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="596.0" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="593.8" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="596.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (531 samples, 9.73%)</title><rect x="594.3" y="563.0" width="114.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="597.3" y="574.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="596.9" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="599.9" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="596.9" y="531.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="599.9" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="597.7" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="600.7" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.15%)</title><rect x="598.2" y="547.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="601.2" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.07%)</title><rect x="598.4" y="531.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="601.4" y="542.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="599.5" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="602.5" y="542.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.04%)</title><rect x="599.9" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="602.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (32 samples, 0.59%)</title><rect x="600.5" y="547.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="603.5" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (23 samples, 0.42%)</title><rect x="601.2" y="531.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="604.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (13 samples, 0.24%)</title><rect x="601.6" y="515.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.6" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.22%)</title><rect x="601.8" y="499.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="604.8" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.11%)</title><rect x="602.3" y="483.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="605.3" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.05%)</title><rect x="603.8" y="483.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="606.8" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.09%)</title><rect x="604.4" y="515.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.4" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="605.1" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="608.1" y="510.0"></text>
</g>
<g>
<title>should_failslab (3 samples, 0.05%)</title><rect x="605.5" y="515.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="608.5" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="606.2" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.2" y="542.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.07%)</title><rect x="606.6" y="531.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.6" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="607.5" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="610.5" y="558.0"></text>
</g>
<g>
<title>tcp_push (464 samples, 8.50%)</title><rect x="607.9" y="547.0" width="100.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="610.9" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (462 samples, 8.47%)</title><rect x="608.3" y="531.0" width="99.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="611.3" y="542.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (459 samples, 8.41%)</title><rect x="609.0" y="515.0" width="99.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="612.0" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (431 samples, 7.90%)</title><rect x="611.4" y="499.0" width="93.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="614.4" y="510.0">__tcp_trans..</text>
</g>
<g>
<title>ip_queue_xmit (416 samples, 7.62%)</title><rect x="613.1" y="483.0" width="89.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.1" y="494.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (415 samples, 7.60%)</title><rect x="613.1" y="467.0" width="89.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="616.1" y="478.0">__ip_queue..</text>
</g>
<g>
<title>ip_local_out (407 samples, 7.46%)</title><rect x="613.9" y="451.0" width="88.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.9" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (65 samples, 1.19%)</title><rect x="614.8" y="435.0" width="14.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="617.8" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.05%)</title><rect x="615.9" y="419.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="618.9" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.04%)</title><rect x="616.5" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="619.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (54 samples, 0.99%)</title><rect x="617.0" y="419.0" width="11.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="620.0" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.18%)</title><rect x="617.2" y="403.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.2" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.16%)</title><rect x="617.4" y="387.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.4" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (39 samples, 0.71%)</title><rect x="619.4" y="403.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="622.4" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (36 samples, 0.66%)</title><rect x="619.6" y="387.0" width="7.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="622.6" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.05%)</title><rect x="621.7" y="371.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="624.7" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (18 samples, 0.33%)</title><rect x="623.5" y="371.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="626.5" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (9 samples, 0.16%)</title><rect x="625.4" y="355.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.4" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.04%)</title><rect x="626.9" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="629.9" y="350.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (2 samples, 0.04%)</title><rect x="627.4" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="630.4" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="628.0" y="403.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="631.0" y="414.0"></text>
</g>
<g>
<title>ip_output (337 samples, 6.18%)</title><rect x="628.9" y="435.0" width="72.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="631.9" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (327 samples, 5.99%)</title><rect x="629.3" y="419.0" width="70.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.3" y="430.0">ip_finis..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="630.2" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="633.2" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (320 samples, 5.86%)</title><rect x="630.8" y="403.0" width="69.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.8" y="414.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (286 samples, 5.24%)</title><rect x="632.3" y="387.0" width="61.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="635.3" y="398.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.21 (285 samples, 5.22%)</title><rect x="632.5" y="371.0" width="61.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="635.5" y="382.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (285 samples, 5.22%)</title><rect x="632.5" y="355.0" width="61.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="635.5" y="366.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (284 samples, 5.20%)</title><rect x="632.5" y="339.0" width="61.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="635.5" y="350.0">__soft..</text>
</g>
<g>
<title>net_rx_action (282 samples, 5.17%)</title><rect x="633.0" y="323.0" width="61.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="636.0" y="334.0">net_rx..</text>
</g>
<g>
<title>process_backlog (275 samples, 5.04%)</title><rect x="634.5" y="307.0" width="59.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="637.5" y="318.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (272 samples, 4.98%)</title><rect x="634.9" y="291.0" width="58.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="637.9" y="302.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (272 samples, 4.98%)</title><rect x="634.9" y="275.0" width="58.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.9" y="286.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.05%)</title><rect x="635.4" y="259.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (265 samples, 4.86%)</title><rect x="636.0" y="259.0" width="57.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="639.0" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (3 samples, 0.05%)</title><rect x="636.9" y="243.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="639.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (248 samples, 4.54%)</title><rect x="637.5" y="243.0" width="53.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="640.5" y="254.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (244 samples, 4.47%)</title><rect x="637.5" y="227.0" width="52.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="640.5" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (233 samples, 4.27%)</title><rect x="638.2" y="211.0" width="50.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="641.2" y="222.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (230 samples, 4.21%)</title><rect x="638.4" y="195.0" width="49.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="641.4" y="206.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (226 samples, 4.14%)</title><rect x="639.2" y="179.0" width="48.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="642.2" y="190.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.07%)</title><rect x="640.1" y="163.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="643.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (214 samples, 3.92%)</title><rect x="641.8" y="163.0" width="46.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="644.8" y="174.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (211 samples, 3.87%)</title><rect x="642.3" y="147.0" width="45.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.3" y="158.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.11%)</title><rect x="642.9" y="131.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.07%)</title><rect x="643.4" y="115.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.4" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="643.4" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="646.4" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="643.8" y="99.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="646.8" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="643.8" y="83.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="646.8" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="643.8" y="67.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="646.8" y="78.0"></text>
</g>
<g>
<title>tcp_ack (46 samples, 0.84%)</title><rect x="644.9" y="131.0" width="9.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="647.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (24 samples, 0.44%)</title><rect x="648.5" y="115.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="651.5" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.27%)</title><rect x="649.2" y="99.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.2" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.09%)</title><rect x="649.2" y="83.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="652.2" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.09%)</title><rect x="649.2" y="67.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="649.8" y="51.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="652.8" y="62.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.18%)</title><rect x="650.3" y="83.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="653.3" y="94.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.15%)</title><rect x="650.5" y="67.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="653.5" y="78.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.09%)</title><rect x="651.1" y="51.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.1" y="62.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.09%)</title><rect x="651.1" y="35.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="654.1" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (3 samples, 0.05%)</title><rect x="653.1" y="99.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.1" y="110.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.04%)</title><rect x="654.0" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="657.0" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.04%)</title><rect x="654.4" y="115.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.4" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="654.8" y="131.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="657.8" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (143 samples, 2.62%)</title><rect x="655.2" y="131.0" width="31.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="658.2" y="142.0">tc..</text>
</g>
<g>
<title>sock_def_readable (136 samples, 2.49%)</title><rect x="656.1" y="115.0" width="29.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.1" y="126.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (134 samples, 2.46%)</title><rect x="656.5" y="99.0" width="29.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.5" y="110.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (134 samples, 2.46%)</title><rect x="656.5" y="83.0" width="29.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="659.5" y="94.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (134 samples, 2.46%)</title><rect x="656.5" y="67.0" width="29.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="659.5" y="78.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.05%)</title><rect x="685.5" y="115.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="688.5" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="686.4" y="131.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="689.4" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.11%)</title><rect x="689.0" y="211.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="692.0" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.04%)</title><rect x="689.4" y="195.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="692.4" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.04%)</title><rect x="689.4" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.4" y="190.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="689.8" y="195.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="692.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (3 samples, 0.05%)</title><rect x="690.5" y="227.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="693.5" y="238.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.05%)</title><rect x="691.1" y="243.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.1" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.11%)</title><rect x="692.0" y="243.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="695.0" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (27 samples, 0.49%)</title><rect x="694.2" y="387.0" width="5.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="697.2" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (26 samples, 0.48%)</title><rect x="694.2" y="371.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.20%)</title><rect x="695.7" y="355.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="698.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.13%)</title><rect x="696.5" y="339.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.5" y="350.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.05%)</title><rect x="697.2" y="323.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="700.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.05%)</title><rect x="697.2" y="307.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="700.2" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.05%)</title><rect x="697.2" y="291.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="700.2" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.15%)</title><rect x="698.1" y="355.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.1" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.09%)</title><rect x="700.7" y="419.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="700.9" y="403.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="703.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="700.9" y="387.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="703.9" y="398.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="700.9" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="703.9" y="382.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.04%)</title><rect x="701.3" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.3" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.07%)</title><rect x="702.0" y="451.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.0" y="462.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.11%)</title><rect x="703.0" y="483.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="706.0" y="494.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.09%)</title><rect x="703.3" y="467.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="706.3" y="478.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.04%)</title><rect x="704.8" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="707.8" y="510.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.05%)</title><rect x="705.4" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="708.4" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.11%)</title><rect x="706.3" y="499.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.3" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.07%)</title><rect x="706.7" y="483.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="709.7" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="706.9" y="467.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="709.9" y="478.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="706.9" y="451.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="709.9" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="707.1" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="710.1" y="446.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.04%)</title><rect x="707.8" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="710.8" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.04%)</title><rect x="708.4" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="711.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="708.4" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="711.4" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.16%)</title><rect x="709.3" y="595.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="712.3" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.13%)</title><rect x="709.7" y="579.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="712.7" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.05%)</title><rect x="709.7" y="563.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.7" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.07%)</title><rect x="710.4" y="563.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.4" y="574.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="710.4" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.4" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="710.8" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="713.8" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.09%)</title><rect x="712.1" y="707.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.05%)</title><rect x="713.4" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (9 samples, 0.16%)</title><rect x="714.3" y="755.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.3" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.13%)</title><rect x="714.7" y="739.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="714.7" y="723.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="714.7" y="707.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="717.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="714.7" y="691.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.05%)</title><rect x="714.9" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.05%)</title><rect x="714.9" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="715.6" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (9 samples, 0.16%)</title><rect x="716.4" y="755.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (9 samples, 0.16%)</title><rect x="716.4" y="739.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (5 samples, 0.09%)</title><rect x="716.9" y="723.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.9" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="717.1" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.get (646 samples, 11.84%)</title><rect x="718.4" y="755.0" width="139.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.4" y="766.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="718.4" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="718.4" y="723.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="718.6" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="718.6" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.6" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="718.6" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="718.6" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="718.6" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.6" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="718.6" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.6" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (623 samples, 11.42%)</title><rect x="719.0" y="739.0" width="134.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.0" y="750.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (623 samples, 11.42%)</title><rect x="719.0" y="723.0" width="134.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.0" y="734.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (580 samples, 10.63%)</title><rect x="719.5" y="707.0" width="125.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="722.5" y="718.0">Java_org_rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (5 samples, 0.09%)</title><rect x="720.3" y="691.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="723.3" y="702.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.05%)</title><rect x="721.4" y="691.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="724.4" y="702.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.13%)</title><rect x="722.1" y="691.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="725.1" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="723.6" y="691.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="726.6" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.07%)</title><rect x="724.0" y="691.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="727.0" y="702.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.04%)</title><rect x="724.9" y="691.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="727.9" y="702.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.04%)</title><rect x="725.5" y="691.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="728.5" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (5 samples, 0.09%)</title><rect x="726.2" y="691.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="729.2" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (4 samples, 0.07%)</title><rect x="727.5" y="691.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="730.5" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="728.3" y="691.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="731.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="729.0" y="691.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="732.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.04%)</title><rect x="729.4" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="732.4" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (521 samples, 9.55%)</title><rect x="729.8" y="691.0" width="112.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="732.8" y="702.0">rocksdb_get_he..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="731.8" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="734.8" y="686.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.05%)</title><rect x="732.4" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="735.4" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="733.1" y="675.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="736.1" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.11%)</title><rect x="733.7" y="675.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="736.7" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.07%)</title><rect x="735.0" y="675.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="738.0" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="735.5" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="738.5" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.20%)</title><rect x="735.9" y="675.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="738.9" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="736.8" y="659.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="739.8" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.07%)</title><rect x="737.4" y="659.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="740.4" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="737.9" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="740.9" y="654.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.04%)</title><rect x="738.3" y="675.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="741.3" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="738.7" y="675.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="741.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.05%)</title><rect x="739.8" y="675.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (420 samples, 7.70%)</title><rect x="740.4" y="675.0" width="90.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="743.4" y="686.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (5 samples, 0.09%)</title><rect x="741.1" y="659.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="744.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (410 samples, 7.51%)</title><rect x="742.4" y="659.0" width="88.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="745.4" y="670.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (403 samples, 7.39%)</title><rect x="743.9" y="643.0" width="87.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="746.9" y="654.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (400 samples, 7.33%)</title><rect x="744.1" y="627.0" width="86.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="747.1" y="638.0">rocksdb::D..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="744.1" y="611.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="747.1" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="745.0" y="611.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="748.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (4 samples, 0.07%)</title><rect x="745.6" y="611.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="748.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.04%)</title><rect x="746.5" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="749.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (368 samples, 6.74%)</title><rect x="746.9" y="611.0" width="79.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="749.9" y="622.0">rocksdb::..</text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.13%)</title><rect x="749.7" y="595.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="752.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.05%)</title><rect x="751.3" y="595.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="754.3" y="606.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (3 samples, 0.05%)</title><rect x="751.9" y="595.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="754.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (11 samples, 0.20%)</title><rect x="752.6" y="595.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="755.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.04%)</title><rect x="754.1" y="579.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="757.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.04%)</title><rect x="754.5" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="757.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.04%)</title><rect x="754.5" y="563.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="757.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.05%)</title><rect x="754.9" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="757.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (14 samples, 0.26%)</title><rect x="755.8" y="595.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="758.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (8 samples, 0.15%)</title><rect x="755.8" y="579.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="758.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (3 samples, 0.05%)</title><rect x="756.2" y="563.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="759.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.04%)</title><rect x="756.4" y="547.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="759.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (3 samples, 0.05%)</title><rect x="756.9" y="563.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="759.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.04%)</title><rect x="757.1" y="547.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="760.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (4 samples, 0.07%)</title><rect x="757.5" y="579.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="760.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.07%)</title><rect x="758.8" y="595.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="761.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.04%)</title><rect x="759.9" y="595.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="762.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (293 samples, 5.37%)</title><rect x="760.3" y="595.0" width="63.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="763.3" y="606.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (288 samples, 5.28%)</title><rect x="761.0" y="579.0" width="62.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="764.0" y="590.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (279 samples, 5.11%)</title><rect x="762.1" y="563.0" width="60.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="765.1" y="574.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (19 samples, 0.35%)</title><rect x="763.4" y="547.0" width="4.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="766.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (2 samples, 0.04%)</title><rect x="766.4" y="531.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="769.4" y="542.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect x="766.8" y="531.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="769.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (236 samples, 4.32%)</title><rect x="767.5" y="547.0" width="51.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="770.5" y="558.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (5 samples, 0.09%)</title><rect x="792.3" y="531.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="795.3" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="793.4" y="531.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="796.4" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (3 samples, 0.05%)</title><rect x="794.1" y="531.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="797.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (14 samples, 0.26%)</title><rect x="794.7" y="531.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="797.7" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.05%)</title><rect x="797.7" y="531.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="800.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (93 samples, 1.70%)</title><rect x="798.4" y="531.0" width="20.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="801.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12225827147504806682.so (15 samples, 0.27%)</title><rect x="805.7" y="515.0" width="3.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="808.7" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="809.0" y="515.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="812.0" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (33 samples, 0.60%)</title><rect x="809.4" y="515.0" width="7.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="812.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.11%)</title><rect x="816.6" y="515.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="819.6" y="526.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.04%)</title><rect x="818.1" y="515.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="821.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.09%)</title><rect x="818.5" y="547.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="821.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) [clone .plt] (2 samples, 0.04%)</title><rect x="819.8" y="547.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="822.8" y="558.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="820.2" y="547.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="823.2" y="558.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (8 samples, 0.15%)</title><rect x="820.7" y="547.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="823.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.07%)</title><rect x="822.4" y="563.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="825.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.04%)</title><rect x="823.3" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="826.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (3 samples, 0.05%)</title><rect x="823.9" y="595.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="826.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.05%)</title><rect x="824.6" y="595.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="827.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (4 samples, 0.07%)</title><rect x="825.6" y="595.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="828.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.07%)</title><rect x="826.5" y="611.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="829.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (6 samples, 0.11%)</title><rect x="827.8" y="611.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="830.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (4 samples, 0.07%)</title><rect x="829.1" y="611.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="832.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (2 samples, 0.04%)</title><rect x="830.6" y="627.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="833.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.04%)</title><rect x="831.3" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="834.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (49 samples, 0.90%)</title><rect x="831.7" y="675.0" width="10.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="834.7" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="832.1" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="835.1" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (34 samples, 0.62%)</title><rect x="833.2" y="659.0" width="7.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="836.2" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="833.9" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="836.9" y="654.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.04%)</title><rect x="834.3" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="837.3" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="834.9" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="837.9" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (24 samples, 0.44%)</title><rect x="835.4" y="643.0" width="5.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="838.4" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (18 samples, 0.33%)</title><rect x="836.7" y="627.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="839.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (15 samples, 0.27%)</title><rect x="836.7" y="611.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="839.7" y="622.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (3 samples, 0.05%)</title><rect x="837.5" y="595.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="840.5" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="838.2" y="595.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="841.2" y="606.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (5 samples, 0.09%)</title><rect x="838.8" y="595.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="841.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="839.9" y="611.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="842.9" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.15%)</title><rect x="840.6" y="659.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="843.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="841.4" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="844.4" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="841.9" y="643.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="844.9" y="654.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (8 samples, 0.15%)</title><rect x="842.5" y="691.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="845.5" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (3 samples, 0.05%)</title><rect x="844.2" y="691.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="847.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.27%)</title><rect x="844.9" y="707.0" width="3.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="847.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.27%)</title><rect x="844.9" y="691.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="847.9" y="702.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (7 samples, 0.13%)</title><rect x="844.9" y="675.0" width="1.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="847.9" y="686.0"></text>
</g>
<g>
<title>memcpy@plt (4 samples, 0.07%)</title><rect x="846.4" y="675.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="849.4" y="686.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (4 samples, 0.07%)</title><rect x="847.3" y="675.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="850.3" y="686.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.04%)</title><rect x="848.1" y="707.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="851.1" y="718.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.05%)</title><rect x="848.6" y="707.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="851.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (8 samples, 0.15%)</title><rect x="849.4" y="707.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="852.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (2 samples, 0.04%)</title><rect x="851.2" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="854.2" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.04%)</title><rect x="851.6" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="854.6" y="718.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (3 samples, 0.05%)</title><rect x="852.2" y="707.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="855.2" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.05%)</title><rect x="852.9" y="707.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="855.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (20 samples, 0.37%)</title><rect x="853.8" y="739.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.8" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.04%)</title><rect x="854.4" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (14 samples, 0.26%)</title><rect x="854.8" y="723.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.26%)</title><rect x="854.8" y="707.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.8" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.09%)</title><rect x="855.1" y="691.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.1" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.05%)</title><rect x="855.1" y="675.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="858.1" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="855.7" y="675.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="858.7" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="856.3" y="691.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.04%)</title><rect x="856.3" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="856.8" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.8" y="686.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,524 samples, 27.93%)</title><rect x="858.1" y="883.0" width="329.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.1" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="860.0" y="867.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="863.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.11%)</title><rect x="860.9" y="867.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.11%)</title><rect x="860.9" y="851.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (552 samples, 10.12%)</title><rect x="862.2" y="867.0" width="119.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.2" y="878.0">one/nio/net/Nat..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (12 samples, 0.22%)</title><rect x="864.1" y="851.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.15%)</title><rect x="864.8" y="835.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (531 samples, 9.73%)</title><rect x="866.7" y="851.0" width="114.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.7" y="862.0">one/nio/net/Na..</text>
</g>
<g>
<title>JVM_IHashCode (150 samples, 2.75%)</title><rect x="870.8" y="835.0" width="32.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="873.8" y="846.0">JV..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="870.8" y="819.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="873.8" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="871.3" y="819.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="874.3" y="830.0"></text>
</g>
<g>
<title>epoll_wait (145 samples, 2.66%)</title><rect x="871.9" y="819.0" width="31.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="874.9" y="830.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (134 samples, 2.46%)</title><rect x="874.1" y="803.0" width="29.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="877.1" y="814.0">en..</text>
</g>
<g>
<title>do_syscall_64 (133 samples, 2.44%)</title><rect x="874.3" y="787.0" width="28.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="877.3" y="798.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (121 samples, 2.22%)</title><rect x="876.9" y="771.0" width="26.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="879.9" y="782.0">_..</text>
</g>
<g>
<title>do_epoll_wait (121 samples, 2.22%)</title><rect x="876.9" y="755.0" width="26.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.9" y="766.0">d..</text>
</g>
<g>
<title>__fdget (7 samples, 0.13%)</title><rect x="877.3" y="739.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="880.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.13%)</title><rect x="877.3" y="723.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="880.3" y="734.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.09%)</title><rect x="877.8" y="707.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.8" y="718.0"></text>
</g>
<g>
<title>ep_poll (109 samples, 2.00%)</title><rect x="879.1" y="739.0" width="23.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="882.1" y="750.0">e..</text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.04%)</title><rect x="882.3" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="885.3" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (81 samples, 1.48%)</title><rect x="882.7" y="723.0" width="17.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="885.7" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (55 samples, 1.01%)</title><rect x="887.5" y="707.0" width="11.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="890.5" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (40 samples, 0.73%)</title><rect x="890.1" y="691.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="893.1" y="702.0"></text>
</g>
<g>
<title>sock_poll (34 samples, 0.62%)</title><rect x="890.5" y="675.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="893.5" y="686.0"></text>
</g>
<g>
<title>tcp_poll (19 samples, 0.35%)</title><rect x="892.2" y="659.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="895.2" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (7 samples, 0.13%)</title><rect x="896.4" y="659.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="899.4" y="670.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.07%)</title><rect x="897.9" y="675.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="900.9" y="686.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.05%)</title><rect x="898.7" y="691.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.7" y="702.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.07%)</title><rect x="899.4" y="707.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="902.4" y="718.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.04%)</title><rect x="900.5" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="903.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.13%)</title><rect x="901.1" y="723.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="904.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.13%)</title><rect x="901.1" y="707.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="904.1" y="718.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.07%)</title><rect x="901.8" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="904.8" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="901.8" y="675.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="904.8" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="902.2" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="905.2" y="670.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (2 samples, 0.04%)</title><rect x="902.6" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="905.6" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (9 samples, 0.16%)</title><rect x="903.3" y="835.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="906.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (329 samples, 6.03%)</title><rect x="905.2" y="835.0" width="71.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="908.2" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (13 samples, 0.24%)</title><rect x="905.2" y="819.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="908.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.24%)</title><rect x="905.2" y="803.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="908.2" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="905.4" y="787.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="908.4" y="798.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.15%)</title><rect x="906.3" y="787.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="909.3" y="798.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="907.4" y="771.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="910.4" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="908.0" y="819.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="911.0" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="908.5" y="819.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="911.5" y="830.0"></text>
</g>
<g>
<title>epoll_wait (312 samples, 5.72%)</title><rect x="908.9" y="819.0" width="67.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="911.9" y="830.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (301 samples, 5.52%)</title><rect x="911.3" y="803.0" width="65.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="914.3" y="814.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (301 samples, 5.52%)</title><rect x="911.3" y="787.0" width="65.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.3" y="798.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (232 samples, 4.25%)</title><rect x="926.0" y="771.0" width="50.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.0" y="782.0">__x64..</text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="926.0" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="929.0" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (230 samples, 4.21%)</title><rect x="926.4" y="755.0" width="49.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="929.4" y="766.0">do_ep..</text>
</g>
<g>
<title>__fdget (16 samples, 0.29%)</title><rect x="927.1" y="739.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="930.1" y="750.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.27%)</title><rect x="927.3" y="723.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="930.3" y="734.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.18%)</title><rect x="928.4" y="707.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.4" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="930.5" y="739.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="933.5" y="750.0"></text>
</g>
<g>
<title>ep_poll (205 samples, 3.76%)</title><rect x="930.9" y="739.0" width="44.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="933.9" y="750.0">ep_p..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (172 samples, 3.15%)</title><rect x="935.1" y="723.0" width="37.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="938.1" y="734.0">ep_..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.07%)</title><rect x="939.4" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="942.4" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (115 samples, 2.11%)</title><rect x="940.5" y="707.0" width="24.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="943.5" y="718.0">e..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (92 samples, 1.69%)</title><rect x="944.1" y="691.0" width="19.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="947.1" y="702.0"></text>
</g>
<g>
<title>sock_poll (66 samples, 1.21%)</title><rect x="947.4" y="675.0" width="14.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="950.4" y="686.0"></text>
</g>
<g>
<title>tcp_poll (30 samples, 0.55%)</title><rect x="953.4" y="659.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="956.4" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (8 samples, 0.15%)</title><rect x="959.9" y="659.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.9" y="670.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.20%)</title><rect x="961.7" y="675.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="964.7" y="686.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.11%)</title><rect x="964.0" y="691.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="967.0" y="702.0"></text>
</g>
<g>
<title>mutex_lock (31 samples, 0.57%)</title><rect x="965.3" y="707.0" width="6.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="968.3" y="718.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="971.2" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="974.2" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="971.2" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="974.2" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="971.6" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="974.6" y="702.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.07%)</title><rect x="972.5" y="723.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="975.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.13%)</title><rect x="973.5" y="723.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="976.5" y="734.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="973.8" y="707.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="976.8" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.05%)</title><rect x="974.4" y="707.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="977.4" y="718.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="974.4" y="691.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="977.4" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="974.6" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.6" y="686.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="975.5" y="739.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="978.5" y="750.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.15%)</title><rect x="976.4" y="835.0" width="1.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="979.4" y="846.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.04%)</title><rect x="978.1" y="835.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="981.1" y="846.0"></text>
</g>
<g>
<title>epoll_wait (11 samples, 0.20%)</title><rect x="978.5" y="835.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="981.5" y="846.0"></text>
</g>
<g>
<title>epoll_wait@plt (3 samples, 0.05%)</title><rect x="980.9" y="835.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="983.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (949 samples, 17.39%)</title><rect x="981.5" y="867.0" width="205.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.5" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.07%)</title><rect x="983.9" y="851.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="986.9" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.07%)</title><rect x="983.9" y="835.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="986.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.07%)</title><rect x="983.9" y="819.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="986.9" y="830.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.07%)</title><rect x="983.9" y="803.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="986.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="984.8" y="851.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="987.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="984.8" y="835.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="987.8" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="984.8" y="819.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="987.8" y="830.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="985.4" y="851.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="988.4" y="862.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.04%)</title><rect x="986.3" y="851.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="989.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (921 samples, 16.88%)</title><rect x="986.7" y="851.0" width="199.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.7" y="862.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (562 samples, 10.30%)</title><rect x="987.6" y="835.0" width="121.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.6" y="846.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (447 samples, 8.19%)</title><rect x="993.0" y="819.0" width="96.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.0" y="830.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (5 samples, 0.09%)</title><rect x="994.1" y="803.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.1" y="814.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.16%)</title><rect x="995.2" y="803.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="998.2" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="997.1" y="803.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1000.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (426 samples, 7.81%)</title><rect x="997.5" y="803.0" width="92.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.5" y="814.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (411 samples, 7.53%)</title><rect x="997.5" y="787.0" width="88.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.5" y="798.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.09%)</title><rect x="997.8" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (25 samples, 0.46%)</title><rect x="998.8" y="771.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 0.46%)</title><rect x="998.8" y="755.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="1000.4" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.05%)</title><rect x="1000.4" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="1001.0" y="739.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="1001.0" y="723.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="1001.0" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1004.0" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1002.1" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1005.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.15%)</title><rect x="1002.5" y="739.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.13%)</title><rect x="1002.7" y="723.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.13%)</title><rect x="1002.7" y="707.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.13%)</title><rect x="1002.7" y="691.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.entity (380 samples, 6.96%)</title><rect x="1004.3" y="771.0" width="82.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.3" y="782.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.09%)</title><rect x="1004.9" y="755.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.09%)</title><rect x="1004.9" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.07%)</title><rect x="1005.1" y="723.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.07%)</title><rect x="1005.1" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.1" y="718.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="1005.1" y="691.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1008.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="1006.0" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="1006.0" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.runAsyncHandler (363 samples, 6.65%)</title><rect x="1006.4" y="755.0" width="78.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1009.4" y="766.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.11%)</title><rect x="1006.4" y="739.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="1006.4" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.get$Lambda (6 samples, 0.11%)</title><rect x="1006.4" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.4" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="1006.6" y="691.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1009.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1007.1" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1010.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (357 samples, 6.54%)</title><rect x="1007.7" y="739.0" width="77.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.7" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (356 samples, 6.52%)</title><rect x="1007.9" y="723.0" width="77.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.9" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (31 samples, 0.57%)</title><rect x="1007.9" y="707.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (31 samples, 0.57%)</title><rect x="1007.9" y="691.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (31 samples, 0.57%)</title><rect x="1007.9" y="675.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1010.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (14 samples, 0.26%)</title><rect x="1011.6" y="659.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.04%)</title><rect x="1013.3" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.04%)</title><rect x="1013.3" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="1013.3" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.07%)</title><rect x="1013.8" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.04%)</title><rect x="1014.0" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.04%)</title><rect x="1014.0" y="611.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.04%)</title><rect x="1014.0" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (324 samples, 5.94%)</title><rect x="1014.8" y="707.0" width="70.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.8" y="718.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (324 samples, 5.94%)</title><rect x="1014.8" y="691.0" width="70.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.8" y="702.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (324 samples, 5.94%)</title><rect x="1014.8" y="675.0" width="70.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.8" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (322 samples, 5.90%)</title><rect x="1015.3" y="659.0" width="69.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.3" y="670.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (322 samples, 5.90%)</title><rect x="1015.3" y="643.0" width="69.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.3" y="654.0">jdk/int..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.04%)</title><rect x="1015.5" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1018.5" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="1016.1" y="627.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1019.1" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.04%)</title><rect x="1016.6" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1019.6" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (56 samples, 1.03%)</title><rect x="1017.0" y="627.0" width="12.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1020.0" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="1018.7" y="611.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1021.7" y="622.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.04%)</title><rect x="1019.4" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1022.4" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.09%)</title><rect x="1019.8" y="611.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1022.8" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="1020.9" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1023.9" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.16%)</title><rect x="1021.3" y="611.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1024.3" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.05%)</title><rect x="1023.3" y="611.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1026.3" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.05%)</title><rect x="1023.9" y="611.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1026.9" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (15 samples, 0.27%)</title><rect x="1024.8" y="611.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1027.8" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="1028.3" y="611.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1031.3" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (244 samples, 4.47%)</title><rect x="1029.1" y="627.0" width="52.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1032.1" y="638.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (219 samples, 4.01%)</title><rect x="1034.5" y="611.0" width="47.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1037.5" y="622.0">entr..</text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.09%)</title><rect x="1034.5" y="595.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.5" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (214 samples, 3.92%)</title><rect x="1035.6" y="595.0" width="46.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.6" y="606.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (156 samples, 2.86%)</title><rect x="1047.9" y="579.0" width="33.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1050.9" y="590.0">__..</text>
</g>
<g>
<title>do_futex (154 samples, 2.82%)</title><rect x="1048.1" y="563.0" width="33.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1051.1" y="574.0">do..</text>
</g>
<g>
<title>futex_wake (143 samples, 2.62%)</title><rect x="1049.0" y="547.0" width="30.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1052.0" y="558.0">fu..</text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.09%)</title><rect x="1050.3" y="531.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1053.3" y="542.0"></text>
</g>
<g>
<title>wake_q_add (3 samples, 0.05%)</title><rect x="1050.7" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1053.7" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="1051.4" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1054.4" y="542.0"></text>
</g>
<g>
<title>wake_up_q (130 samples, 2.38%)</title><rect x="1051.8" y="531.0" width="28.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1054.8" y="542.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (128 samples, 2.35%)</title><rect x="1052.3" y="515.0" width="27.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1055.3" y="526.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (127 samples, 2.33%)</title><rect x="1052.5" y="499.0" width="27.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1055.5" y="510.0">_..</text>
</g>
<g>
<title>hash_futex (6 samples, 0.11%)</title><rect x="1079.9" y="547.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1082.9" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.11%)</title><rect x="1081.9" y="627.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1084.9" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.05%)</title><rect x="1083.2" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1086.2" y="638.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.07%)</title><rect x="1083.8" y="627.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1086.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (7 samples, 0.13%)</title><rect x="1084.9" y="755.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.07%)</title><rect x="1085.1" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1088.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="1085.3" y="723.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.3" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1085.6" y="707.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1088.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="1086.0" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1089.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (3 samples, 0.05%)</title><rect x="1086.4" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (10 samples, 0.18%)</title><rect x="1087.1" y="787.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1090.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.18%)</title><rect x="1087.1" y="771.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.07%)</title><rect x="1087.1" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="1087.5" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1090.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.11%)</title><rect x="1087.9" y="755.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.09%)</title><rect x="1088.2" y="739.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1091.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="1088.8" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1091.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="1089.2" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="1089.2" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="1089.2" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (63 samples, 1.15%)</title><rect x="1089.7" y="819.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.7" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="1091.0" y="803.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1094.0" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="1091.0" y="787.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.0" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="1091.0" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1094.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1091.6" y="803.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1092.0" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1092.0" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1092.0" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.70%)</title><rect x="1092.5" y="803.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 0.68%)</title><rect x="1092.7" y="787.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.7" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="1099.4" y="771.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1102.4" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1099.4" y="755.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1102.4" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1099.4" y="739.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1102.4" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="1099.4" y="723.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1102.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="1099.4" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1102.4" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.04%)</title><rect x="1099.4" y="691.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1102.4" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.04%)</title><rect x="1099.4" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1102.4" y="686.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (2 samples, 0.04%)</title><rect x="1099.4" y="659.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1102.4" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (2 samples, 0.04%)</title><rect x="1099.4" y="643.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1102.4" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="1100.0" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1103.0" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="1100.0" y="755.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1103.0" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="1100.0" y="739.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.0" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="1100.0" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="1100.0" y="707.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1103.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (12 samples, 0.22%)</title><rect x="1100.7" y="803.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="1102.6" y="787.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1105.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.22%)</title><rect x="1103.5" y="819.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.26%)</title><rect x="1106.1" y="819.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1109.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.24%)</title><rect x="1106.3" y="803.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (355 samples, 6.51%)</title><rect x="1109.1" y="835.0" width="76.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.1" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (351 samples, 6.43%)</title><rect x="1109.8" y="819.0" width="75.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.8" y="830.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (69 samples, 1.26%)</title><rect x="1112.8" y="803.0" width="14.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1115.8" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.07%)</title><rect x="1116.3" y="787.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1119.3" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="1117.3" y="787.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1120.3" y="798.0"></text>
</g>
<g>
<title>__memmove_ssse3 (15 samples, 0.27%)</title><rect x="1117.8" y="787.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1120.8" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (28 samples, 0.51%)</title><rect x="1121.0" y="787.0" width="6.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1124.0" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.05%)</title><rect x="1123.0" y="771.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1126.0" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="1123.8" y="771.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1126.8" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.09%)</title><rect x="1124.5" y="771.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1127.5" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.13%)</title><rect x="1125.6" y="771.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1128.6" y="782.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (6 samples, 0.11%)</title><rect x="1125.8" y="755.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1128.8" y="766.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.04%)</title><rect x="1127.1" y="787.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1130.1" y="798.0"></text>
</g>
<g>
<title>__GI___recv (251 samples, 4.60%)</title><rect x="1127.7" y="803.0" width="54.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1130.7" y="814.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (235 samples, 4.31%)</title><rect x="1131.2" y="787.0" width="50.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1134.2" y="798.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (234 samples, 4.29%)</title><rect x="1131.4" y="771.0" width="50.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1134.4" y="782.0">do_sy..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.04%)</title><rect x="1143.5" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1146.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (176 samples, 3.23%)</title><rect x="1143.9" y="755.0" width="38.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1146.9" y="766.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (171 samples, 3.13%)</title><rect x="1143.9" y="739.0" width="37.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1146.9" y="750.0">__s..</text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="1146.1" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.1" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.04%)</title><rect x="1146.5" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.5" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (139 samples, 2.55%)</title><rect x="1147.2" y="723.0" width="30.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.2" y="734.0">so..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="1147.4" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1150.4" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (112 samples, 2.05%)</title><rect x="1147.8" y="707.0" width="24.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1150.8" y="718.0">i..</text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="1148.5" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1151.5" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="1149.1" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1152.1" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (104 samples, 1.91%)</title><rect x="1149.6" y="691.0" width="22.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1152.6" y="702.0">t..</text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.16%)</title><rect x="1153.9" y="675.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.9" y="686.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.07%)</title><rect x="1154.3" y="659.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1157.3" y="670.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="1154.3" y="643.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.3" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="1155.4" y="659.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.4" y="670.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.05%)</title><rect x="1156.3" y="675.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1159.3" y="686.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1157.3" y="675.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1160.3" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="1158.0" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1161.0" y="686.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.15%)</title><rect x="1158.6" y="675.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1161.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="1158.9" y="659.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1161.9" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="1159.7" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.7" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="1159.7" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1162.7" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (33 samples, 0.60%)</title><rect x="1160.4" y="675.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.4" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (32 samples, 0.59%)</title><rect x="1160.4" y="659.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.4" y="670.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.09%)</title><rect x="1161.0" y="643.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1164.0" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (24 samples, 0.44%)</title><rect x="1162.1" y="643.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.1" y="654.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.20%)</title><rect x="1162.3" y="627.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.3" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.11%)</title><rect x="1163.4" y="611.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.4" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.18%)</title><rect x="1164.9" y="627.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1167.9" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.07%)</title><rect x="1165.3" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1168.3" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="1166.2" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1169.2" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (9 samples, 0.16%)</title><rect x="1167.5" y="675.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1170.5" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.16%)</title><rect x="1169.7" y="675.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1172.7" y="686.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.07%)</title><rect x="1169.9" y="659.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1172.9" y="670.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.07%)</title><rect x="1170.8" y="659.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1173.8" y="670.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="1170.8" y="643.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.8" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="1171.6" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.6" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (24 samples, 0.44%)</title><rect x="1172.1" y="707.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1175.1" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (22 samples, 0.40%)</title><rect x="1172.5" y="691.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1175.5" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (21 samples, 0.38%)</title><rect x="1172.7" y="675.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1175.7" y="686.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.05%)</title><rect x="1172.7" y="659.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1175.7" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (18 samples, 0.33%)</title><rect x="1173.3" y="659.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1176.3" y="670.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="1176.8" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1179.8" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.31%)</title><rect x="1177.2" y="723.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.2" y="734.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.29%)</title><rect x="1177.2" y="707.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1180.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.29%)</title><rect x="1177.2" y="691.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.2" y="702.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.24%)</title><rect x="1177.9" y="675.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1180.9" y="686.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.05%)</title><rect x="1181.1" y="739.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1184.1" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.11%)</title><rect x="1182.0" y="803.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1185.0" y="814.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="1183.3" y="803.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1186.3" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.11%)</title><rect x="1183.9" y="803.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1186.9" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.07%)</title><rect x="1185.9" y="851.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.9" y="862.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="1185.9" y="835.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1188.9" y="846.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="1185.9" y="819.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1188.9" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.07%)</title><rect x="1186.8" y="867.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.8" y="878.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.20%)</title><rect x="1187.6" y="883.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1190.6" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.20%)</title><rect x="1187.6" y="867.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1190.6" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.20%)</title><rect x="1187.6" y="851.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.13%)</title><rect x="1187.6" y="835.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.13%)</title><rect x="1187.6" y="819.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.6" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.05%)</title><rect x="1187.6" y="803.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.6" y="814.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.05%)</title><rect x="1187.6" y="787.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1190.6" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.05%)</title><rect x="1188.5" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1188.7" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.05%)</title><rect x="1189.1" y="835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.1" y="846.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.05%)</title><rect x="1189.1" y="819.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title><rect x="1189.4" y="803.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="814.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1189.4" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1189.4" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="782.0"></text>
</g>
</g>
</svg>
