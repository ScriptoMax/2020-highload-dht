<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Replication control | CPU</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (6,787 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.07%)</title><rect x="10.0" y="931.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.06%)</title><rect x="10.0" y="915.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.03%)</title><rect x="10.2" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.2" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="10.2" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="10.2" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.2" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,760 samples, 99.60%)</title><rect x="11.2" y="931.0" width="1175.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.2" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (314 samples, 4.63%)</title><rect x="12.6" y="915.0" width="54.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.6" y="926.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (301 samples, 4.43%)</title><rect x="14.9" y="899.0" width="52.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.9" y="910.0">one/n..</text>
</g>
<g>
<title>JVM_IHashCode (132 samples, 1.94%)</title><rect x="16.1" y="883.0" width="22.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="19.1" y="894.0">J..</text>
</g>
<g>
<title>epoll_wait (131 samples, 1.93%)</title><rect x="16.3" y="867.0" width="22.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="19.3" y="878.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (125 samples, 1.84%)</title><rect x="17.3" y="851.0" width="21.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="20.3" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (124 samples, 1.83%)</title><rect x="17.5" y="835.0" width="21.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="20.5" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (105 samples, 1.55%)</title><rect x="20.8" y="819.0" width="18.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.8" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (105 samples, 1.55%)</title><rect x="20.8" y="803.0" width="18.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.8" y="814.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.12%)</title><rect x="20.8" y="787.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.8" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="20.8" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.8" y="782.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="21.1" y="771.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="24.1" y="782.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="21.8" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.8" y="766.0"></text>
</g>
<g>
<title>ep_poll (96 samples, 1.41%)</title><rect x="22.2" y="787.0" width="16.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="25.2" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (81 samples, 1.19%)</title><rect x="24.1" y="771.0" width="14.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="27.1" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (49 samples, 0.72%)</title><rect x="27.7" y="755.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="30.7" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (42 samples, 0.62%)</title><rect x="28.8" y="739.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (35 samples, 0.52%)</title><rect x="29.6" y="723.0" width="6.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.6" y="734.0"></text>
</g>
<g>
<title>tcp_poll (26 samples, 0.38%)</title><rect x="31.0" y="707.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.0" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="35.7" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="38.7" y="734.0"></text>
</g>
<g>
<title>mutex_lock (11 samples, 0.16%)</title><rect x="36.3" y="755.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="39.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.06%)</title><rect x="38.2" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="41.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.06%)</title><rect x="38.2" y="755.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="41.2" y="766.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="38.3" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="41.3" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="38.3" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="41.3" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="38.3" y="707.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="41.3" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.04%)</title><rect x="39.0" y="883.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="42.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (143 samples, 2.11%)</title><rect x="39.6" y="883.0" width="24.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="42.6" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.12%)</title><rect x="39.6" y="867.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="42.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.12%)</title><rect x="39.6" y="851.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="42.6" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="39.6" y="835.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="42.6" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="39.9" y="835.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="42.9" y="846.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="40.4" y="835.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="43.4" y="846.0"></text>
</g>
<g>
<title>epoll_wait (133 samples, 1.96%)</title><rect x="41.3" y="867.0" width="23.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="44.3" y="878.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (128 samples, 1.89%)</title><rect x="42.2" y="851.0" width="22.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="45.2" y="862.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.04%)</title><rect x="42.2" y="835.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="45.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (125 samples, 1.84%)</title><rect x="42.7" y="835.0" width="21.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="45.7" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (99 samples, 1.46%)</title><rect x="47.2" y="819.0" width="17.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="50.2" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (99 samples, 1.46%)</title><rect x="47.2" y="803.0" width="17.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.2" y="814.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="47.9" y="787.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="50.9" y="798.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.07%)</title><rect x="47.9" y="771.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.9" y="782.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="47.9" y="755.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.9" y="766.0"></text>
</g>
<g>
<title>ep_poll (89 samples, 1.31%)</title><rect x="48.8" y="787.0" width="15.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="51.8" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (72 samples, 1.06%)</title><rect x="50.3" y="771.0" width="12.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="53.3" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (48 samples, 0.71%)</title><rect x="53.1" y="755.0" width="8.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="56.1" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (39 samples, 0.57%)</title><rect x="54.7" y="739.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="57.7" y="750.0"></text>
</g>
<g>
<title>sock_poll (36 samples, 0.53%)</title><rect x="55.2" y="723.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="58.2" y="734.0"></text>
</g>
<g>
<title>tcp_poll (22 samples, 0.32%)</title><rect x="56.4" y="707.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="59.4" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="59.9" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.9" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (7 samples, 0.10%)</title><rect x="60.2" y="707.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="63.2" y="718.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.12%)</title><rect x="61.5" y="755.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.07%)</title><rect x="63.2" y="771.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="66.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.07%)</title><rect x="63.2" y="755.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="66.2" y="766.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="63.4" y="739.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="66.4" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="63.5" y="723.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="66.5" y="734.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.09%)</title><rect x="64.4" y="883.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="67.4" y="894.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.12%)</title><rect x="65.5" y="883.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="68.5" y="894.0"></text>
</g>
<g>
<title>epoll_wait@plt (2 samples, 0.03%)</title><rect x="66.9" y="883.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="69.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,438 samples, 94.86%)</title><rect x="67.2" y="915.0" width="1119.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.2" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,432 samples, 94.77%)</title><rect x="68.2" y="899.0" width="1118.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.2" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,097 samples, 89.83%)</title><rect x="68.9" y="883.0" width="1060.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.9" y="894.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.07%)</title><rect x="72.6" y="867.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="75.6" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="73.5" y="867.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="76.5" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="74.0" y="867.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="77.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,919 samples, 87.21%)</title><rect x="74.7" y="867.0" width="1029.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.7" y="878.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,919 samples, 87.21%)</title><rect x="74.7" y="851.0" width="1029.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.7" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,891 samples, 86.80%)</title><rect x="74.7" y="835.0" width="1024.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.7" y="846.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.07%)</title><rect x="75.0" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (45 samples, 0.66%)</title><rect x="75.9" y="819.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (44 samples, 0.65%)</title><rect x="76.1" y="803.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.15%)</title><rect x="77.6" y="787.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.15%)</title><rect x="77.6" y="771.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.12%)</title><rect x="79.4" y="787.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.12%)</title><rect x="79.4" y="771.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="80.4" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.4" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="80.8" y="787.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="83.8" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.09%)</title><rect x="81.1" y="787.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="84.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (9 samples, 0.13%)</title><rect x="82.2" y="787.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.13%)</title><rect x="82.2" y="771.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.13%)</title><rect x="82.2" y="755.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.13%)</title><rect x="82.2" y="739.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (5,839 samples, 86.03%)</title><rect x="83.7" y="819.0" width="1015.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.7" y="830.0">ru/mail/polis/service/codearound/RepliServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.10%)</title><rect x="87.4" y="803.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.10%)</title><rect x="87.4" y="787.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.10%)</title><rect x="87.4" y="771.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.4" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.10%)</title><rect x="87.4" y="755.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.07%)</title><rect x="87.7" y="739.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,704 samples, 25.11%)</title><rect x="88.6" y="803.0" width="296.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.6" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (37 samples, 0.55%)</title><rect x="89.8" y="787.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (37 samples, 0.55%)</title><rect x="89.8" y="771.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (37 samples, 0.55%)</title><rect x="89.8" y="755.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="93.1" y="739.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="96.1" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="93.1" y="723.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="96.1" y="734.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.12%)</title><rect x="93.8" y="739.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="96.8" y="750.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.03%)</title><rect x="95.2" y="739.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="98.2" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="95.5" y="739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="98.5" y="750.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="95.7" y="723.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="98.7" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="95.9" y="707.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="98.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,653 samples, 24.36%)</title><rect x="96.2" y="787.0" width="287.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.2" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="96.8" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (31 samples, 0.46%)</title><rect x="97.3" y="771.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="100.1" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.1" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="100.1" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="103.1" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="100.1" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="103.1" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="100.1" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="103.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="100.1" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="103.1" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 0.19%)</title><rect x="100.4" y="755.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (13 samples, 0.19%)</title><rect x="100.4" y="739.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (13 samples, 0.19%)</title><rect x="100.4" y="723.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.4" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="102.3" y="707.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="105.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,616 samples, 23.81%)</title><rect x="102.7" y="771.0" width="280.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.7" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,616 samples, 23.81%)</title><rect x="102.7" y="755.0" width="280.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.7" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,611 samples, 23.74%)</title><rect x="103.5" y="739.0" width="280.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.5" y="750.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.06%)</title><rect x="104.2" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,603 samples, 23.62%)</title><rect x="104.9" y="723.0" width="278.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.9" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (54 samples, 0.80%)</title><rect x="110.7" y="707.0" width="9.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="113.7" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.07%)</title><rect x="114.1" y="691.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="117.1" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="115.0" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="118.0" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="115.4" y="691.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="118.4" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (8 samples, 0.12%)</title><rect x="115.7" y="691.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="118.7" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.16%)</title><rect x="117.1" y="691.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="120.1" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="117.1" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="120.1" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="117.6" y="675.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="120.6" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.07%)</title><rect x="118.0" y="675.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="121.0" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="118.5" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="121.5" y="670.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.03%)</title><rect x="119.0" y="691.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="122.0" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.04%)</title><rect x="119.5" y="691.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="122.5" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.06%)</title><rect x="120.1" y="707.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="123.1" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="120.7" y="707.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="123.7" y="718.0"></text>
</g>
<g>
<title>__libc_send (1,508 samples, 22.22%)</title><rect x="121.1" y="707.0" width="262.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="124.1" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,493 samples, 22.00%)</title><rect x="123.7" y="691.0" width="259.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="126.7" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.06%)</title><rect x="123.7" y="675.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="126.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1,489 samples, 21.94%)</title><rect x="124.4" y="675.0" width="258.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.4" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.03%)</title><rect x="133.1" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="136.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1,435 samples, 21.14%)</title><rect x="133.4" y="659.0" width="249.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.4" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,430 samples, 21.07%)</title><rect x="133.4" y="643.0" width="248.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="136.4" y="654.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="135.0" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.0" y="638.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="135.5" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.5" y="638.0"></text>
</g>
<g>
<title>inet_sendmsg (3 samples, 0.04%)</title><rect x="135.9" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (1,391 samples, 20.50%)</title><rect x="136.4" y="627.0" width="241.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="139.4" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.07%)</title><rect x="137.4" y="611.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="140.4" y="622.0"></text>
</g>
<g>
<title>inet_sendmsg (1,368 samples, 20.16%)</title><rect x="138.3" y="611.0" width="237.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.3" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,365 samples, 20.11%)</title><rect x="138.7" y="595.0" width="237.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.7" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="138.7" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="141.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.09%)</title><rect x="139.7" y="579.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="142.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="140.7" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.7" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="141.1" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="144.1" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="141.6" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.6" y="590.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="142.3" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="145.3" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (7 samples, 0.10%)</title><rect x="142.8" y="579.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="145.8" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,330 samples, 19.60%)</title><rect x="144.2" y="579.0" width="231.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="147.2" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (9 samples, 0.13%)</title><rect x="147.5" y="563.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="150.5" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.09%)</title><rect x="148.0" y="547.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="151.0" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.04%)</title><rect x="149.1" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="152.1" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="149.6" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="152.6" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (14 samples, 0.21%)</title><rect x="150.1" y="563.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="153.1" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (12 samples, 0.18%)</title><rect x="150.3" y="547.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.3" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (4 samples, 0.06%)</title><rect x="152.7" y="563.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (58 samples, 0.85%)</title><rect x="153.4" y="563.0" width="10.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="156.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (47 samples, 0.69%)</title><rect x="154.3" y="547.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="157.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (25 samples, 0.37%)</title><rect x="155.5" y="531.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="158.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (23 samples, 0.34%)</title><rect x="155.7" y="515.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="158.7" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (9 samples, 0.13%)</title><rect x="157.3" y="499.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="160.3" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.07%)</title><rect x="158.8" y="499.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="161.8" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (15 samples, 0.22%)</title><rect x="159.9" y="531.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.9" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="162.1" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="165.1" y="526.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.07%)</title><rect x="162.7" y="547.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="165.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="163.9" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="166.9" y="574.0"></text>
</g>
<g>
<title>tcp_push (1,187 samples, 17.49%)</title><rect x="164.2" y="563.0" width="206.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="167.2" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,184 samples, 17.45%)</title><rect x="164.6" y="547.0" width="205.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.6" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (5 samples, 0.07%)</title><rect x="165.3" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="168.3" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="166.5" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="169.5" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (3 samples, 0.04%)</title><rect x="166.8" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="169.8" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,168 samples, 17.21%)</title><rect x="167.3" y="531.0" width="203.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="170.3" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,115 samples, 16.43%)</title><rect x="170.1" y="515.0" width="193.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.1" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (8 samples, 0.12%)</title><rect x="174.3" y="499.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="177.3" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="175.7" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.7" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="176.0" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="179.0" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,066 samples, 15.71%)</title><rect x="176.4" y="499.0" width="185.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="179.4" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (1,059 samples, 15.60%)</title><rect x="176.9" y="483.0" width="184.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="179.9" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="179.5" y="467.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.5" y="478.0"></text>
</g>
<g>
<title>ip_local_out (1,032 samples, 15.21%)</title><rect x="180.0" y="467.0" width="179.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="183.0" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (145 samples, 2.14%)</title><rect x="180.6" y="451.0" width="25.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="183.6" y="462.0">_..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.10%)</title><rect x="181.1" y="435.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="184.1" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.07%)</title><rect x="182.3" y="435.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="185.3" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.04%)</title><rect x="183.2" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="186.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (126 samples, 1.86%)</title><rect x="183.7" y="435.0" width="21.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="186.7" y="446.0">n..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.07%)</title><rect x="184.4" y="419.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.4" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (13 samples, 0.19%)</title><rect x="185.3" y="419.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="188.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (12 samples, 0.18%)</title><rect x="185.4" y="403.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="188.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (86 samples, 1.27%)</title><rect x="187.5" y="419.0" width="15.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="190.5" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (4 samples, 0.06%)</title><rect x="187.7" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="190.7" y="414.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.04%)</title><rect x="188.4" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.4" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (74 samples, 1.09%)</title><rect x="188.9" y="403.0" width="12.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.9" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (17 samples, 0.25%)</title><rect x="190.8" y="387.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.8" y="398.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.03%)</title><rect x="193.8" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="196.8" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (5 samples, 0.07%)</title><rect x="194.6" y="387.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.6" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (36 samples, 0.53%)</title><rect x="195.5" y="387.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.5" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="198.6" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="201.6" y="382.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (2 samples, 0.03%)</title><rect x="199.0" y="371.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="202.0" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="199.3" y="371.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="202.3" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="199.3" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.3" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (11 samples, 0.16%)</title><rect x="199.9" y="371.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="202.9" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.06%)</title><rect x="201.1" y="355.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="204.1" y="366.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.04%)</title><rect x="201.9" y="403.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="204.9" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.06%)</title><rect x="202.5" y="419.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="205.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (13 samples, 0.19%)</title><rect x="203.3" y="419.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="206.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (5 samples, 0.07%)</title><rect x="203.7" y="403.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="206.7" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (6 samples, 0.09%)</title><rect x="204.6" y="403.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="207.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.06%)</title><rect x="204.6" y="387.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="207.6" y="398.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.03%)</title><rect x="205.2" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="208.2" y="398.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.06%)</title><rect x="205.8" y="451.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.8" y="462.0"></text>
</g>
<g>
<title>ip_output (876 samples, 12.91%)</title><rect x="206.5" y="451.0" width="152.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="209.5" y="462.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="207.2" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="210.2" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (851 samples, 12.54%)</title><rect x="207.7" y="435.0" width="147.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="210.7" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (11 samples, 0.16%)</title><rect x="208.9" y="419.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="211.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (829 samples, 12.21%)</title><rect x="211.0" y="419.0" width="144.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="214.0" y="430.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (733 samples, 10.80%)</title><rect x="213.9" y="403.0" width="127.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="216.9" y="414.0">__local_bh_enabl..</text>
</g>
<g>
<title>do_softirq.part.21 (731 samples, 10.77%)</title><rect x="214.3" y="387.0" width="127.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="217.3" y="398.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (724 samples, 10.67%)</title><rect x="215.5" y="371.0" width="125.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="218.5" y="382.0">do_softirq_own_..</text>
</g>
<g>
<title>__softirqentry_text_start (723 samples, 10.65%)</title><rect x="215.5" y="355.0" width="125.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="218.5" y="366.0">__softirqentry_..</text>
</g>
<g>
<title>net_rx_action (713 samples, 10.51%)</title><rect x="217.2" y="339.0" width="124.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="220.2" y="350.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (703 samples, 10.36%)</title><rect x="219.0" y="323.0" width="122.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="222.0" y="334.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (692 samples, 10.20%)</title><rect x="220.9" y="307.0" width="120.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="223.9" y="318.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (689 samples, 10.15%)</title><rect x="221.1" y="291.0" width="119.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.1" y="302.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.19%)</title><rect x="222.3" y="275.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="225.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (662 samples, 9.75%)</title><rect x="224.5" y="275.0" width="115.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="227.5" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="225.1" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="228.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (9 samples, 0.13%)</title><rect x="225.4" y="259.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="228.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (627 samples, 9.24%)</title><rect x="227.0" y="259.0" width="109.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="230.0" y="270.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (617 samples, 9.09%)</title><rect x="227.3" y="243.0" width="107.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="230.3" y="254.0">ip_local_deli..</text>
</g>
<g>
<title>ip_local_deliver_finish (592 samples, 8.72%)</title><rect x="228.5" y="227.0" width="103.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.5" y="238.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (590 samples, 8.69%)</title><rect x="228.7" y="211.0" width="102.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="231.7" y="222.0">ip_protocol_..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.04%)</title><rect x="230.1" y="195.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="233.1" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (575 samples, 8.47%)</title><rect x="231.3" y="195.0" width="100.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="234.3" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (20 samples, 0.29%)</title><rect x="232.9" y="179.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.9" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.06%)</title><rect x="235.7" y="163.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="238.7" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (2 samples, 0.03%)</title><rect x="236.4" y="179.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="239.4" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="236.7" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="239.7" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13 samples, 0.19%)</title><rect x="237.4" y="179.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.4" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.10%)</title><rect x="237.6" y="163.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="240.6" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="238.8" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="241.8" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="239.3" y="163.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="242.3" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.03%)</title><rect x="239.8" y="179.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="240.2" y="179.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="243.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (514 samples, 7.57%)</title><rect x="240.5" y="179.0" width="89.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="243.5" y="190.0">tcp_v4_do_..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="241.2" y="163.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="244.2" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="241.8" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="244.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (504 samples, 7.43%)</title><rect x="242.1" y="163.0" width="87.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="245.1" y="174.0">tcp_rcv_es..</text>
</g>
<g>
<title>__tcp_ack_snd_check (25 samples, 0.37%)</title><rect x="244.2" y="147.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="247.2" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="244.7" y="131.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="247.7" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (20 samples, 0.29%)</title><rect x="245.1" y="131.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="248.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="245.2" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="248.2" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.25%)</title><rect x="245.6" y="115.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="248.6" y="126.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.22%)</title><rect x="245.9" y="99.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="248.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.16%)</title><rect x="246.6" y="83.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="249.6" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="248.5" y="147.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="251.5" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="248.9" y="147.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.9" y="158.0"></text>
</g>
<g>
<title>tcp_ack (124 samples, 1.83%)</title><rect x="249.6" y="147.0" width="21.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="252.6" y="158.0">t..</text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="254.4" y="131.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.4" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.06%)</title><rect x="254.8" y="131.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="257.8" y="142.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="255.5" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="258.5" y="142.0"></text>
</g>
<g>
<title>rb_next (3 samples, 0.04%)</title><rect x="255.8" y="131.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="258.8" y="142.0"></text>
</g>
<g>
<title>tcp_chrono_stop (5 samples, 0.07%)</title><rect x="256.5" y="131.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="259.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (72 samples, 1.06%)</title><rect x="257.4" y="131.0" width="12.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="260.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (39 samples, 0.57%)</title><rect x="261.1" y="115.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="264.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.13%)</title><rect x="261.4" y="99.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="264.4" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.09%)</title><rect x="261.9" y="83.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="264.9" y="94.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.06%)</title><rect x="262.3" y="67.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.3" y="78.0"></text>
</g>
<g>
<title>skb_release_all (23 samples, 0.34%)</title><rect x="263.1" y="99.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="266.1" y="110.0"></text>
</g>
<g>
<title>skb_release_data (20 samples, 0.29%)</title><rect x="263.3" y="83.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="266.3" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="265.1" y="67.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="268.1" y="78.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.12%)</title><rect x="265.4" y="67.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="268.4" y="78.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.12%)</title><rect x="265.4" y="51.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="266.4" y="35.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="269.4" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="266.8" y="83.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="269.8" y="94.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.06%)</title><rect x="267.1" y="99.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="270.1" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.04%)</title><rect x="267.8" y="115.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="270.8" y="126.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="268.4" y="115.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="271.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (4 samples, 0.06%)</title><rect x="268.9" y="115.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.9" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="269.6" y="115.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="272.6" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.03%)</title><rect x="269.9" y="131.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.9" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (4 samples, 0.06%)</title><rect x="270.3" y="131.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="273.3" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (318 samples, 4.69%)</title><rect x="271.5" y="147.0" width="55.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="274.5" y="158.0">tcp_d..</text>
</g>
<g>
<title>dst_release (3 samples, 0.04%)</title><rect x="273.1" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="276.1" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (291 samples, 4.29%)</title><rect x="273.6" y="131.0" width="50.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.6" y="142.0">sock_..</text>
</g>
<g>
<title>__wake_up_sync_key (276 samples, 4.07%)</title><rect x="276.2" y="115.0" width="48.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="279.2" y="126.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (273 samples, 4.02%)</title><rect x="276.5" y="99.0" width="47.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="279.5" y="110.0">__wa..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="276.5" y="83.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="279.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (271 samples, 3.99%)</title><rect x="276.9" y="83.0" width="47.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="279.9" y="94.0">_raw..</text>
</g>
<g>
<title>tcp_event_data_recv (10 samples, 0.15%)</title><rect x="324.2" y="131.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.2" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.07%)</title><rect x="325.9" y="131.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="328.9" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="326.8" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="329.8" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="327.1" y="147.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="330.1" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="328.0" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="331.0" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.07%)</title><rect x="328.3" y="147.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="331.3" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="329.2" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (5 samples, 0.07%)</title><rect x="329.9" y="179.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.04%)</title><rect x="330.8" y="179.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="333.8" y="190.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (3 samples, 0.04%)</title><rect x="331.5" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.5" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.22%)</title><rect x="332.0" y="227.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="335.0" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.13%)</title><rect x="332.2" y="211.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.2" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.10%)</title><rect x="332.5" y="195.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="335.5" y="206.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="333.9" y="211.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.9" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="334.3" y="211.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="337.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (7 samples, 0.10%)</title><rect x="334.6" y="243.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="337.6" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.04%)</title><rect x="336.2" y="259.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="339.2" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.24%)</title><rect x="336.9" y="259.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.9" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (8 samples, 0.12%)</title><rect x="337.7" y="243.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="340.7" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (8 samples, 0.12%)</title><rect x="337.7" y="227.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="340.7" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="339.1" y="243.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="342.1" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="339.3" y="227.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (2 samples, 0.03%)</title><rect x="339.6" y="275.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="342.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.04%)</title><rect x="340.0" y="275.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="343.0" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="340.5" y="275.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="343.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="340.9" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="343.9" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (76 samples, 1.12%)</title><rect x="341.4" y="403.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="344.4" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (74 samples, 1.09%)</title><rect x="341.6" y="387.0" width="12.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="344.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (38 samples, 0.56%)</title><rect x="343.6" y="371.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="346.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (27 samples, 0.40%)</title><rect x="344.3" y="355.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.06%)</title><rect x="344.9" y="339.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="347.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (15 samples, 0.22%)</title><rect x="345.6" y="339.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="348.6" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="345.6" y="323.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="348.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (12 samples, 0.18%)</title><rect x="346.1" y="323.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="349.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (12 samples, 0.18%)</title><rect x="346.1" y="307.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="349.1" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="348.2" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="351.2" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="348.7" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="351.7" y="350.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.03%)</title><rect x="348.7" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="351.7" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.04%)</title><rect x="349.2" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="352.2" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="349.7" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.07%)</title><rect x="350.2" y="371.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.2" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (17 samples, 0.25%)</title><rect x="351.3" y="371.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="354.3" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (7 samples, 0.10%)</title><rect x="352.2" y="355.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.2" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (4 samples, 0.06%)</title><rect x="353.6" y="355.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="356.6" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.21 (3 samples, 0.04%)</title><rect x="354.6" y="403.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="357.6" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="355.1" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="358.1" y="430.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (3 samples, 0.04%)</title><rect x="355.8" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="358.8" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.19%)</title><rect x="356.3" y="435.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.3" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (8 samples, 0.12%)</title><rect x="356.9" y="419.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.9" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (4 samples, 0.06%)</title><rect x="357.5" y="403.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="360.5" y="414.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.03%)</title><rect x="358.8" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="361.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.03%)</title><rect x="359.1" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.1" y="462.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.04%)</title><rect x="359.5" y="467.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="362.5" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.09%)</title><rect x="360.0" y="467.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="363.0" y="478.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="361.2" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.2" y="494.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.10%)</title><rect x="361.7" y="499.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.7" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.04%)</title><rect x="362.1" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.1" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="362.6" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.6" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.04%)</title><rect x="363.1" y="499.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.1" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="363.6" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="366.6" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="363.6" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="366.6" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="364.0" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="367.0" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.04%)</title><rect x="364.5" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="367.5" y="526.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.09%)</title><rect x="365.0" y="515.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="368.0" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="366.1" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="369.1" y="526.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="366.4" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="369.4" y="526.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="366.8" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="369.8" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.10%)</title><rect x="367.1" y="515.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="370.1" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.09%)</title><rect x="367.3" y="499.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="370.3" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="367.6" y="483.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="370.6" y="494.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="367.8" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="367.8" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="370.8" y="462.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="368.5" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.5" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.06%)</title><rect x="369.0" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="372.0" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="369.4" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="372.4" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.04%)</title><rect x="369.7" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="372.7" y="526.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="370.6" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="373.6" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (23 samples, 0.34%)</title><rect x="370.9" y="563.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="373.9" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (20 samples, 0.29%)</title><rect x="371.5" y="547.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.5" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.06%)</title><rect x="373.7" y="531.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="376.7" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.04%)</title><rect x="374.4" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="377.4" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="374.9" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.9" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="375.5" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="378.5" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.16%)</title><rect x="376.2" y="611.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="379.2" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.12%)</title><rect x="376.7" y="595.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.7" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.12%)</title><rect x="376.7" y="579.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="379.7" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.09%)</title><rect x="377.0" y="563.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="380.0" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="377.7" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="380.7" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (22 samples, 0.32%)</title><rect x="378.2" y="627.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="381.2" y="638.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.27%)</title><rect x="378.2" y="611.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.27%)</title><rect x="378.2" y="595.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="381.2" y="606.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.18%)</title><rect x="379.3" y="579.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="382.3" y="590.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="381.4" y="611.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="384.4" y="622.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="382.2" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="385.2" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="382.6" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.6" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="383.3" y="707.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="386.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.10%)</title><rect x="383.6" y="787.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.09%)</title><rect x="383.8" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.09%)</title><rect x="383.8" y="755.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (42 samples, 0.62%)</title><rect x="384.8" y="803.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.29%)</title><rect x="388.0" y="787.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.29%)</title><rect x="388.0" y="771.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="391.5" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="391.5" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.5" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="391.5" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.19%)</title><rect x="392.1" y="803.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.16%)</title><rect x="392.5" y="787.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.16%)</title><rect x="392.5" y="771.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (34 samples, 0.50%)</title><rect x="394.4" y="803.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.4" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="399.1" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="402.1" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="399.1" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="402.1" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="399.1" y="755.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="402.1" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="399.5" y="787.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="402.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.04%)</title><rect x="399.8" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.upsertWithMultipleNodes (4,018 samples, 59.20%)</title><rect x="400.3" y="803.0" width="698.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="403.3" y="814.0">ru/mail/polis/service/codearound/RepliServiceImpl.upsertWithMultipleNodes</text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.13%)</title><rect x="407.4" y="787.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="410.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.06%)</title><rect x="408.0" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="408.7" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.7" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="409.2" y="787.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="412.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (1,882 samples, 27.73%)</title><rect x="410.1" y="787.0" width="327.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.1" y="798.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (8 samples, 0.12%)</title><rect x="410.2" y="771.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,873 samples, 27.60%)</title><rect x="411.6" y="771.0" width="325.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.6" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,873 samples, 27.60%)</title><rect x="411.6" y="755.0" width="325.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.6" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.15%)</title><rect x="414.9" y="739.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.15%)</title><rect x="414.9" y="723.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.15%)</title><rect x="414.9" y="707.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (403 samples, 5.94%)</title><rect x="416.7" y="739.0" width="70.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.7" y="750.0">one/nio/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.06%)</title><rect x="429.2" y="723.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="432.2" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="429.4" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="432.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="429.4" y="691.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="432.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="429.4" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="432.4" y="686.0"></text>
</g>
<g>
<title>__memset_erms (2 samples, 0.03%)</title><rect x="429.4" y="659.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="432.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (324 samples, 4.77%)</title><rect x="429.9" y="723.0" width="56.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.9" y="734.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (38 samples, 0.56%)</title><rect x="431.1" y="707.0" width="6.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="434.1" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="431.6" y="691.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="434.6" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (10 samples, 0.15%)</title><rect x="432.5" y="691.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="435.5" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (19 samples, 0.28%)</title><rect x="434.2" y="691.0" width="3.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="437.2" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.10%)</title><rect x="434.9" y="675.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="437.9" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.10%)</title><rect x="436.1" y="675.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="439.1" y="686.0"></text>
</g>
<g>
<title>__GI___recv (271 samples, 3.99%)</title><rect x="437.7" y="707.0" width="47.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="440.7" y="718.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (259 samples, 3.82%)</title><rect x="439.8" y="691.0" width="45.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="442.8" y="702.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.03%)</title><rect x="439.8" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (257 samples, 3.79%)</title><rect x="440.1" y="675.0" width="44.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="443.1" y="686.0">do_s..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.03%)</title><rect x="445.5" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="448.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (224 samples, 3.30%)</title><rect x="445.9" y="659.0" width="38.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.9" y="670.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (222 samples, 3.27%)</title><rect x="445.9" y="643.0" width="38.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="448.9" y="654.0">__s..</text>
</g>
<g>
<title>sock_recvmsg (198 samples, 2.92%)</title><rect x="447.6" y="627.0" width="34.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="450.6" y="638.0">so..</text>
</g>
<g>
<title>inet_recvmsg (182 samples, 2.68%)</title><rect x="448.1" y="611.0" width="31.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="451.1" y="622.0">in..</text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="449.7" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="452.7" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (170 samples, 2.50%)</title><rect x="450.2" y="595.0" width="29.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="453.2" y="606.0">tc..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.07%)</title><rect x="454.4" y="579.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="457.4" y="590.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="454.7" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="457.7" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.07%)</title><rect x="456.0" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="459.0" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="456.3" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="459.3" y="574.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="456.8" y="579.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="459.8" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (79 samples, 1.16%)</title><rect x="457.5" y="579.0" width="13.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="460.5" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="458.7" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="461.7" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (35 samples, 0.52%)</title><rect x="459.3" y="563.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="462.3" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (30 samples, 0.44%)</title><rect x="460.0" y="547.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.0" y="558.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="465.3" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="468.3" y="574.0"></text>
</g>
<g>
<title>remove_wait_queue (5 samples, 0.07%)</title><rect x="465.9" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="468.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.07%)</title><rect x="465.9" y="547.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="468.9" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (9 samples, 0.13%)</title><rect x="466.7" y="563.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="469.7" y="574.0"></text>
</g>
<g>
<title>wait_woken (17 samples, 0.25%)</title><rect x="468.3" y="563.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="471.3" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (15 samples, 0.22%)</title><rect x="468.6" y="547.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.09%)</title><rect x="468.6" y="531.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="471.6" y="542.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.10%)</title><rect x="470.0" y="531.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="473.0" y="542.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.07%)</title><rect x="470.4" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="473.4" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="470.9" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.9" y="510.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (30 samples, 0.44%)</title><rect x="471.3" y="579.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="474.3" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (27 samples, 0.40%)</title><rect x="471.3" y="563.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="474.3" y="574.0"></text>
</g>
<g>
<title>simple_copy_to_iter (23 samples, 0.34%)</title><rect x="472.0" y="547.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="475.0" y="558.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.12%)</title><rect x="472.3" y="531.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="475.3" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="473.2" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="476.2" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (12 samples, 0.18%)</title><rect x="473.7" y="531.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.7" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (11 samples, 0.16%)</title><rect x="473.9" y="515.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="476.9" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.03%)</title><rect x="476.1" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="479.1" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.06%)</title><rect x="476.5" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="479.5" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (11 samples, 0.16%)</title><rect x="477.2" y="579.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="480.2" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.13%)</title><rect x="477.5" y="563.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="480.5" y="574.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="478.4" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="481.4" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="479.1" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="482.1" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.18%)</title><rect x="479.8" y="611.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="482.8" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (9 samples, 0.13%)</title><rect x="480.3" y="595.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="483.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.04%)</title><rect x="480.3" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="483.3" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.09%)</title><rect x="480.8" y="579.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.8" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.07%)</title><rect x="481.0" y="563.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="484.0" y="574.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="481.5" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.5" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="481.5" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.5" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.21%)</title><rect x="482.0" y="627.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="485.0" y="638.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.19%)</title><rect x="482.2" y="611.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="485.2" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="482.2" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="485.2" y="606.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.16%)</title><rect x="482.6" y="595.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.6" y="606.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.15%)</title><rect x="482.7" y="579.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="485.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="484.5" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.5" y="654.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.04%)</title><rect x="484.8" y="707.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="487.8" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.07%)</title><rect x="485.3" y="707.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="488.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (3 samples, 0.04%)</title><rect x="486.2" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.03%)</title><rect x="486.7" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (85 samples, 1.25%)</title><rect x="487.1" y="739.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="488.3" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="488.3" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="488.3" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="488.3" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="488.6" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="488.6" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="488.6" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (46 samples, 0.68%)</title><rect x="489.0" y="723.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.37%)</title><rect x="492.6" y="707.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.37%)</title><rect x="492.6" y="691.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.09%)</title><rect x="495.9" y="675.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.09%)</title><rect x="495.9" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.09%)</title><rect x="495.9" y="643.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.09%)</title><rect x="497.0" y="723.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (4 samples, 0.06%)</title><rect x="498.0" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (14 samples, 0.21%)</title><rect x="498.7" y="723.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.10%)</title><rect x="499.9" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.10%)</title><rect x="499.9" y="691.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="500.5" y="675.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="503.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (4 samples, 0.06%)</title><rect x="501.2" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="501.5" y="707.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="504.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (53 samples, 0.78%)</title><rect x="502.0" y="739.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (28 samples, 0.41%)</title><rect x="506.4" y="723.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (28 samples, 0.41%)</title><rect x="506.4" y="707.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (28 samples, 0.41%)</title><rect x="506.4" y="691.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.4" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="510.7" y="675.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="513.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.15%)</title><rect x="511.2" y="739.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.09%)</title><rect x="511.9" y="723.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.09%)</title><rect x="511.9" y="707.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.04%)</title><rect x="513.0" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (273 samples, 4.02%)</title><rect x="513.5" y="739.0" width="47.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.5" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (13 samples, 0.19%)</title><rect x="516.1" y="723.0" width="2.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="519.1" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (241 samples, 3.55%)</title><rect x="518.4" y="723.0" width="41.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="521.4" y="734.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (218 samples, 3.21%)</title><rect x="522.4" y="707.0" width="37.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="525.4" y="718.0">ent..</text>
</g>
<g>
<title>__x64_sys_setsockopt (6 samples, 0.09%)</title><rect x="522.4" y="691.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="525.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (212 samples, 3.12%)</title><rect x="523.4" y="691.0" width="36.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="526.4" y="702.0">do_..</text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.03%)</title><rect x="535.9" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (136 samples, 2.00%)</title><rect x="536.3" y="675.0" width="23.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="539.3" y="686.0">_..</text>
</g>
<g>
<title>__sys_setsockopt (129 samples, 1.90%)</title><rect x="536.3" y="659.0" width="22.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.3" y="670.0">_..</text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="537.5" y="643.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="540.5" y="654.0"></text>
</g>
<g>
<title>__get_user_4 (10 samples, 0.15%)</title><rect x="538.0" y="643.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="541.0" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (3 samples, 0.04%)</title><rect x="539.8" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="542.8" y="654.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="540.6" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="543.6" y="654.0"></text>
</g>
<g>
<title>security_socket_setsockopt (18 samples, 0.27%)</title><rect x="541.0" y="643.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="544.0" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (3 samples, 0.04%)</title><rect x="541.1" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="544.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (14 samples, 0.21%)</title><rect x="541.7" y="627.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="544.7" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (13 samples, 0.19%)</title><rect x="541.8" y="611.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="544.8" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.13%)</title><rect x="542.5" y="595.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="545.5" y="606.0"></text>
</g>
<g>
<title>sock_set_timeout (4 samples, 0.06%)</title><rect x="544.1" y="643.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="547.1" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (54 samples, 0.80%)</title><rect x="544.8" y="643.0" width="9.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="547.8" y="654.0"></text>
</g>
<g>
<title>_copy_from_user (4 samples, 0.06%)</title><rect x="546.2" y="627.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="549.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.07%)</title><rect x="546.9" y="627.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="549.9" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="547.8" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="550.8" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.09%)</title><rect x="548.3" y="627.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.3" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="548.6" y="611.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="551.6" y="622.0"></text>
</g>
<g>
<title>release_sock (11 samples, 0.16%)</title><rect x="549.3" y="627.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="552.3" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.07%)</title><rect x="550.4" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="553.4" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (15 samples, 0.22%)</title><rect x="551.2" y="627.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.2" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.07%)</title><rect x="553.0" y="611.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="556.0" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="553.8" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="556.8" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (26 samples, 0.38%)</title><rect x="554.2" y="643.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="557.2" y="654.0"></text>
</g>
<g>
<title>__fdget (19 samples, 0.28%)</title><rect x="554.2" y="627.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="557.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (19 samples, 0.28%)</title><rect x="554.2" y="611.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.2" y="622.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.21%)</title><rect x="555.1" y="595.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="558.1" y="606.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.10%)</title><rect x="557.5" y="627.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="560.5" y="638.0"></text>
</g>
<g>
<title>fput (4 samples, 0.06%)</title><rect x="558.7" y="659.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="561.7" y="670.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.03%)</title><rect x="559.6" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="562.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="559.9" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="562.9" y="686.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="559.9" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="562.9" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="559.9" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="562.9" y="654.0"></text>
</g>
<g>
<title>setsockopt@plt (4 samples, 0.06%)</title><rect x="560.3" y="723.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="563.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,011 samples, 14.90%)</title><rect x="561.0" y="739.0" width="175.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.0" y="750.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (52 samples, 0.77%)</title><rect x="566.2" y="723.0" width="9.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="569.2" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.12%)</title><rect x="568.3" y="707.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="571.3" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="569.8" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="572.8" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (19 samples, 0.28%)</title><rect x="570.2" y="707.0" width="3.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="573.2" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.12%)</title><rect x="573.5" y="707.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="576.5" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="573.8" y="691.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.8" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="574.5" y="691.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="577.5" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="574.5" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="577.5" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.06%)</title><rect x="575.2" y="723.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="578.2" y="734.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (5 samples, 0.07%)</title><rect x="575.9" y="723.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="578.9" y="734.0"></text>
</g>
<g>
<title>__libc_send (918 samples, 13.53%)</title><rect x="576.8" y="723.0" width="159.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="579.8" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (908 samples, 13.38%)</title><rect x="578.5" y="707.0" width="157.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="581.5" y="718.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (907 samples, 13.36%)</title><rect x="578.7" y="691.0" width="157.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="581.7" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (868 samples, 12.79%)</title><rect x="585.1" y="675.0" width="150.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="588.1" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (861 samples, 12.69%)</title><rect x="585.1" y="659.0" width="149.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="588.1" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (850 samples, 12.52%)</title><rect x="585.8" y="643.0" width="147.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="588.8" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (835 samples, 12.30%)</title><rect x="586.7" y="627.0" width="145.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="589.7" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (831 samples, 12.24%)</title><rect x="587.2" y="611.0" width="144.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.2" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="587.9" y="595.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="590.9" y="606.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="588.4" y="595.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="591.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="588.4" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="591.4" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="589.0" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.0" y="606.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.03%)</title><rect x="589.3" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="592.3" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="590.0" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.0" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.04%)</title><rect x="590.4" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="593.4" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (807 samples, 11.89%)</title><rect x="590.9" y="595.0" width="140.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="593.9" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.10%)</title><rect x="593.8" y="579.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.8" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="594.3" y="563.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.3" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="595.2" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.2" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.09%)</title><rect x="595.6" y="579.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="598.6" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.09%)</title><rect x="595.6" y="563.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="598.6" y="574.0"></text>
</g>
<g>
<title>check_stack_object (4 samples, 0.06%)</title><rect x="596.6" y="579.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="599.6" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (49 samples, 0.72%)</title><rect x="597.5" y="579.0" width="8.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.5" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (43 samples, 0.63%)</title><rect x="597.8" y="563.0" width="7.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.03%)</title><rect x="598.7" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="601.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (19 samples, 0.28%)</title><rect x="599.0" y="547.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (16 samples, 0.24%)</title><rect x="599.0" y="531.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="602.0" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.07%)</title><rect x="600.8" y="515.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="603.8" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.04%)</title><rect x="601.8" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="604.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (16 samples, 0.24%)</title><rect x="602.3" y="547.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="605.3" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.07%)</title><rect x="604.1" y="531.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.1" y="542.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.06%)</title><rect x="605.3" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="608.3" y="574.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.09%)</title><rect x="606.0" y="579.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.04%)</title><rect x="607.0" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="610.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (700 samples, 10.31%)</title><rect x="607.6" y="579.0" width="121.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="610.6" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (700 samples, 10.31%)</title><rect x="607.6" y="563.0" width="121.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.6" y="574.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="608.3" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="611.3" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="608.6" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (691 samples, 10.18%)</title><rect x="609.1" y="547.0" width="120.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.1" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (649 samples, 9.56%)</title><rect x="611.4" y="531.0" width="112.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="614.4" y="542.0">__tcp_transmit..</text>
</g>
<g>
<title>ip_queue_xmit (622 samples, 9.16%)</title><rect x="614.7" y="515.0" width="108.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="617.7" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (618 samples, 9.11%)</title><rect x="614.9" y="499.0" width="107.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.9" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (608 samples, 8.96%)</title><rect x="616.1" y="483.0" width="105.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="619.1" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (87 samples, 1.28%)</title><rect x="616.4" y="467.0" width="15.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="619.4" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.04%)</title><rect x="616.6" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="619.6" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (10 samples, 0.15%)</title><rect x="617.1" y="451.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="620.1" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.03%)</title><rect x="618.9" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="621.9" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (71 samples, 1.05%)</title><rect x="619.2" y="451.0" width="12.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="622.2" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (11 samples, 0.16%)</title><rect x="619.6" y="435.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="622.6" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (11 samples, 0.16%)</title><rect x="619.6" y="419.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="622.6" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (51 samples, 0.75%)</title><rect x="621.5" y="435.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="624.5" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.04%)</title><rect x="621.5" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="624.5" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.03%)</title><rect x="622.2" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="625.2" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (41 samples, 0.60%)</title><rect x="622.7" y="419.0" width="7.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.7" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (7 samples, 0.10%)</title><rect x="623.2" y="403.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="626.2" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (4 samples, 0.06%)</title><rect x="624.6" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="627.6" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.06%)</title><rect x="625.3" y="403.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.3" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.03%)</title><rect x="626.0" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="629.0" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (20 samples, 0.29%)</title><rect x="626.3" y="403.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="629.3" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="627.7" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="630.7" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (9 samples, 0.13%)</title><rect x="628.3" y="387.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="631.3" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.03%)</title><rect x="629.5" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="632.5" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.04%)</title><rect x="629.8" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="632.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.06%)</title><rect x="630.3" y="435.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="633.3" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="631.0" y="435.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.0" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="631.2" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="634.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.03%)</title><rect x="631.2" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.2" y="414.0"></text>
</g>
<g>
<title>ip_output (515 samples, 7.59%)</title><rect x="631.6" y="467.0" width="89.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="634.6" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="631.7" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="634.7" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="632.1" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="635.1" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (501 samples, 7.38%)</title><rect x="632.4" y="451.0" width="87.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="635.4" y="462.0">ip_finish_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.07%)</title><rect x="633.8" y="435.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (486 samples, 7.16%)</title><rect x="634.7" y="435.0" width="84.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="637.7" y="446.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (431 samples, 6.35%)</title><rect x="636.1" y="419.0" width="74.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="639.1" y="430.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.21 (430 samples, 6.34%)</title><rect x="636.3" y="403.0" width="74.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.3" y="414.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (427 samples, 6.29%)</title><rect x="636.8" y="387.0" width="74.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="639.8" y="398.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (425 samples, 6.26%)</title><rect x="636.8" y="371.0" width="73.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="639.8" y="382.0">__softir..</text>
</g>
<g>
<title>net_rx_action (417 samples, 6.14%)</title><rect x="637.8" y="355.0" width="72.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="640.8" y="366.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (405 samples, 5.97%)</title><rect x="639.9" y="339.0" width="70.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="642.9" y="350.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (394 samples, 5.81%)</title><rect x="641.8" y="323.0" width="68.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.8" y="334.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (393 samples, 5.79%)</title><rect x="642.0" y="307.0" width="68.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="645.0" y="318.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (11 samples, 0.16%)</title><rect x="642.3" y="291.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="645.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (378 samples, 5.57%)</title><rect x="644.2" y="291.0" width="65.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="647.2" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.07%)</title><rect x="644.6" y="275.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="647.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (358 samples, 5.27%)</title><rect x="645.5" y="275.0" width="62.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="648.5" y="286.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (354 samples, 5.22%)</title><rect x="645.8" y="259.0" width="61.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="648.8" y="270.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (343 samples, 5.05%)</title><rect x="646.0" y="243.0" width="59.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.0" y="254.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (337 samples, 4.97%)</title><rect x="646.7" y="227.0" width="58.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="649.7" y="238.0">ip_pro..</text>
</g>
<g>
<title>tcp_v4_rcv (325 samples, 4.79%)</title><rect x="648.8" y="211.0" width="56.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="651.8" y="222.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.12%)</title><rect x="650.0" y="195.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="653.0" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="651.6" y="195.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="654.6" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.12%)</title><rect x="651.9" y="195.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="654.9" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="652.6" y="179.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (296 samples, 4.36%)</title><rect x="653.6" y="195.0" width="51.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="656.6" y="206.0">tcp_v..</text>
</g>
<g>
<title>tcp_rcv_established (289 samples, 4.26%)</title><rect x="654.9" y="179.0" width="50.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="657.9" y="190.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.16%)</title><rect x="656.6" y="163.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.13%)</title><rect x="656.9" y="147.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="659.9" y="158.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="657.1" y="131.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="660.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.09%)</title><rect x="657.5" y="131.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="660.5" y="142.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.07%)</title><rect x="657.6" y="115.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="660.6" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="658.2" y="99.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.2" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.04%)</title><rect x="658.5" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="661.5" y="174.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="659.0" y="163.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="662.0" y="174.0"></text>
</g>
<g>
<title>tcp_ack (80 samples, 1.18%)</title><rect x="659.7" y="163.0" width="13.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="662.7" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="662.0" y="147.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="665.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.03%)</title><rect x="662.5" y="147.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="665.5" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (56 samples, 0.83%)</title><rect x="662.9" y="147.0" width="9.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="665.9" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.37%)</title><rect x="665.8" y="131.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="668.8" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.09%)</title><rect x="666.0" y="115.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="669.0" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.07%)</title><rect x="666.2" y="99.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.2" y="110.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="666.5" y="83.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="669.5" y="94.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.22%)</title><rect x="667.0" y="115.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="670.0" y="126.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.22%)</title><rect x="667.0" y="99.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="670.0" y="110.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.15%)</title><rect x="667.9" y="83.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="670.9" y="94.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.15%)</title><rect x="667.9" y="67.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="670.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="669.1" y="51.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.1" y="62.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="669.6" y="115.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.6" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="670.3" y="131.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="673.3" y="142.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.03%)</title><rect x="670.7" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.7" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="671.0" y="131.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="674.0" y="142.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="671.4" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="674.4" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (3 samples, 0.04%)</title><rect x="671.9" y="131.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="674.9" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.04%)</title><rect x="673.1" y="147.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.1" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.04%)</title><rect x="673.6" y="163.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.6" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (167 samples, 2.46%)</title><rect x="674.3" y="163.0" width="29.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="677.3" y="174.0">tc..</text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.04%)</title><rect x="674.7" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="677.7" y="158.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="675.2" y="147.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (158 samples, 2.33%)</title><rect x="675.5" y="147.0" width="27.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="678.5" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (154 samples, 2.27%)</title><rect x="676.2" y="131.0" width="26.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="679.2" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (152 samples, 2.24%)</title><rect x="676.2" y="115.0" width="26.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="679.2" y="126.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (151 samples, 2.22%)</title><rect x="676.4" y="99.0" width="26.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="679.4" y="110.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="703.0" y="147.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.0" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="703.4" y="163.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="706.4" y="174.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="703.4" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.4" y="158.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="704.2" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.2" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="705.6" y="243.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.6" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.09%)</title><rect x="706.1" y="243.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.1" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.04%)</title><rect x="706.1" y="227.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="709.1" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.04%)</title><rect x="706.1" y="211.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="709.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.03%)</title><rect x="707.4" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="710.4" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.15%)</title><rect x="708.2" y="275.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="711.2" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (4 samples, 0.06%)</title><rect x="708.6" y="259.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="711.6" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.06%)</title><rect x="708.6" y="243.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="711.6" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.04%)</title><rect x="709.3" y="259.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="712.3" y="270.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="710.3" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.3" y="366.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="710.7" y="371.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.7" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (46 samples, 0.68%)</title><rect x="711.0" y="419.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.0" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (44 samples, 0.65%)</title><rect x="711.0" y="403.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="714.0" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (26 samples, 0.38%)</title><rect x="711.9" y="387.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="714.9" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="712.4" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="715.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (17 samples, 0.25%)</title><rect x="712.7" y="371.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.7" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.04%)</title><rect x="712.9" y="355.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.13%)</title><rect x="713.4" y="355.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="716.4" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.13%)</title><rect x="713.4" y="339.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.4" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.13%)</title><rect x="713.4" y="323.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.4" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="715.0" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="718.0" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.04%)</title><rect x="715.7" y="371.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="718.7" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="716.4" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="719.4" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.12%)</title><rect x="717.1" y="387.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="720.1" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="718.1" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="721.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="718.7" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="721.7" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="719.2" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.10%)</title><rect x="719.7" y="451.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="722.7" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.04%)</title><rect x="720.2" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="723.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.06%)</title><rect x="721.1" y="467.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="724.1" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="721.8" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="724.8" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="722.3" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="725.3" y="510.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.10%)</title><rect x="722.8" y="515.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="725.8" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="723.0" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.0" y="510.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.06%)</title><rect x="723.4" y="499.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.4" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="723.7" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="726.7" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.04%)</title><rect x="724.2" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="727.2" y="542.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="724.9" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="727.9" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="725.1" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.1" y="526.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="725.4" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.4" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.10%)</title><rect x="726.3" y="531.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="729.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="727.0" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="730.0" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="727.0" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="730.0" y="510.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="727.0" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="730.0" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.07%)</title><rect x="727.9" y="531.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="728.9" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.9" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="729.3" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="732.3" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.13%)</title><rect x="729.6" y="579.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.6" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.07%)</title><rect x="730.3" y="563.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="733.3" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="731.2" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="734.2" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.12%)</title><rect x="731.9" y="627.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="734.9" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.10%)</title><rect x="732.0" y="611.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="735.0" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.09%)</title><rect x="732.2" y="595.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="735.2" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.09%)</title><rect x="732.2" y="579.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="735.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="733.3" y="627.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="736.3" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.10%)</title><rect x="733.6" y="643.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="736.6" y="654.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.09%)</title><rect x="733.6" y="627.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="736.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="733.6" y="611.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="736.6" y="622.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.07%)</title><rect x="733.8" y="595.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="736.8" y="606.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.06%)</title><rect x="734.8" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="737.8" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="735.5" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="738.5" y="670.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="736.0" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="739.0" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="736.0" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="739.0" y="670.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="736.0" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="739.0" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="736.0" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="739.0" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="736.0" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.0" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="736.0" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="736.0" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.0" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="736.4" y="723.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="739.4" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.04%)</title><rect x="736.7" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.12%)</title><rect x="737.3" y="787.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.3" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="738.1" y="771.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="741.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (3 samples, 0.04%)</title><rect x="738.7" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="738.8" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.8" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (5 samples, 0.07%)</title><rect x="739.2" y="787.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (8 samples, 0.12%)</title><rect x="740.0" y="787.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (6 samples, 0.09%)</title><rect x="740.0" y="771.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="741.1" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (2,055 samples, 30.28%)</title><rect x="741.4" y="787.0" width="357.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.4" y="798.0">ru/mail/polis/service/codearound/TaskDAO.upsertVa..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2,010 samples, 29.62%)</title><rect x="741.4" y="771.0" width="349.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.4" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="746.7" y="755.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="749.7" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.07%)</title><rect x="746.7" y="739.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="749.7" y="750.0"></text>
</g>
<g>
<title>gettimeofday (15 samples, 0.22%)</title><rect x="747.5" y="755.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="750.5" y="766.0"></text>
</g>
<g>
<title>gettimeofday@plt (3 samples, 0.04%)</title><rect x="750.1" y="755.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="753.1" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="750.8" y="755.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="753.8" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,941 samples, 28.60%)</title><rect x="751.2" y="755.0" width="337.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.2" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1,298 samples, 19.12%)</title><rect x="752.4" y="739.0" width="225.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="755.4" y="750.0">Java_org_rocksdb_RocksDB_put__..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.04%)</title><rect x="756.0" y="723.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="759.0" y="734.0"></text>
</g>
<g>
<title>__malloc (14 samples, 0.21%)</title><rect x="756.6" y="723.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="759.6" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (9 samples, 0.13%)</title><rect x="759.0" y="723.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="762.0" y="734.0"></text>
</g>
<g>
<title>malloc@plt (4 samples, 0.06%)</title><rect x="760.6" y="723.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="763.6" y="734.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.03%)</title><rect x="761.3" y="723.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="764.3" y="734.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (2 samples, 0.03%)</title><rect x="761.8" y="723.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="764.8" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (6 samples, 0.09%)</title><rect x="762.1" y="723.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="765.1" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (4 samples, 0.06%)</title><rect x="763.2" y="723.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="766.2" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (15 samples, 0.22%)</title><rect x="763.9" y="723.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="766.9" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (5 samples, 0.07%)</title><rect x="766.5" y="723.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="769.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.09%)</title><rect x="767.3" y="723.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="770.3" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1,205 samples, 17.75%)</title><rect x="768.6" y="723.0" width="209.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="771.6" y="734.0">rocksdb_put_helper(JNIEnv_*..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="770.6" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="773.6" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.03%)</title><rect x="771.2" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="774.2" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.10%)</title><rect x="771.5" y="707.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="774.5" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 0.10%)</title><rect x="772.7" y="707.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="775.7" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.03%)</title><rect x="773.1" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="776.1" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="773.6" y="691.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="776.6" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (18 samples, 0.27%)</title><rect x="773.9" y="707.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="776.9" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="774.6" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="777.6" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="775.0" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="778.0" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="775.3" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="778.3" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.09%)</title><rect x="776.0" y="691.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="779.0" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="776.7" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="779.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,145 samples, 16.87%)</title><rect x="777.1" y="707.0" width="199.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="780.1" y="718.0">rocksdb::DB::Put(rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.07%)</title><rect x="777.8" y="691.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="780.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.03%)</title><rect x="778.6" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="781.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,134 samples, 16.71%)</title><rect x="779.0" y="691.0" width="197.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="782.0" y="702.0">rocksdb::DBImpl::Put(rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,115 samples, 16.43%)</title><rect x="779.0" y="675.0" width="193.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="782.0" y="686.0">rocksdb::DB::Put(rocksdb:..</text>
</g>
<g>
<title>__libc_free (6 samples, 0.09%)</title><rect x="781.1" y="659.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="784.1" y="670.0"></text>
</g>
<g>
<title>free@plt (2 samples, 0.03%)</title><rect x="782.1" y="659.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="785.1" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) (9 samples, 0.13%)</title><rect x="782.5" y="659.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="785.5" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (3 samples, 0.04%)</title><rect x="784.0" y="659.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="787.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (12 samples, 0.18%)</title><rect x="784.6" y="659.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="787.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (998 samples, 14.70%)</title><rect x="786.6" y="659.0" width="173.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="789.6" y="670.0">rocksdb::DBImpl::Write..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (14 samples, 0.21%)</title><rect x="786.8" y="643.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="789.8" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (3 samples, 0.04%)</title><rect x="789.2" y="643.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="792.2" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.10%)</title><rect x="789.8" y="643.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="792.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.04%)</title><rect x="791.2" y="643.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="794.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.06%)</title><rect x="791.7" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="794.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) [clone .plt] (2 samples, 0.03%)</title><rect x="792.4" y="643.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="795.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (4 samples, 0.06%)</title><rect x="792.7" y="643.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="795.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() [clone .plt] (2 samples, 0.03%)</title><rect x="793.4" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="796.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (904 samples, 13.32%)</title><rect x="793.8" y="643.0" width="157.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="796.8" y="654.0">rocksdb::DBImpl::Wri..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="806.6" y="627.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="809.6" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.03%)</title><rect x="807.2" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="810.2" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (10 samples, 0.15%)</title><rect x="807.5" y="627.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="810.5" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.06%)</title><rect x="809.4" y="627.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="812.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (6 samples, 0.09%)</title><rect x="810.1" y="627.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="813.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (18 samples, 0.27%)</title><rect x="811.2" y="627.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="814.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (3 samples, 0.04%)</title><rect x="814.3" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="817.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) [clone .plt] (2 samples, 0.03%)</title><rect x="815.0" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="818.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (204 samples, 3.01%)</title><rect x="815.3" y="627.0" width="35.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="818.3" y="638.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (3 samples, 0.04%)</title><rect x="816.5" y="611.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="819.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (179 samples, 2.64%)</title><rect x="817.1" y="611.0" width="31.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="820.1" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.06%)</title><rect x="818.1" y="595.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="821.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() [clone .plt] (2 samples, 0.03%)</title><rect x="818.8" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="821.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (163 samples, 2.40%)</title><rect x="819.2" y="595.0" width="28.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="822.2" y="606.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (22 samples, 0.32%)</title><rect x="820.7" y="579.0" width="3.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="823.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (3 samples, 0.04%)</title><rect x="824.5" y="579.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="827.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (5 samples, 0.07%)</title><rect x="825.1" y="579.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="828.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="825.9" y="579.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="828.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (79 samples, 1.16%)</title><rect x="826.6" y="579.0" width="13.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="829.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.09%)</title><rect x="828.2" y="563.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="831.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (2 samples, 0.03%)</title><rect x="829.4" y="563.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="832.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() [clone .plt] (2 samples, 0.03%)</title><rect x="829.8" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="832.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (8 samples, 0.12%)</title><rect x="830.5" y="563.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="833.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (3 samples, 0.04%)</title><rect x="831.8" y="563.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="834.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (45 samples, 0.66%)</title><rect x="832.4" y="563.0" width="7.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="835.4" y="574.0"></text>
</g>
<g>
<title>__GI_write (10 samples, 0.15%)</title><rect x="834.6" y="547.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="837.6" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (11 samples, 0.16%)</title><rect x="836.4" y="547.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="839.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.04%)</title><rect x="838.3" y="547.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="841.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (7 samples, 0.10%)</title><rect x="838.8" y="547.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="841.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.06%)</title><rect x="840.4" y="579.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="843.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (36 samples, 0.53%)</title><rect x="841.2" y="579.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="844.2" y="590.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (8 samples, 0.12%)</title><rect x="841.9" y="563.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="844.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="843.3" y="563.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="846.3" y="574.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (3 samples, 0.04%)</title><rect x="843.7" y="563.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="846.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (7 samples, 0.10%)</title><rect x="844.2" y="563.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="847.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (7 samples, 0.10%)</title><rect x="845.6" y="563.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="848.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="846.8" y="563.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="849.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.04%)</title><rect x="847.5" y="595.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="850.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (3 samples, 0.04%)</title><rect x="848.2" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="851.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 0.10%)</title><rect x="848.9" y="611.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="851.9" y="622.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.04%)</title><rect x="850.3" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="853.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (6 samples, 0.09%)</title><rect x="850.8" y="627.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="853.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (22 samples, 0.32%)</title><rect x="852.0" y="627.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="855.0" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="852.4" y="611.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="855.4" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (17 samples, 0.25%)</title><rect x="852.7" y="611.0" width="3.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="855.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.03%)</title><rect x="855.8" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="858.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (2 samples, 0.03%)</title><rect x="856.2" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="859.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (4 samples, 0.06%)</title><rect x="856.9" y="627.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="859.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (3 samples, 0.04%)</title><rect x="857.6" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="860.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (3 samples, 0.04%)</title><rect x="858.1" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="861.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.06%)</title><rect x="858.6" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="861.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const [clone .plt] (2 samples, 0.03%)</title><rect x="859.3" y="627.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="862.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (420 samples, 6.19%)</title><rect x="859.7" y="627.0" width="73.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="862.7" y="638.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (404 samples, 5.95%)</title><rect x="861.6" y="611.0" width="70.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="864.6" y="622.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="861.7" y="595.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="864.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="862.4" y="595.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="865.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (5 samples, 0.07%)</title><rect x="863.0" y="595.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="866.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="863.8" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="866.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (389 samples, 5.73%)</title><rect x="864.2" y="595.0" width="67.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="867.2" y="606.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (367 samples, 5.41%)</title><rect x="866.1" y="579.0" width="63.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.1" y="590.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (5 samples, 0.07%)</title><rect x="866.3" y="563.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="869.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (5 samples, 0.07%)</title><rect x="867.1" y="563.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="870.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 0.07%)</title><rect x="868.2" y="563.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="871.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) [clone .plt] (2 samples, 0.03%)</title><rect x="869.1" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="872.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (348 samples, 5.13%)</title><rect x="869.4" y="563.0" width="60.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="872.4" y="574.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (7 samples, 0.10%)</title><rect x="872.7" y="547.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="875.7" y="558.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (4 samples, 0.06%)</title><rect x="873.9" y="547.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="876.9" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.03%)</title><rect x="874.6" y="547.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="877.6" y="558.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (5 samples, 0.07%)</title><rect x="875.1" y="547.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="878.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (7 samples, 0.10%)</title><rect x="876.2" y="547.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="879.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="877.4" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="880.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (286 samples, 4.21%)</title><rect x="877.7" y="547.0" width="49.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="880.7" y="558.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (21 samples, 0.31%)</title><rect x="881.0" y="531.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="884.0" y="542.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="882.8" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="885.8" y="526.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="882.8" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="885.8" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="882.8" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="885.8" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="882.8" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="885.8" y="478.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="882.8" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="885.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.04%)</title><rect x="883.1" y="515.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="886.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (5 samples, 0.07%)</title><rect x="883.8" y="515.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="886.8" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (214 samples, 3.15%)</title><rect x="884.7" y="531.0" width="37.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="887.7" y="542.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (196 samples, 2.89%)</title><rect x="886.8" y="515.0" width="34.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="889.8" y="526.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (76 samples, 1.12%)</title><rect x="903.0" y="499.0" width="13.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="906.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (6 samples, 0.09%)</title><rect x="903.5" y="483.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="906.5" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.10%)</title><rect x="904.7" y="483.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="907.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (58 samples, 0.85%)</title><rect x="906.1" y="483.0" width="10.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="909.1" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (11 samples, 0.16%)</title><rect x="909.2" y="467.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="912.2" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.07%)</title><rect x="911.1" y="467.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="914.1" y="478.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (18 samples, 0.27%)</title><rect x="912.0" y="467.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="915.0" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="915.1" y="467.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="918.1" y="478.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.03%)</title><rect x="915.6" y="467.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="918.6" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="916.2" y="499.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="919.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (24 samples, 0.35%)</title><rect x="916.7" y="499.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="919.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (2 samples, 0.03%)</title><rect x="917.4" y="483.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="920.4" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (15 samples, 0.22%)</title><rect x="917.7" y="483.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="920.7" y="494.0"></text>
</g>
<g>
<title>memcmp@plt (3 samples, 0.04%)</title><rect x="920.3" y="483.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="923.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.06%)</title><rect x="921.0" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="924.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (8 samples, 0.12%)</title><rect x="921.9" y="531.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="924.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (5 samples, 0.07%)</title><rect x="923.5" y="531.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="926.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (12 samples, 0.18%)</title><rect x="924.3" y="531.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="927.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (6 samples, 0.09%)</title><rect x="924.3" y="515.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="927.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (6 samples, 0.09%)</title><rect x="925.4" y="515.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="928.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (5 samples, 0.07%)</title><rect x="926.4" y="531.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="929.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.04%)</title><rect x="927.5" y="547.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="930.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.03%)</title><rect x="928.0" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="931.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() [clone .plt] (4 samples, 0.06%)</title><rect x="928.3" y="547.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="931.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (5 samples, 0.07%)</title><rect x="929.0" y="547.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="932.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.06%)</title><rect x="929.9" y="579.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="932.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (7 samples, 0.10%)</title><rect x="930.6" y="579.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="933.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (3 samples, 0.04%)</title><rect x="931.8" y="611.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="934.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.03%)</title><rect x="932.3" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="935.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (6 samples, 0.09%)</title><rect x="932.7" y="627.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="935.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.06%)</title><rect x="933.0" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="936.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.06%)</title><rect x="933.0" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="936.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="933.0" y="579.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="936.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.06%)</title><rect x="933.0" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="936.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.06%)</title><rect x="933.0" y="547.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="936.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.06%)</title><rect x="933.0" y="531.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="936.0" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.06%)</title><rect x="933.0" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="936.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (3 samples, 0.04%)</title><rect x="933.0" y="499.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="936.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (2 samples, 0.03%)</title><rect x="933.0" y="483.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="936.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="933.0" y="467.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="936.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (3 samples, 0.04%)</title><rect x="933.7" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="936.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) [clone .plt] (5 samples, 0.07%)</title><rect x="934.2" y="627.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="937.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (3 samples, 0.04%)</title><rect x="935.1" y="627.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="938.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (36 samples, 0.53%)</title><rect x="935.6" y="627.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="938.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.04%)</title><rect x="941.9" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="944.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (2 samples, 0.03%)</title><rect x="942.4" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="945.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.04%)</title><rect x="942.8" y="627.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="945.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (7 samples, 0.10%)</title><rect x="943.3" y="627.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="946.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (4 samples, 0.06%)</title><rect x="944.5" y="627.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="947.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) [clone .plt] (4 samples, 0.06%)</title><rect x="945.2" y="627.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="948.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (5 samples, 0.07%)</title><rect x="945.9" y="627.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="948.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() [clone .plt] (2 samples, 0.03%)</title><rect x="946.8" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="949.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (6 samples, 0.09%)</title><rect x="947.1" y="627.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="950.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (4 samples, 0.06%)</title><rect x="948.2" y="627.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="951.2" y="638.0"></text>
</g>
<g>
<title>sched_yield (12 samples, 0.18%)</title><rect x="948.9" y="627.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="951.9" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.16%)</title><rect x="949.0" y="611.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="952.0" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.16%)</title><rect x="949.0" y="595.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="952.0" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (4 samples, 0.06%)</title><rect x="950.2" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="953.2" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (4 samples, 0.06%)</title><rect x="950.2" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="953.2" y="574.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="950.2" y="547.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="953.2" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.06%)</title><rect x="950.2" y="531.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="953.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (4 samples, 0.06%)</title><rect x="950.9" y="643.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="953.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) [clone .plt] (2 samples, 0.03%)</title><rect x="951.6" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="954.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.03%)</title><rect x="952.0" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="955.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (5 samples, 0.07%)</title><rect x="952.3" y="643.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="955.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (5 samples, 0.07%)</title><rect x="953.4" y="643.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="956.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (4 samples, 0.06%)</title><rect x="954.4" y="643.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="957.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (10 samples, 0.15%)</title><rect x="955.1" y="643.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="958.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.03%)</title><rect x="956.9" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="959.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.03%)</title><rect x="957.2" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="960.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="957.5" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="960.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) [clone .plt] (2 samples, 0.03%)</title><rect x="957.9" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="960.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (10 samples, 0.15%)</title><rect x="958.4" y="643.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="961.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (3 samples, 0.04%)</title><rect x="960.2" y="659.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="963.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.06%)</title><rect x="960.9" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="963.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) [clone .plt] (4 samples, 0.06%)</title><rect x="961.5" y="659.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="964.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (30 samples, 0.44%)</title><rect x="962.2" y="659.0" width="5.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="965.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (6 samples, 0.09%)</title><rect x="962.2" y="643.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (2 samples, 0.03%)</title><rect x="963.3" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="966.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (2 samples, 0.03%)</title><rect x="963.6" y="643.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="966.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.04%)</title><rect x="964.2" y="643.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="967.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.13%)</title><rect x="964.7" y="643.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="967.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.03%)</title><rect x="965.4" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="968.4" y="638.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (2 samples, 0.03%)</title><rect x="965.9" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="968.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.03%)</title><rect x="966.2" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="969.2" y="654.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="966.6" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="969.6" y="654.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="967.1" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="970.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (4 samples, 0.06%)</title><rect x="967.5" y="659.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="970.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.03%)</title><rect x="968.2" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="971.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="968.5" y="659.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="971.5" y="670.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (6 samples, 0.09%)</title><rect x="968.8" y="659.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="971.8" y="670.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (4 samples, 0.06%)</title><rect x="969.9" y="659.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="972.9" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (8 samples, 0.12%)</title><rect x="970.6" y="659.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="973.6" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (4 samples, 0.06%)</title><rect x="972.2" y="659.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="975.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.10%)</title><rect x="973.0" y="675.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="976.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (4 samples, 0.06%)</title><rect x="974.4" y="675.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="977.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="975.1" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="978.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.04%)</title><rect x="975.5" y="675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="978.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (6 samples, 0.09%)</title><rect x="976.1" y="707.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="979.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.03%)</title><rect x="977.4" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="980.4" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="977.7" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="980.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (582 samples, 8.58%)</title><rect x="978.1" y="739.0" width="101.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="981.1" y="750.0">[unknown]</text>
</g>
<g>
<title>__GI_write (566 samples, 8.34%)</title><rect x="978.1" y="723.0" width="98.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="981.1" y="734.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (544 samples, 8.02%)</title><rect x="981.9" y="707.0" width="94.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.9" y="718.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.04%)</title><rect x="981.9" y="691.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="984.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (541 samples, 7.97%)</title><rect x="982.4" y="691.0" width="94.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="985.4" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (481 samples, 7.09%)</title><rect x="992.5" y="675.0" width="83.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="995.5" y="686.0">__x64_sys..</text>
</g>
<g>
<title>__f_unlock_pos (2 samples, 0.03%)</title><rect x="992.5" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="995.5" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="992.8" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="995.8" y="670.0"></text>
</g>
<g>
<title>ksys_write (477 samples, 7.03%)</title><rect x="993.2" y="659.0" width="82.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="996.2" y="670.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (19 samples, 0.28%)</title><rect x="994.4" y="643.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="997.4" y="654.0"></text>
</g>
<g>
<title>__fget_light (17 samples, 0.25%)</title><rect x="994.4" y="627.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="997.4" y="638.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.13%)</title><rect x="995.8" y="611.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.8" y="622.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="997.4" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1000.4" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="997.7" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1000.7" y="654.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="998.8" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.8" y="654.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="999.1" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.1" y="654.0"></text>
</g>
<g>
<title>vfs_write (441 samples, 6.50%)</title><rect x="999.4" y="643.0" width="76.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1002.4" y="654.0">vfs_write</text>
</g>
<g>
<title>__sb_start_write (7 samples, 0.10%)</title><rect x="1000.8" y="627.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1003.8" y="638.0"></text>
</g>
<g>
<title>__vfs_write (388 samples, 5.72%)</title><rect x="1002.1" y="627.0" width="67.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1005.1" y="638.0">__vfs_w..</text>
</g>
<g>
<title>new_sync_write (386 samples, 5.69%)</title><rect x="1002.4" y="611.0" width="67.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1005.4" y="622.0">new_syn..</text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 0.06%)</title><rect x="1003.1" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1006.1" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (378 samples, 5.57%)</title><rect x="1003.8" y="595.0" width="65.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1006.8" y="606.0">ext4_fi..</text>
</g>
<g>
<title>__generic_file_write_iter (356 samples, 5.25%)</title><rect x="1005.0" y="579.0" width="61.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1008.0" y="590.0">__gene..</text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.03%)</title><rect x="1007.6" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1010.6" y="574.0"></text>
</g>
<g>
<title>file_remove_privs (2 samples, 0.03%)</title><rect x="1008.0" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1011.0" y="574.0"></text>
</g>
<g>
<title>file_update_time (24 samples, 0.35%)</title><rect x="1008.3" y="563.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1011.3" y="574.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.06%)</title><rect x="1009.2" y="547.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1012.2" y="558.0"></text>
</g>
<g>
<title>generic_update_time (13 samples, 0.19%)</title><rect x="1009.9" y="547.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.9" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (13 samples, 0.19%)</title><rect x="1009.9" y="531.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1012.9" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (13 samples, 0.19%)</title><rect x="1009.9" y="515.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1012.9" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.06%)</title><rect x="1009.9" y="499.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1012.9" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.06%)</title><rect x="1009.9" y="483.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1012.9" y="494.0"></text>
</g>
<g>
<title>start_this_handle (3 samples, 0.04%)</title><rect x="1010.1" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1013.1" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.04%)</title><rect x="1010.6" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1013.6" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="1010.7" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1013.7" y="494.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.03%)</title><rect x="1010.7" y="467.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1013.7" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1010.7" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1013.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="1010.7" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1013.7" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (6 samples, 0.09%)</title><rect x="1011.1" y="499.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.1" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.06%)</title><rect x="1011.3" y="483.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1014.3" y="494.0"></text>
</g>
<g>
<title>ext4_do_update_inode (4 samples, 0.06%)</title><rect x="1011.3" y="467.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1014.3" y="478.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="1012.1" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1015.1" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (308 samples, 4.54%)</title><rect x="1012.5" y="563.0" width="53.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1015.5" y="574.0">gener..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (4 samples, 0.06%)</title><rect x="1013.4" y="547.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1016.4" y="558.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="1014.1" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1017.1" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (91 samples, 1.34%)</title><rect x="1014.4" y="547.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1017.4" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (40 samples, 0.59%)</title><rect x="1015.6" y="531.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1018.6" y="542.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.03%)</title><rect x="1015.6" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1018.6" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (36 samples, 0.53%)</title><rect x="1016.0" y="515.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1019.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (8 samples, 0.12%)</title><rect x="1016.5" y="499.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1019.5" y="510.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (4 samples, 0.06%)</title><rect x="1017.9" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1020.9" y="510.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.04%)</title><rect x="1018.6" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1021.6" y="510.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.03%)</title><rect x="1019.1" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1022.1" y="510.0"></text>
</g>
<g>
<title>start_this_handle (16 samples, 0.24%)</title><rect x="1019.4" y="499.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1022.4" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (7 samples, 0.10%)</title><rect x="1021.0" y="483.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1024.0" y="494.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.03%)</title><rect x="1022.2" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1025.2" y="526.0"></text>
</g>
<g>
<title>ext4_block_write_begin (12 samples, 0.18%)</title><rect x="1022.6" y="531.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1025.6" y="542.0"></text>
</g>
<g>
<title>ext4_nonda_switch (5 samples, 0.07%)</title><rect x="1024.7" y="531.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1027.7" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (22 samples, 0.32%)</title><rect x="1025.5" y="531.0" width="3.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1028.5" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (21 samples, 0.31%)</title><rect x="1025.5" y="515.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1028.5" y="526.0"></text>
</g>
<g>
<title>find_get_entry (16 samples, 0.24%)</title><rect x="1026.0" y="499.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.0" y="510.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.12%)</title><rect x="1027.3" y="483.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.3" y="494.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="1028.3" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1031.3" y="478.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.03%)</title><rect x="1028.8" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1031.8" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.03%)</title><rect x="1029.5" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1032.5" y="542.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="1029.9" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1032.9" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (174 samples, 2.56%)</title><rect x="1030.2" y="547.0" width="30.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1033.2" y="558.0">ex..</text>
</g>
<g>
<title>__ext4_journal_stop (34 samples, 0.50%)</title><rect x="1030.9" y="531.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1033.9" y="542.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.03%)</title><rect x="1030.9" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1033.9" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (32 samples, 0.47%)</title><rect x="1031.3" y="515.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1034.3" y="526.0"></text>
</g>
<g>
<title>__wake_up (14 samples, 0.21%)</title><rect x="1032.3" y="499.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1035.3" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.18%)</title><rect x="1032.3" y="483.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1035.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.13%)</title><rect x="1032.8" y="467.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.8" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1034.7" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1037.7" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.15%)</title><rect x="1035.1" y="499.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1038.1" y="510.0"></text>
</g>
<g>
<title>generic_write_end (134 samples, 1.97%)</title><rect x="1037.2" y="531.0" width="23.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1040.2" y="542.0">g..</text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.03%)</title><rect x="1037.2" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1040.2" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (123 samples, 1.81%)</title><rect x="1037.5" y="515.0" width="21.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1040.5" y="526.0">_..</text>
</g>
<g>
<title>__mark_inode_dirty (120 samples, 1.77%)</title><rect x="1037.7" y="499.0" width="20.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1040.7" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (116 samples, 1.71%)</title><rect x="1038.2" y="483.0" width="20.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1041.2" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.06%)</title><rect x="1038.4" y="467.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1041.4" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.03%)</title><rect x="1038.7" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1041.7" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_stop (6 samples, 0.09%)</title><rect x="1039.1" y="467.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1042.1" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.06%)</title><rect x="1039.4" y="451.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.4" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (104 samples, 1.53%)</title><rect x="1040.1" y="467.0" width="18.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1043.1" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.03%)</title><rect x="1040.7" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1043.7" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.03%)</title><rect x="1041.0" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1044.0" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (68 samples, 1.00%)</title><rect x="1041.3" y="451.0" width="11.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.3" y="462.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (4 samples, 0.06%)</title><rect x="1041.3" y="435.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1044.3" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (60 samples, 0.88%)</title><rect x="1042.2" y="435.0" width="10.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1045.2" y="446.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (7 samples, 0.10%)</title><rect x="1045.5" y="419.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1048.5" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (4 samples, 0.06%)</title><rect x="1046.0" y="403.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1049.0" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (26 samples, 0.38%)</title><rect x="1047.1" y="419.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1050.1" y="430.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.03%)</title><rect x="1047.4" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1050.4" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (22 samples, 0.32%)</title><rect x="1047.8" y="403.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1050.8" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (18 samples, 0.27%)</title><rect x="1048.5" y="387.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1051.5" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (10 samples, 0.15%)</title><rect x="1049.9" y="371.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1052.9" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.04%)</title><rect x="1051.8" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1054.8" y="430.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.03%)</title><rect x="1052.3" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1055.3" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.04%)</title><rect x="1052.6" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1055.6" y="446.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (29 samples, 0.43%)</title><rect x="1053.2" y="451.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1056.2" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (17 samples, 0.25%)</title><rect x="1053.7" y="435.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1056.7" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (7 samples, 0.10%)</title><rect x="1054.2" y="419.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1057.2" y="430.0"></text>
</g>
<g>
<title>__find_get_block (7 samples, 0.10%)</title><rect x="1054.2" y="403.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1057.2" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.03%)</title><rect x="1055.1" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.1" y="398.0"></text>
</g>
<g>
<title>ext4_get_group_desc (6 samples, 0.09%)</title><rect x="1055.6" y="419.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1058.6" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.07%)</title><rect x="1056.6" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1059.6" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.03%)</title><rect x="1057.0" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1060.0" y="430.0"></text>
</g>
<g>
<title>ext4_inode_table (3 samples, 0.04%)</title><rect x="1057.5" y="435.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1060.5" y="446.0"></text>
</g>
<g>
<title>block_write_end (9 samples, 0.13%)</title><rect x="1058.9" y="515.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1061.9" y="526.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (5 samples, 0.07%)</title><rect x="1059.1" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1062.1" y="510.0"></text>
</g>
<g>
<title>mark_buffer_dirty (3 samples, 0.04%)</title><rect x="1060.0" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.0" y="510.0"></text>
</g>
<g>
<title>ext4_nonda_switch (4 samples, 0.06%)</title><rect x="1060.5" y="547.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.5" y="558.0"></text>
</g>
<g>
<title>generic_write_end (3 samples, 0.04%)</title><rect x="1061.2" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1064.2" y="558.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.04%)</title><rect x="1061.7" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.7" y="558.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (10 samples, 0.15%)</title><rect x="1062.4" y="547.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1065.4" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="1062.9" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1065.9" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.06%)</title><rect x="1063.3" y="531.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1066.3" y="542.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (11 samples, 0.16%)</title><rect x="1064.1" y="547.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.1" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (4 samples, 0.06%)</title><rect x="1066.0" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1069.0" y="574.0"></text>
</g>
<g>
<title>down_write_trylock (2 samples, 0.03%)</title><rect x="1066.9" y="579.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1069.9" y="590.0"></text>
</g>
<g>
<title>ext4_write_checks (10 samples, 0.15%)</title><rect x="1067.3" y="579.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.3" y="590.0"></text>
</g>
<g>
<title>generic_write_check_limits (2 samples, 0.03%)</title><rect x="1067.3" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1070.3" y="574.0"></text>
</g>
<g>
<title>generic_write_checks (8 samples, 0.12%)</title><rect x="1067.6" y="563.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1070.6" y="574.0"></text>
</g>
<g>
<title>generic_write_check_limits (6 samples, 0.09%)</title><rect x="1067.9" y="547.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1070.9" y="558.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.03%)</title><rect x="1069.2" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1072.2" y="590.0"></text>
</g>
<g>
<title>fsnotify (10 samples, 0.15%)</title><rect x="1069.5" y="627.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1072.5" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (28 samples, 0.41%)</title><rect x="1071.3" y="627.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1074.3" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.03%)</title><rect x="1072.1" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1075.1" y="622.0"></text>
</g>
<g>
<title>security_file_permission (21 samples, 0.31%)</title><rect x="1072.5" y="611.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1075.5" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (17 samples, 0.25%)</title><rect x="1072.5" y="595.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1075.5" y="606.0"></text>
</g>
<g>
<title>common_file_perm (17 samples, 0.25%)</title><rect x="1072.5" y="579.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1075.5" y="590.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.06%)</title><rect x="1075.4" y="595.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1078.4" y="606.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.03%)</title><rect x="1076.1" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1079.1" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.06%)</title><rect x="1076.5" y="723.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1079.5" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="1077.7" y="723.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1080.7" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (3 samples, 0.04%)</title><rect x="1078.0" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.0" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.03%)</title><rect x="1078.7" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1081.7" y="734.0"></text>
</g>
<g>
<title>__libc_free (7 samples, 0.10%)</title><rect x="1079.3" y="739.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1082.3" y="750.0"></text>
</g>
<g>
<title>__malloc (16 samples, 0.24%)</title><rect x="1080.5" y="739.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1083.5" y="750.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (7 samples, 0.10%)</title><rect x="1083.2" y="739.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1086.2" y="750.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (6 samples, 0.09%)</title><rect x="1084.5" y="739.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1087.5" y="750.0"></text>
</g>
<g>
<title>memset@plt (2 samples, 0.03%)</title><rect x="1085.5" y="739.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1088.5" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (5 samples, 0.07%)</title><rect x="1085.9" y="739.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1088.9" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) [clone .plt] (2 samples, 0.03%)</title><rect x="1086.7" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.7" y="750.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (5 samples, 0.07%)</title><rect x="1087.1" y="739.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.1" y="750.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (3 samples, 0.04%)</title><rect x="1087.9" y="739.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1090.9" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (13 samples, 0.19%)</title><rect x="1088.6" y="755.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1091.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.09%)</title><rect x="1088.8" y="739.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1091.8" y="750.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.09%)</title><rect x="1089.9" y="739.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1092.9" y="750.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.09%)</title><rect x="1089.9" y="723.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1092.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (45 samples, 0.66%)</title><rect x="1090.9" y="771.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.9" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="1098.0" y="755.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1101.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (28 samples, 0.41%)</title><rect x="1098.9" y="835.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (28 samples, 0.41%)</title><rect x="1098.9" y="819.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.13%)</title><rect x="1098.9" y="803.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (19 samples, 0.28%)</title><rect x="1100.5" y="803.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1103.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (19 samples, 0.28%)</title><rect x="1100.5" y="787.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (19 samples, 0.28%)</title><rect x="1100.5" y="771.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (45 samples, 0.66%)</title><rect x="1103.8" y="867.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21 samples, 0.31%)</title><rect x="1105.7" y="851.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.29%)</title><rect x="1105.9" y="835.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1108.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.29%)</title><rect x="1105.9" y="819.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1108.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (20 samples, 0.29%)</title><rect x="1105.9" y="803.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (13 samples, 0.19%)</title><rect x="1109.3" y="851.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (95 samples, 1.40%)</title><rect x="1111.6" y="867.0" width="16.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (27 samples, 0.40%)</title><rect x="1123.4" y="851.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (27 samples, 0.40%)</title><rect x="1123.4" y="835.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.4" y="846.0"></text>
</g>
<g>
<title>itable stub (12 samples, 0.18%)</title><rect x="1125.7" y="819.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1128.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="1127.8" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="1127.8" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.8" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="1127.8" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.8" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.03%)</title><rect x="1127.8" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.07%)</title><rect x="1128.1" y="867.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.07%)</title><rect x="1128.1" y="851.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1131.1" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="1128.5" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.5" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1128.5" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.5" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="1128.5" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.5" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1128.5" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.04%)</title><rect x="1129.0" y="883.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (328 samples, 4.83%)</title><rect x="1129.5" y="883.0" width="57.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.5" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (321 samples, 4.73%)</title><rect x="1130.7" y="867.0" width="55.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.7" y="878.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (71 samples, 1.05%)</title><rect x="1132.3" y="851.0" width="12.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1135.3" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (14 samples, 0.21%)</title><rect x="1133.3" y="835.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1136.3" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1135.8" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.8" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="1136.1" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.1" y="846.0"></text>
</g>
<g>
<title>__memmove_ssse3 (18 samples, 0.27%)</title><rect x="1136.6" y="835.0" width="3.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1139.6" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (21 samples, 0.31%)</title><rect x="1139.8" y="835.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1142.8" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1141.1" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.1" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="1141.5" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.06%)</title><rect x="1142.0" y="819.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.0" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="1142.7" y="819.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1145.7" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.06%)</title><rect x="1142.7" y="803.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1145.7" y="814.0"></text>
</g>
<g>
<title>memmove@plt (4 samples, 0.06%)</title><rect x="1143.4" y="835.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1146.4" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.04%)</title><rect x="1144.1" y="835.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.1" y="846.0"></text>
</g>
<g>
<title>__GI___recv (233 samples, 3.43%)</title><rect x="1144.6" y="851.0" width="40.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1147.6" y="862.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (212 samples, 3.12%)</title><rect x="1148.3" y="835.0" width="36.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.3" y="846.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.04%)</title><rect x="1148.3" y="819.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (209 samples, 3.08%)</title><rect x="1148.8" y="819.0" width="36.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1151.8" y="830.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.04%)</title><rect x="1157.5" y="803.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1160.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (156 samples, 2.30%)</title><rect x="1158.0" y="803.0" width="27.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1161.0" y="814.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (152 samples, 2.24%)</title><rect x="1158.0" y="787.0" width="26.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1161.0" y="798.0">_..</text>
</g>
<g>
<title>sock_recvmsg (134 samples, 1.97%)</title><rect x="1159.1" y="771.0" width="23.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1162.1" y="782.0">s..</text>
</g>
<g>
<title>inet_recvmsg (112 samples, 1.65%)</title><rect x="1159.6" y="755.0" width="19.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.6" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.03%)</title><rect x="1160.1" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.1" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (106 samples, 1.56%)</title><rect x="1160.6" y="739.0" width="18.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1163.6" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.18%)</title><rect x="1165.5" y="723.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.5" y="734.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1165.5" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1168.5" y="718.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.07%)</title><rect x="1165.8" y="707.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1168.8" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.04%)</title><rect x="1166.0" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.0" y="702.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="1166.7" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1169.7" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.04%)</title><rect x="1167.1" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.1" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="1167.6" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1170.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.03%)</title><rect x="1168.1" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1171.1" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="1168.6" y="723.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1171.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1169.0" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1172.0" y="718.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1169.3" y="723.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1172.3" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (35 samples, 0.52%)</title><rect x="1169.7" y="723.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1172.7" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (32 samples, 0.47%)</title><rect x="1169.7" y="707.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1172.7" y="718.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="1170.2" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1173.2" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (25 samples, 0.37%)</title><rect x="1170.9" y="691.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.9" y="702.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.15%)</title><rect x="1170.9" y="675.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1173.9" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.07%)</title><rect x="1171.6" y="659.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1174.6" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.07%)</title><rect x="1172.6" y="675.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1175.6" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.13%)</title><rect x="1173.5" y="675.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1176.5" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.12%)</title><rect x="1173.7" y="659.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1176.7" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.03%)</title><rect x="1175.4" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.4" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (9 samples, 0.13%)</title><rect x="1175.7" y="723.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1178.7" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (8 samples, 0.12%)</title><rect x="1177.5" y="723.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.5" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.09%)</title><rect x="1177.8" y="707.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.8" y="718.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="1177.8" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.8" y="702.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="1178.4" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.4" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.24%)</title><rect x="1179.0" y="755.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.0" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.06%)</title><rect x="1179.0" y="739.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.0" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (12 samples, 0.18%)</title><rect x="1179.7" y="739.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1182.7" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (11 samples, 0.16%)</title><rect x="1179.9" y="723.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.9" y="734.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="1180.3" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1183.3" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.10%)</title><rect x="1180.6" y="707.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1183.6" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.04%)</title><rect x="1181.8" y="755.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1184.8" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.18%)</title><rect x="1182.4" y="771.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1185.4" y="782.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.16%)</title><rect x="1182.5" y="755.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1185.5" y="766.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.15%)</title><rect x="1182.7" y="739.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.13%)</title><rect x="1182.9" y="723.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.9" y="734.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="1184.6" y="787.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.6" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.10%)</title><rect x="1185.3" y="851.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1188.3" y="862.0"></text>
</g>
<g>
<title>start_thread (20 samples, 0.29%)</title><rect x="1186.5" y="931.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1189.5" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (20 samples, 0.29%)</title><rect x="1186.5" y="915.0" width="3.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1189.5" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (20 samples, 0.29%)</title><rect x="1186.5" y="899.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 0.13%)</title><rect x="1186.5" y="883.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.13%)</title><rect x="1186.5" y="867.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.5" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.04%)</title><rect x="1186.5" y="851.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="862.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.04%)</title><rect x="1186.5" y="835.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1189.5" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.07%)</title><rect x="1187.2" y="851.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.2" y="862.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.03%)</title><rect x="1187.7" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>JavaThread::run() (8 samples, 0.12%)</title><rect x="1188.1" y="883.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (8 samples, 0.12%)</title><rect x="1188.1" y="867.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="878.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (8 samples, 0.12%)</title><rect x="1188.1" y="851.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.12%)</title><rect x="1188.1" y="835.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="846.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (8 samples, 0.12%)</title><rect x="1188.1" y="819.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="830.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 0.07%)</title><rect x="1188.1" y="803.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.1" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.04%)</title><rect x="1188.4" y="787.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.4" y="798.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.03%)</title><rect x="1189.0" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.5" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.5" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
</g>
</svg>
