<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Java async client | RAM</text>
<text id="details" x="10" y="757"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="757"> </text>
<g id="frames">
<g>
<title>all (217,241 samples, 100.00%)</title><rect x="10.0" y="723.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="734.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (137,660 samples, 63.37%)</title><rect x="10.0" y="707.0" width="747.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (90,272 samples, 41.55%)</title><rect x="10.0" y="691.0" width="490.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils$$Lambda$120/1292373631.get (90,272 samples, 41.55%)</title><rect x="10.0" y="675.0" width="490.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="686.0">ru/mail/polis/service/codearound/FutureUtils$$Lambda$120/1292373631...</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.lambda$execLocalRequest$0 (90,272 samples, 41.55%)</title><rect x="10.0" y="659.0" width="490.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="670.0">ru/mail/polis/service/codearound/FutureUtils.lambda$execLocalRequest$0</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.getKeyFromRequest (90,268 samples, 41.55%)</title><rect x="10.0" y="643.0" width="490.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="654.0">ru/mail/polis/service/codearound/FutureUtils.getKeyFromRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (90,268 samples, 41.55%)</title><rect x="10.0" y="627.0" width="490.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="638.0">one/nio/http/Request.getParameter</text>
</g>
<g>
<title>java/lang/String.substring (90,268 samples, 41.55%)</title><rect x="10.0" y="611.0" width="490.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/lang/String.substring</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (90,268 samples, 41.55%)</title><rect x="10.0" y="595.0" width="490.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="606.0">java/lang/StringLatin1.newString</text>
</g>
<g>
<title>java.lang.String (90,266 samples, 41.55%)</title><rect x="10.0" y="579.0" width="490.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="590.0">java.lang.String</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (30,072 samples, 13.84%)</title><rect x="500.3" y="691.0" width="163.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.3" y="702.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (30,072 samples, 13.84%)</title><rect x="500.3" y="675.0" width="163.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.3" y="686.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (30,072 samples, 13.84%)</title><rect x="500.3" y="659.0" width="163.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="503.3" y="670.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (30,072 samples, 13.84%)</title><rect x="500.3" y="643.0" width="163.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.3" y="654.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (30,072 samples, 13.84%)</title><rect x="500.3" y="627.0" width="163.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.3" y="638.0">java/util/concurrent/..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$137/848525815.accept (30,072 samples, 13.84%)</title><rect x="500.3" y="611.0" width="163.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.3" y="622.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$upsertWithMultipleNodes$2 (30,072 samples, 13.84%)</title><rect x="500.3" y="595.0" width="163.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.3" y="606.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execUpsertWithFutures (30,072 samples, 13.84%)</title><rect x="500.3" y="579.0" width="163.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="503.3" y="590.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one.nio.http.Response (30,071 samples, 13.84%)</title><rect x="500.3" y="563.0" width="163.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="503.3" y="574.0">one.nio.http.Response</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,316 samples, 7.97%)</title><rect x="663.7" y="691.0" width="94.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.7" y="702.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,316 samples, 7.97%)</title><rect x="663.7" y="675.0" width="94.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.7" y="686.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7,983 samples, 3.67%)</title><rect x="663.7" y="659.0" width="43.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.7" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,983 samples, 3.67%)</title><rect x="663.7" y="643.0" width="43.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.7" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7,983 samples, 3.67%)</title><rect x="663.7" y="627.0" width="43.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.7" y="638.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1557312951.apply (7,937 samples, 3.65%)</title><rect x="663.9" y="611.0" width="43.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.9" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (7,937 samples, 3.65%)</title><rect x="663.9" y="595.0" width="43.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.9" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (7,937 samples, 3.65%)</title><rect x="663.9" y="579.0" width="43.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.9" y="590.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.02%)</title><rect x="663.9" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.02%)</title><rect x="663.9" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (123 samples, 0.06%)</title><rect x="664.2" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (123 samples, 0.06%)</title><rect x="664.2" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (62 samples, 0.03%)</title><rect x="664.2" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="667.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.03%)</title><rect x="664.6" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.03%)</title><rect x="664.6" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="667.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.03%)</title><rect x="664.6" y="499.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="667.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (201 samples, 0.09%)</title><rect x="664.9" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (201 samples, 0.09%)</title><rect x="664.9" y="547.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (108 samples, 0.05%)</title><rect x="664.9" y="531.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="667.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.04%)</title><rect x="665.5" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (93 samples, 0.04%)</title><rect x="665.5" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (93 samples, 0.04%)</title><rect x="665.5" y="499.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="668.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (7,358 samples, 3.39%)</title><rect x="666.0" y="563.0" width="40.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.0" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (7,358 samples, 3.39%)</title><rect x="666.0" y="547.0" width="40.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.0" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (7,358 samples, 3.39%)</title><rect x="666.0" y="531.0" width="40.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.0" y="542.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.04%)</title><rect x="666.0" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.04%)</title><rect x="666.0" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,165 samples, 2.38%)</title><rect x="666.5" y="515.0" width="28.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.5" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,165 samples, 2.38%)</title><rect x="666.5" y="499.0" width="28.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.5" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,108 samples, 2.35%)</title><rect x="666.5" y="483.0" width="27.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.5" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1014279463.apply (5,108 samples, 2.35%)</title><rect x="666.5" y="467.0" width="27.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.5" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,108 samples, 2.35%)</title><rect x="666.5" y="451.0" width="27.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.5" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,108 samples, 2.35%)</title><rect x="666.5" y="435.0" width="27.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.5" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/885247476.apply (5,108 samples, 2.35%)</title><rect x="666.5" y="419.0" width="27.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.5" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,108 samples, 2.35%)</title><rect x="666.5" y="403.0" width="27.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.5" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (145 samples, 0.07%)</title><rect x="666.7" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (145 samples, 0.07%)</title><rect x="666.7" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (82 samples, 0.04%)</title><rect x="666.7" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="669.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.03%)</title><rect x="667.2" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.03%)</title><rect x="667.2" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.03%)</title><rect x="667.2" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="670.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (116 samples, 0.05%)</title><rect x="667.5" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (116 samples, 0.05%)</title><rect x="667.5" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (56 samples, 0.03%)</title><rect x="667.5" y="355.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="670.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.03%)</title><rect x="667.8" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.03%)</title><rect x="667.8" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.03%)</title><rect x="667.8" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="670.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,801 samples, 2.21%)</title><rect x="668.2" y="387.0" width="26.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.2" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.02%)</title><rect x="668.2" y="371.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.02%)</title><rect x="668.2" y="355.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,923 samples, 1.81%)</title><rect x="668.4" y="371.0" width="21.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.4" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,923 samples, 1.81%)</title><rect x="668.4" y="355.0" width="21.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.4" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (61 samples, 0.03%)</title><rect x="668.4" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="671.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$175/1685208549.apply (3,758 samples, 1.73%)</title><rect x="668.8" y="339.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,758 samples, 1.73%)</title><rect x="668.8" y="323.0" width="20.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (122 samples, 0.06%)</title><rect x="668.9" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (122 samples, 0.06%)</title><rect x="668.9" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.9" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (71 samples, 0.03%)</title><rect x="668.9" y="275.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="671.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.02%)</title><rect x="669.3" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.02%)</title><rect x="669.3" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.02%)</title><rect x="669.3" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="672.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.02%)</title><rect x="669.6" y="307.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="672.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (71 samples, 0.03%)</title><rect x="669.8" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (125 samples, 0.06%)</title><rect x="670.2" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (125 samples, 0.06%)</title><rect x="670.2" y="291.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (79 samples, 0.04%)</title><rect x="670.5" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (79 samples, 0.04%)</title><rect x="670.5" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (67 samples, 0.03%)</title><rect x="670.5" y="243.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="673.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,365 samples, 1.55%)</title><rect x="670.9" y="307.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.9" y="318.0"></text>
</g>
<g>
<title>java/lang/Long.toString (75 samples, 0.03%)</title><rect x="671.1" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (261 samples, 0.12%)</title><rect x="671.5" y="291.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (261 samples, 0.12%)</title><rect x="671.5" y="275.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (261 samples, 0.12%)</title><rect x="671.5" y="259.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.5" y="270.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.12%)</title><rect x="671.5" y="243.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="674.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (123 samples, 0.06%)</title><rect x="672.9" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.9" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (123 samples, 0.06%)</title><rect x="672.9" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.9" y="286.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.06%)</title><rect x="672.9" y="259.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="675.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (259 samples, 0.12%)</title><rect x="673.6" y="291.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (259 samples, 0.12%)</title><rect x="673.6" y="275.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.6" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (259 samples, 0.12%)</title><rect x="673.6" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.6" y="270.0"></text>
</g>
<g>
<title>byte[] (259 samples, 0.12%)</title><rect x="673.6" y="243.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="676.6" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (87 samples, 0.04%)</title><rect x="675.0" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (87 samples, 0.04%)</title><rect x="675.0" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.0" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (87 samples, 0.04%)</title><rect x="675.0" y="259.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="678.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,008 samples, 0.92%)</title><rect x="675.6" y="291.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.6" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (51 samples, 0.02%)</title><rect x="675.6" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.02%)</title><rect x="675.6" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.02%)</title><rect x="675.6" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.6" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$191/1521704547.get$Lambda (51 samples, 0.02%)</title><rect x="675.6" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.6" y="238.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$191 (51 samples, 0.02%)</title><rect x="675.6" y="211.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="678.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,085 samples, 0.50%)</title><rect x="675.9" y="275.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (674 samples, 0.31%)</title><rect x="675.9" y="259.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.9" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (674 samples, 0.31%)</title><rect x="675.9" y="243.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.9" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (674 samples, 0.31%)</title><rect x="675.9" y="227.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.9" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (674 samples, 0.31%)</title><rect x="675.9" y="211.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.9" y="222.0"></text>
</g>
<g>
<title>byte[] (674 samples, 0.31%)</title><rect x="675.9" y="195.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="678.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (96 samples, 0.04%)</title><rect x="679.6" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.6" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (96 samples, 0.04%)</title><rect x="679.6" y="243.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (96 samples, 0.04%)</title><rect x="679.6" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (96 samples, 0.04%)</title><rect x="679.6" y="211.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="682.6" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (91 samples, 0.04%)</title><rect x="680.1" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.1" y="270.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (56 samples, 0.03%)</title><rect x="680.1" y="243.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="683.1" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$191/1521704547.test (224 samples, 0.10%)</title><rect x="680.6" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.6" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (224 samples, 0.10%)</title><rect x="680.6" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/27319466.test (224 samples, 0.10%)</title><rect x="680.6" y="227.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (224 samples, 0.10%)</title><rect x="680.6" y="211.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.6" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1627857534.test (224 samples, 0.10%)</title><rect x="680.6" y="195.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.6" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (224 samples, 0.10%)</title><rect x="680.6" y="179.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/728258269.test (224 samples, 0.10%)</title><rect x="680.6" y="163.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (224 samples, 0.10%)</title><rect x="680.6" y="147.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (224 samples, 0.10%)</title><rect x="680.6" y="131.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (224 samples, 0.10%)</title><rect x="680.6" y="115.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.05%)</title><rect x="680.6" y="99.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="683.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (122 samples, 0.06%)</title><rect x="681.1" y="99.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.1" y="110.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.06%)</title><rect x="681.1" y="83.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="684.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (872 samples, 0.40%)</title><rect x="681.8" y="275.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (872 samples, 0.40%)</title><rect x="681.8" y="259.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (872 samples, 0.40%)</title><rect x="681.8" y="243.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (81 samples, 0.04%)</title><rect x="682.1" y="227.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="685.1" y="238.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (50 samples, 0.02%)</title><rect x="682.9" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.9" y="238.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (50 samples, 0.02%)</title><rect x="682.9" y="211.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="685.9" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (536 samples, 0.25%)</title><rect x="683.2" y="227.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.2" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (536 samples, 0.25%)</title><rect x="683.2" y="211.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (536 samples, 0.25%)</title><rect x="683.2" y="195.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (103 samples, 0.05%)</title><rect x="683.2" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.2" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (103 samples, 0.05%)</title><rect x="683.2" y="163.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.2" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (103 samples, 0.05%)</title><rect x="683.2" y="147.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.05%)</title><rect x="683.2" y="131.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.05%)</title><rect x="683.2" y="115.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.05%)</title><rect x="683.2" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.2" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.05%)</title><rect x="683.2" y="83.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (103 samples, 0.05%)</title><rect x="683.2" y="67.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.2" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.05%)</title><rect x="683.2" y="51.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="686.2" y="62.0"></text>
</g>
<g>
<title>java/util/List.copyOf (234 samples, 0.11%)</title><rect x="683.8" y="179.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.8" y="190.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (234 samples, 0.11%)</title><rect x="683.8" y="163.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (129 samples, 0.06%)</title><rect x="683.8" y="147.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (129 samples, 0.06%)</title><rect x="683.8" y="131.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.8" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (129 samples, 0.06%)</title><rect x="683.8" y="115.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="686.8" y="126.0"></text>
</g>
<g>
<title>java/util/List.of (105 samples, 0.05%)</title><rect x="684.5" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.5" y="158.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (105 samples, 0.05%)</title><rect x="684.5" y="131.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="687.5" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (199 samples, 0.09%)</title><rect x="685.0" y="179.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.0" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (199 samples, 0.09%)</title><rect x="685.0" y="163.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="688.0" y="174.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (74 samples, 0.03%)</title><rect x="686.1" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (74 samples, 0.03%)</title><rect x="686.1" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="689.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (108 samples, 0.05%)</title><rect x="686.5" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.04%)</title><rect x="686.7" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (82 samples, 0.04%)</title><rect x="686.7" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1177377518.invoke (82 samples, 0.04%)</title><rect x="686.7" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.04%)</title><rect x="686.7" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (54 samples, 0.02%)</title><rect x="686.8" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (54 samples, 0.02%)</title><rect x="686.8" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.8" y="206.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.02%)</title><rect x="686.8" y="179.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="689.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (108 samples, 0.05%)</title><rect x="687.1" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (108 samples, 0.05%)</title><rect x="687.1" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.05%)</title><rect x="687.1" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (108 samples, 0.05%)</title><rect x="687.1" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1177377518.invoke (108 samples, 0.05%)</title><rect x="687.1" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.05%)</title><rect x="687.1" y="211.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (71 samples, 0.03%)</title><rect x="687.3" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (71 samples, 0.03%)</title><rect x="687.3" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.3" y="190.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.03%)</title><rect x="687.3" y="163.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="690.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (271 samples, 0.12%)</title><rect x="687.7" y="291.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.7" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (90 samples, 0.04%)</title><rect x="687.7" y="275.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="690.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (75 samples, 0.03%)</title><rect x="688.2" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (75 samples, 0.03%)</title><rect x="688.2" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="691.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (106 samples, 0.05%)</title><rect x="688.6" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.6" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (106 samples, 0.05%)</title><rect x="688.6" y="259.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="691.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.05%)</title><rect x="689.2" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (104 samples, 0.05%)</title><rect x="689.2" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (104 samples, 0.05%)</title><rect x="689.2" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="692.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (134 samples, 0.06%)</title><rect x="689.7" y="371.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="692.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.03%)</title><rect x="690.5" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="693.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (631 samples, 0.29%)</title><rect x="690.8" y="371.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.03%)</title><rect x="690.8" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.03%)</title><rect x="690.8" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (53 samples, 0.02%)</title><rect x="691.1" y="355.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="694.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (52 samples, 0.02%)</title><rect x="691.4" y="355.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="694.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (76 samples, 0.03%)</title><rect x="691.7" y="355.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="694.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (164 samples, 0.08%)</title><rect x="692.1" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (164 samples, 0.08%)</title><rect x="692.1" y="339.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (164 samples, 0.08%)</title><rect x="692.1" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (164 samples, 0.08%)</title><rect x="692.1" y="307.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (164 samples, 0.08%)</title><rect x="692.1" y="291.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (164 samples, 0.08%)</title><rect x="692.1" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (164 samples, 0.08%)</title><rect x="692.1" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (164 samples, 0.08%)</title><rect x="692.1" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (164 samples, 0.08%)</title><rect x="692.1" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.02%)</title><rect x="692.1" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.02%)</title><rect x="692.1" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.1" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (58 samples, 0.03%)</title><rect x="692.4" y="211.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="695.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (59 samples, 0.03%)</title><rect x="692.7" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (59 samples, 0.03%)</title><rect x="692.7" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (186 samples, 0.09%)</title><rect x="693.0" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.0" y="366.0"></text>
</g>
<g>
<title>java.util.HashMap (81 samples, 0.04%)</title><rect x="693.2" y="339.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="696.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (66 samples, 0.03%)</title><rect x="693.7" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (66 samples, 0.03%)</title><rect x="693.7" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.7" y="334.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.03%)</title><rect x="693.7" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="696.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.03%)</title><rect x="694.2" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.03%)</title><rect x="694.2" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.03%)</title><rect x="694.2" y="451.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="697.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (100 samples, 0.05%)</title><rect x="694.5" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (100 samples, 0.05%)</title><rect x="694.5" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (50 samples, 0.02%)</title><rect x="694.5" y="483.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="697.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.02%)</title><rect x="694.8" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.02%)</title><rect x="694.8" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.02%)</title><rect x="694.8" y="451.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="697.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (2,000 samples, 0.92%)</title><rect x="695.1" y="515.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.03%)</title><rect x="695.1" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.03%)</title><rect x="695.1" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (97 samples, 0.04%)</title><rect x="695.4" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (97 samples, 0.04%)</title><rect x="695.4" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$162/766100649.apply (48 samples, 0.02%)</title><rect x="695.4" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (48 samples, 0.02%)</title><rect x="695.4" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (48 samples, 0.02%)</title><rect x="695.4" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.02%)</title><rect x="695.4" y="419.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="698.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.02%)</title><rect x="695.7" y="467.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.02%)</title><rect x="695.7" y="451.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.02%)</title><rect x="695.7" y="435.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="698.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (51 samples, 0.02%)</title><rect x="695.9" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (51 samples, 0.02%)</title><rect x="695.9" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.02%)</title><rect x="695.9" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.02%)</title><rect x="695.9" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.02%)</title><rect x="695.9" y="435.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="698.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,792 samples, 0.82%)</title><rect x="696.2" y="499.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,792 samples, 0.82%)</title><rect x="696.2" y="483.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (154 samples, 0.07%)</title><rect x="696.2" y="467.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="699.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,593 samples, 0.73%)</title><rect x="697.1" y="467.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.1" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (53 samples, 0.02%)</title><rect x="697.7" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (53 samples, 0.02%)</title><rect x="697.7" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.7" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (53 samples, 0.02%)</title><rect x="697.7" y="419.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="700.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (114 samples, 0.05%)</title><rect x="698.1" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="701.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (80 samples, 0.04%)</title><rect x="698.8" y="451.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="701.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (92 samples, 0.04%)</title><rect x="699.2" y="451.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="702.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (119 samples, 0.05%)</title><rect x="699.7" y="451.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="702.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (467 samples, 0.21%)</title><rect x="700.3" y="451.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (186 samples, 0.09%)</title><rect x="701.9" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (51 samples, 0.02%)</title><rect x="702.0" y="419.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="705.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (81 samples, 0.04%)</title><rect x="702.4" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (319 samples, 0.15%)</title><rect x="702.9" y="451.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (176 samples, 0.08%)</title><rect x="703.7" y="435.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (77 samples, 0.04%)</title><rect x="704.2" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (131 samples, 0.06%)</title><rect x="705.0" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.0" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (98 samples, 0.05%)</title><rect x="705.2" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$143/1532545.run (98 samples, 0.05%)</title><rect x="705.2" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (98 samples, 0.05%)</title><rect x="705.2" y="403.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.2" y="414.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (74 samples, 0.03%)</title><rect x="705.3" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (60 samples, 0.03%)</title><rect x="706.0" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (60 samples, 0.03%)</title><rect x="706.0" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (60 samples, 0.03%)</title><rect x="706.0" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (60 samples, 0.03%)</title><rect x="706.0" y="515.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="709.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (141 samples, 0.06%)</title><rect x="706.3" y="563.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (103 samples, 0.05%)</title><rect x="706.3" y="547.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="709.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (60 samples, 0.03%)</title><rect x="707.0" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (60 samples, 0.03%)</title><rect x="707.0" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (60 samples, 0.03%)</title><rect x="707.0" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (60 samples, 0.03%)</title><rect x="707.0" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (60 samples, 0.03%)</title><rect x="707.0" y="595.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="710.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$190/680108995.run (1,820 samples, 0.84%)</title><rect x="707.4" y="659.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,820 samples, 0.84%)</title><rect x="707.4" y="643.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,820 samples, 0.84%)</title><rect x="707.4" y="627.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,820 samples, 0.84%)</title><rect x="707.4" y="611.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,820 samples, 0.84%)</title><rect x="707.4" y="595.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,820 samples, 0.84%)</title><rect x="707.4" y="579.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,820 samples, 0.84%)</title><rect x="707.4" y="563.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,820 samples, 0.84%)</title><rect x="707.4" y="547.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,820 samples, 0.84%)</title><rect x="707.4" y="531.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,820 samples, 0.84%)</title><rect x="707.4" y="515.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,820 samples, 0.84%)</title><rect x="707.4" y="499.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,660 samples, 0.76%)</title><rect x="707.4" y="483.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.04%)</title><rect x="707.4" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.04%)</title><rect x="707.4" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,576 samples, 0.73%)</title><rect x="707.8" y="467.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (80 samples, 0.04%)</title><rect x="707.8" y="451.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="710.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,496 samples, 0.69%)</title><rect x="708.3" y="451.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,496 samples, 0.69%)</title><rect x="708.3" y="435.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,496 samples, 0.69%)</title><rect x="708.3" y="419.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (281 samples, 0.13%)</title><rect x="708.3" y="403.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (98 samples, 0.05%)</title><rect x="708.3" y="387.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="711.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/659260885.apply (183 samples, 0.08%)</title><rect x="708.8" y="387.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (183 samples, 0.08%)</title><rect x="708.8" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (183 samples, 0.08%)</title><rect x="708.8" y="355.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (140 samples, 0.06%)</title><rect x="709.0" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (111 samples, 0.05%)</title><rect x="709.2" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (111 samples, 0.05%)</title><rect x="709.2" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (64 samples, 0.03%)</title><rect x="709.2" y="291.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="712.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.02%)</title><rect x="709.5" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.02%)</title><rect x="709.5" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.02%)</title><rect x="709.5" y="259.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="712.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,215 samples, 0.56%)</title><rect x="709.8" y="403.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,215 samples, 0.56%)</title><rect x="709.8" y="387.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$182/511051166.apply (1,215 samples, 0.56%)</title><rect x="709.8" y="371.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,215 samples, 0.56%)</title><rect x="709.8" y="355.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,215 samples, 0.56%)</title><rect x="709.8" y="339.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/912003413.apply (1,215 samples, 0.56%)</title><rect x="709.8" y="323.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,215 samples, 0.56%)</title><rect x="709.8" y="307.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (91 samples, 0.04%)</title><rect x="710.0" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (91 samples, 0.04%)</title><rect x="710.0" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1,091 samples, 0.50%)</title><rect x="710.5" y="291.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.02%)</title><rect x="710.5" y="275.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.02%)</title><rect x="710.5" y="259.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (353 samples, 0.16%)</title><rect x="710.7" y="275.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (353 samples, 0.16%)</title><rect x="710.7" y="259.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (353 samples, 0.16%)</title><rect x="710.7" y="243.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$194/1211410956.accept (145 samples, 0.07%)</title><rect x="710.7" y="227.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (145 samples, 0.07%)</title><rect x="710.7" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (145 samples, 0.07%)</title><rect x="710.7" y="195.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (110 samples, 0.05%)</title><rect x="710.9" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (110 samples, 0.05%)</title><rect x="710.9" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.03%)</title><rect x="710.9" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="713.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1497088112.accept (162 samples, 0.07%)</title><rect x="711.5" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (162 samples, 0.07%)</title><rect x="711.5" y="211.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (162 samples, 0.07%)</title><rect x="711.5" y="195.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (162 samples, 0.07%)</title><rect x="711.5" y="179.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (162 samples, 0.07%)</title><rect x="711.5" y="163.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.07%)</title><rect x="711.5" y="147.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.07%)</title><rect x="711.5" y="131.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (162 samples, 0.07%)</title><rect x="711.5" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (162 samples, 0.07%)</title><rect x="711.5" y="99.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (162 samples, 0.07%)</title><rect x="711.5" y="83.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (58 samples, 0.03%)</title><rect x="711.5" y="67.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (58 samples, 0.03%)</title><rect x="711.5" y="51.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.5" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (104 samples, 0.05%)</title><rect x="711.8" y="67.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (104 samples, 0.05%)</title><rect x="711.8" y="51.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.8" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (72 samples, 0.03%)</title><rect x="712.0" y="35.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="715.0" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (687 samples, 0.32%)</title><rect x="712.7" y="275.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (58 samples, 0.03%)</title><rect x="712.7" y="259.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="715.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (50 samples, 0.02%)</title><rect x="713.0" y="259.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (50 samples, 0.02%)</title><rect x="713.0" y="243.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.02%)</title><rect x="713.0" y="227.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="716.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (579 samples, 0.27%)</title><rect x="713.2" y="259.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (321 samples, 0.15%)</title><rect x="713.4" y="243.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (58 samples, 0.03%)</title><rect x="713.7" y="227.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="716.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (218 samples, 0.10%)</title><rect x="714.0" y="227.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (49 samples, 0.02%)</title><rect x="714.3" y="211.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="717.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (47 samples, 0.02%)</title><rect x="714.6" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (47 samples, 0.02%)</title><rect x="714.6" y="195.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="717.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (62 samples, 0.03%)</title><rect x="714.9" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (221 samples, 0.10%)</title><rect x="715.2" y="243.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (105 samples, 0.05%)</title><rect x="715.4" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.4" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (75 samples, 0.03%)</title><rect x="715.4" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="718.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (85 samples, 0.04%)</title><rect x="715.9" y="227.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (85 samples, 0.04%)</title><rect x="715.9" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (85 samples, 0.04%)</title><rect x="715.9" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (85 samples, 0.04%)</title><rect x="715.9" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (85 samples, 0.04%)</title><rect x="715.9" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (85 samples, 0.04%)</title><rect x="715.9" y="147.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="718.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (160 samples, 0.07%)</title><rect x="716.4" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (160 samples, 0.07%)</title><rect x="716.4" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (160 samples, 0.07%)</title><rect x="716.4" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (160 samples, 0.07%)</title><rect x="716.4" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (160 samples, 0.07%)</title><rect x="716.4" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.4" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (160 samples, 0.07%)</title><rect x="716.4" y="403.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.4" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (61 samples, 0.03%)</title><rect x="716.4" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.4" y="398.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (61 samples, 0.03%)</title><rect x="716.4" y="371.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="719.4" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (99 samples, 0.05%)</title><rect x="716.7" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (99 samples, 0.05%)</title><rect x="716.7" y="371.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="719.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7,453 samples, 3.43%)</title><rect x="717.3" y="659.0" width="40.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.3" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,453 samples, 3.43%)</title><rect x="717.3" y="643.0" width="40.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.3" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,516 samples, 2.54%)</title><rect x="717.3" y="627.0" width="29.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.3" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (5,516 samples, 2.54%)</title><rect x="717.3" y="611.0" width="29.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.3" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,516 samples, 2.54%)</title><rect x="717.3" y="595.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.3" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (103 samples, 0.05%)</title><rect x="717.3" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (103 samples, 0.05%)</title><rect x="717.3" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (103 samples, 0.05%)</title><rect x="717.3" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (103 samples, 0.05%)</title><rect x="717.3" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1800031768.linkToTargetMethod (60 samples, 0.03%)</title><rect x="717.3" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1344199921.invoke (60 samples, 0.03%)</title><rect x="717.3" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.03%)</title><rect x="717.3" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (60 samples, 0.03%)</title><rect x="717.3" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (60 samples, 0.03%)</title><rect x="717.3" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.3" y="462.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.03%)</title><rect x="717.3" y="435.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="720.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5,413 samples, 2.49%)</title><rect x="717.8" y="579.0" width="29.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.8" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5,413 samples, 2.49%)</title><rect x="717.8" y="563.0" width="29.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.8" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,413 samples, 2.49%)</title><rect x="717.8" y="547.0" width="29.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.8" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,413 samples, 2.49%)</title><rect x="717.8" y="531.0" width="29.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.8" y="542.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,535 samples, 1.17%)</title><rect x="717.8" y="515.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,535 samples, 1.17%)</title><rect x="717.8" y="499.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,535 samples, 1.17%)</title><rect x="717.8" y="483.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,535 samples, 1.17%)</title><rect x="717.8" y="467.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,535 samples, 1.17%)</title><rect x="717.8" y="451.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,535 samples, 1.17%)</title><rect x="717.8" y="435.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,535 samples, 1.17%)</title><rect x="717.8" y="419.0" width="13.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,457 samples, 1.13%)</title><rect x="717.8" y="403.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,457 samples, 1.13%)</title><rect x="717.8" y="387.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="720.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,407 samples, 1.11%)</title><rect x="717.8" y="371.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (54 samples, 0.02%)</title><rect x="717.8" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="720.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/1729175167.apply (2,238 samples, 1.03%)</title><rect x="718.1" y="355.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,238 samples, 1.03%)</title><rect x="718.1" y="339.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (112 samples, 0.05%)</title><rect x="718.3" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (112 samples, 0.05%)</title><rect x="718.3" y="307.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (58 samples, 0.03%)</title><rect x="718.3" y="291.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="721.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.02%)</title><rect x="718.7" y="291.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.02%)</title><rect x="718.7" y="275.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.02%)</title><rect x="718.7" y="259.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="721.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,084 samples, 0.96%)</title><rect x="718.9" y="323.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (111 samples, 0.05%)</title><rect x="719.1" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (111 samples, 0.05%)</title><rect x="719.1" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (68 samples, 0.03%)</title><rect x="719.1" y="275.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="722.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,946 samples, 0.90%)</title><rect x="719.7" y="307.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.7" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$124/564253995.apply (118 samples, 0.05%)</title><rect x="719.7" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.7" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (118 samples, 0.05%)</title><rect x="719.7" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.7" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (118 samples, 0.05%)</title><rect x="719.7" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (76 samples, 0.03%)</title><rect x="719.9" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.02%)</title><rect x="720.1" y="227.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="723.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,828 samples, 0.84%)</title><rect x="720.3" y="291.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.03%)</title><rect x="720.3" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.03%)</title><rect x="720.3" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/17487658.linkToTargetMethod (57 samples, 0.03%)</title><rect x="720.7" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1192680792.invokeStatic (57 samples, 0.03%)</title><rect x="720.7" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$211/1190816396.get$Lambda (57 samples, 0.03%)</title><rect x="720.7" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$211 (57 samples, 0.03%)</title><rect x="720.7" y="227.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="723.7" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (365 samples, 0.17%)</title><rect x="721.0" y="275.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.0" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (142 samples, 0.07%)</title><rect x="721.0" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.0" y="270.0"></text>
</g>
<g>
<title>java/util/List.spliterator (61 samples, 0.03%)</title><rect x="721.0" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.0" y="254.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (61 samples, 0.03%)</title><rect x="721.0" y="227.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="724.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (81 samples, 0.04%)</title><rect x="721.3" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (81 samples, 0.04%)</title><rect x="721.3" y="227.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="724.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (107 samples, 0.05%)</title><rect x="721.8" y="259.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (107 samples, 0.05%)</title><rect x="721.8" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (107 samples, 0.05%)</title><rect x="721.8" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (116 samples, 0.05%)</title><rect x="722.3" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.3" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (116 samples, 0.05%)</title><rect x="722.3" y="243.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="725.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (213 samples, 0.10%)</title><rect x="723.0" y="275.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (113 samples, 0.05%)</title><rect x="723.0" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (63 samples, 0.03%)</title><rect x="723.0" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="726.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.02%)</title><rect x="723.3" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.02%)</title><rect x="723.3" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.02%)</title><rect x="723.3" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="726.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (100 samples, 0.05%)</title><rect x="723.6" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (100 samples, 0.05%)</title><rect x="723.6" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (51 samples, 0.02%)</title><rect x="723.6" y="227.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="726.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.02%)</title><rect x="723.9" y="227.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.02%)</title><rect x="723.9" y="211.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.02%)</title><rect x="723.9" y="195.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="726.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.03%)</title><rect x="724.6" y="275.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="727.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (963 samples, 0.44%)</title><rect x="725.0" y="275.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$211/1190816396.run (963 samples, 0.44%)</title><rect x="725.0" y="259.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (963 samples, 0.44%)</title><rect x="725.0" y="243.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (128 samples, 0.06%)</title><rect x="725.0" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (128 samples, 0.06%)</title><rect x="725.0" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/1630268396.get$Lambda (62 samples, 0.03%)</title><rect x="725.1" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.1" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$213 (62 samples, 0.03%)</title><rect x="725.1" y="179.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="728.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$215/1224309374.get$Lambda (48 samples, 0.02%)</title><rect x="725.5" y="195.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.5" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$215 (48 samples, 0.02%)</title><rect x="725.5" y="179.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="728.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (108 samples, 0.05%)</title><rect x="725.7" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (108 samples, 0.05%)</title><rect x="725.7" y="211.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.03%)</title><rect x="725.7" y="195.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="728.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (64 samples, 0.03%)</title><rect x="726.3" y="227.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="729.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (56 samples, 0.03%)</title><rect x="726.7" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.03%)</title><rect x="726.7" y="211.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="729.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (160 samples, 0.07%)</title><rect x="727.0" y="227.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (160 samples, 0.07%)</title><rect x="727.0" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (120 samples, 0.06%)</title><rect x="727.2" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (120 samples, 0.06%)</title><rect x="727.2" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (120 samples, 0.06%)</title><rect x="727.2" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (82 samples, 0.04%)</title><rect x="727.2" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="730.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (158 samples, 0.07%)</title><rect x="727.8" y="227.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (158 samples, 0.07%)</title><rect x="727.8" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1416233903.invoke (158 samples, 0.07%)</title><rect x="727.8" y="195.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (158 samples, 0.07%)</title><rect x="727.8" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (118 samples, 0.05%)</title><rect x="728.1" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (118 samples, 0.05%)</title><rect x="728.1" y="147.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.1" y="158.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.05%)</title><rect x="728.1" y="131.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="731.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (289 samples, 0.13%)</title><rect x="728.7" y="227.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (91 samples, 0.04%)</title><rect x="728.7" y="211.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="731.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (198 samples, 0.09%)</title><rect x="729.2" y="211.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (198 samples, 0.09%)</title><rect x="729.2" y="195.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1416233903.invoke (198 samples, 0.09%)</title><rect x="729.2" y="179.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (198 samples, 0.09%)</title><rect x="729.2" y="163.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (159 samples, 0.07%)</title><rect x="729.4" y="147.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (159 samples, 0.07%)</title><rect x="729.4" y="131.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.4" y="142.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.07%)</title><rect x="729.4" y="115.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="732.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/1949660912.apply (115 samples, 0.05%)</title><rect x="730.3" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (115 samples, 0.05%)</title><rect x="730.3" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (73 samples, 0.03%)</title><rect x="730.3" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.3" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (73 samples, 0.03%)</title><rect x="730.3" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.3" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (73 samples, 0.03%)</title><rect x="730.3" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.3" y="302.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (73 samples, 0.03%)</title><rect x="730.3" y="275.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="733.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (50 samples, 0.02%)</title><rect x="730.9" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (50 samples, 0.02%)</title><rect x="730.9" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1522648861.apply (50 samples, 0.02%)</title><rect x="730.9" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (50 samples, 0.02%)</title><rect x="730.9" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (50 samples, 0.02%)</title><rect x="730.9" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.02%)</title><rect x="730.9" y="291.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="733.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/498747434.apply (78 samples, 0.04%)</title><rect x="731.2" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (78 samples, 0.04%)</title><rect x="731.2" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (78 samples, 0.04%)</title><rect x="731.2" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="734.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2,878 samples, 1.32%)</title><rect x="731.6" y="515.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (194 samples, 0.09%)</title><rect x="731.6" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (194 samples, 0.09%)</title><rect x="731.6" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (194 samples, 0.09%)</title><rect x="731.6" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (194 samples, 0.09%)</title><rect x="731.6" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (194 samples, 0.09%)</title><rect x="731.6" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.6" y="446.0"></text>
</g>
<g>
<title>byte[] (194 samples, 0.09%)</title><rect x="731.6" y="419.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="734.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (205 samples, 0.09%)</title><rect x="732.6" y="499.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (205 samples, 0.09%)</title><rect x="732.6" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.6" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (205 samples, 0.09%)</title><rect x="732.6" y="467.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (205 samples, 0.09%)</title><rect x="732.6" y="451.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (205 samples, 0.09%)</title><rect x="732.6" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.6" y="446.0"></text>
</g>
<g>
<title>byte[] (205 samples, 0.09%)</title><rect x="732.6" y="419.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="735.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (226 samples, 0.10%)</title><rect x="733.8" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (102 samples, 0.05%)</title><rect x="734.4" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (102 samples, 0.05%)</title><rect x="734.4" y="467.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.03%)</title><rect x="734.6" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.6" y="462.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.03%)</title><rect x="734.6" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="737.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (733 samples, 0.34%)</title><rect x="735.0" y="499.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (733 samples, 0.34%)</title><rect x="735.0" y="483.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (733 samples, 0.34%)</title><rect x="735.0" y="467.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.0" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (66 samples, 0.03%)</title><rect x="735.3" y="451.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="738.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.03%)</title><rect x="735.8" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.03%)</title><rect x="735.8" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.8" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.get$Lambda (55 samples, 0.03%)</title><rect x="735.8" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.8" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (55 samples, 0.03%)</title><rect x="735.8" y="403.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="738.8" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (60 samples, 0.03%)</title><rect x="736.1" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.1" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (60 samples, 0.03%)</title><rect x="736.1" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="739.1" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (384 samples, 0.18%)</title><rect x="736.5" y="451.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (384 samples, 0.18%)</title><rect x="736.5" y="435.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (384 samples, 0.18%)</title><rect x="736.5" y="419.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (91 samples, 0.04%)</title><rect x="736.5" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.5" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (91 samples, 0.04%)</title><rect x="736.5" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (91 samples, 0.04%)</title><rect x="736.5" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (91 samples, 0.04%)</title><rect x="736.5" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (91 samples, 0.04%)</title><rect x="736.5" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (91 samples, 0.04%)</title><rect x="736.5" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (91 samples, 0.04%)</title><rect x="736.5" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (91 samples, 0.04%)</title><rect x="736.5" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.5" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (91 samples, 0.04%)</title><rect x="736.5" y="275.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="739.5" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (153 samples, 0.07%)</title><rect x="737.0" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.0" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (153 samples, 0.07%)</title><rect x="737.0" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (77 samples, 0.04%)</title><rect x="737.0" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (77 samples, 0.04%)</title><rect x="737.0" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (77 samples, 0.04%)</title><rect x="737.0" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="740.0" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (76 samples, 0.03%)</title><rect x="737.4" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (76 samples, 0.03%)</title><rect x="737.4" y="355.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="740.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (140 samples, 0.06%)</title><rect x="737.8" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.8" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (140 samples, 0.06%)</title><rect x="737.8" y="387.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="740.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (77 samples, 0.04%)</title><rect x="738.5" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (77 samples, 0.04%)</title><rect x="738.5" y="435.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="741.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,520 samples, 0.70%)</title><rect x="739.0" y="499.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.0" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (70 samples, 0.03%)</title><rect x="739.0" y="483.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="742.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (105 samples, 0.05%)</title><rect x="739.3" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.3" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (105 samples, 0.05%)</title><rect x="739.3" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.3" y="478.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.05%)</title><rect x="739.3" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="742.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (203 samples, 0.09%)</title><rect x="739.9" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (203 samples, 0.09%)</title><rect x="739.9" y="467.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.04%)</title><rect x="739.9" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="742.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (125 samples, 0.06%)</title><rect x="740.3" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.3" y="462.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.06%)</title><rect x="740.3" y="435.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="743.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,142 samples, 0.53%)</title><rect x="741.0" y="483.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="744.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (330 samples, 0.15%)</title><rect x="741.0" y="467.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (330 samples, 0.15%)</title><rect x="741.0" y="451.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="744.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (140 samples, 0.06%)</title><rect x="741.0" y="435.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="744.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (190 samples, 0.09%)</title><rect x="741.8" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.8" y="446.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.09%)</title><rect x="741.8" y="419.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="744.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (166 samples, 0.08%)</title><rect x="742.8" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (166 samples, 0.08%)</title><rect x="742.8" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.8" y="462.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.04%)</title><rect x="742.8" y="435.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="745.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.03%)</title><rect x="743.3" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="746.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.trim (162 samples, 0.07%)</title><rect x="743.7" y="467.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (162 samples, 0.07%)</title><rect x="743.7" y="451.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (162 samples, 0.07%)</title><rect x="743.7" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.04%)</title><rect x="743.7" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="746.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.03%)</title><rect x="744.2" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.2" y="430.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.03%)</title><rect x="744.2" y="403.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="747.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (174 samples, 0.08%)</title><rect x="744.6" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (174 samples, 0.08%)</title><rect x="744.6" y="451.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (174 samples, 0.08%)</title><rect x="744.6" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (174 samples, 0.08%)</title><rect x="744.6" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (174 samples, 0.08%)</title><rect x="744.6" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (174 samples, 0.08%)</title><rect x="744.6" y="387.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="747.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (310 samples, 0.14%)</title><rect x="745.5" y="467.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.5" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (90 samples, 0.04%)</title><rect x="745.5" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.5" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (90 samples, 0.04%)</title><rect x="745.5" y="435.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="748.5" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (132 samples, 0.06%)</title><rect x="746.0" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.0" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (132 samples, 0.06%)</title><rect x="746.0" y="435.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="749.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$205/1058335064.apply (88 samples, 0.04%)</title><rect x="746.7" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (88 samples, 0.04%)</title><rect x="746.7" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.7" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (88 samples, 0.04%)</title><rect x="746.7" y="419.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="749.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,937 samples, 0.89%)</title><rect x="747.2" y="627.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,937 samples, 0.89%)</title><rect x="747.2" y="611.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,937 samples, 0.89%)</title><rect x="747.2" y="595.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (1,937 samples, 0.89%)</title><rect x="747.2" y="579.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,937 samples, 0.89%)</title><rect x="747.2" y="563.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,937 samples, 0.89%)</title><rect x="747.2" y="547.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.03%)</title><rect x="747.2" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.03%)</title><rect x="747.2" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (64 samples, 0.03%)</title><rect x="747.8" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (64 samples, 0.03%)</title><rect x="747.8" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,762 samples, 0.81%)</title><rect x="748.2" y="531.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,762 samples, 0.81%)</title><rect x="748.2" y="515.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/1706852430.run (728 samples, 0.34%)</title><rect x="748.2" y="499.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (728 samples, 0.34%)</title><rect x="748.2" y="483.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (728 samples, 0.34%)</title><rect x="748.2" y="467.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (195 samples, 0.09%)</title><rect x="748.2" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.2" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (128 samples, 0.06%)</title><rect x="748.2" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (54 samples, 0.02%)</title><rect x="748.2" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.2" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (54 samples, 0.02%)</title><rect x="748.2" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="751.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (74 samples, 0.03%)</title><rect x="748.5" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.5" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (74 samples, 0.03%)</title><rect x="748.5" y="403.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="751.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (67 samples, 0.03%)</title><rect x="748.9" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (67 samples, 0.03%)</title><rect x="748.9" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (67 samples, 0.03%)</title><rect x="748.9" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (533 samples, 0.25%)</title><rect x="749.2" y="451.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.now (47 samples, 0.02%)</title><rect x="749.2" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.2" y="446.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (47 samples, 0.02%)</title><rect x="749.2" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (47 samples, 0.02%)</title><rect x="749.2" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.2" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (47 samples, 0.02%)</title><rect x="749.2" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.2" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (47 samples, 0.02%)</title><rect x="749.2" y="371.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="752.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (486 samples, 0.22%)</title><rect x="749.5" y="435.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (213 samples, 0.10%)</title><rect x="749.5" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (111 samples, 0.05%)</title><rect x="750.6" y="419.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (162 samples, 0.07%)</title><rect x="751.2" y="419.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (116 samples, 0.05%)</title><rect x="751.5" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (77 samples, 0.04%)</title><rect x="751.7" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (77 samples, 0.04%)</title><rect x="751.7" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (54 samples, 0.02%)</title><rect x="751.7" y="355.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="754.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1,034 samples, 0.48%)</title><rect x="752.1" y="499.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1,034 samples, 0.48%)</title><rect x="752.1" y="483.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1,034 samples, 0.48%)</title><rect x="752.1" y="467.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,016 samples, 0.47%)</title><rect x="752.1" y="451.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,016 samples, 0.47%)</title><rect x="752.1" y="435.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,016 samples, 0.47%)</title><rect x="752.1" y="419.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,016 samples, 0.47%)</title><rect x="752.1" y="403.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/691981639.accept (1,016 samples, 0.47%)</title><rect x="752.1" y="387.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1,016 samples, 0.47%)</title><rect x="752.1" y="371.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,016 samples, 0.47%)</title><rect x="752.1" y="355.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,016 samples, 0.47%)</title><rect x="752.1" y="339.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (95 samples, 0.04%)</title><rect x="752.1" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/1020364899.apply (95 samples, 0.04%)</title><rect x="752.1" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (95 samples, 0.04%)</title><rect x="752.1" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (95 samples, 0.04%)</title><rect x="752.1" y="275.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="755.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (921 samples, 0.42%)</title><rect x="752.6" y="323.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (921 samples, 0.42%)</title><rect x="752.6" y="307.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (921 samples, 0.42%)</title><rect x="752.6" y="291.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (921 samples, 0.42%)</title><rect x="752.6" y="275.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.6" y="286.0"></text>
</g>
<g>
<title>java.lang.Thread (597 samples, 0.27%)</title><rect x="752.6" y="259.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="755.6" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (324 samples, 0.15%)</title><rect x="755.9" y="259.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (99 samples, 0.05%)</title><rect x="756.1" y="243.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (99 samples, 0.05%)</title><rect x="756.1" y="227.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.1" y="238.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.02%)</title><rect x="756.1" y="211.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="759.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (51 samples, 0.02%)</title><rect x="756.4" y="211.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.4" y="222.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.02%)</title><rect x="756.4" y="195.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="759.4" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (179 samples, 0.08%)</title><rect x="756.7" y="243.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.7" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (179 samples, 0.08%)</title><rect x="756.7" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.7" y="238.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (165 samples, 0.08%)</title><rect x="756.7" y="211.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.7" y="222.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (64 samples, 0.03%)</title><rect x="756.7" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.7" y="206.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (64 samples, 0.03%)</title><rect x="756.7" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.7" y="190.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (64 samples, 0.03%)</title><rect x="756.7" y="163.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="759.7" y="174.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (101 samples, 0.05%)</title><rect x="757.1" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.1" y="206.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (62 samples, 0.03%)</title><rect x="757.1" y="179.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="760.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (18,527 samples, 8.53%)</title><rect x="757.7" y="707.0" width="100.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.7" y="718.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (468 samples, 0.22%)</title><rect x="757.7" y="691.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (468 samples, 0.22%)</title><rect x="757.7" y="675.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$180/1922513332.get$Lambda (252 samples, 0.12%)</title><rect x="757.7" y="659.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.7" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$180 (252 samples, 0.12%)</title><rect x="757.7" y="643.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="760.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/2027554893.get$Lambda (216 samples, 0.10%)</title><rect x="759.1" y="659.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.1" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$187 (216 samples, 0.10%)</title><rect x="759.1" y="643.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="762.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/992802731.linkToTargetMethod (359 samples, 0.17%)</title><rect x="760.3" y="691.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (359 samples, 0.17%)</title><rect x="760.3" y="675.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$181/525718990.get$Lambda (359 samples, 0.17%)</title><rect x="760.3" y="659.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$181 (359 samples, 0.17%)</title><rect x="760.3" y="643.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="763.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,446 samples, 1.13%)</title><rect x="762.2" y="691.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1705485627.accept (1,829 samples, 0.84%)</title><rect x="762.2" y="675.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,829 samples, 0.84%)</title><rect x="762.2" y="659.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,829 samples, 0.84%)</title><rect x="762.2" y="643.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,829 samples, 0.84%)</title><rect x="762.2" y="627.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,829 samples, 0.84%)</title><rect x="762.2" y="611.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,829 samples, 0.84%)</title><rect x="762.2" y="595.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,829 samples, 0.84%)</title><rect x="762.2" y="579.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,829 samples, 0.84%)</title><rect x="762.2" y="563.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,829 samples, 0.84%)</title><rect x="762.2" y="547.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,829 samples, 0.84%)</title><rect x="762.2" y="531.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/133136300.run (1,829 samples, 0.84%)</title><rect x="762.2" y="515.0" width="10.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,829 samples, 0.84%)</title><rect x="762.2" y="499.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (333 samples, 0.15%)</title><rect x="762.2" y="483.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (333 samples, 0.15%)</title><rect x="762.2" y="467.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (333 samples, 0.15%)</title><rect x="762.2" y="451.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (333 samples, 0.15%)</title><rect x="762.2" y="435.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (333 samples, 0.15%)</title><rect x="762.2" y="419.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (333 samples, 0.15%)</title><rect x="762.2" y="403.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (333 samples, 0.15%)</title><rect x="762.2" y="387.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (333 samples, 0.15%)</title><rect x="762.2" y="371.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="765.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (220 samples, 0.10%)</title><rect x="764.0" y="483.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (220 samples, 0.10%)</title><rect x="764.0" y="467.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (220 samples, 0.10%)</title><rect x="764.0" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192/200436329.get$Lambda (220 samples, 0.10%)</title><rect x="764.0" y="435.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192 (220 samples, 0.10%)</title><rect x="764.0" y="419.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="767.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,276 samples, 0.59%)</title><rect x="765.2" y="483.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,023 samples, 0.47%)</title><rect x="765.2" y="467.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.2" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (654 samples, 0.30%)</title><rect x="765.2" y="451.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.2" y="462.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (654 samples, 0.30%)</title><rect x="765.2" y="435.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="768.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (369 samples, 0.17%)</title><rect x="768.8" y="451.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.8" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (369 samples, 0.17%)</title><rect x="768.8" y="435.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.8" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (369 samples, 0.17%)</title><rect x="768.8" y="419.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="771.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (253 samples, 0.12%)</title><rect x="770.8" y="467.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$149/338232184.get (253 samples, 0.12%)</title><rect x="770.8" y="451.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (253 samples, 0.12%)</title><rect x="770.8" y="435.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (253 samples, 0.12%)</title><rect x="770.8" y="419.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.8" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (251 samples, 0.12%)</title><rect x="770.8" y="403.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.8" y="414.0"></text>
</g>
<g>
<title>byte[] (245 samples, 0.11%)</title><rect x="770.8" y="387.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$188/546108432.accept (617 samples, 0.28%)</title><rect x="772.2" y="675.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (617 samples, 0.28%)</title><rect x="772.2" y="659.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$181/525718990.run (617 samples, 0.28%)</title><rect x="772.2" y="643.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (617 samples, 0.28%)</title><rect x="772.2" y="627.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (617 samples, 0.28%)</title><rect x="772.2" y="611.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (617 samples, 0.28%)</title><rect x="772.2" y="595.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (617 samples, 0.28%)</title><rect x="772.2" y="579.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.2" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (617 samples, 0.28%)</title><rect x="772.2" y="563.0" width="3.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="775.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,933 samples, 0.89%)</title><rect x="775.5" y="691.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.5" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,933 samples, 0.89%)</title><rect x="775.5" y="675.0" width="10.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="778.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (693 samples, 0.32%)</title><rect x="786.0" y="691.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (360 samples, 0.17%)</title><rect x="786.0" y="675.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (360 samples, 0.17%)</title><rect x="786.0" y="659.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (360 samples, 0.17%)</title><rect x="786.0" y="643.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (360 samples, 0.17%)</title><rect x="786.0" y="627.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (360 samples, 0.17%)</title><rect x="786.0" y="611.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (360 samples, 0.17%)</title><rect x="786.0" y="595.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.0" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (360 samples, 0.17%)</title><rect x="786.0" y="579.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="789.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (333 samples, 0.15%)</title><rect x="788.0" y="675.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.0" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (333 samples, 0.15%)</title><rect x="788.0" y="659.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="791.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,255 samples, 0.58%)</title><rect x="789.8" y="691.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/2085266465.run (782 samples, 0.36%)</title><rect x="789.8" y="675.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (782 samples, 0.36%)</title><rect x="789.8" y="659.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (782 samples, 0.36%)</title><rect x="789.8" y="643.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (782 samples, 0.36%)</title><rect x="789.8" y="627.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (782 samples, 0.36%)</title><rect x="789.8" y="611.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (782 samples, 0.36%)</title><rect x="789.8" y="595.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/133136300.run (782 samples, 0.36%)</title><rect x="789.8" y="579.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (782 samples, 0.36%)</title><rect x="789.8" y="563.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (782 samples, 0.36%)</title><rect x="789.8" y="547.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (782 samples, 0.36%)</title><rect x="789.8" y="531.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (779 samples, 0.36%)</title><rect x="789.8" y="515.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (779 samples, 0.36%)</title><rect x="789.8" y="499.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (779 samples, 0.36%)</title><rect x="789.8" y="483.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1800031768.linkToTargetMethod (535 samples, 0.25%)</title><rect x="789.8" y="467.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1344199921.invoke (535 samples, 0.25%)</title><rect x="789.8" y="451.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (535 samples, 0.25%)</title><rect x="789.8" y="435.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (535 samples, 0.25%)</title><rect x="789.8" y="419.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (535 samples, 0.25%)</title><rect x="789.8" y="403.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.8" y="414.0"></text>
</g>
<g>
<title>byte[] (535 samples, 0.25%)</title><rect x="789.8" y="387.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="792.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (244 samples, 0.11%)</title><rect x="792.7" y="467.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (244 samples, 0.11%)</title><rect x="792.7" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (244 samples, 0.11%)</title><rect x="792.7" y="435.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192/200436329.get$Lambda (244 samples, 0.11%)</title><rect x="792.7" y="419.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192 (244 samples, 0.11%)</title><rect x="792.7" y="403.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="795.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$156/184979527.run (473 samples, 0.22%)</title><rect x="794.0" y="675.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (473 samples, 0.22%)</title><rect x="794.0" y="659.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (470 samples, 0.22%)</title><rect x="794.0" y="643.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="797.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (470 samples, 0.22%)</title><rect x="794.0" y="627.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$190/680108995.get$Lambda (470 samples, 0.22%)</title><rect x="794.0" y="611.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$190 (470 samples, 0.22%)</title><rect x="794.0" y="595.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="797.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (7,348 samples, 3.38%)</title><rect x="796.6" y="691.0" width="39.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.6" y="702.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.now (1,256 samples, 0.58%)</title><rect x="796.6" y="675.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.6" y="686.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1,256 samples, 0.58%)</title><rect x="796.6" y="659.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.6" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1,256 samples, 0.58%)</title><rect x="796.6" y="643.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.create (1,256 samples, 0.58%)</title><rect x="796.6" y="627.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.6" y="638.0"></text>
</g>
<g>
<title>java.time.Instant (1,256 samples, 0.58%)</title><rect x="796.6" y="611.0" width="6.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="799.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (6,092 samples, 2.80%)</title><rect x="803.4" y="675.0" width="33.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.4" y="686.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (808 samples, 0.37%)</title><rect x="803.4" y="659.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (808 samples, 0.37%)</title><rect x="803.4" y="643.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$222/10302261.get$Lambda (808 samples, 0.37%)</title><rect x="803.4" y="627.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$222 (808 samples, 0.37%)</title><rect x="803.4" y="611.0" width="4.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="806.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,611 samples, 0.74%)</title><rect x="807.8" y="659.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.8" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,611 samples, 0.74%)</title><rect x="807.8" y="643.0" width="8.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="810.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (815 samples, 0.38%)</title><rect x="816.6" y="659.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.6" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (815 samples, 0.38%)</title><rect x="816.6" y="643.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.6" y="654.0"></text>
</g>
<g>
<title>java.util.Optional (815 samples, 0.38%)</title><rect x="816.6" y="627.0" width="4.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="819.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2,858 samples, 1.32%)</title><rect x="821.0" y="659.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.0" y="670.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,280 samples, 0.59%)</title><rect x="821.0" y="643.0" width="6.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="824.0" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1,578 samples, 0.73%)</title><rect x="827.9" y="643.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.9" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1,578 samples, 0.73%)</title><rect x="827.9" y="627.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.9" y="638.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (1,578 samples, 0.73%)</title><rect x="827.9" y="611.0" width="8.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="830.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2,532 samples, 1.17%)</title><rect x="836.5" y="691.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (238 samples, 0.11%)</title><rect x="836.5" y="675.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (238 samples, 0.11%)</title><rect x="836.5" y="659.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$179/1087851508.get$Lambda (238 samples, 0.11%)</title><rect x="836.5" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$179 (238 samples, 0.11%)</title><rect x="836.5" y="627.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="839.5" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,356 samples, 0.62%)</title><rect x="837.8" y="675.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (573 samples, 0.26%)</title><rect x="837.8" y="659.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.8" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (573 samples, 0.26%)</title><rect x="837.8" y="643.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="840.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (783 samples, 0.36%)</title><rect x="840.9" y="659.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (783 samples, 0.36%)</title><rect x="840.9" y="643.0" width="4.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="843.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (938 samples, 0.43%)</title><rect x="845.2" y="675.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.2" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (938 samples, 0.43%)</title><rect x="845.2" y="659.0" width="5.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="848.2" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (743 samples, 0.34%)</title><rect x="850.3" y="691.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (743 samples, 0.34%)</title><rect x="850.3" y="675.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (743 samples, 0.34%)</title><rect x="850.3" y="659.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (743 samples, 0.34%)</title><rect x="850.3" y="643.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (275 samples, 0.13%)</title><rect x="850.3" y="627.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Integer (275 samples, 0.13%)</title><rect x="850.3" y="611.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="853.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (468 samples, 0.22%)</title><rect x="851.8" y="627.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="854.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (468 samples, 0.22%)</title><rect x="851.8" y="611.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (468 samples, 0.22%)</title><rect x="851.8" y="595.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (468 samples, 0.22%)</title><rect x="851.8" y="579.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (468 samples, 0.22%)</title><rect x="851.8" y="563.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.8" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (468 samples, 0.22%)</title><rect x="851.8" y="547.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="854.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (194 samples, 0.09%)</title><rect x="854.3" y="691.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (194 samples, 0.09%)</title><rect x="854.3" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (194 samples, 0.09%)</title><rect x="854.3" y="659.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (194 samples, 0.09%)</title><rect x="854.3" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (193 samples, 0.09%)</title><rect x="854.3" y="627.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Integer (193 samples, 0.09%)</title><rect x="854.3" y="611.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="857.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (556 samples, 0.26%)</title><rect x="855.4" y="691.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (556 samples, 0.26%)</title><rect x="855.4" y="675.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (556 samples, 0.26%)</title><rect x="855.4" y="659.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="858.4" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (556 samples, 0.26%)</title><rect x="855.4" y="643.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="858.4" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (61,053 samples, 28.10%)</title><rect x="858.4" y="707.0" width="331.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.4" y="718.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (725 samples, 0.33%)</title><rect x="858.4" y="691.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.4" y="702.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (725 samples, 0.33%)</title><rect x="858.4" y="675.0" width="3.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="861.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (60,328 samples, 27.77%)</title><rect x="862.3" y="691.0" width="327.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.3" y="702.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (60,328 samples, 27.77%)</title><rect x="862.3" y="675.0" width="327.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="865.3" y="686.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60,328 samples, 27.77%)</title><rect x="862.3" y="659.0" width="327.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.3" y="670.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46,621 samples, 21.46%)</title><rect x="862.3" y="643.0" width="253.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.3" y="654.0">one/nio/http/HttpSession.handlePar..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46,621 samples, 21.46%)</title><rect x="862.3" y="627.0" width="253.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.3" y="638.0">one/nio/http/HttpServer.handleRequ..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (45,604 samples, 20.99%)</title><rect x="862.3" y="611.0" width="247.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.3" y="622.0">RequestHandler1_entity.handleRequ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (981 samples, 0.45%)</title><rect x="862.3" y="595.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (981 samples, 0.45%)</title><rect x="862.3" y="579.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (981 samples, 0.45%)</title><rect x="862.3" y="563.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (981 samples, 0.45%)</title><rect x="862.3" y="547.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (489 samples, 0.23%)</title><rect x="862.3" y="531.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="865.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (492 samples, 0.23%)</title><rect x="865.0" y="531.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="868.0" y="542.0"></text>
</g>
<g>
<title>byte[] (492 samples, 0.23%)</title><rect x="865.0" y="515.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="868.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (44,623 samples, 20.54%)</title><rect x="867.6" y="595.0" width="242.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.6" y="606.0">ru/mail/polis/service/codearound..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,185 samples, 0.55%)</title><rect x="867.6" y="579.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,185 samples, 0.55%)</title><rect x="867.6" y="563.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,185 samples, 0.55%)</title><rect x="867.6" y="547.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="870.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (427 samples, 0.20%)</title><rect x="867.6" y="531.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="870.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (758 samples, 0.35%)</title><rect x="870.0" y="531.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.0" y="542.0"></text>
</g>
<g>
<title>byte[] (758 samples, 0.35%)</title><rect x="870.0" y="515.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="873.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.getNodes (71 samples, 0.03%)</title><rect x="874.1" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.1" y="590.0"></text>
</g>
<g>
<title>java/util/Set.of (71 samples, 0.03%)</title><rect x="874.1" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.1" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (71 samples, 0.03%)</title><rect x="874.1" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.1" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (71 samples, 0.03%)</title><rect x="874.1" y="531.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="877.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.invokeHandlerByMethod (43,367 samples, 19.96%)</title><rect x="874.5" y="579.0" width="235.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.5" y="590.0">ru/mail/polis/service/codearoun..</text>
</g>
<g>
<title>java.lang.String[] (563 samples, 0.26%)</title><rect x="874.5" y="563.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="877.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (596 samples, 0.27%)</title><rect x="877.5" y="563.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (596 samples, 0.27%)</title><rect x="877.5" y="547.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (596 samples, 0.27%)</title><rect x="877.5" y="531.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (596 samples, 0.27%)</title><rect x="877.5" y="515.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.5" y="526.0"></text>
</g>
<g>
<title>byte[] (596 samples, 0.27%)</title><rect x="877.5" y="499.0" width="3.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="880.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,110 samples, 0.51%)</title><rect x="880.8" y="563.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="883.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,110 samples, 0.51%)</title><rect x="880.8" y="547.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="883.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,110 samples, 0.51%)</title><rect x="880.8" y="531.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (561 samples, 0.26%)</title><rect x="880.8" y="515.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="883.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (549 samples, 0.25%)</title><rect x="883.8" y="515.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.8" y="526.0"></text>
</g>
<g>
<title>byte[] (549 samples, 0.25%)</title><rect x="883.8" y="499.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="886.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (65 samples, 0.03%)</title><rect x="886.8" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (65 samples, 0.03%)</title><rect x="886.8" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="889.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (41,033 samples, 18.89%)</title><rect x="887.1" y="563.0" width="222.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.1" y="574.0">ru/mail/polis/service/codearo..</text>
</g>
<g>
<title>java.util.ArrayList (552 samples, 0.25%)</title><rect x="887.1" y="547.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="890.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (547 samples, 0.25%)</title><rect x="890.1" y="547.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="893.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (751 samples, 0.35%)</title><rect x="893.1" y="547.0" width="4.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="896.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1993650074.linkToTargetMethod (1,072 samples, 0.49%)</title><rect x="897.2" y="547.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1076783271.invokeStatic (1,072 samples, 0.49%)</title><rect x="897.2" y="531.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$137/848525815.get$Lambda (578 samples, 0.27%)</title><rect x="897.2" y="515.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$137 (578 samples, 0.27%)</title><rect x="897.2" y="499.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="900.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$138/2086783003.get$Lambda (494 samples, 0.23%)</title><rect x="900.3" y="515.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.3" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$138 (494 samples, 0.23%)</title><rect x="900.3" y="499.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="903.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (127 samples, 0.06%)</title><rect x="903.0" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (127 samples, 0.06%)</title><rect x="903.0" y="531.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="906.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (729 samples, 0.34%)</title><rect x="903.7" y="547.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="906.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (729 samples, 0.34%)</title><rect x="903.7" y="531.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="906.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (931 samples, 0.43%)</title><rect x="907.7" y="547.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (931 samples, 0.43%)</title><rect x="907.7" y="531.0" width="5.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="910.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (2,334 samples, 1.07%)</title><rect x="912.7" y="547.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (2,334 samples, 1.07%)</title><rect x="912.7" y="531.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (1,016 samples, 0.47%)</title><rect x="912.7" y="515.0" width="5.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="915.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (776 samples, 0.36%)</title><rect x="918.2" y="515.0" width="4.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="921.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (206 samples, 0.09%)</title><rect x="922.5" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (93 samples, 0.04%)</title><rect x="922.5" y="499.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="925.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (59 samples, 0.03%)</title><rect x="923.0" y="499.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="926.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (54 samples, 0.02%)</title><rect x="923.3" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="926.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (54 samples, 0.02%)</title><rect x="923.3" y="483.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="926.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (336 samples, 0.15%)</title><rect x="923.6" y="515.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (336 samples, 0.15%)</title><rect x="923.6" y="499.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="926.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,033 samples, 0.48%)</title><rect x="925.4" y="547.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="928.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,033 samples, 0.48%)</title><rect x="925.4" y="531.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (714 samples, 0.33%)</title><rect x="925.4" y="515.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="928.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (319 samples, 0.15%)</title><rect x="929.3" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (319 samples, 0.15%)</title><rect x="929.3" y="499.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="932.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1,118 samples, 0.51%)</title><rect x="931.0" y="547.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1,118 samples, 0.51%)</title><rect x="931.0" y="531.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (673 samples, 0.31%)</title><rect x="931.0" y="515.0" width="3.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="934.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (444 samples, 0.20%)</title><rect x="934.7" y="515.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (444 samples, 0.20%)</title><rect x="934.7" y="499.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="937.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (8,298 samples, 3.82%)</title><rect x="937.1" y="547.0" width="45.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.1" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8,298 samples, 3.82%)</title><rect x="937.1" y="531.0" width="45.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="940.1" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8,298 samples, 3.82%)</title><rect x="937.1" y="515.0" width="45.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.1" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (8,298 samples, 3.82%)</title><rect x="937.1" y="499.0" width="45.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="940.1" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.02%)</title><rect x="937.1" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="940.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.02%)</title><rect x="937.1" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/1447974469.get$Lambda (54 samples, 0.02%)</title><rect x="937.1" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$133 (54 samples, 0.02%)</title><rect x="937.1" y="435.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="940.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (293 samples, 0.13%)</title><rect x="937.4" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="940.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (293 samples, 0.13%)</title><rect x="937.4" y="467.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (161 samples, 0.07%)</title><rect x="937.4" y="451.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="940.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (132 samples, 0.06%)</title><rect x="938.2" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="941.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (132 samples, 0.06%)</title><rect x="938.2" y="435.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="941.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (132 samples, 0.06%)</title><rect x="938.2" y="419.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="941.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (327 samples, 0.15%)</title><rect x="939.0" y="483.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (327 samples, 0.15%)</title><rect x="939.0" y="467.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (219 samples, 0.10%)</title><rect x="939.0" y="451.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="942.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.05%)</title><rect x="940.2" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.05%)</title><rect x="940.2" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.05%)</title><rect x="940.2" y="419.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="943.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (201 samples, 0.09%)</title><rect x="940.7" y="483.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="943.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (392 samples, 0.18%)</title><rect x="941.8" y="483.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="944.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (3,819 samples, 1.76%)</title><rect x="944.0" y="483.0" width="20.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (449 samples, 0.21%)</title><rect x="944.0" y="467.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.0" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (349 samples, 0.16%)</title><rect x="944.0" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.0" y="462.0"></text>
</g>
<g>
<title>java/util/List.spliterator (118 samples, 0.05%)</title><rect x="944.0" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.0" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (118 samples, 0.05%)</title><rect x="944.0" y="419.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="947.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (231 samples, 0.11%)</title><rect x="944.6" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="947.6" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (231 samples, 0.11%)</title><rect x="944.6" y="419.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="947.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (100 samples, 0.05%)</title><rect x="945.9" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (100 samples, 0.05%)</title><rect x="945.9" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (100 samples, 0.05%)</title><rect x="945.9" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$23/1792393294.get (100 samples, 0.05%)</title><rect x="945.9" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="948.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (100 samples, 0.05%)</title><rect x="945.9" y="387.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="948.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,499 samples, 0.69%)</title><rect x="946.4" y="467.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="949.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,499 samples, 0.69%)</title><rect x="946.4" y="451.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.4" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (89 samples, 0.04%)</title><rect x="946.4" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="949.4" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (99 samples, 0.05%)</title><rect x="946.9" y="435.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="949.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (185 samples, 0.09%)</title><rect x="947.4" y="435.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="950.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (62 samples, 0.03%)</title><rect x="948.4" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="951.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (126 samples, 0.06%)</title><rect x="948.8" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (126 samples, 0.06%)</title><rect x="948.8" y="419.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.get$Lambda (126 samples, 0.06%)</title><rect x="948.8" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.8" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (126 samples, 0.06%)</title><rect x="948.8" y="387.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="951.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (610 samples, 0.28%)</title><rect x="949.4" y="435.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (610 samples, 0.28%)</title><rect x="949.4" y="419.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (610 samples, 0.28%)</title><rect x="949.4" y="403.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (610 samples, 0.28%)</title><rect x="949.4" y="387.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="952.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (241 samples, 0.11%)</title><rect x="949.4" y="371.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (241 samples, 0.11%)</title><rect x="949.4" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.4" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (241 samples, 0.11%)</title><rect x="949.4" y="339.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (241 samples, 0.11%)</title><rect x="949.4" y="323.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="952.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (241 samples, 0.11%)</title><rect x="949.4" y="307.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="952.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (241 samples, 0.11%)</title><rect x="949.4" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="952.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (241 samples, 0.11%)</title><rect x="949.4" y="275.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (241 samples, 0.11%)</title><rect x="949.4" y="259.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="952.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (241 samples, 0.11%)</title><rect x="949.4" y="243.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="952.4" y="254.0"></text>
</g>
<g>
<title>java/util/List.copyOf (219 samples, 0.10%)</title><rect x="950.8" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.8" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (219 samples, 0.10%)</title><rect x="950.8" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (101 samples, 0.05%)</title><rect x="950.8" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.8" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (101 samples, 0.05%)</title><rect x="950.8" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.8" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (101 samples, 0.05%)</title><rect x="950.8" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="953.8" y="318.0"></text>
</g>
<g>
<title>java/util/List.of (118 samples, 0.05%)</title><rect x="951.3" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.3" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (118 samples, 0.05%)</title><rect x="951.3" y="323.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="954.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (150 samples, 0.07%)</title><rect x="951.9" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.9" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (150 samples, 0.07%)</title><rect x="951.9" y="355.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="954.9" y="366.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (148 samples, 0.07%)</title><rect x="952.8" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.8" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (148 samples, 0.07%)</title><rect x="952.8" y="419.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="955.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (180 samples, 0.08%)</title><rect x="953.6" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="956.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (180 samples, 0.08%)</title><rect x="953.6" y="419.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="956.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (83 samples, 0.04%)</title><rect x="954.5" y="467.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="957.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,243 samples, 0.57%)</title><rect x="955.0" y="467.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="958.0" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,243 samples, 0.57%)</title><rect x="955.0" y="451.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.0" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,102 samples, 0.51%)</title><rect x="955.0" y="435.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="958.0" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,102 samples, 0.51%)</title><rect x="955.0" y="419.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="958.0" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,102 samples, 0.51%)</title><rect x="955.0" y="403.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.0" y="414.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (305 samples, 0.14%)</title><rect x="955.0" y="387.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="958.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (392 samples, 0.18%)</title><rect x="956.7" y="387.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.7" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (392 samples, 0.18%)</title><rect x="956.7" y="371.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="959.7" y="382.0"></text>
</g>
<g>
<title>byte[] (392 samples, 0.18%)</title><rect x="956.7" y="355.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="959.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (405 samples, 0.19%)</title><rect x="958.8" y="387.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (405 samples, 0.19%)</title><rect x="958.8" y="371.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (405 samples, 0.19%)</title><rect x="958.8" y="355.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.8" y="366.0"></text>
</g>
<g>
<title>byte[] (405 samples, 0.19%)</title><rect x="958.8" y="339.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="961.8" y="350.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (141 samples, 0.06%)</title><rect x="961.0" y="435.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="964.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (175 samples, 0.08%)</title><rect x="961.7" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (175 samples, 0.08%)</title><rect x="961.7" y="451.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="964.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (370 samples, 0.17%)</title><rect x="962.7" y="467.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.7" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (102 samples, 0.05%)</title><rect x="962.7" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="965.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (109 samples, 0.05%)</title><rect x="963.3" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (109 samples, 0.05%)</title><rect x="963.3" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="966.3" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (159 samples, 0.07%)</title><rect x="963.8" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (159 samples, 0.07%)</title><rect x="963.8" y="435.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="966.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,194 samples, 1.01%)</title><rect x="964.7" y="483.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (82 samples, 0.04%)</title><rect x="964.7" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="967.7" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.map (218 samples, 0.10%)</title><rect x="965.2" y="467.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1335409496.apply (218 samples, 0.10%)</title><rect x="965.2" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (115 samples, 0.05%)</title><rect x="965.2" y="435.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="968.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (103 samples, 0.05%)</title><rect x="965.8" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (103 samples, 0.05%)</title><rect x="965.8" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="968.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (286 samples, 0.13%)</title><rect x="966.3" y="467.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="969.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (79 samples, 0.04%)</title><rect x="967.9" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (79 samples, 0.04%)</title><rect x="967.9" y="451.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="970.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (61 samples, 0.03%)</title><rect x="968.3" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.3" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (61 samples, 0.03%)</title><rect x="968.3" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.3" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.of (61 samples, 0.03%)</title><rect x="968.3" y="435.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.3" y="446.0"></text>
</g>
<g>
<title>java.util.Optional (61 samples, 0.03%)</title><rect x="968.3" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="971.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,468 samples, 0.68%)</title><rect x="968.7" y="467.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,468 samples, 0.68%)</title><rect x="968.7" y="451.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Class[] (122 samples, 0.06%)</title><rect x="968.7" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="971.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (115 samples, 0.05%)</title><rect x="969.3" y="435.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="972.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (120 samples, 0.06%)</title><rect x="969.9" y="435.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="972.9" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (688 samples, 0.32%)</title><rect x="970.6" y="435.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (688 samples, 0.32%)</title><rect x="970.6" y="419.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.6" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (688 samples, 0.32%)</title><rect x="970.6" y="403.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (688 samples, 0.32%)</title><rect x="970.6" y="387.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.6" y="398.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (688 samples, 0.32%)</title><rect x="970.6" y="371.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="973.6" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (215 samples, 0.10%)</title><rect x="974.3" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (215 samples, 0.10%)</title><rect x="974.3" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (59 samples, 0.03%)</title><rect x="974.3" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (59 samples, 0.03%)</title><rect x="974.3" y="387.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="977.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (156 samples, 0.07%)</title><rect x="974.6" y="403.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (156 samples, 0.07%)</title><rect x="974.6" y="387.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="977.6" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (208 samples, 0.10%)</title><rect x="975.5" y="435.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="978.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (208 samples, 0.10%)</title><rect x="975.5" y="419.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="978.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (208 samples, 0.10%)</title><rect x="975.5" y="403.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="978.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,018 samples, 0.47%)</title><rect x="976.6" y="483.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (107 samples, 0.05%)</title><rect x="976.6" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (107 samples, 0.05%)</title><rect x="976.6" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="979.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (99 samples, 0.05%)</title><rect x="977.2" y="467.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="980.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (812 samples, 0.37%)</title><rect x="977.7" y="467.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (147 samples, 0.07%)</title><rect x="977.7" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="980.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (147 samples, 0.07%)</title><rect x="977.7" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1557312951.get$Lambda (73 samples, 0.03%)</title><rect x="977.7" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (73 samples, 0.03%)</title><rect x="977.7" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="980.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/1729175167.get$Lambda (74 samples, 0.03%)</title><rect x="978.1" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$130 (74 samples, 0.03%)</title><rect x="978.1" y="403.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="981.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (665 samples, 0.31%)</title><rect x="978.5" y="451.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (665 samples, 0.31%)</title><rect x="978.5" y="435.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (402 samples, 0.19%)</title><rect x="978.5" y="419.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="981.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (263 samples, 0.12%)</title><rect x="980.7" y="419.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (263 samples, 0.12%)</title><rect x="980.7" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (263 samples, 0.12%)</title><rect x="980.7" y="387.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="983.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,802 samples, 0.83%)</title><rect x="982.2" y="547.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (161 samples, 0.07%)</title><rect x="982.2" y="531.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="985.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,641 samples, 0.76%)</title><rect x="983.0" y="531.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="986.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,496 samples, 0.69%)</title><rect x="983.0" y="515.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,496 samples, 0.69%)</title><rect x="983.0" y="499.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.0" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (49 samples, 0.02%)</title><rect x="983.0" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="986.0" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (105 samples, 0.05%)</title><rect x="983.3" y="483.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="986.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (223 samples, 0.10%)</title><rect x="983.9" y="483.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="986.9" y="494.0"></text>
</g>
<g>
<title>java.util.TreeSet (60 samples, 0.03%)</title><rect x="985.1" y="483.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="988.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (145 samples, 0.07%)</title><rect x="985.4" y="483.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (145 samples, 0.07%)</title><rect x="985.4" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.get$Lambda (145 samples, 0.07%)</title><rect x="985.4" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.4" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (145 samples, 0.07%)</title><rect x="985.4" y="435.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="988.4" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (128 samples, 0.06%)</title><rect x="986.2" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.2" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (128 samples, 0.06%)</title><rect x="986.2" y="467.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="989.2" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (583 samples, 0.27%)</title><rect x="986.9" y="483.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (583 samples, 0.27%)</title><rect x="986.9" y="467.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (583 samples, 0.27%)</title><rect x="986.9" y="451.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (250 samples, 0.12%)</title><rect x="986.9" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (250 samples, 0.12%)</title><rect x="986.9" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (250 samples, 0.12%)</title><rect x="986.9" y="403.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (250 samples, 0.12%)</title><rect x="986.9" y="387.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="989.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (250 samples, 0.12%)</title><rect x="986.9" y="371.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="989.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (250 samples, 0.12%)</title><rect x="986.9" y="355.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (250 samples, 0.12%)</title><rect x="986.9" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.9" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (250 samples, 0.12%)</title><rect x="986.9" y="323.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (250 samples, 0.12%)</title><rect x="986.9" y="307.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="989.9" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (184 samples, 0.08%)</title><rect x="988.2" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.2" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (184 samples, 0.08%)</title><rect x="988.2" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (93 samples, 0.04%)</title><rect x="988.2" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.04%)</title><rect x="988.2" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.04%)</title><rect x="988.2" y="371.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="991.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (91 samples, 0.04%)</title><rect x="988.7" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.7" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (91 samples, 0.04%)</title><rect x="988.7" y="387.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="991.7" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (149 samples, 0.07%)</title><rect x="989.2" y="435.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (149 samples, 0.07%)</title><rect x="989.2" y="419.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="992.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (203 samples, 0.09%)</title><rect x="990.1" y="483.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="993.1" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (203 samples, 0.09%)</title><rect x="990.1" y="467.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="993.1" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (145 samples, 0.07%)</title><rect x="991.2" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.2" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.of (145 samples, 0.07%)</title><rect x="991.2" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.2" y="510.0"></text>
</g>
<g>
<title>java.util.Optional (145 samples, 0.07%)</title><rect x="991.2" y="483.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="994.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execLocalRequest (18,756 samples, 8.63%)</title><rect x="991.9" y="547.0" width="101.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.9" y="558.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (512 samples, 0.24%)</title><rect x="991.9" y="531.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (512 samples, 0.24%)</title><rect x="991.9" y="515.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils$$Lambda$120/1292373631.get$Lambda (512 samples, 0.24%)</title><rect x="991.9" y="499.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.FutureUtils$$Lambda$120 (512 samples, 0.24%)</title><rect x="991.9" y="483.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="994.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (18,244 samples, 8.40%)</title><rect x="994.7" y="531.0" width="99.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="997.7" y="542.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (18,244 samples, 8.40%)</title><rect x="994.7" y="515.0" width="99.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.7" y="526.0">java/util/co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (592 samples, 0.27%)</title><rect x="994.7" y="499.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="997.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (545 samples, 0.25%)</title><rect x="997.9" y="499.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1000.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (17,107 samples, 7.87%)</title><rect x="1000.9" y="499.0" width="92.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.9" y="510.0">java/util/c..</text>
</g>
<g>
<title>java.lang.Thread (2,026 samples, 0.93%)</title><rect x="1000.9" y="483.0" width="11.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1003.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Thread (6,138 samples, 2.83%)</title><rect x="1011.9" y="483.0" width="33.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1014.9" y="494.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (8,943 samples, 4.12%)</title><rect x="1045.2" y="483.0" width="48.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.2" y="494.0">java..</text>
</g>
<g>
<title>java.lang.StringBuilder (507 samples, 0.23%)</title><rect x="1045.2" y="467.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1048.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (567 samples, 0.26%)</title><rect x="1048.0" y="467.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (567 samples, 0.26%)</title><rect x="1048.0" y="451.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1051.0" y="462.0"></text>
</g>
<g>
<title>byte[] (567 samples, 0.26%)</title><rect x="1048.0" y="435.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1051.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,829 samples, 0.84%)</title><rect x="1051.1" y="467.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,829 samples, 0.84%)</title><rect x="1051.1" y="451.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1054.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (589 samples, 0.27%)</title><rect x="1051.1" y="435.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1054.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,240 samples, 0.57%)</title><rect x="1054.3" y="435.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.3" y="446.0"></text>
</g>
<g>
<title>byte[] (1,240 samples, 0.57%)</title><rect x="1054.3" y="419.0" width="6.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1057.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (6,040 samples, 2.78%)</title><rect x="1061.0" y="467.0" width="32.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.0" y="478.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (6,040 samples, 2.78%)</title><rect x="1061.0" y="451.0" width="32.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.0" y="462.0">ja..</text>
</g>
<g>
<title>java.lang.Object (617 samples, 0.28%)</title><rect x="1061.0" y="435.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1064.0" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (5,423 samples, 2.50%)</title><rect x="1064.4" y="435.0" width="29.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.4" y="446.0">ja..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (2,624 samples, 1.21%)</title><rect x="1064.4" y="419.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.4" y="430.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (2,624 samples, 1.21%)</title><rect x="1064.4" y="403.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.4" y="414.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (2,624 samples, 1.21%)</title><rect x="1064.4" y="387.0" width="14.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1067.4" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (2,799 samples, 1.29%)</title><rect x="1078.6" y="419.0" width="15.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.6" y="430.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (1,546 samples, 0.71%)</title><rect x="1078.6" y="403.0" width="8.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1081.6" y="414.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (1,253 samples, 0.58%)</title><rect x="1087.0" y="403.0" width="6.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1090.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.setRequestPattern (2,983 samples, 1.37%)</title><rect x="1093.8" y="547.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (370 samples, 0.17%)</title><rect x="1093.8" y="531.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1263877414.invoke (370 samples, 0.17%)</title><rect x="1093.8" y="515.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (370 samples, 0.17%)</title><rect x="1093.8" y="499.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (104 samples, 0.05%)</title><rect x="1093.8" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (104 samples, 0.05%)</title><rect x="1093.8" y="467.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1096.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (266 samples, 0.12%)</title><rect x="1094.4" y="483.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (266 samples, 0.12%)</title><rect x="1094.4" y="467.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.4" y="478.0"></text>
</g>
<g>
<title>byte[] (266 samples, 0.12%)</title><rect x="1094.4" y="451.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1097.4" y="462.0"></text>
</g>
<g>
<title>java/net/URI.create (1,528 samples, 0.70%)</title><rect x="1095.8" y="531.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.8" y="542.0"></text>
</g>
<g>
<title>java.net.URI (299 samples, 0.14%)</title><rect x="1095.8" y="515.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1098.8" y="526.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,229 samples, 0.57%)</title><rect x="1097.5" y="515.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.5" y="526.0"></text>
</g>
<g>
<title>java.net.URI$Parser (133 samples, 0.06%)</title><rect x="1097.5" y="499.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1100.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,096 samples, 0.50%)</title><rect x="1098.2" y="499.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (182 samples, 0.08%)</title><rect x="1098.2" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (182 samples, 0.08%)</title><rect x="1098.2" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (95 samples, 0.04%)</title><rect x="1098.2" y="451.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1101.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.04%)</title><rect x="1098.7" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.7" y="462.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.04%)</title><rect x="1098.7" y="435.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1101.7" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (914 samples, 0.42%)</title><rect x="1099.2" y="483.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (476 samples, 0.22%)</title><rect x="1099.2" y="467.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (476 samples, 0.22%)</title><rect x="1099.2" y="451.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (193 samples, 0.09%)</title><rect x="1099.2" y="435.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1102.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (283 samples, 0.13%)</title><rect x="1100.2" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.2" y="446.0"></text>
</g>
<g>
<title>byte[] (283 samples, 0.13%)</title><rect x="1100.2" y="419.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1103.2" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (438 samples, 0.20%)</title><rect x="1101.8" y="467.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (235 samples, 0.11%)</title><rect x="1101.8" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (235 samples, 0.11%)</title><rect x="1101.8" y="435.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.04%)</title><rect x="1101.8" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1104.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (142 samples, 0.07%)</title><rect x="1102.3" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1105.3" y="430.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.07%)</title><rect x="1102.3" y="403.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1105.3" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (203 samples, 0.09%)</title><rect x="1103.0" y="451.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.0" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (203 samples, 0.09%)</title><rect x="1103.0" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (203 samples, 0.09%)</title><rect x="1103.0" y="419.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1106.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (203 samples, 0.09%)</title><rect x="1103.0" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (95 samples, 0.04%)</title><rect x="1103.0" y="387.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1106.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (108 samples, 0.05%)</title><rect x="1103.5" y="387.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.5" y="398.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.05%)</title><rect x="1103.5" y="371.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1106.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (589 samples, 0.27%)</title><rect x="1104.1" y="531.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1107.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (235 samples, 0.11%)</title><rect x="1104.1" y="515.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1107.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (354 samples, 0.16%)</title><rect x="1105.4" y="515.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (104 samples, 0.05%)</title><rect x="1105.4" y="499.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1108.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (250 samples, 0.12%)</title><rect x="1106.0" y="499.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (250 samples, 0.12%)</title><rect x="1106.0" y="483.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1109.0" y="494.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (93 samples, 0.04%)</title><rect x="1107.3" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.3" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.create (93 samples, 0.04%)</title><rect x="1107.3" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.3" y="526.0"></text>
</g>
<g>
<title>java.time.Duration (93 samples, 0.04%)</title><rect x="1107.3" y="499.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1110.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (403 samples, 0.19%)</title><rect x="1107.8" y="531.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1110.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (403 samples, 0.19%)</title><rect x="1107.8" y="515.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (403 samples, 0.19%)</title><rect x="1107.8" y="499.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1110.8" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (115 samples, 0.05%)</title><rect x="1107.8" y="483.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1110.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (113 samples, 0.05%)</title><rect x="1108.5" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.05%)</title><rect x="1108.5" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1111.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (175 samples, 0.08%)</title><rect x="1109.1" y="483.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.1" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (175 samples, 0.08%)</title><rect x="1109.1" y="467.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1112.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,017 samples, 0.47%)</title><rect x="1110.0" y="611.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,017 samples, 0.47%)</title><rect x="1110.0" y="595.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1113.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,017 samples, 0.47%)</title><rect x="1110.0" y="579.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (437 samples, 0.20%)</title><rect x="1110.0" y="563.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1113.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (580 samples, 0.27%)</title><rect x="1112.4" y="563.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.4" y="574.0"></text>
</g>
<g>
<title>byte[] (580 samples, 0.27%)</title><rect x="1112.4" y="547.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1115.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,242 samples, 1.95%)</title><rect x="1115.5" y="643.0" width="23.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.5" y="654.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (693 samples, 0.32%)</title><rect x="1115.5" y="627.0" width="3.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1118.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,404 samples, 0.65%)</title><rect x="1119.3" y="627.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.3" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (1,286 samples, 0.59%)</title><rect x="1119.3" y="611.0" width="7.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1122.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (118 samples, 0.05%)</title><rect x="1126.3" y="611.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1129.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,145 samples, 0.99%)</title><rect x="1126.9" y="627.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,145 samples, 0.99%)</title><rect x="1126.9" y="611.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.9" y="622.0"></text>
</g>
<g>
<title>char[] (1,072 samples, 0.49%)</title><rect x="1126.9" y="595.0" width="5.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1129.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (429 samples, 0.20%)</title><rect x="1132.8" y="595.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1135.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (644 samples, 0.30%)</title><rect x="1135.1" y="595.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (644 samples, 0.30%)</title><rect x="1135.1" y="579.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (644 samples, 0.30%)</title><rect x="1135.1" y="563.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.1" y="574.0"></text>
</g>
<g>
<title>byte[] (644 samples, 0.30%)</title><rect x="1135.1" y="547.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1138.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (379 samples, 0.17%)</title><rect x="1138.6" y="643.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.6" y="654.0"></text>
</g>
<g>
<title>byte[] (379 samples, 0.17%)</title><rect x="1138.6" y="627.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1141.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (745 samples, 0.34%)</title><rect x="1140.6" y="643.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (745 samples, 0.34%)</title><rect x="1140.6" y="627.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (745 samples, 0.34%)</title><rect x="1140.6" y="611.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.6" y="622.0"></text>
</g>
<g>
<title>java.lang.String (408 samples, 0.19%)</title><rect x="1140.6" y="595.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1143.6" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (337 samples, 0.16%)</title><rect x="1142.9" y="595.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.9" y="606.0"></text>
</g>
<g>
<title>byte[] (337 samples, 0.16%)</title><rect x="1142.9" y="579.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1145.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,341 samples, 3.84%)</title><rect x="1144.7" y="643.0" width="45.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.7" y="654.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,341 samples, 3.84%)</title><rect x="1144.7" y="627.0" width="45.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.7" y="638.0">one/..</text>
</g>
<g>
<title>char[] (3,771 samples, 1.74%)</title><rect x="1144.7" y="611.0" width="20.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1147.7" y="622.0"></text>
</g>
<g>
<title>char[] (360 samples, 0.17%)</title><rect x="1165.2" y="611.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1168.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String (1,525 samples, 0.70%)</title><rect x="1167.1" y="611.0" width="8.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1170.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,685 samples, 1.24%)</title><rect x="1175.4" y="611.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,685 samples, 1.24%)</title><rect x="1175.4" y="595.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,685 samples, 1.24%)</title><rect x="1175.4" y="579.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.4" y="590.0"></text>
</g>
<g>
<title>byte[] (2,685 samples, 1.24%)</title><rect x="1175.4" y="563.0" width="14.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1178.4" y="574.0"></text>
</g>
</g>
</svg>
