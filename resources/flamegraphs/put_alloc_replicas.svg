<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Replication control | RAM</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (47,885 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (27,173 samples, 56.75%)</title><rect x="10.0" y="323.0" width="669.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (27,173 samples, 56.75%)</title><rect x="10.0" y="307.0" width="669.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (27,173 samples, 56.75%)</title><rect x="10.0" y="291.0" width="669.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (893 samples, 1.86%)</title><rect x="10.0" y="275.0" width="22.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (893 samples, 1.86%)</title><rect x="10.0" y="259.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (893 samples, 1.86%)</title><rect x="10.0" y="243.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (893 samples, 1.86%)</title><rect x="10.0" y="227.0" width="22.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="238.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (893 samples, 1.86%)</title><rect x="10.0" y="211.0" width="22.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="222.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.run (26,280 samples, 54.88%)</title><rect x="32.0" y="275.0" width="647.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.0" y="286.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$7 (26,280 samples, 54.88%)</title><rect x="32.0" y="259.0" width="647.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.0" y="270.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$7</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5,587 samples, 11.67%)</title><rect x="32.0" y="243.0" width="137.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.0" y="254.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,971 samples, 8.29%)</title><rect x="32.0" y="227.0" width="97.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.0" y="238.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,930 samples, 6.12%)</title><rect x="32.0" y="211.0" width="72.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.0" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,930 samples, 6.12%)</title><rect x="32.0" y="195.0" width="72.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.0" y="206.0">one/nio/..</text>
</g>
<g>
<title>byte[] (2,930 samples, 6.12%)</title><rect x="32.0" y="179.0" width="72.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="35.0" y="190.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (1,041 samples, 2.17%)</title><rect x="104.2" y="211.0" width="25.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.2" y="222.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,041 samples, 2.17%)</title><rect x="104.2" y="195.0" width="25.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="107.2" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,616 samples, 3.37%)</title><rect x="129.9" y="227.0" width="39.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.9" y="238.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,616 samples, 3.37%)</title><rect x="129.9" y="211.0" width="39.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.9" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,616 samples, 3.37%)</title><rect x="129.9" y="195.0" width="39.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.9" y="206.0">jav..</text>
</g>
<g>
<title>java.lang.String (608 samples, 1.27%)</title><rect x="129.9" y="179.0" width="14.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="132.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,008 samples, 2.11%)</title><rect x="144.8" y="179.0" width="24.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.8" y="190.0">j..</text>
</g>
<g>
<title>byte[] (1,008 samples, 2.11%)</title><rect x="144.8" y="163.0" width="24.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="147.8" y="174.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$66/1595893425.exec (20,693 samples, 43.21%)</title><rect x="169.7" y="243.0" width="509.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.7" y="254.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$66/159589342..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$2 (20,693 samples, 43.21%)</title><rect x="169.7" y="227.0" width="509.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.7" y="238.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$2</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (20,693 samples, 43.21%)</title><rect x="169.7" y="211.0" width="509.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.7" y="222.0">ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes</text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.05%)</title><rect x="169.7" y="195.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="172.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,249 samples, 2.61%)</title><rect x="170.2" y="195.0" width="30.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.2" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,249 samples, 2.61%)</title><rect x="170.2" y="179.0" width="30.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.2" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,249 samples, 2.61%)</title><rect x="170.2" y="163.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.2" y="174.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,249 samples, 2.61%)</title><rect x="170.2" y="147.0" width="30.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.2" y="158.0">ja..</text>
</g>
<g>
<title>byte[] (1,249 samples, 2.61%)</title><rect x="170.2" y="131.0" width="30.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="173.2" y="142.0">by..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.13%)</title><rect x="201.0" y="195.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1585787493.invoke (61 samples, 0.13%)</title><rect x="201.0" y="179.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.13%)</title><rect x="201.0" y="163.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.03%)</title><rect x="201.0" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.03%)</title><rect x="201.0" y="131.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="204.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (47 samples, 0.10%)</title><rect x="201.4" y="147.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (47 samples, 0.10%)</title><rect x="201.4" y="131.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.4" y="142.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.10%)</title><rect x="201.4" y="115.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="204.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,011 samples, 6.29%)</title><rect x="202.5" y="195.0" width="74.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.5" y="206.0">java/nio..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,011 samples, 6.29%)</title><rect x="202.5" y="179.0" width="74.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.5" y="190.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,011 samples, 6.29%)</title><rect x="202.5" y="163.0" width="74.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="205.5" y="174.0">java.nio..</text>
</g>
<g>
<title>one.nio.http.Response (800 samples, 1.67%)</title><rect x="276.7" y="195.0" width="19.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="279.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (10,113 samples, 21.12%)</title><rect x="296.4" y="195.0" width="249.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.4" y="206.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>byte[] (34 samples, 0.07%)</title><rect x="296.4" y="179.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="299.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.03%)</title><rect x="297.3" y="179.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="300.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (125 samples, 0.26%)</title><rect x="297.6" y="179.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.6" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (34 samples, 0.07%)</title><rect x="297.6" y="163.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="300.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (91 samples, 0.19%)</title><rect x="298.4" y="163.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (91 samples, 0.19%)</title><rect x="298.4" y="147.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="301.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,941 samples, 20.76%)</title><rect x="300.7" y="179.0" width="245.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.7" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,941 samples, 20.76%)</title><rect x="300.7" y="163.0" width="245.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.7" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (78 samples, 0.16%)</title><rect x="300.7" y="147.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="303.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8,930 samples, 18.65%)</title><rect x="302.6" y="147.0" width="220.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.6" y="158.0">one/nio/http/HttpClient$Respo..</text>
</g>
<g>
<title>byte[] (8,803 samples, 18.38%)</title><rect x="302.6" y="131.0" width="216.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="305.6" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (127 samples, 0.27%)</title><rect x="519.5" y="131.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="522.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (735 samples, 1.53%)</title><rect x="522.7" y="147.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.7" y="158.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.04%)</title><rect x="522.7" y="131.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="525.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.10%)</title><rect x="523.2" y="131.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.10%)</title><rect x="523.2" y="115.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.04%)</title><rect x="523.2" y="99.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="526.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.06%)</title><rect x="523.6" y="99.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.6" y="110.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.06%)</title><rect x="523.6" y="83.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="526.6" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (17 samples, 0.04%)</title><rect x="524.3" y="131.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="527.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (578 samples, 1.21%)</title><rect x="524.8" y="131.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (578 samples, 1.21%)</title><rect x="524.8" y="115.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.8" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (578 samples, 1.21%)</title><rect x="524.8" y="99.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.8" y="110.0"></text>
</g>
<g>
<title>char[] (368 samples, 0.77%)</title><rect x="524.8" y="83.0" width="9.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="527.8" y="94.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.19%)</title><rect x="533.8" y="83.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="536.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (121 samples, 0.25%)</title><rect x="536.0" y="83.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="539.0" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (121 samples, 0.25%)</title><rect x="536.0" y="67.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.0" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (121 samples, 0.25%)</title><rect x="536.0" y="51.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.0" y="62.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.25%)</title><rect x="536.0" y="35.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="539.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (26 samples, 0.05%)</title><rect x="539.0" y="131.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="542.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.05%)</title><rect x="539.0" y="115.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="542.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (46 samples, 0.10%)</title><rect x="539.6" y="131.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.10%)</title><rect x="539.6" y="115.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="542.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.10%)</title><rect x="539.6" y="99.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.04%)</title><rect x="539.6" y="83.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="542.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.05%)</title><rect x="540.1" y="83.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.1" y="94.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.05%)</title><rect x="540.1" y="67.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="543.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (102 samples, 0.21%)</title><rect x="540.8" y="147.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.8" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (102 samples, 0.21%)</title><rect x="540.8" y="131.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.8" y="142.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.21%)</title><rect x="540.8" y="115.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="543.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (65 samples, 0.14%)</title><rect x="543.3" y="147.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (65 samples, 0.14%)</title><rect x="543.3" y="131.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (65 samples, 0.14%)</title><rect x="543.3" y="115.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.07%)</title><rect x="543.3" y="99.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="546.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.07%)</title><rect x="544.1" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.1" y="110.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.07%)</title><rect x="544.1" y="83.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="547.1" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (31 samples, 0.06%)</title><rect x="544.9" y="147.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.9" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (31 samples, 0.06%)</title><rect x="544.9" y="131.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.9" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (31 samples, 0.06%)</title><rect x="544.9" y="115.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.9" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (31 samples, 0.06%)</title><rect x="544.9" y="99.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="547.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,280 samples, 6.85%)</title><rect x="545.7" y="195.0" width="80.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.7" y="206.0">one/nio/h..</text>
</g>
<g>
<title>byte[] (1,491 samples, 3.11%)</title><rect x="545.7" y="179.0" width="36.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="548.7" y="190.0">byt..</text>
</g>
<g>
<title>java.lang.String[] (1,059 samples, 2.21%)</title><rect x="582.4" y="179.0" width="26.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="585.4" y="190.0">j..</text>
</g>
<g>
<title>java.lang.String (730 samples, 1.52%)</title><rect x="608.5" y="179.0" width="18.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="611.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (22 samples, 0.05%)</title><rect x="626.5" y="195.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (22 samples, 0.05%)</title><rect x="626.5" y="179.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="629.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (2,134 samples, 4.46%)</title><rect x="627.0" y="195.0" width="52.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.0" y="206.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (1,162 samples, 2.43%)</title><rect x="627.0" y="179.0" width="28.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.0" y="190.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (1,162 samples, 2.43%)</title><rect x="627.0" y="163.0" width="28.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.0" y="174.0">ru..</text>
</g>
<g>
<title>byte[] (1,162 samples, 2.43%)</title><rect x="627.0" y="147.0" width="28.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="630.0" y="158.0">by..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (972 samples, 2.03%)</title><rect x="655.7" y="179.0" width="23.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.7" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (972 samples, 2.03%)</title><rect x="655.7" y="163.0" width="23.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.7" y="174.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (972 samples, 2.03%)</title><rect x="655.7" y="147.0" width="23.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.7" y="158.0">j..</text>
</g>
<g>
<title>byte[] (972 samples, 2.03%)</title><rect x="655.7" y="131.0" width="23.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="658.7" y="142.0">b..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (20,712 samples, 43.25%)</title><rect x="679.6" y="323.0" width="510.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.6" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (451 samples, 0.94%)</title><rect x="679.6" y="307.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.6" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (451 samples, 0.94%)</title><rect x="679.6" y="291.0" width="11.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="682.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (20,261 samples, 42.31%)</title><rect x="690.7" y="307.0" width="499.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.7" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (20,261 samples, 42.31%)</title><rect x="690.7" y="291.0" width="499.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.7" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (20,261 samples, 42.31%)</title><rect x="690.7" y="275.0" width="499.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.7" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,402 samples, 11.28%)</title><rect x="690.7" y="259.0" width="133.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.7" y="270.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,402 samples, 11.28%)</title><rect x="690.7" y="243.0" width="133.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.7" y="254.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,086 samples, 8.53%)</title><rect x="690.7" y="227.0" width="100.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.7" y="238.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,124 samples, 2.35%)</title><rect x="690.7" y="211.0" width="27.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.7" y="222.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,124 samples, 2.35%)</title><rect x="690.7" y="195.0" width="27.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.7" y="206.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,124 samples, 2.35%)</title><rect x="690.7" y="179.0" width="27.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.7" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,124 samples, 2.35%)</title><rect x="690.7" y="163.0" width="27.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.7" y="174.0">j..</text>
</g>
<g>
<title>java.lang.String (454 samples, 0.95%)</title><rect x="690.7" y="147.0" width="11.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="693.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (670 samples, 1.40%)</title><rect x="701.9" y="147.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.9" y="158.0"></text>
</g>
<g>
<title>byte[] (670 samples, 1.40%)</title><rect x="701.9" y="131.0" width="16.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="704.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (2,962 samples, 6.19%)</title><rect x="718.4" y="211.0" width="73.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.4" y="222.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (630 samples, 1.32%)</title><rect x="718.4" y="195.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (630 samples, 1.32%)</title><rect x="718.4" y="179.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (630 samples, 1.32%)</title><rect x="718.4" y="163.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (630 samples, 1.32%)</title><rect x="718.4" y="147.0" width="15.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.4" y="158.0"></text>
</g>
<g>
<title>byte[] (630 samples, 1.32%)</title><rect x="718.4" y="131.0" width="15.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="721.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1146791049.linkToTargetMethod (590 samples, 1.23%)</title><rect x="733.9" y="195.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1134712904.invokeStatic (590 samples, 1.23%)</title><rect x="733.9" y="179.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$66/1595893425.get$Lambda (590 samples, 1.23%)</title><rect x="733.9" y="163.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$66 (590 samples, 1.23%)</title><rect x="733.9" y="147.0" width="14.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="736.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (444 samples, 0.93%)</title><rect x="748.5" y="195.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (444 samples, 0.93%)</title><rect x="748.5" y="179.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (444 samples, 0.93%)</title><rect x="748.5" y="163.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (266 samples, 0.56%)</title><rect x="748.5" y="147.0" width="6.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="751.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (178 samples, 0.37%)</title><rect x="755.0" y="147.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.0" y="158.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.37%)</title><rect x="755.0" y="131.0" width="4.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="758.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (766 samples, 1.60%)</title><rect x="759.4" y="195.0" width="18.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.4" y="206.0"></text>
</g>
<g>
<title>byte[] (766 samples, 1.60%)</title><rect x="759.4" y="179.0" width="18.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="762.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (532 samples, 1.11%)</title><rect x="778.3" y="195.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (531 samples, 1.11%)</title><rect x="778.3" y="179.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (531 samples, 1.11%)</title><rect x="778.3" y="163.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.get$Lambda (531 samples, 1.11%)</title><rect x="778.3" y="147.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$68 (531 samples, 1.11%)</title><rect x="778.3" y="131.0" width="13.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="781.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,316 samples, 2.75%)</title><rect x="791.4" y="227.0" width="32.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.4" y="238.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (1,316 samples, 2.75%)</title><rect x="791.4" y="211.0" width="32.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.4" y="222.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,316 samples, 2.75%)</title><rect x="791.4" y="195.0" width="32.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.4" y="206.0">ja..</text>
</g>
<g>
<title>java.lang.String (448 samples, 0.94%)</title><rect x="791.4" y="179.0" width="11.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="794.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (868 samples, 1.81%)</title><rect x="802.4" y="179.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.4" y="190.0">j..</text>
</g>
<g>
<title>byte[] (868 samples, 1.81%)</title><rect x="802.4" y="163.0" width="21.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="805.4" y="174.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,550 samples, 11.59%)</title><rect x="823.8" y="259.0" width="136.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.8" y="270.0">one/nio/http/Http..</text>
</g>
<g>
<title>one.nio.http.Request (954 samples, 1.99%)</title><rect x="823.8" y="243.0" width="23.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="826.8" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,685 samples, 3.52%)</title><rect x="847.3" y="243.0" width="41.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.3" y="254.0">one..</text>
</g>
<g>
<title>java.lang.String[] (1,685 samples, 3.52%)</title><rect x="847.3" y="227.0" width="41.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="850.3" y="238.0">jav..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,911 samples, 6.08%)</title><rect x="888.9" y="243.0" width="71.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.9" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,911 samples, 6.08%)</title><rect x="888.9" y="227.0" width="71.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="891.9" y="238.0">one/nio/..</text>
</g>
<g>
<title>char[] (1,706 samples, 3.56%)</title><rect x="888.9" y="211.0" width="42.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="891.9" y="222.0">char[]</text>
</g>
<g>
<title>java.lang.String (444 samples, 0.93%)</title><rect x="930.9" y="211.0" width="11.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="933.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (761 samples, 1.59%)</title><rect x="941.9" y="211.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="944.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (761 samples, 1.59%)</title><rect x="941.9" y="195.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (761 samples, 1.59%)</title><rect x="941.9" y="179.0" width="18.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="944.9" y="190.0"></text>
</g>
<g>
<title>byte[] (761 samples, 1.59%)</title><rect x="941.9" y="163.0" width="18.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="944.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (397 samples, 0.83%)</title><rect x="960.6" y="259.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.6" y="270.0"></text>
</g>
<g>
<title>byte[] (397 samples, 0.83%)</title><rect x="960.6" y="243.0" width="9.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="963.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,145 samples, 2.39%)</title><rect x="970.4" y="259.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.4" y="270.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (1,145 samples, 2.39%)</title><rect x="970.4" y="243.0" width="28.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.4" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,145 samples, 2.39%)</title><rect x="970.4" y="227.0" width="28.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.4" y="238.0">ja..</text>
</g>
<g>
<title>java.lang.String (479 samples, 1.00%)</title><rect x="970.4" y="211.0" width="11.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="973.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (666 samples, 1.39%)</title><rect x="982.2" y="211.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.2" y="222.0"></text>
</g>
<g>
<title>byte[] (666 samples, 1.39%)</title><rect x="982.2" y="195.0" width="16.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="985.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,767 samples, 16.22%)</title><rect x="998.6" y="259.0" width="191.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1001.6" y="270.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,767 samples, 16.22%)</title><rect x="998.6" y="243.0" width="191.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.6" y="254.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (3,711 samples, 7.75%)</title><rect x="998.6" y="227.0" width="91.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1001.6" y="238.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,422 samples, 2.97%)</title><rect x="1090.1" y="227.0" width="35.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1093.1" y="238.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,634 samples, 5.50%)</title><rect x="1125.1" y="227.0" width="64.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.1" y="238.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,634 samples, 5.50%)</title><rect x="1125.1" y="211.0" width="64.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.1" y="222.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,634 samples, 5.50%)</title><rect x="1125.1" y="195.0" width="64.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.1" y="206.0">java/la..</text>
</g>
<g>
<title>byte[] (2,634 samples, 5.50%)</title><rect x="1125.1" y="179.0" width="64.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1128.1" y="190.0">byte[]</text>
</g>
</g>
</svg>
