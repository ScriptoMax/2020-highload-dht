<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Replication control | CPU</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (6,469 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,451 samples, 99.72%)</title><rect x="10.4" y="947.0" width="1176.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.4" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.08%)</title><rect x="11.8" y="931.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.08%)</title><rect x="11.8" y="915.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.08%)</title><rect x="11.8" y="899.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.8" y="910.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (2 samples, 0.03%)</title><rect x="12.4" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (2 samples, 0.03%)</title><rect x="12.4" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (292 samples, 4.51%)</title><rect x="12.7" y="931.0" width="53.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.7" y="942.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (283 samples, 4.37%)</title><rect x="14.4" y="915.0" width="51.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.4" y="926.0">one/n..</text>
</g>
<g>
<title>JVM_IHashCode (104 samples, 1.61%)</title><rect x="16.2" y="899.0" width="19.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="19.2" y="910.0"></text>
</g>
<g>
<title>epoll_wait (104 samples, 1.61%)</title><rect x="16.2" y="883.0" width="19.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="19.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (95 samples, 1.47%)</title><rect x="17.8" y="867.0" width="17.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="20.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (94 samples, 1.45%)</title><rect x="18.0" y="851.0" width="17.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.0" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (82 samples, 1.27%)</title><rect x="20.0" y="835.0" width="15.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="23.0" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (81 samples, 1.25%)</title><rect x="20.0" y="819.0" width="14.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="23.0" y="830.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="20.0" y="803.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.0" y="814.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="20.0" y="787.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.0" y="798.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="20.2" y="771.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="23.2" y="782.0"></text>
</g>
<g>
<title>ep_poll (75 samples, 1.16%)</title><rect x="20.8" y="803.0" width="13.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="23.8" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (64 samples, 0.99%)</title><rect x="21.5" y="787.0" width="11.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="24.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (42 samples, 0.65%)</title><rect x="23.7" y="771.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.7" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (35 samples, 0.54%)</title><rect x="24.6" y="755.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.6" y="766.0"></text>
</g>
<g>
<title>sock_poll (25 samples, 0.39%)</title><rect x="25.5" y="739.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="28.5" y="750.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.17%)</title><rect x="27.9" y="723.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="30.9" y="734.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.08%)</title><rect x="30.1" y="739.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="33.1" y="750.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="31.0" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.0" y="766.0"></text>
</g>
<g>
<title>mutex_lock (10 samples, 0.15%)</title><rect x="31.3" y="771.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.3" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="33.3" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="36.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.06%)</title><rect x="33.7" y="787.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.7" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.06%)</title><rect x="33.7" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="36.7" y="782.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="33.7" y="755.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="36.7" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.06%)</title><rect x="33.7" y="739.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="36.7" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.06%)</title><rect x="35.2" y="899.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="38.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (149 samples, 2.30%)</title><rect x="35.9" y="899.0" width="27.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="38.9" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="35.9" y="883.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="38.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="35.9" y="867.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="38.9" y="878.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.08%)</title><rect x="36.1" y="851.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="39.1" y="862.0"></text>
</g>
<g>
<title>epoll_wait (142 samples, 2.20%)</title><rect x="37.2" y="883.0" width="25.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="40.2" y="894.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (135 samples, 2.09%)</title><rect x="38.5" y="867.0" width="24.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="41.5" y="878.0">e..</text>
</g>
<g>
<title>do_syscall_64 (135 samples, 2.09%)</title><rect x="38.5" y="851.0" width="24.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="41.5" y="862.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (108 samples, 1.67%)</title><rect x="43.2" y="835.0" width="19.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.2" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (107 samples, 1.65%)</title><rect x="43.2" y="819.0" width="19.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.2" y="830.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.06%)</title><rect x="43.2" y="803.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.2" y="814.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="43.2" y="787.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.2" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="43.6" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="46.6" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="43.9" y="803.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.9" y="814.0"></text>
</g>
<g>
<title>ep_poll (100 samples, 1.55%)</title><rect x="44.3" y="803.0" width="18.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.3" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (84 samples, 1.30%)</title><rect x="45.8" y="787.0" width="15.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.8" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (62 samples, 0.96%)</title><rect x="47.9" y="771.0" width="11.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="50.9" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (47 samples, 0.73%)</title><rect x="50.3" y="755.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.3" y="766.0"></text>
</g>
<g>
<title>sock_poll (38 samples, 0.59%)</title><rect x="51.8" y="739.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="54.8" y="750.0"></text>
</g>
<g>
<title>tcp_poll (17 samples, 0.26%)</title><rect x="55.2" y="723.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.2" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="58.3" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="61.3" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="58.9" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.9" y="766.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.12%)</title><rect x="59.3" y="771.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.3" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="60.7" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.7" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.11%)</title><rect x="61.3" y="787.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.3" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.11%)</title><rect x="61.3" y="771.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="64.3" y="782.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.09%)</title><rect x="61.4" y="755.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.4" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.09%)</title><rect x="61.4" y="739.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="64.4" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="62.2" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="65.2" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="62.2" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="65.2" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="62.2" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="65.2" y="702.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="62.2" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="65.2" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="62.2" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="65.2" y="670.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="62.2" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="65.2" y="654.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="62.2" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="65.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="62.2" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="65.2" y="622.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.09%)</title><rect x="63.1" y="899.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="66.1" y="910.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.14%)</title><rect x="64.2" y="899.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="67.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,144 samples, 94.98%)</title><rect x="66.0" y="931.0" width="1120.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.0" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,141 samples, 94.93%)</title><rect x="66.5" y="915.0" width="1120.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.5" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,787 samples, 89.46%)</title><rect x="67.5" y="899.0" width="1055.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.5" y="910.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,654 samples, 87.40%)</title><rect x="70.2" y="883.0" width="1031.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.2" y="894.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,651 samples, 87.36%)</title><rect x="70.7" y="867.0" width="1030.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.7" y="878.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,629 samples, 87.01%)</title><rect x="70.7" y="851.0" width="1026.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.7" y="862.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.03%)</title><rect x="71.5" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (25 samples, 0.39%)</title><rect x="71.8" y="835.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 0.39%)</title><rect x="71.8" y="819.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.08%)</title><rect x="72.9" y="803.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.08%)</title><rect x="72.9" y="787.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="73.8" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="73.8" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="74.0" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="74.8" y="803.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="77.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.08%)</title><rect x="75.5" y="803.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="76.0" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="76.0" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="76.0" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (5,598 samples, 86.54%)</title><rect x="76.4" y="835.0" width="1021.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.4" y="846.0">ru/mail/polis/service/codearound/RepliServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.05%)</title><rect x="78.0" y="819.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.05%)</title><rect x="78.0" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.05%)</title><rect x="78.0" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,693 samples, 26.17%)</title><rect x="78.6" y="819.0" width="308.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.6" y="830.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (23 samples, 0.36%)</title><rect x="81.3" y="803.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (23 samples, 0.36%)</title><rect x="81.3" y="787.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (23 samples, 0.36%)</title><rect x="81.3" y="771.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="82.8" y="755.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="85.8" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="82.8" y="739.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="85.8" y="750.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.09%)</title><rect x="83.3" y="755.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="86.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.03%)</title><rect x="84.4" y="755.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="87.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="84.8" y="755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="87.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="85.0" y="739.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="88.0" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="85.2" y="723.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="88.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,640 samples, 25.35%)</title><rect x="85.5" y="803.0" width="299.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.5" y="814.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (40 samples, 0.62%)</title><rect x="86.2" y="787.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (18 samples, 0.28%)</title><rect x="90.3" y="771.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (18 samples, 0.28%)</title><rect x="90.3" y="755.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (18 samples, 0.28%)</title><rect x="90.3" y="739.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.3" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="92.6" y="723.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="95.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,596 samples, 24.67%)</title><rect x="93.5" y="787.0" width="291.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.5" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,596 samples, 24.67%)</title><rect x="93.5" y="771.0" width="291.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.5" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 0.09%)</title><rect x="95.7" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,578 samples, 24.39%)</title><rect x="96.8" y="755.0" width="287.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.8" y="766.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.05%)</title><rect x="97.2" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,573 samples, 24.32%)</title><rect x="97.7" y="739.0" width="287.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.7" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (29 samples, 0.45%)</title><rect x="102.1" y="723.0" width="5.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="105.1" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="104.7" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="107.7" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.05%)</title><rect x="105.0" y="707.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="108.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.14%)</title><rect x="105.6" y="707.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.6" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="106.5" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.5" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (9 samples, 0.14%)</title><rect x="107.4" y="723.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="110.4" y="734.0"></text>
</g>
<g>
<title>__libc_send (1,504 samples, 23.25%)</title><rect x="109.2" y="723.0" width="274.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="112.2" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,482 samples, 22.91%)</title><rect x="113.2" y="707.0" width="270.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="116.2" y="718.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.06%)</title><rect x="113.2" y="691.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="116.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1,478 samples, 22.85%)</title><rect x="114.0" y="691.0" width="269.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="117.0" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (3 samples, 0.05%)</title><rect x="123.5" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="126.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1,421 samples, 21.97%)</title><rect x="124.0" y="675.0" width="259.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="127.0" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,412 samples, 21.83%)</title><rect x="124.2" y="659.0" width="257.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.2" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="125.5" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="128.5" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="125.8" y="643.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="128.8" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1,384 samples, 21.39%)</title><rect x="126.2" y="643.0" width="252.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="129.2" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="127.3" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="130.3" y="638.0"></text>
</g>
<g>
<title>inet_sendmsg (1,360 samples, 21.02%)</title><rect x="127.8" y="627.0" width="248.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="130.8" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,344 samples, 20.78%)</title><rect x="130.0" y="611.0" width="245.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="133.0" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="131.5" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.5" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="132.4" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="135.4" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.09%)</title><rect x="132.9" y="595.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="135.9" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.06%)</title><rect x="132.9" y="579.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="135.9" y="590.0"></text>
</g>
<g>
<title>release_sock (10 samples, 0.15%)</title><rect x="134.0" y="595.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.0" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="135.9" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="138.9" y="606.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="136.6" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="139.6" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (7 samples, 0.11%)</title><rect x="137.0" y="595.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.0" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="138.2" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,291 samples, 19.96%)</title><rect x="138.8" y="595.0" width="235.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="141.8" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (9 samples, 0.14%)</title><rect x="143.2" y="579.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.2" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.12%)</title><rect x="143.3" y="563.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="146.3" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.03%)</title><rect x="144.8" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="147.8" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (11 samples, 0.17%)</title><rect x="145.2" y="579.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="148.2" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.12%)</title><rect x="145.3" y="563.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="148.3" y="574.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="147.2" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="150.2" y="590.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (6 samples, 0.09%)</title><rect x="147.5" y="579.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="150.5" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (71 samples, 1.10%)</title><rect x="148.6" y="579.0" width="13.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.6" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (60 samples, 0.93%)</title><rect x="149.7" y="563.0" width="11.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="152.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.05%)</title><rect x="150.5" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="153.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (34 samples, 0.53%)</title><rect x="151.0" y="547.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="154.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (29 samples, 0.45%)</title><rect x="151.0" y="531.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.0" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (17 samples, 0.26%)</title><rect x="152.1" y="515.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.1" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.08%)</title><rect x="155.4" y="515.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="158.4" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="156.3" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="159.3" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.05%)</title><rect x="156.7" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="159.7" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.28%)</title><rect x="157.2" y="547.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="160.2" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.06%)</title><rect x="159.6" y="531.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="162.6" y="542.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.08%)</title><rect x="160.7" y="563.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="163.7" y="574.0"></text>
</g>
<g>
<title>skb_entail (8 samples, 0.12%)</title><rect x="161.6" y="579.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="164.6" y="590.0"></text>
</g>
<g>
<title>tcp_push (1,138 samples, 17.59%)</title><rect x="163.2" y="579.0" width="207.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="166.2" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,129 samples, 17.45%)</title><rect x="164.3" y="563.0" width="206.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.3" y="574.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (4 samples, 0.06%)</title><rect x="164.7" y="547.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.7" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_stop (4 samples, 0.06%)</title><rect x="165.4" y="547.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="168.4" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.06%)</title><rect x="166.1" y="547.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="169.1" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.11%)</title><rect x="166.9" y="547.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.9" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (3 samples, 0.05%)</title><rect x="168.1" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,105 samples, 17.08%)</title><rect x="168.7" y="547.0" width="201.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="171.7" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,041 samples, 16.09%)</title><rect x="172.2" y="531.0" width="189.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="175.2" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="175.6" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="178.6" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,007 samples, 15.57%)</title><rect x="176.0" y="515.0" width="183.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="179.0" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (1,002 samples, 15.49%)</title><rect x="176.7" y="499.0" width="182.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="179.7" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (989 samples, 15.29%)</title><rect x="178.2" y="483.0" width="180.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="181.2" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (131 samples, 2.03%)</title><rect x="178.2" y="467.0" width="23.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="181.2" y="478.0">_..</text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (8 samples, 0.12%)</title><rect x="178.9" y="451.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="181.9" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.03%)</title><rect x="180.4" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.4" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (114 samples, 1.76%)</title><rect x="180.7" y="451.0" width="20.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="183.7" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (17 samples, 0.26%)</title><rect x="181.8" y="435.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.8" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (16 samples, 0.25%)</title><rect x="182.0" y="419.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.0" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (72 samples, 1.11%)</title><rect x="184.9" y="435.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.9" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.03%)</title><rect x="185.1" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.1" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (5 samples, 0.08%)</title><rect x="185.5" y="419.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="188.5" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.03%)</title><rect x="186.4" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="189.4" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (60 samples, 0.93%)</title><rect x="186.8" y="419.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.8" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (15 samples, 0.23%)</title><rect x="187.1" y="403.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="190.1" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.03%)</title><rect x="189.9" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (2 samples, 0.03%)</title><rect x="190.2" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.2" y="414.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.03%)</title><rect x="190.6" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.6" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.03%)</title><rect x="190.9" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.9" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.03%)</title><rect x="191.3" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="194.3" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (33 samples, 0.51%)</title><rect x="191.7" y="403.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="194.7" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="193.5" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="196.5" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (4 samples, 0.06%)</title><rect x="194.2" y="387.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.2" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.06%)</title><rect x="194.2" y="371.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.2" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (15 samples, 0.23%)</title><rect x="195.0" y="387.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="198.0" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (6 samples, 0.09%)</title><rect x="196.6" y="371.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.6" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (2 samples, 0.03%)</title><rect x="197.7" y="419.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="200.7" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="198.1" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="201.1" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (16 samples, 0.25%)</title><rect x="198.6" y="435.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="201.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="199.0" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="202.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (12 samples, 0.19%)</title><rect x="199.3" y="419.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.06%)</title><rect x="199.5" y="403.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="202.5" y="414.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (7 samples, 0.11%)</title><rect x="200.3" y="403.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="203.3" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="201.5" y="451.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="204.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.05%)</title><rect x="202.1" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.1" y="478.0"></text>
</g>
<g>
<title>ip_output (851 samples, 13.16%)</title><rect x="202.6" y="467.0" width="155.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="205.6" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="203.4" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="206.4" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (828 samples, 12.80%)</title><rect x="203.9" y="451.0" width="151.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="206.9" y="462.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.12%)</title><rect x="204.8" y="435.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="207.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (812 samples, 12.55%)</title><rect x="206.5" y="435.0" width="148.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="209.5" y="446.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (718 samples, 11.10%)</title><rect x="209.0" y="419.0" width="131.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.0" y="430.0">__local_bh_enabl..</text>
</g>
<g>
<title>do_softirq.part.21 (716 samples, 11.07%)</title><rect x="209.4" y="403.0" width="130.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="212.4" y="414.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (707 samples, 10.93%)</title><rect x="211.0" y="387.0" width="129.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="214.0" y="398.0">do_softirq_own_s..</text>
</g>
<g>
<title>__softirqentry_text_start (706 samples, 10.91%)</title><rect x="211.0" y="371.0" width="128.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="214.0" y="382.0">__softirqentry_t..</text>
</g>
<g>
<title>net_rx_action (699 samples, 10.81%)</title><rect x="211.6" y="355.0" width="127.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="214.6" y="366.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (684 samples, 10.57%)</title><rect x="214.3" y="339.0" width="124.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="217.3" y="350.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (674 samples, 10.42%)</title><rect x="215.9" y="323.0" width="123.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="218.9" y="334.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (670 samples, 10.36%)</title><rect x="216.5" y="307.0" width="122.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="219.5" y="318.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_core (15 samples, 0.23%)</title><rect x="216.9" y="291.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="219.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv (651 samples, 10.06%)</title><rect x="219.6" y="291.0" width="118.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="222.6" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (13 samples, 0.20%)</title><rect x="220.7" y="275.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (608 samples, 9.40%)</title><rect x="223.1" y="275.0" width="110.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="226.1" y="286.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (602 samples, 9.31%)</title><rect x="223.4" y="259.0" width="109.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="226.4" y="270.0">ip_local_deli..</text>
</g>
<g>
<title>ip_local_deliver_finish (584 samples, 9.03%)</title><rect x="224.7" y="243.0" width="106.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="227.7" y="254.0">ip_local_deli..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (580 samples, 8.97%)</title><rect x="224.9" y="227.0" width="105.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.9" y="238.0">ip_protocol_d..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="226.3" y="211.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="229.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (4 samples, 0.06%)</title><rect x="227.1" y="211.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="230.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (563 samples, 8.70%)</title><rect x="228.0" y="211.0" width="102.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.0" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (28 samples, 0.43%)</title><rect x="231.3" y="195.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="234.3" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (5 samples, 0.08%)</title><rect x="235.5" y="179.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="238.5" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="236.7" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="239.7" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13 samples, 0.20%)</title><rect x="237.1" y="195.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="240.1" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.03%)</title><rect x="238.0" y="179.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="241.0" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.06%)</title><rect x="238.7" y="179.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="241.7" y="190.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.03%)</title><rect x="239.7" y="195.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="242.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (490 samples, 7.57%)</title><rect x="240.0" y="195.0" width="89.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="243.0" y="206.0">tcp_v4_do_..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="240.7" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="243.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (480 samples, 7.42%)</title><rect x="241.7" y="179.0" width="87.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.7" y="190.0">tcp_rcv_es..</text>
</g>
<g>
<title>__tcp_ack_snd_check (19 samples, 0.29%)</title><rect x="242.4" y="163.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.4" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (16 samples, 0.25%)</title><rect x="242.9" y="147.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="245.9" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.23%)</title><rect x="243.1" y="131.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="246.1" y="142.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="243.3" y="115.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="246.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.19%)</title><rect x="243.7" y="115.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="246.7" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.12%)</title><rect x="244.4" y="99.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.4" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="245.9" y="163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="248.9" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.05%)</title><rect x="246.6" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="249.6" y="174.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.03%)</title><rect x="247.1" y="163.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.1" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="247.5" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="250.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (141 samples, 2.18%)</title><rect x="247.9" y="163.0" width="25.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.9" y="174.0">t..</text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.06%)</title><rect x="253.3" y="147.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.3" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="254.1" y="147.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.1" y="158.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.05%)</title><rect x="254.4" y="147.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="257.4" y="158.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.05%)</title><rect x="255.0" y="147.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="258.0" y="158.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="255.5" y="147.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="258.5" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (3 samples, 0.05%)</title><rect x="255.9" y="147.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="258.9" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (86 samples, 1.33%)</title><rect x="256.6" y="147.0" width="15.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="259.6" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (40 samples, 0.62%)</title><rect x="261.0" y="131.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="264.0" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (17 samples, 0.26%)</title><rect x="261.4" y="115.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="264.4" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (17 samples, 0.26%)</title><rect x="261.4" y="99.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="264.4" y="110.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="263.9" y="83.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="266.9" y="94.0"></text>
</g>
<g>
<title>skb_release_all (21 samples, 0.32%)</title><rect x="264.5" y="115.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="267.5" y="126.0"></text>
</g>
<g>
<title>skb_release_data (19 samples, 0.29%)</title><rect x="264.8" y="99.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="267.8" y="110.0"></text>
</g>
<g>
<title>skb_free_head (13 samples, 0.20%)</title><rect x="265.9" y="83.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="268.9" y="94.0"></text>
</g>
<g>
<title>kfree (13 samples, 0.20%)</title><rect x="265.9" y="67.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="268.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.06%)</title><rect x="267.6" y="51.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="270.6" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.03%)</title><rect x="267.9" y="35.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="270.9" y="46.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="268.3" y="131.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="271.3" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="268.7" y="131.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="271.7" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="269.4" y="131.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="272.4" y="142.0"></text>
</g>
<g>
<title>rb_erase (4 samples, 0.06%)</title><rect x="269.9" y="131.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.9" y="142.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="270.7" y="131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="273.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.03%)</title><rect x="271.2" y="131.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="274.2" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="271.9" y="131.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.9" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.03%)</title><rect x="272.3" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.3" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="272.9" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.9" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="273.2" y="147.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.2" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.06%)</title><rect x="273.6" y="163.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="276.6" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (281 samples, 4.34%)</title><rect x="274.5" y="163.0" width="51.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="277.5" y="174.0">tcp_d..</text>
</g>
<g>
<title>sock_def_readable (262 samples, 4.05%)</title><rect x="276.1" y="147.0" width="47.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="279.1" y="158.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (251 samples, 3.88%)</title><rect x="278.1" y="131.0" width="45.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="281.1" y="142.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (251 samples, 3.88%)</title><rect x="278.1" y="115.0" width="45.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="281.1" y="126.0">__wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (247 samples, 3.82%)</title><rect x="278.9" y="99.0" width="45.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="281.9" y="110.0">_raw..</text>
</g>
<g>
<title>tcp_event_data_recv (9 samples, 0.14%)</title><rect x="323.9" y="147.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="326.9" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="325.7" y="163.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="328.7" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="326.1" y="163.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="329.1" y="174.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="326.5" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="329.5" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="326.5" y="131.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="329.5" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="327.0" y="163.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="330.0" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.05%)</title><rect x="328.1" y="163.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.1" y="174.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.03%)</title><rect x="328.8" y="163.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="331.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (4 samples, 0.06%)</title><rect x="329.4" y="195.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="332.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.05%)</title><rect x="330.1" y="195.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="333.1" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="330.7" y="227.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="333.7" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.03%)</title><rect x="331.4" y="243.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="334.4" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.11%)</title><rect x="332.0" y="243.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="335.0" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.06%)</title><rect x="332.1" y="227.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="335.1" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.06%)</title><rect x="332.1" y="211.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="335.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.03%)</title><rect x="333.4" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="336.4" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (6 samples, 0.09%)</title><rect x="334.1" y="275.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="337.1" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="335.2" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="338.2" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (3 samples, 0.05%)</title><rect x="335.6" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.6" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.17%)</title><rect x="336.1" y="275.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="339.1" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (6 samples, 0.09%)</title><rect x="336.7" y="259.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="339.7" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.09%)</title><rect x="336.7" y="243.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="339.7" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="337.8" y="259.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="340.8" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="337.8" y="243.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="340.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.06%)</title><rect x="339.1" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="342.1" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (76 samples, 1.17%)</title><rect x="340.0" y="419.0" width="13.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="343.0" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (73 samples, 1.13%)</title><rect x="340.0" y="403.0" width="13.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="343.0" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (40 samples, 0.62%)</title><rect x="342.9" y="387.0" width="7.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="345.9" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (25 samples, 0.39%)</title><rect x="344.0" y="371.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="347.0" y="382.0"></text>
</g>
<g>
<title>netif_rx (16 samples, 0.25%)</title><rect x="344.7" y="355.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="347.7" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="344.7" y="339.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="347.7" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.22%)</title><rect x="345.1" y="339.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="348.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (14 samples, 0.22%)</title><rect x="345.1" y="323.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.1" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="347.6" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="350.6" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="348.2" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="351.2" y="366.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.03%)</title><rect x="348.2" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="351.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="348.6" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="351.6" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.06%)</title><rect x="348.9" y="371.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="351.9" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.05%)</title><rect x="349.6" y="371.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="352.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="350.2" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="353.2" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (13 samples, 0.20%)</title><rect x="350.9" y="387.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="353.9" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.08%)</title><rect x="352.0" y="371.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="355.0" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="352.9" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="355.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="353.3" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="356.3" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.21 (4 samples, 0.06%)</title><rect x="353.8" y="419.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="356.8" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="354.6" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="357.6" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (4 samples, 0.06%)</title><rect x="354.9" y="451.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.9" y="462.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (3 samples, 0.05%)</title><rect x="355.7" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="358.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.12%)</title><rect x="356.4" y="451.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="359.4" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.05%)</title><rect x="356.4" y="435.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="359.4" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="356.6" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="359.6" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (4 samples, 0.06%)</title><rect x="356.9" y="435.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="359.9" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="358.0" y="467.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.0" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.06%)</title><rect x="358.8" y="483.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="361.8" y="494.0"></text>
</g>
<g>
<title>skb_clone (9 samples, 0.14%)</title><rect x="359.7" y="515.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.7" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.05%)</title><rect x="359.9" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="362.9" y="510.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.08%)</title><rect x="360.4" y="499.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="363.4" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.06%)</title><rect x="360.6" y="483.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.6" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="361.7" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.7" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="361.7" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="364.7" y="510.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.06%)</title><rect x="362.6" y="531.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="365.6" y="542.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.06%)</title><rect x="363.5" y="531.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.5" y="542.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="364.2" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="367.2" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.26%)</title><rect x="364.8" y="531.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="367.8" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="365.5" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="368.5" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.17%)</title><rect x="365.9" y="515.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="368.9" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="367.0" y="499.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="370.0" y="510.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.08%)</title><rect x="367.0" y="483.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="367.2" y="467.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.2" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (3 samples, 0.05%)</title><rect x="367.9" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.9" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="368.4" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="371.4" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.06%)</title><rect x="369.0" y="531.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="372.0" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="369.7" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.7" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.05%)</title><rect x="370.3" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="373.3" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.06%)</title><rect x="370.8" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="373.8" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (11 samples, 0.17%)</title><rect x="371.5" y="579.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.5" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.14%)</title><rect x="371.7" y="563.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="372.8" y="547.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.8" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="373.5" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="376.5" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="374.3" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="377.3" y="606.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="374.8" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="377.8" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (4 samples, 0.06%)</title><rect x="375.2" y="611.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="378.2" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (12 samples, 0.19%)</title><rect x="375.9" y="627.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="378.9" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.03%)</title><rect x="375.9" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="378.9" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (10 samples, 0.15%)</title><rect x="376.3" y="611.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="379.3" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.15%)</title><rect x="376.3" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.12%)</title><rect x="376.6" y="579.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.05%)</title><rect x="378.1" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="381.1" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.26%)</title><rect x="378.6" y="643.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="381.6" y="654.0"></text>
</g>
<g>
<title>__fdget (14 samples, 0.22%)</title><rect x="378.6" y="627.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="381.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.22%)</title><rect x="378.6" y="611.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="381.6" y="622.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.08%)</title><rect x="380.3" y="595.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="381.2" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="384.2" y="638.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.08%)</title><rect x="381.9" y="659.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="384.9" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="382.8" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="385.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="383.2" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.2" y="686.0"></text>
</g>
<g>
<title>send@plt (5 samples, 0.08%)</title><rect x="383.8" y="723.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="386.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.23%)</title><rect x="384.7" y="803.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.12%)</title><rect x="385.9" y="787.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.12%)</title><rect x="385.9" y="771.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.22%)</title><rect x="387.4" y="819.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.12%)</title><rect x="388.5" y="803.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.12%)</title><rect x="388.5" y="787.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.25%)</title><rect x="390.0" y="819.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.20%)</title><rect x="390.3" y="803.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.20%)</title><rect x="390.3" y="787.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (6 samples, 0.09%)</title><rect x="392.9" y="819.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.9" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="393.4" y="803.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="396.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.getWithMultipleNodes (3,855 samples, 59.59%)</title><rect x="394.2" y="819.0" width="703.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.2" y="830.0">ru/mail/polis/service/codearound/RepliServiceImpl.getWithMultipleNodes</text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.11%)</title><rect x="398.9" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.06%)</title><rect x="398.9" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.9" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="399.3" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.05%)</title><rect x="399.6" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="399.8" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.8" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="399.8" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="400.2" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1822971466.invoke (3 samples, 0.05%)</title><rect x="400.2" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/476800120.invoke (3 samples, 0.05%)</title><rect x="400.2" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="403.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="400.2" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (3 samples, 0.05%)</title><rect x="400.2" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="403.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.05%)</title><rect x="400.2" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="400.2" y="707.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="403.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.40%)</title><rect x="400.7" y="803.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="403.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.37%)</title><rect x="401.1" y="787.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.36%)</title><rect x="401.3" y="771.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="404.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.36%)</title><rect x="401.3" y="755.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.3" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (14 samples, 0.22%)</title><rect x="402.0" y="739.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 0.09%)</title><rect x="402.9" y="723.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (4 samples, 0.06%)</title><rect x="403.3" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="404.2" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.06%)</title><rect x="404.7" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.06%)</title><rect x="405.5" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.5" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (3 samples, 0.05%)</title><rect x="405.6" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.6" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="405.8" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="405.8" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.03%)</title><rect x="405.8" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.09%)</title><rect x="406.2" y="803.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.2" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.09%)</title><rect x="406.2" y="787.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.2" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.09%)</title><rect x="406.2" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.2" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.09%)</title><rect x="406.2" y="755.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.2" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="406.6" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="409.6" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="406.7" y="723.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="409.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (1,888 samples, 29.19%)</title><rect x="407.3" y="803.0" width="344.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="410.3" y="814.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (9 samples, 0.14%)</title><rect x="407.3" y="787.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.05%)</title><rect x="408.4" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="408.4" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="408.4" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.05%)</title><rect x="408.4" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,879 samples, 29.05%)</title><rect x="408.9" y="787.0" width="342.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.9" y="798.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,878 samples, 29.03%)</title><rect x="409.1" y="771.0" width="342.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.1" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (430 samples, 6.65%)</title><rect x="410.9" y="755.0" width="78.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.9" y="766.0">one/nio/h..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.08%)</title><rect x="422.4" y="739.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="425.4" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.08%)</title><rect x="422.4" y="723.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="425.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.08%)</title><rect x="422.4" y="707.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="425.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.08%)</title><rect x="422.4" y="691.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="425.4" y="702.0"></text>
</g>
<g>
<title>__memset_erms (2 samples, 0.03%)</title><rect x="422.8" y="675.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="425.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (361 samples, 5.58%)</title><rect x="423.3" y="739.0" width="65.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.3" y="750.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (57 samples, 0.88%)</title><rect x="425.0" y="723.0" width="10.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="428.0" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.12%)</title><rect x="425.5" y="707.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="428.5" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (14 samples, 0.22%)</title><rect x="427.4" y="707.0" width="2.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="430.4" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (28 samples, 0.43%)</title><rect x="429.9" y="707.0" width="5.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="432.9" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="433.2" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="436.2" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.08%)</title><rect x="433.6" y="691.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="436.6" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="434.5" y="691.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="437.5" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="434.5" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="437.5" y="686.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.03%)</title><rect x="435.0" y="707.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="438.0" y="718.0"></text>
</g>
<g>
<title>__GI___recv (284 samples, 4.39%)</title><rect x="435.4" y="723.0" width="51.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="438.4" y="734.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (267 samples, 4.13%)</title><rect x="438.5" y="707.0" width="48.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.5" y="718.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.03%)</title><rect x="438.5" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (265 samples, 4.10%)</title><rect x="438.8" y="691.0" width="48.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.8" y="702.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (238 samples, 3.68%)</title><rect x="443.8" y="675.0" width="43.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="446.8" y="686.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (231 samples, 3.57%)</title><rect x="443.8" y="659.0" width="42.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="446.8" y="670.0">__sy..</text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="444.7" y="643.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="447.7" y="654.0"></text>
</g>
<g>
<title>sock_recvmsg (205 samples, 3.17%)</title><rect x="445.8" y="643.0" width="37.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.8" y="654.0">soc..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="446.1" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.1" y="638.0"></text>
</g>
<g>
<title>inet_recvmsg (184 samples, 2.84%)</title><rect x="446.5" y="627.0" width="33.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="449.5" y="638.0">in..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.06%)</title><rect x="447.6" y="611.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="450.6" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (173 samples, 2.67%)</title><rect x="448.5" y="611.0" width="31.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="451.5" y="622.0">tc..</text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.09%)</title><rect x="453.1" y="595.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="456.1" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="453.1" y="579.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="456.1" y="590.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="453.8" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.8" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.03%)</title><rect x="454.3" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.3" y="606.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="455.3" y="595.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="458.3" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="455.3" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="458.3" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (93 samples, 1.44%)</title><rect x="456.0" y="595.0" width="17.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (3 samples, 0.05%)</title><rect x="457.3" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="460.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="457.8" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.8" y="590.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.03%)</title><rect x="458.2" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="461.2" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (34 samples, 0.53%)</title><rect x="458.5" y="579.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="461.5" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="458.5" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="461.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (32 samples, 0.49%)</title><rect x="458.9" y="563.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="461.9" y="574.0"></text>
</g>
<g>
<title>remove_wait_queue (16 samples, 0.25%)</title><rect x="464.9" y="579.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="467.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="464.9" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="467.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.22%)</title><rect x="465.3" y="563.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="468.3" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (7 samples, 0.11%)</title><rect x="467.8" y="579.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="470.8" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="469.1" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.1" y="590.0"></text>
</g>
<g>
<title>wait_woken (19 samples, 0.29%)</title><rect x="469.5" y="579.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="472.5" y="590.0"></text>
</g>
<g>
<title>schedule_timeout (17 samples, 0.26%)</title><rect x="469.9" y="563.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.15%)</title><rect x="470.4" y="547.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="473.4" y="558.0"></text>
</g>
<g>
<title>del_timer_sync (3 samples, 0.05%)</title><rect x="472.2" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.2" y="558.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (3 samples, 0.05%)</title><rect x="472.2" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="472.2" y="515.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="475.2" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (27 samples, 0.42%)</title><rect x="473.0" y="595.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="476.0" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (24 samples, 0.37%)</title><rect x="473.3" y="579.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.3" y="590.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="473.9" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="476.9" y="574.0"></text>
</g>
<g>
<title>simple_copy_to_iter (19 samples, 0.29%)</title><rect x="474.2" y="563.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.2" y="574.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.12%)</title><rect x="474.4" y="547.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="477.4" y="558.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="475.0" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.0" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="475.3" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="478.3" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.14%)</title><rect x="476.1" y="547.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="479.1" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.12%)</title><rect x="476.2" y="531.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="479.2" y="542.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.08%)</title><rect x="477.9" y="595.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="480.9" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.05%)</title><rect x="479.0" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.0" y="606.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.03%)</title><rect x="479.7" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="482.7" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.25%)</title><rect x="480.1" y="627.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (14 samples, 0.22%)</title><rect x="480.4" y="611.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="483.4" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="480.4" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="483.4" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.19%)</title><rect x="480.8" y="595.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.8" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.14%)</title><rect x="481.3" y="579.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="484.3" y="590.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.05%)</title><rect x="482.1" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="485.1" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.05%)</title><rect x="482.1" y="547.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="485.1" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="482.6" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="485.6" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (15 samples, 0.23%)</title><rect x="483.2" y="643.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.2" y="654.0"></text>
</g>
<g>
<title>__fdget (14 samples, 0.22%)</title><rect x="483.2" y="627.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="486.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.20%)</title><rect x="483.3" y="611.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="486.3" y="622.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.17%)</title><rect x="483.7" y="595.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="486.7" y="606.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.06%)</title><rect x="486.1" y="659.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="489.1" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="486.8" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.8" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.06%)</title><rect x="487.2" y="723.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="490.2" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.11%)</title><rect x="487.9" y="723.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="490.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (83 samples, 1.28%)</title><rect x="489.4" y="755.0" width="15.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.05%)</title><rect x="491.0" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="491.0" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="491.0" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="491.0" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="491.6" y="739.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="491.6" y="723.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.08%)</title><rect x="491.6" y="707.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (34 samples, 0.53%)</title><rect x="492.5" y="739.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.29%)</title><rect x="495.2" y="723.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.29%)</title><rect x="495.2" y="707.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="498.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.11%)</title><rect x="497.2" y="691.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.11%)</title><rect x="497.2" y="675.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="500.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.11%)</title><rect x="497.2" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (8 samples, 0.12%)</title><rect x="498.7" y="739.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="499.6" y="723.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="502.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (20 samples, 0.31%)</title><rect x="500.1" y="739.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="503.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.19%)</title><rect x="501.6" y="723.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.19%)</title><rect x="501.6" y="707.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="503.2" y="691.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="506.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (4 samples, 0.06%)</title><rect x="503.8" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.8" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="503.8" y="723.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="506.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (33 samples, 0.51%)</title><rect x="504.5" y="755.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.09%)</title><rect x="505.2" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="506.0" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.0" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="506.0" y="707.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="509.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (19 samples, 0.29%)</title><rect x="506.3" y="739.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.09%)</title><rect x="506.9" y="723.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.05%)</title><rect x="506.9" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="507.1" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.1" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="507.6" y="707.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="510.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (10 samples, 0.15%)</title><rect x="508.0" y="723.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.14%)</title><rect x="508.2" y="707.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.11%)</title><rect x="508.5" y="691.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.08%)</title><rect x="508.9" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.06%)</title><rect x="509.8" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.05%)</title><rect x="510.0" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.12%)</title><rect x="510.5" y="755.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.08%)</title><rect x="511.1" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.08%)</title><rect x="511.1" y="723.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.09%)</title><rect x="512.0" y="755.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.0" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (273 samples, 4.22%)</title><rect x="513.1" y="755.0" width="49.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.1" y="766.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (14 samples, 0.22%)</title><rect x="514.7" y="739.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="517.7" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (248 samples, 3.83%)</title><rect x="517.3" y="739.0" width="45.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="520.3" y="750.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (226 samples, 3.49%)</title><rect x="521.3" y="723.0" width="41.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="524.3" y="734.0">ent..</text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.06%)</title><rect x="521.3" y="707.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="524.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (222 samples, 3.43%)</title><rect x="522.0" y="707.0" width="40.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="525.0" y="718.0">do_..</text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.03%)</title><rect x="538.1" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="541.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (132 samples, 2.04%)</title><rect x="538.4" y="691.0" width="24.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="541.4" y="702.0">_..</text>
</g>
<g>
<title>__sys_setsockopt (127 samples, 1.96%)</title><rect x="538.4" y="675.0" width="23.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="541.4" y="686.0">_..</text>
</g>
<g>
<title>__fdget (5 samples, 0.08%)</title><rect x="538.8" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="541.8" y="670.0"></text>
</g>
<g>
<title>__get_user_4 (10 samples, 0.15%)</title><rect x="539.7" y="659.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.7" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (5 samples, 0.08%)</title><rect x="541.5" y="659.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.5" y="670.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.08%)</title><rect x="542.5" y="659.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="545.5" y="670.0"></text>
</g>
<g>
<title>security_socket_setsockopt (22 samples, 0.34%)</title><rect x="543.4" y="659.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="546.4" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (4 samples, 0.06%)</title><rect x="543.4" y="643.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="546.4" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (18 samples, 0.28%)</title><rect x="544.1" y="643.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.1" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.09%)</title><rect x="544.1" y="627.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.1" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (12 samples, 0.19%)</title><rect x="545.2" y="627.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="548.2" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.12%)</title><rect x="545.9" y="611.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.9" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (56 samples, 0.87%)</title><rect x="547.6" y="659.0" width="10.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="550.6" y="670.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.05%)</title><rect x="549.2" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="552.2" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.08%)</title><rect x="550.1" y="643.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="553.1" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="550.7" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="553.7" y="638.0"></text>
</g>
<g>
<title>release_sock (10 samples, 0.15%)</title><rect x="551.0" y="643.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="554.0" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="551.9" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="554.9" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="552.3" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="555.3" y="638.0"></text>
</g>
<g>
<title>sock_set_timeout (23 samples, 0.36%)</title><rect x="552.8" y="643.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="555.8" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="554.1" y="627.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="557.1" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (12 samples, 0.19%)</title><rect x="554.9" y="627.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="557.9" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.06%)</title><rect x="557.0" y="643.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="560.0" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (21 samples, 0.32%)</title><rect x="557.8" y="659.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="560.8" y="670.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.23%)</title><rect x="557.8" y="643.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="560.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.22%)</title><rect x="558.0" y="627.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="561.0" y="638.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.17%)</title><rect x="558.5" y="611.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.09%)</title><rect x="560.5" y="643.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="563.5" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (4 samples, 0.06%)</title><rect x="561.8" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="564.8" y="686.0"></text>
</g>
<g>
<title>setsockopt@plt (2 samples, 0.03%)</title><rect x="562.5" y="739.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="565.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,010 samples, 15.61%)</title><rect x="562.9" y="755.0" width="184.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.9" y="766.0">one/nio/net/NativeSocket..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (50 samples, 0.77%)</title><rect x="568.5" y="739.0" width="9.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="571.5" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="571.5" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="574.5" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="572.2" y="723.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="575.2" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (11 samples, 0.17%)</title><rect x="572.7" y="723.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="575.7" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.20%)</title><rect x="574.7" y="723.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="577.7" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.05%)</title><rect x="575.1" y="707.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="578.1" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.06%)</title><rect x="575.6" y="707.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="578.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.05%)</title><rect x="576.4" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="579.4" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="577.3" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="580.3" y="734.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="577.7" y="739.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="580.7" y="750.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="578.2" y="739.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="581.2" y="750.0"></text>
</g>
<g>
<title>__libc_send (922 samples, 14.25%)</title><rect x="578.7" y="739.0" width="168.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="581.7" y="750.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (905 samples, 13.99%)</title><rect x="581.5" y="723.0" width="165.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.5" y="734.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>do_syscall_64 (905 samples, 13.99%)</title><rect x="581.5" y="707.0" width="165.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.5" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (874 samples, 13.51%)</title><rect x="587.0" y="691.0" width="159.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="590.0" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (870 samples, 13.45%)</title><rect x="587.1" y="675.0" width="158.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.1" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="587.3" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.3" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (859 samples, 13.28%)</title><rect x="587.7" y="659.0" width="156.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="590.7" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.08%)</title><rect x="587.9" y="643.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="590.9" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (844 samples, 13.05%)</title><rect x="588.8" y="643.0" width="153.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="591.8" y="654.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (837 samples, 12.94%)</title><rect x="589.9" y="627.0" width="152.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="592.9" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="590.1" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="593.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="590.4" y="611.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="593.4" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="591.0" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="594.0" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="591.3" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="594.3" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.05%)</title><rect x="592.4" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.4" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (817 samples, 12.63%)</title><rect x="593.2" y="611.0" width="149.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="596.2" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.09%)</title><rect x="595.0" y="595.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="598.0" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="595.5" y="579.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.5" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.09%)</title><rect x="596.4" y="595.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="599.4" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="596.8" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.8" y="590.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="597.5" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.5" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (37 samples, 0.57%)</title><rect x="598.1" y="595.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="601.1" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (29 samples, 0.45%)</title><rect x="598.6" y="579.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="601.6" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (14 samples, 0.22%)</title><rect x="599.7" y="563.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.12%)</title><rect x="599.9" y="547.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.9" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="600.8" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="603.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.12%)</title><rect x="602.3" y="563.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="605.3" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="603.9" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.9" y="590.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.05%)</title><rect x="604.3" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.3" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.05%)</title><rect x="604.8" y="595.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="607.8" y="606.0"></text>
</g>
<g>
<title>tcp_push (734 samples, 11.35%)</title><rect x="605.6" y="595.0" width="133.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="608.6" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (732 samples, 11.32%)</title><rect x="605.7" y="579.0" width="133.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="608.7" y="590.0">__tcp_push_pendin..</text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.05%)</title><rect x="605.7" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="608.7" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (724 samples, 11.19%)</title><rect x="607.2" y="563.0" width="132.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="610.2" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (673 samples, 10.40%)</title><rect x="611.4" y="547.0" width="122.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.4" y="558.0">__tcp_transmit_..</text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.08%)</title><rect x="614.0" y="531.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="617.0" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (641 samples, 9.91%)</title><rect x="614.9" y="531.0" width="116.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="617.9" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (634 samples, 9.80%)</title><rect x="615.4" y="515.0" width="115.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="618.4" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (615 samples, 9.51%)</title><rect x="617.2" y="499.0" width="112.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="620.2" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (91 samples, 1.41%)</title><rect x="617.8" y="483.0" width="16.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="620.8" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.08%)</title><rect x="618.1" y="467.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="621.1" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (83 samples, 1.28%)</title><rect x="619.2" y="467.0" width="15.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="622.2" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.03%)</title><rect x="619.4" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="622.4" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (10 samples, 0.15%)</title><rect x="619.8" y="451.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="622.8" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (10 samples, 0.15%)</title><rect x="619.8" y="435.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="622.8" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (61 samples, 0.94%)</title><rect x="621.6" y="451.0" width="11.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="624.6" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.03%)</title><rect x="621.6" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.6" y="446.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (4 samples, 0.06%)</title><rect x="622.2" y="435.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (52 samples, 0.80%)</title><rect x="622.9" y="435.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="625.9" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (8 samples, 0.12%)</title><rect x="623.8" y="419.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="626.8" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.05%)</title><rect x="625.8" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="628.8" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (5 samples, 0.08%)</title><rect x="626.5" y="419.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="629.5" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.03%)</title><rect x="627.5" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="630.5" y="430.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (25 samples, 0.39%)</title><rect x="627.8" y="419.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="630.8" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (3 samples, 0.05%)</title><rect x="630.0" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="633.0" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.03%)</title><rect x="630.6" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.6" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (8 samples, 0.12%)</title><rect x="630.9" y="403.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.9" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.03%)</title><rect x="632.0" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="635.0" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (2 samples, 0.03%)</title><rect x="632.4" y="435.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="635.4" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.03%)</title><rect x="632.7" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="635.7" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="633.1" y="451.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="636.1" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (5 samples, 0.08%)</title><rect x="633.5" y="451.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="636.5" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.06%)</title><rect x="633.7" y="435.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="636.7" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.03%)</title><rect x="633.7" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="636.7" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.03%)</title><rect x="634.0" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="637.0" y="430.0"></text>
</g>
<g>
<title>ip_output (517 samples, 7.99%)</title><rect x="634.6" y="483.0" width="94.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="637.6" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (503 samples, 7.78%)</title><rect x="635.3" y="467.0" width="91.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="638.3" y="478.0">ip_finish_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.06%)</title><rect x="635.8" y="451.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="638.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (496 samples, 7.67%)</title><rect x="636.6" y="451.0" width="90.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="639.6" y="462.0">ip_finish_..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.03%)</title><rect x="638.0" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.0" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (445 samples, 6.88%)</title><rect x="638.4" y="435.0" width="81.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.4" y="446.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.21 (444 samples, 6.86%)</title><rect x="638.6" y="419.0" width="81.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="641.6" y="430.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (440 samples, 6.80%)</title><rect x="639.3" y="403.0" width="80.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="642.3" y="414.0">do_softir..</text>
</g>
<g>
<title>__softirqentry_text_start (439 samples, 6.79%)</title><rect x="639.3" y="387.0" width="80.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="642.3" y="398.0">__softirq..</text>
</g>
<g>
<title>net_rx_action (436 samples, 6.74%)</title><rect x="639.9" y="371.0" width="79.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="642.9" y="382.0">net_rx_ac..</text>
</g>
<g>
<title>__kfree_skb_flush (3 samples, 0.05%)</title><rect x="641.1" y="355.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.1" y="366.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="641.9" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="644.9" y="366.0"></text>
</g>
<g>
<title>process_backlog (423 samples, 6.54%)</title><rect x="642.2" y="355.0" width="77.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="645.2" y="366.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb (415 samples, 6.42%)</title><rect x="643.5" y="339.0" width="75.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="646.5" y="350.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (412 samples, 6.37%)</title><rect x="644.1" y="323.0" width="75.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="647.1" y="334.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (11 samples, 0.17%)</title><rect x="644.1" y="307.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="647.1" y="318.0"></text>
</g>
<g>
<title>ip_rcv (400 samples, 6.18%)</title><rect x="646.1" y="307.0" width="72.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="649.1" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.08%)</title><rect x="646.6" y="291.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="649.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (377 samples, 5.83%)</title><rect x="647.5" y="291.0" width="68.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="650.5" y="302.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (370 samples, 5.72%)</title><rect x="648.2" y="275.0" width="67.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.2" y="286.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (355 samples, 5.49%)</title><rect x="649.0" y="259.0" width="64.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="652.0" y="270.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (354 samples, 5.47%)</title><rect x="649.2" y="243.0" width="64.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="652.2" y="254.0">ip_prot..</text>
</g>
<g>
<title>tcp_v4_rcv (345 samples, 5.33%)</title><rect x="650.8" y="227.0" width="62.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="653.8" y="238.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.14%)</title><rect x="652.4" y="211.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.4" y="222.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.05%)</title><rect x="653.5" y="195.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="656.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.11%)</title><rect x="654.8" y="211.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.8" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.05%)</title><rect x="655.4" y="195.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="658.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (315 samples, 4.87%)</title><rect x="656.3" y="211.0" width="57.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="659.3" y="222.0">tcp_v4..</text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="656.6" y="195.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="659.6" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (310 samples, 4.79%)</title><rect x="657.2" y="195.0" width="56.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="660.2" y="206.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.17%)</title><rect x="658.6" y="179.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="661.6" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.12%)</title><rect x="659.2" y="163.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="662.2" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="659.7" y="147.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.7" y="158.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="660.1" y="131.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="663.1" y="142.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.05%)</title><rect x="660.7" y="179.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="663.7" y="190.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.05%)</title><rect x="661.2" y="179.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="664.2" y="190.0"></text>
</g>
<g>
<title>tcp_ack (74 samples, 1.14%)</title><rect x="662.3" y="179.0" width="13.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="665.3" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="664.5" y="163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.5" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="664.8" y="163.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="667.8" y="174.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="665.2" y="163.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="668.2" y="174.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="665.6" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="668.6" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (51 samples, 0.79%)</title><rect x="665.9" y="163.0" width="9.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="668.9" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (22 samples, 0.34%)</title><rect x="669.4" y="147.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="672.4" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.08%)</title><rect x="669.4" y="131.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="672.4" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.06%)</title><rect x="669.6" y="115.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="672.6" y="126.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="670.0" y="99.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.0" y="110.0"></text>
</g>
<g>
<title>skb_release_all (14 samples, 0.22%)</title><rect x="670.5" y="131.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.5" y="142.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.22%)</title><rect x="670.5" y="115.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="673.5" y="126.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.12%)</title><rect x="671.6" y="99.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="674.6" y="110.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.12%)</title><rect x="671.6" y="83.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.6" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="673.6" y="147.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="676.6" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.05%)</title><rect x="675.8" y="179.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.8" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.03%)</title><rect x="676.3" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.3" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (191 samples, 2.95%)</title><rect x="676.7" y="179.0" width="34.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.7" y="190.0">tc..</text>
</g>
<g>
<title>sock_def_readable (178 samples, 2.75%)</title><rect x="678.2" y="163.0" width="32.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="681.2" y="174.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (175 samples, 2.71%)</title><rect x="678.7" y="147.0" width="31.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="681.7" y="158.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (174 samples, 2.69%)</title><rect x="678.7" y="131.0" width="31.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="681.7" y="142.0">__..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="678.9" y="115.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="681.9" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (171 samples, 2.64%)</title><rect x="679.3" y="115.0" width="31.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.3" y="126.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.06%)</title><rect x="710.6" y="163.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.6" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="711.7" y="179.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="714.7" y="190.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="711.9" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="714.9" y="174.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="712.5" y="179.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="715.5" y="190.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="713.0" y="179.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="716.0" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.08%)</title><rect x="714.5" y="259.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="717.5" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.03%)</title><rect x="714.8" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="717.8" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.03%)</title><rect x="714.8" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="717.8" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="715.4" y="259.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="718.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.03%)</title><rect x="715.7" y="275.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="718.7" y="286.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (4 samples, 0.06%)</title><rect x="716.3" y="291.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="719.3" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (3 samples, 0.05%)</title><rect x="717.0" y="291.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="720.0" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.11%)</title><rect x="717.6" y="291.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="720.6" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (6 samples, 0.09%)</title><rect x="717.7" y="275.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.7" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.09%)</title><rect x="717.7" y="259.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="720.7" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (39 samples, 0.60%)</title><rect x="719.6" y="435.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="722.6" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (35 samples, 0.54%)</title><rect x="719.8" y="419.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="722.8" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.17%)</title><rect x="721.2" y="403.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="724.2" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.09%)</title><rect x="722.1" y="387.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.1" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="722.5" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="725.5" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (12 samples, 0.19%)</title><rect x="723.8" y="403.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="726.8" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (6 samples, 0.09%)</title><rect x="724.5" y="387.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.05%)</title><rect x="726.1" y="419.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="729.1" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.21 (2 samples, 0.03%)</title><rect x="726.7" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="729.7" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (3 samples, 0.05%)</title><rect x="727.2" y="467.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.2" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="727.8" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="730.8" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.06%)</title><rect x="728.1" y="467.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="731.1" y="478.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.03%)</title><rect x="728.3" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="731.3" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="728.9" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="731.9" y="494.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.05%)</title><rect x="729.4" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="732.4" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.09%)</title><rect x="730.0" y="499.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="733.0" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="731.1" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="734.1" y="526.0"></text>
</g>
<g>
<title>skb_clone (12 samples, 0.19%)</title><rect x="731.8" y="531.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="734.8" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.06%)</title><rect x="732.0" y="515.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.0" y="526.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.11%)</title><rect x="732.7" y="515.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.7" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.06%)</title><rect x="733.2" y="499.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.2" y="510.0"></text>
</g>
<g>
<title>ktime_get (9 samples, 0.14%)</title><rect x="734.5" y="547.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="737.5" y="558.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="735.6" y="531.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="738.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.09%)</title><rect x="736.5" y="547.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.5" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="737.3" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="740.3" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="737.3" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="740.3" y="526.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="737.3" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="740.3" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="738.2" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="741.2" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="738.7" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="741.7" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.20%)</title><rect x="739.5" y="595.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.5" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.15%)</title><rect x="739.8" y="579.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="742.8" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="741.3" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="744.3" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="741.8" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="744.8" y="606.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="742.2" y="611.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="745.2" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.11%)</title><rect x="742.7" y="643.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="745.7" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="742.9" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="745.9" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.05%)</title><rect x="743.5" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="746.5" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.05%)</title><rect x="743.5" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="746.5" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.03%)</title><rect x="743.6" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="746.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="744.0" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="747.0" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.12%)</title><rect x="744.4" y="659.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="747.4" y="670.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.11%)</title><rect x="744.4" y="643.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="747.4" y="654.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.11%)</title><rect x="744.4" y="627.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="747.4" y="638.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.11%)</title><rect x="744.4" y="611.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="747.4" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="746.0" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="749.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="746.6" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="749.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="746.6" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="749.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="746.6" y="691.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="749.6" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (23 samples, 0.36%)</title><rect x="747.1" y="755.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.1" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (21 samples, 0.32%)</title><rect x="747.5" y="739.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (21 samples, 0.32%)</title><rect x="747.5" y="723.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.03%)</title><rect x="750.6" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.03%)</title><rect x="750.9" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.9" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (2 samples, 0.03%)</title><rect x="751.3" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (3 samples, 0.05%)</title><rect x="751.7" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.05%)</title><rect x="751.7" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (3 samples, 0.05%)</title><rect x="752.2" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (3 samples, 0.05%)</title><rect x="752.2" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="755.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.05%)</title><rect x="752.2" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.05%)</title><rect x="752.2" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/NodeReplicaUtils.getNodeReplica (39 samples, 0.60%)</title><rect x="752.8" y="803.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.8" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.06%)</title><rect x="755.7" y="787.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="758.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (19 samples, 0.29%)</title><rect x="756.4" y="787.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (3 samples, 0.05%)</title><rect x="758.8" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2 samples, 0.03%)</title><rect x="759.5" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/NodeReplicaUtils.issueExternalResponse (58 samples, 0.90%)</title><rect x="759.9" y="803.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="762.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.array (3 samples, 0.05%)</title><rect x="760.1" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 0.22%)</title><rect x="760.6" y="787.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.6" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="762.8" y="771.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="765.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/NodeReplicaUtils.syncReplicaValues (27 samples, 0.42%)</title><rect x="763.2" y="787.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.2" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (5 samples, 0.08%)</title><rect x="763.3" y="771.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.3" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (3 samples, 0.05%)</title><rect x="763.7" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.7" y="766.0"></text>
</g>
<g>
<title>java/util/Collection.stream (11 samples, 0.17%)</title><rect x="764.3" y="771.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.15%)</title><rect x="764.4" y="755.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (10 samples, 0.15%)</title><rect x="764.4" y="739.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (10 samples, 0.15%)</title><rect x="764.4" y="723.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (10 samples, 0.15%)</title><rect x="764.4" y="707.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (6 samples, 0.09%)</title><rect x="766.3" y="771.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (6 samples, 0.09%)</title><rect x="766.3" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (6 samples, 0.09%)</title><rect x="766.3" y="739.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (6 samples, 0.09%)</title><rect x="766.3" y="723.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (6 samples, 0.09%)</title><rect x="766.3" y="707.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (4 samples, 0.06%)</title><rect x="767.4" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (4 samples, 0.06%)</title><rect x="767.4" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.06%)</title><rect x="767.4" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.05%)</title><rect x="767.5" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="767.5" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (2 samples, 0.03%)</title><rect x="767.5" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytes (2 samples, 0.03%)</title><rect x="768.1" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (11 samples, 0.17%)</title><rect x="768.5" y="787.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.05%)</title><rect x="768.5" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.11%)</title><rect x="769.0" y="771.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.0" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="769.7" y="755.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="772.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/NodeReplicaUtils.issueInternalResponse (1,790 samples, 27.67%)</title><rect x="770.5" y="803.0" width="326.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.5" y="814.0">ru/mail/polis/service/codearound/NodeReplica..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (1,767 samples, 27.31%)</title><rect x="771.0" y="787.0" width="322.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.0" y="798.0">ru/mail/polis/service/codearound/TaskDAO.get..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (1,740 samples, 26.90%)</title><rect x="771.0" y="771.0" width="317.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.0" y="782.0">ru/mail/polis/service/codearound/TaskDAO.ge..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,717 samples, 26.54%)</title><rect x="771.0" y="755.0" width="313.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.0" y="766.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,717 samples, 26.54%)</title><rect x="771.0" y="739.0" width="313.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.0" y="750.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (1,613 samples, 24.93%)</title><rect x="772.8" y="723.0" width="294.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="775.8" y="734.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (7 samples, 0.11%)</title><rect x="775.6" y="707.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="778.6" y="718.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.06%)</title><rect x="776.8" y="707.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="779.8" y="718.0"></text>
</g>
<g>
<title>__malloc (18 samples, 0.28%)</title><rect x="777.6" y="707.0" width="3.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="780.6" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (8 samples, 0.12%)</title><rect x="781.0" y="707.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="784.0" y="718.0"></text>
</g>
<g>
<title>malloc@plt (2 samples, 0.03%)</title><rect x="782.7" y="707.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="785.7" y="718.0"></text>
</g>
<g>
<title>operator delete(void*) (3 samples, 0.05%)</title><rect x="783.0" y="707.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="786.0" y="718.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (2 samples, 0.03%)</title><rect x="783.6" y="707.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="786.6" y="718.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.03%)</title><rect x="784.0" y="707.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="787.0" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (14 samples, 0.22%)</title><rect x="784.3" y="707.0" width="2.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="787.3" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (3 samples, 0.05%)</title><rect x="786.9" y="707.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="789.9" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (13 samples, 0.20%)</title><rect x="787.4" y="707.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="790.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (12 samples, 0.19%)</title><rect x="789.8" y="707.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="792.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (4 samples, 0.06%)</title><rect x="792.0" y="707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="795.0" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1,486 samples, 22.97%)</title><rect x="793.3" y="707.0" width="271.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="796.3" y="718.0">rocksdb_get_helper(JNIEnv_*, rocksdb..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.08%)</title><rect x="797.1" y="691.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="800.1" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (6 samples, 0.09%)</title><rect x="798.2" y="691.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="801.2" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (8 samples, 0.12%)</title><rect x="799.5" y="691.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="802.5" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (16 samples, 0.25%)</title><rect x="801.1" y="691.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="804.1" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.06%)</title><rect x="802.6" y="675.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="805.6" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="803.3" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="806.3" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="803.7" y="675.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="806.7" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (21 samples, 0.32%)</title><rect x="804.0" y="691.0" width="3.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="807.0" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.06%)</title><rect x="804.8" y="675.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="807.8" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="805.5" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="808.5" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.11%)</title><rect x="805.8" y="675.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="808.8" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="807.1" y="675.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="810.1" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.09%)</title><rect x="807.9" y="691.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="810.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.05%)</title><rect x="808.9" y="691.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="811.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1,275 samples, 19.71%)</title><rect x="809.5" y="691.0" width="232.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="812.5" y="702.0">rocksdb::DB::Get(rocksdb::ReadO..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (10 samples, 0.15%)</title><rect x="810.0" y="675.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="813.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1,249 samples, 19.31%)</title><rect x="812.0" y="675.0" width="227.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="815.0" y="686.0">rocksdb::DB::Get(rocksdb::Read..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (25 samples, 0.39%)</title><rect x="813.9" y="659.0" width="4.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="816.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (4 samples, 0.06%)</title><rect x="813.9" y="643.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="816.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (5 samples, 0.08%)</title><rect x="814.6" y="643.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="817.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (13 samples, 0.20%)</title><rect x="815.5" y="643.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="818.5" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.05%)</title><rect x="816.2" y="627.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="819.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (5 samples, 0.08%)</title><rect x="817.0" y="627.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="820.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1,210 samples, 18.70%)</title><rect x="818.4" y="659.0" width="220.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="821.4" y="670.0">rocksdb::DBImpl::Get(rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1,200 samples, 18.55%)</title><rect x="819.0" y="643.0" width="218.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="822.0" y="654.0">rocksdb::DBImpl::Get(rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="819.0" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="822.0" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.11%)</title><rect x="819.5" y="627.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="822.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (6 samples, 0.09%)</title><rect x="820.8" y="627.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="823.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (3 samples, 0.05%)</title><rect x="822.1" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="825.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (4 samples, 0.06%)</title><rect x="822.6" y="627.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="825.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (4 samples, 0.06%)</title><rect x="823.4" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="826.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1,128 samples, 17.44%)</title><rect x="824.1" y="627.0" width="205.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="827.1" y="638.0">rocksdb::DBImpl::GetImpl(ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="829.9" y="611.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="832.9" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (24 samples, 0.37%)</title><rect x="830.8" y="611.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="833.8" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (4 samples, 0.06%)</title><rect x="835.2" y="611.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="838.2" y="622.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (3 samples, 0.05%)</title><rect x="835.9" y="611.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="838.9" y="622.0"></text>
</g>
<g>
<title>memcpy@plt (3 samples, 0.05%)</title><rect x="836.5" y="611.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="839.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.05%)</title><rect x="837.0" y="611.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="840.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (19 samples, 0.29%)</title><rect x="837.6" y="611.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="840.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (4 samples, 0.06%)</title><rect x="838.0" y="595.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="841.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (9 samples, 0.14%)</title><rect x="839.2" y="595.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="842.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.03%)</title><rect x="840.5" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="843.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (9 samples, 0.14%)</title><rect x="841.1" y="611.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="844.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (21 samples, 0.32%)</title><rect x="842.9" y="611.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="845.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (13 samples, 0.20%)</title><rect x="843.1" y="595.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="846.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.03%)</title><rect x="843.1" y="579.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="846.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (2 samples, 0.03%)</title><rect x="843.6" y="579.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="846.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (4 samples, 0.06%)</title><rect x="844.0" y="579.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="847.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.05%)</title><rect x="844.7" y="579.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="847.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (3 samples, 0.05%)</title><rect x="845.4" y="595.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="848.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.03%)</title><rect x="846.2" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="849.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.05%)</title><rect x="846.7" y="611.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="849.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (3 samples, 0.05%)</title><rect x="847.4" y="611.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="850.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (2 samples, 0.03%)</title><rect x="848.0" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="851.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (5 samples, 0.08%)</title><rect x="848.3" y="611.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="851.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (262 samples, 4.05%)</title><rect x="849.3" y="611.0" width="47.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="852.3" y="622.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (11 samples, 0.17%)</title><rect x="850.2" y="595.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="853.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (243 samples, 3.76%)</title><rect x="852.2" y="595.0" width="44.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="855.2" y="606.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (237 samples, 3.66%)</title><rect x="852.5" y="579.0" width="43.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="855.5" y="590.0">/tmp..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (4 samples, 0.06%)</title><rect x="853.3" y="563.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="856.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (223 samples, 3.45%)</title><rect x="854.0" y="563.0" width="40.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="857.0" y="574.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (5 samples, 0.08%)</title><rect x="875.0" y="547.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="878.0" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.05%)</title><rect x="875.9" y="547.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="878.9" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (13 samples, 0.20%)</title><rect x="876.4" y="547.0" width="2.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="879.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (86 samples, 1.33%)</title><rect x="879.0" y="547.0" width="15.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="882.0" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (14 samples, 0.22%)</title><rect x="882.5" y="531.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="885.5" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.08%)</title><rect x="885.0" y="531.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="888.0" y="542.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (37 samples, 0.57%)</title><rect x="885.9" y="531.0" width="6.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="888.9" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.11%)</title><rect x="892.7" y="531.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="895.7" y="542.0"></text>
</g>
<g>
<title>memcmp@plt (4 samples, 0.06%)</title><rect x="894.0" y="531.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="897.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.09%)</title><rect x="894.7" y="563.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="897.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.06%)</title><rect x="895.8" y="579.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="898.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (3 samples, 0.05%)</title><rect x="896.5" y="595.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="899.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (2 samples, 0.03%)</title><rect x="897.1" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="900.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (4 samples, 0.06%)</title><rect x="897.4" y="611.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="900.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.03%)</title><rect x="898.1" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="901.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.03%)</title><rect x="898.1" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="901.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (3 samples, 0.05%)</title><rect x="898.5" y="611.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="901.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (4 samples, 0.06%)</title><rect x="899.4" y="611.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="902.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (2 samples, 0.03%)</title><rect x="900.3" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="903.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() [clone .plt] (2 samples, 0.03%)</title><rect x="900.7" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="903.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (2 samples, 0.03%)</title><rect x="901.1" y="611.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="904.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (10 samples, 0.15%)</title><rect x="901.4" y="611.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (5 samples, 0.08%)</title><rect x="903.6" y="611.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="906.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (681 samples, 10.53%)</title><rect x="904.5" y="611.0" width="124.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="907.5" y="622.0">rocksdb::Versio..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (3 samples, 0.05%)</title><rect x="910.2" y="595.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="913.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (6 samples, 0.09%)</title><rect x="911.1" y="595.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="914.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.03%)</title><rect x="912.2" y="595.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="915.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (3 samples, 0.05%)</title><rect x="912.6" y="595.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="915.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (2 samples, 0.03%)</title><rect x="913.1" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="916.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (5 samples, 0.08%)</title><rect x="913.5" y="595.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="916.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() [clone .plt] (3 samples, 0.05%)</title><rect x="914.4" y="595.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="917.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (624 samples, 9.65%)</title><rect x="914.9" y="595.0" width="113.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="917.9" y="606.0">rocksdb::Table..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (6 samples, 0.09%)</title><rect x="917.1" y="579.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="920.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (8 samples, 0.12%)</title><rect x="918.2" y="579.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (552 samples, 8.53%)</title><rect x="919.9" y="579.0" width="100.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="922.9" y="590.0">rocksdb::Blo..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (3 samples, 0.05%)</title><rect x="927.9" y="563.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="930.9" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="928.4" y="563.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="931.4" y="574.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.06%)</title><rect x="928.8" y="563.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="931.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="929.5" y="563.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="932.5" y="574.0"></text>
</g>
<g>
<title>free@plt (2 samples, 0.03%)</title><rect x="929.9" y="563.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="932.9" y="574.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.03%)</title><rect x="930.3" y="563.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="933.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (20 samples, 0.31%)</title><rect x="930.6" y="563.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="933.6" y="574.0"></text>
</g>
<g>
<title>__malloc (6 samples, 0.09%)</title><rect x="931.2" y="547.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="934.2" y="558.0"></text>
</g>
<g>
<title>operator new(unsigned long) (7 samples, 0.11%)</title><rect x="932.3" y="547.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="935.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (4 samples, 0.06%)</title><rect x="933.5" y="547.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="936.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (7 samples, 0.11%)</title><rect x="934.3" y="563.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="937.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (5 samples, 0.08%)</title><rect x="935.9" y="563.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="938.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (3 samples, 0.05%)</title><rect x="937.2" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="940.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (2 samples, 0.03%)</title><rect x="937.7" y="563.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="940.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (3 samples, 0.05%)</title><rect x="938.3" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="941.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (2 samples, 0.03%)</title><rect x="939.0" y="563.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="942.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (193 samples, 2.98%)</title><rect x="939.6" y="563.0" width="35.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="942.6" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (2 samples, 0.03%)</title><rect x="942.8" y="547.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="945.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (2 samples, 0.03%)</title><rect x="943.2" y="547.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="946.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (4 samples, 0.06%)</title><rect x="943.6" y="547.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="946.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (166 samples, 2.57%)</title><rect x="944.3" y="547.0" width="30.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="947.3" y="558.0">ro..</text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (146 samples, 2.26%)</title><rect x="946.5" y="531.0" width="26.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="949.5" y="542.0">r..</text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="949.0" y="515.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="952.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.03%)</title><rect x="949.4" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="952.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.03%)</title><rect x="950.0" y="515.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="953.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (4 samples, 0.06%)</title><rect x="950.3" y="515.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="953.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (120 samples, 1.86%)</title><rect x="951.0" y="515.0" width="21.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="954.0" y="526.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (106 samples, 1.64%)</title><rect x="951.8" y="499.0" width="19.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="954.8" y="510.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (10 samples, 0.15%)</title><rect x="952.1" y="483.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="955.1" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.03%)</title><rect x="954.0" y="483.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="957.0" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.06%)</title><rect x="954.3" y="483.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="957.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (6 samples, 0.09%)</title><rect x="955.1" y="483.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="958.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (5 samples, 0.08%)</title><rect x="956.2" y="483.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="959.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) [clone .plt] (2 samples, 0.03%)</title><rect x="957.1" y="483.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="960.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (5 samples, 0.08%)</title><rect x="957.4" y="483.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="960.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (59 samples, 0.91%)</title><rect x="958.5" y="483.0" width="10.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="961.5" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (2 samples, 0.03%)</title><rect x="958.7" y="467.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="961.7" y="478.0"></text>
</g>
<g>
<title>malloc_usable_size (7 samples, 0.11%)</title><rect x="959.1" y="467.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="962.1" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (17 samples, 0.26%)</title><rect x="960.3" y="467.0" width="3.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="963.3" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (5 samples, 0.08%)</title><rect x="963.4" y="467.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="966.4" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 0.12%)</title><rect x="964.4" y="467.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="967.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.06%)</title><rect x="966.2" y="467.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="969.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (13 samples, 0.20%)</title><rect x="966.9" y="467.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="969.9" y="478.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="966.9" y="451.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="969.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (11 samples, 0.17%)</title><rect x="967.3" y="451.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="970.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.03%)</title><rect x="969.3" y="483.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="972.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.03%)</title><rect x="969.7" y="483.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="972.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (4 samples, 0.06%)</title><rect x="970.0" y="483.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="973.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.03%)</title><rect x="971.3" y="499.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="974.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (6 samples, 0.09%)</title><rect x="971.8" y="499.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="974.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (6 samples, 0.09%)</title><rect x="973.3" y="531.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="976.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (109 samples, 1.68%)</title><rect x="974.8" y="563.0" width="19.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="977.8" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (2 samples, 0.03%)</title><rect x="978.2" y="547.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="981.2" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="978.6" y="547.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="981.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (66 samples, 1.02%)</title><rect x="979.0" y="547.0" width="12.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="982.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.09%)</title><rect x="981.0" y="531.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="984.0" y="542.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (3 samples, 0.05%)</title><rect x="982.1" y="531.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="985.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (28 samples, 0.43%)</title><rect x="982.6" y="531.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="985.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (18 samples, 0.28%)</title><rect x="987.7" y="531.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="990.7" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.06%)</title><rect x="989.4" y="515.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="992.4" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.06%)</title><rect x="990.1" y="515.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="993.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (9 samples, 0.14%)</title><rect x="991.0" y="547.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="994.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (11 samples, 0.17%)</title><rect x="992.6" y="547.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="995.6" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (5 samples, 0.08%)</title><rect x="993.5" y="531.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="996.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (2 samples, 0.03%)</title><rect x="994.6" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="997.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (9 samples, 0.14%)</title><rect x="995.0" y="563.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="998.0" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (3 samples, 0.05%)</title><rect x="995.7" y="547.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="998.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (116 samples, 1.79%)</title><rect x="996.6" y="563.0" width="21.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="999.6" y="574.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni407860885042031031.so (6 samples, 0.09%)</title><rect x="1008.7" y="547.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1011.7" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (16 samples, 0.25%)</title><rect x="1010.0" y="547.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1013.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.06%)</title><rect x="1012.9" y="547.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1015.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (3 samples, 0.05%)</title><rect x="1013.8" y="547.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1016.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (12 samples, 0.19%)</title><rect x="1014.3" y="547.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1017.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="1015.6" y="531.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1018.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (2 samples, 0.03%)</title><rect x="1016.0" y="531.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1019.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.11%)</title><rect x="1016.5" y="547.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1019.5" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="1017.3" y="531.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1020.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (7 samples, 0.11%)</title><rect x="1017.8" y="563.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1020.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (4 samples, 0.06%)</title><rect x="1019.1" y="563.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1022.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.05%)</title><rect x="1020.0" y="563.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (3 samples, 0.05%)</title><rect x="1020.5" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1023.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (2 samples, 0.03%)</title><rect x="1021.3" y="579.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1024.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.03%)</title><rect x="1022.0" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1025.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (6 samples, 0.09%)</title><rect x="1022.5" y="579.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1025.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const [clone .plt] (2 samples, 0.03%)</title><rect x="1023.6" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1026.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="1024.0" y="579.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1027.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.03%)</title><rect x="1024.6" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1027.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (2 samples, 0.03%)</title><rect x="1024.9" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1027.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (6 samples, 0.09%)</title><rect x="1025.3" y="579.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1028.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (3 samples, 0.05%)</title><rect x="1026.4" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1029.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (4 samples, 0.06%)</title><rect x="1027.1" y="579.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1030.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (5 samples, 0.08%)</title><rect x="1027.8" y="579.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1030.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (6 samples, 0.09%)</title><rect x="1028.8" y="611.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1031.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.05%)</title><rect x="1029.8" y="627.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1032.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.03%)</title><rect x="1030.4" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1033.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (6 samples, 0.09%)</title><rect x="1030.9" y="627.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1033.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (3 samples, 0.05%)</title><rect x="1032.0" y="627.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1035.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (8 samples, 0.12%)</title><rect x="1032.6" y="627.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1035.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (10 samples, 0.15%)</title><rect x="1034.0" y="627.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1037.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (4 samples, 0.06%)</title><rect x="1036.0" y="627.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1039.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (2 samples, 0.03%)</title><rect x="1036.8" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1039.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (4 samples, 0.06%)</title><rect x="1037.1" y="627.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1040.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (6 samples, 0.09%)</title><rect x="1037.9" y="643.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1040.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (2 samples, 0.03%)</title><rect x="1039.1" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1042.1" y="670.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (3 samples, 0.05%)</title><rect x="1039.9" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1042.9" y="686.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (8 samples, 0.12%)</title><rect x="1040.4" y="675.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1043.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (6 samples, 0.09%)</title><rect x="1042.1" y="691.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1045.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (116 samples, 1.79%)</title><rect x="1043.2" y="691.0" width="21.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.2" y="702.0">r..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="1043.3" y="675.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1046.3" y="686.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.05%)</title><rect x="1044.1" y="675.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1047.1" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1044.8" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.8" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.06%)</title><rect x="1045.2" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.2" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.03%)</title><rect x="1045.9" y="675.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1048.9" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 0.11%)</title><rect x="1046.3" y="675.0" width="1.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1049.3" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="1046.6" y="659.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1049.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1047.2" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.2" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (77 samples, 1.19%)</title><rect x="1047.5" y="675.0" width="14.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1050.5" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.03%)</title><rect x="1049.0" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1052.0" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.08%)</title><rect x="1049.4" y="659.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1052.4" y="670.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (6 samples, 0.09%)</title><rect x="1050.3" y="659.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1053.3" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.06%)</title><rect x="1051.4" y="659.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1054.4" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (51 samples, 0.79%)</title><rect x="1052.3" y="659.0" width="9.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1055.3" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (35 samples, 0.54%)</title><rect x="1054.7" y="643.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1057.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (26 samples, 0.40%)</title><rect x="1054.7" y="627.0" width="4.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (3 samples, 0.05%)</title><rect x="1055.2" y="611.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1058.2" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (11 samples, 0.17%)</title><rect x="1055.7" y="611.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1058.7" y="622.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (7 samples, 0.11%)</title><rect x="1057.8" y="611.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1060.8" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.05%)</title><rect x="1059.4" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1062.4" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="1059.9" y="627.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1062.9" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.05%)</title><rect x="1060.5" y="627.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1063.5" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="1061.0" y="643.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1064.0" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.19%)</title><rect x="1061.6" y="675.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1064.6" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.08%)</title><rect x="1062.1" y="659.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1065.1" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="1063.0" y="659.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1066.0" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="1063.4" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1066.4" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="1063.8" y="675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1066.8" y="686.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (6 samples, 0.09%)</title><rect x="1064.3" y="707.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1067.3" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (5 samples, 0.08%)</title><rect x="1065.6" y="707.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1068.6" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (3 samples, 0.05%)</title><rect x="1066.5" y="707.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1069.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.40%)</title><rect x="1067.1" y="723.0" width="4.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1070.1" y="734.0"></text>
</g>
<g>
<title>LZ4_decompress_safe (2 samples, 0.03%)</title><rect x="1067.1" y="707.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1070.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.29%)</title><rect x="1067.4" y="707.0" width="3.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1070.4" y="718.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (13 samples, 0.20%)</title><rect x="1067.4" y="691.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1070.4" y="702.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (4 samples, 0.06%)</title><rect x="1069.8" y="691.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1072.8" y="702.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.06%)</title><rect x="1071.1" y="707.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1074.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="1071.1" y="691.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1074.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="1071.1" y="675.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1074.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.06%)</title><rect x="1071.1" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1074.1" y="670.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.06%)</title><rect x="1071.1" y="643.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1074.1" y="654.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.05%)</title><rect x="1071.3" y="627.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1074.3" y="638.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.05%)</title><rect x="1071.3" y="611.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1074.3" y="622.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.05%)</title><rect x="1071.3" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1074.3" y="606.0"></text>
</g>
<g>
<title>ext4_file_read_iter (3 samples, 0.05%)</title><rect x="1071.3" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1074.3" y="590.0"></text>
</g>
<g>
<title>generic_file_read_iter (3 samples, 0.05%)</title><rect x="1071.3" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1074.3" y="574.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.03%)</title><rect x="1071.3" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1074.3" y="558.0"></text>
</g>
<g>
<title>__libc_free (9 samples, 0.14%)</title><rect x="1072.0" y="723.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1075.0" y="734.0"></text>
</g>
<g>
<title>__malloc (22 samples, 0.34%)</title><rect x="1073.6" y="723.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1076.6" y="734.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.03%)</title><rect x="1077.6" y="723.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1080.6" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.06%)</title><rect x="1078.0" y="723.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1081.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (13 samples, 0.20%)</title><rect x="1078.9" y="723.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1081.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (2 samples, 0.03%)</title><rect x="1081.3" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1084.3" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (9 samples, 0.14%)</title><rect x="1081.6" y="723.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1084.6" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.05%)</title><rect x="1083.7" y="723.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1086.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (23 samples, 0.36%)</title><rect x="1084.2" y="755.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (20 samples, 0.31%)</title><rect x="1084.8" y="739.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1087.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.08%)</title><rect x="1084.8" y="723.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.08%)</title><rect x="1084.8" y="707.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1087.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.23%)</title><rect x="1085.7" y="723.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.19%)</title><rect x="1086.2" y="707.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1089.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.19%)</title><rect x="1086.2" y="691.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1089.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1087.3" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.3" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4 samples, 0.06%)</title><rect x="1087.7" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (27 samples, 0.42%)</title><rect x="1088.4" y="771.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.06%)</title><rect x="1088.4" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.31%)</title><rect x="1089.1" y="755.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1092.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.28%)</title><rect x="1089.5" y="739.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.09%)</title><rect x="1090.6" y="723.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="1091.7" y="723.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="1091.7" y="707.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1091.7" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="1091.7" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="1091.7" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.05%)</title><rect x="1091.7" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (3 samples, 0.05%)</title><rect x="1092.2" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getLong (2 samples, 0.03%)</title><rect x="1092.8" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getLongUnaligned (2 samples, 0.03%)</title><rect x="1092.8" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (2 samples, 0.03%)</title><rect x="1092.8" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (20 samples, 0.31%)</title><rect x="1093.3" y="787.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.28%)</title><rect x="1093.3" y="771.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.28%)</title><rect x="1093.3" y="755.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.26%)</title><rect x="1093.5" y="739.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.5" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (17 samples, 0.26%)</title><rect x="1093.5" y="723.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (16 samples, 0.25%)</title><rect x="1093.7" y="707.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.03%)</title><rect x="1095.1" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="1095.5" y="691.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1098.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.05%)</title><rect x="1096.1" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (2 samples, 0.03%)</title><rect x="1097.0" y="803.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1100.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="1097.0" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="1097.0" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1097.0" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1097.0" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (5 samples, 0.08%)</title><rect x="1097.5" y="851.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.12%)</title><rect x="1098.4" y="851.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.12%)</title><rect x="1098.4" y="835.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (7 samples, 0.11%)</title><rect x="1098.4" y="819.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (6 samples, 0.09%)</title><rect x="1098.6" y="803.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.12%)</title><rect x="1100.1" y="851.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.12%)</title><rect x="1100.1" y="835.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1103.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (2 samples, 0.03%)</title><rect x="1100.3" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1103.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="1100.6" y="819.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.6" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="1101.0" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1104.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (33 samples, 0.51%)</title><rect x="1101.5" y="883.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.5" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="1102.6" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.6" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="1102.6" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1105.6" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="1102.6" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.08%)</title><rect x="1103.0" y="867.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="1103.2" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="1103.2" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.06%)</title><rect x="1103.2" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.23%)</title><rect x="1103.9" y="867.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.23%)</title><rect x="1103.9" y="851.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1106.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1105.4" y="835.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.11%)</title><rect x="1105.4" y="819.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.11%)</title><rect x="1105.4" y="803.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.08%)</title><rect x="1106.6" y="867.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1109.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (21 samples, 0.32%)</title><rect x="1107.6" y="883.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.22%)</title><rect x="1108.3" y="867.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.22%)</title><rect x="1108.3" y="851.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="1109.9" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.03%)</title><rect x="1110.5" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.5" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1110.8" y="867.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1113.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.19%)</title><rect x="1111.4" y="883.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="1112.8" y="867.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="1112.8" y="851.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 0.80%)</title><rect x="1113.6" y="883.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1116.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 0.80%)</title><rect x="1113.6" y="867.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.56%)</title><rect x="1116.5" y="851.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.54%)</title><rect x="1116.5" y="835.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.5" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.05%)</title><rect x="1120.1" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.1" y="830.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.17%)</title><rect x="1120.7" y="819.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1123.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (348 samples, 5.38%)</title><rect x="1123.2" y="899.0" width="63.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1126.2" y="910.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (346 samples, 5.35%)</title><rect x="1123.6" y="883.0" width="63.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.6" y="894.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (66 samples, 1.02%)</title><rect x="1126.2" y="867.0" width="12.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1129.2" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.11%)</title><rect x="1127.3" y="851.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1130.3" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1128.9" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.9" y="862.0"></text>
</g>
<g>
<title>__memmove_ssse3 (13 samples, 0.20%)</title><rect x="1129.3" y="851.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1132.3" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (32 samples, 0.49%)</title><rect x="1131.6" y="851.0" width="5.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1134.6" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.05%)</title><rect x="1134.2" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.2" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="1134.7" y="835.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.7" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.06%)</title><rect x="1135.3" y="835.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.3" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.12%)</title><rect x="1136.0" y="835.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1139.0" y="846.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.06%)</title><rect x="1136.7" y="819.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.7" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="1137.6" y="851.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.6" y="862.0"></text>
</g>
<g>
<title>__GI___recv (252 samples, 3.90%)</title><rect x="1138.2" y="867.0" width="46.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1141.2" y="878.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (238 samples, 3.68%)</title><rect x="1140.7" y="851.0" width="43.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1143.7" y="862.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.03%)</title><rect x="1140.7" y="835.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1143.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (236 samples, 3.65%)</title><rect x="1141.1" y="835.0" width="43.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1144.1" y="846.0">do_s..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.05%)</title><rect x="1151.7" y="819.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (175 samples, 2.71%)</title><rect x="1152.2" y="819.0" width="32.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1155.2" y="830.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (169 samples, 2.61%)</title><rect x="1152.2" y="803.0" width="30.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1155.2" y="814.0">__..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="1152.8" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1155.8" y="798.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="1153.2" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1156.2" y="798.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1153.7" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1156.7" y="798.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="1153.7" y="771.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.7" y="782.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.03%)</title><rect x="1154.1" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.1" y="798.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.05%)</title><rect x="1154.4" y="787.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.4" y="798.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="1155.0" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1158.0" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (130 samples, 2.01%)</title><rect x="1155.3" y="787.0" width="23.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1158.3" y="798.0">s..</text>
</g>
<g>
<title>inet_recvmsg (117 samples, 1.81%)</title><rect x="1156.1" y="771.0" width="21.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1159.1" y="782.0">i..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1156.6" y="755.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1159.6" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (109 samples, 1.68%)</title><rect x="1157.5" y="755.0" width="19.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.5" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.15%)</title><rect x="1162.6" y="739.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1165.6" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1162.8" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1165.8" y="734.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.09%)</title><rect x="1163.2" y="723.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1166.2" y="734.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.05%)</title><rect x="1163.4" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1166.4" y="718.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="1163.9" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1166.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1164.8" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.8" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1165.2" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1168.2" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="1165.6" y="739.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1168.6" y="750.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.08%)</title><rect x="1166.3" y="739.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1169.3" y="750.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="1166.7" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.7" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (35 samples, 0.54%)</title><rect x="1167.2" y="739.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1170.2" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (33 samples, 0.51%)</title><rect x="1167.4" y="723.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.4" y="734.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="1167.9" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1170.9" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (28 samples, 0.43%)</title><rect x="1168.3" y="707.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.3" y="718.0"></text>
</g>
<g>
<title>__check_object_size (14 samples, 0.22%)</title><rect x="1168.5" y="691.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1171.5" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.15%)</title><rect x="1169.2" y="675.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1172.2" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (11 samples, 0.17%)</title><rect x="1171.0" y="691.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1174.0" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="1171.2" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1174.2" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (7 samples, 0.11%)</title><rect x="1171.6" y="675.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1174.6" y="686.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="1173.0" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1176.0" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.12%)</title><rect x="1173.6" y="739.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.6" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="1175.0" y="739.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1178.0" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.14%)</title><rect x="1175.6" y="739.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1178.6" y="750.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1175.8" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1178.8" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.09%)</title><rect x="1176.1" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1179.1" y="734.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1176.3" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.3" y="718.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.05%)</title><rect x="1176.7" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1179.7" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.12%)</title><rect x="1177.4" y="771.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1180.4" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.11%)</title><rect x="1177.6" y="755.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.6" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.09%)</title><rect x="1177.8" y="739.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.8" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.06%)</title><rect x="1178.1" y="723.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.1" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (22 samples, 0.34%)</title><rect x="1179.1" y="787.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1182.1" y="798.0"></text>
</g>
<g>
<title>__fdget (20 samples, 0.31%)</title><rect x="1179.2" y="771.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1182.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (20 samples, 0.31%)</title><rect x="1179.2" y="755.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.23%)</title><rect x="1180.1" y="739.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.05%)</title><rect x="1183.1" y="803.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1186.1" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="1183.8" y="803.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.8" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.08%)</title><rect x="1184.2" y="867.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1187.2" y="878.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="1185.1" y="867.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1188.1" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.09%)</title><rect x="1185.6" y="867.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1188.6" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1186.7" y="931.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.7" y="942.0"></text>
</g>
<g>
<title>start_thread (16 samples, 0.25%)</title><rect x="1187.1" y="947.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1190.1" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 0.25%)</title><rect x="1187.1" y="931.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1190.1" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (16 samples, 0.25%)</title><rect x="1187.1" y="915.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.15%)</title><rect x="1187.1" y="899.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.15%)</title><rect x="1187.1" y="883.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.09%)</title><rect x="1187.1" y="867.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.09%)</title><rect x="1187.1" y="851.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1188.5" y="867.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.5" y="878.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.06%)</title><rect x="1188.9" y="899.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.06%)</title><rect x="1188.9" y="883.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.9" y="894.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.03%)</title><rect x="1189.1" y="867.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.1" y="878.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.1" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.1" y="862.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.1" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.1" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.1" y="819.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.03%)</title><rect x="1189.6" y="899.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.6" y="910.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.03%)</title><rect x="1189.6" y="883.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.6" y="894.0"></text>
</g>
</g>
</svg>
