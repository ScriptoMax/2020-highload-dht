<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Replication control | CPU</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (8,663 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.08%)</title><rect x="10.0" y="947.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.07%)</title><rect x="10.1" y="931.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.1" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.05%)</title><rect x="10.3" y="915.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="10.5" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="11.0" y="947.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="14.0" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,632 samples, 99.64%)</title><rect x="11.6" y="947.0" width="1175.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.6" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (25 samples, 0.29%)</title><rect x="12.2" y="931.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (25 samples, 0.29%)</title><rect x="12.2" y="915.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.09%)</title><rect x="14.0" y="899.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.0" y="910.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (2 samples, 0.02%)</title><rect x="14.8" y="883.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (2 samples, 0.02%)</title><rect x="14.8" y="867.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.05%)</title><rect x="15.0" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (340 samples, 3.92%)</title><rect x="15.6" y="931.0" width="46.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.6" y="942.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.02%)</title><rect x="16.5" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.02%)</title><rect x="16.5" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (331 samples, 3.82%)</title><rect x="16.8" y="915.0" width="45.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.8" y="926.0">one/..</text>
</g>
<g>
<title>JVM_IHashCode (163 samples, 1.88%)</title><rect x="17.4" y="899.0" width="22.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="20.4" y="910.0">J..</text>
</g>
<g>
<title>epoll_wait (162 samples, 1.87%)</title><rect x="17.5" y="883.0" width="22.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="20.5" y="894.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (157 samples, 1.81%)</title><rect x="18.2" y="867.0" width="21.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="21.2" y="878.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.02%)</title><rect x="18.2" y="851.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="21.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (155 samples, 1.79%)</title><rect x="18.4" y="851.0" width="21.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="21.4" y="862.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (132 samples, 1.52%)</title><rect x="21.6" y="835.0" width="18.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="24.6" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (130 samples, 1.50%)</title><rect x="21.7" y="819.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.7" y="830.0"></text>
</g>
<g>
<title>__fdget (14 samples, 0.16%)</title><rect x="22.3" y="803.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="25.3" y="814.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.16%)</title><rect x="22.3" y="787.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="25.3" y="798.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.14%)</title><rect x="22.5" y="771.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="25.5" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="24.2" y="803.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="27.2" y="814.0"></text>
</g>
<g>
<title>ep_poll (105 samples, 1.21%)</title><rect x="24.6" y="803.0" width="14.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="27.6" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (81 samples, 0.94%)</title><rect x="26.3" y="787.0" width="11.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="29.3" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (55 samples, 0.63%)</title><rect x="28.8" y="771.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="31.8" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (38 samples, 0.44%)</title><rect x="30.6" y="755.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="33.6" y="766.0"></text>
</g>
<g>
<title>sock_poll (21 samples, 0.24%)</title><rect x="31.9" y="739.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="34.9" y="750.0"></text>
</g>
<g>
<title>tcp_poll (12 samples, 0.14%)</title><rect x="32.9" y="723.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.9" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="34.5" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="37.5" y="734.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.08%)</title><rect x="34.8" y="739.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.05%)</title><rect x="35.7" y="755.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="38.7" y="766.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.09%)</title><rect x="36.3" y="771.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.3" y="782.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="37.1" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="40.1" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.10%)</title><rect x="37.7" y="787.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="40.7" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.10%)</title><rect x="37.7" y="771.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="40.7" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="37.7" y="755.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="40.7" y="766.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.08%)</title><rect x="37.9" y="755.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="40.9" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.08%)</title><rect x="37.9" y="739.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="40.9" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="38.6" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="41.6" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (2 samples, 0.02%)</title><rect x="38.9" y="803.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="41.9" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.02%)</title><rect x="39.6" y="899.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="42.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (147 samples, 1.70%)</title><rect x="39.8" y="899.0" width="20.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="42.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="39.8" y="883.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="42.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.10%)</title><rect x="39.8" y="867.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="42.8" y="878.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="39.8" y="851.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="42.8" y="862.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="40.1" y="851.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="43.1" y="862.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.06%)</title><rect x="40.4" y="851.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="43.4" y="862.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="40.4" y="835.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="43.4" y="846.0"></text>
</g>
<g>
<title>epoll_wait (137 samples, 1.58%)</title><rect x="41.2" y="883.0" width="18.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="44.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (130 samples, 1.50%)</title><rect x="42.1" y="867.0" width="17.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="45.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (130 samples, 1.50%)</title><rect x="42.1" y="851.0" width="17.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (112 samples, 1.29%)</title><rect x="44.3" y="835.0" width="15.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="47.3" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (111 samples, 1.28%)</title><rect x="44.5" y="819.0" width="15.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.5" y="830.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.08%)</title><rect x="44.7" y="803.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="47.7" y="814.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.08%)</title><rect x="44.7" y="787.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.7" y="798.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.08%)</title><rect x="44.7" y="771.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="47.7" y="782.0"></text>
</g>
<g>
<title>ep_poll (102 samples, 1.18%)</title><rect x="45.7" y="803.0" width="13.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.7" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (86 samples, 0.99%)</title><rect x="46.9" y="787.0" width="11.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.9" y="798.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="48.4" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="51.4" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (69 samples, 0.80%)</title><rect x="48.7" y="771.0" width="9.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="51.7" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (55 samples, 0.63%)</title><rect x="49.9" y="755.0" width="7.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="52.9" y="766.0"></text>
</g>
<g>
<title>sock_poll (39 samples, 0.45%)</title><rect x="51.7" y="739.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="54.7" y="750.0"></text>
</g>
<g>
<title>tcp_poll (17 samples, 0.20%)</title><rect x="54.5" y="723.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="57.5" y="734.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.03%)</title><rect x="57.0" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="60.0" y="750.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.06%)</title><rect x="57.4" y="755.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.4" y="766.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.03%)</title><rect x="58.1" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="61.1" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.03%)</title><rect x="58.8" y="787.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.8" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.02%)</title><rect x="59.2" y="787.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="62.2" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.02%)</title><rect x="59.2" y="771.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.2" y="782.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="59.2" y="755.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.2" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.02%)</title><rect x="59.6" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="62.6" y="846.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.05%)</title><rect x="59.9" y="899.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="62.9" y="910.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.09%)</title><rect x="60.5" y="899.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="63.5" y="910.0"></text>
</g>
<g>
<title>epoll_wait@plt (2 samples, 0.02%)</title><rect x="61.6" y="899.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="64.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,263 samples, 95.38%)</title><rect x="61.9" y="931.0" width="1125.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.9" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,246 samples, 95.19%)</title><rect x="63.3" y="915.0" width="1123.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.3" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,768 samples, 89.67%)</title><rect x="64.1" y="899.0" width="1058.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.1" y="910.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,512 samples, 86.71%)</title><rect x="70.6" y="883.0" width="1023.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.6" y="894.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,508 samples, 86.67%)</title><rect x="71.2" y="867.0" width="1022.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.2" y="878.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (7,468 samples, 86.21%)</title><rect x="71.3" y="851.0" width="1017.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.3" y="862.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (73 samples, 0.84%)</title><rect x="72.0" y="835.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (73 samples, 0.84%)</title><rect x="72.0" y="819.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (30 samples, 0.35%)</title><rect x="73.1" y="803.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (29 samples, 0.33%)</title><rect x="73.2" y="787.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.2" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="75.8" y="771.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="78.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.07%)</title><rect x="76.3" y="771.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (18 samples, 0.21%)</title><rect x="77.2" y="803.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.07%)</title><rect x="78.8" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.02%)</title><rect x="79.3" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.02%)</title><rect x="79.6" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="79.6" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (15 samples, 0.17%)</title><rect x="79.9" y="803.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (15 samples, 0.17%)</title><rect x="79.9" y="787.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (15 samples, 0.17%)</title><rect x="79.9" y="771.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.13%)</title><rect x="80.4" y="755.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (7,390 samples, 85.31%)</title><rect x="81.9" y="835.0" width="1006.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.9" y="846.0">ru/mail/polis/service/codearound/RepliServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (8 samples, 0.09%)</title><rect x="84.1" y="819.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (8 samples, 0.09%)</title><rect x="84.1" y="803.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.09%)</title><rect x="84.1" y="787.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.1" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="84.5" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.06%)</title><rect x="84.5" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,164 samples, 24.98%)</title><rect x="85.3" y="819.0" width="294.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.3" y="830.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (15 samples, 0.17%)</title><rect x="86.1" y="803.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.16%)</title><rect x="86.3" y="787.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.16%)</title><rect x="86.3" y="771.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.06%)</title><rect x="87.5" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.5" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (3 samples, 0.03%)</title><rect x="88.2" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,098 samples, 24.22%)</title><rect x="88.6" y="803.0" width="285.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.6" y="814.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (54 samples, 0.62%)</title><rect x="88.6" y="787.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="90.0" y="771.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="90.2" y="771.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="93.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (37 samples, 0.43%)</title><rect x="90.8" y="771.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.03%)</title><rect x="90.8" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.02%)</title><rect x="90.9" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (21 samples, 0.24%)</title><rect x="91.3" y="755.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="93.5" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.03%)</title><rect x="93.6" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.14%)</title><rect x="94.2" y="755.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.14%)</title><rect x="94.2" y="739.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.13%)</title><rect x="94.3" y="723.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="95.5" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,044 samples, 23.59%)</title><rect x="95.9" y="787.0" width="278.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.9" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (2,040 samples, 23.55%)</title><rect x="96.5" y="771.0" width="277.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.5" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="97.2" y="755.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="100.2" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.03%)</title><rect x="97.2" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="100.2" y="750.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="97.6" y="755.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="100.6" y="766.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.02%)</title><rect x="98.3" y="755.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="101.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,016 samples, 23.27%)</title><rect x="98.5" y="755.0" width="274.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.5" y="766.0">one/nio/net/Session$ArrayQueueItem.wr..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,005 samples, 23.14%)</title><rect x="100.0" y="739.0" width="273.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.0" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (82 samples, 0.95%)</title><rect x="105.5" y="723.0" width="11.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="108.5" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.07%)</title><rect x="109.0" y="707.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="112.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="110.0" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="113.0" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (8 samples, 0.09%)</title><rect x="110.3" y="707.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="113.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (33 samples, 0.38%)</title><rect x="111.3" y="707.0" width="4.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="114.3" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.03%)</title><rect x="112.2" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="115.2" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.03%)</title><rect x="112.6" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="115.6" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="113.0" y="691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="116.0" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.07%)</title><rect x="113.5" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="116.5" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (11 samples, 0.13%)</title><rect x="114.3" y="691.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="117.3" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.03%)</title><rect x="115.4" y="675.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="118.4" y="686.0"></text>
</g>
<g>
<title>memmove@plt (4 samples, 0.05%)</title><rect x="115.8" y="707.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="118.8" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.08%)</title><rect x="116.7" y="723.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="119.7" y="734.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.03%)</title><rect x="117.6" y="723.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="120.6" y="734.0"></text>
</g>
<g>
<title>__libc_send (1,873 samples, 21.62%)</title><rect x="118.0" y="723.0" width="255.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="121.0" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,839 samples, 21.23%)</title><rect x="122.6" y="707.0" width="250.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="125.6" y="718.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.05%)</title><rect x="122.6" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="125.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1,835 samples, 21.18%)</title><rect x="123.2" y="691.0" width="249.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="126.2" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,752 samples, 20.22%)</title><rect x="133.5" y="675.0" width="238.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.5" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,739 samples, 20.07%)</title><rect x="134.1" y="659.0" width="236.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="137.1" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="135.5" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.5" y="654.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="136.0" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="139.0" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.02%)</title><rect x="136.4" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="139.4" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1,692 samples, 19.53%)</title><rect x="136.8" y="643.0" width="230.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="139.8" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.03%)</title><rect x="137.2" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="140.2" y="638.0"></text>
</g>
<g>
<title>inet_sendmsg (1,660 samples, 19.16%)</title><rect x="137.6" y="627.0" width="226.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="140.6" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,647 samples, 19.01%)</title><rect x="139.0" y="611.0" width="224.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="142.0" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="140.1" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="143.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="140.5" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.5" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="140.8" y="595.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.8" y="606.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.09%)</title><rect x="141.0" y="595.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="144.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="141.6" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="144.6" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.02%)</title><rect x="142.1" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="145.1" y="606.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="142.4" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="145.4" y="606.0"></text>
</g>
<g>
<title>skb_put (3 samples, 0.03%)</title><rect x="142.8" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="145.8" y="606.0"></text>
</g>
<g>
<title>sock_zerocopy_put (3 samples, 0.03%)</title><rect x="143.2" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="146.2" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.02%)</title><rect x="143.8" y="595.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="146.8" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.03%)</title><rect x="144.2" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="147.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,603 samples, 18.50%)</title><rect x="144.6" y="595.0" width="218.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="147.6" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.07%)</title><rect x="149.1" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="152.1" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="149.3" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="152.3" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.05%)</title><rect x="149.9" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.9" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="150.4" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="153.4" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (13 samples, 0.15%)</title><rect x="150.8" y="579.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="153.8" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.12%)</title><rect x="151.0" y="563.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="154.0" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="152.3" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="155.3" y="574.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.03%)</title><rect x="152.6" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="155.6" y="590.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.02%)</title><rect x="153.0" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="156.0" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (77 samples, 0.89%)</title><rect x="153.3" y="579.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="156.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (56 samples, 0.65%)</title><rect x="154.5" y="563.0" width="7.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="157.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (32 samples, 0.37%)</title><rect x="155.3" y="547.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="158.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (27 samples, 0.31%)</title><rect x="155.3" y="531.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="158.3" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (15 samples, 0.17%)</title><rect x="156.6" y="515.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="159.6" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.03%)</title><rect x="158.6" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="161.6" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.03%)</title><rect x="159.3" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="162.3" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (17 samples, 0.20%)</title><rect x="159.7" y="547.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="162.7" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (8 samples, 0.09%)</title><rect x="160.9" y="531.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="163.9" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="162.1" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.1" y="574.0"></text>
</g>
<g>
<title>ksize (10 samples, 0.12%)</title><rect x="162.4" y="563.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="165.4" y="574.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="163.8" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="166.8" y="590.0"></text>
</g>
<g>
<title>tcp_push (1,428 samples, 16.48%)</title><rect x="164.5" y="579.0" width="194.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="167.5" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,424 samples, 16.44%)</title><rect x="164.7" y="563.0" width="194.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.7" y="574.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.03%)</title><rect x="165.0" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="168.0" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="165.4" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.4" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (2 samples, 0.02%)</title><rect x="166.0" y="547.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="169.0" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,413 samples, 16.31%)</title><rect x="166.2" y="547.0" width="192.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="169.2" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="170.5" y="531.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="173.5" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1,316 samples, 15.19%)</title><rect x="170.7" y="531.0" width="179.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="173.7" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="173.9" y="515.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="176.9" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (4 samples, 0.05%)</title><rect x="174.1" y="515.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="177.1" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,268 samples, 14.64%)</title><rect x="174.8" y="515.0" width="172.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.8" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (1,257 samples, 14.51%)</title><rect x="174.8" y="499.0" width="171.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="177.8" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="177.0" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="180.0" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1,232 samples, 14.22%)</title><rect x="177.3" y="483.0" width="167.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="180.3" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (231 samples, 2.67%)</title><rect x="177.7" y="467.0" width="31.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="180.7" y="478.0">__..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.02%)</title><rect x="178.2" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="181.2" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (12 samples, 0.14%)</title><rect x="178.5" y="451.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="181.5" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.03%)</title><rect x="180.1" y="451.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="183.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (205 samples, 2.37%)</title><rect x="180.5" y="451.0" width="28.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="183.5" y="462.0">n..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.02%)</title><rect x="181.5" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="184.5" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (23 samples, 0.27%)</title><rect x="181.8" y="435.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="184.8" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (21 samples, 0.24%)</title><rect x="182.0" y="419.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="185.0" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (157 samples, 1.81%)</title><rect x="184.9" y="435.0" width="21.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="187.9" y="446.0">i..</text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (3 samples, 0.03%)</title><rect x="185.2" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.2" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.03%)</title><rect x="185.7" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.7" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (145 samples, 1.67%)</title><rect x="186.3" y="419.0" width="19.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="189.3" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (44 samples, 0.51%)</title><rect x="188.4" y="403.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="191.4" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (3 samples, 0.03%)</title><rect x="194.4" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.4" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (6 samples, 0.07%)</title><rect x="194.8" y="403.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="197.8" y="414.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (4 samples, 0.05%)</title><rect x="195.8" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="198.8" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (11 samples, 0.13%)</title><rect x="196.3" y="403.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="199.3" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (11 samples, 0.13%)</title><rect x="197.8" y="403.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="200.8" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (49 samples, 0.57%)</title><rect x="199.3" y="403.0" width="6.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.3" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.03%)</title><rect x="202.3" y="387.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.3" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.03%)</title><rect x="202.3" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.3" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.02%)</title><rect x="202.7" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="205.7" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (22 samples, 0.25%)</title><rect x="203.0" y="387.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.0" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (8 samples, 0.09%)</title><rect x="204.9" y="371.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.9" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.03%)</title><rect x="206.3" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="209.3" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (12 samples, 0.14%)</title><rect x="206.8" y="435.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="209.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.05%)</title><rect x="207.0" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (7 samples, 0.08%)</title><rect x="207.5" y="419.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="210.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.05%)</title><rect x="207.6" y="403.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="210.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.02%)</title><rect x="208.2" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="211.2" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (5 samples, 0.06%)</title><rect x="208.5" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="211.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.06%)</title><rect x="209.1" y="467.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="212.1" y="478.0"></text>
</g>
<g>
<title>ip_output (987 samples, 11.39%)</title><rect x="209.8" y="467.0" width="134.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="212.8" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.02%)</title><rect x="211.2" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="214.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (957 samples, 11.05%)</title><rect x="211.5" y="451.0" width="130.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="214.5" y="462.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (10 samples, 0.12%)</title><rect x="212.5" y="435.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="215.5" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (938 samples, 10.83%)</title><rect x="214.0" y="435.0" width="127.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.0" y="446.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="216.9" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.9" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (817 samples, 9.43%)</title><rect x="217.2" y="419.0" width="111.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="220.2" y="430.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq.part.21 (816 samples, 9.42%)</title><rect x="217.3" y="403.0" width="111.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="220.3" y="414.0">do_softirq.pa..</text>
</g>
<g>
<title>do_softirq_own_stack (803 samples, 9.27%)</title><rect x="219.1" y="387.0" width="109.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="222.1" y="398.0">do_softirq_ow..</text>
</g>
<g>
<title>__softirqentry_text_start (799 samples, 9.22%)</title><rect x="219.1" y="371.0" width="108.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="222.1" y="382.0">__softirqentr..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.02%)</title><rect x="221.1" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="224.1" y="366.0"></text>
</g>
<g>
<title>net_rx_action (782 samples, 9.03%)</title><rect x="221.4" y="355.0" width="106.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="224.4" y="366.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (765 samples, 8.83%)</title><rect x="223.7" y="339.0" width="104.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="226.7" y="350.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (740 samples, 8.54%)</title><rect x="226.8" y="323.0" width="100.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="229.8" y="334.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (734 samples, 8.47%)</title><rect x="227.1" y="307.0" width="100.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.1" y="318.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_core (19 samples, 0.22%)</title><rect x="227.7" y="291.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="230.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (709 samples, 8.18%)</title><rect x="230.3" y="291.0" width="96.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="233.3" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.03%)</title><rect x="231.1" y="275.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (11 samples, 0.13%)</title><rect x="231.5" y="275.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="234.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (668 samples, 7.71%)</title><rect x="233.0" y="275.0" width="91.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="236.0" y="286.0">ip_rcv_fin..</text>
</g>
<g>
<title>ip_local_deliver (659 samples, 7.61%)</title><rect x="233.4" y="259.0" width="89.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="236.4" y="270.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (632 samples, 7.30%)</title><rect x="233.7" y="243.0" width="86.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="236.7" y="254.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (625 samples, 7.21%)</title><rect x="233.9" y="227.0" width="85.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.9" y="238.0">ip_protoco..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.05%)</title><rect x="234.7" y="211.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="237.7" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.03%)</title><rect x="235.3" y="211.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="238.3" y="222.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.02%)</title><rect x="235.8" y="211.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.03%)</title><rect x="236.2" y="211.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="239.2" y="222.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.02%)</title><rect x="236.7" y="211.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="239.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (603 samples, 6.96%)</title><rect x="236.9" y="211.0" width="82.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="239.9" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (30 samples, 0.35%)</title><rect x="240.3" y="195.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.3" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (6 samples, 0.07%)</title><rect x="243.6" y="179.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="246.6" y="190.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (2 samples, 0.02%)</title><rect x="244.4" y="195.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="247.4" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.02%)</title><rect x="244.7" y="195.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.7" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="245.0" y="195.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="248.0" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.10%)</title><rect x="245.2" y="195.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="248.2" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.06%)</title><rect x="245.5" y="179.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="248.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (525 samples, 6.06%)</title><rect x="246.9" y="195.0" width="71.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.9" y="206.0">tcp_v4_d..</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.03%)</title><rect x="247.6" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="250.6" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="248.2" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="251.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (513 samples, 5.92%)</title><rect x="248.5" y="179.0" width="69.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="251.5" y="190.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (29 samples, 0.33%)</title><rect x="249.9" y="163.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="252.9" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (27 samples, 0.31%)</title><rect x="250.1" y="147.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.1" y="158.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="250.7" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.7" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (21 samples, 0.24%)</title><rect x="251.0" y="131.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="254.0" y="142.0"></text>
</g>
<g>
<title>mod_timer (19 samples, 0.22%)</title><rect x="251.2" y="115.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="254.2" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.13%)</title><rect x="252.0" y="99.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="255.0" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.02%)</title><rect x="253.5" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="256.5" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.05%)</title><rect x="253.8" y="163.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="256.8" y="174.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.03%)</title><rect x="254.4" y="163.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="257.4" y="174.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (4 samples, 0.05%)</title><rect x="254.9" y="163.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="257.9" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.02%)</title><rect x="255.5" y="163.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="258.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (131 samples, 1.51%)</title><rect x="255.7" y="163.0" width="17.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="258.7" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.03%)</title><rect x="259.7" y="147.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="262.7" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.03%)</title><rect x="260.1" y="147.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="263.1" y="158.0"></text>
</g>
<g>
<title>rb_next (3 samples, 0.03%)</title><rect x="260.6" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (4 samples, 0.05%)</title><rect x="261.0" y="147.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.0" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (76 samples, 0.88%)</title><rect x="261.7" y="147.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="264.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (36 samples, 0.42%)</title><rect x="265.9" y="131.0" width="4.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="268.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.06%)</title><rect x="265.9" y="115.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="268.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="266.1" y="99.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.1" y="110.0"></text>
</g>
<g>
<title>skb_release_all (27 samples, 0.31%)</title><rect x="266.6" y="115.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="269.6" y="126.0"></text>
</g>
<g>
<title>skb_release_data (26 samples, 0.30%)</title><rect x="266.8" y="99.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.8" y="110.0"></text>
</g>
<g>
<title>skb_free_head (22 samples, 0.25%)</title><rect x="267.3" y="83.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="270.3" y="94.0"></text>
</g>
<g>
<title>kfree (22 samples, 0.25%)</title><rect x="267.3" y="67.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="270.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.08%)</title><rect x="269.3" y="51.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.3" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (5 samples, 0.06%)</title><rect x="269.6" y="35.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="272.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="270.3" y="115.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="273.3" y="126.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="270.6" y="115.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="273.6" y="126.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.02%)</title><rect x="271.1" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="274.1" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (5 samples, 0.06%)</title><rect x="271.4" y="131.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.4" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.02%)</title><rect x="272.1" y="147.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="275.1" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.02%)</title><rect x="272.5" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.5" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.03%)</title><rect x="272.8" y="147.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.8" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.03%)</title><rect x="273.2" y="147.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.2" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (14 samples, 0.16%)</title><rect x="273.6" y="163.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="276.6" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.02%)</title><rect x="275.5" y="163.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.5" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (279 samples, 3.22%)</title><rect x="275.7" y="163.0" width="38.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="278.7" y="174.0">tcp..</text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="279.0" y="147.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="282.0" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (242 samples, 2.79%)</title><rect x="279.3" y="147.0" width="33.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="282.3" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (233 samples, 2.69%)</title><rect x="280.5" y="131.0" width="31.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="283.5" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (233 samples, 2.69%)</title><rect x="280.5" y="115.0" width="31.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.5" y="126.0">__..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="280.9" y="99.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (228 samples, 2.63%)</title><rect x="281.2" y="99.0" width="31.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="284.2" y="110.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (7 samples, 0.08%)</title><rect x="312.3" y="147.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.3" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.05%)</title><rect x="313.2" y="147.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="316.2" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="313.8" y="163.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="316.8" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (10 samples, 0.12%)</title><rect x="314.3" y="163.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="317.3" y="174.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.06%)</title><rect x="314.7" y="147.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="317.7" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="315.1" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="318.1" y="142.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="315.4" y="147.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="318.4" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.02%)</title><rect x="315.7" y="163.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="318.7" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.02%)</title><rect x="315.9" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.9" y="174.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.02%)</title><rect x="316.2" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="319.2" y="174.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.07%)</title><rect x="316.6" y="163.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="319.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.02%)</title><rect x="317.6" y="163.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="320.6" y="174.0"></text>
</g>
<g>
<title>tcp_urg (4 samples, 0.05%)</title><rect x="317.8" y="163.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="320.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (4 samples, 0.05%)</title><rect x="318.4" y="195.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="321.4" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.02%)</title><rect x="319.1" y="227.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.1" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.03%)</title><rect x="319.3" y="227.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="322.3" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.06%)</title><rect x="319.7" y="243.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.7" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.02%)</title><rect x="320.4" y="243.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="323.4" y="254.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.02%)</title><rect x="320.7" y="243.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="323.7" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.18%)</title><rect x="321.0" y="243.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.0" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.08%)</title><rect x="321.4" y="227.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="324.4" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.07%)</title><rect x="321.5" y="211.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.5" y="222.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="322.3" y="227.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="325.3" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.03%)</title><rect x="322.7" y="227.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.7" y="238.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="322.7" y="211.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="325.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (5 samples, 0.06%)</title><rect x="323.3" y="259.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (4 samples, 0.05%)</title><rect x="324.0" y="275.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="327.0" y="286.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (7 samples, 0.08%)</title><rect x="324.5" y="275.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="327.5" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="325.5" y="275.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.5" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.09%)</title><rect x="325.7" y="275.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="328.7" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="326.0" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="329.0" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="326.0" y="243.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="329.0" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (3 samples, 0.03%)</title><rect x="326.4" y="259.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="329.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.05%)</title><rect x="327.1" y="307.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="330.1" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.02%)</title><rect x="327.6" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="330.6" y="334.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.05%)</title><rect x="327.9" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="330.9" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (95 samples, 1.10%)</title><rect x="328.5" y="419.0" width="12.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.5" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (91 samples, 1.05%)</title><rect x="328.5" y="403.0" width="12.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.5" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (44 samples, 0.51%)</title><rect x="331.1" y="387.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.1" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (33 samples, 0.38%)</title><rect x="331.7" y="371.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.7" y="382.0"></text>
</g>
<g>
<title>netif_rx (20 samples, 0.23%)</title><rect x="332.4" y="355.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="335.4" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="332.4" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="335.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (18 samples, 0.21%)</title><rect x="332.7" y="339.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="335.7" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (16 samples, 0.18%)</title><rect x="333.0" y="323.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="336.0" y="334.0"></text>
</g>
<g>
<title>sk_free (5 samples, 0.06%)</title><rect x="335.3" y="355.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="338.3" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.02%)</title><rect x="336.0" y="355.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="339.0" y="366.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.03%)</title><rect x="336.2" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="339.2" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.02%)</title><rect x="336.6" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="339.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.09%)</title><rect x="337.0" y="387.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="340.0" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (12 samples, 0.14%)</title><rect x="338.4" y="387.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="341.4" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.03%)</title><rect x="339.4" y="371.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="342.4" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.02%)</title><rect x="339.8" y="371.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="342.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (6 samples, 0.07%)</title><rect x="340.0" y="387.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.0" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.05%)</title><rect x="340.9" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="343.9" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.21 (3 samples, 0.03%)</title><rect x="341.4" y="419.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="344.4" y="430.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (3 samples, 0.03%)</title><rect x="341.8" y="451.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.17%)</title><rect x="342.2" y="451.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="345.2" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (6 samples, 0.07%)</title><rect x="342.9" y="435.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="345.9" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (3 samples, 0.03%)</title><rect x="343.3" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="346.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (3 samples, 0.03%)</title><rect x="343.9" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="346.9" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.03%)</title><rect x="343.9" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.03%)</title><rect x="343.9" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.9" y="414.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.03%)</title><rect x="344.3" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="347.3" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="344.7" y="467.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="347.7" y="478.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.02%)</title><rect x="345.1" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="348.1" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.06%)</title><rect x="345.4" y="483.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="348.4" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (7 samples, 0.08%)</title><rect x="346.0" y="499.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="349.0" y="510.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.02%)</title><rect x="347.1" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="350.1" y="510.0"></text>
</g>
<g>
<title>skb_clone (10 samples, 0.12%)</title><rect x="347.5" y="515.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.5" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.05%)</title><rect x="347.7" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="350.7" y="510.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.06%)</title><rect x="348.2" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="351.2" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="348.6" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="351.6" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.05%)</title><rect x="348.9" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="351.9" y="526.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.02%)</title><rect x="349.4" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="352.4" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.02%)</title><rect x="350.0" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="353.0" y="542.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.02%)</title><rect x="350.4" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="353.4" y="542.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.09%)</title><rect x="350.7" y="531.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="353.7" y="542.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="351.2" y="515.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.2" y="526.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.07%)</title><rect x="351.8" y="531.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="354.8" y="542.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="352.7" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.7" y="542.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.02%)</title><rect x="353.3" y="531.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="356.3" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (24 samples, 0.28%)</title><rect x="353.5" y="531.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="356.5" y="542.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.03%)</title><rect x="354.3" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="357.3" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (7 samples, 0.08%)</title><rect x="354.9" y="515.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.9" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (3 samples, 0.03%)</title><rect x="355.4" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="358.4" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.08%)</title><rect x="355.8" y="515.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="358.8" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.07%)</title><rect x="356.0" y="499.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.0" y="510.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.07%)</title><rect x="356.0" y="483.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="359.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="356.5" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="359.5" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (5 samples, 0.06%)</title><rect x="356.9" y="531.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.9" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.03%)</title><rect x="357.7" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.7" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="358.2" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="361.2" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.02%)</title><rect x="358.7" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="361.7" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.05%)</title><rect x="359.0" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="362.0" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (22 samples, 0.25%)</title><rect x="359.5" y="579.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="362.5" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="359.7" y="563.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="362.7" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (18 samples, 0.21%)</title><rect x="359.9" y="563.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="362.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="361.7" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.7" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.02%)</title><rect x="362.1" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="365.1" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="362.5" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="365.5" y="590.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.02%)</title><rect x="363.1" y="595.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="366.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.03%)</title><rect x="363.3" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="366.3" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (23 samples, 0.27%)</title><rect x="363.7" y="627.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="366.7" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.03%)</title><rect x="364.3" y="611.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="367.3" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (16 samples, 0.18%)</title><rect x="364.7" y="611.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="367.7" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (16 samples, 0.18%)</title><rect x="364.7" y="595.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="367.7" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.12%)</title><rect x="365.5" y="579.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="368.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.03%)</title><rect x="366.9" y="627.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="369.9" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.31%)</title><rect x="367.3" y="643.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="370.3" y="654.0"></text>
</g>
<g>
<title>__fdget (25 samples, 0.29%)</title><rect x="367.3" y="627.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (24 samples, 0.28%)</title><rect x="367.4" y="611.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="370.4" y="622.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.21%)</title><rect x="368.2" y="595.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="371.2" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="370.7" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="373.7" y="638.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.05%)</title><rect x="371.1" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="374.1" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.05%)</title><rect x="371.6" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="374.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.06%)</title><rect x="372.2" y="675.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.2" y="686.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="372.6" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="375.6" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="372.6" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="375.6" y="654.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="372.9" y="675.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="375.9" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.10%)</title><rect x="373.1" y="755.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="376.1" y="766.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.08%)</title><rect x="373.4" y="739.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="376.4" y="750.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.08%)</title><rect x="373.4" y="723.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="376.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (32 samples, 0.37%)</title><rect x="374.4" y="803.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="374.6" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (27 samples, 0.31%)</title><rect x="374.9" y="787.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="374.9" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.03%)</title><rect x="375.0" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (23 samples, 0.27%)</title><rect x="375.5" y="771.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.07%)</title><rect x="377.1" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.07%)</title><rect x="377.1" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.1" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.07%)</title><rect x="377.1" y="723.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.1" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="377.9" y="755.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="380.9" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="378.2" y="755.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="381.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (4 samples, 0.05%)</title><rect x="378.7" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="379.0" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.0" y="798.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (2 samples, 0.02%)</title><rect x="379.4" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (3 samples, 0.03%)</title><rect x="379.7" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (3 samples, 0.03%)</title><rect x="379.7" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.7" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.03%)</title><rect x="379.7" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (26 samples, 0.30%)</title><rect x="380.1" y="819.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (10 samples, 0.12%)</title><rect x="380.4" y="803.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.15%)</title><rect x="381.7" y="803.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.03%)</title><rect x="381.7" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.12%)</title><rect x="382.1" y="787.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.12%)</title><rect x="383.6" y="819.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="383.8" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="383.9" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (6 samples, 0.07%)</title><rect x="384.2" y="803.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.07%)</title><rect x="384.2" y="787.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.02%)</title><rect x="384.7" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="387.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (22 samples, 0.25%)</title><rect x="385.1" y="819.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.1" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="387.7" y="803.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="390.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (5,142 samples, 59.36%)</title><rect x="388.1" y="819.0" width="700.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.1" y="830.0">ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes</text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.13%)</title><rect x="402.2" y="803.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.07%)</title><rect x="402.8" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.06%)</title><rect x="403.0" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.0" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="403.0" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="406.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.29%)</title><rect x="403.8" y="803.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.29%)</title><rect x="403.8" y="787.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (22 samples, 0.25%)</title><rect x="404.2" y="771.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.23%)</title><rect x="404.3" y="755.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.3" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.14%)</title><rect x="405.4" y="739.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="406.0" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="409.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="406.1" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.06%)</title><rect x="406.4" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="406.6" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.6" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="406.8" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="407.5" y="803.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="410.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (2,352 samples, 27.15%)</title><rect x="407.7" y="803.0" width="320.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.7" y="814.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (10 samples, 0.12%)</title><rect x="407.7" y="787.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.05%)</title><rect x="408.6" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="408.7" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="411.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="408.7" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.03%)</title><rect x="408.7" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,342 samples, 27.03%)</title><rect x="409.1" y="787.0" width="319.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.1" y="798.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,341 samples, 27.02%)</title><rect x="409.2" y="771.0" width="318.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.2" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.09%)</title><rect x="412.4" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="412.4" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.4" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="412.6" y="723.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="415.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="412.9" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (403 samples, 4.65%)</title><rect x="413.5" y="755.0" width="54.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.5" y="766.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="413.9" y="739.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="416.9" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="413.9" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="416.9" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="414.0" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="417.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="414.1" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="417.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.02%)</title><rect x="414.4" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (393 samples, 4.54%)</title><rect x="414.7" y="739.0" width="53.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.7" y="750.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (63 samples, 0.73%)</title><rect x="417.7" y="723.0" width="8.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="420.7" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.07%)</title><rect x="418.8" y="707.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="421.8" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (12 samples, 0.14%)</title><rect x="419.9" y="707.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="422.9" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (27 samples, 0.31%)</title><rect x="421.5" y="707.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="424.5" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.05%)</title><rect x="423.3" y="691.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="426.3" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="423.9" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="426.9" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.03%)</title><rect x="424.2" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="427.2" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="424.6" y="691.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="427.6" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.05%)</title><rect x="424.6" y="675.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="427.6" y="686.0"></text>
</g>
<g>
<title>memmove@plt (6 samples, 0.07%)</title><rect x="425.2" y="707.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="428.2" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.02%)</title><rect x="426.0" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="429.0" y="718.0"></text>
</g>
<g>
<title>__GI___recv (300 samples, 3.46%)</title><rect x="426.3" y="723.0" width="40.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="429.3" y="734.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (280 samples, 3.23%)</title><rect x="429.0" y="707.0" width="38.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="432.0" y="718.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.03%)</title><rect x="429.0" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (277 samples, 3.20%)</title><rect x="429.4" y="691.0" width="37.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.4" y="702.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (233 samples, 2.69%)</title><rect x="435.4" y="675.0" width="31.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.4" y="686.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (229 samples, 2.64%)</title><rect x="435.4" y="659.0" width="31.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="438.4" y="670.0">__..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="436.8" y="643.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.8" y="654.0"></text>
</g>
<g>
<title>fput (5 samples, 0.06%)</title><rect x="437.0" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="440.0" y="654.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="437.8" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.8" y="654.0"></text>
</g>
<g>
<title>sock_recvmsg (195 samples, 2.25%)</title><rect x="438.1" y="643.0" width="26.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="441.1" y="654.0">s..</text>
</g>
<g>
<title>inet_recvmsg (177 samples, 2.04%)</title><rect x="438.2" y="627.0" width="24.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.2" y="638.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (169 samples, 1.95%)</title><rect x="439.3" y="611.0" width="23.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="442.3" y="622.0">t..</text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.09%)</title><rect x="442.7" y="595.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="445.7" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="442.7" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="445.7" y="590.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.06%)</title><rect x="443.0" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="446.0" y="590.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.03%)</title><rect x="443.0" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="446.0" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="443.8" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="446.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.03%)</title><rect x="444.5" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.5" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="445.1" y="595.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="448.1" y="606.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="445.5" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="448.5" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="445.6" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.6" y="590.0"></text>
</g>
<g>
<title>remove_wait_queue (2 samples, 0.02%)</title><rect x="445.9" y="595.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.9" y="606.0"></text>
</g>
<g>
<title>sk_wait_data (74 samples, 0.85%)</title><rect x="446.1" y="595.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.03%)</title><rect x="447.2" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="450.2" y="590.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.05%)</title><rect x="447.8" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="450.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="447.8" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="450.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="448.1" y="563.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.1" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (26 samples, 0.30%)</title><rect x="448.3" y="579.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.3" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="448.3" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="451.3" y="574.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="448.6" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="451.6" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="448.6" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="451.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (19 samples, 0.22%)</title><rect x="448.9" y="563.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="451.9" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.03%)</title><rect x="451.5" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="454.5" y="574.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="451.9" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="454.9" y="590.0"></text>
</g>
<g>
<title>remove_wait_queue (8 samples, 0.09%)</title><rect x="452.3" y="579.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="455.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.08%)</title><rect x="452.4" y="563.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.4" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.03%)</title><rect x="453.4" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="456.4" y="590.0"></text>
</g>
<g>
<title>wait_woken (17 samples, 0.20%)</title><rect x="453.9" y="579.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="456.9" y="590.0"></text>
</g>
<g>
<title>schedule_timeout (16 samples, 0.18%)</title><rect x="454.0" y="563.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="457.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.13%)</title><rect x="454.3" y="547.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="457.3" y="558.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.03%)</title><rect x="455.8" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="458.8" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="456.0" y="531.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="459.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (28 samples, 0.32%)</title><rect x="456.2" y="595.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="459.2" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (25 samples, 0.29%)</title><rect x="456.4" y="579.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.4" y="590.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="456.4" y="563.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="459.4" y="574.0"></text>
</g>
<g>
<title>simple_copy_to_iter (23 samples, 0.27%)</title><rect x="456.6" y="563.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.6" y="574.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.07%)</title><rect x="456.9" y="547.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="459.9" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="457.2" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.2" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="457.7" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.7" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.10%)</title><rect x="458.1" y="547.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="461.1" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.07%)</title><rect x="458.4" y="531.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="461.4" y="542.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="459.5" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="462.5" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.02%)</title><rect x="459.8" y="579.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="462.8" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.05%)</title><rect x="460.0" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.0" y="606.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="460.6" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.6" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.10%)</title><rect x="460.9" y="595.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.9" y="606.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.09%)</title><rect x="461.0" y="579.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="464.0" y="590.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.07%)</title><rect x="461.3" y="563.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.3" y="574.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="461.8" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="464.8" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="462.1" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.1" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.15%)</title><rect x="462.4" y="627.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="465.4" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.02%)</title><rect x="462.5" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.5" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.12%)</title><rect x="462.8" y="611.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.8" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.12%)</title><rect x="462.8" y="595.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="465.8" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.07%)</title><rect x="463.3" y="579.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="466.3" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.05%)</title><rect x="464.1" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="467.1" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.16%)</title><rect x="464.7" y="643.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="467.7" y="654.0"></text>
</g>
<g>
<title>__fdget (12 samples, 0.14%)</title><rect x="464.8" y="627.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="467.8" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="464.8" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="467.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.12%)</title><rect x="465.1" y="611.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="468.1" y="622.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.08%)</title><rect x="465.5" y="595.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="468.5" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="466.9" y="659.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.9" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="467.1" y="723.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="470.1" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="467.7" y="723.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="470.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (156 samples, 1.80%)</title><rect x="468.4" y="755.0" width="21.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.4" y="766.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.08%)</title><rect x="470.1" y="739.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.08%)</title><rect x="470.1" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.08%)</title><rect x="470.1" y="707.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.07%)</title><rect x="470.3" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.03%)</title><rect x="470.7" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.7" y="686.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.02%)</title><rect x="470.8" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (4 samples, 0.05%)</title><rect x="471.1" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.05%)</title><rect x="471.1" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.22%)</title><rect x="471.6" y="739.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.03%)</title><rect x="472.0" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="472.4" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.13%)</title><rect x="472.7" y="723.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.08%)</title><rect x="472.7" y="707.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="473.7" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.7" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.09%)</title><rect x="474.2" y="739.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="477.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (62 samples, 0.72%)</title><rect x="475.3" y="739.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.58%)</title><rect x="476.9" y="723.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.58%)</title><rect x="476.9" y="707.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.12%)</title><rect x="482.4" y="691.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.10%)</title><rect x="482.4" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.10%)</title><rect x="482.4" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.15%)</title><rect x="483.7" y="739.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (6 samples, 0.07%)</title><rect x="485.5" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (24 samples, 0.28%)</title><rect x="486.3" y="739.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.06%)</title><rect x="486.5" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.20%)</title><rect x="487.1" y="723.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.18%)</title><rect x="487.3" y="707.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.3" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="488.8" y="691.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="491.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="489.1" y="691.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="492.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (77 samples, 0.89%)</title><rect x="489.6" y="755.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (9 samples, 0.10%)</title><rect x="491.5" y="739.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (48 samples, 0.55%)</title><rect x="492.7" y="739.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="495.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.08%)</title><rect x="494.6" y="723.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (5 samples, 0.06%)</title><rect x="494.9" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="497.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.05%)</title><rect x="495.6" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="495.7" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (23 samples, 0.27%)</title><rect x="496.1" y="723.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.25%)</title><rect x="496.3" y="707.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (21 samples, 0.24%)</title><rect x="496.4" y="691.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (10 samples, 0.12%)</title><rect x="497.6" y="675.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.02%)</title><rect x="498.7" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.7" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (2 samples, 0.02%)</title><rect x="499.0" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="502.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.07%)</title><rect x="499.3" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="499.7" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.09%)</title><rect x="500.1" y="755.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.07%)</title><rect x="500.4" y="739.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="500.5" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.02%)</title><rect x="500.9" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.02%)</title><rect x="500.9" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.9" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.02%)</title><rect x="500.9" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (318 samples, 3.67%)</title><rect x="501.2" y="755.0" width="43.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.2" y="766.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (17 samples, 0.20%)</title><rect x="503.6" y="739.0" width="2.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="506.6" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (280 samples, 3.23%)</title><rect x="505.9" y="739.0" width="38.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="508.9" y="750.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (254 samples, 2.93%)</title><rect x="509.5" y="723.0" width="34.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.5" y="734.0">en..</text>
</g>
<g>
<title>__x64_sys_setsockopt (6 samples, 0.07%)</title><rect x="509.5" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="512.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (248 samples, 2.86%)</title><rect x="510.3" y="707.0" width="33.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="513.3" y="718.0">do..</text>
</g>
<g>
<title>__sys_setsockopt (4 samples, 0.05%)</title><rect x="522.2" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="525.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (157 samples, 1.81%)</title><rect x="522.7" y="691.0" width="21.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.7" y="702.0">_..</text>
</g>
<g>
<title>__sys_setsockopt (149 samples, 1.72%)</title><rect x="522.7" y="675.0" width="20.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="525.7" y="686.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="523.2" y="659.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.2" y="670.0"></text>
</g>
<g>
<title>__get_user_4 (15 samples, 0.17%)</title><rect x="523.7" y="659.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.7" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.02%)</title><rect x="525.7" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="528.7" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="526.0" y="659.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="529.0" y="670.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="526.2" y="659.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="529.2" y="670.0"></text>
</g>
<g>
<title>security_socket_setsockopt (15 samples, 0.17%)</title><rect x="526.8" y="659.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="529.8" y="670.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (4 samples, 0.05%)</title><rect x="526.9" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="529.9" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (10 samples, 0.12%)</title><rect x="527.5" y="643.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.5" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (9 samples, 0.10%)</title><rect x="527.6" y="627.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="530.6" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.09%)</title><rect x="527.7" y="611.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="530.7" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (3 samples, 0.03%)</title><rect x="528.8" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="531.8" y="670.0"></text>
</g>
<g>
<title>sock_setsockopt (66 samples, 0.76%)</title><rect x="529.2" y="659.0" width="9.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="532.2" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="531.6" y="643.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="534.6" y="654.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.03%)</title><rect x="531.8" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="534.8" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.07%)</title><rect x="532.4" y="643.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="535.4" y="654.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="532.9" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="535.9" y="638.0"></text>
</g>
<g>
<title>release_sock (10 samples, 0.12%)</title><rect x="533.2" y="643.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="536.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.03%)</title><rect x="533.9" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="536.9" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="534.0" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="537.0" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="534.3" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="537.3" y="638.0"></text>
</g>
<g>
<title>sock_set_timeout (26 samples, 0.30%)</title><rect x="534.6" y="643.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="537.6" y="654.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.02%)</title><rect x="535.5" y="627.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.5" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.09%)</title><rect x="535.8" y="627.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="538.8" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (9 samples, 0.10%)</title><rect x="536.9" y="627.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="539.9" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (35 samples, 0.40%)</title><rect x="538.2" y="659.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="541.2" y="670.0"></text>
</g>
<g>
<title>__fdget (27 samples, 0.31%)</title><rect x="538.6" y="643.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="541.6" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="538.6" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="541.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (25 samples, 0.29%)</title><rect x="538.9" y="627.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="541.9" y="638.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.13%)</title><rect x="540.8" y="611.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="543.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="542.3" y="643.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="545.3" y="654.0"></text>
</g>
<g>
<title>fput (3 samples, 0.03%)</title><rect x="543.0" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="546.0" y="686.0"></text>
</g>
<g>
<title>sock_setsockopt (4 samples, 0.05%)</title><rect x="543.5" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="546.5" y="686.0"></text>
</g>
<g>
<title>setsockopt@plt (3 samples, 0.03%)</title><rect x="544.1" y="739.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="547.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,331 samples, 15.36%)</title><rect x="544.5" y="755.0" width="181.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.5" y="766.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (65 samples, 0.75%)</title><rect x="548.9" y="739.0" width="8.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="551.9" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.06%)</title><rect x="551.8" y="723.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="554.8" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.03%)</title><rect x="552.7" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="555.7" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (18 samples, 0.21%)</title><rect x="553.1" y="723.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="556.1" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.13%)</title><rect x="555.5" y="723.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="558.5" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="555.8" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="558.8" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="556.2" y="707.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="559.2" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="556.8" y="707.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="559.8" y="718.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.02%)</title><rect x="557.0" y="723.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="560.0" y="734.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.03%)</title><rect x="557.3" y="723.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="560.3" y="734.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.08%)</title><rect x="557.7" y="739.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="560.7" y="750.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.03%)</title><rect x="558.7" y="739.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="561.7" y="750.0"></text>
</g>
<g>
<title>__libc_send (1,221 samples, 14.09%)</title><rect x="559.1" y="739.0" width="166.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="562.1" y="750.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,199 samples, 13.84%)</title><rect x="562.1" y="723.0" width="163.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="565.1" y="734.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>do_syscall_64 (1,198 samples, 13.83%)</title><rect x="562.2" y="707.0" width="163.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="565.2" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,149 samples, 13.26%)</title><rect x="567.2" y="691.0" width="156.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="570.2" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,143 samples, 13.19%)</title><rect x="567.2" y="675.0" width="155.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="570.2" y="686.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="569.0" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="572.0" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="569.6" y="659.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="572.6" y="670.0"></text>
</g>
<g>
<title>inet_sendmsg (3 samples, 0.03%)</title><rect x="570.0" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="573.0" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (1,113 samples, 12.85%)</title><rect x="570.4" y="659.0" width="151.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="573.4" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.02%)</title><rect x="570.9" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="573.9" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (1,095 samples, 12.64%)</title><rect x="571.2" y="643.0" width="149.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="574.2" y="654.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="571.9" y="627.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="574.9" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,088 samples, 12.56%)</title><rect x="572.1" y="627.0" width="148.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.1" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.02%)</title><rect x="573.0" y="611.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="576.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.02%)</title><rect x="573.4" y="611.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="576.4" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="573.6" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.6" y="622.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.08%)</title><rect x="573.9" y="611.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="576.9" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="573.9" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.9" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="574.2" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="577.2" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.02%)</title><rect x="574.9" y="611.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="577.9" y="622.0"></text>
</g>
<g>
<title>skb_put (3 samples, 0.03%)</title><rect x="575.3" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.3" y="622.0"></text>
</g>
<g>
<title>sock_zerocopy_put (3 samples, 0.03%)</title><rect x="575.7" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="578.7" y="622.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.02%)</title><rect x="576.1" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.1" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.02%)</title><rect x="576.4" y="611.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="579.4" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,049 samples, 12.11%)</title><rect x="576.8" y="611.0" width="142.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="579.8" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (12 samples, 0.14%)</title><rect x="579.4" y="595.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="582.4" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (12 samples, 0.14%)</title><rect x="579.4" y="579.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="582.4" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (15 samples, 0.17%)</title><rect x="581.1" y="595.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="584.1" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.15%)</title><rect x="581.1" y="579.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="584.1" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="582.9" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.9" y="590.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.02%)</title><rect x="583.2" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="586.2" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (37 samples, 0.43%)</title><rect x="583.5" y="595.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="586.5" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (28 samples, 0.32%)</title><rect x="583.7" y="579.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="586.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (14 samples, 0.16%)</title><rect x="584.3" y="563.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="587.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.10%)</title><rect x="584.3" y="547.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="587.3" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="584.9" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.9" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.02%)</title><rect x="585.2" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="588.2" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.03%)</title><rect x="585.6" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="588.6" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.09%)</title><rect x="586.3" y="563.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="589.3" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="587.1" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="590.1" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="587.5" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="590.5" y="590.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.06%)</title><rect x="587.8" y="579.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="590.8" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.03%)</title><rect x="588.5" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="591.5" y="606.0"></text>
</g>
<g>
<title>tcp_push (936 samples, 10.80%)</title><rect x="588.9" y="595.0" width="127.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="591.9" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (932 samples, 10.76%)</title><rect x="589.4" y="579.0" width="127.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="592.4" y="590.0">__tcp_push_pendi..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="589.4" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="592.4" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="589.7" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="592.7" y="574.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.03%)</title><rect x="590.1" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="593.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (923 samples, 10.65%)</title><rect x="590.7" y="563.0" width="125.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="593.7" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (868 samples, 10.02%)</title><rect x="593.8" y="547.0" width="118.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="596.8" y="558.0">__tcp_transmit..</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="597.5" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.5" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.02%)</title><rect x="597.8" y="531.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.8" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (823 samples, 9.50%)</title><rect x="598.0" y="531.0" width="112.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.0" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (820 samples, 9.47%)</title><rect x="598.0" y="515.0" width="111.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="601.0" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.03%)</title><rect x="598.8" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="601.8" y="510.0"></text>
</g>
<g>
<title>ip_local_out (801 samples, 9.25%)</title><rect x="599.3" y="499.0" width="109.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="602.3" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (141 samples, 1.63%)</title><rect x="599.7" y="483.0" width="19.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="602.7" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.05%)</title><rect x="599.8" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.8" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (8 samples, 0.09%)</title><rect x="600.3" y="467.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="603.3" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.02%)</title><rect x="601.4" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="604.4" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (124 samples, 1.43%)</title><rect x="601.7" y="467.0" width="16.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="604.7" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (16 samples, 0.18%)</title><rect x="602.7" y="451.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="605.7" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (15 samples, 0.17%)</title><rect x="602.8" y="435.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="605.8" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (81 samples, 0.94%)</title><rect x="604.8" y="451.0" width="11.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="607.8" y="462.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (4 samples, 0.05%)</title><rect x="605.2" y="435.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="608.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (69 samples, 0.80%)</title><rect x="605.8" y="435.0" width="9.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="608.8" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (17 samples, 0.20%)</title><rect x="606.7" y="419.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.7" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (4 samples, 0.05%)</title><rect x="609.1" y="419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="612.1" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (3 samples, 0.03%)</title><rect x="609.6" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.6" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (4 samples, 0.05%)</title><rect x="610.0" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="613.0" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.05%)</title><rect x="610.7" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="613.7" y="430.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (28 samples, 0.32%)</title><rect x="611.4" y="419.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.4" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (3 samples, 0.03%)</title><rect x="613.0" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="616.0" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="613.4" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="616.4" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (10 samples, 0.12%)</title><rect x="613.8" y="403.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="616.8" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.02%)</title><rect x="614.9" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="617.9" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.05%)</title><rect x="615.3" y="435.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="618.3" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.06%)</title><rect x="615.9" y="451.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="618.9" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (15 samples, 0.17%)</title><rect x="616.5" y="451.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="619.5" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (6 samples, 0.07%)</title><rect x="616.8" y="435.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="619.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (7 samples, 0.08%)</title><rect x="617.6" y="435.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.02%)</title><rect x="617.8" y="419.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="620.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (4 samples, 0.05%)</title><rect x="618.0" y="419.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="621.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="618.6" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="621.6" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.03%)</title><rect x="618.9" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="621.9" y="494.0"></text>
</g>
<g>
<title>ip_output (650 samples, 7.50%)</title><rect x="619.3" y="483.0" width="88.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="622.3" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (640 samples, 7.39%)</title><rect x="619.5" y="467.0" width="87.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.5" y="478.0">ip_finish_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.06%)</title><rect x="620.8" y="451.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="623.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (625 samples, 7.21%)</title><rect x="621.5" y="451.0" width="85.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.5" y="462.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (570 samples, 6.58%)</title><rect x="622.4" y="435.0" width="77.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="625.4" y="446.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.21 (569 samples, 6.57%)</title><rect x="622.5" y="419.0" width="77.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="625.5" y="430.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (557 samples, 6.43%)</title><rect x="624.2" y="403.0" width="75.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="627.2" y="414.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (553 samples, 6.38%)</title><rect x="624.2" y="387.0" width="75.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.2" y="398.0">__softir..</text>
</g>
<g>
<title>net_rx_action (536 samples, 6.19%)</title><rect x="626.2" y="371.0" width="73.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="629.2" y="382.0">net_rx_a..</text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.02%)</title><rect x="627.3" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="630.3" y="366.0"></text>
</g>
<g>
<title>process_backlog (526 samples, 6.07%)</title><rect x="627.6" y="355.0" width="71.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="630.6" y="366.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (512 samples, 5.91%)</title><rect x="629.1" y="339.0" width="69.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="632.1" y="350.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (506 samples, 5.84%)</title><rect x="629.8" y="323.0" width="68.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="632.8" y="334.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.10%)</title><rect x="630.9" y="307.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv (486 samples, 5.61%)</title><rect x="632.1" y="307.0" width="66.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="635.1" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.02%)</title><rect x="632.5" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="635.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.06%)</title><rect x="632.8" y="291.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="635.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (456 samples, 5.26%)</title><rect x="633.4" y="291.0" width="62.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="636.4" y="302.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (448 samples, 5.17%)</title><rect x="633.6" y="275.0" width="61.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="636.6" y="286.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (426 samples, 4.92%)</title><rect x="634.8" y="259.0" width="58.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.8" y="270.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (423 samples, 4.88%)</title><rect x="634.9" y="243.0" width="57.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="637.9" y="254.0">ip_pro..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="635.8" y="227.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="638.8" y="238.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.02%)</title><rect x="636.0" y="227.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.0" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="636.4" y="227.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (409 samples, 4.72%)</title><rect x="636.8" y="227.0" width="55.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="639.8" y="238.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.10%)</title><rect x="639.0" y="211.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="642.0" y="222.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.02%)</title><rect x="640.0" y="195.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="643.0" y="206.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (4 samples, 0.05%)</title><rect x="640.4" y="211.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="643.4" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="641.2" y="211.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.2" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.08%)</title><rect x="641.5" y="211.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.5" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.03%)</title><rect x="641.6" y="195.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="644.6" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.03%)</title><rect x="642.0" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="645.0" y="206.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (3 samples, 0.03%)</title><rect x="642.4" y="211.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="645.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (363 samples, 4.19%)</title><rect x="642.8" y="211.0" width="49.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.8" y="222.0">tcp_v..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.02%)</title><rect x="643.4" y="195.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="646.4" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (351 samples, 4.05%)</title><rect x="643.9" y="195.0" width="47.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="646.9" y="206.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.09%)</title><rect x="645.0" y="179.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="648.0" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="645.2" y="163.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="648.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.06%)</title><rect x="645.4" y="163.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="648.4" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="645.6" y="147.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="648.6" y="158.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="645.6" y="131.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="648.6" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="645.7" y="115.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="648.7" y="126.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.03%)</title><rect x="646.1" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="649.1" y="190.0"></text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.03%)</title><rect x="646.7" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="649.7" y="190.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.02%)</title><rect x="647.1" y="179.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="650.1" y="190.0"></text>
</g>
<g>
<title>tcp_ack (74 samples, 0.85%)</title><rect x="647.3" y="179.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="650.3" y="190.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.02%)</title><rect x="649.4" y="163.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.4" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (3 samples, 0.03%)</title><rect x="649.8" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="652.8" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (46 samples, 0.53%)</title><rect x="650.3" y="163.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="653.3" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.20%)</title><rect x="653.1" y="147.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="656.1" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (8 samples, 0.09%)</title><rect x="653.1" y="131.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="656.1" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.06%)</title><rect x="653.5" y="115.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.09%)</title><rect x="654.1" y="131.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.1" y="142.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.07%)</title><rect x="654.3" y="115.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.3" y="126.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.06%)</title><rect x="654.4" y="99.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.4" y="110.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.06%)</title><rect x="654.4" y="83.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (6 samples, 0.07%)</title><rect x="655.6" y="147.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="658.6" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (4 samples, 0.05%)</title><rect x="656.9" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.9" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (231 samples, 2.67%)</title><rect x="657.5" y="179.0" width="31.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="660.5" y="190.0">tc..</text>
</g>
<g>
<title>sock_def_readable (216 samples, 2.49%)</title><rect x="658.6" y="163.0" width="29.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="661.6" y="174.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (214 samples, 2.47%)</title><rect x="658.9" y="147.0" width="29.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.9" y="158.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (212 samples, 2.45%)</title><rect x="659.0" y="131.0" width="28.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="662.0" y="142.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (209 samples, 2.41%)</title><rect x="659.5" y="115.0" width="28.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="662.5" y="126.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.06%)</title><rect x="688.1" y="163.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="691.1" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.02%)</title><rect x="688.7" y="163.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="691.7" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.02%)</title><rect x="689.0" y="179.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="692.0" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.07%)</title><rect x="689.3" y="179.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="692.3" y="190.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="689.3" y="163.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="692.3" y="174.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.03%)</title><rect x="689.4" y="147.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.4" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="689.8" y="163.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="692.8" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.03%)</title><rect x="690.2" y="179.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="693.2" y="190.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.02%)</title><rect x="690.6" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="693.6" y="190.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="690.9" y="179.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="693.9" y="190.0"></text>
</g>
<g>
<title>tcp_urg (4 samples, 0.05%)</title><rect x="691.7" y="195.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="694.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.02%)</title><rect x="692.3" y="211.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="695.3" y="222.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.02%)</title><rect x="693.0" y="259.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="696.0" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.12%)</title><rect x="693.2" y="259.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="696.2" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.07%)</title><rect x="693.4" y="243.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="696.4" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.06%)</title><rect x="693.5" y="227.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="696.5" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="694.2" y="243.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="694.6" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (4 samples, 0.05%)</title><rect x="694.9" y="275.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="697.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.02%)</title><rect x="695.6" y="291.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="698.6" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.02%)</title><rect x="696.0" y="291.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="699.0" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.15%)</title><rect x="696.2" y="291.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="699.2" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (4 samples, 0.05%)</title><rect x="696.9" y="275.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="699.9" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.05%)</title><rect x="696.9" y="259.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="699.9" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.02%)</title><rect x="697.5" y="275.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="700.5" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="697.7" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="700.7" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="698.0" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="701.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.02%)</title><rect x="698.3" y="307.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="701.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.03%)</title><rect x="698.8" y="339.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="701.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.02%)</title><rect x="699.2" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.2" y="382.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.05%)</title><rect x="699.5" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="702.5" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (47 samples, 0.54%)</title><rect x="700.0" y="435.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.0" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (44 samples, 0.51%)</title><rect x="700.2" y="419.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="703.2" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 0.25%)</title><rect x="701.5" y="403.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.5" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.16%)</title><rect x="702.0" y="387.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="705.0" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.03%)</title><rect x="702.0" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="705.0" y="382.0"></text>
</g>
<g>
<title>netif_rx (10 samples, 0.12%)</title><rect x="702.4" y="371.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.4" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="702.5" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.5" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.08%)</title><rect x="702.8" y="355.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="705.8" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.06%)</title><rect x="703.0" y="339.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="706.0" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.05%)</title><rect x="703.9" y="387.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="706.9" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.09%)</title><rect x="704.8" y="403.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.8" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.02%)</title><rect x="705.1" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.1" y="398.0"></text>
</g>
<g>
<title>skb_network_protocol (3 samples, 0.03%)</title><rect x="705.4" y="387.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="708.4" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.02%)</title><rect x="705.9" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.9" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="706.2" y="419.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="709.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.08%)</title><rect x="706.7" y="467.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.7" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.02%)</title><rect x="707.0" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.0" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.02%)</title><rect x="707.0" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="710.0" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (3 samples, 0.03%)</title><rect x="707.3" y="451.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="710.3" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.03%)</title><rect x="707.9" y="483.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.9" y="494.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.02%)</title><rect x="708.4" y="499.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="711.4" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (8 samples, 0.09%)</title><rect x="708.6" y="499.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="711.6" y="510.0"></text>
</g>
<g>
<title>skb_clone (10 samples, 0.12%)</title><rect x="710.1" y="531.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.1" y="542.0"></text>
</g>
<g>
<title>__skb_clone (9 samples, 0.10%)</title><rect x="710.3" y="515.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="713.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.06%)</title><rect x="710.8" y="499.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.8" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.02%)</title><rect x="711.8" y="531.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="714.8" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.03%)</title><rect x="712.0" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="715.0" y="558.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.06%)</title><rect x="712.4" y="547.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="715.4" y="558.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="712.9" y="531.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.9" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="713.1" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="716.1" y="558.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.03%)</title><rect x="713.5" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="716.5" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.10%)</title><rect x="714.1" y="547.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="717.1" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="714.8" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="717.8" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="714.9" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="717.9" y="526.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.03%)</title><rect x="714.9" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="717.9" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="715.6" y="547.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="718.6" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="715.8" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="718.8" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.03%)</title><rect x="716.4" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="719.4" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (18 samples, 0.21%)</title><rect x="716.8" y="595.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="719.8" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="717.2" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="720.2" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.15%)</title><rect x="717.5" y="579.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="720.5" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.03%)</title><rect x="718.6" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.6" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.02%)</title><rect x="719.0" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="722.0" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.02%)</title><rect x="719.4" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.4" y="606.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.03%)</title><rect x="719.7" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="722.7" y="622.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.02%)</title><rect x="720.1" y="611.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="723.1" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.13%)</title><rect x="720.3" y="643.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="723.3" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.02%)</title><rect x="720.5" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="723.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.09%)</title><rect x="720.8" y="627.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="723.8" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.08%)</title><rect x="720.9" y="611.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="723.9" y="622.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.03%)</title><rect x="720.9" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="723.9" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.05%)</title><rect x="721.3" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="724.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.08%)</title><rect x="722.0" y="659.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="725.0" y="670.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.06%)</title><rect x="722.0" y="643.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="725.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="722.0" y="627.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="725.0" y="638.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="722.2" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="725.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="722.7" y="643.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="725.7" y="654.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.05%)</title><rect x="723.1" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (11 samples, 0.13%)</title><rect x="723.7" y="691.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="726.7" y="702.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.07%)</title><rect x="724.4" y="675.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.4" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.07%)</title><rect x="724.4" y="659.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="727.4" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.03%)</title><rect x="724.8" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.8" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="725.4" y="739.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="728.4" y="750.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (16 samples, 0.18%)</title><rect x="725.8" y="755.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.8" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (11 samples, 0.13%)</title><rect x="726.5" y="739.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (11 samples, 0.13%)</title><rect x="726.5" y="723.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.5" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (11 samples, 0.13%)</title><rect x="726.5" y="707.0" width="1.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="729.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.20%)</title><rect x="728.1" y="803.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (4 samples, 0.05%)</title><rect x="729.9" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (2 samples, 0.02%)</title><rect x="730.6" y="803.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (2 samples, 0.02%)</title><rect x="730.6" y="787.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="730.6" y="771.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (33 samples, 0.38%)</title><rect x="730.8" y="803.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (6 samples, 0.07%)</title><rect x="733.3" y="787.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.06%)</title><rect x="733.4" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.06%)</title><rect x="733.4" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="734.1" y="787.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="737.1" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="734.4" y="787.0" width="0.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="737.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (4 samples, 0.05%)</title><rect x="734.8" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (2,593 samples, 29.93%)</title><rect x="735.3" y="803.0" width="353.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.3" y="814.0">ru/mail/polis/service/codearound/TaskDAO.upsertV..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2,509 samples, 28.96%)</title><rect x="735.5" y="787.0" width="341.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.5" y="798.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2,509 samples, 28.96%)</title><rect x="735.5" y="771.0" width="341.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.5" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1,687 samples, 19.47%)</title><rect x="738.7" y="755.0" width="229.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="741.7" y="766.0">Java_org_rocksdb_RocksDB_put__..</text>
</g>
<g>
<title>__libc_free (8 samples, 0.09%)</title><rect x="742.3" y="739.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="745.3" y="750.0"></text>
</g>
<g>
<title>__malloc (15 samples, 0.17%)</title><rect x="743.4" y="739.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="746.4" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.06%)</title><rect x="745.4" y="739.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="748.4" y="750.0"></text>
</g>
<g>
<title>malloc@plt (2 samples, 0.02%)</title><rect x="746.2" y="739.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="749.2" y="750.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (2 samples, 0.02%)</title><rect x="746.6" y="739.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="749.6" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (14 samples, 0.16%)</title><rect x="746.9" y="739.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="749.9" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (9 samples, 0.10%)</title><rect x="748.8" y="739.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="751.8" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (21 samples, 0.24%)</title><rect x="750.0" y="739.0" width="2.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="753.0" y="750.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (10 samples, 0.12%)</title><rect x="752.9" y="739.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="755.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.07%)</title><rect x="754.3" y="739.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="757.3" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1,567 samples, 18.09%)</title><rect x="755.1" y="739.0" width="213.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="758.1" y="750.0">rocksdb_put_helper(JNIEnv_*,..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="757.1" y="723.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="760.1" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="757.7" y="723.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="760.7" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (8 samples, 0.09%)</title><rect x="757.9" y="723.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="760.9" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.03%)</title><rect x="759.0" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="762.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.03%)</title><rect x="759.4" y="723.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="762.4" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (14 samples, 0.16%)</title><rect x="759.8" y="723.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="762.8" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (15 samples, 0.17%)</title><rect x="761.8" y="723.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="764.8" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (6 samples, 0.07%)</title><rect x="762.0" y="707.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="765.0" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="762.8" y="707.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="765.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.03%)</title><rect x="763.4" y="707.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="766.4" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (24 samples, 0.28%)</title><rect x="763.8" y="723.0" width="3.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="766.8" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="764.5" y="707.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="767.5" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.06%)</title><rect x="764.7" y="707.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="767.7" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.07%)</title><rect x="765.4" y="707.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="768.4" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.07%)</title><rect x="766.2" y="707.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="769.2" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.05%)</title><rect x="766.5" y="691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="769.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,463 samples, 16.89%)</title><rect x="767.1" y="723.0" width="199.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="770.1" y="734.0">rocksdb::DB::Put(rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.07%)</title><rect x="768.4" y="707.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="771.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (4 samples, 0.05%)</title><rect x="769.2" y="707.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="772.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,443 samples, 16.66%)</title><rect x="769.8" y="707.0" width="196.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="772.8" y="718.0">rocksdb::DBImpl::Put(rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,419 samples, 16.38%)</title><rect x="769.9" y="691.0" width="193.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="772.9" y="702.0">rocksdb::DB::Put(rocksdb:..</text>
</g>
<g>
<title>__libc_free (12 samples, 0.14%)</title><rect x="771.1" y="675.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="774.1" y="686.0"></text>
</g>
<g>
<title>operator delete(void*) (9 samples, 0.10%)</title><rect x="772.8" y="675.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="775.8" y="686.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (5 samples, 0.06%)</title><rect x="774.0" y="675.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="777.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (6 samples, 0.07%)</title><rect x="774.7" y="675.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="777.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1,246 samples, 14.38%)</title><rect x="775.5" y="675.0" width="169.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="778.5" y="686.0">rocksdb::DBImpl::Write..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (15 samples, 0.17%)</title><rect x="775.8" y="659.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="778.8" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.02%)</title><rect x="777.8" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="780.8" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="778.1" y="659.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="781.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (8 samples, 0.09%)</title><rect x="778.4" y="659.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="781.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) [clone .plt] (3 samples, 0.03%)</title><rect x="779.5" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="782.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (10 samples, 0.12%)</title><rect x="779.9" y="659.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="782.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1,133 samples, 13.08%)</title><rect x="781.4" y="659.0" width="154.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="784.4" y="670.0">rocksdb::DBImpl::Wri..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="793.5" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="796.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (19 samples, 0.22%)</title><rect x="793.9" y="643.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="796.9" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.02%)</title><rect x="796.5" y="643.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="799.5" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (10 samples, 0.12%)</title><rect x="796.8" y="643.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="799.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (12 samples, 0.14%)</title><rect x="798.1" y="643.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="801.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (10 samples, 0.12%)</title><rect x="799.9" y="643.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="802.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (7 samples, 0.08%)</title><rect x="801.3" y="643.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="804.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (3 samples, 0.03%)</title><rect x="801.8" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="804.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (268 samples, 3.09%)</title><rect x="802.2" y="643.0" width="36.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="805.2" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (6 samples, 0.07%)</title><rect x="804.0" y="627.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="807.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (235 samples, 2.71%)</title><rect x="804.8" y="627.0" width="32.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="807.8" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.02%)</title><rect x="806.8" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="809.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (215 samples, 2.48%)</title><rect x="807.1" y="611.0" width="29.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="810.1" y="622.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (23 samples, 0.27%)</title><rect x="810.1" y="595.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="813.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (4 samples, 0.05%)</title><rect x="813.2" y="595.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="816.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (6 samples, 0.07%)</title><rect x="813.8" y="595.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="816.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (5 samples, 0.06%)</title><rect x="814.6" y="595.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="817.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (90 samples, 1.04%)</title><rect x="815.3" y="595.0" width="12.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="818.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="817.1" y="579.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="820.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (3 samples, 0.03%)</title><rect x="817.7" y="579.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="820.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (3 samples, 0.03%)</title><rect x="818.4" y="579.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="821.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (11 samples, 0.13%)</title><rect x="818.8" y="579.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="821.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (2 samples, 0.02%)</title><rect x="820.3" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="823.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (51 samples, 0.59%)</title><rect x="820.6" y="579.0" width="6.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="823.6" y="590.0"></text>
</g>
<g>
<title>__GI_write (3 samples, 0.03%)</title><rect x="822.2" y="563.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="825.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (19 samples, 0.22%)</title><rect x="822.6" y="563.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="825.6" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.02%)</title><rect x="825.2" y="563.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="828.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (10 samples, 0.12%)</title><rect x="825.5" y="563.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="828.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (4 samples, 0.05%)</title><rect x="826.9" y="563.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="829.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 0.06%)</title><rect x="827.5" y="595.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="830.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="828.2" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="831.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (4 samples, 0.05%)</title><rect x="828.5" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="831.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="829.0" y="595.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="832.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (52 samples, 0.60%)</title><rect x="829.3" y="595.0" width="7.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="832.3" y="606.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (5 samples, 0.06%)</title><rect x="829.6" y="579.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="832.6" y="590.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (4 samples, 0.05%)</title><rect x="830.5" y="579.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="833.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (5 samples, 0.06%)</title><rect x="831.1" y="579.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="834.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (4 samples, 0.05%)</title><rect x="831.8" y="579.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="834.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (22 samples, 0.25%)</title><rect x="832.3" y="579.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.02%)</title><rect x="835.0" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="838.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (6 samples, 0.07%)</title><rect x="835.3" y="579.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="838.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.02%)</title><rect x="836.1" y="579.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="839.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.02%)</title><rect x="836.4" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="839.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (5 samples, 0.06%)</title><rect x="836.8" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="839.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) [clone .plt] (3 samples, 0.03%)</title><rect x="837.5" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="840.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.03%)</title><rect x="837.9" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="840.9" y="638.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.03%)</title><rect x="838.3" y="627.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="841.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (7 samples, 0.08%)</title><rect x="838.7" y="643.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="841.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() [clone .plt] (5 samples, 0.06%)</title><rect x="839.7" y="643.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="842.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (34 samples, 0.39%)</title><rect x="840.3" y="643.0" width="4.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="843.3" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (32 samples, 0.37%)</title><rect x="840.6" y="627.0" width="4.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="843.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (5 samples, 0.06%)</title><rect x="845.1" y="643.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="848.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (5 samples, 0.06%)</title><rect x="845.8" y="643.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="848.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.02%)</title><rect x="846.5" y="643.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="849.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (4 samples, 0.05%)</title><rect x="846.7" y="643.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="849.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (2 samples, 0.02%)</title><rect x="847.3" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="850.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() [clone .plt] (3 samples, 0.03%)</title><rect x="847.6" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="850.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.06%)</title><rect x="848.0" y="643.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="851.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (557 samples, 6.43%)</title><rect x="848.8" y="643.0" width="75.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="851.8" y="654.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (543 samples, 6.27%)</title><rect x="850.0" y="627.0" width="74.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="853.0" y="638.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="850.2" y="611.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="853.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.02%)</title><rect x="850.4" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="853.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.03%)</title><rect x="850.8" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="853.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.03%)</title><rect x="851.4" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (2 samples, 0.02%)</title><rect x="851.8" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="854.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (528 samples, 6.09%)</title><rect x="852.1" y="611.0" width="71.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="855.1" y="622.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (497 samples, 5.74%)</title><rect x="854.2" y="595.0" width="67.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="857.2" y="606.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (5 samples, 0.06%)</title><rect x="854.6" y="579.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="857.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (9 samples, 0.10%)</title><rect x="855.3" y="579.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="858.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (5 samples, 0.06%)</title><rect x="856.6" y="579.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="859.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.05%)</title><rect x="857.2" y="579.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="860.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (470 samples, 5.43%)</title><rect x="857.9" y="579.0" width="64.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="860.9" y="590.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (8 samples, 0.09%)</title><rect x="860.8" y="563.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="863.8" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.05%)</title><rect x="862.0" y="563.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="865.0" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) [clone .plt] (3 samples, 0.03%)</title><rect x="862.5" y="563.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="865.5" y="574.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (13 samples, 0.15%)</title><rect x="863.0" y="563.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="866.0" y="574.0"></text>
</g>
<g>
<title>page_fault (4 samples, 0.05%)</title><rect x="864.2" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="867.2" y="558.0"></text>
</g>
<g>
<title>do_page_fault (4 samples, 0.05%)</title><rect x="864.2" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="867.2" y="542.0"></text>
</g>
<g>
<title>__do_page_fault (4 samples, 0.05%)</title><rect x="864.2" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="867.2" y="526.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.02%)</title><rect x="864.5" y="499.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="867.5" y="510.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="864.5" y="483.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="867.5" y="494.0"></text>
</g>
<g>
<title>memcpy@plt (3 samples, 0.03%)</title><rect x="864.7" y="563.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="867.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (11 samples, 0.13%)</title><rect x="865.1" y="563.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="868.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (2 samples, 0.02%)</title><rect x="866.6" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="869.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.03%)</title><rect x="866.9" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (387 samples, 4.47%)</title><rect x="867.3" y="563.0" width="52.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="870.3" y="574.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (28 samples, 0.32%)</title><rect x="870.4" y="547.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="873.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="871.5" y="531.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="874.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (4 samples, 0.05%)</title><rect x="872.2" y="531.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="875.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (10 samples, 0.12%)</title><rect x="872.8" y="531.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="875.8" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (312 samples, 3.60%)</title><rect x="874.3" y="547.0" width="42.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="877.3" y="558.0">bool..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (290 samples, 3.35%)</title><rect x="876.0" y="531.0" width="39.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="879.0" y="542.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (115 samples, 1.33%)</title><rect x="895.8" y="515.0" width="15.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="898.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (3 samples, 0.03%)</title><rect x="895.9" y="499.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="898.9" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="896.3" y="499.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="899.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (14 samples, 0.16%)</title><rect x="896.7" y="499.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="899.7" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.03%)</title><rect x="898.6" y="499.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="901.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (91 samples, 1.05%)</title><rect x="899.1" y="499.0" width="12.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="902.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (15 samples, 0.17%)</title><rect x="904.2" y="483.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="907.2" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (6 samples, 0.07%)</title><rect x="906.3" y="483.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="909.3" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (24 samples, 0.28%)</title><rect x="907.1" y="483.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="910.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.08%)</title><rect x="910.4" y="483.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="913.4" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="911.4" y="515.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="914.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (25 samples, 0.29%)</title><rect x="911.7" y="515.0" width="3.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="914.7" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (13 samples, 0.15%)</title><rect x="912.7" y="499.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="915.7" y="510.0"></text>
</g>
<g>
<title>memcmp@plt (4 samples, 0.05%)</title><rect x="914.6" y="499.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="917.6" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.03%)</title><rect x="915.1" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="918.1" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.03%)</title><rect x="915.1" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.1" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.03%)</title><rect x="915.1" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="918.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (5 samples, 0.06%)</title><rect x="915.8" y="531.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="918.8" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="916.2" y="515.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="919.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.02%)</title><rect x="916.5" y="531.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="919.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (6 samples, 0.07%)</title><rect x="916.8" y="547.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="919.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.02%)</title><rect x="917.6" y="547.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="920.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.03%)</title><rect x="917.8" y="547.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="920.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (12 samples, 0.14%)</title><rect x="918.3" y="547.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="921.3" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (5 samples, 0.06%)</title><rect x="918.4" y="531.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="921.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (6 samples, 0.07%)</title><rect x="919.1" y="531.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="922.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.03%)</title><rect x="920.0" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="923.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() [clone .plt] (5 samples, 0.06%)</title><rect x="920.7" y="563.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="923.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (4 samples, 0.05%)</title><rect x="921.4" y="563.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="924.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 0.10%)</title><rect x="921.9" y="595.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="924.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) [clone .plt] (2 samples, 0.02%)</title><rect x="923.2" y="595.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="926.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (4 samples, 0.05%)</title><rect x="923.4" y="595.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="926.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.02%)</title><rect x="924.0" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="927.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (3 samples, 0.03%)</title><rect x="924.3" y="627.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="927.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.05%)</title><rect x="924.7" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="927.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.03%)</title><rect x="924.8" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="927.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.03%)</title><rect x="924.8" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="927.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.03%)</title><rect x="924.8" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.03%)</title><rect x="924.8" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="927.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.02%)</title><rect x="924.8" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.02%)</title><rect x="924.8" y="547.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="927.8" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.02%)</title><rect x="924.8" y="531.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="927.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (2 samples, 0.02%)</title><rect x="924.8" y="515.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="927.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (6 samples, 0.07%)</title><rect x="925.2" y="643.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="928.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="926.0" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="929.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (8 samples, 0.09%)</title><rect x="926.3" y="643.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="929.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const [clone .plt] (2 samples, 0.02%)</title><rect x="927.4" y="643.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="930.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (18 samples, 0.21%)</title><rect x="927.7" y="643.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="930.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.02%)</title><rect x="930.1" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="933.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.02%)</title><rect x="930.1" y="627.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="933.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (4 samples, 0.05%)</title><rect x="930.4" y="643.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="933.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (2 samples, 0.02%)</title><rect x="930.9" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="933.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (4 samples, 0.05%)</title><rect x="931.2" y="643.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="934.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (5 samples, 0.06%)</title><rect x="931.7" y="643.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="934.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (2 samples, 0.02%)</title><rect x="932.7" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="935.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (10 samples, 0.12%)</title><rect x="933.1" y="643.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="936.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (4 samples, 0.05%)</title><rect x="934.5" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="937.5" y="654.0"></text>
</g>
<g>
<title>sched_yield (4 samples, 0.05%)</title><rect x="935.0" y="643.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="938.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="935.1" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="938.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="935.1" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="938.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.03%)</title><rect x="935.1" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.1" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.03%)</title><rect x="935.1" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.1" y="590.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.03%)</title><rect x="935.1" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="938.1" y="574.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.03%)</title><rect x="935.1" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="938.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (6 samples, 0.07%)</title><rect x="935.7" y="659.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="938.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.02%)</title><rect x="936.6" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="939.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (7 samples, 0.08%)</title><rect x="936.9" y="659.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="939.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (7 samples, 0.08%)</title><rect x="937.9" y="659.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="940.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (4 samples, 0.05%)</title><rect x="938.8" y="659.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="941.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="939.4" y="659.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="942.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (10 samples, 0.12%)</title><rect x="939.6" y="659.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="942.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (4 samples, 0.05%)</title><rect x="941.0" y="659.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="944.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.03%)</title><rect x="941.6" y="659.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="944.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.03%)</title><rect x="942.0" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="945.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (6 samples, 0.07%)</title><rect x="942.4" y="659.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="945.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (5 samples, 0.06%)</title><rect x="943.3" y="659.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="946.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (7 samples, 0.08%)</title><rect x="944.0" y="659.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="947.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (5 samples, 0.06%)</title><rect x="945.2" y="675.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="948.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) [clone .plt] (2 samples, 0.02%)</title><rect x="945.9" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="948.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (12 samples, 0.14%)</title><rect x="946.2" y="675.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="949.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) [clone .plt] (6 samples, 0.07%)</title><rect x="947.8" y="675.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="950.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (71 samples, 0.82%)</title><rect x="948.6" y="675.0" width="9.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="951.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (5 samples, 0.06%)</title><rect x="949.5" y="659.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="952.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.05%)</title><rect x="950.1" y="659.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="953.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (4 samples, 0.05%)</title><rect x="950.7" y="659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="953.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (3 samples, 0.03%)</title><rect x="951.2" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="954.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const [clone .plt] (2 samples, 0.02%)</title><rect x="951.6" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="954.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (6 samples, 0.07%)</title><rect x="951.9" y="659.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="954.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (7 samples, 0.08%)</title><rect x="952.7" y="659.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="955.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 0.18%)</title><rect x="953.7" y="659.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="956.7" y="670.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (5 samples, 0.06%)</title><rect x="955.2" y="643.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="958.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (8 samples, 0.09%)</title><rect x="955.9" y="659.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="958.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (2 samples, 0.02%)</title><rect x="956.9" y="659.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="959.9" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (7 samples, 0.08%)</title><rect x="957.2" y="659.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="960.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (4 samples, 0.05%)</title><rect x="958.3" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="961.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="959.0" y="675.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="962.0" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (5 samples, 0.06%)</title><rect x="959.3" y="675.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="962.3" y="686.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (6 samples, 0.07%)</title><rect x="959.9" y="675.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="962.9" y="686.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (11 samples, 0.13%)</title><rect x="960.8" y="675.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="963.8" y="686.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (5 samples, 0.06%)</title><rect x="962.3" y="675.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="965.3" y="686.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) [clone .plt] (2 samples, 0.02%)</title><rect x="962.9" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="965.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.02%)</title><rect x="963.2" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="966.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.08%)</title><rect x="963.5" y="691.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="966.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (5 samples, 0.06%)</title><rect x="964.6" y="691.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="967.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (3 samples, 0.03%)</title><rect x="965.3" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="968.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (4 samples, 0.05%)</title><rect x="965.7" y="691.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="968.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (9 samples, 0.10%)</title><rect x="966.3" y="723.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="969.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.06%)</title><rect x="967.6" y="723.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="970.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.02%)</title><rect x="968.2" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="971.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (728 samples, 8.40%)</title><rect x="968.5" y="755.0" width="99.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="971.5" y="766.0">[unknown]</text>
</g>
<g>
<title>__GI_write (701 samples, 8.09%)</title><rect x="968.5" y="739.0" width="95.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="971.5" y="750.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (673 samples, 7.77%)</title><rect x="972.3" y="723.0" width="91.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="975.3" y="734.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_write (5 samples, 0.06%)</title><rect x="972.3" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="975.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (668 samples, 7.71%)</title><rect x="973.0" y="707.0" width="91.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="976.0" y="718.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_write (598 samples, 6.90%)</title><rect x="982.5" y="691.0" width="81.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="985.5" y="702.0">__x64_sys..</text>
</g>
<g>
<title>__f_unlock_pos (2 samples, 0.02%)</title><rect x="982.7" y="675.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="985.7" y="686.0"></text>
</g>
<g>
<title>ksys_write (593 samples, 6.85%)</title><rect x="983.2" y="675.0" width="80.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="986.2" y="686.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (25 samples, 0.29%)</title><rect x="984.2" y="659.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="987.2" y="670.0"></text>
</g>
<g>
<title>__fget_light (22 samples, 0.25%)</title><rect x="984.2" y="643.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="987.2" y="654.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.21%)</title><rect x="984.7" y="627.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.7" y="638.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.02%)</title><rect x="987.3" y="643.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="990.3" y="654.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="987.7" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="990.7" y="670.0"></text>
</g>
<g>
<title>__sb_end_write (6 samples, 0.07%)</title><rect x="988.0" y="659.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="991.0" y="670.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="989.0" y="659.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="992.0" y="670.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="989.2" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.2" y="670.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.02%)</title><rect x="989.6" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="992.6" y="670.0"></text>
</g>
<g>
<title>vfs_write (544 samples, 6.28%)</title><rect x="989.9" y="659.0" width="74.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="992.9" y="670.0">vfs_write</text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="990.6" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="993.6" y="654.0"></text>
</g>
<g>
<title>__sb_start_write (18 samples, 0.21%)</title><rect x="991.0" y="643.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="994.0" y="654.0"></text>
</g>
<g>
<title>__vfs_write (476 samples, 5.49%)</title><rect x="993.4" y="643.0" width="64.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="996.4" y="654.0">__vfs_w..</text>
</g>
<g>
<title>ext4_file_write_iter (4 samples, 0.05%)</title><rect x="993.6" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.6" y="638.0"></text>
</g>
<g>
<title>new_sync_write (471 samples, 5.44%)</title><rect x="994.1" y="627.0" width="64.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="997.1" y="638.0">new_syn..</text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 0.05%)</title><rect x="994.5" y="611.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="997.5" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (462 samples, 5.33%)</title><rect x="995.2" y="611.0" width="62.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="998.2" y="622.0">ext4_f..</text>
</g>
<g>
<title>__generic_file_write_iter (440 samples, 5.08%)</title><rect x="996.9" y="595.0" width="59.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="999.9" y="606.0">__gene..</text>
</g>
<g>
<title>current_time (2 samples, 0.02%)</title><rect x="999.3" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.3" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.07%)</title><rect x="999.7" y="579.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1002.7" y="590.0"></text>
</g>
<g>
<title>file_remove_privs (3 samples, 0.03%)</title><rect x="1000.5" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1003.5" y="590.0"></text>
</g>
<g>
<title>file_update_time (30 samples, 0.35%)</title><rect x="1000.9" y="579.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1003.9" y="590.0"></text>
</g>
<g>
<title>current_time (9 samples, 0.10%)</title><rect x="1001.5" y="563.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1004.5" y="574.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (8 samples, 0.09%)</title><rect x="1001.5" y="547.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1004.5" y="558.0"></text>
</g>
<g>
<title>generic_update_time (14 samples, 0.16%)</title><rect x="1002.7" y="563.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1005.7" y="574.0"></text>
</g>
<g>
<title>__mark_inode_dirty (14 samples, 0.16%)</title><rect x="1002.7" y="547.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1005.7" y="558.0"></text>
</g>
<g>
<title>ext4_dirty_inode (13 samples, 0.15%)</title><rect x="1002.8" y="531.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1005.8" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.06%)</title><rect x="1002.8" y="515.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1005.8" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (5 samples, 0.06%)</title><rect x="1002.8" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1005.8" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.02%)</title><rect x="1002.8" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1005.8" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (7 samples, 0.08%)</title><rect x="1003.7" y="515.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1006.7" y="526.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.05%)</title><rect x="1003.8" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1006.8" y="510.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.03%)</title><rect x="1003.9" y="483.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1006.9" y="494.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.02%)</title><rect x="1004.3" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1007.3" y="510.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.02%)</title><rect x="1004.3" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1007.3" y="494.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.02%)</title><rect x="1004.3" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.3" y="478.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.02%)</title><rect x="1004.3" y="451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1007.3" y="462.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.03%)</title><rect x="1004.6" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1007.6" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (374 samples, 4.32%)</title><rect x="1005.0" y="579.0" width="51.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1008.0" y="590.0">gener..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="1005.6" y="563.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.6" y="574.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (4 samples, 0.05%)</title><rect x="1005.8" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1008.8" y="574.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.03%)</title><rect x="1006.4" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1009.4" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_begin (118 samples, 1.36%)</title><rect x="1006.9" y="563.0" width="16.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1009.9" y="574.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (33 samples, 0.38%)</title><rect x="1008.0" y="547.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1011.0" y="558.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.02%)</title><rect x="1008.0" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1011.0" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (30 samples, 0.35%)</title><rect x="1008.3" y="531.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1011.3" y="542.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.02%)</title><rect x="1008.4" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1011.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (13 samples, 0.15%)</title><rect x="1008.7" y="515.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1011.7" y="526.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.02%)</title><rect x="1010.5" y="515.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1013.5" y="526.0"></text>
</g>
<g>
<title>start_this_handle (12 samples, 0.14%)</title><rect x="1010.7" y="515.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1013.7" y="526.0"></text>
</g>
<g>
<title>_raw_read_lock (2 samples, 0.02%)</title><rect x="1011.7" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1014.7" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (3 samples, 0.03%)</title><rect x="1012.0" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1015.0" y="510.0"></text>
</g>
<g>
<title>ext4_block_write_begin (10 samples, 0.12%)</title><rect x="1012.7" y="547.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1015.7" y="558.0"></text>
</g>
<g>
<title>ext4_nonda_switch (8 samples, 0.09%)</title><rect x="1014.0" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1017.0" y="558.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (53 samples, 0.61%)</title><rect x="1015.1" y="547.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1018.1" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (46 samples, 0.53%)</title><rect x="1015.4" y="531.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1018.4" y="542.0"></text>
</g>
<g>
<title>__page_cache_alloc (3 samples, 0.03%)</title><rect x="1015.5" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1018.5" y="526.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.02%)</title><rect x="1015.6" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.6" y="510.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="1015.6" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1018.6" y="494.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="1015.9" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1018.9" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="1015.9" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.9" y="510.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (4 samples, 0.05%)</title><rect x="1016.2" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1019.2" y="526.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (3 samples, 0.03%)</title><rect x="1016.3" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1019.3" y="510.0"></text>
</g>
<g>
<title>find_get_entry (31 samples, 0.36%)</title><rect x="1016.7" y="515.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.7" y="526.0"></text>
</g>
<g>
<title>xas_load (19 samples, 0.22%)</title><rect x="1018.0" y="499.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1021.0" y="510.0"></text>
</g>
<g>
<title>xas_start (7 samples, 0.08%)</title><rect x="1019.6" y="483.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1022.6" y="494.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="1020.6" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1023.6" y="510.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.06%)</title><rect x="1021.0" y="515.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1024.0" y="526.0"></text>
</g>
<g>
<title>wait_for_stable_page (5 samples, 0.06%)</title><rect x="1021.6" y="531.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.6" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.02%)</title><rect x="1022.3" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1025.3" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="1022.7" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1025.7" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (214 samples, 2.47%)</title><rect x="1023.0" y="563.0" width="29.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.0" y="574.0">ex..</text>
</g>
<g>
<title>__ext4_journal_stop (26 samples, 0.30%)</title><rect x="1023.8" y="547.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1026.8" y="558.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.02%)</title><rect x="1023.8" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1026.8" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (23 samples, 0.27%)</title><rect x="1024.1" y="531.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.1" y="542.0"></text>
</g>
<g>
<title>__wake_up (15 samples, 0.17%)</title><rect x="1024.6" y="515.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1027.6" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.15%)</title><rect x="1024.6" y="499.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1027.6" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="1024.6" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1027.6" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.13%)</title><rect x="1024.9" y="483.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1027.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="1026.4" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1029.4" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.03%)</title><rect x="1026.8" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1029.8" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (3 samples, 0.03%)</title><rect x="1027.4" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1030.4" y="558.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.02%)</title><rect x="1027.8" y="547.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1030.8" y="558.0"></text>
</g>
<g>
<title>generic_write_end (177 samples, 2.04%)</title><rect x="1028.0" y="547.0" width="24.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1031.0" y="558.0">g..</text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.02%)</title><rect x="1028.0" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.0" y="542.0"></text>
</g>
<g>
<title>__generic_write_end (164 samples, 1.89%)</title><rect x="1028.3" y="531.0" width="22.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1031.3" y="542.0">_..</text>
</g>
<g>
<title>__mark_inode_dirty (155 samples, 1.79%)</title><rect x="1028.7" y="515.0" width="21.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1031.7" y="526.0">_..</text>
</g>
<g>
<title>ext4_dirty_inode (146 samples, 1.69%)</title><rect x="1029.7" y="499.0" width="19.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1032.7" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (6 samples, 0.07%)</title><rect x="1029.7" y="483.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.7" y="494.0"></text>
</g>
<g>
<title>ext4_journal_check_start (4 samples, 0.05%)</title><rect x="1029.7" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1032.7" y="478.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="1030.0" y="451.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1033.0" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="1030.0" y="435.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1033.0" y="446.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.02%)</title><rect x="1030.2" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1033.2" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_stop (13 samples, 0.15%)</title><rect x="1030.5" y="483.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1033.5" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (8 samples, 0.09%)</title><rect x="1031.2" y="467.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1034.2" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (124 samples, 1.43%)</title><rect x="1032.5" y="483.0" width="16.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1035.5" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (5 samples, 0.06%)</title><rect x="1032.9" y="467.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1035.9" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.02%)</title><rect x="1033.6" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1036.6" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (78 samples, 0.90%)</title><rect x="1034.0" y="467.0" width="10.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1037.0" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (74 samples, 0.85%)</title><rect x="1034.4" y="451.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1037.4" y="462.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (10 samples, 0.12%)</title><rect x="1037.4" y="435.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1040.4" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (4 samples, 0.05%)</title><rect x="1038.3" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1041.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.03%)</title><rect x="1038.8" y="435.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1041.8" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (28 samples, 0.32%)</title><rect x="1039.4" y="435.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1042.4" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (26 samples, 0.30%)</title><rect x="1039.6" y="419.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.6" y="430.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.05%)</title><rect x="1040.6" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1043.6" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (15 samples, 0.17%)</title><rect x="1041.1" y="403.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1044.1" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (9 samples, 0.10%)</title><rect x="1041.9" y="387.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1044.9" y="398.0"></text>
</g>
<g>
<title>from_kuid (5 samples, 0.06%)</title><rect x="1043.2" y="435.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1046.2" y="446.0"></text>
</g>
<g>
<title>map_id_up (4 samples, 0.05%)</title><rect x="1043.3" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1046.3" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.03%)</title><rect x="1043.8" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1046.8" y="446.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.02%)</title><rect x="1044.3" y="435.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1047.3" y="446.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (35 samples, 0.40%)</title><rect x="1044.7" y="467.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1047.7" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (23 samples, 0.27%)</title><rect x="1045.1" y="451.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1048.1" y="462.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.02%)</title><rect x="1045.5" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1048.5" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (13 samples, 0.15%)</title><rect x="1045.8" y="435.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1048.8" y="446.0"></text>
</g>
<g>
<title>__find_get_block (12 samples, 0.14%)</title><rect x="1045.8" y="419.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1048.8" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.03%)</title><rect x="1047.0" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1050.0" y="414.0"></text>
</g>
<g>
<title>ext4_get_group_desc (4 samples, 0.05%)</title><rect x="1047.7" y="435.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1050.7" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.06%)</title><rect x="1048.2" y="451.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1051.2" y="462.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (3 samples, 0.03%)</title><rect x="1048.2" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1051.2" y="446.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (2 samples, 0.02%)</title><rect x="1048.3" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1051.3" y="430.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (2 samples, 0.02%)</title><rect x="1048.6" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1051.6" y="446.0"></text>
</g>
<g>
<title>ext4_inode_table (2 samples, 0.02%)</title><rect x="1049.0" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1052.0" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.02%)</title><rect x="1049.6" y="499.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1052.6" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.03%)</title><rect x="1049.8" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1052.8" y="526.0"></text>
</g>
<g>
<title>unlock_page (3 samples, 0.03%)</title><rect x="1050.2" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1053.2" y="526.0"></text>
</g>
<g>
<title>block_write_end (9 samples, 0.10%)</title><rect x="1050.7" y="531.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1053.7" y="542.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (6 samples, 0.07%)</title><rect x="1050.7" y="515.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1053.7" y="526.0"></text>
</g>
<g>
<title>mark_buffer_dirty (4 samples, 0.05%)</title><rect x="1050.9" y="499.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1053.9" y="510.0"></text>
</g>
<g>
<title>__set_page_dirty (3 samples, 0.03%)</title><rect x="1051.1" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1054.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="1051.1" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1054.1" y="478.0"></text>
</g>
<g>
<title>mark_buffer_dirty (3 samples, 0.03%)</title><rect x="1051.5" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1054.5" y="526.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.02%)</title><rect x="1051.9" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1054.9" y="542.0"></text>
</g>
<g>
<title>ext4_nonda_switch (4 samples, 0.05%)</title><rect x="1052.2" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1055.2" y="574.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.02%)</title><rect x="1052.7" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.7" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="1053.0" y="563.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1056.0" y="574.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (13 samples, 0.15%)</title><rect x="1053.2" y="563.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1056.2" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.03%)</title><rect x="1053.9" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1056.9" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.06%)</title><rect x="1054.3" y="547.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1057.3" y="558.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (7 samples, 0.08%)</title><rect x="1055.0" y="563.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1058.0" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="1056.1" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1059.1" y="590.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.02%)</title><rect x="1056.4" y="579.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1059.4" y="590.0"></text>
</g>
<g>
<title>ext4_write_checks (6 samples, 0.07%)</title><rect x="1056.8" y="595.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1059.8" y="606.0"></text>
</g>
<g>
<title>generic_write_checks (6 samples, 0.07%)</title><rect x="1056.8" y="579.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1059.8" y="590.0"></text>
</g>
<g>
<title>generic_write_check_limits (5 samples, 0.06%)</title><rect x="1056.9" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1059.9" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.02%)</title><rect x="1057.6" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1060.6" y="606.0"></text>
</g>
<g>
<title>fsnotify (8 samples, 0.09%)</title><rect x="1058.3" y="643.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.3" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (34 samples, 0.39%)</title><rect x="1059.4" y="643.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1062.4" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.05%)</title><rect x="1060.2" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1063.2" y="638.0"></text>
</g>
<g>
<title>security_file_permission (24 samples, 0.28%)</title><rect x="1060.7" y="627.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1063.7" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (19 samples, 0.22%)</title><rect x="1061.1" y="611.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1064.1" y="622.0"></text>
</g>
<g>
<title>common_file_perm (19 samples, 0.22%)</title><rect x="1061.1" y="595.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1064.1" y="606.0"></text>
</g>
<g>
<title>aa_file_perm (5 samples, 0.06%)</title><rect x="1063.1" y="579.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1066.1" y="590.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="1063.7" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1066.7" y="622.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.03%)</title><rect x="1064.0" y="739.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1067.0" y="750.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="1064.4" y="739.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1067.4" y="750.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="1064.7" y="739.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1067.7" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.03%)</title><rect x="1065.1" y="739.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1068.1" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (7 samples, 0.08%)</title><rect x="1065.5" y="739.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1068.5" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="1066.5" y="739.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1069.5" y="750.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (6 samples, 0.07%)</title><rect x="1066.7" y="739.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1069.7" y="750.0"></text>
</g>
<g>
<title>__libc_free (9 samples, 0.10%)</title><rect x="1067.7" y="755.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1070.7" y="766.0"></text>
</g>
<g>
<title>__malloc (19 samples, 0.22%)</title><rect x="1068.9" y="755.0" width="2.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1071.9" y="766.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (12 samples, 0.14%)</title><rect x="1071.5" y="755.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1074.5" y="766.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="1073.1" y="755.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1076.1" y="766.0"></text>
</g>
<g>
<title>memcpy@plt (4 samples, 0.05%)</title><rect x="1073.4" y="755.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1076.4" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (11 samples, 0.13%)</title><rect x="1073.9" y="755.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1076.9" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) [clone .plt] (2 samples, 0.02%)</title><rect x="1075.4" y="755.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1078.4" y="766.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (9 samples, 0.10%)</title><rect x="1075.7" y="755.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1078.7" y="766.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.02%)</title><rect x="1076.9" y="755.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (58 samples, 0.67%)</title><rect x="1077.2" y="787.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1080.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (58 samples, 0.67%)</title><rect x="1077.2" y="771.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.2" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.02%)</title><rect x="1077.5" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (54 samples, 0.62%)</title><rect x="1077.8" y="755.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1080.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (54 samples, 0.62%)</title><rect x="1077.8" y="739.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1080.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (53 samples, 0.61%)</title><rect x="1077.9" y="723.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.9" y="734.0"></text>
</g>
<g>
<title>gettimeofday (11 samples, 0.13%)</title><rect x="1078.0" y="707.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1081.0" y="718.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.02%)</title><rect x="1079.5" y="707.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1082.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.13%)</title><rect x="1079.8" y="707.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1079.8" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1079.8" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.8" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.05%)</title><rect x="1079.8" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.08%)</title><rect x="1080.3" y="691.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.07%)</title><rect x="1080.5" y="675.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.5" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.07%)</title><rect x="1080.5" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.5" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (28 samples, 0.32%)</title><rect x="1081.3" y="707.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1084.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="1082.7" y="691.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1085.7" y="702.0"></text>
</g>
<g>
<title>gettimeofday (13 samples, 0.15%)</title><rect x="1083.3" y="691.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1086.3" y="702.0"></text>
</g>
<g>
<title>[vdso] (13 samples, 0.15%)</title><rect x="1083.3" y="675.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1086.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (25 samples, 0.29%)</title><rect x="1085.1" y="787.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1088.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (19 samples, 0.22%)</title><rect x="1085.7" y="771.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1088.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1086.2" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1086.2" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1086.2" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1086.2" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.2" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (9 samples, 0.10%)</title><rect x="1087.0" y="755.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (2 samples, 0.02%)</title><rect x="1088.3" y="771.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1091.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.02%)</title><rect x="1088.5" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (25 samples, 0.29%)</title><rect x="1088.8" y="851.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (25 samples, 0.29%)</title><rect x="1088.8" y="835.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (21 samples, 0.24%)</title><rect x="1088.9" y="819.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (16 samples, 0.18%)</title><rect x="1089.6" y="803.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.03%)</title><rect x="1091.8" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.03%)</title><rect x="1091.8" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.03%)</title><rect x="1091.8" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.8" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1091.9" y="771.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1094.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1092.2" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.03%)</title><rect x="1092.3" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1092.3" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1092.3" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.09%)</title><rect x="1092.7" y="851.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.09%)</title><rect x="1092.7" y="835.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.07%)</title><rect x="1093.0" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.0" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.06%)</title><rect x="1093.2" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (34 samples, 0.39%)</title><rect x="1093.8" y="883.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1094.8" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1097.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1095.1" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.1" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="1095.3" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1098.3" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.02%)</title><rect x="1095.3" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1098.3" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1095.3" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.3" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1095.3" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.3" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1095.3" y="787.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.3" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.02%)</title><rect x="1095.3" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1098.3" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.02%)</title><rect x="1095.3" y="755.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1098.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.16%)</title><rect x="1095.6" y="867.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.16%)</title><rect x="1095.6" y="851.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (7 samples, 0.08%)</title><rect x="1097.5" y="867.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (38 samples, 0.44%)</title><rect x="1098.5" y="883.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (27 samples, 0.31%)</title><rect x="1098.7" y="867.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (27 samples, 0.31%)</title><rect x="1098.7" y="851.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.7" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.03%)</title><rect x="1101.3" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.02%)</title><rect x="1101.5" y="819.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.5" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.02%)</title><rect x="1101.5" y="803.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="1101.7" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.02%)</title><rect x="1101.7" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1104.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.03%)</title><rect x="1102.0" y="835.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1105.0" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (7 samples, 0.08%)</title><rect x="1102.4" y="867.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1105.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (2 samples, 0.02%)</title><rect x="1103.4" y="867.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.02%)</title><rect x="1103.6" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1106.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (36 samples, 0.42%)</title><rect x="1103.9" y="883.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.03%)</title><rect x="1104.2" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (30 samples, 0.35%)</title><rect x="1104.6" y="867.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (29 samples, 0.33%)</title><rect x="1104.7" y="851.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.7" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="1105.8" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="1105.8" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.8" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="1105.8" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.08%)</title><rect x="1106.1" y="835.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.08%)</title><rect x="1106.1" y="819.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.1" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (7 samples, 0.08%)</title><rect x="1106.1" y="803.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.1" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (8 samples, 0.09%)</title><rect x="1107.0" y="835.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1110.0" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="1108.1" y="835.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1111.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 1.13%)</title><rect x="1108.8" y="883.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1111.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (97 samples, 1.12%)</title><rect x="1109.0" y="867.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.0" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="1112.0" y="851.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1115.0" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1112.2" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1115.2" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1112.2" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1115.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (71 samples, 0.82%)</title><rect x="1112.5" y="851.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1115.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (66 samples, 0.76%)</title><rect x="1112.9" y="835.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.9" y="846.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (14 samples, 0.16%)</title><rect x="1116.7" y="819.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.7" y="830.0"></text>
</g>
<g>
<title>itable stub (13 samples, 0.15%)</title><rect x="1118.6" y="819.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1121.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.07%)</title><rect x="1120.4" y="819.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.4" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="1120.7" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.7" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="1120.7" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1123.7" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="1120.7" y="771.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="1120.7" y="755.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1123.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="1120.7" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1123.7" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.03%)</title><rect x="1120.7" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.7" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.02%)</title><rect x="1120.7" y="707.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1121.2" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (2 samples, 0.02%)</title><rect x="1121.9" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (471 samples, 5.44%)</title><rect x="1122.3" y="899.0" width="64.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.3" y="910.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (465 samples, 5.37%)</title><rect x="1122.7" y="883.0" width="63.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.7" y="894.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (92 samples, 1.06%)</title><rect x="1127.1" y="867.0" width="12.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1130.1" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (12 samples, 0.14%)</title><rect x="1129.4" y="851.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1132.4" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="1131.3" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1134.3" y="862.0"></text>
</g>
<g>
<title>__memmove_ssse3 (18 samples, 0.21%)</title><rect x="1131.6" y="851.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1134.6" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="1134.0" y="851.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1137.0" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (34 samples, 0.39%)</title><rect x="1134.3" y="851.0" width="4.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1137.3" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.06%)</title><rect x="1135.8" y="835.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.8" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="1136.6" y="835.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.05%)</title><rect x="1137.1" y="835.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.1" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (9 samples, 0.10%)</title><rect x="1137.7" y="835.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1140.7" y="846.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.06%)</title><rect x="1138.2" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.2" y="830.0"></text>
</g>
<g>
<title>memmove@plt (4 samples, 0.05%)</title><rect x="1138.9" y="851.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1141.9" y="862.0"></text>
</g>
<g>
<title>__GI___recv (328 samples, 3.79%)</title><rect x="1139.6" y="867.0" width="44.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1142.6" y="878.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (308 samples, 3.56%)</title><rect x="1142.3" y="851.0" width="42.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1145.3" y="862.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.03%)</title><rect x="1142.3" y="835.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (305 samples, 3.52%)</title><rect x="1142.7" y="835.0" width="41.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1145.7" y="846.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.03%)</title><rect x="1149.7" y="819.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1152.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (249 samples, 2.87%)</title><rect x="1150.1" y="819.0" width="33.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1153.1" y="830.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (243 samples, 2.81%)</title><rect x="1150.1" y="803.0" width="33.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.1" y="814.0">__..</text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="1152.3" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.3" y="798.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.03%)</title><rect x="1152.8" y="787.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1155.8" y="798.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="1153.2" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.2" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (188 samples, 2.17%)</title><rect x="1153.5" y="787.0" width="25.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1156.5" y="798.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.02%)</title><rect x="1153.6" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.6" y="782.0"></text>
</g>
<g>
<title>inet_recvmsg (158 samples, 1.82%)</title><rect x="1153.9" y="771.0" width="21.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1156.9" y="782.0">i..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.03%)</title><rect x="1154.3" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1157.3" y="766.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.05%)</title><rect x="1154.7" y="755.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.7" y="766.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="1155.3" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1158.3" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (143 samples, 1.65%)</title><rect x="1155.9" y="755.0" width="19.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1158.9" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.18%)</title><rect x="1159.8" y="739.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1162.8" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.03%)</title><rect x="1159.8" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.8" y="734.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.13%)</title><rect x="1160.2" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.2" y="734.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.10%)</title><rect x="1160.2" y="707.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.2" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="1161.4" y="707.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.4" y="718.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.02%)</title><rect x="1161.4" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1164.4" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.03%)</title><rect x="1162.1" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.1" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="1162.8" y="739.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1165.8" y="750.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.03%)</title><rect x="1163.0" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1166.0" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (56 samples, 0.65%)</title><rect x="1163.4" y="739.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1166.4" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (51 samples, 0.59%)</title><rect x="1163.6" y="723.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1166.6" y="734.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="1164.1" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.1" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (45 samples, 0.52%)</title><rect x="1164.4" y="707.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.4" y="718.0"></text>
</g>
<g>
<title>__check_object_size (19 samples, 0.22%)</title><rect x="1164.4" y="691.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1167.4" y="702.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.03%)</title><rect x="1165.6" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.6" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.08%)</title><rect x="1166.0" y="675.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1169.0" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.03%)</title><rect x="1167.0" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.0" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (19 samples, 0.22%)</title><rect x="1167.4" y="691.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.4" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (17 samples, 0.20%)</title><rect x="1167.7" y="675.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1170.7" y="686.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.02%)</title><rect x="1170.0" y="691.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1173.0" y="702.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="1170.2" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1173.2" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.03%)</title><rect x="1170.7" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.7" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (11 samples, 0.13%)</title><rect x="1171.1" y="739.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.1" y="750.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.02%)</title><rect x="1172.3" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1175.3" y="734.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (2 samples, 0.02%)</title><rect x="1172.3" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1175.3" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (19 samples, 0.22%)</title><rect x="1172.7" y="739.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1175.7" y="750.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.06%)</title><rect x="1173.2" y="723.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1176.2" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (10 samples, 0.12%)</title><rect x="1173.9" y="723.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1176.9" y="734.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.08%)</title><rect x="1174.2" y="707.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1177.2" y="718.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="1174.9" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1177.9" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (22 samples, 0.25%)</title><rect x="1175.4" y="771.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1178.4" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (18 samples, 0.21%)</title><rect x="1176.0" y="755.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1179.0" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.05%)</title><rect x="1176.0" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.0" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (14 samples, 0.16%)</title><rect x="1176.5" y="739.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.5" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.13%)</title><rect x="1176.9" y="723.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1179.9" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.06%)</title><rect x="1178.4" y="771.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1181.4" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (30 samples, 0.35%)</title><rect x="1179.1" y="787.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.1" y="798.0"></text>
</g>
<g>
<title>__fdget (30 samples, 0.35%)</title><rect x="1179.1" y="771.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.1" y="782.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="1179.1" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (27 samples, 0.31%)</title><rect x="1179.5" y="755.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.5" y="766.0"></text>
</g>
<g>
<title>__fget (22 samples, 0.25%)</title><rect x="1180.2" y="739.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.2" y="750.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.02%)</title><rect x="1183.3" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.3" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.03%)</title><rect x="1183.6" y="803.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1186.6" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.08%)</title><rect x="1184.3" y="867.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="1185.2" y="867.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1188.2" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="1185.5" y="867.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1188.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.03%)</title><rect x="1186.0" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.0" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.08%)</title><rect x="1186.5" y="915.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="926.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="1186.9" y="899.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1189.9" y="910.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.03%)</title><rect x="1187.0" y="883.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.0" y="894.0"></text>
</g>
<g>
<title>start_thread (19 samples, 0.22%)</title><rect x="1187.4" y="947.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1190.4" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (19 samples, 0.22%)</title><rect x="1187.4" y="931.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1190.4" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (19 samples, 0.22%)</title><rect x="1187.4" y="915.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (12 samples, 0.14%)</title><rect x="1187.5" y="899.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.10%)</title><rect x="1187.7" y="883.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.7" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.07%)</title><rect x="1187.7" y="867.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.7" y="878.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.07%)</title><rect x="1187.7" y="851.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1188.5" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.5" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1188.5" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.02%)</title><rect x="1188.5" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.02%)</title><rect x="1188.5" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1188.9" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.9" y="894.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.02%)</title><rect x="1188.9" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.9" y="878.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.68] (2 samples, 0.02%)</title><rect x="1188.9" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="1188.9" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.02%)</title><rect x="1188.9" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.05%)</title><rect x="1189.2" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.2" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.05%)</title><rect x="1189.2" y="883.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.2" y="894.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.02%)</title><rect x="1189.2" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>sched_yield (2 samples, 0.02%)</title><rect x="1189.5" y="867.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1189.5" y="851.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1189.5" y="835.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.02%)</title><rect x="1189.5" y="819.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.02%)</title><rect x="1189.5" y="803.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="1189.5" y="787.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="1189.5" y="771.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.02%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.02%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.02%)</title><rect x="1189.7" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="878.0"></text>
</g>
</g>
</svg>
