<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">GET/PUT combo session (#5)</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (39,690 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (20,586 samples, 51.87%)</title><rect x="10.0" y="323.0" width="612.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20,586 samples, 51.87%)</title><rect x="10.0" y="307.0" width="612.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20,586 samples, 51.87%)</title><rect x="10.0" y="291.0" width="612.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (283 samples, 0.71%)</title><rect x="10.0" y="275.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (283 samples, 0.71%)</title><rect x="10.0" y="259.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (282 samples, 0.71%)</title><rect x="10.0" y="243.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (282 samples, 0.71%)</title><rect x="10.0" y="227.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (282 samples, 0.71%)</title><rect x="10.0" y="211.0" width="8.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run (20,303 samples, 51.15%)</title><rect x="18.4" y="275.0" width="603.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.4" y="286.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6 (20,303 samples, 51.15%)</title><rect x="18.4" y="259.0" width="603.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.4" y="270.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,958 samples, 7.45%)</title><rect x="18.4" y="243.0" width="88.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.4" y="254.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,480 samples, 6.25%)</title><rect x="18.4" y="227.0" width="73.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.4" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,132 samples, 5.37%)</title><rect x="18.4" y="211.0" width="63.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.4" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,132 samples, 5.37%)</title><rect x="18.4" y="195.0" width="63.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.4" y="206.0">one/nio..</text>
</g>
<g>
<title>byte[] (2,132 samples, 5.37%)</title><rect x="18.4" y="179.0" width="63.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="21.4" y="190.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (348 samples, 0.88%)</title><rect x="81.8" y="211.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.8" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (348 samples, 0.88%)</title><rect x="81.8" y="195.0" width="10.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="84.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (478 samples, 1.20%)</title><rect x="92.1" y="227.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (478 samples, 1.20%)</title><rect x="92.1" y="211.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (478 samples, 1.20%)</title><rect x="92.1" y="195.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.1" y="206.0"></text>
</g>
<g>
<title>java.lang.String (217 samples, 0.55%)</title><rect x="92.1" y="179.0" width="6.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="95.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (261 samples, 0.66%)</title><rect x="98.6" y="179.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.6" y="190.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.66%)</title><rect x="98.6" y="163.0" width="7.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="101.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/1361385511.exec (6,261 samples, 15.77%)</title><rect x="106.4" y="243.0" width="186.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.4" y="254.0">ru/mail/polis/service/co..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$1 (6,261 samples, 15.77%)</title><rect x="106.4" y="227.0" width="186.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.4" y="238.0">ru/mail/polis/service/co..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (6,261 samples, 15.77%)</title><rect x="106.4" y="211.0" width="186.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.4" y="222.0">ru/mail/polis/service/co..</text>
</g>
<g>
<title>java/lang/String.getBytes (269 samples, 0.68%)</title><rect x="106.6" y="195.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (269 samples, 0.68%)</title><rect x="106.6" y="179.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (269 samples, 0.68%)</title><rect x="106.6" y="163.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (269 samples, 0.68%)</title><rect x="106.6" y="147.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.6" y="158.0"></text>
</g>
<g>
<title>byte[] (269 samples, 0.68%)</title><rect x="106.6" y="131.0" width="8.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="109.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.15%)</title><rect x="114.6" y="195.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1730173572.invoke (59 samples, 0.15%)</title><rect x="114.6" y="179.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.15%)</title><rect x="114.6" y="163.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (48 samples, 0.12%)</title><rect x="114.6" y="147.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.12%)</title><rect x="114.6" y="131.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="117.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.03%)</title><rect x="116.0" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.03%)</title><rect x="116.0" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.0" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.03%)</title><rect x="116.0" y="115.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="119.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (433 samples, 1.09%)</title><rect x="116.3" y="195.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (433 samples, 1.09%)</title><rect x="116.3" y="179.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (433 samples, 1.09%)</title><rect x="116.3" y="163.0" width="12.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="119.3" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (108 samples, 0.27%)</title><rect x="129.2" y="195.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="132.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (3,540 samples, 8.92%)</title><rect x="132.4" y="195.0" width="105.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.4" y="206.0">one/nio/http/..</text>
</g>
<g>
<title>byte[] (15 samples, 0.04%)</title><rect x="132.4" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="135.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (46 samples, 0.12%)</title><rect x="133.0" y="179.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.0" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.05%)</title><rect x="133.0" y="163.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="136.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (27 samples, 0.07%)</title><rect x="133.6" y="163.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.07%)</title><rect x="133.6" y="147.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="136.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,473 samples, 8.75%)</title><rect x="134.4" y="179.0" width="103.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.4" y="190.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,473 samples, 8.75%)</title><rect x="134.4" y="163.0" width="103.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.4" y="174.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (26 samples, 0.07%)</title><rect x="134.4" y="147.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="137.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,943 samples, 7.41%)</title><rect x="135.2" y="147.0" width="87.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.2" y="158.0">one/nio/ht..</text>
</g>
<g>
<title>byte[] (2,909 samples, 7.33%)</title><rect x="135.2" y="131.0" width="86.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="138.2" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (34 samples, 0.09%)</title><rect x="221.7" y="131.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="224.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (294 samples, 0.74%)</title><rect x="222.7" y="147.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.05%)</title><rect x="222.8" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="225.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.05%)</title><rect x="222.8" y="115.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.03%)</title><rect x="223.0" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.0" y="110.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.03%)</title><rect x="223.0" y="83.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="226.0" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.02%)</title><rect x="223.4" y="131.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="226.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (234 samples, 0.59%)</title><rect x="223.6" y="131.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (234 samples, 0.59%)</title><rect x="223.6" y="115.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.6" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (234 samples, 0.59%)</title><rect x="223.6" y="99.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.6" y="110.0"></text>
</g>
<g>
<title>char[] (158 samples, 0.40%)</title><rect x="223.6" y="83.0" width="4.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="226.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.11%)</title><rect x="228.3" y="83.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="231.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.08%)</title><rect x="229.7" y="83.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.08%)</title><rect x="229.7" y="67.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.7" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (31 samples, 0.08%)</title><rect x="229.7" y="51.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.7" y="62.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.08%)</title><rect x="229.7" y="35.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="232.7" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (23 samples, 0.06%)</title><rect x="230.7" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.06%)</title><rect x="230.7" y="115.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.06%)</title><rect x="230.7" y="99.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.03%)</title><rect x="230.7" y="83.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="233.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.03%)</title><rect x="231.0" y="83.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.0" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.03%)</title><rect x="231.0" y="67.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="234.0" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (184 samples, 0.46%)</title><rect x="231.4" y="147.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.4" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (184 samples, 0.46%)</title><rect x="231.4" y="131.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.4" y="142.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.46%)</title><rect x="231.4" y="115.0" width="5.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="234.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (14 samples, 0.04%)</title><rect x="236.9" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.04%)</title><rect x="236.9" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.04%)</title><rect x="236.9" y="115.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.03%)</title><rect x="237.0" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.0" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="237.0" y="83.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="240.0" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (12 samples, 0.03%)</title><rect x="237.3" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.3" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (12 samples, 0.03%)</title><rect x="237.3" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.3" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (12 samples, 0.03%)</title><rect x="237.3" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.3" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (12 samples, 0.03%)</title><rect x="237.3" y="99.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="240.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (451 samples, 1.14%)</title><rect x="237.6" y="195.0" width="13.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.6" y="206.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.45%)</title><rect x="237.6" y="179.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="240.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (138 samples, 0.35%)</title><rect x="242.9" y="179.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="245.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (135 samples, 0.34%)</title><rect x="247.0" y="179.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="250.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (1,389 samples, 3.50%)</title><rect x="251.2" y="195.0" width="41.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.2" y="206.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (109 samples, 0.27%)</title><rect x="251.2" y="179.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (109 samples, 0.27%)</title><rect x="251.2" y="163.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.2" y="174.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.27%)</title><rect x="251.2" y="147.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="254.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (1,280 samples, 3.22%)</title><rect x="254.4" y="179.0" width="38.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.4" y="190.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,280 samples, 3.22%)</title><rect x="254.4" y="163.0" width="38.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.4" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,280 samples, 3.22%)</title><rect x="254.4" y="147.0" width="38.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.4" y="158.0">jav..</text>
</g>
<g>
<title>byte[] (1,280 samples, 3.22%)</title><rect x="254.4" y="131.0" width="38.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="257.4" y="142.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.exec (11,084 samples, 27.93%)</title><rect x="292.5" y="243.0" width="329.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.5" y="254.0">ru/mail/polis/service/codearound/RepliService..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$0 (11,084 samples, 27.93%)</title><rect x="292.5" y="227.0" width="329.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.5" y="238.0">ru/mail/polis/service/codearound/RepliService..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (11,084 samples, 27.93%)</title><rect x="292.5" y="211.0" width="329.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.5" y="222.0">ru/mail/polis/service/codearound/ReplicationL..</text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.03%)</title><rect x="292.5" y="195.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="295.5" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (105 samples, 0.26%)</title><rect x="292.8" y="195.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="295.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (127 samples, 0.32%)</title><rect x="295.9" y="195.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (127 samples, 0.32%)</title><rect x="295.9" y="179.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (127 samples, 0.32%)</title><rect x="295.9" y="163.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (127 samples, 0.32%)</title><rect x="295.9" y="147.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.9" y="158.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.32%)</title><rect x="295.9" y="131.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="298.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.06%)</title><rect x="299.7" y="195.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1730173572.invoke (23 samples, 0.06%)</title><rect x="299.7" y="179.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.06%)</title><rect x="299.7" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.04%)</title><rect x="299.9" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.04%)</title><rect x="299.9" y="131.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.9" y="142.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.04%)</title><rect x="299.9" y="115.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="302.9" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (235 samples, 0.59%)</title><rect x="300.4" y="195.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (235 samples, 0.59%)</title><rect x="300.4" y="179.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="303.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (235 samples, 0.59%)</title><rect x="300.4" y="163.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (235 samples, 0.59%)</title><rect x="300.4" y="147.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (235 samples, 0.59%)</title><rect x="300.4" y="131.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.4" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (235 samples, 0.59%)</title><rect x="300.4" y="115.0" width="7.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="303.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (3,613 samples, 9.10%)</title><rect x="307.4" y="195.0" width="107.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.4" y="206.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (43 samples, 0.11%)</title><rect x="307.4" y="179.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.4" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (16 samples, 0.04%)</title><rect x="307.4" y="163.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="310.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (27 samples, 0.07%)</title><rect x="307.8" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (27 samples, 0.07%)</title><rect x="307.8" y="147.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="310.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,570 samples, 8.99%)</title><rect x="308.6" y="179.0" width="106.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.6" y="190.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,570 samples, 8.99%)</title><rect x="308.6" y="163.0" width="106.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.6" y="174.0">one/nio/http/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (36 samples, 0.09%)</title><rect x="308.6" y="147.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="311.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (3,025 samples, 7.62%)</title><rect x="309.7" y="147.0" width="89.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.7" y="158.0">one/nio/ht..</text>
</g>
<g>
<title>byte[] (2,979 samples, 7.51%)</title><rect x="309.7" y="131.0" width="88.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="312.7" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (46 samples, 0.12%)</title><rect x="398.3" y="131.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="401.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (441 samples, 1.11%)</title><rect x="399.6" y="147.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.6" y="158.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.32%)</title><rect x="399.6" y="131.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="402.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.05%)</title><rect x="403.4" y="131.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.05%)</title><rect x="403.4" y="115.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.03%)</title><rect x="403.4" y="99.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="406.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.02%)</title><rect x="403.7" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.7" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.02%)</title><rect x="403.7" y="83.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="406.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (246 samples, 0.62%)</title><rect x="404.1" y="131.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (246 samples, 0.62%)</title><rect x="404.1" y="115.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (246 samples, 0.62%)</title><rect x="404.1" y="99.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.1" y="110.0"></text>
</g>
<g>
<title>char[] (152 samples, 0.38%)</title><rect x="404.1" y="83.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="407.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.11%)</title><rect x="408.6" y="83.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="411.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.13%)</title><rect x="409.9" y="83.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.13%)</title><rect x="409.9" y="67.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.9" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (50 samples, 0.13%)</title><rect x="409.9" y="51.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.9" y="62.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.13%)</title><rect x="409.9" y="35.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="412.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.06%)</title><rect x="411.4" y="131.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.06%)</title><rect x="411.4" y="115.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="414.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (22 samples, 0.06%)</title><rect x="412.1" y="131.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.06%)</title><rect x="412.1" y="115.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.06%)</title><rect x="412.1" y="99.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.02%)</title><rect x="412.1" y="83.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="415.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.03%)</title><rect x="412.4" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.4" y="94.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.03%)</title><rect x="412.4" y="67.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="415.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (44 samples, 0.11%)</title><rect x="412.8" y="147.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.8" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (44 samples, 0.11%)</title><rect x="412.8" y="131.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.8" y="142.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.11%)</title><rect x="412.8" y="115.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="415.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (20 samples, 0.05%)</title><rect x="414.1" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.05%)</title><rect x="414.1" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.05%)</title><rect x="414.1" y="115.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.03%)</title><rect x="414.3" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.3" y="110.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.03%)</title><rect x="414.3" y="83.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="417.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.getNodes (271 samples, 0.68%)</title><rect x="414.8" y="195.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (241 samples, 0.61%)</title><rect x="414.8" y="179.0" width="7.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="417.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.04%)</title><rect x="422.2" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.04%)</title><rect x="422.2" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.2" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.04%)</title><rect x="422.2" y="147.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="425.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueExternalResponse (1,936 samples, 4.88%)</title><rect x="422.8" y="195.0" width="57.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="425.8" y="206.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (103 samples, 0.26%)</title><rect x="422.8" y="179.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="425.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (438 samples, 1.10%)</title><rect x="425.9" y="179.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.9" y="190.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.51%)</title><rect x="425.9" y="163.0" width="6.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="428.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (126 samples, 0.32%)</title><rect x="432.0" y="163.0" width="3.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="435.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (108 samples, 0.27%)</title><rect x="435.7" y="163.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="438.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.syncReplicaValues (60 samples, 0.15%)</title><rect x="438.9" y="179.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.9" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (21 samples, 0.05%)</title><rect x="438.9" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (13 samples, 0.03%)</title><rect x="439.2" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.2" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (13 samples, 0.03%)</title><rect x="439.2" y="131.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="442.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (23 samples, 0.06%)</title><rect x="439.6" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="442.6" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (23 samples, 0.06%)</title><rect x="439.6" y="147.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="442.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (13 samples, 0.03%)</title><rect x="440.3" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.3" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (9 samples, 0.02%)</title><rect x="440.4" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytes (56 samples, 0.14%)</title><rect x="440.7" y="179.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.7" y="190.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.14%)</title><rect x="440.7" y="163.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="443.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (1,279 samples, 3.22%)</title><rect x="442.4" y="179.0" width="38.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="445.4" y="190.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,279 samples, 3.22%)</title><rect x="442.4" y="163.0" width="38.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.4" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,279 samples, 3.22%)</title><rect x="442.4" y="147.0" width="38.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="445.4" y="158.0">jav..</text>
</g>
<g>
<title>byte[] (1,279 samples, 3.22%)</title><rect x="442.4" y="131.0" width="38.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="445.4" y="142.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalResponse (4,287 samples, 10.80%)</title><rect x="480.4" y="195.0" width="127.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.4" y="206.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one.nio.http.Response (120 samples, 0.30%)</title><rect x="480.4" y="179.0" width="3.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="483.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (427 samples, 1.08%)</title><rect x="484.0" y="179.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.0" y="190.0"></text>
</g>
<g>
<title>byte[] (176 samples, 0.44%)</title><rect x="484.0" y="163.0" width="5.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="487.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (133 samples, 0.34%)</title><rect x="489.2" y="163.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="492.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.30%)</title><rect x="493.1" y="163.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="496.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (1,897 samples, 4.78%)</title><rect x="496.7" y="179.0" width="56.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.7" y="190.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (1,658 samples, 4.18%)</title><rect x="496.7" y="163.0" width="49.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.7" y="174.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,309 samples, 3.30%)</title><rect x="496.7" y="147.0" width="38.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.7" y="158.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,309 samples, 3.30%)</title><rect x="496.7" y="131.0" width="38.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.7" y="142.0">org..</text>
</g>
<g>
<title>byte[] (1,309 samples, 3.30%)</title><rect x="496.7" y="115.0" width="38.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="499.7" y="126.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (349 samples, 0.88%)</title><rect x="535.6" y="147.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (349 samples, 0.88%)</title><rect x="535.6" y="131.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.6" y="142.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.27%)</title><rect x="535.6" y="115.0" width="3.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="538.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (242 samples, 0.61%)</title><rect x="538.8" y="115.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (242 samples, 0.61%)</title><rect x="538.8" y="99.0" width="7.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="541.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (239 samples, 0.60%)</title><rect x="546.0" y="163.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (239 samples, 0.60%)</title><rect x="546.0" y="147.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.0" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (239 samples, 0.60%)</title><rect x="546.0" y="131.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (239 samples, 0.60%)</title><rect x="546.0" y="115.0" width="7.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="549.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (1,843 samples, 4.64%)</title><rect x="553.1" y="179.0" width="54.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.1" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,565 samples, 3.94%)</title><rect x="553.1" y="163.0" width="46.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.1" y="174.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (215 samples, 0.54%)</title><rect x="553.1" y="147.0" width="6.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="556.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,350 samples, 3.40%)</title><rect x="559.4" y="147.0" width="40.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.4" y="158.0">jav..</text>
</g>
<g>
<title>byte[] (1,350 samples, 3.40%)</title><rect x="559.4" y="131.0" width="40.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="562.4" y="142.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (278 samples, 0.70%)</title><rect x="599.6" y="163.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.6" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (278 samples, 0.70%)</title><rect x="599.6" y="147.0" width="8.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="602.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (477 samples, 1.20%)</title><rect x="607.8" y="195.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (242 samples, 0.61%)</title><rect x="607.8" y="179.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (242 samples, 0.61%)</title><rect x="607.8" y="163.0" width="7.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.8" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (242 samples, 0.61%)</title><rect x="607.8" y="147.0" width="7.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="610.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.Value (235 samples, 0.59%)</title><rect x="615.0" y="179.0" width="7.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="618.0" y="190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (19,104 samples, 48.13%)</title><rect x="622.0" y="323.0" width="568.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.0" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (463 samples, 1.17%)</title><rect x="622.0" y="307.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.0" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (463 samples, 1.17%)</title><rect x="622.0" y="291.0" width="13.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="625.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (18,641 samples, 46.97%)</title><rect x="635.8" y="307.0" width="554.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.8" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (18,641 samples, 46.97%)</title><rect x="635.8" y="291.0" width="554.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.8" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18,641 samples, 46.97%)</title><rect x="635.8" y="275.0" width="554.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.8" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,260 samples, 10.73%)</title><rect x="635.8" y="259.0" width="126.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.8" y="270.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,260 samples, 10.73%)</title><rect x="635.8" y="243.0" width="126.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.8" y="254.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,059 samples, 7.71%)</title><rect x="635.8" y="227.0" width="90.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.8" y="238.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (967 samples, 2.44%)</title><rect x="635.8" y="211.0" width="28.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.8" y="222.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (967 samples, 2.44%)</title><rect x="635.8" y="195.0" width="28.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.8" y="206.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (967 samples, 2.44%)</title><rect x="635.8" y="179.0" width="28.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.8" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (967 samples, 2.44%)</title><rect x="635.8" y="163.0" width="28.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.8" y="174.0">ja..</text>
</g>
<g>
<title>java.lang.String (458 samples, 1.15%)</title><rect x="635.8" y="147.0" width="13.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="638.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (509 samples, 1.28%)</title><rect x="649.4" y="147.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.4" y="158.0"></text>
</g>
<g>
<title>byte[] (509 samples, 1.28%)</title><rect x="649.4" y="131.0" width="15.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="652.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (2,092 samples, 5.27%)</title><rect x="664.5" y="211.0" width="62.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.5" y="222.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.getBytes (474 samples, 1.19%)</title><rect x="664.5" y="195.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (474 samples, 1.19%)</title><rect x="664.5" y="179.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (474 samples, 1.19%)</title><rect x="664.5" y="163.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (474 samples, 1.19%)</title><rect x="664.5" y="147.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.5" y="158.0"></text>
</g>
<g>
<title>byte[] (474 samples, 1.19%)</title><rect x="664.5" y="131.0" width="14.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="667.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1214003821.linkToTargetMethod (294 samples, 0.74%)</title><rect x="678.6" y="195.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/985922955.invokeStatic (294 samples, 0.74%)</title><rect x="678.6" y="179.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/1361385511.get$Lambda (294 samples, 0.74%)</title><rect x="678.6" y="163.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.6" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$74 (294 samples, 0.74%)</title><rect x="678.6" y="147.0" width="8.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="681.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/737645283.linkToTargetMethod (325 samples, 0.82%)</title><rect x="687.4" y="195.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/920798542.invokeStatic (325 samples, 0.82%)</title><rect x="687.4" y="179.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.get$Lambda (325 samples, 0.82%)</title><rect x="687.4" y="163.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.4" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$76 (325 samples, 0.82%)</title><rect x="687.4" y="147.0" width="9.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="690.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (463 samples, 1.17%)</title><rect x="697.0" y="195.0" width="13.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (463 samples, 1.17%)</title><rect x="697.0" y="179.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (463 samples, 1.17%)</title><rect x="697.0" y="163.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.68%)</title><rect x="697.0" y="147.0" width="8.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="700.0" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (194 samples, 0.49%)</title><rect x="705.0" y="147.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.0" y="158.0"></text>
</g>
<g>
<title>byte[] (194 samples, 0.49%)</title><rect x="705.0" y="131.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="708.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (536 samples, 1.35%)</title><rect x="710.8" y="195.0" width="15.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (536 samples, 1.35%)</title><rect x="710.8" y="179.0" width="15.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (536 samples, 1.35%)</title><rect x="710.8" y="163.0" width="15.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.get$Lambda (536 samples, 1.35%)</title><rect x="710.8" y="147.0" width="15.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$75 (536 samples, 1.35%)</title><rect x="710.8" y="131.0" width="15.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="713.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,201 samples, 3.03%)</title><rect x="726.7" y="227.0" width="35.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.7" y="238.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,201 samples, 3.03%)</title><rect x="726.7" y="211.0" width="35.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.7" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,201 samples, 3.03%)</title><rect x="726.7" y="195.0" width="35.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="729.7" y="206.0">jav..</text>
</g>
<g>
<title>java.lang.String (523 samples, 1.32%)</title><rect x="726.7" y="179.0" width="15.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="729.7" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (678 samples, 1.71%)</title><rect x="742.3" y="179.0" width="20.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.3" y="190.0"></text>
</g>
<g>
<title>byte[] (678 samples, 1.71%)</title><rect x="742.3" y="163.0" width="20.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="745.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,601 samples, 14.11%)</title><rect x="762.4" y="259.0" width="166.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.4" y="270.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one.nio.http.Request (923 samples, 2.33%)</title><rect x="762.4" y="243.0" width="27.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="765.4" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,814 samples, 4.57%)</title><rect x="789.9" y="243.0" width="53.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.9" y="254.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (1,814 samples, 4.57%)</title><rect x="789.9" y="227.0" width="53.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="792.9" y="238.0">java...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,864 samples, 7.22%)</title><rect x="843.8" y="243.0" width="85.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.8" y="254.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,864 samples, 7.22%)</title><rect x="843.8" y="227.0" width="85.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.8" y="238.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (1,385 samples, 3.49%)</title><rect x="843.8" y="211.0" width="41.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="846.8" y="222.0">cha..</text>
</g>
<g>
<title>java.lang.String (565 samples, 1.42%)</title><rect x="885.0" y="211.0" width="16.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="888.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (914 samples, 2.30%)</title><rect x="901.8" y="211.0" width="27.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.8" y="222.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (914 samples, 2.30%)</title><rect x="901.8" y="195.0" width="27.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.8" y="206.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (914 samples, 2.30%)</title><rect x="901.8" y="179.0" width="27.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.8" y="190.0">j..</text>
</g>
<g>
<title>byte[] (914 samples, 2.30%)</title><rect x="901.8" y="163.0" width="27.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="904.8" y="174.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3,167 samples, 7.98%)</title><rect x="929.0" y="259.0" width="94.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.0" y="270.0">one/nio/htt..</text>
</g>
<g>
<title>byte[] (3,167 samples, 7.98%)</title><rect x="929.0" y="243.0" width="94.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="932.0" y="254.0">byte[]</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (483 samples, 1.22%)</title><rect x="1023.1" y="259.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (483 samples, 1.22%)</title><rect x="1023.1" y="243.0" width="14.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (483 samples, 1.22%)</title><rect x="1023.1" y="227.0" width="14.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1026.1" y="238.0"></text>
</g>
<g>
<title>java.lang.String (252 samples, 0.63%)</title><rect x="1023.1" y="211.0" width="7.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1026.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (231 samples, 0.58%)</title><rect x="1030.6" y="211.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.6" y="222.0"></text>
</g>
<g>
<title>byte[] (231 samples, 0.58%)</title><rect x="1030.6" y="195.0" width="6.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1033.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,130 samples, 12.93%)</title><rect x="1037.5" y="259.0" width="152.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.5" y="270.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,130 samples, 12.93%)</title><rect x="1037.5" y="243.0" width="152.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.5" y="254.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>char[] (2,433 samples, 6.13%)</title><rect x="1037.5" y="227.0" width="72.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1040.5" y="238.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,098 samples, 2.77%)</title><rect x="1109.8" y="227.0" width="32.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1112.8" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,599 samples, 4.03%)</title><rect x="1142.5" y="227.0" width="47.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1145.5" y="238.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,599 samples, 4.03%)</title><rect x="1142.5" y="211.0" width="47.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.5" y="222.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,599 samples, 4.03%)</title><rect x="1142.5" y="195.0" width="47.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.5" y="206.0">java..</text>
</g>
<g>
<title>byte[] (1,599 samples, 4.03%)</title><rect x="1142.5" y="179.0" width="47.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1145.5" y="190.0">byte[]</text>
</g>
</g>
</svg>
