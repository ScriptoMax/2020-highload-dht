<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">PUT unduplicated keys (#1)</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (5,125 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (65 samples, 1.27%)</title><rect x="10.0" y="899.0" width="15.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (65 samples, 1.27%)</title><rect x="10.0" y="883.0" width="15.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (65 samples, 1.27%)</title><rect x="10.0" y="867.0" width="15.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (65 samples, 1.27%)</title><rect x="10.0" y="851.0" width="15.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (62 samples, 1.21%)</title><rect x="10.0" y="835.0" width="14.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, 8ul&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (62 samples, 1.21%)</title><rect x="10.0" y="819.0" width="14.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (62 samples, 1.21%)</title><rect x="10.0" y="803.0" width="14.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*) (62 samples, 1.21%)</title><rect x="10.0" y="787.0" width="14.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::WriteLevel0Table() (62 samples, 1.21%)</title><rect x="10.0" y="771.0" width="14.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::BuildTable(std::string const&amp;, rocksdb::Env*, rocksdb::FileSystem*, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&amp;, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_del (60 samples, 1.17%)</title><rect x="10.2" y="755.0" width="13.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (46 samples, 0.90%)</title><rect x="10.5" y="739.0" width="10.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Flush() (33 samples, 0.64%)</title><rect x="10.9" y="723.0" width="7.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, bool) (32 samples, 0.62%)</title><rect x="11.2" y="707.0" width="7.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, bool) (32 samples, 0.62%)</title><rect x="11.2" y="691.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.2" y="702.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (16 samples, 0.31%)</title><rect x="11.4" y="675.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="14.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext&amp;, rocksdb::UncompressionContext*, std::string*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (10 samples, 0.20%)</title><rect x="15.1" y="675.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::string*, std::string*, std::string*) (8 samples, 0.16%)</title><rect x="15.3" y="659.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.3" y="670.0"></text>
</g>
<g>
<title>__memset_erms (5 samples, 0.10%)</title><rect x="15.5" y="643.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, bool) (3 samples, 0.06%)</title><rect x="17.4" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.4" y="686.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.06%)</title><rect x="17.4" y="659.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="20.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (3 samples, 0.06%)</title><rect x="18.7" y="723.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="21.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::string*, rocksdb::Slice const*, rocksdb::BlockHandle const&amp;) (6 samples, 0.12%)</title><rect x="19.4" y="723.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.06%)</title><rect x="19.9" y="707.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="22.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (5 samples, 0.10%)</title><rect x="21.1" y="739.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (2 samples, 0.04%)</title><rect x="21.5" y="723.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Sync(bool) (3 samples, 0.06%)</title><rect x="23.4" y="739.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="26.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::SyncInternal(bool) (3 samples, 0.06%)</title><rect x="23.4" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="26.4" y="734.0"></text>
</g>
<g>
<title>fdatasync (3 samples, 0.06%)</title><rect x="23.4" y="707.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="26.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="23.4" y="691.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="23.4" y="675.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_fdatasync (3 samples, 0.06%)</title><rect x="23.4" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.4" y="670.0"></text>
</g>
<g>
<title>do_fsync (3 samples, 0.06%)</title><rect x="23.4" y="643.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.4" y="654.0"></text>
</g>
<g>
<title>vfs_fsync_range (3 samples, 0.06%)</title><rect x="23.4" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.4" y="638.0"></text>
</g>
<g>
<title>ext4_sync_file (3 samples, 0.06%)</title><rect x="23.4" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.4" y="622.0"></text>
</g>
<g>
<title>file_write_and_wait_range (3 samples, 0.06%)</title><rect x="23.4" y="595.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.4" y="606.0"></text>
</g>
<g>
<title>__filemap_fdatawrite_range (3 samples, 0.06%)</title><rect x="23.4" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.4" y="590.0"></text>
</g>
<g>
<title>do_writepages (3 samples, 0.06%)</title><rect x="23.4" y="563.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="26.4" y="574.0"></text>
</g>
<g>
<title>ext4_writepages (3 samples, 0.06%)</title><rect x="23.4" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.4" y="558.0"></text>
</g>
<g>
<title>mpage_prepare_extent_to_map (2 samples, 0.04%)</title><rect x="23.6" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&amp;, bool) (3 samples, 0.06%)</title><rect x="24.3" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::string const&amp;, std::string const&amp;, rocksdb::FileType, unsigned long) (3 samples, 0.06%)</title><rect x="24.3" y="819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::string const&amp;, std::string const&amp;, bool, bool) (3 samples, 0.06%)</title><rect x="24.3" y="803.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="27.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::string const&amp;, std::string const&amp;, bool) (3 samples, 0.06%)</title><rect x="24.3" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="27.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::DeleteScheduler::DeleteFile(std::string const&amp;, std::string const&amp;, bool) (3 samples, 0.06%)</title><rect x="24.3" y="771.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="27.3" y="782.0"></text>
</g>
<g>
<title>__GI___unlink (3 samples, 0.06%)</title><rect x="24.3" y="755.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="27.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="24.3" y="739.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="24.3" y="723.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_unlink (3 samples, 0.06%)</title><rect x="24.3" y="707.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.3" y="718.0"></text>
</g>
<g>
<title>do_unlinkat (3 samples, 0.06%)</title><rect x="24.3" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="27.3" y="702.0"></text>
</g>
<g>
<title>iput (3 samples, 0.06%)</title><rect x="24.3" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.3" y="686.0"></text>
</g>
<g>
<title>evict (3 samples, 0.06%)</title><rect x="24.3" y="659.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.3" y="670.0"></text>
</g>
<g>
<title>ext4_evict_inode (3 samples, 0.06%)</title><rect x="24.3" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="27.3" y="654.0"></text>
</g>
<g>
<title>truncate_inode_pages_final (3 samples, 0.06%)</title><rect x="24.3" y="627.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.3" y="638.0"></text>
</g>
<g>
<title>truncate_inode_pages_range (3 samples, 0.06%)</title><rect x="24.3" y="611.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.3" y="622.0"></text>
</g>
<g>
<title>LZ4_compress_fast_continue (14 samples, 0.27%)</title><rect x="25.0" y="899.0" width="3.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="28.0" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.18%)</title><rect x="28.4" y="899.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.4" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (9 samples, 0.18%)</title><rect x="28.4" y="883.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="31.4" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (9 samples, 0.18%)</title><rect x="28.4" y="867.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.4" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.12%)</title><rect x="29.1" y="851.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.04%)</title><rect x="29.1" y="835.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="32.1" y="846.0"></text>
</g>
<g>
<title>[no_Java_frame] (5 samples, 0.10%)</title><rect x="30.5" y="899.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="33.5" y="910.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.10%)</title><rect x="31.6" y="899.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="34.6" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="31.9" y="883.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="34.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.07%)</title><rect x="32.8" y="899.0" width="12.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="35.8" y="910.0"></text>
</g>
<g>
<title>LZ4_compress_fast_continue (33 samples, 0.64%)</title><rect x="32.8" y="883.0" width="7.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="35.8" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="39.9" y="867.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="42.9" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="39.9" y="851.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.9" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="39.9" y="835.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.9" y="846.0"></text>
</g>
<g>
<title>__GI_write (20 samples, 0.39%)</title><rect x="40.6" y="883.0" width="4.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="43.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.39%)</title><rect x="40.6" y="867.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.39%)</title><rect x="40.6" y="851.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_write (20 samples, 0.39%)</title><rect x="40.6" y="835.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.6" y="846.0"></text>
</g>
<g>
<title>ksys_write (20 samples, 0.39%)</title><rect x="40.6" y="819.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.6" y="830.0"></text>
</g>
<g>
<title>vfs_write (20 samples, 0.39%)</title><rect x="40.6" y="803.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.6" y="814.0"></text>
</g>
<g>
<title>__vfs_write (20 samples, 0.39%)</title><rect x="40.6" y="787.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.6" y="798.0"></text>
</g>
<g>
<title>new_sync_write (20 samples, 0.39%)</title><rect x="40.6" y="771.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="43.6" y="782.0"></text>
</g>
<g>
<title>ext4_file_write_iter (20 samples, 0.39%)</title><rect x="40.6" y="755.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.6" y="766.0"></text>
</g>
<g>
<title>__generic_file_write_iter (19 samples, 0.37%)</title><rect x="40.6" y="739.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="43.6" y="750.0"></text>
</g>
<g>
<title>generic_perform_write (19 samples, 0.37%)</title><rect x="40.6" y="723.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="43.6" y="734.0"></text>
</g>
<g>
<title>ext4_da_write_begin (6 samples, 0.12%)</title><rect x="40.6" y="707.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="43.6" y="718.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.04%)</title><rect x="40.9" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="43.9" y="702.0"></text>
</g>
<g>
<title>ext4_da_get_block_prep (2 samples, 0.04%)</title><rect x="40.9" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.9" y="686.0"></text>
</g>
<g>
<title>ext4_es_insert_delayed_block (2 samples, 0.04%)</title><rect x="40.9" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.9" y="670.0"></text>
</g>
<g>
<title>__es_insert_extent (2 samples, 0.04%)</title><rect x="40.9" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.9" y="654.0"></text>
</g>
<g>
<title>ext4_es_can_be_merged (2 samples, 0.04%)</title><rect x="40.9" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.9" y="638.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.06%)</title><rect x="41.3" y="691.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="44.3" y="702.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.06%)</title><rect x="41.3" y="675.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="44.3" y="686.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (2 samples, 0.04%)</title><rect x="41.5" y="659.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="44.5" y="670.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.12%)</title><rect x="42.0" y="707.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="45.0" y="718.0"></text>
</g>
<g>
<title>generic_write_end (5 samples, 0.10%)</title><rect x="42.2" y="691.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="45.2" y="702.0"></text>
</g>
<g>
<title>__generic_write_end (4 samples, 0.08%)</title><rect x="42.2" y="675.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="45.2" y="686.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.08%)</title><rect x="42.2" y="659.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="45.2" y="670.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.08%)</title><rect x="42.2" y="643.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="45.2" y="654.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.06%)</title><rect x="42.5" y="627.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="45.5" y="638.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="42.5" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="45.5" y="622.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="42.5" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="45.5" y="606.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (6 samples, 0.12%)</title><rect x="43.4" y="707.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="46.4" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.12%)</title><rect x="43.4" y="691.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.4" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (12 samples, 0.23%)</title><rect x="45.5" y="899.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="48.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.08%)</title><rect x="45.7" y="883.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="48.7" y="894.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="46.1" y="867.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="49.1" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.14%)</title><rect x="46.6" y="883.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="49.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.14%)</title><rect x="46.6" y="867.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="49.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.14%)</title><rect x="46.6" y="851.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.12%)</title><rect x="46.8" y="835.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="49.8" y="846.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.12%)</title><rect x="46.8" y="819.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="49.8" y="830.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.12%)</title><rect x="46.8" y="803.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="49.8" y="814.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.12%)</title><rect x="46.8" y="787.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="49.8" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.12%)</title><rect x="46.8" y="771.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="49.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="46.8" y="755.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="49.8" y="766.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (9 samples, 0.18%)</title><rect x="48.7" y="899.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="51.7" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (12 samples, 0.23%)</title><rect x="50.8" y="899.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="53.8" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.21%)</title><rect x="51.0" y="883.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="54.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.21%)</title><rect x="51.0" y="867.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.18%)</title><rect x="51.4" y="851.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="54.4" y="862.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.14%)</title><rect x="51.9" y="835.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="54.9" y="846.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.14%)</title><rect x="51.9" y="819.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="54.9" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.10%)</title><rect x="51.9" y="803.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.9" y="814.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.06%)</title><rect x="51.9" y="787.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="54.9" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="51.9" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.9" y="782.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="52.6" y="787.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="55.6" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="52.6" y="771.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.6" y="782.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="53.1" y="803.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="56.1" y="814.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.04%)</title><rect x="53.5" y="899.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="56.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,801 samples, 74.17%)</title><rect x="54.0" y="899.0" width="875.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.0" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,801 samples, 74.17%)</title><rect x="54.0" y="883.0" width="875.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.0" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,801 samples, 74.17%)</title><rect x="54.0" y="867.0" width="875.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.0" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.04%)</title><rect x="54.9" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.08%)</title><rect x="55.4" y="851.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="55.4" y="835.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="55.4" y="819.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="55.4" y="803.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (267 samples, 5.21%)</title><rect x="56.3" y="851.0" width="61.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.3" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (265 samples, 5.17%)</title><rect x="56.7" y="835.0" width="61.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.7" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (244 samples, 4.76%)</title><rect x="57.2" y="819.0" width="56.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.2" y="830.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.20%)</title><rect x="57.7" y="803.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.14%)</title><rect x="60.0" y="803.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.14%)</title><rect x="60.0" y="787.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="60.9" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="60.9" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (224 samples, 4.37%)</title><rect x="61.6" y="803.0" width="51.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.6" y="814.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (224 samples, 4.37%)</title><rect x="61.6" y="787.0" width="51.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.6" y="798.0">jdk/i..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="63.0" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="66.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (89 samples, 1.74%)</title><rect x="63.4" y="771.0" width="20.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="66.4" y="782.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.04%)</title><rect x="65.0" y="755.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="68.0" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="65.7" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="68.7" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (22 samples, 0.43%)</title><rect x="66.2" y="755.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="69.2" y="766.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.04%)</title><rect x="68.7" y="739.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="71.7" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.06%)</title><rect x="69.2" y="739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="72.2" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.12%)</title><rect x="69.9" y="739.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="72.9" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (35 samples, 0.68%)</title><rect x="71.7" y="755.0" width="8.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="74.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.53%)</title><rect x="73.5" y="739.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.5" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="73.5" y="723.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="76.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.49%)</title><rect x="74.0" y="723.0" width="5.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="77.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.23%)</title><rect x="77.0" y="707.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.0" y="718.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.21%)</title><rect x="77.0" y="691.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.0" y="702.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.14%)</title><rect x="77.2" y="675.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.2" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="78.2" y="659.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="81.2" y="670.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="78.8" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.8" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="80.0" y="755.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="83.0" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.06%)</title><rect x="80.7" y="755.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="83.7" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (7 samples, 0.14%)</title><rect x="81.6" y="755.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="84.6" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (3 samples, 0.06%)</title><rect x="83.2" y="755.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="86.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 2.46%)</title><rect x="83.9" y="771.0" width="29.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="86.9" y="782.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="83.9" y="755.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="86.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (7 samples, 0.14%)</title><rect x="84.4" y="755.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="87.4" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.16%)</title><rect x="86.2" y="755.0" width="1.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="89.2" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.08%)</title><rect x="88.1" y="755.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="91.1" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (102 samples, 1.99%)</title><rect x="89.4" y="755.0" width="23.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="92.4" y="766.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 1.05%)</title><rect x="100.5" y="739.0" width="12.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="103.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 1.05%)</title><rect x="100.5" y="723.0" width="12.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.60%)</title><rect x="105.6" y="707.0" width="7.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="108.6" y="718.0"></text>
</g>
<g>
<title>do_futex (30 samples, 0.59%)</title><rect x="105.6" y="691.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="108.6" y="702.0"></text>
</g>
<g>
<title>futex_wait (25 samples, 0.49%)</title><rect x="106.7" y="675.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="109.7" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.20%)</title><rect x="107.4" y="659.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="110.4" y="670.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.10%)</title><rect x="108.5" y="643.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.5" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.10%)</title><rect x="108.5" y="627.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.5" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="109.0" y="611.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="112.0" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.12%)</title><rect x="109.7" y="659.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.7" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (2 samples, 0.04%)</title><rect x="110.2" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="113.2" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.04%)</title><rect x="110.6" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="113.6" y="654.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.08%)</title><rect x="111.3" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="114.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.37%)</title><rect x="113.4" y="819.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.37%)</title><rect x="113.4" y="803.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.37%)</title><rect x="113.4" y="787.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.37%)</title><rect x="113.4" y="771.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.25%)</title><rect x="114.8" y="755.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.8" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="114.8" y="739.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="117.8" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.21%)</title><rect x="115.2" y="739.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="118.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.21%)</title><rect x="115.2" y="723.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="118.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.21%)</title><rect x="115.2" y="707.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.21%)</title><rect x="115.2" y="691.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.2" y="702.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.21%)</title><rect x="115.2" y="675.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="118.2" y="686.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.21%)</title><rect x="115.2" y="659.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="118.2" y="670.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.18%)</title><rect x="115.7" y="643.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.18%)</title><rect x="115.7" y="627.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.18%)</title><rect x="115.7" y="611.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="118.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run (3,524 samples, 68.76%)</title><rect x="117.8" y="851.0" width="811.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.8" y="862.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6 (3,522 samples, 68.72%)</title><rect x="118.2" y="835.0" width="810.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.2" y="846.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,055 samples, 20.59%)</title><rect x="119.6" y="819.0" width="242.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.6" y="830.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (21 samples, 0.41%)</title><rect x="121.2" y="803.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="124.2" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (21 samples, 0.41%)</title><rect x="121.2" y="787.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="124.2" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (19 samples, 0.37%)</title><rect x="121.7" y="771.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="124.7" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (18 samples, 0.35%)</title><rect x="121.7" y="755.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="124.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.12%)</title><rect x="126.0" y="803.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.12%)</title><rect x="126.0" y="787.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.12%)</title><rect x="126.0" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,008 samples, 19.67%)</title><rect x="127.4" y="803.0" width="232.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.4" y="814.0">one/nio/http/HttpSession.writeR..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (34 samples, 0.66%)</title><rect x="127.7" y="787.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.16%)</title><rect x="133.4" y="771.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.16%)</title><rect x="133.4" y="755.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.16%)</title><rect x="133.4" y="739.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.16%)</title><rect x="133.4" y="723.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.16%)</title><rect x="133.4" y="707.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.4" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="134.6" y="691.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="137.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (973 samples, 18.99%)</title><rect x="135.5" y="787.0" width="224.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.5" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (971 samples, 18.95%)</title><rect x="135.9" y="771.0" width="223.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.9" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="136.6" y="755.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="139.6" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.04%)</title><rect x="136.9" y="739.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="139.9" y="750.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.06%)</title><rect x="137.8" y="755.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="140.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.04%)</title><rect x="138.5" y="755.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="141.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (956 samples, 18.65%)</title><rect x="138.9" y="755.0" width="220.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.9" y="766.0">one/nio/net/Session$ArrayQueu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (952 samples, 18.58%)</title><rect x="139.9" y="739.0" width="219.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.9" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (46 samples, 0.90%)</title><rect x="145.4" y="723.0" width="10.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="148.4" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.06%)</title><rect x="150.4" y="707.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="153.4" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.08%)</title><rect x="151.1" y="707.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="154.1" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (14 samples, 0.27%)</title><rect x="152.1" y="707.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="155.1" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.06%)</title><rect x="152.5" y="691.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="155.5" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="153.2" y="691.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="156.2" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.10%)</title><rect x="154.1" y="691.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="157.1" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.06%)</title><rect x="155.3" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="158.3" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.06%)</title><rect x="156.0" y="723.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="159.0" y="734.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="156.7" y="723.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="159.7" y="734.0"></text>
</g>
<g>
<title>__libc_send (873 samples, 17.03%)</title><rect x="157.1" y="723.0" width="201.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="160.1" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (859 samples, 16.76%)</title><rect x="160.3" y="707.0" width="197.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.3" y="718.0">entry_SYSCALL_64_after_hwf..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.06%)</title><rect x="160.3" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="163.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (856 samples, 16.70%)</title><rect x="161.0" y="691.0" width="197.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.0" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (824 samples, 16.08%)</title><rect x="167.3" y="675.0" width="189.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="170.3" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (819 samples, 15.98%)</title><rect x="167.5" y="659.0" width="188.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.5" y="670.0">__sys_sendto</text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="169.8" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.8" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (790 samples, 15.41%)</title><rect x="170.2" y="643.0" width="181.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="173.2" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (780 samples, 15.22%)</title><rect x="170.5" y="627.0" width="179.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="173.5" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (777 samples, 15.16%)</title><rect x="170.9" y="611.0" width="178.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="173.9" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="171.9" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.9" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="172.6" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="175.6" y="606.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.10%)</title><rect x="173.0" y="595.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="176.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (4 samples, 0.08%)</title><rect x="173.2" y="579.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="176.2" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.06%)</title><rect x="173.5" y="563.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="176.5" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (755 samples, 14.73%)</title><rect x="174.9" y="595.0" width="173.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="177.9" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.08%)</title><rect x="177.2" y="579.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="180.2" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="177.4" y="563.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="180.4" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.06%)</title><rect x="178.1" y="579.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="181.1" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="178.1" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="181.1" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (42 samples, 0.82%)</title><rect x="178.8" y="579.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="181.8" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (33 samples, 0.64%)</title><rect x="179.7" y="563.0" width="7.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="182.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (12 samples, 0.23%)</title><rect x="181.1" y="547.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="184.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.23%)</title><rect x="181.1" y="531.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="184.1" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.10%)</title><rect x="182.0" y="515.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.0" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.06%)</title><rect x="183.1" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.23%)</title><rect x="183.8" y="547.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="186.8" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.12%)</title><rect x="185.2" y="531.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="188.2" y="542.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.04%)</title><rect x="186.8" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="189.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.06%)</title><rect x="187.3" y="563.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="190.3" y="574.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="188.0" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.0" y="574.0"></text>
</g>
<g>
<title>tcp_push (676 samples, 13.19%)</title><rect x="188.7" y="579.0" width="155.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="191.7" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (675 samples, 13.17%)</title><rect x="188.7" y="563.0" width="155.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="191.7" y="574.0">__tcp_push_pending_f..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="188.9" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.9" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.04%)</title><rect x="189.4" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="192.4" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (669 samples, 13.05%)</title><rect x="190.1" y="547.0" width="154.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="193.1" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (634 samples, 12.37%)</title><rect x="192.4" y="531.0" width="145.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="195.4" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (599 samples, 11.69%)</title><rect x="197.4" y="515.0" width="137.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="200.4" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (597 samples, 11.65%)</title><rect x="197.6" y="499.0" width="137.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="200.6" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (583 samples, 11.38%)</title><rect x="200.0" y="483.0" width="134.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="203.0" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (115 samples, 2.24%)</title><rect x="200.0" y="467.0" width="26.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.0" y="478.0">_..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.04%)</title><rect x="200.2" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.2" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (6 samples, 0.12%)</title><rect x="200.6" y="451.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="203.6" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.04%)</title><rect x="202.0" y="451.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="205.0" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (102 samples, 1.99%)</title><rect x="202.5" y="451.0" width="23.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="205.5" y="462.0">n..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.10%)</title><rect x="202.9" y="435.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="205.9" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (13 samples, 0.25%)</title><rect x="204.1" y="435.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="207.1" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (12 samples, 0.23%)</title><rect x="204.3" y="419.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.3" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (73 samples, 1.42%)</title><rect x="207.1" y="435.0" width="16.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.1" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (69 samples, 1.35%)</title><rect x="207.3" y="419.0" width="15.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="210.3" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (20 samples, 0.39%)</title><rect x="208.9" y="403.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="211.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (4 samples, 0.08%)</title><rect x="213.5" y="403.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="216.5" y="414.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.04%)</title><rect x="214.5" y="403.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="217.5" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.04%)</title><rect x="214.9" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="217.9" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.04%)</title><rect x="215.4" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="218.4" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (32 samples, 0.62%)</title><rect x="215.8" y="403.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="218.8" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (2 samples, 0.04%)</title><rect x="218.6" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.06%)</title><rect x="219.1" y="387.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.1" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.06%)</title><rect x="219.1" y="371.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.1" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (15 samples, 0.29%)</title><rect x="219.8" y="387.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="222.8" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.08%)</title><rect x="222.3" y="371.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="225.3" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (2 samples, 0.04%)</title><rect x="223.4" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="226.4" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="223.9" y="435.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="226.9" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (6 samples, 0.12%)</title><rect x="224.6" y="435.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="227.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.08%)</title><rect x="224.6" y="419.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="227.6" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="225.5" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="228.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="226.0" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="229.0" y="462.0"></text>
</g>
<g>
<title>ip_output (462 samples, 9.01%)</title><rect x="226.7" y="467.0" width="106.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="229.7" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (448 samples, 8.74%)</title><rect x="227.6" y="451.0" width="103.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="230.6" y="462.0">ip_finish_ou..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.06%)</title><rect x="228.7" y="435.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="231.7" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (439 samples, 8.57%)</title><rect x="229.7" y="435.0" width="101.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="232.7" y="446.0">ip_finish_ou..</text>
</g>
<g>
<title>__local_bh_enable_ip (385 samples, 7.51%)</title><rect x="231.5" y="419.0" width="88.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="234.5" y="430.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.21 (385 samples, 7.51%)</title><rect x="231.5" y="403.0" width="88.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="234.5" y="414.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (381 samples, 7.43%)</title><rect x="232.4" y="387.0" width="87.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="235.4" y="398.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (379 samples, 7.40%)</title><rect x="232.4" y="371.0" width="87.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="235.4" y="382.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (373 samples, 7.28%)</title><rect x="233.6" y="355.0" width="85.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="236.6" y="366.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (365 samples, 7.12%)</title><rect x="235.4" y="339.0" width="84.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.4" y="350.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (360 samples, 7.02%)</title><rect x="236.6" y="323.0" width="82.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="239.6" y="334.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (358 samples, 6.99%)</title><rect x="236.8" y="307.0" width="82.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="239.8" y="318.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.06%)</title><rect x="237.3" y="291.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="240.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (351 samples, 6.85%)</title><rect x="237.9" y="291.0" width="80.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.9" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.04%)</title><rect x="238.4" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.10%)</title><rect x="238.9" y="275.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="241.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (334 samples, 6.52%)</title><rect x="240.0" y="275.0" width="76.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="243.0" y="286.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (328 samples, 6.40%)</title><rect x="240.2" y="259.0" width="75.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="243.2" y="270.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (322 samples, 6.28%)</title><rect x="240.2" y="243.0" width="74.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="243.2" y="254.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (320 samples, 6.24%)</title><rect x="240.2" y="227.0" width="73.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.2" y="238.0">ip_proto..</text>
</g>
<g>
<title>tcp_v4_rcv (314 samples, 6.13%)</title><rect x="241.6" y="211.0" width="72.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="244.6" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (17 samples, 0.33%)</title><rect x="244.8" y="195.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.8" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.04%)</title><rect x="248.3" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="251.3" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.12%)</title><rect x="249.0" y="195.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="252.0" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="250.4" y="195.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.4" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="250.4" y="179.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.4" y="190.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.04%)</title><rect x="250.8" y="195.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="253.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (271 samples, 5.29%)</title><rect x="251.3" y="195.0" width="62.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="254.3" y="206.0">tcp_v4..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="252.2" y="179.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="255.2" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="252.7" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="255.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (261 samples, 5.09%)</title><rect x="253.1" y="179.0" width="60.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="256.1" y="190.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.21%)</title><rect x="253.4" y="163.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="256.4" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (9 samples, 0.18%)</title><rect x="253.8" y="147.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="256.8" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.18%)</title><rect x="253.8" y="131.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="256.8" y="142.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.18%)</title><rect x="253.8" y="115.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.8" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.18%)</title><rect x="253.8" y="99.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="256.8" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.04%)</title><rect x="255.9" y="163.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="258.9" y="174.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="256.4" y="163.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="259.4" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.06%)</title><rect x="257.1" y="163.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="260.1" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.12%)</title><rect x="257.7" y="163.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.7" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.10%)</title><rect x="258.0" y="147.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.0" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.10%)</title><rect x="258.0" y="131.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="261.0" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.10%)</title><rect x="258.0" y="115.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="261.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack (70 samples, 1.37%)</title><rect x="259.1" y="163.0" width="16.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.1" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (52 samples, 1.01%)</title><rect x="261.9" y="147.0" width="12.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="264.9" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (27 samples, 0.53%)</title><rect x="264.9" y="131.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="267.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (11 samples, 0.21%)</title><rect x="264.9" y="115.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="267.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.14%)</title><rect x="265.8" y="99.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="268.8" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="267.0" y="83.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="270.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.25%)</title><rect x="267.6" y="115.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.6" y="126.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.25%)</title><rect x="267.6" y="99.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="270.6" y="110.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.20%)</title><rect x="268.3" y="83.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="271.3" y="94.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.20%)</title><rect x="268.3" y="67.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="271.3" y="78.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="270.6" y="115.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.6" y="126.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.06%)</title><rect x="271.6" y="131.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="274.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (6 samples, 0.12%)</title><rect x="272.2" y="131.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.2" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (4 samples, 0.08%)</title><rect x="273.9" y="147.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="276.9" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.04%)</title><rect x="274.8" y="147.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="277.8" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.06%)</title><rect x="275.2" y="163.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.2" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (154 samples, 3.00%)</title><rect x="275.9" y="163.0" width="35.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.9" y="174.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (133 samples, 2.60%)</title><rect x="277.8" y="147.0" width="30.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="280.8" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (129 samples, 2.52%)</title><rect x="278.7" y="131.0" width="29.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="281.7" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (129 samples, 2.52%)</title><rect x="278.7" y="115.0" width="29.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="281.7" y="126.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (127 samples, 2.48%)</title><rect x="279.2" y="99.0" width="29.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="282.2" y="110.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (9 samples, 0.18%)</title><rect x="308.4" y="147.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="311.4" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.08%)</title><rect x="310.5" y="147.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="313.5" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="311.6" y="163.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.6" y="174.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.04%)</title><rect x="313.2" y="179.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="316.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.04%)</title><rect x="313.9" y="227.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="316.9" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.10%)</title><rect x="314.6" y="243.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="317.6" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.06%)</title><rect x="314.6" y="227.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="317.6" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.06%)</title><rect x="314.6" y="211.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="317.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (3 samples, 0.06%)</title><rect x="316.0" y="259.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="319.0" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.04%)</title><rect x="317.1" y="275.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.1" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.08%)</title><rect x="317.8" y="275.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.8" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="318.3" y="259.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.3" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="318.3" y="243.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="321.3" y="254.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.04%)</title><rect x="319.7" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="322.7" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (45 samples, 0.88%)</title><rect x="320.1" y="419.0" width="10.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="323.1" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (42 samples, 0.82%)</title><rect x="320.1" y="403.0" width="9.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="323.1" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (21 samples, 0.41%)</title><rect x="322.0" y="387.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.0" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.23%)</title><rect x="323.1" y="371.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="326.1" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.06%)</title><rect x="323.1" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="326.1" y="366.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.18%)</title><rect x="323.8" y="355.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="326.8" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.16%)</title><rect x="324.1" y="339.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="327.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.14%)</title><rect x="324.3" y="323.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.3" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.04%)</title><rect x="325.9" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.9" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.04%)</title><rect x="326.4" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.4" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="326.8" y="387.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="329.8" y="398.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.04%)</title><rect x="327.3" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="330.3" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.14%)</title><rect x="327.7" y="387.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.7" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.04%)</title><rect x="328.7" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="331.7" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.04%)</title><rect x="329.3" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="332.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="330.0" y="403.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.0" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.18%)</title><rect x="331.0" y="451.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="334.0" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.06%)</title><rect x="331.7" y="435.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="334.7" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.04%)</title><rect x="331.9" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="332.6" y="435.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="335.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="332.6" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.6" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="332.6" y="403.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="335.6" y="414.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.04%)</title><rect x="333.0" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="336.0" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="333.5" y="467.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="336.5" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.06%)</title><rect x="334.4" y="483.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="337.4" y="494.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.14%)</title><rect x="335.3" y="515.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.3" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="335.6" y="499.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="338.6" y="510.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.08%)</title><rect x="336.0" y="499.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="339.0" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="336.5" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="339.5" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.08%)</title><rect x="337.4" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="340.4" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.06%)</title><rect x="337.6" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="340.6" y="510.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.10%)</title><rect x="338.8" y="531.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="341.8" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="339.5" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="342.5" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.23%)</title><rect x="340.2" y="531.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="343.2" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.04%)</title><rect x="340.6" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.6" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (8 samples, 0.16%)</title><rect x="341.1" y="515.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="344.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.12%)</title><rect x="341.6" y="499.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="344.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.12%)</title><rect x="341.6" y="483.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="344.6" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="342.2" y="467.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="345.2" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.04%)</title><rect x="343.2" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="346.2" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.04%)</title><rect x="343.6" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="346.6" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.06%)</title><rect x="344.3" y="579.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.3" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (14 samples, 0.27%)</title><rect x="345.0" y="579.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="348.0" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.06%)</title><rect x="345.2" y="563.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="348.2" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.20%)</title><rect x="345.9" y="563.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="348.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="347.8" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="350.8" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.08%)</title><rect x="348.7" y="595.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="351.7" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.14%)</title><rect x="350.1" y="627.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.1" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="350.3" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.3" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.08%)</title><rect x="350.8" y="611.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="353.8" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.08%)</title><rect x="350.8" y="595.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="353.8" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="351.2" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.04%)</title><rect x="351.7" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="354.7" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.33%)</title><rect x="352.1" y="643.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.1" y="654.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.29%)</title><rect x="352.1" y="627.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="355.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.27%)</title><rect x="352.4" y="611.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="355.4" y="622.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.25%)</title><rect x="352.6" y="595.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="355.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="355.6" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.6" y="638.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.04%)</title><rect x="356.1" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="359.1" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="356.5" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="359.5" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.08%)</title><rect x="357.2" y="675.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="358.1" y="723.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="361.1" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="359.0" y="755.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="362.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.20%)</title><rect x="359.5" y="803.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="360.9" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="360.9" y="771.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.9" y="782.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (3 samples, 0.06%)</title><rect x="361.8" y="803.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/1361385511.exec (2,460 samples, 48.00%)</title><rect x="362.7" y="819.0" width="566.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.7" y="830.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/1361385511.exec</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$1 (2,460 samples, 48.00%)</title><rect x="362.7" y="803.0" width="566.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="365.7" y="814.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$1</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.06%)</title><rect x="362.7" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (2,456 samples, 47.92%)</title><rect x="363.7" y="787.0" width="565.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.7" y="798.0">ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="371.9" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (46 samples, 0.90%)</title><rect x="372.9" y="771.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.84%)</title><rect x="373.6" y="755.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (40 samples, 0.78%)</title><rect x="374.2" y="739.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (38 samples, 0.74%)</title><rect x="374.7" y="723.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.39%)</title><rect x="377.7" y="707.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.12%)</title><rect x="379.1" y="691.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.12%)</title><rect x="379.1" y="675.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.16%)</title><rect x="380.5" y="691.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.12%)</title><rect x="380.9" y="675.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.9" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.12%)</title><rect x="380.9" y="659.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.06%)</title><rect x="382.5" y="707.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (1,109 samples, 21.64%)</title><rect x="383.7" y="771.0" width="255.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.7" y="782.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (10 samples, 0.20%)</title><rect x="384.4" y="755.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="387.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,096 samples, 21.39%)</title><rect x="386.7" y="755.0" width="252.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.7" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,095 samples, 21.37%)</title><rect x="386.9" y="739.0" width="252.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.9" y="750.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (212 samples, 4.14%)</title><rect x="388.1" y="723.0" width="48.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.1" y="734.0">one/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="390.1" y="707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="393.1" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="390.1" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="393.1" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="390.1" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="393.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="390.1" y="659.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="393.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (200 samples, 3.90%)</title><rect x="390.6" y="707.0" width="46.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.6" y="718.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (35 samples, 0.68%)</title><rect x="392.9" y="691.0" width="8.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="395.9" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.16%)</title><rect x="394.7" y="675.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="397.7" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.06%)</title><rect x="396.6" y="675.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="399.6" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (5 samples, 0.10%)</title><rect x="397.5" y="675.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="400.5" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.16%)</title><rect x="398.7" y="675.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="401.7" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="399.8" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="402.8" y="670.0"></text>
</g>
<g>
<title>__GI___recv (150 samples, 2.93%)</title><rect x="401.0" y="691.0" width="34.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="404.0" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (143 samples, 2.79%)</title><rect x="402.6" y="675.0" width="32.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="405.6" y="686.0">en..</text>
</g>
<g>
<title>do_syscall_64 (143 samples, 2.79%)</title><rect x="402.6" y="659.0" width="32.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="405.6" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (121 samples, 2.36%)</title><rect x="407.6" y="643.0" width="27.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="410.6" y="654.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (117 samples, 2.28%)</title><rect x="407.6" y="627.0" width="27.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="410.6" y="638.0">_..</text>
</g>
<g>
<title>sock_recvmsg (105 samples, 2.05%)</title><rect x="408.3" y="611.0" width="24.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="411.3" y="622.0">s..</text>
</g>
<g>
<title>inet_recvmsg (96 samples, 1.87%)</title><rect x="408.3" y="595.0" width="22.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="411.3" y="606.0">i..</text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="409.0" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="412.0" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (91 samples, 1.78%)</title><rect x="409.5" y="579.0" width="20.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="412.5" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="411.5" y="563.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="414.5" y="574.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="411.5" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.5" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="412.2" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="415.2" y="574.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="413.4" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.4" y="574.0"></text>
</g>
<g>
<title>sk_wait_data (36 samples, 0.70%)</title><rect x="413.8" y="563.0" width="8.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="416.8" y="574.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="415.2" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="418.2" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.14%)</title><rect x="416.4" y="547.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="419.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.14%)</title><rect x="416.4" y="531.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="419.4" y="542.0"></text>
</g>
<g>
<title>remove_wait_queue (7 samples, 0.14%)</title><rect x="418.0" y="547.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="421.0" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.14%)</title><rect x="418.0" y="531.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.0" y="542.0"></text>
</g>
<g>
<title>wait_woken (10 samples, 0.20%)</title><rect x="419.8" y="547.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="422.8" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (8 samples, 0.16%)</title><rect x="420.3" y="531.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="423.3" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="420.5" y="515.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="423.5" y="526.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.06%)</title><rect x="421.4" y="515.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="424.4" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.06%)</title><rect x="421.4" y="499.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="424.4" y="510.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (20 samples, 0.39%)</title><rect x="422.1" y="563.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="425.1" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (18 samples, 0.35%)</title><rect x="422.4" y="547.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="425.4" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (13 samples, 0.25%)</title><rect x="423.5" y="531.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="426.5" y="542.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.14%)</title><rect x="423.5" y="515.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="426.5" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.08%)</title><rect x="424.2" y="499.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.2" y="510.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.08%)</title><rect x="425.4" y="515.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="428.4" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.08%)</title><rect x="425.4" y="499.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="428.4" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.10%)</title><rect x="426.7" y="563.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="429.7" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (8 samples, 0.16%)</title><rect x="428.1" y="563.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="431.1" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="428.6" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="431.6" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.08%)</title><rect x="429.0" y="547.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="432.0" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="429.3" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="432.3" y="542.0"></text>
</g>
<g>
<title>security_socket_recvmsg (9 samples, 0.18%)</title><rect x="430.4" y="595.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="433.4" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.14%)</title><rect x="430.9" y="579.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="433.9" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.14%)</title><rect x="430.9" y="563.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="433.9" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.10%)</title><rect x="431.3" y="547.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="434.3" y="558.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="431.8" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="434.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.18%)</title><rect x="432.5" y="611.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="435.5" y="622.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.14%)</title><rect x="432.5" y="595.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="435.5" y="606.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.10%)</title><rect x="433.0" y="579.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="436.0" y="590.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="433.4" y="563.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="436.4" y="574.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="434.1" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="437.1" y="606.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.06%)</title><rect x="434.6" y="627.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="437.6" y="638.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.06%)</title><rect x="435.5" y="691.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="438.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (69 samples, 1.35%)</title><rect x="436.9" y="723.0" width="15.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.18%)</title><rect x="438.5" y="707.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="438.7" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="438.7" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="441.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.12%)</title><rect x="439.2" y="691.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.06%)</title><rect x="439.6" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.6" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.08%)</title><rect x="440.6" y="707.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="443.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (28 samples, 0.55%)</title><rect x="441.5" y="707.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.45%)</title><rect x="442.6" y="691.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.43%)</title><rect x="442.9" y="675.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.9" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="447.5" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="450.5" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="447.5" y="643.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.5" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="447.5" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="450.5" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="447.5" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="450.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (13 samples, 0.25%)</title><rect x="447.9" y="707.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="450.0" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="450.0" y="675.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (7 samples, 0.14%)</title><rect x="450.9" y="707.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.14%)</title><rect x="450.9" y="691.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (5 samples, 0.10%)</title><rect x="451.1" y="675.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (35 samples, 0.68%)</title><rect x="452.8" y="723.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.14%)</title><rect x="459.2" y="707.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.14%)</title><rect x="459.2" y="691.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.14%)</title><rect x="459.2" y="675.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.14%)</title><rect x="459.2" y="659.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.14%)</title><rect x="459.2" y="643.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.2" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="460.4" y="627.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="463.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.16%)</title><rect x="460.8" y="723.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="463.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.12%)</title><rect x="461.3" y="707.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.12%)</title><rect x="461.3" y="691.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (144 samples, 2.81%)</title><rect x="462.7" y="723.0" width="33.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.7" y="734.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (7 samples, 0.14%)</title><rect x="465.0" y="707.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="468.0" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (124 samples, 2.42%)</title><rect x="466.6" y="707.0" width="28.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="469.6" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 2.20%)</title><rect x="469.1" y="691.0" width="26.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.1" y="702.0">e..</text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.08%)</title><rect x="469.1" y="675.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (109 samples, 2.13%)</title><rect x="470.0" y="675.0" width="25.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="473.0" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_setsockopt (71 samples, 1.39%)</title><rect x="478.5" y="659.0" width="16.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="481.5" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (67 samples, 1.31%)</title><rect x="478.5" y="643.0" width="15.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="481.5" y="654.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="479.5" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="482.5" y="638.0"></text>
</g>
<g>
<title>__get_user_4 (6 samples, 0.12%)</title><rect x="480.2" y="627.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.2" y="638.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="481.5" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.5" y="638.0"></text>
</g>
<g>
<title>security_socket_setsockopt (13 samples, 0.25%)</title><rect x="482.0" y="627.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="485.0" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (3 samples, 0.06%)</title><rect x="482.5" y="611.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="485.5" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (8 samples, 0.16%)</title><rect x="483.2" y="611.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.2" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (7 samples, 0.14%)</title><rect x="483.4" y="595.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="486.4" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.12%)</title><rect x="483.6" y="579.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="486.6" y="590.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="484.5" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="487.5" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="484.5" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="487.5" y="558.0"></text>
</g>
<g>
<title>sock_setsockopt (22 samples, 0.43%)</title><rect x="485.0" y="627.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="488.0" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.10%)</title><rect x="486.8" y="611.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="489.8" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.06%)</title><rect x="487.3" y="595.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="490.3" y="606.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.08%)</title><rect x="488.0" y="611.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="491.0" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (3 samples, 0.06%)</title><rect x="488.9" y="611.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.9" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="489.6" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="492.6" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.33%)</title><rect x="490.1" y="627.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="493.1" y="638.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.25%)</title><rect x="490.1" y="611.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="493.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.25%)</title><rect x="490.1" y="595.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="493.1" y="606.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.16%)</title><rect x="491.2" y="579.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.2" y="590.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.08%)</title><rect x="493.1" y="611.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="496.1" y="622.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="494.0" y="643.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="497.0" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.04%)</title><rect x="494.4" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="497.4" y="654.0"></text>
</g>
<g>
<title>setsockopt@plt (3 samples, 0.06%)</title><rect x="495.1" y="707.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="498.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (613 samples, 11.96%)</title><rect x="495.8" y="723.0" width="141.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.8" y="734.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (31 samples, 0.60%)</title><rect x="499.3" y="707.0" width="7.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="502.3" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="501.3" y="691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="504.3" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.12%)</title><rect x="502.0" y="691.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="505.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.21%)</title><rect x="503.4" y="691.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="506.4" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="504.1" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="507.1" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.10%)</title><rect x="504.8" y="675.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="507.8" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.06%)</title><rect x="505.0" y="659.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="508.0" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.08%)</title><rect x="506.4" y="707.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="509.4" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="507.3" y="707.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="510.3" y="718.0"></text>
</g>
<g>
<title>__libc_send (559 samples, 10.91%)</title><rect x="507.8" y="707.0" width="128.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="510.8" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (553 samples, 10.79%)</title><rect x="509.2" y="691.0" width="127.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="512.2" y="702.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.04%)</title><rect x="509.2" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (551 samples, 10.75%)</title><rect x="509.6" y="675.0" width="126.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="512.6" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (527 samples, 10.28%)</title><rect x="514.5" y="659.0" width="121.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="517.5" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (524 samples, 10.22%)</title><rect x="514.5" y="643.0" width="120.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="517.5" y="654.0">__sys_sendto</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.04%)</title><rect x="514.9" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="517.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (510 samples, 9.95%)</title><rect x="515.4" y="627.0" width="117.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="518.4" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="515.8" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="518.8" y="622.0"></text>
</g>
<g>
<title>inet_sendmsg (500 samples, 9.76%)</title><rect x="516.3" y="611.0" width="115.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="519.3" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (497 samples, 9.70%)</title><rect x="517.0" y="595.0" width="114.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="520.0" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.08%)</title><rect x="517.2" y="579.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="520.2" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="518.6" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="521.6" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.06%)</title><rect x="519.3" y="579.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="522.3" y="590.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.12%)</title><rect x="520.0" y="579.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="523.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (4 samples, 0.08%)</title><rect x="520.5" y="563.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="523.5" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.08%)</title><rect x="520.5" y="547.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="523.5" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="521.8" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="524.8" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (471 samples, 9.19%)</title><rect x="522.5" y="579.0" width="108.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="525.5" y="590.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.10%)</title><rect x="523.9" y="563.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.9" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.08%)</title><rect x="524.1" y="547.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="527.1" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.12%)</title><rect x="525.1" y="563.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.1" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.08%)</title><rect x="525.1" y="547.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="528.1" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="526.0" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.0" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (18 samples, 0.35%)</title><rect x="526.7" y="563.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="529.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 0.27%)</title><rect x="526.7" y="547.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="529.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (9 samples, 0.18%)</title><rect x="527.6" y="531.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="530.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.12%)</title><rect x="527.6" y="515.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="530.6" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="528.5" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="531.5" y="510.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.08%)</title><rect x="529.9" y="547.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="532.9" y="558.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="530.8" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="533.8" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="531.3" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="534.3" y="574.0"></text>
</g>
<g>
<title>tcp_push (423 samples, 8.25%)</title><rect x="531.7" y="563.0" width="97.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="534.7" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (422 samples, 8.23%)</title><rect x="531.7" y="547.0" width="97.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="534.7" y="558.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.04%)</title><rect x="531.7" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="534.7" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (420 samples, 8.20%)</title><rect x="532.2" y="531.0" width="96.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="535.2" y="542.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (393 samples, 7.67%)</title><rect x="534.0" y="515.0" width="90.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="537.0" y="526.0">__tcp_tran..</text>
</g>
<g>
<title>ip_queue_xmit (382 samples, 7.45%)</title><rect x="536.1" y="499.0" width="88.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="539.1" y="510.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (381 samples, 7.43%)</title><rect x="536.1" y="483.0" width="87.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="539.1" y="494.0">__ip_queue..</text>
</g>
<g>
<title>ip_local_out (375 samples, 7.32%)</title><rect x="536.8" y="467.0" width="86.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.8" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (62 samples, 1.21%)</title><rect x="536.8" y="451.0" width="14.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="539.8" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.04%)</title><rect x="536.8" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.8" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.04%)</title><rect x="537.3" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="540.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (56 samples, 1.09%)</title><rect x="537.7" y="435.0" width="12.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.7" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.04%)</title><rect x="537.9" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="540.9" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.14%)</title><rect x="538.4" y="419.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="541.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (7 samples, 0.14%)</title><rect x="538.4" y="403.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="541.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (38 samples, 0.74%)</title><rect x="540.0" y="419.0" width="8.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="543.0" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (37 samples, 0.72%)</title><rect x="540.3" y="403.0" width="8.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.3" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (7 samples, 0.14%)</title><rect x="541.4" y="387.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.4" y="398.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.04%)</title><rect x="543.7" y="387.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="546.7" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (2 samples, 0.04%)</title><rect x="544.2" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="547.2" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (18 samples, 0.35%)</title><rect x="544.6" y="387.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="547.6" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.06%)</title><rect x="545.8" y="371.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="548.8" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (10 samples, 0.20%)</title><rect x="546.5" y="371.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="549.5" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.06%)</title><rect x="548.8" y="419.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (5 samples, 0.10%)</title><rect x="549.5" y="419.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="552.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.06%)</title><rect x="549.9" y="403.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="552.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="550.6" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="553.6" y="446.0"></text>
</g>
<g>
<title>ip_output (312 samples, 6.09%)</title><rect x="551.1" y="451.0" width="71.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="554.1" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (304 samples, 5.93%)</title><rect x="551.5" y="435.0" width="70.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="554.5" y="446.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="552.2" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (299 samples, 5.83%)</title><rect x="552.7" y="419.0" width="68.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="555.7" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (275 samples, 5.37%)</title><rect x="553.8" y="403.0" width="63.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="556.8" y="414.0">__local..</text>
</g>
<g>
<title>do_softirq.part.21 (275 samples, 5.37%)</title><rect x="553.8" y="387.0" width="63.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="556.8" y="398.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (274 samples, 5.35%)</title><rect x="554.1" y="371.0" width="63.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="557.1" y="382.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (273 samples, 5.33%)</title><rect x="554.1" y="355.0" width="62.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.1" y="366.0">__soft..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.04%)</title><rect x="554.5" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="557.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (268 samples, 5.23%)</title><rect x="555.0" y="339.0" width="61.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="558.0" y="350.0">net_rx..</text>
</g>
<g>
<title>process_backlog (261 samples, 5.09%)</title><rect x="556.6" y="323.0" width="60.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="559.6" y="334.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (259 samples, 5.05%)</title><rect x="557.1" y="307.0" width="59.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="560.1" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (258 samples, 5.03%)</title><rect x="557.3" y="291.0" width="59.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="560.3" y="302.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 0.20%)</title><rect x="557.3" y="275.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="560.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (247 samples, 4.82%)</title><rect x="559.6" y="275.0" width="56.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="562.6" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (4 samples, 0.08%)</title><rect x="559.8" y="259.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="562.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (234 samples, 4.57%)</title><rect x="560.7" y="259.0" width="53.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.7" y="270.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (231 samples, 4.51%)</title><rect x="561.0" y="243.0" width="53.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="564.0" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (226 samples, 4.41%)</title><rect x="561.0" y="227.0" width="52.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="564.0" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (224 samples, 4.37%)</title><rect x="561.0" y="211.0" width="51.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="564.0" y="222.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (221 samples, 4.31%)</title><rect x="561.7" y="195.0" width="50.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="564.7" y="206.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="564.0" y="179.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="567.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="565.1" y="179.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="568.1" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="565.1" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="568.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (203 samples, 3.96%)</title><rect x="565.6" y="179.0" width="46.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="568.6" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.04%)</title><rect x="565.8" y="163.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="568.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (198 samples, 3.86%)</title><rect x="566.5" y="163.0" width="45.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="569.5" y="174.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.18%)</title><rect x="567.4" y="147.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="570.4" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.14%)</title><rect x="567.9" y="131.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.9" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="567.9" y="115.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.9" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.10%)</title><rect x="568.3" y="115.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="571.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.10%)</title><rect x="568.3" y="99.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="571.3" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="568.8" y="83.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (40 samples, 0.78%)</title><rect x="570.2" y="147.0" width="9.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="573.2" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.06%)</title><rect x="572.5" y="131.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="575.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (25 samples, 0.49%)</title><rect x="573.4" y="131.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="576.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.27%)</title><rect x="574.6" y="115.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="577.6" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="574.8" y="99.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.8" y="110.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.20%)</title><rect x="575.2" y="99.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="578.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.20%)</title><rect x="575.2" y="83.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="578.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.18%)</title><rect x="575.5" y="67.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="578.5" y="78.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.18%)</title><rect x="575.5" y="51.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.5" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.06%)</title><rect x="576.9" y="35.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="579.9" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.04%)</title><rect x="578.2" y="115.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="581.2" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.04%)</title><rect x="578.7" y="115.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="581.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (135 samples, 2.63%)</title><rect x="579.6" y="147.0" width="31.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="582.6" y="158.0">tc..</text>
</g>
<g>
<title>sock_def_readable (126 samples, 2.46%)</title><rect x="580.5" y="131.0" width="29.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.5" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (124 samples, 2.42%)</title><rect x="581.0" y="115.0" width="28.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="584.0" y="126.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (123 samples, 2.40%)</title><rect x="581.0" y="99.0" width="28.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.0" y="110.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (123 samples, 2.40%)</title><rect x="581.0" y="83.0" width="28.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="584.0" y="94.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.06%)</title><rect x="609.6" y="131.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="612.6" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.06%)</title><rect x="610.7" y="147.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.7" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="610.7" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="613.7" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.04%)</title><rect x="611.6" y="147.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="614.6" y="158.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.04%)</title><rect x="612.5" y="211.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="615.5" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.10%)</title><rect x="613.0" y="227.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="616.0" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.06%)</title><rect x="613.2" y="211.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="616.2" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.06%)</title><rect x="613.2" y="195.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.2" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.08%)</title><rect x="615.5" y="259.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="618.5" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (3 samples, 0.06%)</title><rect x="615.5" y="243.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="618.5" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.06%)</title><rect x="615.5" y="227.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="618.5" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.35%)</title><rect x="617.2" y="403.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="620.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.33%)</title><rect x="617.2" y="387.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="620.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.10%)</title><rect x="618.1" y="371.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.06%)</title><rect x="618.5" y="355.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="621.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.12%)</title><rect x="619.7" y="371.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="622.7" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.04%)</title><rect x="620.1" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="623.1" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.12%)</title><rect x="621.5" y="435.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="624.5" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="622.4" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="625.4" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="623.4" y="467.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="626.4" y="478.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.04%)</title><rect x="624.5" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="627.5" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.04%)</title><rect x="625.2" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="628.2" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="626.1" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.1" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.12%)</title><rect x="626.8" y="515.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.8" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.04%)</title><rect x="627.5" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="630.5" y="510.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.04%)</title><rect x="627.5" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="630.5" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.04%)</title><rect x="628.4" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="631.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.14%)</title><rect x="629.4" y="563.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="632.4" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="629.4" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="632.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.10%)</title><rect x="629.8" y="547.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="632.8" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="630.5" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="633.5" y="542.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.04%)</title><rect x="631.0" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="634.0" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.12%)</title><rect x="631.4" y="611.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.4" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="631.4" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="634.4" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.08%)</title><rect x="631.9" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.9" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.06%)</title><rect x="632.1" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="635.1" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.06%)</title><rect x="632.1" y="563.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="635.1" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.20%)</title><rect x="632.8" y="627.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="635.8" y="638.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.18%)</title><rect x="632.8" y="611.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="635.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.16%)</title><rect x="633.0" y="595.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.0" y="606.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.12%)</title><rect x="633.5" y="579.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="636.5" y="590.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="635.1" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="638.1" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="635.8" y="659.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.8" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="636.0" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.0" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="636.0" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.0" y="638.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (7 samples, 0.14%)</title><rect x="637.0" y="723.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.0" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (4 samples, 0.08%)</title><rect x="637.6" y="707.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.6" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (4 samples, 0.08%)</title><rect x="637.6" y="691.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.6" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (2 samples, 0.04%)</title><rect x="638.6" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.6" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (2 samples, 0.04%)</title><rect x="638.6" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.6" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (2 samples, 0.04%)</title><rect x="638.6" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="641.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (23 samples, 0.45%)</title><rect x="639.0" y="771.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (3 samples, 0.06%)</title><rect x="644.6" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (3 samples, 0.06%)</title><rect x="644.6" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.06%)</title><rect x="644.6" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (13 samples, 0.25%)</title><rect x="645.2" y="771.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (7 samples, 0.14%)</title><rect x="646.6" y="755.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.06%)</title><rect x="647.5" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (1,220 samples, 23.80%)</title><rect x="648.2" y="771.0" width="280.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.2" y="782.0">ru/mail/polis/service/codearound/TaskD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,210 samples, 23.61%)</title><rect x="648.2" y="755.0" width="278.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.2" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="650.8" y="739.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="653.8" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,189 samples, 23.20%)</title><rect x="651.5" y="739.0" width="273.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.5" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (793 samples, 15.47%)</title><rect x="653.3" y="723.0" width="182.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="656.3" y="734.0">Java_org_rocksdb_RocksDB..</text>
</g>
<g>
<title>__malloc (9 samples, 0.18%)</title><rect x="653.8" y="707.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="656.8" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.10%)</title><rect x="655.8" y="707.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="658.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="657.0" y="707.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="660.0" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.08%)</title><rect x="658.1" y="707.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="661.1" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.04%)</title><rect x="659.1" y="707.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="662.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="659.7" y="707.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="662.7" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (760 samples, 14.83%)</title><rect x="660.9" y="707.0" width="175.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="663.9" y="718.0">rocksdb_put_helper(JNI..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (5 samples, 0.10%)</title><rect x="661.6" y="691.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="664.6" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (11 samples, 0.21%)</title><rect x="663.2" y="691.0" width="2.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="666.2" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (9 samples, 0.18%)</title><rect x="665.7" y="691.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="668.7" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (5 samples, 0.10%)</title><rect x="666.4" y="675.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="669.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.23%)</title><rect x="667.8" y="691.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="670.8" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.14%)</title><rect x="668.7" y="675.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="671.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (709 samples, 13.83%)</title><rect x="670.8" y="691.0" width="163.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="673.8" y="702.0">rocksdb::DB::Put(rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="671.3" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="674.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.04%)</title><rect x="671.7" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="674.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (703 samples, 13.72%)</title><rect x="672.2" y="675.0" width="161.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="675.2" y="686.0">rocksdb::DBImpl::Put(..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (693 samples, 13.52%)</title><rect x="672.2" y="659.0" width="159.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="675.2" y="670.0">rocksdb::DB::Put(roc..</text>
</g>
<g>
<title>__libc_free (5 samples, 0.10%)</title><rect x="673.1" y="643.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="676.1" y="654.0"></text>
</g>
<g>
<title>operator delete(void*) (3 samples, 0.06%)</title><rect x="674.5" y="643.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="677.5" y="654.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (4 samples, 0.08%)</title><rect x="675.2" y="643.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="678.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (4 samples, 0.08%)</title><rect x="676.1" y="643.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="679.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (621 samples, 12.12%)</title><rect x="677.0" y="643.0" width="143.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="680.0" y="654.0">rocksdb::DBImpl::W..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (10 samples, 0.20%)</title><rect x="677.2" y="627.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="680.2" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.04%)</title><rect x="679.5" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="682.5" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.12%)</title><rect x="680.0" y="627.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="683.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (8 samples, 0.16%)</title><rect x="681.6" y="627.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="684.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) [clone .plt] (3 samples, 0.06%)</title><rect x="683.5" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="686.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (4 samples, 0.08%)</title><rect x="684.2" y="627.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="687.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (546 samples, 10.65%)</title><rect x="685.3" y="627.0" width="125.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="688.3" y="638.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="699.1" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="702.1" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.04%)</title><rect x="699.6" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="702.6" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.12%)</title><rect x="700.0" y="611.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="703.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.04%)</title><rect x="701.4" y="611.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="704.4" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.12%)</title><rect x="701.9" y="611.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="704.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (4 samples, 0.08%)</title><rect x="703.3" y="611.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="706.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) [clone .plt] (2 samples, 0.04%)</title><rect x="704.2" y="611.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="707.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (7 samples, 0.14%)</title><rect x="704.6" y="611.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="707.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.04%)</title><rect x="706.3" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="709.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (178 samples, 3.47%)</title><rect x="706.9" y="611.0" width="41.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="709.9" y="622.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (150 samples, 2.93%)</title><rect x="709.9" y="595.0" width="34.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="712.9" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (141 samples, 2.75%)</title><rect x="711.6" y="579.0" width="32.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="714.6" y="590.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (37 samples, 0.72%)</title><rect x="714.3" y="563.0" width="8.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="717.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (3 samples, 0.06%)</title><rect x="722.8" y="563.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="725.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="723.5" y="563.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="726.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (50 samples, 0.98%)</title><rect x="724.2" y="563.0" width="11.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="727.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="725.6" y="547.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="728.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (3 samples, 0.06%)</title><rect x="726.1" y="547.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="729.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (3 samples, 0.06%)</title><rect x="727.0" y="547.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="730.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (5 samples, 0.10%)</title><rect x="727.7" y="547.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="730.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (30 samples, 0.59%)</title><rect x="728.8" y="547.0" width="6.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="731.8" y="558.0"></text>
</g>
<g>
<title>__GI_write (5 samples, 0.10%)</title><rect x="731.1" y="531.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="734.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.16%)</title><rect x="732.3" y="531.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="735.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (4 samples, 0.08%)</title><rect x="734.1" y="531.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="737.1" y="542.0"></text>
</g>
<g>
<title>write@plt (2 samples, 0.04%)</title><rect x="735.3" y="531.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="738.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (5 samples, 0.10%)</title><rect x="736.2" y="563.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="739.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="737.3" y="563.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="740.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (27 samples, 0.53%)</title><rect x="737.8" y="563.0" width="6.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="740.8" y="574.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (8 samples, 0.16%)</title><rect x="738.5" y="547.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="741.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.04%)</title><rect x="740.6" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="743.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (10 samples, 0.20%)</title><rect x="741.0" y="547.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="744.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="743.3" y="547.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="746.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="744.0" y="579.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="747.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (2 samples, 0.04%)</title><rect x="744.5" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="747.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (9 samples, 0.18%)</title><rect x="745.2" y="595.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="748.2" y="606.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.04%)</title><rect x="747.2" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="750.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (3 samples, 0.06%)</title><rect x="747.9" y="611.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="750.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (17 samples, 0.33%)</title><rect x="748.9" y="611.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="751.9" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="749.3" y="595.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="752.3" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (12 samples, 0.23%)</title><rect x="750.0" y="595.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="753.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (3 samples, 0.06%)</title><rect x="752.8" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="755.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.04%)</title><rect x="753.5" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="756.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (3 samples, 0.06%)</title><rect x="753.9" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="756.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.06%)</title><rect x="754.6" y="611.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="757.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (194 samples, 3.79%)</title><rect x="755.5" y="611.0" width="44.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="758.5" y="622.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (187 samples, 3.65%)</title><rect x="756.7" y="595.0" width="43.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="759.7" y="606.0">rock..</text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (4 samples, 0.08%)</title><rect x="756.9" y="579.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="759.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (4 samples, 0.08%)</title><rect x="758.1" y="579.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="761.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (175 samples, 3.41%)</title><rect x="759.4" y="579.0" width="40.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="762.4" y="590.0">roc..</text>
</g>
<g>
<title>rocksdb::GetVarint32PtrFallback(char const*, char const*, unsigned int*) (3 samples, 0.06%)</title><rect x="762.7" y="563.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="765.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (147 samples, 2.87%)</title><rect x="763.6" y="563.0" width="33.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="766.6" y="574.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (3 samples, 0.06%)</title><rect x="763.8" y="547.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="766.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (3 samples, 0.06%)</title><rect x="764.5" y="547.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="767.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (139 samples, 2.71%)</title><rect x="765.4" y="547.0" width="32.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="768.4" y="558.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.06%)</title><rect x="766.4" y="531.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="769.4" y="542.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (17 samples, 0.33%)</title><rect x="767.0" y="531.0" width="4.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="770.0" y="542.0"></text>
</g>
<g>
<title>page_fault (11 samples, 0.21%)</title><rect x="768.4" y="515.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="771.4" y="526.0"></text>
</g>
<g>
<title>do_page_fault (11 samples, 0.21%)</title><rect x="768.4" y="499.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="771.4" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (11 samples, 0.21%)</title><rect x="768.4" y="483.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="771.4" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (8 samples, 0.16%)</title><rect x="769.1" y="467.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="772.1" y="478.0"></text>
</g>
<g>
<title>__handle_mm_fault (8 samples, 0.16%)</title><rect x="769.1" y="451.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="772.1" y="462.0"></text>
</g>
<g>
<title>alloc_pages_vma (6 samples, 0.12%)</title><rect x="769.1" y="435.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.1" y="446.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (5 samples, 0.10%)</title><rect x="769.3" y="419.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="772.3" y="430.0"></text>
</g>
<g>
<title>get_page_from_freelist (3 samples, 0.06%)</title><rect x="769.8" y="403.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="772.8" y="414.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.04%)</title><rect x="771.0" y="531.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="774.0" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) [clone .plt] (2 samples, 0.04%)</title><rect x="771.4" y="531.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="774.4" y="542.0"></text>
</g>
<g>
<title>memcpy@plt (2 samples, 0.04%)</title><rect x="772.1" y="531.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="775.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (98 samples, 1.91%)</title><rect x="773.3" y="531.0" width="22.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="776.3" y="542.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (11 samples, 0.21%)</title><rect x="775.8" y="515.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="778.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (5 samples, 0.10%)</title><rect x="776.9" y="499.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="779.9" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (65 samples, 1.27%)</title><rect x="778.3" y="515.0" width="15.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="781.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (55 samples, 1.07%)</title><rect x="778.8" y="499.0" width="12.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="781.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (13 samples, 0.25%)</title><rect x="785.7" y="483.0" width="3.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="788.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 0.21%)</title><rect x="786.2" y="467.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="789.2" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="786.6" y="451.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="789.6" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (5 samples, 0.10%)</title><rect x="787.1" y="451.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="790.1" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="788.2" y="451.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="791.2" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="788.9" y="483.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="791.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.18%)</title><rect x="789.4" y="483.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="792.4" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (7 samples, 0.14%)</title><rect x="789.6" y="467.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="792.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (5 samples, 0.10%)</title><rect x="792.1" y="499.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="795.1" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="792.8" y="483.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="795.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.04%)</title><rect x="793.5" y="515.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="796.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (5 samples, 0.10%)</title><rect x="794.0" y="515.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="797.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.06%)</title><rect x="794.4" y="499.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="797.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (3 samples, 0.06%)</title><rect x="795.1" y="515.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="798.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.04%)</title><rect x="795.8" y="531.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="798.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.06%)</title><rect x="796.7" y="531.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="799.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (8 samples, 0.16%)</title><rect x="797.7" y="563.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="800.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="799.7" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="802.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (3 samples, 0.06%)</title><rect x="800.2" y="611.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="803.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.06%)</title><rect x="800.2" y="595.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="803.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="800.2" y="579.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="803.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="800.2" y="563.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="803.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.06%)</title><rect x="800.2" y="547.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="803.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.04%)</title><rect x="800.4" y="531.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="803.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.04%)</title><rect x="800.4" y="515.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="803.4" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.04%)</title><rect x="800.4" y="499.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="803.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (4 samples, 0.08%)</title><rect x="800.9" y="611.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="803.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="801.8" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="804.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (6 samples, 0.12%)</title><rect x="802.3" y="611.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="805.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (12 samples, 0.23%)</title><rect x="803.7" y="611.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="806.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (4 samples, 0.08%)</title><rect x="806.4" y="611.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="809.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.06%)</title><rect x="807.3" y="611.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="808.3" y="611.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="811.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.04%)</title><rect x="808.3" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="811.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (4 samples, 0.08%)</title><rect x="809.2" y="611.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="812.2" y="622.0"></text>
</g>
<g>
<title>sched_yield (2 samples, 0.04%)</title><rect x="810.6" y="611.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="813.6" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="810.6" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="813.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="810.6" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="813.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) [clone .plt] (3 samples, 0.06%)</title><rect x="811.2" y="627.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="814.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.08%)</title><rect x="812.2" y="627.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="815.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.04%)</title><rect x="813.1" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="816.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="813.6" y="627.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="816.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (7 samples, 0.14%)</title><rect x="814.2" y="627.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="817.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.06%)</title><rect x="816.1" y="627.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="819.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.04%)</title><rect x="817.0" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="820.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (4 samples, 0.08%)</title><rect x="817.5" y="627.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="820.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.04%)</title><rect x="818.4" y="627.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="821.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) [clone .plt] (4 samples, 0.08%)</title><rect x="818.8" y="627.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="821.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.04%)</title><rect x="820.0" y="643.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="823.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.08%)</title><rect x="820.5" y="643.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="823.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (28 samples, 0.55%)</title><rect x="821.6" y="643.0" width="6.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="824.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.04%)</title><rect x="821.8" y="627.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="824.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (5 samples, 0.10%)</title><rect x="822.3" y="627.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="825.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.04%)</title><rect x="823.9" y="627.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="826.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (2 samples, 0.04%)</title><rect x="824.4" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="827.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.16%)</title><rect x="824.8" y="627.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="827.8" y="638.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (6 samples, 0.12%)</title><rect x="826.7" y="627.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="829.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="828.1" y="643.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="831.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.06%)</title><rect x="828.5" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="831.5" y="654.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.04%)</title><rect x="829.7" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="832.7" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (5 samples, 0.10%)</title><rect x="830.4" y="643.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="833.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.04%)</title><rect x="831.7" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="834.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="832.4" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="835.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="832.9" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="835.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.04%)</title><rect x="833.4" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="836.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (4 samples, 0.08%)</title><rect x="834.0" y="691.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="837.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="835.0" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="838.0" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.04%)</title><rect x="835.4" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="838.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (353 samples, 6.89%)</title><rect x="835.9" y="723.0" width="81.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="838.9" y="734.0">[unknown]</text>
</g>
<g>
<title>__GI_write (344 samples, 6.71%)</title><rect x="835.9" y="707.0" width="79.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="838.9" y="718.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (329 samples, 6.42%)</title><rect x="839.3" y="691.0" width="75.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.3" y="702.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.04%)</title><rect x="839.3" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="842.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (327 samples, 6.38%)</title><rect x="839.8" y="675.0" width="75.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="842.8" y="686.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_write (293 samples, 5.72%)</title><rect x="847.4" y="659.0" width="67.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.4" y="670.0">__x64_s..</text>
</g>
<g>
<title>ksys_write (290 samples, 5.66%)</title><rect x="847.9" y="643.0" width="66.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="850.9" y="654.0">ksys_wr..</text>
</g>
<g>
<title>__f_unlock_pos (2 samples, 0.04%)</title><rect x="848.3" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="851.3" y="638.0"></text>
</g>
<g>
<title>__fdget_pos (11 samples, 0.21%)</title><rect x="848.8" y="627.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="851.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.20%)</title><rect x="848.8" y="611.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="851.8" y="622.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.16%)</title><rect x="849.2" y="595.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="852.2" y="606.0"></text>
</g>
<g>
<title>vfs_write (272 samples, 5.31%)</title><rect x="852.0" y="627.0" width="62.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="855.0" y="638.0">vfs_wr..</text>
</g>
<g>
<title>__sb_start_write (6 samples, 0.12%)</title><rect x="852.7" y="611.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="855.7" y="622.0"></text>
</g>
<g>
<title>__vfs_write (249 samples, 4.86%)</title><rect x="854.1" y="611.0" width="57.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.1" y="622.0">__vfs_..</text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.04%)</title><rect x="854.1" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="857.1" y="606.0"></text>
</g>
<g>
<title>new_sync_write (247 samples, 4.82%)</title><rect x="854.5" y="595.0" width="56.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="857.5" y="606.0">new_sy..</text>
</g>
<g>
<title>ext4_file_write_iter (245 samples, 4.78%)</title><rect x="855.0" y="579.0" width="56.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="858.0" y="590.0">ext4_f..</text>
</g>
<g>
<title>__generic_file_write_iter (233 samples, 4.55%)</title><rect x="856.1" y="563.0" width="53.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="859.1" y="574.0">__gen..</text>
</g>
<g>
<title>file_update_time (22 samples, 0.43%)</title><rect x="857.3" y="547.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.3" y="558.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.08%)</title><rect x="858.0" y="531.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="861.0" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.04%)</title><rect x="858.4" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="861.4" y="526.0"></text>
</g>
<g>
<title>generic_update_time (13 samples, 0.25%)</title><rect x="858.9" y="531.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.9" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (13 samples, 0.25%)</title><rect x="858.9" y="515.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="861.9" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (12 samples, 0.23%)</title><rect x="859.1" y="499.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.1" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="859.1" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.1" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="859.1" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="862.1" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.06%)</title><rect x="859.6" y="483.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="862.6" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.06%)</title><rect x="859.6" y="467.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.6" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (7 samples, 0.14%)</title><rect x="860.3" y="483.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="863.3" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="860.5" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.5" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="860.5" y="451.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="863.5" y="462.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (4 samples, 0.08%)</title><rect x="861.0" y="467.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="864.0" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="861.2" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="864.2" y="462.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.04%)</title><rect x="861.2" y="435.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="864.2" y="446.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.04%)</title><rect x="861.2" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="864.2" y="430.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.04%)</title><rect x="861.9" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="864.9" y="542.0"></text>
</g>
<g>
<title>generic_perform_write (206 samples, 4.02%)</title><rect x="862.4" y="547.0" width="47.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="865.4" y="558.0">gene..</text>
</g>
<g>
<title>copyin (2 samples, 0.04%)</title><rect x="864.2" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="867.2" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (70 samples, 1.37%)</title><rect x="864.7" y="531.0" width="16.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="867.7" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (22 samples, 0.43%)</title><rect x="865.8" y="515.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="868.8" y="526.0"></text>
</g>
<g>
<title>ext4_journal_check_start (4 samples, 0.08%)</title><rect x="865.8" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="868.8" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (18 samples, 0.35%)</title><rect x="866.7" y="499.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="869.7" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (10 samples, 0.20%)</title><rect x="867.0" y="483.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="870.0" y="494.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.10%)</title><rect x="869.7" y="483.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="872.7" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (4 samples, 0.08%)</title><rect x="870.0" y="467.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="873.0" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (12 samples, 0.23%)</title><rect x="870.9" y="515.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="873.9" y="526.0"></text>
</g>
<g>
<title>clean_bdev_aliases (3 samples, 0.06%)</title><rect x="872.5" y="499.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="875.5" y="510.0"></text>
</g>
<g>
<title>pagevec_lookup_range (3 samples, 0.06%)</title><rect x="872.5" y="483.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="875.5" y="494.0"></text>
</g>
<g>
<title>find_get_pages_range (3 samples, 0.06%)</title><rect x="872.5" y="467.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="875.5" y="478.0"></text>
</g>
<g>
<title>xas_find (2 samples, 0.04%)</title><rect x="872.7" y="451.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="875.7" y="462.0"></text>
</g>
<g>
<title>create_empty_buffers (2 samples, 0.04%)</title><rect x="873.2" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="876.2" y="510.0"></text>
</g>
<g>
<title>ext4_nonda_switch (4 samples, 0.08%)</title><rect x="873.6" y="515.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="876.6" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (23 samples, 0.45%)</title><rect x="874.6" y="515.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="877.6" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (22 samples, 0.43%)</title><rect x="874.6" y="499.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="877.6" y="510.0"></text>
</g>
<g>
<title>__page_cache_alloc (2 samples, 0.04%)</title><rect x="875.3" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="878.3" y="494.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.04%)</title><rect x="875.3" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="878.3" y="478.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.04%)</title><rect x="875.3" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="878.3" y="462.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.04%)</title><rect x="875.3" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="878.3" y="446.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (6 samples, 0.12%)</title><rect x="875.7" y="483.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="878.7" y="494.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (2 samples, 0.04%)</title><rect x="875.7" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="878.7" y="478.0"></text>
</g>
<g>
<title>lru_cache_add (3 samples, 0.06%)</title><rect x="876.2" y="467.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="879.2" y="478.0"></text>
</g>
<g>
<title>__lru_cache_add (3 samples, 0.06%)</title><rect x="876.2" y="451.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="879.2" y="462.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (3 samples, 0.06%)</title><rect x="876.2" y="435.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="879.2" y="446.0"></text>
</g>
<g>
<title>find_get_entry (9 samples, 0.18%)</title><rect x="877.1" y="483.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="880.1" y="494.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.10%)</title><rect x="877.6" y="467.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="880.6" y="478.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.04%)</title><rect x="878.7" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="881.7" y="478.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.04%)</title><rect x="880.3" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.3" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (111 samples, 2.17%)</title><rect x="880.8" y="531.0" width="25.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="883.8" y="542.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (14 samples, 0.27%)</title><rect x="880.8" y="515.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="883.8" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (13 samples, 0.25%)</title><rect x="881.0" y="499.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.0" y="510.0"></text>
</g>
<g>
<title>__wake_up (5 samples, 0.10%)</title><rect x="881.7" y="483.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="884.7" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.08%)</title><rect x="881.7" y="467.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="884.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="881.7" y="451.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="884.7" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.10%)</title><rect x="882.9" y="483.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="885.9" y="494.0"></text>
</g>
<g>
<title>generic_write_end (97 samples, 1.89%)</title><rect x="884.0" y="515.0" width="22.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.0" y="526.0">g..</text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.04%)</title><rect x="884.7" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="887.7" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (85 samples, 1.66%)</title><rect x="885.2" y="499.0" width="19.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="888.2" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (82 samples, 1.60%)</title><rect x="885.4" y="483.0" width="18.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="888.4" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (77 samples, 1.50%)</title><rect x="886.3" y="467.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="889.3" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.10%)</title><rect x="886.3" y="451.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="889.3" y="462.0"></text>
</g>
<g>
<title>ext4_journal_check_start (3 samples, 0.06%)</title><rect x="886.5" y="435.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.5" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.04%)</title><rect x="887.5" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="890.5" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (67 samples, 1.31%)</title><rect x="888.2" y="451.0" width="15.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="891.2" y="462.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="888.4" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="891.4" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (48 samples, 0.94%)</title><rect x="889.1" y="435.0" width="11.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="892.1" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="890.2" y="419.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="893.2" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (39 samples, 0.76%)</title><rect x="890.7" y="419.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="893.7" y="430.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (3 samples, 0.06%)</title><rect x="893.4" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="896.4" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (15 samples, 0.29%)</title><rect x="894.6" y="403.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="897.6" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (15 samples, 0.29%)</title><rect x="894.6" y="387.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.6" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (10 samples, 0.20%)</title><rect x="895.7" y="371.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="898.7" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (8 samples, 0.16%)</title><rect x="896.2" y="355.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.2" y="366.0"></text>
</g>
<g>
<title>from_kprojid (3 samples, 0.06%)</title><rect x="898.3" y="403.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="901.3" y="414.0"></text>
</g>
<g>
<title>map_id_up (3 samples, 0.06%)</title><rect x="898.3" y="387.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="901.3" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.04%)</title><rect x="899.7" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="902.7" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (15 samples, 0.29%)</title><rect x="900.1" y="435.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="903.1" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (9 samples, 0.18%)</title><rect x="900.1" y="419.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="903.1" y="430.0"></text>
</g>
<g>
<title>__getblk_gfp (4 samples, 0.08%)</title><rect x="901.0" y="403.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="904.0" y="414.0"></text>
</g>
<g>
<title>__find_get_block (4 samples, 0.08%)</title><rect x="901.0" y="387.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="904.0" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (3 samples, 0.06%)</title><rect x="902.2" y="419.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="905.2" y="430.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (2 samples, 0.04%)</title><rect x="902.4" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="905.4" y="414.0"></text>
</g>
<g>
<title>ext4_inode_table (3 samples, 0.06%)</title><rect x="902.9" y="419.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="905.9" y="430.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="903.6" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="906.6" y="462.0"></text>
</g>
<g>
<title>block_write_end (7 samples, 0.14%)</title><rect x="904.7" y="499.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="907.7" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (6 samples, 0.12%)</title><rect x="904.7" y="483.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.7" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (6 samples, 0.12%)</title><rect x="904.7" y="467.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="907.7" y="478.0"></text>
</g>
<g>
<title>__set_page_dirty (5 samples, 0.10%)</title><rect x="905.0" y="451.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="908.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.10%)</title><rect x="905.0" y="435.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="908.0" y="446.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="906.6" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="909.6" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (7 samples, 0.14%)</title><rect x="907.0" y="531.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="910.0" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.08%)</title><rect x="907.5" y="515.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="910.5" y="526.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (5 samples, 0.10%)</title><rect x="908.6" y="531.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="911.6" y="542.0"></text>
</g>
<g>
<title>ext4_write_checks (5 samples, 0.10%)</title><rect x="909.8" y="563.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="912.8" y="574.0"></text>
</g>
<g>
<title>generic_write_checks (3 samples, 0.06%)</title><rect x="910.3" y="547.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="913.3" y="558.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.04%)</title><rect x="910.9" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.9" y="574.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.08%)</title><rect x="911.4" y="611.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="914.4" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.20%)</title><rect x="912.3" y="611.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="915.3" y="622.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.18%)</title><rect x="912.6" y="595.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="915.6" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.16%)</title><rect x="912.6" y="579.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="915.6" y="590.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.16%)</title><rect x="912.6" y="563.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="915.6" y="574.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.04%)</title><rect x="913.9" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="916.9" y="558.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.06%)</title><rect x="915.3" y="707.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="918.3" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (5 samples, 0.10%)</title><rect x="916.0" y="707.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="919.0" y="718.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.06%)</title><rect x="917.4" y="723.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="920.4" y="734.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (16 samples, 0.31%)</title><rect x="918.1" y="723.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="921.1" y="734.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (4 samples, 0.08%)</title><rect x="921.8" y="723.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="924.8" y="734.0"></text>
</g>
<g>
<title>memset@plt (2 samples, 0.04%)</title><rect x="923.4" y="723.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="926.4" y="734.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.08%)</title><rect x="923.8" y="723.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="926.8" y="734.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.04%)</title><rect x="924.8" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="927.8" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.14%)</title><rect x="925.2" y="739.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="928.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (7 samples, 0.14%)</title><rect x="926.8" y="755.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (4 samples, 0.08%)</title><rect x="927.5" y="739.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (3 samples, 0.06%)</title><rect x="928.4" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.06%)</title><rect x="928.4" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="928.4" y="723.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.4" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.06%)</title><rect x="928.4" y="707.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="931.4" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.06%)</title><rect x="928.4" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="931.4" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.06%)</title><rect x="928.4" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="931.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="928.4" y="659.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="931.4" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="928.7" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="931.7" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,021 samples, 19.92%)</title><rect x="929.1" y="899.0" width="235.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.1" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (8 samples, 0.16%)</title><rect x="931.2" y="883.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="934.2" y="894.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.04%)</title><rect x="933.0" y="883.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="936.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (225 samples, 4.39%)</title><rect x="933.7" y="883.0" width="51.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.7" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (216 samples, 4.21%)</title><rect x="935.8" y="867.0" width="49.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="938.8" y="878.0">one/n..</text>
</g>
<g>
<title>JVM_IHashCode (122 samples, 2.38%)</title><rect x="937.9" y="851.0" width="28.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="940.9" y="862.0">JV..</text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.06%)</title><rect x="938.1" y="835.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="941.1" y="846.0"></text>
</g>
<g>
<title>epoll_wait (118 samples, 2.30%)</title><rect x="938.8" y="835.0" width="27.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="941.8" y="846.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (113 samples, 2.20%)</title><rect x="940.0" y="819.0" width="26.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="943.0" y="830.0">e..</text>
</g>
<g>
<title>do_syscall_64 (113 samples, 2.20%)</title><rect x="940.0" y="803.0" width="26.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="943.0" y="814.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (98 samples, 1.91%)</title><rect x="942.9" y="787.0" width="22.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="945.9" y="798.0">_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="943.4" y="771.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.4" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (92 samples, 1.80%)</title><rect x="943.9" y="771.0" width="21.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="946.9" y="782.0">d..</text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="944.3" y="755.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="947.3" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="944.3" y="739.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="947.3" y="750.0"></text>
</g>
<g>
<title>ep_poll (84 samples, 1.64%)</title><rect x="945.3" y="755.0" width="19.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="948.3" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (67 samples, 1.31%)</title><rect x="947.1" y="739.0" width="15.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="950.1" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (47 samples, 0.92%)</title><rect x="950.5" y="723.0" width="10.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.5" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (37 samples, 0.72%)</title><rect x="952.2" y="707.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.2" y="718.0"></text>
</g>
<g>
<title>sock_poll (28 samples, 0.55%)</title><rect x="953.8" y="691.0" width="6.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="956.8" y="702.0"></text>
</g>
<g>
<title>tcp_poll (20 samples, 0.39%)</title><rect x="955.4" y="675.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="958.4" y="686.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="960.2" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.2" y="702.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.06%)</title><rect x="960.7" y="707.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="963.7" y="718.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.10%)</title><rect x="961.4" y="723.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.4" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.06%)</title><rect x="962.5" y="739.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="965.5" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.10%)</title><rect x="963.4" y="739.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="966.4" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.10%)</title><rect x="963.4" y="723.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="966.4" y="734.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="963.7" y="707.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="966.7" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="964.1" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="967.1" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="964.1" y="675.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="967.1" y="686.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="965.1" y="771.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="968.1" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.04%)</title><rect x="965.5" y="787.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="968.5" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (9 samples, 0.18%)</title><rect x="966.0" y="851.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="969.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 1.44%)</title><rect x="968.0" y="851.0" width="17.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="971.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="968.0" y="835.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="971.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="968.0" y="819.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="971.0" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="968.0" y="803.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="971.0" y="814.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.16%)</title><rect x="968.7" y="803.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="971.7" y="814.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.14%)</title><rect x="969.0" y="787.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="972.0" y="798.0"></text>
</g>
<g>
<title>epoll_wait (61 samples, 1.19%)</title><rect x="971.0" y="835.0" width="14.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="974.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 1.13%)</title><rect x="971.7" y="819.0" width="13.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="974.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 1.11%)</title><rect x="972.0" y="803.0" width="13.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="975.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (46 samples, 0.90%)</title><rect x="974.3" y="787.0" width="10.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="977.3" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (44 samples, 0.86%)</title><rect x="974.5" y="771.0" width="10.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="977.5" y="782.0"></text>
</g>
<g>
<title>ep_poll (41 samples, 0.80%)</title><rect x="975.0" y="755.0" width="9.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="978.0" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (28 samples, 0.55%)</title><rect x="976.3" y="739.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="979.3" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.33%)</title><rect x="977.5" y="723.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="980.5" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (9 samples, 0.18%)</title><rect x="978.9" y="707.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="981.9" y="718.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.14%)</title><rect x="979.3" y="691.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="982.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.08%)</title><rect x="980.0" y="675.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="983.0" y="686.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="980.9" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="983.9" y="718.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.12%)</title><rect x="981.4" y="723.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.4" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.10%)</title><rect x="983.2" y="739.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="986.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.08%)</title><rect x="983.5" y="723.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="986.5" y="734.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="983.5" y="707.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="986.5" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.08%)</title><rect x="983.5" y="691.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="986.5" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.06%)</title><rect x="983.7" y="675.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="986.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (772 samples, 15.06%)</title><rect x="985.5" y="883.0" width="177.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.5" y="894.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="986.7" y="867.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="989.7" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="986.9" y="851.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="989.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.06%)</title><rect x="986.9" y="835.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="989.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.04%)</title><rect x="986.9" y="819.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="989.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (763 samples, 14.89%)</title><rect x="987.6" y="867.0" width="175.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.6" y="878.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (518 samples, 10.11%)</title><rect x="988.1" y="851.0" width="119.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.1" y="862.0">one/nio/http/Ht..</text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="989.7" y="835.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="992.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (381 samples, 7.43%)</title><rect x="990.1" y="835.0" width="87.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.1" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (373 samples, 7.28%)</title><rect x="992.0" y="819.0" width="85.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="995.0" y="830.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (338 samples, 6.60%)</title><rect x="992.5" y="803.0" width="77.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.5" y="814.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="992.9" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="995.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (33 samples, 0.64%)</title><rect x="993.6" y="787.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (33 samples, 0.64%)</title><rect x="993.6" y="771.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="996.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.18%)</title><rect x="995.7" y="755.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.18%)</title><rect x="995.7" y="739.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.08%)</title><rect x="997.7" y="755.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1000.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.08%)</title><rect x="997.7" y="739.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1000.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="998.9" y="755.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1001.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.14%)</title><rect x="999.4" y="755.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="1000.3" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="1000.3" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="1000.3" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (300 samples, 5.85%)</title><rect x="1001.2" y="787.0" width="69.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.2" y="798.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (29 samples, 0.57%)</title><rect x="1003.3" y="771.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (19 samples, 0.37%)</title><rect x="1005.1" y="755.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (19 samples, 0.37%)</title><rect x="1005.1" y="739.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="1009.5" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="1009.5" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.10%)</title><rect x="1009.9" y="771.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="1010.2" y="755.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1013.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.08%)</title><rect x="1010.2" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (257 samples, 5.01%)</title><rect x="1011.1" y="771.0" width="59.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.1" y="782.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (257 samples, 5.01%)</title><rect x="1011.1" y="755.0" width="59.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.1" y="766.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (223 samples, 4.35%)</title><rect x="1018.7" y="739.0" width="51.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.7" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="1018.7" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="1018.7" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (220 samples, 4.29%)</title><rect x="1019.4" y="723.0" width="50.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.4" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (220 samples, 4.29%)</title><rect x="1019.4" y="707.0" width="50.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.4" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (220 samples, 4.29%)</title><rect x="1019.4" y="691.0" width="50.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.4" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (220 samples, 4.29%)</title><rect x="1019.4" y="675.0" width="50.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.4" y="686.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (204 samples, 3.98%)</title><rect x="1023.1" y="659.0" width="46.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1026.1" y="670.0">jdk/..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.06%)</title><rect x="1024.0" y="643.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1027.0" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (36 samples, 0.70%)</title><rect x="1024.9" y="643.0" width="8.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1027.9" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.08%)</title><rect x="1026.3" y="627.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1029.3" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.10%)</title><rect x="1027.2" y="627.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1030.2" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.06%)</title><rect x="1028.4" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1031.4" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (9 samples, 0.18%)</title><rect x="1029.1" y="627.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1032.1" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.04%)</title><rect x="1031.1" y="627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1034.1" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.08%)</title><rect x="1031.6" y="627.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1034.6" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="1032.5" y="627.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1035.5" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (154 samples, 3.00%)</title><rect x="1033.2" y="643.0" width="35.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1036.2" y="654.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (146 samples, 2.85%)</title><rect x="1035.0" y="627.0" width="33.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1038.0" y="638.0">en..</text>
</g>
<g>
<title>do_syscall_64 (144 samples, 2.81%)</title><rect x="1035.5" y="611.0" width="33.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1038.5" y="622.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (123 samples, 2.40%)</title><rect x="1039.9" y="595.0" width="28.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1042.9" y="606.0">__..</text>
</g>
<g>
<title>do_futex (122 samples, 2.38%)</title><rect x="1040.1" y="579.0" width="28.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.1" y="590.0">do..</text>
</g>
<g>
<title>futex_wake (116 samples, 2.26%)</title><rect x="1040.8" y="563.0" width="26.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1043.8" y="574.0">f..</text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.08%)</title><rect x="1041.7" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.7" y="558.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.04%)</title><rect x="1042.2" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1045.2" y="542.0"></text>
</g>
<g>
<title>wake_up_q (108 samples, 2.11%)</title><rect x="1042.6" y="547.0" width="24.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1045.6" y="558.0">w..</text>
</g>
<g>
<title>try_to_wake_up (107 samples, 2.09%)</title><rect x="1042.9" y="531.0" width="24.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1045.9" y="542.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (107 samples, 2.09%)</title><rect x="1042.9" y="515.0" width="24.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1045.9" y="526.0">_..</text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="1067.5" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1070.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="1068.7" y="643.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1071.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (32 samples, 0.62%)</title><rect x="1070.3" y="803.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (32 samples, 0.62%)</title><rect x="1070.3" y="787.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.23%)</title><rect x="1070.3" y="771.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.3" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1072.6" y="755.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1075.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (20 samples, 0.39%)</title><rect x="1073.0" y="771.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (20 samples, 0.39%)</title><rect x="1073.0" y="755.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1076.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (20 samples, 0.39%)</title><rect x="1073.0" y="739.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.0" y="750.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (7 samples, 0.14%)</title><rect x="1074.0" y="723.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.0" y="734.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.18%)</title><rect x="1075.6" y="723.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1078.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (42 samples, 0.82%)</title><rect x="1077.9" y="835.0" width="9.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1080.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.08%)</title><rect x="1078.6" y="819.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.20%)</title><rect x="1079.5" y="819.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.20%)</title><rect x="1079.5" y="803.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.20%)</title><rect x="1079.5" y="787.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1082.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.20%)</title><rect x="1079.5" y="771.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="1081.1" y="755.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1084.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.35%)</title><rect x="1081.8" y="819.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.35%)</title><rect x="1081.8" y="803.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (7 samples, 0.14%)</title><rect x="1085.9" y="819.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (22 samples, 0.43%)</title><rect x="1087.5" y="835.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.5" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.10%)</title><rect x="1087.5" y="819.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.5" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.10%)</title><rect x="1087.5" y="803.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1090.5" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.10%)</title><rect x="1087.5" y="787.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1090.5" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.10%)</title><rect x="1087.5" y="771.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1090.5" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.06%)</title><rect x="1088.0" y="755.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1091.0" y="766.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.04%)</title><rect x="1088.2" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1091.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (17 samples, 0.33%)</title><rect x="1088.7" y="819.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.08%)</title><rect x="1091.2" y="803.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.08%)</title><rect x="1091.2" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1094.2" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1092.1" y="803.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1095.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.45%)</title><rect x="1092.6" y="835.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (19 samples, 0.37%)</title><rect x="1093.3" y="819.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (19 samples, 0.37%)</title><rect x="1093.3" y="803.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (41 samples, 0.80%)</title><rect x="1097.9" y="835.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.39%)</title><rect x="1102.7" y="819.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1105.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (243 samples, 4.74%)</title><rect x="1107.3" y="851.0" width="56.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1110.3" y="862.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (236 samples, 4.60%)</title><rect x="1109.0" y="835.0" width="54.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.0" y="846.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (46 samples, 0.90%)</title><rect x="1111.5" y="819.0" width="10.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1114.5" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.14%)</title><rect x="1113.3" y="803.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.3" y="814.0"></text>
</g>
<g>
<title>__memmove_ssse3 (11 samples, 0.21%)</title><rect x="1115.2" y="803.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1118.2" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (13 samples, 0.25%)</title><rect x="1117.7" y="803.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1120.7" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="1118.9" y="787.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1121.9" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.08%)</title><rect x="1119.3" y="787.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.3" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="1120.2" y="787.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1123.2" y="798.0"></text>
</g>
<g>
<title>memmove@plt (4 samples, 0.08%)</title><rect x="1120.7" y="803.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1123.7" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.04%)</title><rect x="1121.6" y="803.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.6" y="814.0"></text>
</g>
<g>
<title>__GI___recv (168 samples, 3.28%)</title><rect x="1122.1" y="819.0" width="38.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1125.1" y="830.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (152 samples, 2.97%)</title><rect x="1125.8" y="803.0" width="35.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1128.8" y="814.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.04%)</title><rect x="1125.8" y="787.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (150 samples, 2.93%)</title><rect x="1126.2" y="787.0" width="34.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1129.2" y="798.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (113 samples, 2.20%)</title><rect x="1134.7" y="771.0" width="26.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.7" y="782.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (111 samples, 2.17%)</title><rect x="1134.7" y="755.0" width="25.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1137.7" y="766.0">_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="1136.1" y="739.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1139.1" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (94 samples, 1.83%)</title><rect x="1137.0" y="739.0" width="21.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.0" y="750.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="1138.0" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1141.0" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (80 samples, 1.56%)</title><rect x="1138.4" y="723.0" width="18.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.4" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="1139.1" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1142.1" y="718.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="1139.6" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1142.6" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (71 samples, 1.39%)</title><rect x="1140.5" y="707.0" width="16.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1143.5" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="1143.3" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1146.3" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="1144.2" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1147.2" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="1145.1" y="691.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1148.1" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (24 samples, 0.47%)</title><rect x="1145.6" y="691.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.6" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (23 samples, 0.45%)</title><rect x="1145.6" y="675.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1148.6" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (20 samples, 0.39%)</title><rect x="1146.3" y="659.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1149.3" y="670.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.14%)</title><rect x="1146.3" y="643.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.3" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="1147.2" y="627.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1150.2" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="1147.9" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.9" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (11 samples, 0.21%)</title><rect x="1148.3" y="643.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1151.3" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.20%)</title><rect x="1148.3" y="627.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1151.3" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (19 samples, 0.37%)</title><rect x="1151.1" y="691.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1154.1" y="702.0"></text>
</g>
<g>
<title>tcp_send_ack (15 samples, 0.29%)</title><rect x="1152.0" y="675.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.0" y="686.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (15 samples, 0.29%)</title><rect x="1152.0" y="659.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1155.0" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (15 samples, 0.29%)</title><rect x="1152.0" y="643.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1155.0" y="654.0"></text>
</g>
<g>
<title>ip_queue_xmit (15 samples, 0.29%)</title><rect x="1152.0" y="627.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1155.0" y="638.0"></text>
</g>
<g>
<title>__ip_queue_xmit (15 samples, 0.29%)</title><rect x="1152.0" y="611.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.0" y="622.0"></text>
</g>
<g>
<title>ip_local_out (15 samples, 0.29%)</title><rect x="1152.0" y="595.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.0" y="606.0"></text>
</g>
<g>
<title>ip_output (14 samples, 0.27%)</title><rect x="1152.2" y="579.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1155.2" y="590.0"></text>
</g>
<g>
<title>ip_finish_output (13 samples, 0.25%)</title><rect x="1152.2" y="563.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1155.2" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (11 samples, 0.21%)</title><rect x="1152.7" y="547.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1155.7" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 0.16%)</title><rect x="1152.7" y="531.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.7" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.21 (8 samples, 0.16%)</title><rect x="1152.7" y="515.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.7" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (8 samples, 0.16%)</title><rect x="1152.7" y="499.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1155.7" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (8 samples, 0.16%)</title><rect x="1152.7" y="483.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1155.7" y="494.0"></text>
</g>
<g>
<title>net_rx_action (8 samples, 0.16%)</title><rect x="1152.7" y="467.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.7" y="478.0"></text>
</g>
<g>
<title>process_backlog (8 samples, 0.16%)</title><rect x="1152.7" y="451.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.7" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb (8 samples, 0.16%)</title><rect x="1152.7" y="435.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1155.7" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (8 samples, 0.16%)</title><rect x="1152.7" y="419.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.7" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="1152.7" y="403.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.7" y="414.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 0.12%)</title><rect x="1153.2" y="403.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1156.2" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 0.12%)</title><rect x="1153.2" y="387.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1156.2" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 0.12%)</title><rect x="1153.2" y="371.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.2" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 0.12%)</title><rect x="1153.2" y="355.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.2" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.10%)</title><rect x="1153.2" y="339.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.2" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.10%)</title><rect x="1153.2" y="323.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1156.2" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.08%)</title><rect x="1153.4" y="307.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1156.4" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.08%)</title><rect x="1153.4" y="291.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1156.4" y="302.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.06%)</title><rect x="1153.6" y="275.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1156.6" y="286.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.06%)</title><rect x="1153.6" y="259.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1156.6" y="270.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="1153.6" y="243.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1156.6" y="254.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="1153.6" y="227.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1156.6" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.06%)</title><rect x="1154.5" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.5" y="542.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.06%)</title><rect x="1154.5" y="515.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1157.5" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.10%)</title><rect x="1155.5" y="691.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1158.5" y="702.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="1155.7" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1158.7" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="1156.2" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1159.2" y="686.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="1156.2" y="659.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.2" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.14%)</title><rect x="1156.8" y="723.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1159.8" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.12%)</title><rect x="1157.1" y="707.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.1" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.12%)</title><rect x="1157.1" y="691.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1160.1" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.10%)</title><rect x="1157.3" y="675.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1160.3" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.14%)</title><rect x="1158.7" y="739.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1161.7" y="750.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.14%)</title><rect x="1158.7" y="723.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1161.7" y="734.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.14%)</title><rect x="1158.7" y="707.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1161.7" y="718.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.10%)</title><rect x="1159.1" y="691.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.1" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.08%)</title><rect x="1160.8" y="819.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1163.8" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.12%)</title><rect x="1161.9" y="819.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1164.9" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.08%)</title><rect x="1163.3" y="883.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.3" y="894.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="1163.8" y="867.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1166.8" y="878.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="1163.8" y="851.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1166.8" y="862.0"></text>
</g>
<g>
<title>start_thread (105 samples, 2.05%)</title><rect x="1164.2" y="899.0" width="24.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1167.2" y="910.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (105 samples, 2.05%)</title><rect x="1164.2" y="883.0" width="24.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1167.2" y="894.0">t..</text>
</g>
<g>
<title>Thread::call_run() (105 samples, 2.05%)</title><rect x="1164.2" y="867.0" width="24.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.2" y="878.0">T..</text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.10%)</title><rect x="1164.2" y="851.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.2" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.10%)</title><rect x="1164.2" y="835.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.2" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.06%)</title><rect x="1164.2" y="819.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.2" y="830.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.06%)</title><rect x="1164.2" y="803.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1167.2" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.04%)</title><rect x="1164.9" y="819.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.9" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1164.9" y="803.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.9" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1164.9" y="787.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.9" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1164.9" y="771.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.9" y="782.0"></text>
</g>
<g>
<title>JavaThread::run() (95 samples, 1.85%)</title><rect x="1165.4" y="851.0" width="21.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.4" y="862.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (95 samples, 1.85%)</title><rect x="1165.4" y="835.0" width="21.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.4" y="846.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (94 samples, 1.83%)</title><rect x="1165.4" y="819.0" width="21.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.4" y="830.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (94 samples, 1.83%)</title><rect x="1165.4" y="803.0" width="21.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.4" y="814.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (94 samples, 1.83%)</title><rect x="1165.4" y="787.0" width="21.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.4" y="798.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (57 samples, 1.11%)</title><rect x="1165.4" y="771.0" width="13.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.4" y="782.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.06%)</title><rect x="1165.6" y="755.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.6" y="766.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.08%)</title><rect x="1166.3" y="755.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.3" y="766.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.06%)</title><rect x="1166.5" y="739.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.5" y="750.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (2 samples, 0.04%)</title><rect x="1166.7" y="723.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.7" y="734.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.04%)</title><rect x="1166.7" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.7" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 0.10%)</title><rect x="1167.2" y="755.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.2" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (5 samples, 0.10%)</title><rect x="1167.2" y="739.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.2" y="750.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.06%)</title><rect x="1167.7" y="723.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.7" y="734.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.04%)</title><rect x="1167.9" y="707.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.9" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (44 samples, 0.86%)</title><rect x="1168.4" y="755.0" width="10.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.4" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.04%)</title><rect x="1168.8" y="739.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.8" y="750.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.04%)</title><rect x="1168.8" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.8" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.06%)</title><rect x="1169.3" y="739.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.3" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (7 samples, 0.14%)</title><rect x="1170.0" y="739.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.0" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (2 samples, 0.04%)</title><rect x="1171.1" y="723.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.1" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (9 samples, 0.18%)</title><rect x="1171.6" y="739.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.6" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.08%)</title><rect x="1172.3" y="723.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.3" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.04%)</title><rect x="1173.2" y="723.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.2" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.06%)</title><rect x="1174.1" y="739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.1" y="750.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="1174.3" y="723.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.3" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 0.10%)</title><rect x="1175.3" y="739.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.3" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.06%)</title><rect x="1175.5" y="723.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.5" y="734.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 0.06%)</title><rect x="1176.4" y="739.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.4" y="750.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (3 samples, 0.06%)</title><rect x="1176.4" y="723.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.4" y="734.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (2 samples, 0.04%)</title><rect x="1176.4" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.4" y="718.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.08%)</title><rect x="1177.3" y="739.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.3" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (31 samples, 0.60%)</title><rect x="1178.5" y="771.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.5" y="782.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (15 samples, 0.29%)</title><rect x="1178.7" y="755.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.7" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (15 samples, 0.29%)</title><rect x="1178.7" y="739.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.7" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.04%)</title><rect x="1178.7" y="723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.7" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.04%)</title><rect x="1179.2" y="723.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.2" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.12%)</title><rect x="1179.6" y="723.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.6" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (6 samples, 0.12%)</title><rect x="1179.6" y="707.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.6" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (6 samples, 0.12%)</title><rect x="1179.6" y="691.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.6" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (6 samples, 0.12%)</title><rect x="1179.6" y="675.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.6" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.04%)</title><rect x="1181.3" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.3" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.04%)</title><rect x="1181.7" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.7" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.04%)</title><rect x="1181.7" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.7" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (8 samples, 0.16%)</title><rect x="1182.9" y="755.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.9" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.08%)</title><rect x="1183.1" y="739.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.1" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 0.08%)</title><rect x="1183.1" y="723.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.1" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (4 samples, 0.08%)</title><rect x="1183.1" y="707.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.1" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.06%)</title><rect x="1184.7" y="755.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.7" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.06%)</title><rect x="1184.7" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.7" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1185.9" y="771.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.10%)</title><rect x="1185.9" y="755.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.10%)</title><rect x="1185.9" y="739.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.10%)</title><rect x="1185.9" y="723.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.08%)</title><rect x="1186.1" y="707.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.08%)</title><rect x="1186.1" y="691.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.1" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1186.1" y="675.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.1" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1186.1" y="659.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1186.1" y="643.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1186.1" y="627.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1186.1" y="611.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1186.1" y="595.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1186.1" y="579.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.1" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1186.1" y="563.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1186.1" y="547.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1186.1" y="531.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1186.1" y="515.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1186.1" y="499.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.1" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1186.1" y="483.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.1" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1186.1" y="467.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1186.1" y="451.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1186.1" y="435.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1186.1" y="419.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1186.3" y="403.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1186.3" y="387.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.3" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1186.3" y="371.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1186.3" y="355.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1186.3" y="339.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.3" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1186.3" y="323.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.3" y="334.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.06%)</title><rect x="1187.2" y="851.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.2" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.06%)</title><rect x="1187.2" y="835.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.2" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (3 samples, 0.06%)</title><rect x="1187.2" y="819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.2" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.06%)</title><rect x="1187.2" y="803.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.2" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.06%)</title><rect x="1187.2" y="787.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.2" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.06%)</title><rect x="1187.2" y="771.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.2" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (3 samples, 0.06%)</title><rect x="1187.2" y="755.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.2" y="766.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.04%)</title><rect x="1187.9" y="851.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (7 samples, 0.14%)</title><rect x="1188.4" y="899.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.4" y="910.0"></text>
</g>
</g>
</svg>
