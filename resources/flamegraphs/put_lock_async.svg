<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">async Java client | lock/monitor</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (9,915 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>[no_Java_frame] (5 samples, 0.05%)</title><rect x="10.0" y="851.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>java.lang.Thread (5 samples, 0.05%)</title><rect x="10.0" y="835.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.exit (242 samples, 2.44%)</title><rect x="10.6" y="851.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.6" y="862.0">ja..</text>
</g>
<g>
<title>java/lang/ThreadGroup.threadTerminated (242 samples, 2.44%)</title><rect x="10.6" y="835.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.6" y="846.0">ja..</text>
</g>
<g>
<title>java.lang.ThreadGroup (242 samples, 2.44%)</title><rect x="10.6" y="819.0" width="28.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.6" y="830.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.run (3,920 samples, 39.54%)</title><rect x="39.4" y="851.0" width="466.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.4" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,918 samples, 39.52%)</title><rect x="39.6" y="835.0" width="466.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.6" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,918 samples, 39.52%)</title><rect x="39.6" y="819.0" width="466.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.6" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,446 samples, 14.58%)</title><rect x="39.6" y="803.0" width="172.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.6" y="814.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,446 samples, 14.58%)</title><rect x="39.6" y="787.0" width="172.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.6" y="798.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,446 samples, 14.58%)</title><rect x="39.6" y="771.0" width="172.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.6" y="782.0">java/util/concurrent/C..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.apply (1,446 samples, 14.58%)</title><rect x="39.6" y="755.0" width="172.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.6" y="766.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (1,446 samples, 14.58%)</title><rect x="39.6" y="739.0" width="172.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.6" y="750.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (1,446 samples, 14.58%)</title><rect x="39.6" y="723.0" width="172.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.6" y="734.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (876 samples, 8.84%)</title><rect x="39.6" y="707.0" width="104.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.6" y="718.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (876 samples, 8.84%)</title><rect x="39.6" y="691.0" width="104.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.6" y="702.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (876 samples, 8.84%)</title><rect x="39.6" y="675.0" width="104.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.6" y="686.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (836 samples, 8.43%)</title><rect x="39.6" y="659.0" width="99.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.6" y="670.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (836 samples, 8.43%)</title><rect x="39.6" y="643.0" width="99.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.6" y="654.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (836 samples, 8.43%)</title><rect x="39.6" y="627.0" width="99.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.6" y="638.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/1812886357.apply (836 samples, 8.43%)</title><rect x="39.6" y="611.0" width="99.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.6" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (836 samples, 8.43%)</title><rect x="39.6" y="595.0" width="99.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.6" y="606.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (836 samples, 8.43%)</title><rect x="39.6" y="579.0" width="99.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.6" y="590.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1571858567.apply (836 samples, 8.43%)</title><rect x="39.6" y="563.0" width="99.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.6" y="574.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (836 samples, 8.43%)</title><rect x="39.6" y="547.0" width="99.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.6" y="558.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (836 samples, 8.43%)</title><rect x="39.6" y="531.0" width="99.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.6" y="542.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (836 samples, 8.43%)</title><rect x="39.6" y="515.0" width="99.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.6" y="526.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (836 samples, 8.43%)</title><rect x="39.6" y="499.0" width="99.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.6" y="510.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$183/36443311.apply (836 samples, 8.43%)</title><rect x="39.6" y="483.0" width="99.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.6" y="494.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (836 samples, 8.43%)</title><rect x="39.6" y="467.0" width="99.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.6" y="478.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (836 samples, 8.43%)</title><rect x="39.6" y="451.0" width="99.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.6" y="462.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (836 samples, 8.43%)</title><rect x="39.6" y="435.0" width="99.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.6" y="446.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (257 samples, 2.59%)</title><rect x="39.6" y="419.0" width="30.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.6" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (257 samples, 2.59%)</title><rect x="39.6" y="403.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.6" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (257 samples, 2.59%)</title><rect x="39.6" y="387.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.6" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (257 samples, 2.59%)</title><rect x="39.6" y="371.0" width="30.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.6" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (257 samples, 2.59%)</title><rect x="39.6" y="355.0" width="30.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.6" y="366.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (36 samples, 0.36%)</title><rect x="39.6" y="339.0" width="4.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="42.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (221 samples, 2.23%)</title><rect x="43.9" y="339.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.9" y="350.0">s..</text>
</g>
<g>
<title>java.lang.Object (221 samples, 2.23%)</title><rect x="43.9" y="323.0" width="26.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="46.9" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (579 samples, 5.84%)</title><rect x="70.2" y="419.0" width="68.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.2" y="430.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (579 samples, 5.84%)</title><rect x="70.2" y="403.0" width="68.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.2" y="414.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (579 samples, 5.84%)</title><rect x="70.2" y="387.0" width="68.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.2" y="398.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (579 samples, 5.84%)</title><rect x="70.2" y="371.0" width="68.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.2" y="382.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (579 samples, 5.84%)</title><rect x="70.2" y="355.0" width="68.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.2" y="366.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (216 samples, 2.18%)</title><rect x="70.2" y="339.0" width="25.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="73.2" y="350.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (363 samples, 3.66%)</title><rect x="95.9" y="339.0" width="43.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.9" y="350.0">sun/..</text>
</g>
<g>
<title>java.lang.Object (363 samples, 3.66%)</title><rect x="95.9" y="323.0" width="43.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="98.9" y="334.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (40 samples, 0.40%)</title><rect x="139.1" y="659.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (40 samples, 0.40%)</title><rect x="139.1" y="643.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (40 samples, 0.40%)</title><rect x="139.1" y="627.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (40 samples, 0.40%)</title><rect x="139.1" y="611.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (40 samples, 0.40%)</title><rect x="139.1" y="595.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (40 samples, 0.40%)</title><rect x="139.1" y="579.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (40 samples, 0.40%)</title><rect x="139.1" y="563.0" width="4.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="142.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (561 samples, 5.66%)</title><rect x="143.9" y="707.0" width="66.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.9" y="718.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (322 samples, 3.25%)</title><rect x="143.9" y="691.0" width="38.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="146.9" y="702.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (239 samples, 2.41%)</title><rect x="182.2" y="691.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.2" y="702.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (239 samples, 2.41%)</title><rect x="182.2" y="675.0" width="28.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.2" y="686.0">su..</text>
</g>
<g>
<title>java.lang.Object (239 samples, 2.41%)</title><rect x="182.2" y="659.0" width="28.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="185.2" y="670.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (9 samples, 0.09%)</title><rect x="210.7" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (9 samples, 0.09%)</title><rect x="210.7" y="691.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="213.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (8 samples, 0.08%)</title><rect x="210.8" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.8" y="686.0"></text>
</g>
<g>
<title>java.lang.Class (8 samples, 0.08%)</title><rect x="210.8" y="659.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="213.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (310 samples, 3.13%)</title><rect x="211.7" y="803.0" width="36.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.7" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (310 samples, 3.13%)</title><rect x="211.7" y="787.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.7" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 0.17%)</title><rect x="211.7" y="771.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (17 samples, 0.17%)</title><rect x="211.7" y="755.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (17 samples, 0.17%)</title><rect x="211.7" y="739.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 0.17%)</title><rect x="211.7" y="723.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.17%)</title><rect x="211.7" y="707.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (17 samples, 0.17%)</title><rect x="211.7" y="691.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="214.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (293 samples, 2.96%)</title><rect x="213.7" y="771.0" width="34.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.7" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (293 samples, 2.96%)</title><rect x="213.7" y="755.0" width="34.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.7" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (293 samples, 2.96%)</title><rect x="213.7" y="739.0" width="34.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.7" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (293 samples, 2.96%)</title><rect x="213.7" y="723.0" width="34.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.7" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (293 samples, 2.96%)</title><rect x="213.7" y="707.0" width="34.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.7" y="718.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (293 samples, 2.96%)</title><rect x="213.7" y="691.0" width="34.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.7" y="702.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (293 samples, 2.96%)</title><rect x="213.7" y="675.0" width="34.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="216.7" y="686.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.run (104 samples, 1.05%)</title><rect x="248.6" y="803.0" width="12.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (104 samples, 1.05%)</title><rect x="248.6" y="787.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (104 samples, 1.05%)</title><rect x="248.6" y="771.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (104 samples, 1.05%)</title><rect x="248.6" y="755.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (104 samples, 1.05%)</title><rect x="248.6" y="739.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (104 samples, 1.05%)</title><rect x="248.6" y="723.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (104 samples, 1.05%)</title><rect x="248.6" y="707.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (104 samples, 1.05%)</title><rect x="248.6" y="691.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (104 samples, 1.05%)</title><rect x="248.6" y="675.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (104 samples, 1.05%)</title><rect x="248.6" y="659.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (104 samples, 1.05%)</title><rect x="248.6" y="643.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (104 samples, 1.05%)</title><rect x="248.6" y="627.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (104 samples, 1.05%)</title><rect x="248.6" y="611.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (104 samples, 1.05%)</title><rect x="248.6" y="595.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (104 samples, 1.05%)</title><rect x="248.6" y="579.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (104 samples, 1.05%)</title><rect x="248.6" y="563.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (103 samples, 1.04%)</title><rect x="248.6" y="547.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/704105605.apply (103 samples, 1.04%)</title><rect x="248.6" y="531.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (103 samples, 1.04%)</title><rect x="248.6" y="515.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (103 samples, 1.04%)</title><rect x="248.6" y="499.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (103 samples, 1.04%)</title><rect x="248.6" y="483.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (103 samples, 1.04%)</title><rect x="248.6" y="467.0" width="12.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (103 samples, 1.04%)</title><rect x="248.6" y="451.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/611985749.run (103 samples, 1.04%)</title><rect x="248.6" y="435.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (103 samples, 1.04%)</title><rect x="248.6" y="419.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (103 samples, 1.04%)</title><rect x="248.6" y="403.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 1.04%)</title><rect x="248.6" y="387.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 1.04%)</title><rect x="248.6" y="371.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (103 samples, 1.04%)</title><rect x="248.6" y="355.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (103 samples, 1.04%)</title><rect x="248.6" y="339.0" width="12.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (103 samples, 1.04%)</title><rect x="248.6" y="323.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (103 samples, 1.04%)</title><rect x="248.6" y="307.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (103 samples, 1.04%)</title><rect x="248.6" y="291.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (103 samples, 1.04%)</title><rect x="248.6" y="275.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (103 samples, 1.04%)</title><rect x="248.6" y="259.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (103 samples, 1.04%)</title><rect x="248.6" y="243.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/1882091062.run (103 samples, 1.04%)</title><rect x="248.6" y="227.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (103 samples, 1.04%)</title><rect x="248.6" y="211.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (103 samples, 1.04%)</title><rect x="248.6" y="195.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (103 samples, 1.04%)</title><rect x="248.6" y="179.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (103 samples, 1.04%)</title><rect x="248.6" y="163.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (102 samples, 1.03%)</title><rect x="248.7" y="147.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (102 samples, 1.03%)</title><rect x="248.7" y="131.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (11 samples, 0.11%)</title><rect x="248.7" y="115.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (11 samples, 0.11%)</title><rect x="248.7" y="99.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (11 samples, 0.11%)</title><rect x="248.7" y="83.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.7" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (11 samples, 0.11%)</title><rect x="248.7" y="67.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (11 samples, 0.11%)</title><rect x="248.7" y="51.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.7" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (10 samples, 0.10%)</title><rect x="248.7" y="35.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="251.7" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (91 samples, 0.92%)</title><rect x="250.0" y="115.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (91 samples, 0.92%)</title><rect x="250.0" y="99.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (91 samples, 0.92%)</title><rect x="250.0" y="83.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (91 samples, 0.92%)</title><rect x="250.0" y="67.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (91 samples, 0.92%)</title><rect x="250.0" y="51.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.0" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (91 samples, 0.92%)</title><rect x="250.0" y="35.0" width="10.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="253.0" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,058 samples, 20.76%)</title><rect x="261.0" y="803.0" width="244.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.0" y="814.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,058 samples, 20.76%)</title><rect x="261.0" y="787.0" width="244.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="264.0" y="798.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (802 samples, 8.09%)</title><rect x="261.0" y="771.0" width="95.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.0" y="782.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (802 samples, 8.09%)</title><rect x="261.0" y="755.0" width="95.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.0" y="766.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (802 samples, 8.09%)</title><rect x="261.0" y="739.0" width="95.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.0" y="750.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (730 samples, 7.36%)</title><rect x="261.0" y="723.0" width="86.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.0" y="734.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (730 samples, 7.36%)</title><rect x="261.0" y="707.0" width="86.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.0" y="718.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (730 samples, 7.36%)</title><rect x="261.0" y="691.0" width="86.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.0" y="702.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (730 samples, 7.36%)</title><rect x="261.0" y="675.0" width="86.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.0" y="686.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (730 samples, 7.36%)</title><rect x="261.0" y="659.0" width="86.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.0" y="670.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (730 samples, 7.36%)</title><rect x="261.0" y="643.0" width="86.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.0" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (730 samples, 7.36%)</title><rect x="261.0" y="627.0" width="86.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.0" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (730 samples, 7.36%)</title><rect x="261.0" y="611.0" width="86.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.0" y="622.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (730 samples, 7.36%)</title><rect x="261.0" y="595.0" width="86.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.0" y="606.0">jdk/intern..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (438 samples, 4.42%)</title><rect x="261.0" y="579.0" width="52.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="264.0" y="590.0">jdk.i..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (292 samples, 2.95%)</title><rect x="313.1" y="579.0" width="34.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="316.1" y="590.0">su..</text>
</g>
<g>
<title>java.lang.Object (292 samples, 2.95%)</title><rect x="313.1" y="563.0" width="34.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="316.1" y="574.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (72 samples, 0.73%)</title><rect x="347.9" y="723.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (72 samples, 0.73%)</title><rect x="347.9" y="707.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (72 samples, 0.73%)</title><rect x="347.9" y="691.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (72 samples, 0.73%)</title><rect x="347.9" y="675.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (72 samples, 0.73%)</title><rect x="347.9" y="659.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (72 samples, 0.73%)</title><rect x="347.9" y="643.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (72 samples, 0.73%)</title><rect x="347.9" y="627.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (72 samples, 0.73%)</title><rect x="347.9" y="611.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (72 samples, 0.73%)</title><rect x="347.9" y="595.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (72 samples, 0.73%)</title><rect x="347.9" y="579.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (72 samples, 0.73%)</title><rect x="347.9" y="563.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (72 samples, 0.73%)</title><rect x="347.9" y="547.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (72 samples, 0.73%)</title><rect x="347.9" y="531.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.06%)</title><rect x="347.9" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$194/381966895.apply (6 samples, 0.06%)</title><rect x="347.9" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (6 samples, 0.06%)</title><rect x="347.9" y="483.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (6 samples, 0.06%)</title><rect x="347.9" y="467.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (6 samples, 0.06%)</title><rect x="347.9" y="451.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.06%)</title><rect x="347.9" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Class (6 samples, 0.06%)</title><rect x="347.9" y="419.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="350.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (66 samples, 0.67%)</title><rect x="348.6" y="515.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (66 samples, 0.67%)</title><rect x="348.6" y="499.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$196/1579352741.apply (66 samples, 0.67%)</title><rect x="348.6" y="483.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (66 samples, 0.67%)</title><rect x="348.6" y="467.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (66 samples, 0.67%)</title><rect x="348.6" y="451.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (66 samples, 0.67%)</title><rect x="348.6" y="435.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (66 samples, 0.67%)</title><rect x="348.6" y="419.0" width="7.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="351.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,256 samples, 12.67%)</title><rect x="356.4" y="771.0" width="149.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.4" y="782.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,256 samples, 12.67%)</title><rect x="356.4" y="755.0" width="149.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.4" y="766.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,256 samples, 12.67%)</title><rect x="356.4" y="739.0" width="149.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.4" y="750.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (1,256 samples, 12.67%)</title><rect x="356.4" y="723.0" width="149.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.4" y="734.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,256 samples, 12.67%)</title><rect x="356.4" y="707.0" width="149.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.4" y="718.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,256 samples, 12.67%)</title><rect x="356.4" y="691.0" width="149.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.4" y="702.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,256 samples, 12.67%)</title><rect x="356.4" y="675.0" width="149.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.4" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,256 samples, 12.67%)</title><rect x="356.4" y="659.0" width="149.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.4" y="670.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/1882091062.run (1,152 samples, 11.62%)</title><rect x="356.4" y="643.0" width="137.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.4" y="654.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,152 samples, 11.62%)</title><rect x="356.4" y="627.0" width="137.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.4" y="638.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,152 samples, 11.62%)</title><rect x="356.4" y="611.0" width="137.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.4" y="622.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,152 samples, 11.62%)</title><rect x="356.4" y="595.0" width="137.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.4" y="606.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,152 samples, 11.62%)</title><rect x="356.4" y="579.0" width="137.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.4" y="590.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (63 samples, 0.64%)</title><rect x="356.4" y="563.0" width="7.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="359.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,089 samples, 10.98%)</title><rect x="363.9" y="563.0" width="129.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.9" y="574.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,089 samples, 10.98%)</title><rect x="363.9" y="547.0" width="129.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.9" y="558.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (182 samples, 1.84%)</title><rect x="363.9" y="531.0" width="21.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (182 samples, 1.84%)</title><rect x="363.9" y="515.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (182 samples, 1.84%)</title><rect x="363.9" y="499.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (182 samples, 1.84%)</title><rect x="363.9" y="483.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.9" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (182 samples, 1.84%)</title><rect x="363.9" y="467.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.9" y="478.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (124 samples, 1.25%)</title><rect x="363.9" y="451.0" width="14.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="366.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (58 samples, 0.58%)</title><rect x="378.7" y="451.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (58 samples, 0.58%)</title><rect x="378.7" y="435.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="381.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (907 samples, 9.15%)</title><rect x="385.6" y="531.0" width="107.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.6" y="542.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (907 samples, 9.15%)</title><rect x="385.6" y="515.0" width="107.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.6" y="526.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (907 samples, 9.15%)</title><rect x="385.6" y="499.0" width="107.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.6" y="510.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (907 samples, 9.15%)</title><rect x="385.6" y="483.0" width="107.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.6" y="494.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (907 samples, 9.15%)</title><rect x="385.6" y="467.0" width="107.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.6" y="478.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (840 samples, 8.47%)</title><rect x="385.6" y="451.0" width="100.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="388.6" y="462.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (67 samples, 0.68%)</title><rect x="485.6" y="451.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (67 samples, 0.68%)</title><rect x="485.6" y="435.0" width="7.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="488.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (104 samples, 1.05%)</title><rect x="493.5" y="643.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (104 samples, 1.05%)</title><rect x="493.5" y="627.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (104 samples, 1.05%)</title><rect x="493.5" y="611.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (104 samples, 1.05%)</title><rect x="493.5" y="595.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (104 samples, 1.05%)</title><rect x="493.5" y="579.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (104 samples, 1.05%)</title><rect x="493.5" y="563.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (104 samples, 1.05%)</title><rect x="493.5" y="547.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$223/1023865256.accept (104 samples, 1.05%)</title><rect x="493.5" y="531.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (104 samples, 1.05%)</title><rect x="493.5" y="515.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (104 samples, 1.05%)</title><rect x="493.5" y="499.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (104 samples, 1.05%)</title><rect x="493.5" y="483.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (104 samples, 1.05%)</title><rect x="493.5" y="467.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (104 samples, 1.05%)</title><rect x="493.5" y="451.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (104 samples, 1.05%)</title><rect x="493.5" y="435.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (104 samples, 1.05%)</title><rect x="493.5" y="419.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (76 samples, 0.77%)</title><rect x="493.5" y="403.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.5" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (75 samples, 0.76%)</title><rect x="493.5" y="387.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (75 samples, 0.76%)</title><rect x="493.5" y="371.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.5" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.addUnstarted (74 samples, 0.75%)</title><rect x="493.7" y="355.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.7" y="366.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (74 samples, 0.75%)</title><rect x="493.7" y="339.0" width="8.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="496.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.start (28 samples, 0.28%)</title><rect x="502.6" y="403.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.6" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.add (28 samples, 0.28%)</title><rect x="502.6" y="387.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.6" y="398.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (28 samples, 0.28%)</title><rect x="502.6" y="371.0" width="3.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="505.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (5,358 samples, 54.04%)</title><rect x="505.9" y="851.0" width="637.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.9" y="862.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (22 samples, 0.22%)</title><rect x="505.9" y="835.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$190/467524561.accept (22 samples, 0.22%)</title><rect x="505.9" y="819.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (22 samples, 0.22%)</title><rect x="505.9" y="803.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (22 samples, 0.22%)</title><rect x="505.9" y="787.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (22 samples, 0.22%)</title><rect x="505.9" y="771.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (22 samples, 0.22%)</title><rect x="505.9" y="755.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (22 samples, 0.22%)</title><rect x="505.9" y="739.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.22%)</title><rect x="505.9" y="723.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.22%)</title><rect x="505.9" y="707.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (22 samples, 0.22%)</title><rect x="505.9" y="691.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (22 samples, 0.22%)</title><rect x="505.9" y="675.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (22 samples, 0.22%)</title><rect x="505.9" y="659.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (22 samples, 0.22%)</title><rect x="505.9" y="643.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (18 samples, 0.18%)</title><rect x="505.9" y="627.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (18 samples, 0.18%)</title><rect x="505.9" y="611.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (18 samples, 0.18%)</title><rect x="505.9" y="595.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.18%)</title><rect x="505.9" y="579.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.18%)</title><rect x="505.9" y="563.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 0.18%)</title><rect x="505.9" y="547.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.18%)</title><rect x="505.9" y="531.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (18 samples, 0.18%)</title><rect x="505.9" y="515.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (18 samples, 0.18%)</title><rect x="505.9" y="499.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (18 samples, 0.18%)</title><rect x="505.9" y="483.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (18 samples, 0.18%)</title><rect x="505.9" y="467.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (18 samples, 0.18%)</title><rect x="505.9" y="451.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.18%)</title><rect x="505.9" y="435.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.18%)</title><rect x="505.9" y="419.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (18 samples, 0.18%)</title><rect x="505.9" y="403.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="508.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.04%)</title><rect x="508.1" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.04%)</title><rect x="508.1" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.1" y="622.0"></text>
</g>
<g>
<title>java.lang.Object (4 samples, 0.04%)</title><rect x="508.1" y="595.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="511.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,063 samples, 30.89%)</title><rect x="508.5" y="835.0" width="364.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="511.5" y="846.0">jdk.internal.net.http.HttpClientImpl$SelectorManager</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (120 samples, 1.21%)</title><rect x="873.1" y="835.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/715486789.run (55 samples, 0.55%)</title><rect x="873.1" y="819.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (55 samples, 0.55%)</title><rect x="873.1" y="803.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (55 samples, 0.55%)</title><rect x="873.1" y="787.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (55 samples, 0.55%)</title><rect x="873.1" y="771.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (55 samples, 0.55%)</title><rect x="873.1" y="755.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (55 samples, 0.55%)</title><rect x="873.1" y="739.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (55 samples, 0.55%)</title><rect x="873.1" y="723.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (55 samples, 0.55%)</title><rect x="873.1" y="707.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (55 samples, 0.55%)</title><rect x="873.1" y="691.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (55 samples, 0.55%)</title><rect x="873.1" y="675.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (55 samples, 0.55%)</title><rect x="873.1" y="659.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (55 samples, 0.55%)</title><rect x="873.1" y="643.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (55 samples, 0.55%)</title><rect x="873.1" y="627.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (55 samples, 0.55%)</title><rect x="873.1" y="611.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (55 samples, 0.55%)</title><rect x="873.1" y="595.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (55 samples, 0.55%)</title><rect x="873.1" y="579.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (55 samples, 0.55%)</title><rect x="873.1" y="563.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (55 samples, 0.55%)</title><rect x="873.1" y="547.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (55 samples, 0.55%)</title><rect x="873.1" y="531.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (55 samples, 0.55%)</title><rect x="873.1" y="515.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (55 samples, 0.55%)</title><rect x="873.1" y="499.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (55 samples, 0.55%)</title><rect x="873.1" y="483.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (55 samples, 0.55%)</title><rect x="873.1" y="467.0" width="6.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="876.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$160/810264248.run (65 samples, 0.66%)</title><rect x="879.6" y="819.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (65 samples, 0.66%)</title><rect x="879.6" y="803.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="882.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (65 samples, 0.66%)</title><rect x="879.6" y="787.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="882.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (65 samples, 0.66%)</title><rect x="879.6" y="771.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (65 samples, 0.66%)</title><rect x="879.6" y="755.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (65 samples, 0.66%)</title><rect x="879.6" y="739.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="882.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (65 samples, 0.66%)</title><rect x="879.6" y="723.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (65 samples, 0.66%)</title><rect x="879.6" y="707.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (65 samples, 0.66%)</title><rect x="879.6" y="691.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (65 samples, 0.66%)</title><rect x="879.6" y="675.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (65 samples, 0.66%)</title><rect x="879.6" y="659.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="882.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (65 samples, 0.66%)</title><rect x="879.6" y="643.0" width="7.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="882.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (273 samples, 2.75%)</title><rect x="887.4" y="835.0" width="32.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.4" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (273 samples, 2.75%)</title><rect x="887.4" y="819.0" width="32.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.4" y="830.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (273 samples, 2.75%)</title><rect x="887.4" y="803.0" width="32.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="890.4" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1,267 samples, 12.78%)</title><rect x="919.8" y="835.0" width="150.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.8" y="846.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,267 samples, 12.78%)</title><rect x="919.8" y="819.0" width="150.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="922.8" y="830.0">jdk.internal.net.ht..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (613 samples, 6.18%)</title><rect x="1070.6" y="835.0" width="73.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.6" y="846.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (613 samples, 6.18%)</title><rect x="1070.6" y="819.0" width="73.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.6" y="830.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (613 samples, 6.18%)</title><rect x="1070.6" y="803.0" width="73.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.6" y="814.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (613 samples, 6.18%)</title><rect x="1070.6" y="787.0" width="73.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.6" y="798.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (613 samples, 6.18%)</title><rect x="1070.6" y="771.0" width="73.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1073.6" y="782.0">sun/nio/..</text>
</g>
<g>
<title>java.lang.Object (613 samples, 6.18%)</title><rect x="1070.6" y="755.0" width="73.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1073.6" y="766.0">java.lan..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (390 samples, 3.93%)</title><rect x="1143.6" y="851.0" width="46.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.6" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.process (390 samples, 3.93%)</title><rect x="1143.6" y="835.0" width="46.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.6" y="846.0">one/..</text>
</g>
<g>
<title>one.nio.http.HttpSession (131 samples, 1.32%)</title><rect x="1143.6" y="819.0" width="15.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1146.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (259 samples, 2.61%)</title><rect x="1159.2" y="819.0" width="30.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1162.2" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (259 samples, 2.61%)</title><rect x="1159.2" y="803.0" width="30.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.2" y="814.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (259 samples, 2.61%)</title><rect x="1159.2" y="787.0" width="30.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.2" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (259 samples, 2.61%)</title><rect x="1159.2" y="771.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.2" y="782.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (259 samples, 2.61%)</title><rect x="1159.2" y="755.0" width="30.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.2" y="766.0">Re..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (259 samples, 2.61%)</title><rect x="1159.2" y="739.0" width="30.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1162.2" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.invokeHandlerByMethod (259 samples, 2.61%)</title><rect x="1159.2" y="723.0" width="30.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.2" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (259 samples, 2.61%)</title><rect x="1159.2" y="707.0" width="30.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.2" y="718.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (129 samples, 1.30%)</title><rect x="1159.2" y="691.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (129 samples, 1.30%)</title><rect x="1159.2" y="675.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (97 samples, 0.98%)</title><rect x="1159.2" y="659.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (76 samples, 0.77%)</title><rect x="1159.2" y="643.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1162.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (73 samples, 0.74%)</title><rect x="1159.2" y="627.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (73 samples, 0.74%)</title><rect x="1159.2" y="611.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.addUnstarted (72 samples, 0.73%)</title><rect x="1159.3" y="595.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1162.3" y="606.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (72 samples, 0.73%)</title><rect x="1159.3" y="579.0" width="8.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1162.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.nextThreadNum (3 samples, 0.03%)</title><rect x="1167.9" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.9" y="638.0"></text>
</g>
<g>
<title>java.lang.Class (3 samples, 0.03%)</title><rect x="1167.9" y="611.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1170.9" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.start (21 samples, 0.21%)</title><rect x="1168.2" y="643.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1171.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.add (21 samples, 0.21%)</title><rect x="1168.2" y="627.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.2" y="638.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (21 samples, 0.21%)</title><rect x="1168.2" y="611.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1171.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 0.32%)</title><rect x="1170.7" y="659.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1173.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (32 samples, 0.32%)</title><rect x="1170.7" y="643.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.32%)</title><rect x="1170.7" y="627.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (32 samples, 0.32%)</title><rect x="1170.7" y="611.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.32%)</title><rect x="1170.7" y="595.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.32%)</title><rect x="1170.7" y="579.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.32%)</title><rect x="1170.7" y="563.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.32%)</title><rect x="1170.7" y="547.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.32%)</title><rect x="1170.7" y="531.0" width="3.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1173.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (130 samples, 1.31%)</title><rect x="1174.5" y="691.0" width="15.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (130 samples, 1.31%)</title><rect x="1174.5" y="675.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (130 samples, 1.31%)</title><rect x="1174.5" y="659.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1177.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (130 samples, 1.31%)</title><rect x="1174.5" y="643.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1177.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (130 samples, 1.31%)</title><rect x="1174.5" y="627.0" width="15.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (130 samples, 1.31%)</title><rect x="1174.5" y="611.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (130 samples, 1.31%)</title><rect x="1174.5" y="595.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (130 samples, 1.31%)</title><rect x="1174.5" y="579.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (130 samples, 1.31%)</title><rect x="1174.5" y="563.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (130 samples, 1.31%)</title><rect x="1174.5" y="547.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1177.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (130 samples, 1.31%)</title><rect x="1174.5" y="531.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (130 samples, 1.31%)</title><rect x="1174.5" y="515.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (130 samples, 1.31%)</title><rect x="1174.5" y="499.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (130 samples, 1.31%)</title><rect x="1174.5" y="483.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1177.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (130 samples, 1.31%)</title><rect x="1174.5" y="467.0" width="15.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1177.5" y="478.0"></text>
</g>
</g>
</svg>
