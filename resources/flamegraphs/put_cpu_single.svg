<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Single node CPU</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (5,051 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (32 samples, 0.63%)</title><rect x="10.0" y="867.0" width="7.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (32 samples, 0.63%)</title><rect x="10.0" y="851.0" width="7.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (32 samples, 0.63%)</title><rect x="10.0" y="835.0" width="7.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (32 samples, 0.63%)</title><rect x="10.0" y="819.0" width="7.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (31 samples, 0.61%)</title><rect x="10.0" y="803.0" width="7.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, 8ul&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (31 samples, 0.61%)</title><rect x="10.0" y="787.0" width="7.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (31 samples, 0.61%)</title><rect x="10.0" y="771.0" width="7.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*) (31 samples, 0.61%)</title><rect x="10.0" y="755.0" width="7.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::WriteLevel0Table() (31 samples, 0.61%)</title><rect x="10.0" y="739.0" width="7.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::BuildTable(std::string const&amp;, rocksdb::Env*, rocksdb::FileSystem*, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&amp;, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_del (30 samples, 0.59%)</title><rect x="10.0" y="723.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 0.22%)</title><rect x="10.5" y="707.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Flush() (3 samples, 0.06%)</title><rect x="11.6" y="691.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, bool) (3 samples, 0.06%)</title><rect x="11.6" y="675.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, bool) (3 samples, 0.06%)</title><rect x="11.6" y="659.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.6" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (2 samples, 0.04%)</title><rect x="11.6" y="643.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="14.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (14 samples, 0.28%)</title><rect x="13.3" y="707.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (10 samples, 0.20%)</title><rect x="13.7" y="691.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (3 samples, 0.06%)</title><rect x="15.1" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Next() (2 samples, 0.04%)</title><rect x="16.1" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.1" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="17.5" y="867.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.5" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="17.5" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.5" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (3 samples, 0.06%)</title><rect x="17.5" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.5" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.06%)</title><rect x="17.5" y="819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="18.2" y="867.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="21.2" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="18.9" y="867.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="21.9" y="878.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (2 samples, 0.04%)</title><rect x="19.3" y="867.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="22.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,701 samples, 73.27%)</title><rect x="20.0" y="867.0" width="864.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.0" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,701 samples, 73.27%)</title><rect x="20.0" y="851.0" width="864.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.0" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,701 samples, 73.27%)</title><rect x="20.0" y="835.0" width="864.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.0" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (11 samples, 0.22%)</title><rect x="20.3" y="819.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.22%)</title><rect x="20.3" y="803.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.22%)</title><rect x="20.3" y="787.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (162 samples, 3.21%)</title><rect x="22.8" y="819.0" width="37.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.8" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (152 samples, 3.01%)</title><rect x="25.2" y="803.0" width="35.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.2" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (108 samples, 2.14%)</title><rect x="27.3" y="787.0" width="25.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.3" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.06%)</title><rect x="28.0" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="28.0" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="28.0" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="28.0" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (101 samples, 2.00%)</title><rect x="28.9" y="771.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.9" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (101 samples, 2.00%)</title><rect x="28.9" y="755.0" width="23.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.9" y="766.0">j..</text>
</g>
<g>
<title>Unsafe_Park (37 samples, 0.73%)</title><rect x="29.4" y="739.0" width="8.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="32.4" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.16%)</title><rect x="29.9" y="723.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.9" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.04%)</title><rect x="31.3" y="707.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="34.3" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (13 samples, 0.26%)</title><rect x="32.4" y="723.0" width="3.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="35.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.26%)</title><rect x="32.4" y="707.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.26%)</title><rect x="32.4" y="691.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="35.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="34.5" y="675.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="37.5" y="686.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="34.5" y="659.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="37.5" y="670.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="34.5" y="643.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="37.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="35.7" y="723.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="38.7" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (2 samples, 0.04%)</title><rect x="37.1" y="723.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="40.1" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="37.6" y="723.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="40.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.23%)</title><rect x="38.0" y="739.0" width="14.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="41.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (8 samples, 0.16%)</title><rect x="38.0" y="723.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="41.0" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.14%)</title><rect x="39.9" y="723.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="42.9" y="734.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (45 samples, 0.89%)</title><rect x="42.0" y="723.0" width="10.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="45.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.53%)</title><rect x="46.2" y="707.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="49.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.53%)</title><rect x="46.2" y="691.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="49.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.40%)</title><rect x="47.8" y="675.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="50.8" y="686.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.38%)</title><rect x="48.1" y="659.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.1" y="670.0"></text>
</g>
<g>
<title>futex_wait (15 samples, 0.30%)</title><rect x="49.0" y="643.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="52.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.12%)</title><rect x="49.0" y="627.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="52.0" y="638.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.06%)</title><rect x="49.7" y="611.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="52.7" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.06%)</title><rect x="49.7" y="595.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="52.7" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="49.9" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="52.9" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.14%)</title><rect x="50.4" y="627.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.4" y="638.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.06%)</title><rect x="50.9" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="53.9" y="622.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.04%)</title><rect x="51.6" y="611.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (34 samples, 0.67%)</title><rect x="52.5" y="787.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 0.67%)</title><rect x="52.5" y="771.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.67%)</title><rect x="52.5" y="755.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.67%)</title><rect x="52.5" y="739.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 0.59%)</title><rect x="53.5" y="723.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.5" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.14%)</title><rect x="53.7" y="707.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="56.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (22 samples, 0.44%)</title><rect x="55.3" y="707.0" width="5.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="58.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.44%)</title><rect x="55.3" y="691.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.44%)</title><rect x="55.3" y="675.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.3" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.40%)</title><rect x="55.8" y="659.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="58.8" y="670.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.38%)</title><rect x="56.0" y="643.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.36%)</title><rect x="56.3" y="627.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.3" y="638.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.34%)</title><rect x="56.5" y="611.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="59.5" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.34%)</title><rect x="56.5" y="595.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.5" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.34%)</title><rect x="56.5" y="579.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$67/1598457346.run (3,524 samples, 69.77%)</title><rect x="60.7" y="819.0" width="823.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.7" y="830.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$67/1598457346.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4 (3,524 samples, 69.77%)</title><rect x="60.7" y="803.0" width="823.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.7" y="814.0">ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,478 samples, 29.26%)</title><rect x="60.7" y="787.0" width="345.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.7" y="798.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (29 samples, 0.57%)</title><rect x="67.0" y="771.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (29 samples, 0.57%)</title><rect x="67.0" y="755.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (29 samples, 0.57%)</title><rect x="67.0" y="739.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="68.4" y="723.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="71.4" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.08%)</title><rect x="68.4" y="707.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="71.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.12%)</title><rect x="69.3" y="723.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="72.3" y="734.0"></text>
</g>
<g>
<title>gettimeofday@plt (3 samples, 0.06%)</title><rect x="70.7" y="723.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="73.7" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.20%)</title><rect x="71.4" y="723.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="74.4" y="734.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.20%)</title><rect x="71.4" y="707.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="74.4" y="718.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.18%)</title><rect x="71.7" y="691.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="74.7" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.12%)</title><rect x="73.8" y="771.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="76.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,400 samples, 27.72%)</title><rect x="75.2" y="771.0" width="327.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.2" y="782.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="75.4" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (37 samples, 0.73%)</title><rect x="76.3" y="755.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (23 samples, 0.46%)</title><rect x="79.4" y="739.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (23 samples, 0.46%)</title><rect x="79.4" y="723.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (23 samples, 0.46%)</title><rect x="79.4" y="707.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (23 samples, 0.46%)</title><rect x="79.4" y="691.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (23 samples, 0.46%)</title><rect x="79.4" y="675.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,358 samples, 26.89%)</title><rect x="85.0" y="755.0" width="317.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="88.0" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,358 samples, 26.89%)</title><rect x="85.0" y="739.0" width="317.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.0" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,351 samples, 26.75%)</title><rect x="86.6" y="723.0" width="315.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.6" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.08%)</title><rect x="87.1" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,345 samples, 26.63%)</title><rect x="88.0" y="707.0" width="314.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.0" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (65 samples, 1.29%)</title><rect x="95.0" y="691.0" width="15.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="98.0" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.10%)</title><rect x="98.8" y="675.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="101.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.08%)</title><rect x="100.2" y="675.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="103.2" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (14 samples, 0.28%)</title><rect x="101.1" y="675.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="104.1" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (23 samples, 0.46%)</title><rect x="104.4" y="675.0" width="5.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="107.4" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="105.3" y="659.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="108.3" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.08%)</title><rect x="105.8" y="659.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="108.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.14%)</title><rect x="107.0" y="659.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="110.0" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.10%)</title><rect x="108.6" y="659.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="111.6" y="670.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.04%)</title><rect x="109.8" y="675.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="112.8" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="110.5" y="691.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="113.5" y="702.0"></text>
</g>
<g>
<title>__libc_send (1,244 samples, 24.63%)</title><rect x="110.9" y="691.0" width="290.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="113.9" y="702.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,225 samples, 24.25%)</title><rect x="115.4" y="675.0" width="286.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.4" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (8 samples, 0.16%)</title><rect x="115.4" y="659.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="118.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1,216 samples, 24.07%)</title><rect x="117.5" y="659.0" width="284.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="120.5" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,162 samples, 23.01%)</title><rect x="129.8" y="643.0" width="271.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="132.8" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,156 samples, 22.89%)</title><rect x="130.1" y="627.0" width="270.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="133.1" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,121 samples, 22.19%)</title><rect x="131.9" y="611.0" width="261.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.9" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1,098 samples, 21.74%)</title><rect x="133.3" y="595.0" width="256.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="136.3" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,092 samples, 21.62%)</title><rect x="134.1" y="579.0" width="255.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="137.1" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="134.3" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="137.3" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="135.0" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.06%)</title><rect x="135.5" y="563.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.5" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.12%)</title><rect x="136.2" y="563.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="139.2" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="136.4" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="139.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.06%)</title><rect x="136.9" y="547.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.9" y="558.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.12%)</title><rect x="137.6" y="563.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="140.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="138.3" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.3" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="138.3" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="141.3" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.06%)</title><rect x="139.0" y="563.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="142.0" y="574.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.04%)</title><rect x="139.9" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="142.9" y="574.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.04%)</title><rect x="140.4" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="143.4" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.08%)</title><rect x="140.8" y="563.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="143.8" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.06%)</title><rect x="142.0" y="563.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="145.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,051 samples, 20.81%)</title><rect x="142.7" y="563.0" width="245.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.7" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (9 samples, 0.18%)</title><rect x="149.7" y="547.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.7" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.16%)</title><rect x="149.9" y="531.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.9" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.08%)</title><rect x="151.8" y="547.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="154.8" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.10%)</title><rect x="152.7" y="547.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.7" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.10%)</title><rect x="152.7" y="531.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="155.7" y="542.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (3 samples, 0.06%)</title><rect x="154.4" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.4" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (61 samples, 1.21%)</title><rect x="155.1" y="547.0" width="14.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="158.1" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (40 samples, 0.79%)</title><rect x="157.6" y="531.0" width="9.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="160.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (14 samples, 0.28%)</title><rect x="159.3" y="515.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="162.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.18%)</title><rect x="160.0" y="499.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="163.0" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (6 samples, 0.12%)</title><rect x="160.7" y="483.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="163.7" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (17 samples, 0.34%)</title><rect x="162.8" y="515.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="165.8" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.06%)</title><rect x="165.4" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="168.4" y="510.0"></text>
</g>
<g>
<title>___slab_alloc (3 samples, 0.06%)</title><rect x="165.4" y="483.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="168.4" y="494.0"></text>
</g>
<g>
<title>new_slab (3 samples, 0.06%)</title><rect x="165.4" y="467.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="168.4" y="478.0"></text>
</g>
<g>
<title>ksize (8 samples, 0.16%)</title><rect x="167.5" y="531.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.5" y="542.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.10%)</title><rect x="169.3" y="547.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.3" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.04%)</title><rect x="170.0" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="173.0" y="542.0"></text>
</g>
<g>
<title>tcp_push (905 samples, 17.92%)</title><rect x="170.7" y="547.0" width="211.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="173.7" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (900 samples, 17.82%)</title><rect x="171.4" y="531.0" width="210.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="174.4" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="171.9" y="515.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="174.9" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (892 samples, 17.66%)</title><rect x="173.3" y="515.0" width="208.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="176.3" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="180.8" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="183.8" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (816 samples, 16.16%)</title><rect x="181.2" y="499.0" width="190.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="184.2" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.04%)</title><rect x="186.6" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="189.6" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="187.1" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.1" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (779 samples, 15.42%)</title><rect x="187.8" y="483.0" width="182.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="190.8" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (775 samples, 15.34%)</title><rect x="188.0" y="467.0" width="181.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="191.0" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (762 samples, 15.09%)</title><rect x="189.7" y="451.0" width="178.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="192.7" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (145 samples, 2.87%)</title><rect x="190.4" y="435.0" width="33.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.4" y="446.0">__..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.08%)</title><rect x="190.6" y="419.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="193.6" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (5 samples, 0.10%)</title><rect x="191.5" y="419.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="194.5" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 0.14%)</title><rect x="192.7" y="419.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="195.7" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (126 samples, 2.49%)</title><rect x="194.3" y="419.0" width="29.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="197.3" y="430.0">nf..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.10%)</title><rect x="195.7" y="403.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="198.7" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (17 samples, 0.34%)</title><rect x="196.9" y="403.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.9" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (16 samples, 0.32%)</title><rect x="197.1" y="387.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="200.1" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (83 samples, 1.64%)</title><rect x="200.9" y="403.0" width="19.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="203.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.04%)</title><rect x="201.1" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="204.1" y="398.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.06%)</title><rect x="201.6" y="387.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="204.6" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (73 samples, 1.45%)</title><rect x="202.3" y="387.0" width="17.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.3" y="398.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (15 samples, 0.30%)</title><rect x="204.8" y="371.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="207.8" y="382.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (8 samples, 0.16%)</title><rect x="208.3" y="371.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="211.3" y="382.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.06%)</title><rect x="210.4" y="371.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="213.4" y="382.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.04%)</title><rect x="211.1" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="214.1" y="382.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.08%)</title><rect x="211.6" y="371.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="214.6" y="382.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (29 samples, 0.57%)</title><rect x="212.5" y="371.0" width="6.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="215.5" y="382.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (2 samples, 0.04%)</title><rect x="215.3" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="218.3" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.06%)</title><rect x="215.8" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="218.8" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="216.1" y="339.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="219.1" y="350.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (11 samples, 0.22%)</title><rect x="216.8" y="355.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.8" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.04%)</title><rect x="218.9" y="339.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.9" y="350.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.08%)</title><rect x="219.3" y="387.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="222.3" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="220.3" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="223.3" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (12 samples, 0.24%)</title><rect x="221.0" y="403.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="224.0" y="414.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (6 samples, 0.12%)</title><rect x="221.4" y="387.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="224.4" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.08%)</title><rect x="222.8" y="387.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="225.8" y="398.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="223.1" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="226.1" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="223.8" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.8" y="430.0"></text>
</g>
<g>
<title>ip_output (610 samples, 12.08%)</title><rect x="224.5" y="435.0" width="142.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="227.5" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (589 samples, 11.66%)</title><rect x="226.3" y="419.0" width="137.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="229.3" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (6 samples, 0.12%)</title><rect x="228.0" y="403.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="231.0" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (571 samples, 11.30%)</title><rect x="229.8" y="403.0" width="133.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.8" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (487 samples, 9.64%)</title><rect x="233.1" y="387.0" width="113.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.1" y="398.0">__local_bh_ena..</text>
</g>
<g>
<title>do_softirq.part.21 (486 samples, 9.62%)</title><rect x="233.3" y="371.0" width="113.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="236.3" y="382.0">do_softirq.par..</text>
</g>
<g>
<title>do_softirq_own_stack (475 samples, 9.40%)</title><rect x="235.9" y="355.0" width="111.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="238.9" y="366.0">do_softirq_ow..</text>
</g>
<g>
<title>__softirqentry_text_start (473 samples, 9.36%)</title><rect x="235.9" y="339.0" width="110.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="238.9" y="350.0">__softirqentr..</text>
</g>
<g>
<title>__kfree_skb_flush (3 samples, 0.06%)</title><rect x="237.5" y="323.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="240.5" y="334.0"></text>
</g>
<g>
<title>net_rx_action (459 samples, 9.09%)</title><rect x="238.5" y="323.0" width="107.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.5" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (439 samples, 8.69%)</title><rect x="243.1" y="307.0" width="102.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="246.1" y="318.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (424 samples, 8.39%)</title><rect x="246.4" y="291.0" width="99.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="249.4" y="302.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.08%)</title><rect x="246.4" y="275.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="249.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (420 samples, 8.32%)</title><rect x="247.4" y="275.0" width="98.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="250.4" y="286.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.26%)</title><rect x="247.6" y="259.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="250.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (399 samples, 7.90%)</title><rect x="250.6" y="259.0" width="93.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="253.6" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.10%)</title><rect x="251.3" y="243.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="254.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (379 samples, 7.50%)</title><rect x="252.5" y="243.0" width="88.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.5" y="254.0">ip_rcv_fin..</text>
</g>
<g>
<title>ip_local_deliver (366 samples, 7.25%)</title><rect x="253.0" y="227.0" width="85.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="256.0" y="238.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (350 samples, 6.93%)</title><rect x="253.4" y="211.0" width="81.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="256.4" y="222.0">ip_local_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (345 samples, 6.83%)</title><rect x="253.9" y="195.0" width="80.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="256.9" y="206.0">ip_protoc..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.04%)</title><rect x="255.8" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="258.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="256.2" y="179.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="259.2" y="190.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.04%)</title><rect x="256.7" y="179.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="259.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.04%)</title><rect x="257.2" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (329 samples, 6.51%)</title><rect x="257.6" y="179.0" width="76.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="260.6" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.18%)</title><rect x="260.9" y="163.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="263.9" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (2 samples, 0.04%)</title><rect x="263.0" y="163.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="266.0" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="263.5" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="266.5" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="263.9" y="163.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="266.9" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (16 samples, 0.32%)</title><rect x="264.4" y="163.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="267.4" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.08%)</title><rect x="266.3" y="147.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="269.3" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.08%)</title><rect x="267.2" y="147.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="270.2" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (4 samples, 0.08%)</title><rect x="268.1" y="163.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="271.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (272 samples, 5.39%)</title><rect x="269.1" y="163.0" width="63.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.1" y="174.0">tcp_v4_..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.04%)</title><rect x="269.8" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.8" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (3 samples, 0.06%)</title><rect x="270.5" y="147.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.5" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.06%)</title><rect x="271.2" y="147.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.2" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (260 samples, 5.15%)</title><rect x="271.9" y="147.0" width="60.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.9" y="158.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (36 samples, 0.71%)</title><rect x="275.4" y="131.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.4" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (31 samples, 0.61%)</title><rect x="276.6" y="115.0" width="7.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="279.6" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (29 samples, 0.57%)</title><rect x="277.0" y="99.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="280.0" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (3 samples, 0.06%)</title><rect x="277.3" y="83.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="280.3" y="94.0"></text>
</g>
<g>
<title>mod_timer (25 samples, 0.49%)</title><rect x="278.0" y="83.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="281.0" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.38%)</title><rect x="278.9" y="67.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="281.9" y="78.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.04%)</title><rect x="283.3" y="67.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.3" y="78.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="283.8" y="131.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="286.8" y="142.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.04%)</title><rect x="284.5" y="131.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="287.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.06%)</title><rect x="285.0" y="131.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="288.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack (78 samples, 1.54%)</title><rect x="285.7" y="131.0" width="18.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="288.7" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.04%)</title><rect x="288.9" y="115.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="291.9" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.04%)</title><rect x="289.4" y="115.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="292.4" y="126.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.04%)</title><rect x="290.3" y="115.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="293.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.04%)</title><rect x="290.8" y="115.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="293.8" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (47 samples, 0.93%)</title><rect x="291.5" y="115.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="294.5" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.51%)</title><rect x="294.1" y="99.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.1" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.14%)</title><rect x="294.1" y="83.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="297.1" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.14%)</title><rect x="294.1" y="67.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="297.1" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.06%)</title><rect x="295.0" y="51.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="298.0" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="295.7" y="83.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="298.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.30%)</title><rect x="296.2" y="83.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="299.2" y="94.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.28%)</title><rect x="296.4" y="67.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="299.4" y="78.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.18%)</title><rect x="297.6" y="51.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="300.6" y="62.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.16%)</title><rect x="297.8" y="35.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="300.8" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="299.7" y="83.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.7" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (4 samples, 0.08%)</title><rect x="300.9" y="99.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.9" y="110.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.04%)</title><rect x="301.8" y="99.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="304.8" y="110.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.04%)</title><rect x="302.5" y="115.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="305.5" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.04%)</title><rect x="303.4" y="115.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.4" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="303.9" y="131.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="306.9" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (98 samples, 1.94%)</title><rect x="304.4" y="131.0" width="22.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="307.4" y="142.0">t..</text>
</g>
<g>
<title>sock_def_readable (78 samples, 1.54%)</title><rect x="306.5" y="115.0" width="18.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="309.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (72 samples, 1.43%)</title><rect x="307.9" y="99.0" width="16.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="310.9" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (69 samples, 1.37%)</title><rect x="307.9" y="83.0" width="16.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="310.9" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (66 samples, 1.31%)</title><rect x="308.6" y="67.0" width="15.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="311.6" y="78.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="324.0" y="83.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="327.0" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.12%)</title><rect x="324.7" y="115.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="327.7" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.10%)</title><rect x="326.1" y="115.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.1" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.08%)</title><rect x="327.5" y="131.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="330.5" y="142.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="327.7" y="115.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="330.7" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.04%)</title><rect x="328.4" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="331.4" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.06%)</title><rect x="328.9" y="131.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="331.9" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.04%)</title><rect x="329.6" y="131.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="332.6" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.08%)</title><rect x="330.1" y="131.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="333.1" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.06%)</title><rect x="331.2" y="131.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="334.2" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.06%)</title><rect x="331.9" y="131.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="334.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (5 samples, 0.10%)</title><rect x="332.6" y="163.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="335.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.06%)</title><rect x="333.8" y="163.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="336.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.06%)</title><rect x="334.5" y="195.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="337.5" y="206.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.04%)</title><rect x="335.4" y="211.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.4" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.22%)</title><rect x="335.9" y="211.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="338.9" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.10%)</title><rect x="336.1" y="195.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="339.1" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.10%)</title><rect x="336.1" y="179.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.1" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (3 samples, 0.06%)</title><rect x="337.3" y="195.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="340.3" y="206.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (3 samples, 0.06%)</title><rect x="337.3" y="179.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="340.3" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.06%)</title><rect x="338.5" y="227.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="341.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (8 samples, 0.16%)</title><rect x="339.2" y="227.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.2" y="238.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.06%)</title><rect x="341.0" y="243.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.0" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.04%)</title><rect x="341.7" y="243.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="344.7" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.12%)</title><rect x="342.4" y="243.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="345.4" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (3 samples, 0.06%)</title><rect x="342.7" y="227.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="345.7" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.06%)</title><rect x="342.7" y="211.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.7" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="343.4" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="346.4" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="343.4" y="211.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="346.4" y="222.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="343.4" y="195.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="346.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (2 samples, 0.04%)</title><rect x="343.8" y="259.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="346.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.04%)</title><rect x="344.3" y="259.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.3" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="344.8" y="259.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="347.8" y="270.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.06%)</title><rect x="345.7" y="323.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.7" y="334.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.04%)</title><rect x="346.4" y="339.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (70 samples, 1.39%)</title><rect x="346.9" y="387.0" width="16.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="349.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (66 samples, 1.31%)</title><rect x="346.9" y="371.0" width="15.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (36 samples, 0.71%)</title><rect x="349.0" y="355.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="352.0" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.06%)</title><rect x="350.1" y="339.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="353.1" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (25 samples, 0.49%)</title><rect x="350.8" y="339.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="353.8" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.08%)</title><rect x="352.0" y="323.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.0" y="334.0"></text>
</g>
<g>
<title>netif_rx (15 samples, 0.30%)</title><rect x="352.9" y="323.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.9" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (15 samples, 0.30%)</title><rect x="352.9" y="307.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="355.9" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (14 samples, 0.28%)</title><rect x="353.2" y="291.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="356.2" y="302.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.06%)</title><rect x="356.7" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="359.7" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="357.4" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.4" y="366.0"></text>
</g>
<g>
<title>netdev_pick_tx (4 samples, 0.08%)</title><rect x="357.9" y="355.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.9" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (14 samples, 0.28%)</title><rect x="359.0" y="355.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="362.0" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.06%)</title><rect x="361.1" y="339.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="364.1" y="350.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.04%)</title><rect x="361.8" y="339.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="364.8" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="362.3" y="371.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="365.3" y="382.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.04%)</title><rect x="362.8" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.8" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.06%)</title><rect x="363.2" y="403.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="366.2" y="414.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.04%)</title><rect x="363.9" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.9" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.22%)</title><rect x="364.4" y="419.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="367.4" y="430.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (5 samples, 0.10%)</title><rect x="365.1" y="403.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="368.1" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (3 samples, 0.06%)</title><rect x="365.6" y="387.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="368.6" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (3 samples, 0.06%)</title><rect x="366.3" y="403.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="369.3" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.06%)</title><rect x="366.3" y="387.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="369.3" y="398.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="366.3" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="369.3" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="367.0" y="435.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="370.0" y="446.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.08%)</title><rect x="367.7" y="451.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="370.7" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="368.6" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="371.6" y="462.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.04%)</title><rect x="369.3" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="372.3" y="478.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.16%)</title><rect x="369.8" y="483.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="372.8" y="494.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.06%)</title><rect x="370.9" y="467.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="373.9" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.06%)</title><rect x="372.1" y="499.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.1" y="510.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.08%)</title><rect x="373.0" y="499.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="376.0" y="510.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="374.0" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="377.0" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.34%)</title><rect x="374.7" y="499.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="377.7" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.04%)</title><rect x="375.6" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="378.6" y="494.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.04%)</title><rect x="375.6" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.6" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.22%)</title><rect x="376.1" y="483.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="379.1" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.16%)</title><rect x="376.8" y="467.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="379.8" y="478.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.16%)</title><rect x="376.8" y="451.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="379.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.14%)</title><rect x="377.0" y="435.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="380.0" y="446.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (3 samples, 0.06%)</title><rect x="379.1" y="499.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.1" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.12%)</title><rect x="380.0" y="499.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.0" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="381.0" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="384.0" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="381.0" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="384.0" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.04%)</title><rect x="381.7" y="531.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="384.7" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (26 samples, 0.51%)</title><rect x="382.2" y="547.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="385.2" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="382.6" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="385.6" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (22 samples, 0.44%)</title><rect x="383.1" y="531.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="386.1" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (10 samples, 0.20%)</title><rect x="384.7" y="515.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.7" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (5 samples, 0.10%)</title><rect x="387.1" y="515.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="390.1" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.08%)</title><rect x="388.2" y="563.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="391.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.06%)</title><rect x="389.2" y="579.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="392.2" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (17 samples, 0.34%)</title><rect x="389.9" y="595.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="392.9" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="389.9" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="392.9" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (15 samples, 0.30%)</title><rect x="390.3" y="579.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="393.3" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (14 samples, 0.28%)</title><rect x="390.6" y="563.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.6" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.22%)</title><rect x="391.3" y="547.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="394.3" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.53%)</title><rect x="393.8" y="611.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.8" y="622.0"></text>
</g>
<g>
<title>__fdget (24 samples, 0.48%)</title><rect x="393.8" y="595.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (24 samples, 0.48%)</title><rect x="393.8" y="579.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="396.8" y="590.0"></text>
</g>
<g>
<title>__fget (19 samples, 0.38%)</title><rect x="395.0" y="563.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="398.0" y="574.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="399.4" y="595.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="402.4" y="606.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.08%)</title><rect x="400.1" y="627.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="403.1" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="401.5" y="691.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="404.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.32%)</title><rect x="402.2" y="771.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="405.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="405.3" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="405.3" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$66/730931500.exec (2,046 samples, 40.51%)</title><rect x="406.0" y="787.0" width="478.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.0" y="798.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$66/730931500..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$entity$2 (2,046 samples, 40.51%)</title><rect x="406.0" y="771.0" width="478.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.0" y="782.0">ru/mail/polis/service/codearound/AsyncService.lambda$entity$2</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.upsert (2,046 samples, 40.51%)</title><rect x="406.0" y="755.0" width="478.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.0" y="766.0">ru/mail/polis/service/codearound/AsyncService.upsert</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.10%)</title><rect x="408.8" y="739.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.24%)</title><rect x="410.0" y="739.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.24%)</title><rect x="410.0" y="723.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.24%)</title><rect x="410.0" y="707.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.24%)</title><rect x="410.0" y="691.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.0" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.24%)</title><rect x="410.0" y="675.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.18%)</title><rect x="410.0" y="659.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="412.1" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="412.3" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.3" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="412.3" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsert (2,017 samples, 39.93%)</title><rect x="412.8" y="739.0" width="471.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.8" y="750.0">ru/mail/polis/service/codearound/TaskDAO.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,996 samples, 39.52%)</title><rect x="412.8" y="723.0" width="466.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.8" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="413.5" y="707.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="416.5" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,990 samples, 39.40%)</title><rect x="414.2" y="707.0" width="464.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.2" y="718.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1,390 samples, 27.52%)</title><rect x="417.0" y="691.0" width="324.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="420.0" y="702.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>__malloc (12 samples, 0.24%)</title><rect x="419.1" y="675.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="422.1" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.06%)</title><rect x="421.9" y="675.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="424.9" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.18%)</title><rect x="422.6" y="675.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="425.6" y="686.0"></text>
</g>
<g>
<title>malloc@plt (2 samples, 0.04%)</title><rect x="424.7" y="675.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="427.7" y="686.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (3 samples, 0.06%)</title><rect x="426.1" y="675.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="429.1" y="686.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.04%)</title><rect x="426.8" y="675.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="429.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="427.5" y="675.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="430.5" y="686.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1,340 samples, 26.53%)</title><rect x="428.6" y="675.0" width="313.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="431.6" y="686.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*,..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.08%)</title><rect x="430.7" y="659.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="433.7" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.08%)</title><rect x="431.9" y="659.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="434.9" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.12%)</title><rect x="432.8" y="659.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="435.8" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (11 samples, 0.22%)</title><rect x="434.2" y="659.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="437.2" y="670.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (8 samples, 0.16%)</title><rect x="436.8" y="659.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="439.8" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="437.5" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="440.5" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.06%)</title><rect x="438.0" y="643.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="441.0" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (29 samples, 0.57%)</title><rect x="438.7" y="659.0" width="6.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="441.7" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.06%)</title><rect x="439.4" y="643.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="442.4" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.06%)</title><rect x="440.1" y="643.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="443.1" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (9 samples, 0.18%)</title><rect x="440.8" y="643.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="443.8" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (11 samples, 0.22%)</title><rect x="442.9" y="643.0" width="2.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="445.9" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (6 samples, 0.12%)</title><rect x="444.1" y="627.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="447.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,251 samples, 24.77%)</title><rect x="445.5" y="659.0" width="292.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="448.5" y="670.0">rocksdb::DB::Put(rocksdb::WriteOptions ..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="447.1" y="643.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="450.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,240 samples, 24.55%)</title><rect x="448.0" y="643.0" width="289.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="451.0" y="654.0">rocksdb::DBImpl::Put(rocksdb::WriteOpti..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,220 samples, 24.15%)</title><rect x="448.3" y="627.0" width="285.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="451.3" y="638.0">rocksdb::DB::Put(rocksdb::WriteOptions..</text>
</g>
<g>
<title>__libc_free (6 samples, 0.12%)</title><rect x="450.4" y="611.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="453.4" y="622.0"></text>
</g>
<g>
<title>operator delete(void*) (7 samples, 0.14%)</title><rect x="452.0" y="611.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="455.0" y="622.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (2 samples, 0.04%)</title><rect x="453.6" y="611.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="456.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (11 samples, 0.22%)</title><rect x="454.1" y="611.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="457.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1,085 samples, 21.48%)</title><rect x="456.7" y="611.0" width="253.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="459.7" y="622.0">rocksdb::DBImpl::Write(rocksdb::Wr..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (11 samples, 0.22%)</title><rect x="457.8" y="595.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="460.8" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (14 samples, 0.28%)</title><rect x="460.4" y="595.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="463.4" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.10%)</title><rect x="463.7" y="595.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="466.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (5 samples, 0.10%)</title><rect x="465.3" y="595.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="468.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (4 samples, 0.08%)</title><rect x="466.5" y="595.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="469.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() [clone .plt] (2 samples, 0.04%)</title><rect x="467.4" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="470.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (982 samples, 19.44%)</title><rect x="467.9" y="595.0" width="229.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="470.9" y="606.0">rocksdb::DBImpl::WriteImpl(roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (3 samples, 0.06%)</title><rect x="487.3" y="579.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="490.3" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.16%)</title><rect x="488.0" y="579.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="491.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.04%)</title><rect x="489.8" y="579.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="492.8" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (11 samples, 0.22%)</title><rect x="490.3" y="579.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="493.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (3 samples, 0.06%)</title><rect x="492.9" y="579.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="495.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (11 samples, 0.22%)</title><rect x="493.6" y="579.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="496.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (5 samples, 0.10%)</title><rect x="496.2" y="579.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="499.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (4 samples, 0.08%)</title><rect x="496.4" y="563.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="499.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (221 samples, 4.38%)</title><rect x="497.8" y="579.0" width="51.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="500.8" y="590.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (203 samples, 4.02%)</title><rect x="499.4" y="563.0" width="47.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="502.4" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.06%)</title><rect x="500.6" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="503.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (188 samples, 3.72%)</title><rect x="501.3" y="547.0" width="43.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="504.3" y="558.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (30 samples, 0.59%)</title><rect x="503.2" y="531.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="506.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.04%)</title><rect x="510.2" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="513.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (6 samples, 0.12%)</title><rect x="510.6" y="531.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="513.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="512.0" y="531.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="515.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (71 samples, 1.41%)</title><rect x="513.0" y="531.0" width="16.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="516.0" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.12%)</title><rect x="515.1" y="515.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="518.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.04%)</title><rect x="516.5" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="519.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (10 samples, 0.20%)</title><rect x="516.9" y="515.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="519.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (2 samples, 0.04%)</title><rect x="519.3" y="515.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="522.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (41 samples, 0.81%)</title><rect x="519.8" y="515.0" width="9.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="522.8" y="526.0"></text>
</g>
<g>
<title>__GI_write (5 samples, 0.10%)</title><rect x="521.6" y="499.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="524.6" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (15 samples, 0.30%)</title><rect x="522.8" y="499.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="525.8" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.06%)</title><rect x="526.3" y="499.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="529.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (8 samples, 0.16%)</title><rect x="527.0" y="499.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="530.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.04%)</title><rect x="528.9" y="499.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="531.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.08%)</title><rect x="529.6" y="531.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="532.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (5 samples, 0.10%)</title><rect x="530.5" y="531.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="533.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (58 samples, 1.15%)</title><rect x="531.7" y="531.0" width="13.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="534.7" y="542.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.06%)</title><rect x="532.4" y="515.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="535.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.10%)</title><rect x="533.1" y="515.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="536.1" y="526.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (5 samples, 0.10%)</title><rect x="534.5" y="515.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="537.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (5 samples, 0.10%)</title><rect x="535.6" y="515.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="538.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (4 samples, 0.08%)</title><rect x="536.8" y="515.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="539.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (20 samples, 0.40%)</title><rect x="537.7" y="515.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="540.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (11 samples, 0.22%)</title><rect x="542.4" y="515.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="545.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (7 samples, 0.14%)</title><rect x="545.2" y="547.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="548.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) [clone .plt] (2 samples, 0.04%)</title><rect x="546.9" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="549.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (5 samples, 0.10%)</title><rect x="547.3" y="563.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="550.3" y="574.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (2 samples, 0.04%)</title><rect x="548.7" y="563.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="551.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (6 samples, 0.12%)</title><rect x="549.4" y="579.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="552.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (19 samples, 0.38%)</title><rect x="551.1" y="579.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="554.1" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (17 samples, 0.34%)</title><rect x="551.3" y="563.0" width="4.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="554.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.04%)</title><rect x="555.5" y="579.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="558.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (4 samples, 0.08%)</title><rect x="556.0" y="579.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="559.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.04%)</title><rect x="557.1" y="579.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="560.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.10%)</title><rect x="558.1" y="579.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="561.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (414 samples, 8.20%)</title><rect x="559.2" y="579.0" width="96.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="562.2" y="590.0">rocksdb::Wr..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (400 samples, 7.92%)</title><rect x="561.3" y="563.0" width="93.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="564.3" y="574.0">rocksdb::Wr..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="561.8" y="547.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="564.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (4 samples, 0.08%)</title><rect x="562.7" y="547.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="565.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (4 samples, 0.08%)</title><rect x="563.7" y="547.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="566.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (4 samples, 0.08%)</title><rect x="564.6" y="547.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="567.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (382 samples, 7.56%)</title><rect x="565.5" y="547.0" width="89.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="568.5" y="558.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (354 samples, 7.01%)</title><rect x="568.3" y="531.0" width="82.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="571.3" y="542.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (4 samples, 0.08%)</title><rect x="568.8" y="515.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="571.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (5 samples, 0.10%)</title><rect x="569.7" y="515.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="572.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (7 samples, 0.14%)</title><rect x="570.9" y="515.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="573.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.08%)</title><rect x="572.5" y="515.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="575.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (331 samples, 6.55%)</title><rect x="573.7" y="515.0" width="77.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="576.7" y="526.0">rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (8 samples, 0.16%)</title><rect x="575.4" y="499.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="578.4" y="510.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (6 samples, 0.12%)</title><rect x="577.2" y="499.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="580.2" y="510.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="578.2" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="581.2" y="494.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="578.2" y="467.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="581.2" y="478.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="578.2" y="451.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.2" y="462.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.06%)</title><rect x="578.6" y="499.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="581.6" y="510.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (5 samples, 0.10%)</title><rect x="579.6" y="499.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="582.6" y="510.0"></text>
</g>
<g>
<title>memcpy@plt (4 samples, 0.08%)</title><rect x="580.7" y="499.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="583.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (3 samples, 0.06%)</title><rect x="581.7" y="499.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="584.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (2 samples, 0.04%)</title><rect x="582.4" y="499.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="585.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (9 samples, 0.18%)</title><rect x="582.8" y="499.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="585.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (268 samples, 5.31%)</title><rect x="584.9" y="499.0" width="62.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="587.9" y="510.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (19 samples, 0.38%)</title><rect x="589.1" y="483.0" width="4.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="592.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="590.3" y="467.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="593.3" y="478.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="590.8" y="467.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="593.8" y="478.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="590.8" y="451.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="593.8" y="462.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="590.8" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="593.8" y="446.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="590.8" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="593.8" y="430.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.04%)</title><rect x="590.8" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="593.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.04%)</title><rect x="591.2" y="467.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="594.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (6 samples, 0.12%)</title><rect x="591.7" y="467.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="594.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.06%)</title><rect x="592.4" y="451.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="595.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.04%)</title><rect x="593.1" y="467.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="596.1" y="478.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (210 samples, 4.16%)</title><rect x="593.6" y="483.0" width="49.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="596.6" y="494.0">bool ..</text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (189 samples, 3.74%)</title><rect x="595.9" y="467.0" width="44.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="598.9" y="478.0">/tmp..</text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (70 samples, 1.39%)</title><rect x="618.6" y="451.0" width="16.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="621.6" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (4 samples, 0.08%)</title><rect x="619.3" y="435.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="622.3" y="446.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="620.2" y="435.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="623.2" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.14%)</title><rect x="620.9" y="435.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="623.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (53 samples, 1.05%)</title><rect x="622.5" y="435.0" width="12.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.5" y="446.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (4 samples, 0.08%)</title><rect x="627.0" y="419.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="630.0" y="430.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.06%)</title><rect x="627.9" y="419.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="630.9" y="430.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (19 samples, 0.38%)</title><rect x="628.6" y="419.0" width="4.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="631.6" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.12%)</title><rect x="633.1" y="419.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="636.1" y="430.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.04%)</title><rect x="634.5" y="419.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="637.5" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="635.2" y="451.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="638.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (19 samples, 0.38%)</title><rect x="635.6" y="451.0" width="4.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="638.6" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (13 samples, 0.26%)</title><rect x="636.8" y="435.0" width="3.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="639.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (9 samples, 0.18%)</title><rect x="640.1" y="467.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="643.1" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (2 samples, 0.04%)</title><rect x="641.2" y="451.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="644.2" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect x="641.7" y="451.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="644.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="642.2" y="467.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="645.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (4 samples, 0.08%)</title><rect x="642.9" y="483.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="645.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.04%)</title><rect x="644.0" y="483.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="647.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (7 samples, 0.14%)</title><rect x="644.7" y="483.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="647.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (5 samples, 0.10%)</title><rect x="645.0" y="467.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="648.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (5 samples, 0.10%)</title><rect x="646.4" y="483.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="649.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (5 samples, 0.10%)</title><rect x="647.5" y="499.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="650.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (4 samples, 0.08%)</title><rect x="648.7" y="499.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="651.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (6 samples, 0.12%)</title><rect x="649.6" y="499.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="652.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.08%)</title><rect x="651.0" y="531.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="654.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (10 samples, 0.20%)</title><rect x="652.2" y="531.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="655.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="654.8" y="563.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="657.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (20 samples, 0.40%)</title><rect x="656.0" y="579.0" width="4.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="659.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (17 samples, 0.34%)</title><rect x="656.4" y="563.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="659.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (16 samples, 0.32%)</title><rect x="656.7" y="547.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="659.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 0.24%)</title><rect x="657.4" y="531.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="660.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 0.24%)</title><rect x="657.4" y="515.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="660.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (10 samples, 0.20%)</title><rect x="657.8" y="499.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="660.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (2 samples, 0.04%)</title><rect x="658.1" y="483.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="661.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.04%)</title><rect x="658.1" y="467.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="661.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (7 samples, 0.14%)</title><rect x="658.5" y="483.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="661.5" y="494.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 0.14%)</title><rect x="658.5" y="467.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="661.5" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (6 samples, 0.12%)</title><rect x="658.8" y="451.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="661.8" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7656356053640303256.so (3 samples, 0.06%)</title><rect x="659.2" y="435.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="662.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="659.5" y="419.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="662.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (8 samples, 0.16%)</title><rect x="660.6" y="579.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="663.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (4 samples, 0.08%)</title><rect x="662.5" y="579.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="665.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (84 samples, 1.66%)</title><rect x="663.7" y="579.0" width="19.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="666.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (10 samples, 0.20%)</title><rect x="683.5" y="579.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="686.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (7 samples, 0.14%)</title><rect x="683.5" y="563.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="686.5" y="574.0"></text>
</g>
<g>
<title>sched_yield (3 samples, 0.06%)</title><rect x="685.2" y="563.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="688.2" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="685.2" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="688.2" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="685.2" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.06%)</title><rect x="685.9" y="579.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="688.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (2 samples, 0.04%)</title><rect x="686.6" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="689.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.04%)</title><rect x="687.0" y="579.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="690.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (9 samples, 0.18%)</title><rect x="687.5" y="579.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="690.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (6 samples, 0.12%)</title><rect x="689.6" y="579.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="692.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (5 samples, 0.10%)</title><rect x="689.8" y="563.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="692.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (4 samples, 0.08%)</title><rect x="691.0" y="579.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="694.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (4 samples, 0.08%)</title><rect x="692.6" y="579.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="695.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (2 samples, 0.04%)</title><rect x="693.6" y="579.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="696.6" y="590.0"></text>
</g>
<g>
<title>sched_yield (11 samples, 0.22%)</title><rect x="694.0" y="579.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="697.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.22%)</title><rect x="694.0" y="563.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.22%)</title><rect x="694.0" y="547.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.0" y="558.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (8 samples, 0.16%)</title><rect x="694.7" y="531.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="697.7" y="542.0"></text>
</g>
<g>
<title>do_sched_yield (8 samples, 0.16%)</title><rect x="694.7" y="515.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="697.7" y="526.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.16%)</title><rect x="694.7" y="499.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="697.7" y="510.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.16%)</title><rect x="694.7" y="483.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="697.7" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="696.8" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="699.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="696.8" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="696.8" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="699.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.06%)</title><rect x="697.3" y="595.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="700.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.08%)</title><rect x="698.2" y="595.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="701.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (5 samples, 0.10%)</title><rect x="699.2" y="595.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="702.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (4 samples, 0.08%)</title><rect x="700.3" y="595.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="703.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="701.5" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="704.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (5 samples, 0.10%)</title><rect x="702.4" y="595.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="705.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (2 samples, 0.04%)</title><rect x="703.6" y="595.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="706.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (5 samples, 0.10%)</title><rect x="704.1" y="595.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="707.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.04%)</title><rect x="705.7" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="708.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) [clone .plt] (2 samples, 0.04%)</title><rect x="706.2" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="709.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (7 samples, 0.14%)</title><rect x="706.6" y="595.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="709.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) [clone .plt] (2 samples, 0.04%)</title><rect x="708.3" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="711.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (3 samples, 0.06%)</title><rect x="708.7" y="595.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="711.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.04%)</title><rect x="710.2" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="713.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (6 samples, 0.12%)</title><rect x="710.6" y="611.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="713.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (54 samples, 1.07%)</title><rect x="712.0" y="611.0" width="12.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="715.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (5 samples, 0.10%)</title><rect x="712.5" y="595.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="715.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (7 samples, 0.14%)</title><rect x="713.7" y="595.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="716.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (3 samples, 0.06%)</title><rect x="715.3" y="595.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="718.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (3 samples, 0.06%)</title><rect x="716.0" y="595.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="719.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const [clone .plt] (3 samples, 0.06%)</title><rect x="716.7" y="595.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="719.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.06%)</title><rect x="717.4" y="595.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="720.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (4 samples, 0.08%)</title><rect x="718.1" y="595.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="721.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.20%)</title><rect x="719.0" y="595.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="722.0" y="606.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.04%)</title><rect x="720.4" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="723.4" y="590.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (2 samples, 0.04%)</title><rect x="720.9" y="579.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="723.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (5 samples, 0.10%)</title><rect x="721.4" y="595.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="724.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (4 samples, 0.08%)</title><rect x="722.5" y="595.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="725.5" y="606.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.08%)</title><rect x="723.5" y="595.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="726.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (5 samples, 0.10%)</title><rect x="724.6" y="611.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="727.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (6 samples, 0.12%)</title><rect x="725.8" y="611.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="728.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="727.2" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="730.2" y="622.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (6 samples, 0.12%)</title><rect x="727.7" y="611.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="730.7" y="622.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (7 samples, 0.14%)</title><rect x="729.1" y="611.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="732.1" y="622.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="730.9" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="733.9" y="622.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) [clone .plt] (3 samples, 0.06%)</title><rect x="731.4" y="611.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="734.4" y="622.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (4 samples, 0.08%)</title><rect x="732.1" y="611.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="735.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (3 samples, 0.06%)</title><rect x="733.3" y="627.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="736.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="734.0" y="627.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="737.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (3 samples, 0.06%)</title><rect x="734.9" y="627.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="737.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (5 samples, 0.10%)</title><rect x="735.6" y="627.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="738.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() [clone .plt] (3 samples, 0.06%)</title><rect x="737.0" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="740.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (6 samples, 0.12%)</title><rect x="737.7" y="659.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="740.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.10%)</title><rect x="739.1" y="659.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="742.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.04%)</title><rect x="740.3" y="659.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="743.3" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.08%)</title><rect x="740.8" y="659.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="743.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (532 samples, 10.53%)</title><rect x="741.7" y="691.0" width="124.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="744.7" y="702.0">[unknown]</text>
</g>
<g>
<title>__GI_write (513 samples, 10.16%)</title><rect x="741.7" y="675.0" width="119.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="744.7" y="686.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (489 samples, 9.68%)</title><rect x="747.3" y="659.0" width="114.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.3" y="670.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.04%)</title><rect x="747.3" y="643.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="750.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (486 samples, 9.62%)</title><rect x="748.0" y="643.0" width="113.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="751.0" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (425 samples, 8.41%)</title><rect x="761.5" y="627.0" width="99.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="764.5" y="638.0">__x64_sys_wr..</text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="761.8" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="764.8" y="622.0"></text>
</g>
<g>
<title>ksys_write (422 samples, 8.35%)</title><rect x="762.2" y="611.0" width="98.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="765.2" y="622.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (12 samples, 0.24%)</title><rect x="763.4" y="595.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.16%)</title><rect x="763.4" y="579.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="766.4" y="590.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.16%)</title><rect x="763.4" y="563.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.4" y="574.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.06%)</title><rect x="765.5" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="768.5" y="590.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.10%)</title><rect x="766.2" y="595.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.2" y="606.0"></text>
</g>
<g>
<title>fput (3 samples, 0.06%)</title><rect x="767.9" y="595.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="770.9" y="606.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.10%)</title><rect x="768.8" y="595.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.8" y="606.0"></text>
</g>
<g>
<title>vfs_write (389 samples, 7.70%)</title><rect x="770.0" y="595.0" width="90.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="773.0" y="606.0">vfs_write</text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.04%)</title><rect x="770.4" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.4" y="590.0"></text>
</g>
<g>
<title>__sb_start_write (12 samples, 0.24%)</title><rect x="770.9" y="579.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="773.9" y="590.0"></text>
</g>
<g>
<title>__vfs_write (348 samples, 6.89%)</title><rect x="773.7" y="579.0" width="81.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="776.7" y="590.0">__vfs_write</text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.04%)</title><rect x="774.4" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="777.4" y="574.0"></text>
</g>
<g>
<title>new_sync_write (342 samples, 6.77%)</title><rect x="775.1" y="563.0" width="79.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="778.1" y="574.0">new_sync_..</text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.06%)</title><rect x="776.3" y="547.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="779.3" y="558.0"></text>
</g>
<g>
<title>ext4_file_write_iter (330 samples, 6.53%)</title><rect x="777.0" y="547.0" width="77.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="780.0" y="558.0">ext4_file..</text>
</g>
<g>
<title>__generic_file_write_iter (322 samples, 6.37%)</title><rect x="777.4" y="531.0" width="75.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="780.4" y="542.0">__generi..</text>
</g>
<g>
<title>__x86_indirect_thunk_r10 (2 samples, 0.04%)</title><rect x="779.3" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="782.3" y="526.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="779.8" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="782.8" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.08%)</title><rect x="780.2" y="515.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="783.2" y="526.0"></text>
</g>
<g>
<title>file_remove_privs (5 samples, 0.10%)</title><rect x="781.2" y="515.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="784.2" y="526.0"></text>
</g>
<g>
<title>file_update_time (9 samples, 0.18%)</title><rect x="782.3" y="515.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.3" y="526.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.04%)</title><rect x="782.8" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="785.8" y="510.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.04%)</title><rect x="782.8" y="483.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="785.8" y="494.0"></text>
</g>
<g>
<title>generic_update_time (4 samples, 0.08%)</title><rect x="783.3" y="499.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="786.3" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.08%)</title><rect x="783.3" y="483.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="786.3" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.08%)</title><rect x="783.3" y="467.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.3" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.06%)</title><rect x="783.5" y="451.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="786.5" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.06%)</title><rect x="783.5" y="435.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="786.5" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="783.7" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="786.7" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (288 samples, 5.70%)</title><rect x="784.4" y="515.0" width="67.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="787.4" y="526.0">generic..</text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="786.8" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="789.8" y="510.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.04%)</title><rect x="787.2" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="790.2" y="510.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.04%)</title><rect x="787.7" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="790.7" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_begin (100 samples, 1.98%)</title><rect x="788.2" y="499.0" width="23.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="791.2" y="510.0">e..</text>
</g>
<g>
<title>__ext4_journal_start_sb (49 samples, 0.97%)</title><rect x="788.9" y="483.0" width="11.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.9" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (43 samples, 0.85%)</title><rect x="789.3" y="467.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="792.3" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (17 samples, 0.34%)</title><rect x="790.5" y="451.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="793.5" y="462.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (4 samples, 0.08%)</title><rect x="794.5" y="451.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="797.5" y="462.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.04%)</title><rect x="795.4" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="798.4" y="462.0"></text>
</g>
<g>
<title>should_failslab (3 samples, 0.06%)</title><rect x="795.9" y="451.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="798.9" y="462.0"></text>
</g>
<g>
<title>start_this_handle (12 samples, 0.24%)</title><rect x="796.6" y="451.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="799.6" y="462.0"></text>
</g>
<g>
<title>add_transaction_credits (9 samples, 0.18%)</title><rect x="797.3" y="435.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="800.3" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="799.4" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="802.4" y="478.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.04%)</title><rect x="799.9" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="802.9" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (10 samples, 0.20%)</title><rect x="800.3" y="483.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="803.3" y="494.0"></text>
</g>
<g>
<title>ext4_nonda_switch (3 samples, 0.06%)</title><rect x="802.7" y="483.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="805.7" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (34 samples, 0.67%)</title><rect x="803.4" y="483.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="806.4" y="494.0"></text>
</g>
<g>
<title>pagecache_get_page (28 samples, 0.55%)</title><rect x="803.6" y="467.0" width="6.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="806.6" y="478.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (2 samples, 0.04%)</title><rect x="803.8" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="806.8" y="462.0"></text>
</g>
<g>
<title>find_get_entry (24 samples, 0.48%)</title><rect x="804.3" y="451.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="807.3" y="462.0"></text>
</g>
<g>
<title>xas_load (12 samples, 0.24%)</title><rect x="806.9" y="435.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="809.9" y="446.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.06%)</title><rect x="809.0" y="419.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="812.0" y="430.0"></text>
</g>
<g>
<title>wait_for_stable_page (5 samples, 0.10%)</title><rect x="810.1" y="467.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.1" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (158 samples, 3.13%)</title><rect x="811.5" y="499.0" width="37.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="814.5" y="510.0">ext..</text>
</g>
<g>
<title>__ext4_journal_stop (26 samples, 0.51%)</title><rect x="812.2" y="483.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="815.2" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (23 samples, 0.46%)</title><rect x="812.5" y="467.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="815.5" y="478.0"></text>
</g>
<g>
<title>__wake_up (11 samples, 0.22%)</title><rect x="814.1" y="451.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="817.1" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.18%)</title><rect x="814.3" y="435.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="817.3" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="815.0" y="419.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="818.0" y="430.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.08%)</title><rect x="816.9" y="451.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="819.9" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="817.8" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.8" y="478.0"></text>
</g>
<g>
<title>generic_write_end (127 samples, 2.51%)</title><rect x="818.8" y="483.0" width="29.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="821.8" y="494.0">ge..</text>
</g>
<g>
<title>__generic_write_end (116 samples, 2.30%)</title><rect x="819.7" y="467.0" width="27.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="822.7" y="478.0">_..</text>
</g>
<g>
<title>__mark_inode_dirty (109 samples, 2.16%)</title><rect x="820.4" y="451.0" width="25.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.4" y="462.0">_..</text>
</g>
<g>
<title>ext4_dirty_inode (103 samples, 2.04%)</title><rect x="821.8" y="435.0" width="24.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="824.8" y="446.0">e..</text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.10%)</title><rect x="821.8" y="419.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.8" y="430.0"></text>
</g>
<g>
<title>ext4_journal_check_start (3 samples, 0.06%)</title><rect x="822.3" y="403.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="825.3" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_stop (7 samples, 0.14%)</title><rect x="823.0" y="419.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="826.0" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.08%)</title><rect x="823.7" y="403.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="826.7" y="414.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (87 samples, 1.72%)</title><rect x="825.1" y="419.0" width="20.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="828.1" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.04%)</title><rect x="825.3" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="828.3" y="414.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (57 samples, 1.13%)</title><rect x="826.0" y="403.0" width="13.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="829.0" y="414.0"></text>
</g>
<g>
<title>ext4_do_update_inode (51 samples, 1.01%)</title><rect x="827.2" y="387.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="830.2" y="398.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (6 samples, 0.12%)</title><rect x="829.8" y="371.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="832.8" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (4 samples, 0.08%)</title><rect x="830.2" y="355.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="833.2" y="366.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (20 samples, 0.40%)</title><rect x="831.6" y="371.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="834.6" y="382.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (18 samples, 0.36%)</title><rect x="832.1" y="355.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.1" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="833.3" y="339.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="836.3" y="350.0"></text>
</g>
<g>
<title>crypto_shash_update (11 samples, 0.22%)</title><rect x="833.7" y="339.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="836.7" y="350.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (8 samples, 0.16%)</title><rect x="834.4" y="323.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="837.4" y="334.0"></text>
</g>
<g>
<title>from_kuid (7 samples, 0.14%)</title><rect x="836.5" y="371.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.5" y="382.0"></text>
</g>
<g>
<title>map_id_up (7 samples, 0.14%)</title><rect x="836.5" y="355.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="839.5" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.06%)</title><rect x="838.2" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="841.2" y="382.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (26 samples, 0.51%)</title><rect x="839.3" y="403.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="842.3" y="414.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (18 samples, 0.36%)</title><rect x="839.3" y="387.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="842.3" y="398.0"></text>
</g>
<g>
<title>__getblk_gfp (9 samples, 0.18%)</title><rect x="840.3" y="371.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.3" y="382.0"></text>
</g>
<g>
<title>__find_get_block (7 samples, 0.14%)</title><rect x="840.3" y="355.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.3" y="366.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.10%)</title><rect x="840.7" y="339.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="843.7" y="350.0"></text>
</g>
<g>
<title>ext4_get_group_desc (5 samples, 0.10%)</title><rect x="842.4" y="371.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="845.4" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (4 samples, 0.08%)</title><rect x="843.5" y="387.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.5" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (3 samples, 0.06%)</title><rect x="843.8" y="371.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="846.8" y="382.0"></text>
</g>
<g>
<title>ext4_inode_table (3 samples, 0.06%)</title><rect x="844.5" y="387.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="847.5" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.04%)</title><rect x="845.4" y="419.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="848.4" y="430.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.06%)</title><rect x="845.9" y="451.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.9" y="462.0"></text>
</g>
<g>
<title>block_write_end (6 samples, 0.12%)</title><rect x="846.8" y="467.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="849.8" y="478.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (5 samples, 0.10%)</title><rect x="846.8" y="451.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="849.8" y="462.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.04%)</title><rect x="847.5" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.5" y="446.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.04%)</title><rect x="848.5" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="851.5" y="510.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (7 samples, 0.14%)</title><rect x="849.4" y="499.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.4" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="850.1" y="483.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.1" y="494.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="851.7" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="854.7" y="526.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.04%)</title><rect x="852.2" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="855.2" y="526.0"></text>
</g>
<g>
<title>ext4_write_checks (6 samples, 0.12%)</title><rect x="852.7" y="531.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="855.7" y="542.0"></text>
</g>
<g>
<title>generic_write_checks (5 samples, 0.10%)</title><rect x="852.9" y="515.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="855.9" y="526.0"></text>
</g>
<g>
<title>generic_write_check_limits (4 samples, 0.08%)</title><rect x="853.1" y="499.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="856.1" y="510.0"></text>
</g>
<g>
<title>up_write (4 samples, 0.08%)</title><rect x="854.1" y="547.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="857.1" y="558.0"></text>
</g>
<g>
<title>fsnotify (6 samples, 0.12%)</title><rect x="855.0" y="579.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="858.0" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (19 samples, 0.38%)</title><rect x="856.4" y="579.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="859.4" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="857.3" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="860.3" y="574.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.26%)</title><rect x="857.8" y="563.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="860.8" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (10 samples, 0.20%)</title><rect x="858.0" y="547.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="861.0" y="558.0"></text>
</g>
<g>
<title>common_file_perm (10 samples, 0.20%)</title><rect x="858.0" y="531.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="861.0" y="542.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.04%)</title><rect x="860.4" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="863.4" y="558.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 0.06%)</title><rect x="860.8" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="863.8" y="638.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="861.5" y="675.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="864.5" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.06%)</title><rect x="862.0" y="675.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="865.0" y="686.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="863.2" y="675.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="866.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="863.2" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="866.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="863.2" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="866.2" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.04%)</title><rect x="863.6" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="866.6" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (6 samples, 0.12%)</title><rect x="864.1" y="675.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="867.1" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) [clone .plt] (2 samples, 0.04%)</title><rect x="865.5" y="675.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="868.5" y="686.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.06%)</title><rect x="866.0" y="691.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="869.0" y="702.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.14%)</title><rect x="866.7" y="691.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="869.7" y="702.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (11 samples, 0.22%)</title><rect x="868.3" y="691.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="871.3" y="702.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (6 samples, 0.12%)</title><rect x="870.9" y="691.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="873.9" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="871.8" y="675.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="874.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="871.8" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="871.8" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="874.8" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.28%)</title><rect x="872.3" y="691.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="875.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.26%)</title><rect x="872.5" y="675.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="875.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.26%)</title><rect x="872.5" y="659.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="875.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.20%)</title><rect x="873.2" y="643.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="876.2" y="654.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.20%)</title><rect x="873.2" y="627.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="876.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.18%)</title><rect x="873.4" y="611.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="876.4" y="622.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.16%)</title><rect x="873.7" y="595.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="876.7" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.16%)</title><rect x="873.7" y="579.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="876.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.16%)</title><rect x="873.7" y="563.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="876.7" y="574.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (4 samples, 0.08%)</title><rect x="875.6" y="691.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="878.6" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) [clone .plt] (2 samples, 0.04%)</title><rect x="876.5" y="691.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="879.5" y="702.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (7 samples, 0.14%)</title><rect x="877.0" y="691.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="880.0" y="702.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.04%)</title><rect x="878.6" y="691.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="881.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (21 samples, 0.42%)</title><rect x="879.1" y="723.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.1" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.10%)</title><rect x="881.4" y="707.0" width="1.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="884.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (5 samples, 0.10%)</title><rect x="882.8" y="707.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.8" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2 samples, 0.04%)</title><rect x="883.5" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsert (3 samples, 0.06%)</title><rect x="884.0" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (3 samples, 0.06%)</title><rect x="884.0" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (3 samples, 0.06%)</title><rect x="884.0" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.0" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,296 samples, 25.66%)</title><rect x="884.7" y="867.0" width="302.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.7" y="878.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (11 samples, 0.22%)</title><rect x="885.6" y="851.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="888.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.04%)</title><rect x="888.4" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.16%)</title><rect x="888.9" y="851.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.16%)</title><rect x="888.9" y="835.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.16%)</title><rect x="888.9" y="819.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (573 samples, 11.34%)</title><rect x="890.7" y="851.0" width="133.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="893.7" y="862.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (573 samples, 11.34%)</title><rect x="890.7" y="835.0" width="133.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.7" y="846.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (12 samples, 0.24%)</title><rect x="893.3" y="819.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="896.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (529 samples, 10.47%)</title><rect x="896.1" y="819.0" width="123.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="899.1" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (16 samples, 0.32%)</title><rect x="896.1" y="803.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="899.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.32%)</title><rect x="896.1" y="787.0" width="3.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="899.1" y="798.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.08%)</title><rect x="896.1" y="771.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="899.1" y="782.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (9 samples, 0.18%)</title><rect x="897.0" y="771.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="900.0" y="782.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="899.1" y="771.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="902.1" y="782.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="899.1" y="755.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="902.1" y="766.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.16%)</title><rect x="899.8" y="803.0" width="1.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="902.8" y="814.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.08%)</title><rect x="901.7" y="803.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="904.7" y="814.0"></text>
</g>
<g>
<title>epoll_wait (501 samples, 9.92%)</title><rect x="902.7" y="803.0" width="117.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="905.7" y="814.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (484 samples, 9.58%)</title><rect x="906.6" y="787.0" width="113.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="909.6" y="798.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.08%)</title><rect x="906.6" y="771.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="909.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (480 samples, 9.50%)</title><rect x="907.6" y="771.0" width="112.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="910.6" y="782.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (341 samples, 6.75%)</title><rect x="938.9" y="755.0" width="79.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.9" y="766.0">__x64_sys..</text>
</g>
<g>
<title>do_epoll_wait (338 samples, 6.69%)</title><rect x="938.9" y="739.0" width="78.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.9" y="750.0">do_epoll_..</text>
</g>
<g>
<title>__fdget (31 samples, 0.61%)</title><rect x="940.0" y="723.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="943.0" y="734.0"></text>
</g>
<g>
<title>__fget_light (30 samples, 0.59%)</title><rect x="940.3" y="707.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.3" y="718.0"></text>
</g>
<g>
<title>__fget (25 samples, 0.49%)</title><rect x="941.4" y="691.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="944.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.12%)</title><rect x="947.3" y="723.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="950.3" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.04%)</title><rect x="948.7" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="951.7" y="734.0"></text>
</g>
<g>
<title>ep_poll (291 samples, 5.76%)</title><rect x="949.1" y="723.0" width="68.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="952.1" y="734.0">ep_poll</text>
</g>
<g>
<title>_raw_spin_lock_irq (4 samples, 0.08%)</title><rect x="956.9" y="707.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="959.9" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (223 samples, 4.41%)</title><rect x="957.8" y="707.0" width="52.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="960.8" y="718.0">ep_sc..</text>
</g>
<g>
<title>_cond_resched (3 samples, 0.06%)</title><rect x="967.4" y="691.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="970.4" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (127 samples, 2.51%)</title><rect x="968.3" y="691.0" width="29.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="971.3" y="702.0">ep..</text>
</g>
<g>
<title>ep_item_poll.isra.16 (105 samples, 2.08%)</title><rect x="971.1" y="675.0" width="24.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.1" y="686.0">e..</text>
</g>
<g>
<title>sock_poll (81 samples, 1.60%)</title><rect x="975.3" y="659.0" width="18.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="978.3" y="670.0"></text>
</g>
<g>
<title>tcp_poll (26 samples, 0.51%)</title><rect x="986.3" y="643.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="989.3" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (8 samples, 0.16%)</title><rect x="992.4" y="643.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.4" y="654.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.12%)</title><rect x="994.2" y="659.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="997.2" y="670.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.20%)</title><rect x="995.6" y="675.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.6" y="686.0"></text>
</g>
<g>
<title>mutex_lock (50 samples, 0.99%)</title><rect x="998.0" y="691.0" width="11.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1001.0" y="702.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="1008.2" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1011.2" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.08%)</title><rect x="1008.7" y="675.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1011.7" y="686.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.10%)</title><rect x="1010.1" y="707.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1013.1" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.10%)</title><rect x="1011.3" y="707.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1014.3" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (18 samples, 0.36%)</title><rect x="1012.5" y="707.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1015.5" y="718.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.10%)</title><rect x="1012.5" y="691.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1015.5" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 0.26%)</title><rect x="1013.6" y="691.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.6" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="1013.6" y="675.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1016.6" y="686.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.22%)</title><rect x="1014.1" y="675.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1017.1" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (11 samples, 0.22%)</title><rect x="1014.1" y="659.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.1" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="1016.2" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1019.2" y="654.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.04%)</title><rect x="1016.7" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1019.7" y="718.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="1017.1" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1020.1" y="734.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="1018.1" y="739.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1021.1" y="750.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.10%)</title><rect x="1018.5" y="755.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1021.5" y="766.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.12%)</title><rect x="1019.7" y="819.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1022.7" y="830.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 0.24%)</title><rect x="1021.1" y="819.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1024.1" y="830.0"></text>
</g>
<g>
<title>epoll_wait@plt (3 samples, 0.06%)</title><rect x="1023.9" y="819.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1026.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (685 samples, 13.56%)</title><rect x="1024.6" y="851.0" width="160.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.6" y="862.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (685 samples, 13.56%)</title><rect x="1024.6" y="835.0" width="160.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.6" y="846.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (332 samples, 6.57%)</title><rect x="1025.3" y="819.0" width="77.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1028.3" y="830.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.04%)</title><rect x="1028.3" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.3" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="1028.8" y="803.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1031.8" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="1029.3" y="803.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1032.3" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.10%)</title><rect x="1030.0" y="803.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1033.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (198 samples, 3.92%)</title><rect x="1031.1" y="803.0" width="46.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.1" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (198 samples, 3.92%)</title><rect x="1031.1" y="787.0" width="46.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.1" y="798.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (172 samples, 3.41%)</title><rect x="1032.1" y="771.0" width="40.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.1" y="782.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (35 samples, 0.69%)</title><rect x="1032.5" y="755.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (33 samples, 0.65%)</title><rect x="1033.0" y="739.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1036.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.14%)</title><rect x="1036.0" y="723.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.14%)</title><rect x="1036.0" y="707.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.14%)</title><rect x="1037.7" y="723.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.14%)</title><rect x="1037.7" y="707.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.06%)</title><rect x="1038.6" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.08%)</title><rect x="1039.8" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1042.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="1039.8" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="1039.8" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.08%)</title><rect x="1039.8" y="675.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.entity (135 samples, 2.67%)</title><rect x="1040.7" y="755.0" width="31.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.7" y="766.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="1041.7" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.04%)</title><rect x="1041.7" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.04%)</title><rect x="1041.7" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="1041.7" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.runAsyncHandler (123 samples, 2.44%)</title><rect x="1042.1" y="739.0" width="28.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.1" y="750.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (110 samples, 2.18%)</title><rect x="1045.2" y="723.0" width="25.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.2" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (110 samples, 2.18%)</title><rect x="1045.2" y="707.0" width="25.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.2" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (15 samples, 0.30%)</title><rect x="1045.2" y="691.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (15 samples, 0.30%)</title><rect x="1045.2" y="675.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (15 samples, 0.30%)</title><rect x="1045.2" y="659.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (15 samples, 0.30%)</title><rect x="1045.2" y="643.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="1048.7" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="1048.7" y="675.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (92 samples, 1.82%)</title><rect x="1049.4" y="691.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.4" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (92 samples, 1.82%)</title><rect x="1049.4" y="675.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.4" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (92 samples, 1.82%)</title><rect x="1049.4" y="659.0" width="21.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.4" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (92 samples, 1.82%)</title><rect x="1049.4" y="643.0" width="21.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.4" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (86 samples, 1.70%)</title><rect x="1050.8" y="627.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.8" y="638.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.04%)</title><rect x="1051.2" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1054.2" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="1051.7" y="611.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1054.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (23 samples, 0.46%)</title><rect x="1052.6" y="611.0" width="5.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1055.6" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="1055.0" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1058.0" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="1055.7" y="595.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1058.7" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.04%)</title><rect x="1056.4" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1059.4" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.08%)</title><rect x="1056.8" y="595.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.8" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (49 samples, 0.97%)</title><rect x="1058.0" y="611.0" width="11.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1061.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.87%)</title><rect x="1059.2" y="595.0" width="10.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1062.2" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.87%)</title><rect x="1059.2" y="579.0" width="10.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1062.2" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (37 samples, 0.73%)</title><rect x="1060.8" y="563.0" width="8.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1063.8" y="574.0"></text>
</g>
<g>
<title>do_futex (36 samples, 0.71%)</title><rect x="1060.8" y="547.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1063.8" y="558.0"></text>
</g>
<g>
<title>futex_wake (33 samples, 0.65%)</title><rect x="1061.3" y="531.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1064.3" y="542.0"></text>
</g>
<g>
<title>wake_up_q (31 samples, 0.61%)</title><rect x="1061.7" y="515.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1064.7" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (31 samples, 0.61%)</title><rect x="1061.7" y="499.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1064.7" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.61%)</title><rect x="1061.7" y="483.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1064.7" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.10%)</title><rect x="1069.5" y="611.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1072.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (6 samples, 0.12%)</title><rect x="1070.9" y="739.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (22 samples, 0.44%)</title><rect x="1072.3" y="771.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (22 samples, 0.44%)</title><rect x="1072.3" y="755.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1075.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.12%)</title><rect x="1072.3" y="739.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (16 samples, 0.32%)</title><rect x="1073.7" y="739.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (16 samples, 0.32%)</title><rect x="1073.7" y="723.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1076.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (16 samples, 0.32%)</title><rect x="1073.7" y="707.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (71 samples, 1.41%)</title><rect x="1077.4" y="803.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1080.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.24%)</title><rect x="1089.8" y="787.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.24%)</title><rect x="1089.8" y="771.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.24%)</title><rect x="1089.8" y="755.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (12 samples, 0.24%)</title><rect x="1089.8" y="739.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.12%)</title><rect x="1092.6" y="787.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (28 samples, 0.55%)</title><rect x="1094.0" y="803.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.30%)</title><rect x="1097.0" y="787.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1100.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.30%)</title><rect x="1097.0" y="771.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="1100.1" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="1100.1" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1103.1" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.04%)</title><rect x="1100.1" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.20%)</title><rect x="1100.5" y="803.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.20%)</title><rect x="1100.5" y="787.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.04%)</title><rect x="1102.9" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1105.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (348 samples, 6.89%)</title><rect x="1103.3" y="819.0" width="81.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.3" y="830.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (343 samples, 6.79%)</title><rect x="1104.5" y="803.0" width="80.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.5" y="814.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (59 samples, 1.17%)</title><rect x="1108.0" y="787.0" width="13.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1111.0" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.16%)</title><rect x="1109.2" y="771.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1112.2" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1111.0" y="771.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1114.0" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="1111.5" y="771.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.5" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.06%)</title><rect x="1112.0" y="771.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1115.0" y="782.0"></text>
</g>
<g>
<title>__memmove_ssse3 (14 samples, 0.28%)</title><rect x="1112.7" y="771.0" width="3.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1115.7" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (20 samples, 0.40%)</title><rect x="1115.9" y="771.0" width="4.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1118.9" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1117.1" y="755.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1120.1" y="766.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="1117.6" y="755.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1120.6" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.14%)</title><rect x="1118.0" y="755.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1121.0" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.08%)</title><rect x="1119.7" y="755.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1122.7" y="766.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.06%)</title><rect x="1119.9" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1122.9" y="750.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.04%)</title><rect x="1120.6" y="771.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1123.6" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.06%)</title><rect x="1121.1" y="771.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1124.1" y="782.0"></text>
</g>
<g>
<title>__GI___recv (261 samples, 5.17%)</title><rect x="1121.8" y="787.0" width="61.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1124.8" y="798.0">__GI__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (242 samples, 4.79%)</title><rect x="1126.2" y="771.0" width="56.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1129.2" y="782.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (241 samples, 4.77%)</title><rect x="1126.5" y="755.0" width="56.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1129.5" y="766.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_recvfrom (191 samples, 3.78%)</title><rect x="1138.1" y="739.0" width="44.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1141.1" y="750.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (182 samples, 3.60%)</title><rect x="1138.4" y="723.0" width="42.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1141.4" y="734.0">__sy..</text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.10%)</title><rect x="1140.9" y="707.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1143.9" y="718.0"></text>
</g>
<g>
<title>sock_recvmsg (145 samples, 2.87%)</title><rect x="1142.3" y="707.0" width="33.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1145.3" y="718.0">so..</text>
</g>
<g>
<title>inet_recvmsg (121 samples, 2.40%)</title><rect x="1143.0" y="691.0" width="28.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1146.0" y="702.0">in..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="1145.1" y="675.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.1" y="686.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.10%)</title><rect x="1145.6" y="675.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1148.6" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (103 samples, 2.04%)</title><rect x="1147.2" y="675.0" width="24.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1150.2" y="686.0">t..</text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.18%)</title><rect x="1151.9" y="659.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.9" y="670.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="1151.9" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1154.9" y="654.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.12%)</title><rect x="1152.4" y="643.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1155.4" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="1153.1" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1156.1" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.08%)</title><rect x="1155.0" y="659.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1158.0" y="670.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.10%)</title><rect x="1155.9" y="659.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1158.9" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (40 samples, 0.79%)</title><rect x="1157.1" y="659.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1160.1" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (38 samples, 0.75%)</title><rect x="1157.1" y="643.0" width="8.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.1" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (29 samples, 0.57%)</title><rect x="1159.2" y="627.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.2" y="638.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.22%)</title><rect x="1159.2" y="611.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.2" y="622.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.04%)</title><rect x="1160.3" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1163.3" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.08%)</title><rect x="1160.8" y="595.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.8" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (15 samples, 0.30%)</title><rect x="1161.7" y="611.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1164.7" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (14 samples, 0.28%)</title><rect x="1162.0" y="595.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1165.0" y="606.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.06%)</title><rect x="1165.2" y="611.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1168.2" y="622.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="1165.9" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.9" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (9 samples, 0.18%)</title><rect x="1166.6" y="659.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1169.6" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.18%)</title><rect x="1169.0" y="659.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.0" y="670.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="1169.2" y="643.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1172.2" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.10%)</title><rect x="1169.9" y="643.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1172.9" y="654.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="1170.1" y="627.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.1" y="638.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="1170.4" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.4" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (20 samples, 0.40%)</title><rect x="1171.3" y="691.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.3" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (17 samples, 0.34%)</title><rect x="1172.0" y="675.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.0" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (16 samples, 0.32%)</title><rect x="1172.2" y="659.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.2" y="670.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.08%)</title><rect x="1172.9" y="643.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1175.9" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.18%)</title><rect x="1173.9" y="643.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.9" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (20 samples, 0.40%)</title><rect x="1176.2" y="707.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.2" y="718.0"></text>
</g>
<g>
<title>__fdget (18 samples, 0.36%)</title><rect x="1176.2" y="691.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.36%)</title><rect x="1176.2" y="675.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1179.2" y="686.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.26%)</title><rect x="1177.4" y="659.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1180.4" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="1180.4" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.4" y="702.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="1180.9" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1183.9" y="734.0"></text>
</g>
<g>
<title>import_single_range (6 samples, 0.12%)</title><rect x="1181.4" y="723.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1184.4" y="734.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="1182.8" y="787.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1185.8" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.10%)</title><rect x="1183.5" y="787.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1186.5" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (12 samples, 0.24%)</title><rect x="1184.6" y="851.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="1185.8" y="835.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1188.8" y="846.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.10%)</title><rect x="1186.3" y="835.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.08%)</title><rect x="1186.5" y="819.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1189.5" y="830.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.12%)</title><rect x="1187.4" y="867.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1190.4" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.12%)</title><rect x="1187.4" y="851.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1190.4" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.12%)</title><rect x="1187.4" y="835.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="846.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.04%)</title><rect x="1187.4" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.4" y="830.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.04%)</title><rect x="1187.4" y="803.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="814.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.04%)</title><rect x="1187.9" y="819.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.04%)</title><rect x="1187.9" y="803.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.04%)</title><rect x="1187.9" y="787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.9" y="798.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.04%)</title><rect x="1187.9" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.9" y="782.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.04%)</title><rect x="1187.9" y="755.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.9" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.04%)</title><rect x="1187.9" y="739.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="750.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.04%)</title><rect x="1188.4" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (4 samples, 0.08%)</title><rect x="1188.8" y="867.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.8" y="878.0"></text>
</g>
</g>
</svg>
