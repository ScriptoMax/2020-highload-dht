<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">async Java client | lock/monitor</text>
<text id="details" x="10" y="645"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="645"> </text>
<g id="frames">
<g>
<title>all (2,809 samples, 100.00%)</title><rect x="10.0" y="611.0" width="1180.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="622.0">all</text>
</g>
<g>
<title>java/lang/Thread.exit (76 samples, 2.71%)</title><rect x="10.0" y="595.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/ThreadGroup.threadTerminated (76 samples, 2.71%)</title><rect x="10.0" y="579.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="590.0">ja..</text>
</g>
<g>
<title>java.lang.ThreadGroup (76 samples, 2.71%)</title><rect x="10.0" y="563.0" width="31.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.0" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.run (277 samples, 9.86%)</title><rect x="41.9" y="595.0" width="116.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="606.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (277 samples, 9.86%)</title><rect x="41.9" y="579.0" width="116.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.9" y="590.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (277 samples, 9.86%)</title><rect x="41.9" y="563.0" width="116.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="574.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (174 samples, 6.19%)</title><rect x="41.9" y="547.0" width="73.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.9" y="558.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (174 samples, 6.19%)</title><rect x="41.9" y="531.0" width="73.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.9" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (174 samples, 6.19%)</title><rect x="41.9" y="515.0" width="73.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.9" y="526.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.apply (174 samples, 6.19%)</title><rect x="41.9" y="499.0" width="73.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="510.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (174 samples, 6.19%)</title><rect x="41.9" y="483.0" width="73.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.9" y="494.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (174 samples, 6.19%)</title><rect x="41.9" y="467.0" width="73.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.9" y="478.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (82 samples, 2.92%)</title><rect x="41.9" y="451.0" width="34.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.9" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (82 samples, 2.92%)</title><rect x="41.9" y="435.0" width="34.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (82 samples, 2.92%)</title><rect x="41.9" y="419.0" width="34.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="430.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (77 samples, 2.74%)</title><rect x="41.9" y="403.0" width="32.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.9" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (77 samples, 2.74%)</title><rect x="41.9" y="387.0" width="32.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.9" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (77 samples, 2.74%)</title><rect x="41.9" y="371.0" width="32.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.9" y="382.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/1812886357.apply (77 samples, 2.74%)</title><rect x="41.9" y="355.0" width="32.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.9" y="366.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (77 samples, 2.74%)</title><rect x="41.9" y="339.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.9" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (77 samples, 2.74%)</title><rect x="41.9" y="323.0" width="32.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.9" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1571858567.apply (77 samples, 2.74%)</title><rect x="41.9" y="307.0" width="32.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.9" y="318.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (77 samples, 2.74%)</title><rect x="41.9" y="291.0" width="32.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.9" y="302.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (77 samples, 2.74%)</title><rect x="41.9" y="275.0" width="32.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.9" y="286.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (77 samples, 2.74%)</title><rect x="41.9" y="259.0" width="32.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="270.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (77 samples, 2.74%)</title><rect x="41.9" y="243.0" width="32.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.9" y="254.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$183/36443311.apply (77 samples, 2.74%)</title><rect x="41.9" y="227.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.9" y="238.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (77 samples, 2.74%)</title><rect x="41.9" y="211.0" width="32.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.9" y="222.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (77 samples, 2.74%)</title><rect x="41.9" y="195.0" width="32.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.9" y="206.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (77 samples, 2.74%)</title><rect x="41.9" y="179.0" width="32.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.9" y="190.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (28 samples, 1.00%)</title><rect x="41.9" y="163.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (28 samples, 1.00%)</title><rect x="41.9" y="147.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (28 samples, 1.00%)</title><rect x="41.9" y="131.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (28 samples, 1.00%)</title><rect x="41.9" y="115.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (28 samples, 1.00%)</title><rect x="41.9" y="99.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.9" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (5 samples, 0.18%)</title><rect x="41.9" y="83.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="44.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (23 samples, 0.82%)</title><rect x="44.0" y="83.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.0" y="94.0"></text>
</g>
<g>
<title>java.lang.Object (23 samples, 0.82%)</title><rect x="44.0" y="67.0" width="9.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="47.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (49 samples, 1.74%)</title><rect x="53.7" y="163.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (49 samples, 1.74%)</title><rect x="53.7" y="147.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (49 samples, 1.74%)</title><rect x="53.7" y="131.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (49 samples, 1.74%)</title><rect x="53.7" y="115.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (49 samples, 1.74%)</title><rect x="53.7" y="99.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.7" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (18 samples, 0.64%)</title><rect x="53.7" y="83.0" width="7.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="56.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (31 samples, 1.10%)</title><rect x="61.2" y="83.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.2" y="94.0"></text>
</g>
<g>
<title>java.lang.Object (31 samples, 1.10%)</title><rect x="61.2" y="67.0" width="13.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="64.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (5 samples, 0.18%)</title><rect x="74.3" y="403.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (5 samples, 0.18%)</title><rect x="74.3" y="387.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (5 samples, 0.18%)</title><rect x="74.3" y="371.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (5 samples, 0.18%)</title><rect x="74.3" y="355.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (5 samples, 0.18%)</title><rect x="74.3" y="339.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (5 samples, 0.18%)</title><rect x="74.3" y="323.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (5 samples, 0.18%)</title><rect x="74.3" y="307.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="77.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (89 samples, 3.17%)</title><rect x="76.4" y="451.0" width="37.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.4" y="462.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (67 samples, 2.39%)</title><rect x="76.4" y="435.0" width="28.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="79.4" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (22 samples, 0.78%)</title><rect x="104.5" y="435.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (22 samples, 0.78%)</title><rect x="104.5" y="419.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (22 samples, 0.78%)</title><rect x="104.5" y="403.0" width="9.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="107.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (3 samples, 0.11%)</title><rect x="113.8" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (3 samples, 0.11%)</title><rect x="113.8" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.11%)</title><rect x="113.8" y="419.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Class (3 samples, 0.11%)</title><rect x="113.8" y="403.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="116.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.14%)</title><rect x="115.0" y="547.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.14%)</title><rect x="115.0" y="531.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.14%)</title><rect x="115.0" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.14%)</title><rect x="115.0" y="499.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.14%)</title><rect x="115.0" y="483.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.14%)</title><rect x="115.0" y="467.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.14%)</title><rect x="115.0" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.14%)</title><rect x="115.0" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4 samples, 0.14%)</title><rect x="115.0" y="419.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="118.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (99 samples, 3.52%)</title><rect x="116.7" y="547.0" width="41.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.7" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (99 samples, 3.52%)</title><rect x="116.7" y="531.0" width="41.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.7" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (59 samples, 2.10%)</title><rect x="116.7" y="515.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.7" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (59 samples, 2.10%)</title><rect x="116.7" y="499.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.7" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (59 samples, 2.10%)</title><rect x="116.7" y="483.0" width="24.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.7" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (52 samples, 1.85%)</title><rect x="116.7" y="467.0" width="21.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.7" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (52 samples, 1.85%)</title><rect x="116.7" y="451.0" width="21.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.7" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (52 samples, 1.85%)</title><rect x="116.7" y="435.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.7" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (52 samples, 1.85%)</title><rect x="116.7" y="419.0" width="21.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.7" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (52 samples, 1.85%)</title><rect x="116.7" y="403.0" width="21.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.7" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (52 samples, 1.85%)</title><rect x="116.7" y="387.0" width="21.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.7" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (52 samples, 1.85%)</title><rect x="116.7" y="371.0" width="21.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.7" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (52 samples, 1.85%)</title><rect x="116.7" y="355.0" width="21.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.7" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (52 samples, 1.85%)</title><rect x="116.7" y="339.0" width="21.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.7" y="350.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (31 samples, 1.10%)</title><rect x="116.7" y="323.0" width="13.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="119.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (21 samples, 0.75%)</title><rect x="129.7" y="323.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.7" y="334.0"></text>
</g>
<g>
<title>java.lang.Object (21 samples, 0.75%)</title><rect x="129.7" y="307.0" width="8.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="132.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (7 samples, 0.25%)</title><rect x="138.5" y="467.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (7 samples, 0.25%)</title><rect x="138.5" y="451.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (7 samples, 0.25%)</title><rect x="138.5" y="435.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (7 samples, 0.25%)</title><rect x="138.5" y="419.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 0.25%)</title><rect x="138.5" y="403.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.25%)</title><rect x="138.5" y="387.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7 samples, 0.25%)</title><rect x="138.5" y="371.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.25%)</title><rect x="138.5" y="355.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.25%)</title><rect x="138.5" y="339.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (7 samples, 0.25%)</title><rect x="138.5" y="323.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (7 samples, 0.25%)</title><rect x="138.5" y="307.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (7 samples, 0.25%)</title><rect x="138.5" y="291.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.25%)</title><rect x="138.5" y="275.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.04%)</title><rect x="138.5" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$194/381966895.apply (1 samples, 0.04%)</title><rect x="138.5" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.04%)</title><rect x="138.5" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.04%)</title><rect x="138.5" y="211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1 samples, 0.04%)</title><rect x="138.5" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.04%)</title><rect x="138.5" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.5" y="190.0"></text>
</g>
<g>
<title>java.lang.Class (1 samples, 0.04%)</title><rect x="138.5" y="163.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="141.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.21%)</title><rect x="139.0" y="259.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.21%)</title><rect x="139.0" y="243.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$196/1579352741.apply (6 samples, 0.21%)</title><rect x="139.0" y="227.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (6 samples, 0.21%)</title><rect x="139.0" y="211.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (6 samples, 0.21%)</title><rect x="139.0" y="195.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (6 samples, 0.21%)</title><rect x="139.0" y="179.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (6 samples, 0.21%)</title><rect x="139.0" y="163.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="142.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (40 samples, 1.42%)</title><rect x="141.5" y="515.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (40 samples, 1.42%)</title><rect x="141.5" y="499.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (40 samples, 1.42%)</title><rect x="141.5" y="483.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (40 samples, 1.42%)</title><rect x="141.5" y="467.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (40 samples, 1.42%)</title><rect x="141.5" y="451.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (40 samples, 1.42%)</title><rect x="141.5" y="435.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (40 samples, 1.42%)</title><rect x="141.5" y="419.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (40 samples, 1.42%)</title><rect x="141.5" y="403.0" width="16.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (40 samples, 1.42%)</title><rect x="141.5" y="387.0" width="16.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (40 samples, 1.42%)</title><rect x="141.5" y="371.0" width="16.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (40 samples, 1.42%)</title><rect x="141.5" y="355.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/1882091062.run (26 samples, 0.93%)</title><rect x="141.5" y="339.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (26 samples, 0.93%)</title><rect x="141.5" y="323.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (26 samples, 0.93%)</title><rect x="141.5" y="307.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (26 samples, 0.93%)</title><rect x="141.5" y="291.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (26 samples, 0.93%)</title><rect x="141.5" y="275.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (4 samples, 0.14%)</title><rect x="141.5" y="259.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="144.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (22 samples, 0.78%)</title><rect x="143.2" y="259.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (22 samples, 0.78%)</title><rect x="143.2" y="243.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.18%)</title><rect x="143.2" y="227.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.18%)</title><rect x="143.2" y="211.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.18%)</title><rect x="143.2" y="195.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.18%)</title><rect x="143.2" y="179.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.18%)</title><rect x="143.2" y="163.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1 samples, 0.04%)</title><rect x="143.2" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="146.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.14%)</title><rect x="143.6" y="147.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object (4 samples, 0.14%)</title><rect x="143.6" y="131.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="146.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17 samples, 0.61%)</title><rect x="145.3" y="227.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (17 samples, 0.61%)</title><rect x="145.3" y="211.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (17 samples, 0.61%)</title><rect x="145.3" y="195.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.61%)</title><rect x="145.3" y="179.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.61%)</title><rect x="145.3" y="163.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12 samples, 0.43%)</title><rect x="145.3" y="147.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="148.3" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.18%)</title><rect x="150.3" y="147.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object (5 samples, 0.18%)</title><rect x="150.3" y="131.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="153.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (14 samples, 0.50%)</title><rect x="152.4" y="339.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (14 samples, 0.50%)</title><rect x="152.4" y="323.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (14 samples, 0.50%)</title><rect x="152.4" y="307.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (14 samples, 0.50%)</title><rect x="152.4" y="291.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.50%)</title><rect x="152.4" y="275.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (14 samples, 0.50%)</title><rect x="152.4" y="259.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (14 samples, 0.50%)</title><rect x="152.4" y="243.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$223/1023865256.accept (14 samples, 0.50%)</title><rect x="152.4" y="227.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (14 samples, 0.50%)</title><rect x="152.4" y="211.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (14 samples, 0.50%)</title><rect x="152.4" y="195.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.50%)</title><rect x="152.4" y="179.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (14 samples, 0.50%)</title><rect x="152.4" y="163.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (14 samples, 0.50%)</title><rect x="152.4" y="147.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (14 samples, 0.50%)</title><rect x="152.4" y="131.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (14 samples, 0.50%)</title><rect x="152.4" y="115.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.4" y="126.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (13 samples, 0.46%)</title><rect x="152.4" y="99.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.4" y="110.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (13 samples, 0.46%)</title><rect x="152.4" y="83.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.4" y="94.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (13 samples, 0.46%)</title><rect x="152.4" y="67.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.4" y="78.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.addUnstarted (13 samples, 0.46%)</title><rect x="152.4" y="51.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.4" y="62.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (13 samples, 0.46%)</title><rect x="152.4" y="35.0" width="5.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="155.4" y="46.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.04%)</title><rect x="157.9" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.9" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.add (1 samples, 0.04%)</title><rect x="157.9" y="83.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.9" y="94.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (1 samples, 0.04%)</title><rect x="157.9" y="67.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="160.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,189 samples, 42.33%)</title><rect x="158.3" y="595.0" width="499.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.3" y="606.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.28%)</title><rect x="158.3" y="579.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$190/467524561.accept (8 samples, 0.28%)</title><rect x="158.3" y="563.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (8 samples, 0.28%)</title><rect x="158.3" y="547.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (8 samples, 0.28%)</title><rect x="158.3" y="531.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (8 samples, 0.28%)</title><rect x="158.3" y="515.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (8 samples, 0.28%)</title><rect x="158.3" y="499.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (8 samples, 0.28%)</title><rect x="158.3" y="483.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.28%)</title><rect x="158.3" y="467.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.28%)</title><rect x="158.3" y="451.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.28%)</title><rect x="158.3" y="435.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (8 samples, 0.28%)</title><rect x="158.3" y="419.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (8 samples, 0.28%)</title><rect x="158.3" y="403.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="161.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (8 samples, 0.28%)</title><rect x="158.3" y="387.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (8 samples, 0.28%)</title><rect x="158.3" y="371.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (8 samples, 0.28%)</title><rect x="158.3" y="355.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (8 samples, 0.28%)</title><rect x="158.3" y="339.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.28%)</title><rect x="158.3" y="323.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.28%)</title><rect x="158.3" y="307.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.28%)</title><rect x="158.3" y="291.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.28%)</title><rect x="158.3" y="275.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (8 samples, 0.28%)</title><rect x="158.3" y="259.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.28%)</title><rect x="158.3" y="243.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.28%)</title><rect x="158.3" y="227.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.28%)</title><rect x="158.3" y="211.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.28%)</title><rect x="158.3" y="195.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.28%)</title><rect x="158.3" y="179.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.28%)</title><rect x="158.3" y="163.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (8 samples, 0.28%)</title><rect x="158.3" y="147.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="161.3" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (215 samples, 7.65%)</title><rect x="161.6" y="579.0" width="90.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="164.6" y="590.0">jdk.intern..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (9 samples, 0.32%)</title><rect x="252.0" y="579.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/715486789.run (8 samples, 0.28%)</title><rect x="252.0" y="563.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (8 samples, 0.28%)</title><rect x="252.0" y="547.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.28%)</title><rect x="252.0" y="531.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.28%)</title><rect x="252.0" y="515.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.28%)</title><rect x="252.0" y="499.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (8 samples, 0.28%)</title><rect x="252.0" y="483.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (8 samples, 0.28%)</title><rect x="252.0" y="467.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (8 samples, 0.28%)</title><rect x="252.0" y="451.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (8 samples, 0.28%)</title><rect x="252.0" y="435.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (8 samples, 0.28%)</title><rect x="252.0" y="419.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (8 samples, 0.28%)</title><rect x="252.0" y="403.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.28%)</title><rect x="252.0" y="387.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.28%)</title><rect x="252.0" y="371.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.28%)</title><rect x="252.0" y="355.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.28%)</title><rect x="252.0" y="339.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (8 samples, 0.28%)</title><rect x="252.0" y="323.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.28%)</title><rect x="252.0" y="307.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.28%)</title><rect x="252.0" y="291.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.28%)</title><rect x="252.0" y="275.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (8 samples, 0.28%)</title><rect x="252.0" y="259.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.28%)</title><rect x="252.0" y="243.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.28%)</title><rect x="252.0" y="227.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (8 samples, 0.28%)</title><rect x="252.0" y="211.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="255.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$160/810264248.run (1 samples, 0.04%)</title><rect x="255.3" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1 samples, 0.04%)</title><rect x="255.3" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.04%)</title><rect x="255.3" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="255.3" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="255.3" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="255.3" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="255.3" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="255.3" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.04%)</title><rect x="255.3" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="255.3" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="255.3" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1 samples, 0.04%)</title><rect x="255.3" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="258.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (187 samples, 6.66%)</title><rect x="255.7" y="579.0" width="78.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.7" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (187 samples, 6.66%)</title><rect x="255.7" y="563.0" width="78.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.7" y="574.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (187 samples, 6.66%)</title><rect x="255.7" y="547.0" width="78.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="258.7" y="558.0">jdk.inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (507 samples, 18.05%)</title><rect x="334.3" y="579.0" width="213.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.3" y="590.0">jdk/internal/net/http/HttpCl..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (507 samples, 18.05%)</title><rect x="334.3" y="563.0" width="213.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="337.3" y="574.0">jdk.internal.net.http.HttpCl..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (263 samples, 9.36%)</title><rect x="547.3" y="579.0" width="110.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.3" y="590.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (263 samples, 9.36%)</title><rect x="547.3" y="563.0" width="110.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.3" y="574.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (263 samples, 9.36%)</title><rect x="547.3" y="547.0" width="110.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.3" y="558.0">sun/nio/ch/EP..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (263 samples, 9.36%)</title><rect x="547.3" y="531.0" width="110.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.3" y="542.0">sun/nio/ch/EP..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (263 samples, 9.36%)</title><rect x="547.3" y="515.0" width="110.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.3" y="526.0">sun/nio/ch/EP..</text>
</g>
<g>
<title>java.lang.Object (263 samples, 9.36%)</title><rect x="547.3" y="499.0" width="110.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="550.3" y="510.0">java.lang.Obj..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,267 samples, 45.11%)</title><rect x="657.8" y="595.0" width="532.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.8" y="606.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (1,267 samples, 45.11%)</title><rect x="657.8" y="579.0" width="532.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.8" y="590.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one.nio.http.HttpSession (1,236 samples, 44.00%)</title><rect x="657.8" y="563.0" width="519.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="660.8" y="574.0">one.nio.http.HttpSession</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (31 samples, 1.10%)</title><rect x="1177.0" y="563.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31 samples, 1.10%)</title><rect x="1177.0" y="547.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 1.10%)</title><rect x="1177.0" y="531.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 1.10%)</title><rect x="1177.0" y="515.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.0" y="526.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (31 samples, 1.10%)</title><rect x="1177.0" y="499.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (31 samples, 1.10%)</title><rect x="1177.0" y="483.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.invokeHandlerByMethod (31 samples, 1.10%)</title><rect x="1177.0" y="467.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (31 samples, 1.10%)</title><rect x="1177.0" y="451.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (26 samples, 0.93%)</title><rect x="1177.0" y="435.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (26 samples, 0.93%)</title><rect x="1177.0" y="419.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1180.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (21 samples, 0.75%)</title><rect x="1177.0" y="403.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (20 samples, 0.71%)</title><rect x="1177.0" y="387.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (19 samples, 0.68%)</title><rect x="1177.0" y="371.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (19 samples, 0.68%)</title><rect x="1177.0" y="355.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.addUnstarted (19 samples, 0.68%)</title><rect x="1177.0" y="339.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.0" y="350.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (19 samples, 0.68%)</title><rect x="1177.0" y="323.0" width="8.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1180.0" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.nextThreadNum (1 samples, 0.04%)</title><rect x="1185.0" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Class (1 samples, 0.04%)</title><rect x="1185.0" y="355.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1188.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.04%)</title><rect x="1185.4" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.4" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.add (1 samples, 0.04%)</title><rect x="1185.4" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.4" y="382.0"></text>
</g>
<g>
<title>java.lang.ThreadGroup (1 samples, 0.04%)</title><rect x="1185.4" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1188.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.18%)</title><rect x="1185.8" y="403.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.18%)</title><rect x="1185.8" y="387.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.18%)</title><rect x="1185.8" y="371.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.18%)</title><rect x="1185.8" y="355.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.18%)</title><rect x="1185.8" y="339.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.18%)</title><rect x="1185.8" y="323.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.18%)</title><rect x="1185.8" y="307.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.18%)</title><rect x="1185.8" y="291.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (5 samples, 0.18%)</title><rect x="1185.8" y="275.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1188.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (5 samples, 0.18%)</title><rect x="1187.9" y="435.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5 samples, 0.18%)</title><rect x="1187.9" y="419.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5 samples, 0.18%)</title><rect x="1187.9" y="403.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (5 samples, 0.18%)</title><rect x="1187.9" y="387.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (5 samples, 0.18%)</title><rect x="1187.9" y="371.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5 samples, 0.18%)</title><rect x="1187.9" y="355.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.18%)</title><rect x="1187.9" y="339.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.18%)</title><rect x="1187.9" y="323.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.18%)</title><rect x="1187.9" y="307.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.18%)</title><rect x="1187.9" y="291.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.18%)</title><rect x="1187.9" y="275.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.18%)</title><rect x="1187.9" y="259.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.18%)</title><rect x="1187.9" y="243.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.18%)</title><rect x="1187.9" y="227.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (5 samples, 0.18%)</title><rect x="1187.9" y="211.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1190.9" y="222.0"></text>
</g>
</g>
</svg>
