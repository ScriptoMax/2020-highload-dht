<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">GET the newest contents in overwhelming requests (#4)</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (5,384 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.09%)</title><rect x="10.0" y="899.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.07%)</title><rect x="10.2" y="883.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (4 samples, 0.07%)</title><rect x="10.2" y="867.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (4 samples, 0.07%)</title><rect x="10.2" y="851.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.2" y="862.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.07%)</title><rect x="11.3" y="899.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="14.3" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.07%)</title><rect x="11.3" y="883.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.3" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.07%)</title><rect x="11.3" y="867.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.3" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.06%)</title><rect x="11.5" y="851.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.5" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.13%)</title><rect x="12.2" y="899.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="15.2" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.11%)</title><rect x="12.4" y="883.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="15.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="12.6" y="867.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="15.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.09%)</title><rect x="12.6" y="851.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="15.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="13.1" y="835.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="16.1" y="846.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="13.1" y="819.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="16.1" y="830.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="13.1" y="803.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="16.1" y="814.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="13.3" y="787.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.3" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="13.3" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.3" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="13.3" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="16.3" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.06%)</title><rect x="13.9" y="899.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="16.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,530 samples, 84.14%)</title><rect x="14.6" y="899.0" width="992.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.6" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,529 samples, 84.12%)</title><rect x="14.6" y="883.0" width="992.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.6" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,529 samples, 84.12%)</title><rect x="14.6" y="867.0" width="992.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.6" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.06%)</title><rect x="16.8" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (6 samples, 0.11%)</title><rect x="17.5" y="851.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.11%)</title><rect x="17.5" y="835.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.11%)</title><rect x="17.5" y="819.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.11%)</title><rect x="17.5" y="803.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (219 samples, 4.07%)</title><rect x="18.8" y="851.0" width="48.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.8" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (217 samples, 4.03%)</title><rect x="19.2" y="835.0" width="47.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.2" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (3 samples, 0.06%)</title><rect x="19.2" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (196 samples, 3.64%)</title><rect x="19.9" y="819.0" width="42.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.9" y="830.0">java..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (12 samples, 0.22%)</title><rect x="20.7" y="803.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.04%)</title><rect x="23.4" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (176 samples, 3.27%)</title><rect x="24.2" y="803.0" width="38.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.2" y="814.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (176 samples, 3.27%)</title><rect x="24.2" y="787.0" width="38.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.2" y="798.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (93 samples, 1.73%)</title><rect x="25.1" y="771.0" width="20.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="28.1" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="27.1" y="755.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.1" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.09%)</title><rect x="27.5" y="755.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.5" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (22 samples, 0.41%)</title><rect x="28.8" y="755.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="31.8" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="31.7" y="739.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.7" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.09%)</title><rect x="32.1" y="739.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="35.1" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="33.7" y="755.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="36.7" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.07%)</title><rect x="34.1" y="755.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="37.1" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.06%)</title><rect x="35.0" y="755.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="38.0" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (32 samples, 0.59%)</title><rect x="35.6" y="755.0" width="7.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="38.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.48%)</title><rect x="37.0" y="739.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="40.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="37.0" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="40.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.45%)</title><rect x="37.4" y="723.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="40.4" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.22%)</title><rect x="40.0" y="707.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.0" y="718.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.19%)</title><rect x="40.2" y="691.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.07%)</title><rect x="40.7" y="675.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.7" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="40.7" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.7" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (2 samples, 0.04%)</title><rect x="41.1" y="659.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="44.1" y="670.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="41.6" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.6" y="686.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="42.0" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="45.0" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="42.9" y="755.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="45.9" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.04%)</title><rect x="43.3" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="46.3" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.09%)</title><rect x="43.8" y="755.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="46.8" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (3 samples, 0.06%)</title><rect x="44.8" y="755.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="47.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 1.43%)</title><rect x="45.5" y="771.0" width="16.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="48.5" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="45.5" y="755.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="48.5" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="46.4" y="755.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="49.4" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.04%)</title><rect x="47.5" y="755.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="50.5" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (65 samples, 1.21%)</title><rect x="48.1" y="755.0" width="14.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="51.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.41%)</title><rect x="57.6" y="739.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="60.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.41%)</title><rect x="57.6" y="723.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="60.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.20%)</title><rect x="60.0" y="707.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="63.0" y="718.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.17%)</title><rect x="60.2" y="691.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="63.2" y="702.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.13%)</title><rect x="60.4" y="675.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.4" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.06%)</title><rect x="60.4" y="659.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.4" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="60.6" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.6" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="60.6" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="63.6" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="60.6" y="611.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.6" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="60.6" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="63.6" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="60.6" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="63.6" y="590.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="60.6" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.6" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="60.6" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="63.6" y="558.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.06%)</title><rect x="61.1" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.1" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="62.4" y="771.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="65.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.13%)</title><rect x="62.8" y="819.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.13%)</title><rect x="62.8" y="803.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.09%)</title><rect x="62.8" y="787.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.20%)</title><rect x="64.4" y="819.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.20%)</title><rect x="64.4" y="803.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.19%)</title><rect x="64.6" y="787.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.19%)</title><rect x="64.6" y="771.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.19%)</title><rect x="64.6" y="755.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.19%)</title><rect x="64.6" y="739.0" width="2.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="67.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.17%)</title><rect x="64.8" y="723.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.17%)</title><rect x="64.8" y="707.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.13%)</title><rect x="65.2" y="691.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="68.2" y="702.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.13%)</title><rect x="65.2" y="675.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="68.2" y="686.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.13%)</title><rect x="65.2" y="659.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.2" y="670.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.13%)</title><rect x="65.2" y="643.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="68.2" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.13%)</title><rect x="65.2" y="627.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="68.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.13%)</title><rect x="65.2" y="611.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="68.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run (4,291 samples, 79.70%)</title><rect x="66.8" y="851.0" width="940.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.8" y="862.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6 (4,291 samples, 79.70%)</title><rect x="66.8" y="835.0" width="940.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.8" y="846.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (821 samples, 15.25%)</title><rect x="67.6" y="819.0" width="180.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.6" y="830.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="69.8" y="803.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="72.8" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="69.8" y="787.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="72.8" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="69.8" y="771.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="72.8" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.04%)</title><rect x="69.8" y="755.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="72.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.19%)</title><rect x="70.3" y="803.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.17%)</title><rect x="70.5" y="787.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.17%)</title><rect x="70.5" y="771.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.06%)</title><rect x="71.8" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (780 samples, 14.49%)</title><rect x="72.5" y="803.0" width="170.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.5" y="814.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (29 samples, 0.54%)</title><rect x="72.7" y="787.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.04%)</title><rect x="76.2" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.2" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="76.2" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="79.2" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="76.2" y="739.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="79.2" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="76.2" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="79.2" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="76.2" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="79.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.20%)</title><rect x="76.6" y="771.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.20%)</title><rect x="76.6" y="755.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.20%)</title><rect x="76.6" y="739.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.20%)</title><rect x="76.6" y="723.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.20%)</title><rect x="76.6" y="707.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.6" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="78.6" y="691.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="81.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (750 samples, 13.93%)</title><rect x="79.0" y="787.0" width="164.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.0" y="798.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session.write (749 samples, 13.91%)</title><rect x="79.3" y="771.0" width="164.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.3" y="782.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.09%)</title><rect x="80.4" y="755.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="83.4" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.07%)</title><rect x="80.4" y="739.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="83.4" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (2 samples, 0.04%)</title><rect x="80.4" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="83.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="81.4" y="755.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="84.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="81.4" y="739.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="84.4" y="750.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.06%)</title><rect x="82.1" y="755.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="85.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (731 samples, 13.58%)</title><rect x="83.0" y="755.0" width="160.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.0" y="766.0">one/nio/net/Session$..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (726 samples, 13.48%)</title><rect x="84.1" y="739.0" width="159.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.1" y="750.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (29 samples, 0.54%)</title><rect x="88.2" y="723.0" width="6.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="91.2" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="90.4" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="93.4" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="90.9" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="93.9" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (10 samples, 0.19%)</title><rect x="91.3" y="707.0" width="2.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="94.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.09%)</title><rect x="93.5" y="707.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="96.5" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="93.5" y="691.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="96.5" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.06%)</title><rect x="94.6" y="723.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="97.6" y="734.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="95.3" y="723.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="98.3" y="734.0"></text>
</g>
<g>
<title>__libc_send (673 samples, 12.50%)</title><rect x="95.7" y="723.0" width="147.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="98.7" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (662 samples, 12.30%)</title><rect x="98.1" y="707.0" width="145.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="101.1" y="718.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>do_syscall_64 (660 samples, 12.26%)</title><rect x="98.5" y="691.0" width="144.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="101.5" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (626 samples, 11.63%)</title><rect x="106.0" y="675.0" width="137.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="109.0" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (624 samples, 11.59%)</title><rect x="106.0" y="659.0" width="136.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="109.0" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (602 samples, 11.18%)</title><rect x="107.3" y="643.0" width="131.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="110.3" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (591 samples, 10.98%)</title><rect x="108.0" y="627.0" width="129.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="111.0" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (588 samples, 10.92%)</title><rect x="108.4" y="611.0" width="128.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="111.4" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.09%)</title><rect x="108.4" y="595.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="111.4" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="109.7" y="595.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="112.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.06%)</title><rect x="109.9" y="579.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="112.9" y="590.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.06%)</title><rect x="110.6" y="595.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="113.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (572 samples, 10.62%)</title><rect x="111.9" y="595.0" width="125.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.9" y="606.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.07%)</title><rect x="113.7" y="579.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.7" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="113.7" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="116.7" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="114.5" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="117.5" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.07%)</title><rect x="115.0" y="579.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="118.0" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="115.2" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="118.2" y="574.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (3 samples, 0.06%)</title><rect x="116.1" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="119.1" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (23 samples, 0.43%)</title><rect x="116.7" y="579.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="119.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.39%)</title><rect x="117.0" y="563.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="120.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (10 samples, 0.19%)</title><rect x="117.2" y="547.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="120.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (7 samples, 0.13%)</title><rect x="117.2" y="531.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="120.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.17%)</title><rect x="119.4" y="547.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="122.4" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="120.9" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="123.9" y="542.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.11%)</title><rect x="121.8" y="579.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.8" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (3 samples, 0.06%)</title><rect x="122.4" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="125.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (506 samples, 9.40%)</title><rect x="123.3" y="579.0" width="110.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="126.3" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (505 samples, 9.38%)</title><rect x="123.5" y="563.0" width="110.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.5" y="574.0">__tcp_push_pe..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.04%)</title><rect x="123.5" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="126.5" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (502 samples, 9.32%)</title><rect x="124.2" y="547.0" width="110.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="127.2" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (468 samples, 8.69%)</title><rect x="127.3" y="531.0" width="102.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="130.3" y="542.0">__tcp_transm..</text>
</g>
<g>
<title>ip_queue_xmit (446 samples, 8.28%)</title><rect x="130.5" y="515.0" width="97.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="133.5" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (442 samples, 8.21%)</title><rect x="131.0" y="499.0" width="96.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="134.0" y="510.0">__ip_queue_..</text>
</g>
<g>
<title>ip_local_out (435 samples, 8.08%)</title><rect x="131.6" y="483.0" width="95.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="134.6" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (66 samples, 1.23%)</title><rect x="131.9" y="467.0" width="14.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="134.9" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.06%)</title><rect x="132.1" y="451.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="135.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (60 samples, 1.11%)</title><rect x="133.0" y="451.0" width="13.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="136.0" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (7 samples, 0.13%)</title><rect x="133.6" y="435.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="136.6" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.11%)</title><rect x="133.8" y="419.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="136.8" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (45 samples, 0.84%)</title><rect x="135.1" y="435.0" width="9.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="138.1" y="446.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.04%)</title><rect x="135.1" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.1" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (39 samples, 0.72%)</title><rect x="135.8" y="419.0" width="8.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.8" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (11 samples, 0.20%)</title><rect x="136.9" y="403.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="139.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (2 samples, 0.04%)</title><rect x="139.3" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.3" y="414.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.04%)</title><rect x="139.7" y="403.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.7" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (3 samples, 0.06%)</title><rect x="140.4" y="403.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.4" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (15 samples, 0.28%)</title><rect x="141.1" y="403.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="144.1" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (3 samples, 0.06%)</title><rect x="142.2" y="387.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="145.2" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="142.8" y="387.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="145.8" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="142.8" y="371.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="145.8" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (4 samples, 0.07%)</title><rect x="143.5" y="387.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.5" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.06%)</title><rect x="144.3" y="419.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="147.3" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="145.2" y="435.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="148.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="145.4" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="148.4" y="430.0"></text>
</g>
<g>
<title>ip_output (364 samples, 6.76%)</title><rect x="146.5" y="467.0" width="79.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.5" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="146.5" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="149.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (358 samples, 6.65%)</title><rect x="147.0" y="451.0" width="78.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="150.0" y="462.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.09%)</title><rect x="147.6" y="435.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="150.6" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (350 samples, 6.50%)</title><rect x="148.7" y="435.0" width="76.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="151.7" y="446.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (305 samples, 5.66%)</title><rect x="150.5" y="419.0" width="66.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="153.5" y="430.0">__local..</text>
</g>
<g>
<title>do_softirq.part.21 (304 samples, 5.65%)</title><rect x="150.7" y="403.0" width="66.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="153.7" y="414.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (299 samples, 5.55%)</title><rect x="151.8" y="387.0" width="65.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.8" y="398.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (298 samples, 5.53%)</title><rect x="151.8" y="371.0" width="65.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="154.8" y="382.0">__softi..</text>
</g>
<g>
<title>net_rx_action (293 samples, 5.44%)</title><rect x="152.7" y="355.0" width="64.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.7" y="366.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (285 samples, 5.29%)</title><rect x="154.4" y="339.0" width="62.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="157.4" y="350.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (280 samples, 5.20%)</title><rect x="155.5" y="323.0" width="61.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="158.5" y="334.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (280 samples, 5.20%)</title><rect x="155.5" y="307.0" width="61.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="158.5" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (8 samples, 0.15%)</title><rect x="155.5" y="291.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="158.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (270 samples, 5.01%)</title><rect x="157.3" y="291.0" width="59.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.3" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (256 samples, 4.75%)</title><rect x="158.4" y="275.0" width="56.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="161.4" y="286.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (253 samples, 4.70%)</title><rect x="158.4" y="259.0" width="55.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="161.4" y="270.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (247 samples, 4.59%)</title><rect x="158.6" y="243.0" width="54.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="161.6" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (246 samples, 4.57%)</title><rect x="158.8" y="227.0" width="53.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="161.8" y="238.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.04%)</title><rect x="160.6" y="211.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="163.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (236 samples, 4.38%)</title><rect x="161.0" y="211.0" width="51.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="164.0" y="222.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.19%)</title><rect x="161.9" y="195.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="164.9" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="164.3" y="195.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="167.3" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="164.7" y="195.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (215 samples, 3.99%)</title><rect x="165.2" y="195.0" width="47.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="168.2" y="206.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (212 samples, 3.94%)</title><rect x="165.4" y="179.0" width="46.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.4" y="190.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (12 samples, 0.22%)</title><rect x="166.9" y="163.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="169.9" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (10 samples, 0.19%)</title><rect x="167.4" y="147.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.4" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.19%)</title><rect x="167.4" y="131.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="170.4" y="142.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.04%)</title><rect x="167.4" y="115.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="170.4" y="126.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.15%)</title><rect x="167.8" y="115.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.8" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.11%)</title><rect x="168.2" y="99.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="171.2" y="110.0"></text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.06%)</title><rect x="169.8" y="163.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="172.8" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.19%)</title><rect x="170.4" y="163.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="173.4" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.13%)</title><rect x="171.1" y="147.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.1" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.13%)</title><rect x="171.1" y="131.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="174.1" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.13%)</title><rect x="171.1" y="115.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="174.1" y="126.0"></text>
</g>
<g>
<title>tcp_ack (43 samples, 0.80%)</title><rect x="172.6" y="163.0" width="9.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="175.6" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.07%)</title><rect x="174.2" y="147.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="177.2" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (30 samples, 0.56%)</title><rect x="175.3" y="147.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="178.3" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.35%)</title><rect x="176.8" y="131.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="179.8" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.07%)</title><rect x="176.8" y="115.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="179.8" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.07%)</title><rect x="176.8" y="99.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.8" y="110.0"></text>
</g>
<g>
<title>skb_release_all (14 samples, 0.26%)</title><rect x="177.7" y="115.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="180.7" y="126.0"></text>
</g>
<g>
<title>skb_release_data (14 samples, 0.26%)</title><rect x="177.7" y="99.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.7" y="110.0"></text>
</g>
<g>
<title>skb_free_head (10 samples, 0.19%)</title><rect x="178.5" y="83.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="181.5" y="94.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.17%)</title><rect x="178.8" y="67.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.8" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.06%)</title><rect x="180.1" y="51.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="183.1" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.04%)</title><rect x="180.3" y="35.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.3" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.04%)</title><rect x="181.0" y="131.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="184.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (123 samples, 2.28%)</title><rect x="182.3" y="163.0" width="26.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="185.3" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (112 samples, 2.08%)</title><rect x="183.8" y="147.0" width="24.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="186.8" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (108 samples, 2.01%)</title><rect x="184.7" y="131.0" width="23.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="187.7" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (108 samples, 2.01%)</title><rect x="184.7" y="115.0" width="23.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="187.7" y="126.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (107 samples, 1.99%)</title><rect x="184.9" y="99.0" width="23.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.9" y="110.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.06%)</title><rect x="208.3" y="147.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="211.3" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.06%)</title><rect x="209.2" y="163.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="212.2" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.07%)</title><rect x="209.9" y="163.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="212.9" y="174.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.07%)</title><rect x="209.9" y="147.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.9" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="210.3" y="131.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="213.3" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="211.2" y="163.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="214.2" y="174.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.04%)</title><rect x="211.9" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="214.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.04%)</title><rect x="212.3" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="215.3" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.09%)</title><rect x="212.7" y="243.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="215.7" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.04%)</title><rect x="213.2" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="216.2" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.04%)</title><rect x="213.2" y="211.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="216.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (3 samples, 0.06%)</title><rect x="213.8" y="259.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="216.8" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.13%)</title><rect x="214.9" y="275.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="217.9" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (5 samples, 0.09%)</title><rect x="214.9" y="259.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.9" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.09%)</title><rect x="214.9" y="243.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.9" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="216.0" y="259.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="219.0" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="216.0" y="243.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="219.0" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (37 samples, 0.69%)</title><rect x="217.3" y="419.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="220.3" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (36 samples, 0.67%)</title><rect x="217.6" y="403.0" width="7.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="220.6" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (17 samples, 0.32%)</title><rect x="219.5" y="387.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.5" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.24%)</title><rect x="220.0" y="371.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="223.0" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.06%)</title><rect x="220.2" y="355.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="223.2" y="366.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.13%)</title><rect x="220.8" y="355.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="223.8" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.11%)</title><rect x="221.1" y="339.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="224.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.09%)</title><rect x="221.3" y="323.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="224.3" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.15%)</title><rect x="223.5" y="387.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="226.5" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="225.7" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="228.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="226.3" y="467.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="229.3" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.06%)</title><rect x="227.2" y="483.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="230.2" y="494.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.09%)</title><rect x="228.3" y="515.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="231.3" y="526.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.09%)</title><rect x="228.3" y="499.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.3" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.06%)</title><rect x="228.7" y="483.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="231.7" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.04%)</title><rect x="229.8" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="232.8" y="542.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.04%)</title><rect x="230.5" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.5" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="230.9" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.9" y="542.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="231.6" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="234.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.09%)</title><rect x="232.0" y="531.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.0" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="232.5" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="235.5" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="232.7" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="235.7" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="232.7" y="483.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="235.7" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.04%)</title><rect x="233.1" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="236.1" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (12 samples, 0.22%)</title><rect x="234.4" y="579.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="237.4" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.17%)</title><rect x="235.1" y="563.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="238.1" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="236.6" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="239.6" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.13%)</title><rect x="237.5" y="627.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="240.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.13%)</title><rect x="237.5" y="611.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="240.5" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.13%)</title><rect x="237.5" y="595.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="240.5" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.09%)</title><rect x="237.9" y="579.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="240.9" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.30%)</title><rect x="239.2" y="643.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="242.2" y="654.0"></text>
</g>
<g>
<title>__fdget (15 samples, 0.28%)</title><rect x="239.2" y="627.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="242.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.28%)</title><rect x="239.2" y="611.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.2" y="622.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.19%)</title><rect x="240.3" y="595.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.28%)</title><rect x="243.4" y="803.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.11%)</title><rect x="245.4" y="787.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.11%)</title><rect x="245.4" y="771.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.4" y="782.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (3 samples, 0.06%)</title><rect x="246.9" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.exec (3,466 samples, 64.38%)</title><rect x="247.6" y="819.0" width="759.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.6" y="830.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.exec</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$0 (3,465 samples, 64.36%)</title><rect x="247.8" y="803.0" width="759.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.8" y="814.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (3,465 samples, 64.36%)</title><rect x="247.8" y="787.0" width="759.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.8" y="798.0">ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="248.0" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="248.0" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="248.0" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="248.0" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="248.0" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (961 samples, 17.85%)</title><rect x="248.9" y="771.0" width="210.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.9" y="782.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (4 samples, 0.07%)</title><rect x="248.9" y="755.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (957 samples, 17.77%)</title><rect x="249.8" y="755.0" width="209.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.8" y="766.0">one/nio/http/HttpClient.inv..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (957 samples, 17.77%)</title><rect x="249.8" y="739.0" width="209.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.8" y="750.0">one/nio/http/HttpClient.inv..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (12 samples, 0.22%)</title><rect x="250.0" y="723.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.22%)</title><rect x="250.0" y="707.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.07%)</title><rect x="250.0" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.15%)</title><rect x="250.9" y="691.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.07%)</title><rect x="251.7" y="675.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.07%)</title><rect x="251.7" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.7" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.07%)</title><rect x="251.7" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (166 samples, 3.08%)</title><rect x="252.6" y="723.0" width="36.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.6" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (165 samples, 3.06%)</title><rect x="252.8" y="707.0" width="36.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.8" y="718.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (23 samples, 0.43%)</title><rect x="254.4" y="691.0" width="5.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="257.4" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="255.5" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="258.5" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (5 samples, 0.09%)</title><rect x="255.9" y="675.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="258.9" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.19%)</title><rect x="257.0" y="675.0" width="2.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="260.0" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.06%)</title><rect x="258.3" y="659.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="261.3" y="670.0"></text>
</g>
<g>
<title>__GI___recv (130 samples, 2.41%)</title><rect x="259.4" y="691.0" width="28.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="262.4" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (127 samples, 2.36%)</title><rect x="260.1" y="675.0" width="27.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="263.1" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (127 samples, 2.36%)</title><rect x="260.1" y="659.0" width="27.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="263.1" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (114 samples, 2.12%)</title><rect x="262.7" y="643.0" width="25.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.7" y="654.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (110 samples, 2.04%)</title><rect x="262.7" y="627.0" width="24.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="265.7" y="638.0">_..</text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.04%)</title><rect x="262.9" y="611.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="265.9" y="622.0"></text>
</g>
<g>
<title>sock_recvmsg (101 samples, 1.88%)</title><rect x="263.4" y="611.0" width="22.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="266.4" y="622.0">s..</text>
</g>
<g>
<title>inet_recvmsg (96 samples, 1.78%)</title><rect x="263.8" y="595.0" width="21.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="266.8" y="606.0">i..</text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.04%)</title><rect x="264.2" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="267.2" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (90 samples, 1.67%)</title><rect x="265.1" y="579.0" width="19.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="268.1" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.07%)</title><rect x="268.2" y="563.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="271.2" y="574.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="268.2" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="271.2" y="558.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="268.2" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="271.2" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="269.3" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.3" y="574.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.06%)</title><rect x="269.7" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.7" y="574.0"></text>
</g>
<g>
<title>sk_wait_data (38 samples, 0.71%)</title><rect x="270.4" y="563.0" width="8.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="273.4" y="574.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="271.9" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.9" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.13%)</title><rect x="273.0" y="547.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="276.0" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="273.2" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="276.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="273.7" y="531.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="276.7" y="542.0"></text>
</g>
<g>
<title>remove_wait_queue (3 samples, 0.06%)</title><rect x="274.5" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="274.5" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="277.5" y="542.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.07%)</title><rect x="275.2" y="547.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.2" y="558.0"></text>
</g>
<g>
<title>wait_woken (12 samples, 0.22%)</title><rect x="276.1" y="547.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="279.1" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (11 samples, 0.20%)</title><rect x="276.3" y="531.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="279.3" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="276.5" y="515.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="279.5" y="526.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.09%)</title><rect x="277.6" y="515.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="280.6" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.07%)</title><rect x="277.8" y="499.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="280.8" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="278.3" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="281.3" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (18 samples, 0.33%)</title><rect x="278.7" y="563.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="281.7" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (17 samples, 0.32%)</title><rect x="278.7" y="547.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="281.7" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (17 samples, 0.32%)</title><rect x="278.7" y="531.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.7" y="542.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.19%)</title><rect x="278.7" y="515.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="281.7" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="280.2" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="283.2" y="510.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.11%)</title><rect x="280.9" y="515.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.9" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="281.3" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="284.3" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.07%)</title><rect x="282.9" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="285.9" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.09%)</title><rect x="283.7" y="563.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="286.7" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="284.2" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="287.2" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.06%)</title><rect x="284.8" y="595.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="287.8" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.06%)</title><rect x="284.8" y="579.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="287.8" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.06%)</title><rect x="284.8" y="563.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="287.8" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="285.1" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="288.1" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.11%)</title><rect x="285.5" y="611.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="288.5" y="622.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.11%)</title><rect x="285.5" y="595.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="288.5" y="606.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.09%)</title><rect x="285.7" y="579.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="288.7" y="590.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.09%)</title><rect x="285.7" y="563.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="288.7" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.06%)</title><rect x="287.0" y="627.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.0" y="638.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="287.9" y="691.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="290.9" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="288.3" y="691.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="291.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (51 samples, 0.95%)</title><rect x="289.0" y="723.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="289.2" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="289.2" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="289.2" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.15%)</title><rect x="289.7" y="707.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.07%)</title><rect x="290.3" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (16 samples, 0.30%)</title><rect x="291.4" y="707.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.24%)</title><rect x="292.1" y="691.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.1" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.24%)</title><rect x="292.1" y="675.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.07%)</title><rect x="294.9" y="707.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (6 samples, 0.11%)</title><rect x="295.8" y="707.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.8" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="296.5" y="691.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="299.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (14 samples, 0.26%)</title><rect x="297.1" y="707.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.17%)</title><rect x="298.0" y="691.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.17%)</title><rect x="298.0" y="675.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.0" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="299.3" y="659.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="302.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (65 samples, 1.21%)</title><rect x="300.2" y="723.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.04%)</title><rect x="300.8" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (57 samples, 1.06%)</title><rect x="301.3" y="707.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.06%)</title><rect x="301.9" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.9" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.04%)</title><rect x="302.6" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (46 samples, 0.85%)</title><rect x="303.0" y="691.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (36 samples, 0.67%)</title><rect x="304.3" y="675.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.3" y="686.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="311.8" y="659.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.8" y="670.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="311.8" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.8" y="654.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="311.8" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.8" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="311.8" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="312.2" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="312.2" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="313.1" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.1" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="313.3" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.06%)</title><rect x="313.8" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.09%)</title><rect x="314.4" y="723.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.07%)</title><rect x="314.6" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.07%)</title><rect x="314.6" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (126 samples, 2.34%)</title><rect x="315.5" y="723.0" width="27.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.5" y="734.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (4 samples, 0.07%)</title><rect x="316.8" y="707.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="319.8" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (115 samples, 2.14%)</title><rect x="317.7" y="707.0" width="25.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="320.7" y="718.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 1.88%)</title><rect x="320.8" y="691.0" width="22.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="323.8" y="702.0">e..</text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.07%)</title><rect x="320.8" y="675.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (97 samples, 1.80%)</title><rect x="321.7" y="675.0" width="21.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.7" y="686.0">d..</text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.04%)</title><rect x="330.9" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (52 samples, 0.97%)</title><rect x="331.3" y="659.0" width="11.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="334.3" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (47 samples, 0.87%)</title><rect x="331.3" y="643.0" width="10.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="334.3" y="654.0"></text>
</g>
<g>
<title>__get_user_4 (4 samples, 0.07%)</title><rect x="331.5" y="627.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.5" y="638.0"></text>
</g>
<g>
<title>security_socket_setsockopt (8 samples, 0.15%)</title><rect x="332.6" y="627.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="335.6" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.04%)</title><rect x="333.1" y="611.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="336.1" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (4 samples, 0.07%)</title><rect x="333.5" y="611.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="336.5" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (4 samples, 0.07%)</title><rect x="333.5" y="595.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="336.5" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.06%)</title><rect x="333.7" y="579.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="336.7" y="590.0"></text>
</g>
<g>
<title>sock_setsockopt (21 samples, 0.39%)</title><rect x="334.4" y="627.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="337.4" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.07%)</title><rect x="335.9" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.06%)</title><rect x="336.1" y="595.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="339.1" y="606.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.07%)</title><rect x="336.8" y="611.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="339.8" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.11%)</title><rect x="337.7" y="611.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="340.7" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="338.3" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.22%)</title><rect x="339.0" y="627.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="342.0" y="638.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.19%)</title><rect x="339.0" y="611.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.17%)</title><rect x="339.2" y="595.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="342.2" y="606.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.15%)</title><rect x="339.4" y="579.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="342.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="341.2" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.2" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (4 samples, 0.07%)</title><rect x="341.6" y="643.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="344.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (522 samples, 9.70%)</title><rect x="343.1" y="723.0" width="114.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.1" y="734.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (36 samples, 0.67%)</title><rect x="345.5" y="707.0" width="7.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="348.5" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="349.3" y="691.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="352.3" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.07%)</title><rect x="349.9" y="691.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="352.9" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.07%)</title><rect x="351.0" y="691.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="354.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.09%)</title><rect x="351.9" y="691.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="354.9" y="702.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.04%)</title><rect x="353.0" y="691.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="356.0" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.07%)</title><rect x="353.4" y="707.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="356.4" y="718.0"></text>
</g>
<g>
<title>__libc_send (470 samples, 8.73%)</title><rect x="354.5" y="707.0" width="103.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="357.5" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (462 samples, 8.58%)</title><rect x="356.3" y="691.0" width="101.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="359.3" y="702.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (462 samples, 8.58%)</title><rect x="356.3" y="675.0" width="101.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="359.3" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (441 samples, 8.19%)</title><rect x="360.4" y="659.0" width="96.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="363.4" y="670.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (437 samples, 8.12%)</title><rect x="360.4" y="643.0" width="95.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="363.4" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (423 samples, 7.86%)</title><rect x="361.8" y="627.0" width="92.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.8" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (414 samples, 7.69%)</title><rect x="362.0" y="611.0" width="90.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="365.0" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (413 samples, 7.67%)</title><rect x="362.0" y="595.0" width="90.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.0" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="362.9" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="365.9" y="590.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.06%)</title><rect x="363.3" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="366.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (397 samples, 7.37%)</title><rect x="364.8" y="579.0" width="87.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="367.8" y="590.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="366.1" y="563.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="369.1" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="366.4" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="369.4" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.11%)</title><rect x="367.0" y="563.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="370.0" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.07%)</title><rect x="367.2" y="547.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 0.30%)</title><rect x="368.8" y="563.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="371.8" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.24%)</title><rect x="368.8" y="547.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="371.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (5 samples, 0.09%)</title><rect x="369.4" y="531.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="372.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.09%)</title><rect x="369.4" y="515.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="372.4" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.04%)</title><rect x="370.1" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="373.1" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="370.5" y="531.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="373.5" y="542.0"></text>
</g>
<g>
<title>tcp_push (356 samples, 6.61%)</title><rect x="372.3" y="563.0" width="78.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="375.3" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (355 samples, 6.59%)</title><rect x="372.5" y="547.0" width="77.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="375.5" y="558.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (350 samples, 6.50%)</title><rect x="373.6" y="531.0" width="76.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="376.6" y="542.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (329 samples, 6.11%)</title><rect x="374.9" y="515.0" width="72.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="377.9" y="526.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (315 samples, 5.85%)</title><rect x="376.4" y="499.0" width="69.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="379.4" y="510.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (315 samples, 5.85%)</title><rect x="376.4" y="483.0" width="69.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="379.4" y="494.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (309 samples, 5.74%)</title><rect x="377.1" y="467.0" width="67.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="380.1" y="478.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (55 samples, 1.02%)</title><rect x="377.5" y="451.0" width="12.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="380.5" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (53 samples, 0.98%)</title><rect x="378.0" y="435.0" width="11.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="381.0" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.17%)</title><rect x="378.4" y="419.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.17%)</title><rect x="378.4" y="403.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="381.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (35 samples, 0.65%)</title><rect x="380.4" y="419.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="383.4" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (29 samples, 0.54%)</title><rect x="380.6" y="403.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.6" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.07%)</title><rect x="382.4" y="387.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="385.4" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (14 samples, 0.26%)</title><rect x="383.9" y="387.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="386.9" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="384.8" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.8" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (7 samples, 0.13%)</title><rect x="385.4" y="371.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.4" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.06%)</title><rect x="386.3" y="355.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="389.3" y="366.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (5 samples, 0.09%)</title><rect x="387.0" y="403.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.0" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (5 samples, 0.09%)</title><rect x="388.5" y="419.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="391.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="388.5" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="391.5" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.06%)</title><rect x="388.9" y="403.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="391.9" y="414.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (3 samples, 0.06%)</title><rect x="388.9" y="387.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="391.9" y="398.0"></text>
</g>
<g>
<title>ip_output (248 samples, 4.61%)</title><rect x="389.6" y="451.0" width="54.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="392.6" y="462.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (238 samples, 4.42%)</title><rect x="390.0" y="435.0" width="52.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.0" y="446.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="390.5" y="419.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="393.5" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (233 samples, 4.33%)</title><rect x="390.9" y="419.0" width="51.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="393.9" y="430.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (207 samples, 3.84%)</title><rect x="391.4" y="403.0" width="45.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="394.4" y="414.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.21 (207 samples, 3.84%)</title><rect x="391.4" y="387.0" width="45.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="394.4" y="398.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (205 samples, 3.81%)</title><rect x="391.8" y="371.0" width="44.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="394.8" y="382.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (204 samples, 3.79%)</title><rect x="391.8" y="355.0" width="44.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="394.8" y="366.0">__so..</text>
</g>
<g>
<title>net_rx_action (199 samples, 3.70%)</title><rect x="392.9" y="339.0" width="43.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="395.9" y="350.0">net_..</text>
</g>
<g>
<title>process_backlog (198 samples, 3.68%)</title><rect x="393.1" y="323.0" width="43.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="396.1" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (193 samples, 3.58%)</title><rect x="394.0" y="307.0" width="42.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="397.0" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="394.0" y="291.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="397.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (190 samples, 3.53%)</title><rect x="394.4" y="291.0" width="41.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.4" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.13%)</title><rect x="395.1" y="275.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="398.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv (176 samples, 3.27%)</title><rect x="396.6" y="275.0" width="38.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="399.6" y="286.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (3 samples, 0.06%)</title><rect x="397.1" y="259.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="400.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (164 samples, 3.05%)</title><rect x="397.7" y="259.0" width="36.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="400.7" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (160 samples, 2.97%)</title><rect x="397.9" y="243.0" width="35.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="400.9" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (156 samples, 2.90%)</title><rect x="397.9" y="227.0" width="34.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.9" y="238.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (155 samples, 2.88%)</title><rect x="397.9" y="211.0" width="34.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="400.9" y="222.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (154 samples, 2.86%)</title><rect x="398.1" y="195.0" width="33.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="401.1" y="206.0">tc..</text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="399.9" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="402.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (143 samples, 2.66%)</title><rect x="400.6" y="179.0" width="31.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="403.6" y="190.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (142 samples, 2.64%)</title><rect x="400.8" y="163.0" width="31.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="403.8" y="174.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.07%)</title><rect x="402.1" y="147.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="405.1" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.07%)</title><rect x="402.1" y="131.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="405.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="402.3" y="115.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="405.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.06%)</title><rect x="402.3" y="99.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="405.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (31 samples, 0.58%)</title><rect x="403.2" y="147.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="406.2" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (17 samples, 0.32%)</title><rect x="405.6" y="131.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="408.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.15%)</title><rect x="407.1" y="115.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="410.1" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="407.1" y="99.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="410.1" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="407.4" y="83.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="410.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.07%)</title><rect x="408.0" y="99.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="411.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.07%)</title><rect x="408.0" y="83.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="411.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.07%)</title><rect x="408.0" y="67.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="411.0" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.07%)</title><rect x="408.0" y="51.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.0" y="62.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.04%)</title><rect x="410.0" y="147.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (92 samples, 1.71%)</title><rect x="410.4" y="147.0" width="20.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.4" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (88 samples, 1.63%)</title><rect x="411.3" y="131.0" width="19.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="414.3" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (86 samples, 1.60%)</title><rect x="411.7" y="115.0" width="18.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="414.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (86 samples, 1.60%)</title><rect x="411.7" y="99.0" width="18.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="414.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (86 samples, 1.60%)</title><rect x="411.7" y="83.0" width="18.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="414.7" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.06%)</title><rect x="430.6" y="147.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="433.6" y="158.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.04%)</title><rect x="431.5" y="147.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="434.5" y="158.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.04%)</title><rect x="432.1" y="227.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="435.1" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="432.6" y="227.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="435.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.04%)</title><rect x="433.7" y="259.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="436.7" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.04%)</title><rect x="434.1" y="259.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="437.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.07%)</title><rect x="435.2" y="275.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.2" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (24 samples, 0.45%)</title><rect x="436.7" y="403.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.39%)</title><rect x="436.7" y="387.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.20%)</title><rect x="437.6" y="371.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.13%)</title><rect x="438.0" y="355.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="441.0" y="366.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.09%)</title><rect x="438.5" y="339.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="441.5" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.07%)</title><rect x="438.7" y="323.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.7" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.07%)</title><rect x="438.7" y="307.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.7" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.06%)</title><rect x="440.4" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="443.4" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.04%)</title><rect x="440.7" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.7" y="366.0"></text>
</g>
<g>
<title>netdev_pick_tx (3 samples, 0.06%)</title><rect x="441.3" y="387.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.3" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.07%)</title><rect x="442.9" y="435.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="445.9" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.07%)</title><rect x="444.0" y="451.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.0" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.06%)</title><rect x="444.8" y="467.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="447.8" y="478.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.11%)</title><rect x="445.5" y="499.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="448.5" y="510.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.06%)</title><rect x="446.1" y="483.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="449.1" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.04%)</title><rect x="447.0" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="450.0" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.04%)</title><rect x="447.5" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.5" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.07%)</title><rect x="448.6" y="515.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="451.6" y="526.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.04%)</title><rect x="448.6" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="451.6" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="449.7" y="515.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="452.7" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.13%)</title><rect x="450.3" y="563.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="453.3" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.11%)</title><rect x="450.5" y="547.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="453.5" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="451.4" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="454.4" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="451.8" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="454.8" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.11%)</title><rect x="452.7" y="611.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="455.7" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.07%)</title><rect x="453.2" y="595.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="456.2" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="453.2" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="456.2" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="453.6" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="456.6" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="453.6" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="456.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.04%)</title><rect x="454.0" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="457.0" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.15%)</title><rect x="454.5" y="627.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="457.5" y="638.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.15%)</title><rect x="454.5" y="611.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="457.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.15%)</title><rect x="454.5" y="595.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="457.5" y="606.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.09%)</title><rect x="455.1" y="579.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.1" y="590.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.06%)</title><rect x="456.2" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.2" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.04%)</title><rect x="457.1" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="460.1" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="457.1" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="460.1" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="457.1" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.1" y="638.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (9 samples, 0.17%)</title><rect x="457.5" y="723.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.5" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (6 samples, 0.11%)</title><rect x="458.2" y="707.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.2" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (6 samples, 0.11%)</title><rect x="458.2" y="691.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.getNodes (13 samples, 0.24%)</title><rect x="459.7" y="771.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="462.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.09%)</title><rect x="459.7" y="755.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.09%)</title><rect x="459.7" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="459.7" y="723.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="459.7" y="707.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="460.4" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="460.4" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="460.4" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="460.4" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (7 samples, 0.13%)</title><rect x="461.0" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.04%)</title><rect x="462.1" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueExternalResponse (93 samples, 1.73%)</title><rect x="462.6" y="771.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="462.8" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.syncReplicaValues (83 samples, 1.54%)</title><rect x="463.2" y="755.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.2" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 0.11%)</title><rect x="471.8" y="739.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="473.1" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.1" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.09%)</title><rect x="473.5" y="739.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.5" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.15%)</title><rect x="474.6" y="739.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (4 samples, 0.07%)</title><rect x="476.8" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (4 samples, 0.07%)</title><rect x="476.8" y="723.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.07%)</title><rect x="476.8" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.06%)</title><rect x="477.0" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.06%)</title><rect x="477.0" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.04%)</title><rect x="477.0" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.04%)</title><rect x="477.0" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.04%)</title><rect x="477.0" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (2 samples, 0.04%)</title><rect x="477.0" y="611.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.0" y="622.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$80/867048386.apply (2 samples, 0.04%)</title><rect x="477.0" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.0" y="606.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (2 samples, 0.04%)</title><rect x="477.0" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/1667381018.compare (2 samples, 0.04%)</title><rect x="477.0" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.0" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (2 samples, 0.04%)</title><rect x="477.0" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils$$Lambda$78/1264325235.applyAsLong (2 samples, 0.04%)</title><rect x="477.0" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.0" y="542.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.06%)</title><rect x="477.7" y="739.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="480.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.15%)</title><rect x="478.4" y="739.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="481.4" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="480.1" y="739.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="483.1" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.04%)</title><rect x="481.0" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytes (3 samples, 0.06%)</title><rect x="481.4" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="481.6" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="481.6" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="481.6" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.6" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="481.6" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (4 samples, 0.07%)</title><rect x="482.1" y="755.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="482.1" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="482.1" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.1" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="482.1" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="485.1" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="482.1" y="691.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="485.1" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="482.1" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="485.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="482.1" y="659.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="485.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalResponse (2,390 samples, 44.39%)</title><rect x="483.0" y="771.0" width="523.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.0" y="782.0">ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalResponse</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (2,373 samples, 44.08%)</title><rect x="483.4" y="755.0" width="520.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.4" y="766.0">ru/mail/polis/service/codearound/TaskDAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (2,369 samples, 44.00%)</title><rect x="483.4" y="739.0" width="519.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.4" y="750.0">ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2,364 samples, 43.91%)</title><rect x="483.4" y="723.0" width="518.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.4" y="734.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2,364 samples, 43.91%)</title><rect x="483.4" y="707.0" width="518.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.4" y="718.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (2,079 samples, 38.61%)</title><rect x="484.5" y="691.0" width="455.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="487.5" y="702.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.06%)</title><rect x="484.9" y="675.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="487.9" y="686.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.06%)</title><rect x="485.8" y="675.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="488.8" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.06%)</title><rect x="486.5" y="675.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="489.5" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.07%)</title><rect x="487.1" y="675.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="490.1" y="686.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (2 samples, 0.04%)</title><rect x="488.2" y="675.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="491.2" y="686.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="488.7" y="675.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="491.7" y="686.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="489.3" y="675.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="492.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (4 samples, 0.07%)</title><rect x="490.2" y="675.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="493.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="491.1" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="494.1" y="686.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2,043 samples, 37.95%)</title><rect x="491.5" y="675.0" width="447.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="494.5" y="686.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptio..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.04%)</title><rect x="494.4" y="659.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="497.4" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.06%)</title><rect x="495.0" y="659.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="498.0" y="670.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.09%)</title><rect x="495.7" y="659.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="498.7" y="670.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.06%)</title><rect x="496.1" y="643.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="499.1" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.24%)</title><rect x="496.8" y="659.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="499.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.07%)</title><rect x="497.9" y="643.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="500.9" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.07%)</title><rect x="498.7" y="643.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="501.7" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.07%)</title><rect x="498.7" y="627.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="501.7" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.07%)</title><rect x="499.6" y="659.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="502.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1,925 samples, 35.75%)</title><rect x="500.7" y="659.0" width="421.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="503.7" y="670.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Sli..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (3 samples, 0.06%)</title><rect x="500.7" y="643.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="503.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1,917 samples, 35.61%)</title><rect x="501.6" y="643.0" width="420.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="504.6" y="654.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Col..</text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (3 samples, 0.06%)</title><rect x="501.8" y="627.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="504.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (23 samples, 0.43%)</title><rect x="502.5" y="627.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="505.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (2 samples, 0.04%)</title><rect x="502.5" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="505.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.04%)</title><rect x="503.1" y="611.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="506.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (15 samples, 0.28%)</title><rect x="503.6" y="611.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="506.6" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.09%)</title><rect x="503.8" y="595.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="506.8" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="504.9" y="595.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="507.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (7 samples, 0.13%)</title><rect x="505.3" y="595.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="508.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.04%)</title><rect x="507.1" y="611.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="510.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1,887 samples, 35.05%)</title><rect x="507.5" y="627.0" width="413.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="510.5" y="638.0">rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1,883 samples, 34.97%)</title><rect x="507.9" y="611.0" width="412.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="510.9" y="622.0">rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksd..</text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.13%)</title><rect x="508.8" y="595.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="511.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.04%)</title><rect x="510.4" y="595.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="513.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (7 samples, 0.13%)</title><rect x="510.8" y="595.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="513.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) [clone .plt] (3 samples, 0.06%)</title><rect x="512.3" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="515.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (3 samples, 0.06%)</title><rect x="513.0" y="595.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="516.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.06%)</title><rect x="513.6" y="595.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="516.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1,827 samples, 33.93%)</title><rect x="514.7" y="595.0" width="400.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="517.7" y="606.0">rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (4 samples, 0.07%)</title><rect x="519.3" y="579.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="522.3" y="590.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.04%)</title><rect x="520.2" y="579.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="523.2" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="520.7" y="579.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="523.7" y="590.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (4 samples, 0.07%)</title><rect x="521.3" y="579.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="524.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (10 samples, 0.19%)</title><rect x="522.2" y="579.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="525.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.06%)</title><rect x="523.1" y="563.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="526.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.04%)</title><rect x="523.9" y="563.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="526.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (4 samples, 0.07%)</title><rect x="524.4" y="579.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="527.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (18 samples, 0.33%)</title><rect x="525.3" y="579.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="528.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (13 samples, 0.24%)</title><rect x="525.3" y="563.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="528.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.04%)</title><rect x="525.5" y="547.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="528.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.04%)</title><rect x="525.9" y="547.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="528.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (4 samples, 0.07%)</title><rect x="526.4" y="547.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="529.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.06%)</title><rect x="527.2" y="547.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="530.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (4 samples, 0.07%)</title><rect x="528.3" y="563.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="531.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.04%)</title><rect x="529.2" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="532.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (3 samples, 0.06%)</title><rect x="529.9" y="579.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="532.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (6 samples, 0.11%)</title><rect x="530.5" y="579.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="533.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (332 samples, 6.17%)</title><rect x="531.8" y="579.0" width="72.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="534.8" y="590.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (327 samples, 6.07%)</title><rect x="532.7" y="563.0" width="71.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="535.7" y="574.0">rocksdb:..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (320 samples, 5.94%)</title><rect x="533.2" y="547.0" width="70.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="536.2" y="558.0">/tmp/lib..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (5 samples, 0.09%)</title><rect x="533.4" y="531.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="536.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (309 samples, 5.74%)</title><rect x="534.5" y="531.0" width="67.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="537.5" y="542.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (6 samples, 0.11%)</title><rect x="585.5" y="515.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="588.5" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.09%)</title><rect x="587.3" y="515.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="590.3" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="588.6" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="591.6" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="588.6" y="499.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="591.6" y="510.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="588.6" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="591.6" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="588.6" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.6" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="588.6" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.6" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="588.6" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="591.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="588.6" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="591.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (59 samples, 1.10%)</title><rect x="589.0" y="515.0" width="13.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="592.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (5 samples, 0.09%)</title><rect x="592.8" y="499.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="595.8" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="593.9" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="596.9" y="510.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (25 samples, 0.46%)</title><rect x="594.3" y="499.0" width="5.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="597.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.15%)</title><rect x="599.8" y="499.0" width="1.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="602.8" y="510.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.04%)</title><rect x="601.5" y="499.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="604.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.09%)</title><rect x="602.2" y="531.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="605.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.06%)</title><rect x="603.3" y="547.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="606.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const [clone .plt] (2 samples, 0.04%)</title><rect x="603.9" y="547.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="606.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (2 samples, 0.04%)</title><rect x="604.6" y="579.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="607.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (3 samples, 0.06%)</title><rect x="605.3" y="579.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="608.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (4 samples, 0.07%)</title><rect x="606.4" y="579.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="609.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (3 samples, 0.06%)</title><rect x="607.5" y="579.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="610.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (2 samples, 0.04%)</title><rect x="608.1" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="611.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (1,395 samples, 25.91%)</title><rect x="609.0" y="579.0" width="305.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="612.0" y="590.0">rocksdb::Version::Get(rocksdb::ReadOption..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (39 samples, 0.72%)</title><rect x="614.9" y="563.0" width="8.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="617.9" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (21 samples, 0.39%)</title><rect x="617.8" y="547.0" width="4.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="620.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (9 samples, 0.17%)</title><rect x="619.1" y="531.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="622.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="620.4" y="515.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="623.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="621.7" y="531.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="624.7" y="542.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.06%)</title><rect x="622.4" y="547.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="625.4" y="558.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.04%)</title><rect x="623.0" y="547.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="626.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (5 samples, 0.09%)</title><rect x="623.7" y="563.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="626.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::FileIndexer::GetNextLevelIndex(unsigned long, unsigned long, int, int, int*, int*) const (4 samples, 0.07%)</title><rect x="624.8" y="563.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="627.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (2 samples, 0.04%)</title><rect x="625.6" y="563.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="628.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (4 samples, 0.07%)</title><rect x="626.1" y="563.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="629.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.06%)</title><rect x="627.2" y="563.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="630.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (1,309 samples, 24.31%)</title><rect x="627.8" y="563.0" width="286.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="630.8" y="574.0">rocksdb::TableCache::Get(rocksdb::Read..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (2 samples, 0.04%)</title><rect x="632.0" y="547.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="635.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (1,240 samples, 23.03%)</title><rect x="632.4" y="547.0" width="271.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="635.4" y="558.0">rocksdb::BlockBasedTable::Get(rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (4 samples, 0.07%)</title><rect x="640.5" y="531.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="643.5" y="542.0"></text>
</g>
<g>
<title>__libc_free (7 samples, 0.13%)</title><rect x="641.6" y="531.0" width="1.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="644.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (24 samples, 0.45%)</title><rect x="643.6" y="531.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="646.6" y="542.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.06%)</title><rect x="646.0" y="515.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="649.0" y="526.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.07%)</title><rect x="646.7" y="515.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="649.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (5 samples, 0.09%)</title><rect x="647.6" y="515.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="650.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (5 samples, 0.09%)</title><rect x="648.9" y="531.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="651.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (4 samples, 0.07%)</title><rect x="650.2" y="531.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="653.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const [clone .plt] (2 samples, 0.04%)</title><rect x="651.1" y="531.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="654.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (2 samples, 0.04%)</title><rect x="651.5" y="531.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="654.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (2 samples, 0.04%)</title><rect x="651.9" y="531.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="654.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (5 samples, 0.09%)</title><rect x="652.6" y="531.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="655.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (6 samples, 0.11%)</title><rect x="653.7" y="531.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="656.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (6 samples, 0.11%)</title><rect x="655.0" y="531.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="658.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (698 samples, 12.96%)</title><rect x="656.5" y="531.0" width="153.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="659.5" y="542.0">rocksdb::DataBlockI..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="660.7" y="515.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="663.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (2 samples, 0.04%)</title><rect x="661.4" y="515.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="664.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (6 samples, 0.11%)</title><rect x="662.2" y="515.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="665.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (5 samples, 0.09%)</title><rect x="662.5" y="499.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="665.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (2 samples, 0.04%)</title><rect x="663.6" y="515.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="666.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (663 samples, 12.31%)</title><rect x="664.0" y="515.0" width="145.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="667.0" y="526.0">rocksdb::Status ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (2 samples, 0.04%)</title><rect x="666.0" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="669.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::~BlockFetcher() (6 samples, 0.11%)</title><rect x="666.4" y="499.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="669.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.04%)</title><rect x="668.2" y="499.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="671.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (623 samples, 11.57%)</title><rect x="668.8" y="499.0" width="136.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="671.8" y="510.0">rocksdb::Status r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="672.1" y="483.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="675.1" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.04%)</title><rect x="672.5" y="483.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="675.5" y="494.0"></text>
</g>
<g>
<title>__malloc (4 samples, 0.07%)</title><rect x="673.0" y="483.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="676.0" y="494.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (30 samples, 0.56%)</title><rect x="673.9" y="483.0" width="6.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="676.9" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="680.4" y="483.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="683.4" y="494.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (5 samples, 0.09%)</title><rect x="681.1" y="483.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="684.1" y="494.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.07%)</title><rect x="682.4" y="483.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="685.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::Block::ApproximateMemoryUsage() const (2 samples, 0.04%)</title><rect x="683.5" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="686.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (2 samples, 0.04%)</title><rect x="683.9" y="483.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="686.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheInsertionMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long, bool) const (2 samples, 0.04%)</title><rect x="684.4" y="483.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="687.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (276 samples, 5.13%)</title><rect x="685.0" y="483.0" width="60.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="688.0" y="494.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (204 samples, 3.79%)</title><rect x="689.9" y="467.0" width="44.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="692.9" y="478.0">/tmp..</text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.09%)</title><rect x="734.8" y="467.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="737.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::CheckBlockChecksum() (5 samples, 0.09%)</title><rect x="736.1" y="467.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="739.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (33 samples, 0.61%)</title><rect x="737.2" y="467.0" width="7.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="740.2" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.07%)</title><rect x="739.8" y="451.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="742.8" y="462.0"></text>
</g>
<g>
<title>pread64 (7 samples, 0.13%)</title><rect x="740.7" y="451.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="743.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::Read(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::Slice*, char*, rocksdb::IODebugContext*) const (10 samples, 0.19%)</title><rect x="742.2" y="451.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="745.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="744.7" y="467.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="747.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="745.1" y="467.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="748.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (3 samples, 0.06%)</title><rect x="745.5" y="483.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="748.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::use_direct_io() const (2 samples, 0.04%)</title><rect x="746.2" y="483.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="749.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (3 samples, 0.06%)</title><rect x="746.8" y="483.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="749.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (130 samples, 2.41%)</title><rect x="747.5" y="483.0" width="28.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="750.5" y="494.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (125 samples, 2.32%)</title><rect x="747.7" y="467.0" width="27.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="750.7" y="478.0">r..</text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (9 samples, 0.17%)</title><rect x="748.4" y="451.0" width="1.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="751.4" y="462.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="750.6" y="451.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="753.6" y="462.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (2 samples, 0.04%)</title><rect x="751.0" y="451.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="754.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheMissMetrics(rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.04%)</title><rect x="751.9" y="451.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="754.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="752.3" y="451.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="755.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (87 samples, 1.62%)</title><rect x="753.2" y="451.0" width="19.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="756.2" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="753.9" y="435.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="756.9" y="446.0"></text>
</g>
<g>
<title>malloc_usable_size (8 samples, 0.15%)</title><rect x="754.5" y="435.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="757.5" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_lock (9 samples, 0.17%)</title><rect x="756.3" y="435.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="759.3" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="758.5" y="435.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="761.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (14 samples, 0.26%)</title><rect x="759.1" y="435.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="762.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (44 samples, 0.82%)</title><rect x="762.6" y="435.0" width="9.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="765.6" y="446.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect x="762.6" y="419.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="765.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (42 samples, 0.78%)</title><rect x="763.1" y="419.0" width="9.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="766.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (9 samples, 0.17%)</title><rect x="772.3" y="451.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="775.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.06%)</title><rect x="774.2" y="451.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="777.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.04%)</title><rect x="775.6" y="467.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="778.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const (132 samples, 2.45%)</title><rect x="776.0" y="483.0" width="28.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="779.0" y="494.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="776.4" y="467.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="779.4" y="478.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (6 samples, 0.11%)</title><rect x="776.9" y="467.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="779.9" y="478.0"></text>
</g>
<g>
<title>malloc_usable_size (6 samples, 0.11%)</title><rect x="778.2" y="467.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="781.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::Block::Block(rocksdb::BlockContents&amp;&amp;, unsigned long, rocksdb::Statistics*) (6 samples, 0.11%)</title><rect x="779.5" y="467.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="782.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::UnPackIndexTypeAndNumRestarts(unsigned int, rocksdb::BlockBasedTableOptions::DataBlockIndexType*, unsigned int*) (2 samples, 0.04%)</title><rect x="780.2" y="451.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="783.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::Block::NumRestarts() const (2 samples, 0.04%)</title><rect x="780.8" y="467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="783.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheInsertionMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long, bool) const (2 samples, 0.04%)</title><rect x="781.5" y="467.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="784.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="781.9" y="467.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="784.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (2 samples, 0.04%)</title><rect x="782.6" y="467.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="785.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (2 samples, 0.04%)</title><rect x="783.0" y="467.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="786.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (97 samples, 1.80%)</title><rect x="783.4" y="467.0" width="21.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="786.4" y="478.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.06%)</title><rect x="783.9" y="451.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="786.9" y="462.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.04%)</title><rect x="784.5" y="451.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="787.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (75 samples, 1.39%)</title><rect x="786.5" y="451.0" width="16.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="789.5" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (6 samples, 0.11%)</title><rect x="787.4" y="435.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="790.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::Block::~Block() (6 samples, 0.11%)</title><rect x="787.4" y="419.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="790.4" y="430.0"></text>
</g>
<g>
<title>__libc_free (12 samples, 0.22%)</title><rect x="788.7" y="435.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="791.7" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.11%)</title><rect x="791.3" y="435.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="794.3" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="792.6" y="435.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="795.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::Block::~Block() (2 samples, 0.04%)</title><rect x="793.3" y="435.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="796.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::EvictFromLRU(unsigned long, rocksdb::autovector&lt;rocksdb::LRUHandle*, 8ul&gt;*) (37 samples, 0.69%)</title><rect x="793.7" y="435.0" width="8.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="796.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (24 samples, 0.45%)</title><rect x="794.2" y="419.0" width="5.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="797.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Remove(rocksdb::Slice const&amp;, unsigned int) (10 samples, 0.19%)</title><rect x="799.7" y="419.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="802.7" y="430.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.06%)</title><rect x="799.7" y="403.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="802.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (7 samples, 0.13%)</title><rect x="800.3" y="403.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="803.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Insert(rocksdb::LRUHandle*) (4 samples, 0.07%)</title><rect x="802.1" y="435.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="805.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.06%)</title><rect x="802.3" y="419.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="805.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Insert(rocksdb::LRUHandle*) (4 samples, 0.07%)</title><rect x="802.9" y="451.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="805.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.06%)</title><rect x="803.8" y="451.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="806.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (8 samples, 0.15%)</title><rect x="805.8" y="499.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="808.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::StopWatch(rocksdb::Env*, rocksdb::Statistics*, unsigned int, unsigned long*, bool, bool) (2 samples, 0.04%)</title><rect x="807.8" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (3 samples, 0.06%)</title><rect x="808.2" y="499.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="811.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (2 samples, 0.04%)</title><rect x="808.9" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="811.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (140 samples, 2.60%)</title><rect x="809.5" y="531.0" width="30.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="812.5" y="542.0">ro..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="814.6" y="515.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="817.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (97 samples, 1.80%)</title><rect x="815.2" y="515.0" width="21.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="818.2" y="526.0">r..</text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.06%)</title><rect x="818.5" y="499.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="821.5" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="819.2" y="499.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="822.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (46 samples, 0.85%)</title><rect x="820.3" y="499.0" width="10.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="823.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (26 samples, 0.48%)</title><rect x="830.6" y="499.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="833.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (5 samples, 0.09%)</title><rect x="833.0" y="483.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="836.0" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="834.1" y="483.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="837.1" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (6 samples, 0.11%)</title><rect x="834.5" y="483.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="837.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (7 samples, 0.13%)</title><rect x="836.5" y="515.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="839.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 0.17%)</title><rect x="838.0" y="515.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="841.0" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (6 samples, 0.11%)</title><rect x="838.5" y="499.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="841.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (25 samples, 0.46%)</title><rect x="840.2" y="531.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="843.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (4 samples, 0.07%)</title><rect x="840.9" y="515.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="843.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (16 samples, 0.30%)</title><rect x="841.7" y="515.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="844.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (2 samples, 0.04%)</title><rect x="841.7" y="499.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="844.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (12 samples, 0.22%)</title><rect x="842.4" y="499.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="845.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (8 samples, 0.15%)</title><rect x="843.3" y="483.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="846.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.04%)</title><rect x="845.2" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="848.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (6 samples, 0.11%)</title><rect x="845.7" y="531.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="848.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="846.1" y="515.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="849.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::GetVarint32PtrFallback(char const*, char const*, unsigned int*) (5 samples, 0.09%)</title><rect x="847.0" y="531.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="850.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (235 samples, 4.36%)</title><rect x="848.3" y="531.0" width="51.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="851.3" y="542.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (6 samples, 0.11%)</title><rect x="883.2" y="515.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="886.2" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.07%)</title><rect x="884.5" y="515.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="887.5" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (26 samples, 0.48%)</title><rect x="885.4" y="515.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="888.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.13%)</title><rect x="891.1" y="515.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="894.1" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.04%)</title><rect x="892.6" y="515.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="895.6" y="526.0"></text>
</g>
<g>
<title>memcmp@plt (3 samples, 0.06%)</title><rect x="893.0" y="515.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="896.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (4 samples, 0.07%)</title><rect x="893.7" y="515.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="896.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (14 samples, 0.26%)</title><rect x="894.6" y="515.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="897.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (7 samples, 0.13%)</title><rect x="896.1" y="499.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="899.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 0.17%)</title><rect x="897.6" y="515.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="900.6" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="898.3" y="499.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="901.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.07%)</title><rect x="898.7" y="499.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="901.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (2 samples, 0.04%)</title><rect x="899.8" y="531.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="902.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (6 samples, 0.11%)</title><rect x="900.3" y="531.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="903.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.09%)</title><rect x="901.6" y="531.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="904.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (4 samples, 0.07%)</title><rect x="902.7" y="531.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="905.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.04%)</title><rect x="903.5" y="531.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="906.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (5 samples, 0.09%)</title><rect x="904.2" y="547.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="907.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (4 samples, 0.07%)</title><rect x="905.5" y="547.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="908.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (3 samples, 0.06%)</title><rect x="906.4" y="547.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="909.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (4 samples, 0.07%)</title><rect x="907.1" y="547.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="910.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="908.6" y="547.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="911.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (3 samples, 0.06%)</title><rect x="909.0" y="547.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="912.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (6 samples, 0.11%)</title><rect x="909.7" y="547.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="912.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (5 samples, 0.09%)</title><rect x="911.0" y="547.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="914.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (5 samples, 0.09%)</title><rect x="912.1" y="547.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="915.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (3 samples, 0.06%)</title><rect x="913.2" y="547.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="916.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() [clone .plt] (4 samples, 0.07%)</title><rect x="913.8" y="547.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="916.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (2 samples, 0.04%)</title><rect x="914.7" y="579.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="917.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.07%)</title><rect x="915.2" y="595.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="918.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (4 samples, 0.07%)</title><rect x="916.3" y="595.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="919.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.04%)</title><rect x="917.1" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="920.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (3 samples, 0.06%)</title><rect x="917.6" y="595.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="920.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (6 samples, 0.11%)</title><rect x="918.2" y="595.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="921.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (3 samples, 0.06%)</title><rect x="919.8" y="595.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="922.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (2 samples, 0.04%)</title><rect x="920.6" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="923.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.04%)</title><rect x="921.3" y="627.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="924.3" y="638.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="922.0" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="925.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.06%)</title><rect x="922.6" y="659.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="925.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (72 samples, 1.34%)</title><rect x="923.3" y="659.0" width="15.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="926.3" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (8 samples, 0.15%)</title><rect x="924.6" y="643.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="927.6" y="654.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="926.3" y="643.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="929.3" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="926.3" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="929.3" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (47 samples, 0.87%)</title><rect x="926.8" y="643.0" width="10.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="929.8" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.04%)</title><rect x="928.3" y="627.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="931.3" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="928.8" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="931.8" y="638.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.04%)</title><rect x="929.2" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="932.2" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (33 samples, 0.61%)</title><rect x="929.8" y="627.0" width="7.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="932.8" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (23 samples, 0.43%)</title><rect x="931.8" y="611.0" width="5.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="934.8" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (18 samples, 0.33%)</title><rect x="931.8" y="595.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="934.8" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (9 samples, 0.17%)</title><rect x="932.9" y="579.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="935.9" y="590.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (3 samples, 0.06%)</title><rect x="935.1" y="579.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="938.1" y="590.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="935.8" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="938.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="936.2" y="595.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="939.2" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.13%)</title><rect x="937.1" y="643.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="940.1" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="937.7" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="940.7" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="938.2" y="627.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="941.2" y="638.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.04%)</title><rect x="938.6" y="643.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="941.6" y="654.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (3 samples, 0.06%)</title><rect x="939.3" y="675.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="942.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (227 samples, 4.22%)</title><rect x="940.1" y="691.0" width="49.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="943.1" y="702.0">[unkn..</text>
</g>
<g>
<title>[unknown] (18 samples, 0.33%)</title><rect x="940.1" y="675.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="943.1" y="686.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (15 samples, 0.28%)</title><rect x="940.1" y="659.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="943.1" y="670.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="943.4" y="659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="946.4" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.09%)</title><rect x="944.1" y="675.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="947.1" y="686.0"></text>
</g>
<g>
<title>_int_malloc (5 samples, 0.09%)</title><rect x="945.4" y="675.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="948.4" y="686.0"></text>
</g>
<g>
<title>pread64 (198 samples, 3.68%)</title><rect x="946.5" y="675.0" width="43.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="949.5" y="686.0">prea..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (192 samples, 3.57%)</title><rect x="947.8" y="659.0" width="42.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="950.8" y="670.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (191 samples, 3.55%)</title><rect x="948.0" y="643.0" width="41.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="951.0" y="654.0">do_..</text>
</g>
<g>
<title>__x64_sys_pread64 (153 samples, 2.84%)</title><rect x="956.1" y="627.0" width="33.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.1" y="638.0">__..</text>
</g>
<g>
<title>ksys_pread64 (152 samples, 2.82%)</title><rect x="956.4" y="611.0" width="33.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="959.4" y="622.0">ks..</text>
</g>
<g>
<title>__fdget (10 samples, 0.19%)</title><rect x="956.4" y="595.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="959.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.17%)</title><rect x="956.6" y="579.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="959.6" y="590.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.15%)</title><rect x="956.8" y="563.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="959.8" y="574.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="958.6" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="961.6" y="606.0"></text>
</g>
<g>
<title>vfs_read (138 samples, 2.56%)</title><rect x="959.4" y="595.0" width="30.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="962.4" y="606.0">vf..</text>
</g>
<g>
<title>__vfs_read (114 samples, 2.12%)</title><rect x="960.1" y="579.0" width="25.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="963.1" y="590.0">_..</text>
</g>
<g>
<title>new_sync_read (111 samples, 2.06%)</title><rect x="960.8" y="563.0" width="24.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="963.8" y="574.0">n..</text>
</g>
<g>
<title>ext4_file_read_iter (100 samples, 1.86%)</title><rect x="963.2" y="547.0" width="21.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="966.2" y="558.0">e..</text>
</g>
<g>
<title>generic_file_read_iter (94 samples, 1.75%)</title><rect x="964.3" y="531.0" width="20.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="967.3" y="542.0"></text>
</g>
<g>
<title>copy_page_to_iter (44 samples, 0.82%)</title><rect x="966.9" y="515.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="969.9" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (35 samples, 0.65%)</title><rect x="968.4" y="499.0" width="7.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="971.4" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.04%)</title><rect x="976.1" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.1" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (34 samples, 0.63%)</title><rect x="976.7" y="515.0" width="7.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="979.7" y="526.0"></text>
</g>
<g>
<title>find_get_entry (32 samples, 0.59%)</title><rect x="977.2" y="499.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="980.2" y="510.0"></text>
</g>
<g>
<title>xas_load (17 samples, 0.32%)</title><rect x="980.3" y="483.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="983.3" y="494.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.06%)</title><rect x="984.2" y="515.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.2" y="526.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.04%)</title><rect x="984.2" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="987.2" y="510.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.04%)</title><rect x="984.2" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="987.2" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (20 samples, 0.37%)</title><rect x="985.3" y="579.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="988.3" y="590.0"></text>
</g>
<g>
<title>security_file_permission (14 samples, 0.26%)</title><rect x="986.6" y="563.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="989.6" y="574.0"></text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.09%)</title><rect x="987.1" y="547.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="990.1" y="558.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.07%)</title><rect x="988.1" y="547.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="991.1" y="558.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.07%)</title><rect x="988.1" y="531.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="991.1" y="542.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.04%)</title><rect x="988.6" y="515.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="991.6" y="526.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="989.2" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="992.2" y="558.0"></text>
</g>
<g>
<title>__libc_free (15 samples, 0.28%)</title><rect x="989.9" y="691.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="992.9" y="702.0"></text>
</g>
<g>
<title>__malloc (15 samples, 0.28%)</title><rect x="993.2" y="691.0" width="3.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="996.2" y="702.0"></text>
</g>
<g>
<title>_int_malloc (14 samples, 0.26%)</title><rect x="996.5" y="691.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="999.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.07%)</title><rect x="999.5" y="691.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1002.5" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.04%)</title><rect x="1000.6" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1003.6" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="1001.1" y="691.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1004.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (5 samples, 0.09%)</title><rect x="1001.5" y="723.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (5 samples, 0.09%)</title><rect x="1001.5" y="707.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.07%)</title><rect x="1001.7" y="691.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.7" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1001.7" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1001.7" y="659.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1002.0" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (4 samples, 0.07%)</title><rect x="1002.6" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="1002.6" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.6" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="1002.6" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (15 samples, 0.28%)</title><rect x="1003.5" y="755.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (14 samples, 0.26%)</title><rect x="1003.5" y="739.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.getMask (3 samples, 0.06%)</title><rect x="1005.2" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (2 samples, 0.04%)</title><rect x="1006.8" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="1006.8" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="1006.8" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (821 samples, 15.25%)</title><rect x="1007.4" y="899.0" width="180.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.4" y="910.0">one/nio/server/Selector..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.06%)</title><rect x="1009.6" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (188 samples, 3.49%)</title><rect x="1010.3" y="883.0" width="41.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.3" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (184 samples, 3.42%)</title><rect x="1011.2" y="867.0" width="40.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.2" y="878.0">one..</text>
</g>
<g>
<title>JVM_IHashCode (102 samples, 1.89%)</title><rect x="1013.1" y="851.0" width="22.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1016.1" y="862.0">J..</text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="1013.4" y="835.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1016.4" y="846.0"></text>
</g>
<g>
<title>epoll_wait (99 samples, 1.84%)</title><rect x="1013.8" y="835.0" width="21.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1016.8" y="846.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (97 samples, 1.80%)</title><rect x="1014.2" y="819.0" width="21.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1017.2" y="830.0">e..</text>
</g>
<g>
<title>do_syscall_64 (97 samples, 1.80%)</title><rect x="1014.2" y="803.0" width="21.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1017.2" y="814.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (84 samples, 1.56%)</title><rect x="1016.9" y="787.0" width="18.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1019.9" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (83 samples, 1.54%)</title><rect x="1016.9" y="771.0" width="18.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1019.9" y="782.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.15%)</title><rect x="1016.9" y="755.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1019.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.13%)</title><rect x="1017.1" y="739.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1020.1" y="750.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.09%)</title><rect x="1017.5" y="723.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1020.5" y="734.0"></text>
</g>
<g>
<title>ep_poll (73 samples, 1.36%)</title><rect x="1018.6" y="755.0" width="16.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.6" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (53 samples, 0.98%)</title><rect x="1020.1" y="739.0" width="11.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1023.1" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (35 samples, 0.65%)</title><rect x="1023.0" y="723.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1026.0" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (27 samples, 0.50%)</title><rect x="1024.3" y="707.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1027.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.33%)</title><rect x="1025.2" y="691.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1028.2" y="702.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.17%)</title><rect x="1026.9" y="675.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1029.9" y="686.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.09%)</title><rect x="1029.1" y="691.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1032.1" y="702.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="1030.2" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.2" y="718.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.09%)</title><rect x="1030.7" y="723.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1033.7" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.04%)</title><rect x="1031.3" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1034.3" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.06%)</title><rect x="1031.8" y="739.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1034.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.15%)</title><rect x="1032.6" y="739.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.6" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.15%)</title><rect x="1032.6" y="723.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.6" y="734.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.13%)</title><rect x="1032.9" y="707.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1035.9" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.13%)</title><rect x="1032.9" y="691.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.9" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="1033.5" y="675.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1036.5" y="686.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="1034.0" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.0" y="670.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="1034.0" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.0" y="654.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="1034.0" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1037.0" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="1034.0" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.0" y="622.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="1034.0" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1037.0" y="606.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="1034.0" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1037.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="1034.0" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1037.0" y="574.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="1034.6" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.6" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.06%)</title><rect x="1035.5" y="851.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1038.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.17%)</title><rect x="1036.1" y="851.0" width="13.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1039.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="1036.1" y="835.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1039.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="1036.1" y="819.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1039.1" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="1036.4" y="803.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1039.4" y="814.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.11%)</title><rect x="1036.8" y="803.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1039.8" y="814.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="1037.2" y="787.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1040.2" y="798.0"></text>
</g>
<g>
<title>epoll_wait (53 samples, 0.98%)</title><rect x="1038.3" y="835.0" width="11.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1041.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.89%)</title><rect x="1039.4" y="819.0" width="10.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1042.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.89%)</title><rect x="1039.4" y="803.0" width="10.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1042.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (38 samples, 0.71%)</title><rect x="1041.2" y="787.0" width="8.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1044.2" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (38 samples, 0.71%)</title><rect x="1041.2" y="771.0" width="8.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1044.2" y="782.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="1041.2" y="755.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1044.2" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="1041.2" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1044.2" y="750.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 0.63%)</title><rect x="1041.8" y="755.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1044.8" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (22 samples, 0.41%)</title><rect x="1043.2" y="739.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1046.2" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (16 samples, 0.30%)</title><rect x="1044.5" y="723.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1047.5" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (14 samples, 0.26%)</title><rect x="1044.7" y="707.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1047.7" y="718.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.15%)</title><rect x="1046.0" y="691.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1049.0" y="702.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.09%)</title><rect x="1046.4" y="675.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1049.4" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.06%)</title><rect x="1048.6" y="739.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1051.6" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.06%)</title><rect x="1048.6" y="723.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1051.6" y="734.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="1048.9" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1051.9" y="718.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.04%)</title><rect x="1049.5" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1052.5" y="798.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.07%)</title><rect x="1050.2" y="851.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1053.2" y="862.0"></text>
</g>
<g>
<title>epoll_wait@plt (2 samples, 0.04%)</title><rect x="1051.0" y="851.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1054.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (614 samples, 11.40%)</title><rect x="1051.5" y="883.0" width="134.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.5" y="894.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (600 samples, 11.14%)</title><rect x="1054.1" y="867.0" width="131.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.1" y="878.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (406 samples, 7.54%)</title><rect x="1055.2" y="851.0" width="89.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.2" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (341 samples, 6.33%)</title><rect x="1057.4" y="835.0" width="74.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.4" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (338 samples, 6.28%)</title><rect x="1058.1" y="819.0" width="74.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.1" y="830.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (293 samples, 5.44%)</title><rect x="1058.7" y="803.0" width="64.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.7" y="814.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="1058.9" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (36 samples, 0.67%)</title><rect x="1059.4" y="787.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (36 samples, 0.67%)</title><rect x="1059.4" y="771.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.20%)</title><rect x="1061.1" y="755.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.20%)</title><rect x="1061.1" y="739.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="1063.5" y="755.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="1063.5" y="739.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="1064.0" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.0" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.06%)</title><rect x="1064.4" y="755.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1067.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.09%)</title><rect x="1065.1" y="755.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1068.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.09%)</title><rect x="1066.2" y="755.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1066.8" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1066.8" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1066.8" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (254 samples, 4.72%)</title><rect x="1067.3" y="787.0" width="55.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.3" y="798.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.22%)</title><rect x="1068.4" y="771.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.22%)</title><rect x="1068.4" y="755.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (11 samples, 0.20%)</title><rect x="1068.6" y="739.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.6" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.20%)</title><rect x="1068.6" y="723.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="1070.6" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1214003821.linkToTargetMethod (2 samples, 0.04%)</title><rect x="1071.0" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.13%)</title><rect x="1071.4" y="771.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.13%)</title><rect x="1071.4" y="755.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="1071.4" y="739.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="1071.4" y="723.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.4" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.13%)</title><rect x="1071.4" y="707.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.13%)</title><rect x="1071.4" y="691.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.13%)</title><rect x="1071.4" y="675.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.28%)</title><rect x="1073.0" y="771.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.19%)</title><rect x="1073.6" y="755.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.19%)</title><rect x="1073.6" y="739.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="1075.8" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1078.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="1075.8" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1078.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.11%)</title><rect x="1076.3" y="771.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="1076.5" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="1076.5" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1079.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (205 samples, 3.81%)</title><rect x="1077.6" y="771.0" width="44.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.6" y="782.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (205 samples, 3.81%)</title><rect x="1077.6" y="755.0" width="44.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.6" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (204 samples, 3.79%)</title><rect x="1077.6" y="739.0" width="44.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1080.6" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.07%)</title><rect x="1078.0" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.26%)</title><rect x="1078.9" y="723.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.24%)</title><rect x="1079.1" y="707.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1082.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (13 samples, 0.24%)</title><rect x="1079.1" y="691.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (13 samples, 0.24%)</title><rect x="1079.1" y="675.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="1081.5" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (184 samples, 3.42%)</title><rect x="1082.0" y="723.0" width="40.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.0" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (184 samples, 3.42%)</title><rect x="1082.0" y="707.0" width="40.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.0" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (183 samples, 3.40%)</title><rect x="1082.2" y="691.0" width="40.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.2" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (182 samples, 3.38%)</title><rect x="1082.4" y="675.0" width="39.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.4" y="686.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (182 samples, 3.38%)</title><rect x="1082.4" y="659.0" width="39.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.4" y="670.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="1084.1" y="643.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1087.1" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="1084.6" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1087.6" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (30 samples, 0.56%)</title><rect x="1085.0" y="643.0" width="6.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1088.0" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="1086.6" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.6" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.07%)</title><rect x="1087.2" y="627.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1090.2" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.07%)</title><rect x="1088.1" y="627.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1091.1" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.06%)</title><rect x="1089.0" y="627.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1092.0" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.06%)</title><rect x="1089.6" y="627.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1092.6" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.09%)</title><rect x="1090.5" y="627.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1093.5" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (136 samples, 2.53%)</title><rect x="1091.6" y="643.0" width="29.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1094.6" y="654.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (125 samples, 2.32%)</title><rect x="1094.0" y="627.0" width="27.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1097.0" y="638.0">e..</text>
</g>
<g>
<title>do_syscall_64 (125 samples, 2.32%)</title><rect x="1094.0" y="611.0" width="27.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1097.0" y="622.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (106 samples, 1.97%)</title><rect x="1097.7" y="595.0" width="23.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1100.7" y="606.0">_..</text>
</g>
<g>
<title>do_futex (103 samples, 1.91%)</title><rect x="1098.2" y="579.0" width="22.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1101.2" y="590.0">d..</text>
</g>
<g>
<title>futex_wake (101 samples, 1.88%)</title><rect x="1098.4" y="563.0" width="22.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1101.4" y="574.0">f..</text>
</g>
<g>
<title>get_futex_key (3 samples, 0.06%)</title><rect x="1099.5" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1102.5" y="558.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (2 samples, 0.04%)</title><rect x="1100.1" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1103.1" y="558.0"></text>
</g>
<g>
<title>wake_up_q (91 samples, 1.69%)</title><rect x="1100.6" y="547.0" width="19.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1103.6" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (91 samples, 1.69%)</title><rect x="1100.6" y="531.0" width="19.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1103.6" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (90 samples, 1.67%)</title><rect x="1100.8" y="515.0" width="19.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1103.8" y="526.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="1121.0" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1124.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1121.4" y="643.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1124.4" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.04%)</title><rect x="1121.8" y="643.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1124.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationFactor.defaultRepliFactor (2 samples, 0.04%)</title><rect x="1122.5" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (39 samples, 0.72%)</title><rect x="1122.9" y="803.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (39 samples, 0.72%)</title><rect x="1122.9" y="787.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (21 samples, 0.39%)</title><rect x="1122.9" y="771.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.9" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.11%)</title><rect x="1126.2" y="755.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1129.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (18 samples, 0.33%)</title><rect x="1127.5" y="771.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (18 samples, 0.33%)</title><rect x="1127.5" y="755.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (18 samples, 0.33%)</title><rect x="1127.5" y="739.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.5" y="750.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4 samples, 0.07%)</title><rect x="1128.4" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.4" y="734.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.19%)</title><rect x="1129.3" y="723.0" width="2.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1132.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="1131.5" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="1131.5" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="1131.5" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (26 samples, 0.48%)</title><rect x="1132.1" y="835.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1132.6" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1133.0" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1136.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1133.0" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1133.0" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.17%)</title><rect x="1133.5" y="819.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.17%)</title><rect x="1133.5" y="803.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (11 samples, 0.20%)</title><rect x="1135.4" y="819.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.04%)</title><rect x="1138.1" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.35%)</title><rect x="1138.5" y="835.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.11%)</title><rect x="1141.3" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.11%)</title><rect x="1141.3" y="803.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1144.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.11%)</title><rect x="1142.9" y="835.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.11%)</title><rect x="1142.9" y="819.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (188 samples, 3.49%)</title><rect x="1144.4" y="851.0" width="41.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.4" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (183 samples, 3.40%)</title><rect x="1145.5" y="835.0" width="40.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.5" y="846.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (38 samples, 0.71%)</title><rect x="1147.0" y="819.0" width="8.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1150.0" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.09%)</title><rect x="1148.8" y="803.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.8" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1149.9" y="803.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.9" y="814.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.11%)</title><rect x="1150.3" y="803.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1153.3" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.26%)</title><rect x="1151.6" y="803.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1154.6" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.09%)</title><rect x="1153.0" y="787.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.0" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.06%)</title><rect x="1154.1" y="787.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1157.1" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="1154.3" y="771.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.3" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.04%)</title><rect x="1154.9" y="803.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.9" y="814.0"></text>
</g>
<g>
<title>__GI___recv (129 samples, 2.40%)</title><rect x="1155.4" y="819.0" width="28.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1158.4" y="830.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (123 samples, 2.28%)</title><rect x="1156.7" y="803.0" width="26.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1159.7" y="814.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.04%)</title><rect x="1156.7" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (121 samples, 2.25%)</title><rect x="1157.1" y="787.0" width="26.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1160.1" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (99 samples, 1.84%)</title><rect x="1161.9" y="771.0" width="21.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1164.9" y="782.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (94 samples, 1.75%)</title><rect x="1161.9" y="755.0" width="20.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1164.9" y="766.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.06%)</title><rect x="1163.7" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1166.7" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (78 samples, 1.45%)</title><rect x="1164.4" y="739.0" width="17.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1167.4" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (68 samples, 1.26%)</title><rect x="1164.6" y="723.0" width="14.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1167.6" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (64 samples, 1.19%)</title><rect x="1165.5" y="707.0" width="14.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1168.5" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.07%)</title><rect x="1167.9" y="691.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.9" y="702.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.07%)</title><rect x="1167.9" y="675.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1170.9" y="686.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="1168.1" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1171.1" y="670.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="1169.0" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1172.0" y="702.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="1169.8" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.8" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (14 samples, 0.26%)</title><rect x="1170.3" y="691.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.3" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (14 samples, 0.26%)</title><rect x="1170.3" y="675.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1173.3" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (12 samples, 0.22%)</title><rect x="1170.7" y="659.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1173.7" y="670.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.09%)</title><rect x="1170.7" y="643.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.7" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="1171.8" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1174.8" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.09%)</title><rect x="1172.2" y="643.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.2" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="1172.2" y="627.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.2" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.04%)</title><rect x="1172.9" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1175.9" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (22 samples, 0.41%)</title><rect x="1173.3" y="691.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.3" y="702.0"></text>
</g>
<g>
<title>tcp_send_ack (18 samples, 0.33%)</title><rect x="1174.2" y="675.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1177.2" y="686.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (18 samples, 0.33%)</title><rect x="1174.2" y="659.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1177.2" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.04%)</title><rect x="1174.2" y="643.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1177.2" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (16 samples, 0.30%)</title><rect x="1174.7" y="643.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1177.7" y="654.0"></text>
</g>
<g>
<title>ip_queue_xmit (14 samples, 0.26%)</title><rect x="1174.7" y="627.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.7" y="638.0"></text>
</g>
<g>
<title>__ip_queue_xmit (14 samples, 0.26%)</title><rect x="1174.7" y="611.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.7" y="622.0"></text>
</g>
<g>
<title>ip_local_out (13 samples, 0.24%)</title><rect x="1174.7" y="595.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.7" y="606.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.07%)</title><rect x="1174.7" y="579.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.7" y="590.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.07%)</title><rect x="1174.7" y="563.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1177.7" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.06%)</title><rect x="1174.9" y="547.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.9" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.06%)</title><rect x="1174.9" y="531.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1177.9" y="542.0"></text>
</g>
<g>
<title>ip_output (9 samples, 0.17%)</title><rect x="1175.5" y="579.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1178.5" y="590.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 0.17%)</title><rect x="1175.5" y="563.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.5" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (9 samples, 0.17%)</title><rect x="1175.5" y="547.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.5" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.11%)</title><rect x="1175.5" y="531.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.5" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.21 (6 samples, 0.11%)</title><rect x="1175.5" y="515.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1178.5" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.11%)</title><rect x="1175.5" y="499.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1178.5" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.11%)</title><rect x="1175.5" y="483.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.5" y="494.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.11%)</title><rect x="1175.5" y="467.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1178.5" y="478.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.11%)</title><rect x="1175.5" y="451.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.5" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb (6 samples, 0.11%)</title><rect x="1175.5" y="435.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1178.5" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 0.11%)</title><rect x="1175.5" y="419.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1178.5" y="430.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 0.11%)</title><rect x="1175.5" y="403.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.5" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.09%)</title><rect x="1175.8" y="387.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.8" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.07%)</title><rect x="1176.0" y="371.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1179.0" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.07%)</title><rect x="1176.0" y="355.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1179.0" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.07%)</title><rect x="1176.0" y="339.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1179.0" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.07%)</title><rect x="1176.0" y="323.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.0" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.07%)</title><rect x="1176.0" y="307.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1179.0" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.07%)</title><rect x="1176.0" y="291.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1179.0" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.06%)</title><rect x="1176.8" y="531.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1179.8" y="542.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.06%)</title><rect x="1176.8" y="515.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.8" y="526.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="1177.1" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1180.1" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="1177.7" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1180.7" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="1178.2" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.2" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.06%)</title><rect x="1178.6" y="691.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1181.6" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.06%)</title><rect x="1178.6" y="675.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1181.6" y="686.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="1178.8" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.8" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.15%)</title><rect x="1179.5" y="723.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.13%)</title><rect x="1179.7" y="707.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.7" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.13%)</title><rect x="1179.7" y="691.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.7" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.13%)</title><rect x="1179.7" y="675.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1182.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.09%)</title><rect x="1181.5" y="739.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1184.5" y="750.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="1181.5" y="723.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1184.5" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="1181.7" y="707.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.7" y="718.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.07%)</title><rect x="1182.5" y="755.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1185.5" y="766.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.07%)</title><rect x="1183.6" y="819.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1186.6" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="1184.7" y="819.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1187.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.04%)</title><rect x="1185.6" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.6" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.11%)</title><rect x="1186.1" y="883.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.1" y="894.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="1186.5" y="867.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1189.5" y="878.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="1186.7" y="851.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1189.7" y="862.0"></text>
</g>
<g>
<title>start_thread (12 samples, 0.22%)</title><rect x="1187.4" y="899.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1190.4" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 0.22%)</title><rect x="1187.4" y="883.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1190.4" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (12 samples, 0.22%)</title><rect x="1187.4" y="867.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.11%)</title><rect x="1187.6" y="851.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.09%)</title><rect x="1187.6" y="835.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.07%)</title><rect x="1187.6" y="819.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.6" y="830.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.07%)</title><rect x="1187.6" y="803.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1190.6" y="814.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.06%)</title><rect x="1188.9" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.9" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.06%)</title><rect x="1188.9" y="835.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title><rect x="1188.9" y="819.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1188.9" y="803.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1188.9" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.04%)</title><rect x="1188.9" y="771.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.9" y="782.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.04%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
</g>
</svg>
