<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">async Java client | RAM</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (93,397 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (63,873 samples, 68.39%)</title><rect x="10.0" y="723.0" width="807.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (54,169 samples, 58.00%)</title><rect x="10.0" y="707.0" width="684.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (229 samples, 0.25%)</title><rect x="10.0" y="691.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (229 samples, 0.25%)</title><rect x="10.0" y="675.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$137/1144310053.accept (229 samples, 0.25%)</title><rect x="10.0" y="659.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$upsertWithMultipleNodes$5 (229 samples, 0.25%)</title><rect x="10.0" y="643.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execUpsertWithFutures (229 samples, 0.25%)</title><rect x="10.0" y="627.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (127 samples, 0.14%)</title><rect x="10.0" y="611.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.incrementFutureCount (102 samples, 0.11%)</title><rect x="11.6" y="611.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (102 samples, 0.11%)</title><rect x="11.6" y="595.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (102 samples, 0.11%)</title><rect x="11.6" y="579.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (102 samples, 0.11%)</title><rect x="11.6" y="563.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="14.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$136/744653440.get (53,940 samples, 57.75%)</title><rect x="12.9" y="691.0" width="681.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.9" y="702.0">ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$136/744653440.get</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$upsertWithMultipleNodes$4 (53,940 samples, 57.75%)</title><rect x="12.9" y="675.0" width="681.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.9" y="686.0">ru/mail/polis/service/codearound/ReplicationLsm.lambda$upsertWithMultipleNodes$4</text>
</g>
<g>
<title>java/util/ArrayList.toArray (53,940 samples, 57.75%)</title><rect x="12.9" y="659.0" width="681.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.9" y="670.0">java/util/ArrayList.toArray</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (53,940 samples, 57.75%)</title><rect x="12.9" y="643.0" width="681.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="15.9" y="654.0">java.util.concurrent.CompletableFuture[]</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,704 samples, 10.39%)</title><rect x="694.4" y="707.0" width="122.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.4" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,704 samples, 10.39%)</title><rect x="694.4" y="691.0" width="122.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.4" y="702.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5,306 samples, 5.68%)</title><rect x="694.4" y="675.0" width="67.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.4" y="686.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,377 samples, 3.62%)</title><rect x="694.4" y="659.0" width="42.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.4" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,377 samples, 3.62%)</title><rect x="694.4" y="643.0" width="42.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.4" y="654.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.apply (3,361 samples, 3.60%)</title><rect x="694.6" y="627.0" width="42.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.6" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (3,361 samples, 3.60%)</title><rect x="694.6" y="611.0" width="42.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.6" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (3,361 samples, 3.60%)</title><rect x="694.6" y="595.0" width="42.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.6" y="606.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.03%)</title><rect x="694.6" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="694.6" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$194/381966895.get$Lambda (20 samples, 0.02%)</title><rect x="694.6" y="547.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$194 (20 samples, 0.02%)</title><rect x="694.6" y="531.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="697.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (48 samples, 0.05%)</title><rect x="694.9" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (48 samples, 0.05%)</title><rect x="694.9" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (23 samples, 0.02%)</title><rect x="694.9" y="547.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="697.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.03%)</title><rect x="695.2" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.03%)</title><rect x="695.2" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.03%)</title><rect x="695.2" y="515.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="698.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (98 samples, 0.10%)</title><rect x="695.5" y="579.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (98 samples, 0.10%)</title><rect x="695.5" y="563.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (56 samples, 0.06%)</title><rect x="695.5" y="547.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="698.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.04%)</title><rect x="696.2" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.04%)</title><rect x="696.2" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.04%)</title><rect x="696.2" y="515.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="699.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,081 samples, 3.30%)</title><rect x="696.8" y="579.0" width="38.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.8" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,081 samples, 3.30%)</title><rect x="696.8" y="563.0" width="38.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.8" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,081 samples, 3.30%)</title><rect x="696.8" y="547.0" width="38.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.8" y="558.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.03%)</title><rect x="696.8" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.03%)</title><rect x="696.8" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,181 samples, 2.34%)</title><rect x="697.2" y="531.0" width="27.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.2" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,181 samples, 2.34%)</title><rect x="697.2" y="515.0" width="27.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.2" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,152 samples, 2.30%)</title><rect x="697.2" y="499.0" width="27.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.2" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/1812886357.apply (2,152 samples, 2.30%)</title><rect x="697.2" y="483.0" width="27.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.2" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,152 samples, 2.30%)</title><rect x="697.2" y="467.0" width="27.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.2" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,152 samples, 2.30%)</title><rect x="697.2" y="451.0" width="27.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.2" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1571858567.apply (2,152 samples, 2.30%)</title><rect x="697.2" y="435.0" width="27.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.2" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,152 samples, 2.30%)</title><rect x="697.2" y="419.0" width="27.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.2" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (53 samples, 0.06%)</title><rect x="697.4" y="403.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (53 samples, 0.06%)</title><rect x="697.4" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (25 samples, 0.03%)</title><rect x="697.4" y="371.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="700.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="697.7" y="371.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.03%)</title><rect x="697.7" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="697.7" y="339.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="700.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (52 samples, 0.06%)</title><rect x="698.0" y="403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (52 samples, 0.06%)</title><rect x="698.0" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (31 samples, 0.03%)</title><rect x="698.0" y="371.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="701.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.02%)</title><rect x="698.4" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.02%)</title><rect x="698.4" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.02%)</title><rect x="698.4" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="701.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,032 samples, 2.18%)</title><rect x="698.7" y="403.0" width="25.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.7" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,681 samples, 1.80%)</title><rect x="698.9" y="387.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.9" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,681 samples, 1.80%)</title><rect x="698.9" y="371.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.9" y="382.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.02%)</title><rect x="698.9" y="355.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="701.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$183/36443311.apply (1,618 samples, 1.73%)</title><rect x="699.2" y="355.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,618 samples, 1.73%)</title><rect x="699.2" y="339.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.05%)</title><rect x="699.3" y="323.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (49 samples, 0.05%)</title><rect x="699.3" y="307.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.03%)</title><rect x="699.3" y="291.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="702.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.02%)</title><rect x="699.7" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.02%)</title><rect x="699.7" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.02%)</title><rect x="699.7" y="259.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="702.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.02%)</title><rect x="700.0" y="323.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="703.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (27 samples, 0.03%)</title><rect x="700.2" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="703.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (57 samples, 0.06%)</title><rect x="700.6" y="323.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (57 samples, 0.06%)</title><rect x="700.6" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (45 samples, 0.05%)</title><rect x="700.7" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (45 samples, 0.05%)</title><rect x="700.7" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (31 samples, 0.03%)</title><rect x="700.7" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="703.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,448 samples, 1.55%)</title><rect x="701.3" y="323.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.3" y="334.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (27 samples, 0.03%)</title><rect x="701.3" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="704.3" y="318.0"></text>
</g>
<g>
<title>java/lang/Long.toString (39 samples, 0.04%)</title><rect x="701.6" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.02%)</title><rect x="701.9" y="291.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="704.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (111 samples, 0.12%)</title><rect x="702.1" y="307.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (111 samples, 0.12%)</title><rect x="702.1" y="291.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (111 samples, 0.12%)</title><rect x="702.1" y="275.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.1" y="286.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.12%)</title><rect x="702.1" y="259.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="705.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.05%)</title><rect x="703.5" y="307.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.5" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.05%)</title><rect x="703.5" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.5" y="302.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="703.5" y="275.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="706.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (106 samples, 0.11%)</title><rect x="704.1" y="307.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (106 samples, 0.11%)</title><rect x="704.1" y="291.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (106 samples, 0.11%)</title><rect x="704.1" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.1" y="286.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.11%)</title><rect x="704.1" y="259.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="707.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 0.04%)</title><rect x="705.5" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (39 samples, 0.04%)</title><rect x="705.5" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 0.04%)</title><rect x="705.5" y="275.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="708.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (871 samples, 0.93%)</title><rect x="706.1" y="307.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (456 samples, 0.49%)</title><rect x="706.2" y="291.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (278 samples, 0.30%)</title><rect x="706.2" y="275.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.2" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (278 samples, 0.30%)</title><rect x="706.2" y="259.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.2" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (278 samples, 0.30%)</title><rect x="706.2" y="243.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (278 samples, 0.30%)</title><rect x="706.2" y="227.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.2" y="238.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.30%)</title><rect x="706.2" y="211.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="709.2" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (48 samples, 0.05%)</title><rect x="709.7" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.7" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (48 samples, 0.05%)</title><rect x="709.7" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (48 samples, 0.05%)</title><rect x="709.7" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (48 samples, 0.05%)</title><rect x="709.7" y="227.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="712.7" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (34 samples, 0.04%)</title><rect x="710.4" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (22 samples, 0.02%)</title><rect x="710.5" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (22 samples, 0.02%)</title><rect x="710.5" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="713.5" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$199/1275166273.test (96 samples, 0.10%)</title><rect x="710.8" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.8" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (96 samples, 0.10%)</title><rect x="710.8" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/299644693.test (96 samples, 0.10%)</title><rect x="710.8" y="243.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (96 samples, 0.10%)</title><rect x="710.8" y="227.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.8" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1172131546.test (96 samples, 0.10%)</title><rect x="710.8" y="211.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.8" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (96 samples, 0.10%)</title><rect x="710.8" y="195.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1790421142.test (96 samples, 0.10%)</title><rect x="710.8" y="179.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (96 samples, 0.10%)</title><rect x="710.8" y="163.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (96 samples, 0.10%)</title><rect x="710.8" y="147.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (96 samples, 0.10%)</title><rect x="710.8" y="131.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.05%)</title><rect x="710.8" y="115.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="713.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.05%)</title><rect x="711.4" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.4" y="126.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="711.4" y="99.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="714.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (401 samples, 0.43%)</title><rect x="712.0" y="291.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (401 samples, 0.43%)</title><rect x="712.0" y="275.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (401 samples, 0.43%)</title><rect x="712.0" y="259.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (40 samples, 0.04%)</title><rect x="712.3" y="243.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="715.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="712.9" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="712.9" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.9" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.get$Lambda (25 samples, 0.03%)</title><rect x="712.9" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.9" y="222.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (25 samples, 0.03%)</title><rect x="712.9" y="195.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="715.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (22 samples, 0.02%)</title><rect x="713.2" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.2" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (22 samples, 0.02%)</title><rect x="713.2" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="716.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (264 samples, 0.28%)</title><rect x="713.5" y="243.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (264 samples, 0.28%)</title><rect x="713.5" y="227.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.5" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (264 samples, 0.28%)</title><rect x="713.5" y="211.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.06%)</title><rect x="713.5" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.06%)</title><rect x="713.5" y="179.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.5" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.get$Lambda (57 samples, 0.06%)</title><rect x="713.5" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.5" y="174.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (57 samples, 0.06%)</title><rect x="713.5" y="147.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="716.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (28 samples, 0.03%)</title><rect x="714.2" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (28 samples, 0.03%)</title><rect x="714.2" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.2" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (28 samples, 0.03%)</title><rect x="714.2" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (28 samples, 0.03%)</title><rect x="714.2" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (28 samples, 0.03%)</title><rect x="714.2" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (28 samples, 0.03%)</title><rect x="714.2" y="115.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (28 samples, 0.03%)</title><rect x="714.2" y="99.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.03%)</title><rect x="714.2" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.2" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (28 samples, 0.03%)</title><rect x="714.2" y="67.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="717.2" y="78.0"></text>
</g>
<g>
<title>java/util/List.copyOf (94 samples, 0.10%)</title><rect x="714.6" y="195.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.6" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (94 samples, 0.10%)</title><rect x="714.6" y="179.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (38 samples, 0.04%)</title><rect x="714.6" y="163.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.04%)</title><rect x="714.6" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.04%)</title><rect x="714.6" y="131.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="717.6" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (56 samples, 0.06%)</title><rect x="715.1" y="163.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.1" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (56 samples, 0.06%)</title><rect x="715.1" y="147.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="718.1" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (85 samples, 0.09%)</title><rect x="715.8" y="195.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.8" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (85 samples, 0.09%)</title><rect x="715.8" y="179.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="718.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (47 samples, 0.05%)</title><rect x="717.1" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.03%)</title><rect x="717.3" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (31 samples, 0.03%)</title><rect x="717.3" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/249155636.invoke (31 samples, 0.03%)</title><rect x="717.3" y="259.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.03%)</title><rect x="717.3" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (23 samples, 0.02%)</title><rect x="717.4" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (23 samples, 0.02%)</title><rect x="717.4" y="211.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.4" y="222.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.02%)</title><rect x="717.4" y="195.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="720.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (43 samples, 0.05%)</title><rect x="717.7" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (43 samples, 0.05%)</title><rect x="717.7" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.05%)</title><rect x="717.7" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (43 samples, 0.05%)</title><rect x="717.7" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/249155636.invoke (43 samples, 0.05%)</title><rect x="717.7" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.05%)</title><rect x="717.7" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.03%)</title><rect x="717.9" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.03%)</title><rect x="717.9" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.9" y="206.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.03%)</title><rect x="717.9" y="179.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="720.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (111 samples, 0.12%)</title><rect x="718.2" y="307.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.2" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.03%)</title><rect x="718.2" y="291.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="721.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (38 samples, 0.04%)</title><rect x="718.5" y="291.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.5" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.04%)</title><rect x="718.5" y="275.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="721.5" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (49 samples, 0.05%)</title><rect x="719.0" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.0" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (49 samples, 0.05%)</title><rect x="719.0" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="722.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.04%)</title><rect x="719.6" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.04%)</title><rect x="719.6" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.04%)</title><rect x="719.6" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="722.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (54 samples, 0.06%)</title><rect x="720.1" y="387.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="723.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (265 samples, 0.28%)</title><rect x="721.0" y="387.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="721.0" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="721.0" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (29 samples, 0.03%)</title><rect x="721.3" y="371.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="724.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (36 samples, 0.04%)</title><rect x="721.9" y="371.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="724.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (63 samples, 0.07%)</title><rect x="722.4" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (63 samples, 0.07%)</title><rect x="722.4" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (63 samples, 0.07%)</title><rect x="722.4" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (63 samples, 0.07%)</title><rect x="722.4" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (63 samples, 0.07%)</title><rect x="722.4" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (63 samples, 0.07%)</title><rect x="722.4" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (63 samples, 0.07%)</title><rect x="722.4" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (63 samples, 0.07%)</title><rect x="722.4" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (63 samples, 0.07%)</title><rect x="722.4" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="722.4" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="722.4" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (66 samples, 0.07%)</title><rect x="723.2" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.2" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (31 samples, 0.03%)</title><rect x="723.4" y="355.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="726.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (27 samples, 0.03%)</title><rect x="724.0" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.03%)</title><rect x="724.0" y="355.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="727.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.03%)</title><rect x="724.4" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.03%)</title><rect x="724.4" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.03%)</title><rect x="724.4" y="467.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="727.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (42 samples, 0.04%)</title><rect x="724.7" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (42 samples, 0.04%)</title><rect x="724.7" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.02%)</title><rect x="724.7" y="499.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="727.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (827 samples, 0.89%)</title><rect x="725.2" y="531.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="728.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.03%)</title><rect x="725.2" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.03%)</title><rect x="725.2" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (39 samples, 0.04%)</title><rect x="725.6" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (39 samples, 0.04%)</title><rect x="725.6" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$169/812541756.apply (24 samples, 0.03%)</title><rect x="725.6" y="483.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (24 samples, 0.03%)</title><rect x="725.6" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (24 samples, 0.03%)</title><rect x="725.6" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.03%)</title><rect x="725.6" y="435.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="728.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (20 samples, 0.02%)</title><rect x="726.1" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.02%)</title><rect x="726.1" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.02%)</title><rect x="726.1" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.02%)</title><rect x="726.1" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.02%)</title><rect x="726.1" y="451.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="729.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (739 samples, 0.79%)</title><rect x="726.4" y="515.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (739 samples, 0.79%)</title><rect x="726.4" y="499.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (66 samples, 0.07%)</title><rect x="726.4" y="483.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="729.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (650 samples, 0.70%)</title><rect x="727.2" y="483.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (20 samples, 0.02%)</title><rect x="727.3" y="467.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="730.3" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (34 samples, 0.04%)</title><rect x="727.9" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.9" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (34 samples, 0.04%)</title><rect x="727.9" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.9" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (34 samples, 0.04%)</title><rect x="727.9" y="435.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="730.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (46 samples, 0.05%)</title><rect x="728.5" y="467.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="731.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (36 samples, 0.04%)</title><rect x="729.0" y="467.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="732.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (40 samples, 0.04%)</title><rect x="729.5" y="467.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="732.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.04%)</title><rect x="730.0" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="733.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (187 samples, 0.20%)</title><rect x="730.5" y="467.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.02%)</title><rect x="731.7" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="734.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (71 samples, 0.08%)</title><rect x="732.0" y="451.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (27 samples, 0.03%)</title><rect x="732.1" y="435.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="735.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (24 samples, 0.03%)</title><rect x="732.6" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (111 samples, 0.12%)</title><rect x="732.9" y="467.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (58 samples, 0.06%)</title><rect x="733.5" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (29 samples, 0.03%)</title><rect x="733.9" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (66 samples, 0.07%)</title><rect x="734.6" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.6" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (50 samples, 0.05%)</title><rect x="734.8" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/188927272.run (50 samples, 0.05%)</title><rect x="734.8" y="435.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (50 samples, 0.05%)</title><rect x="734.8" y="419.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.8" y="430.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (36 samples, 0.04%)</title><rect x="735.0" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.0" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (23 samples, 0.02%)</title><rect x="735.0" y="387.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="738.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (23 samples, 0.02%)</title><rect x="735.4" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.02%)</title><rect x="735.4" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="738.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (28 samples, 0.03%)</title><rect x="735.7" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (28 samples, 0.03%)</title><rect x="735.7" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (28 samples, 0.03%)</title><rect x="735.7" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (28 samples, 0.03%)</title><rect x="735.7" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="738.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (79 samples, 0.08%)</title><rect x="736.1" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (59 samples, 0.06%)</title><rect x="736.1" y="563.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="739.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (20 samples, 0.02%)</title><rect x="736.8" y="563.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (20 samples, 0.02%)</title><rect x="736.8" y="547.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.8" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (20 samples, 0.02%)</title><rect x="736.8" y="531.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.8" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (20 samples, 0.02%)</title><rect x="736.8" y="515.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (20 samples, 0.02%)</title><rect x="736.8" y="499.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (20 samples, 0.02%)</title><rect x="736.8" y="483.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (20 samples, 0.02%)</title><rect x="736.8" y="467.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (20 samples, 0.02%)</title><rect x="736.8" y="451.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (20 samples, 0.02%)</title><rect x="736.8" y="435.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (20 samples, 0.02%)</title><rect x="736.8" y="419.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.8" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (20 samples, 0.02%)</title><rect x="736.8" y="403.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="739.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$120/984099083.get (1,929 samples, 2.07%)</title><rect x="737.0" y="659.0" width="24.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.0" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$upsertWithMultipleNodes$3 (1,929 samples, 2.07%)</title><rect x="737.0" y="643.0" width="24.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.0" y="654.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.codearound.AsyncConnectUtils (77 samples, 0.08%)</title><rect x="737.0" y="627.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="740.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValueWithFutures (1,852 samples, 1.98%)</title><rect x="738.0" y="627.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.0" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,484 samples, 1.59%)</title><rect x="738.0" y="611.0" width="18.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,484 samples, 1.59%)</title><rect x="738.0" y="595.0" width="18.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.0" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,484 samples, 1.59%)</title><rect x="738.0" y="579.0" width="18.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="741.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (368 samples, 0.39%)</title><rect x="756.8" y="611.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="759.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (152 samples, 0.16%)</title><rect x="756.8" y="595.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (152 samples, 0.16%)</title><rect x="756.8" y="579.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.8" y="590.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.16%)</title><rect x="756.8" y="563.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="759.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (216 samples, 0.23%)</title><rect x="758.7" y="595.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (216 samples, 0.23%)</title><rect x="758.7" y="579.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (216 samples, 0.23%)</title><rect x="758.7" y="563.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.7" y="574.0"></text>
</g>
<g>
<title>byte[] (216 samples, 0.23%)</title><rect x="758.7" y="547.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="761.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (405 samples, 0.43%)</title><rect x="761.4" y="675.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (405 samples, 0.43%)</title><rect x="761.4" y="659.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (405 samples, 0.43%)</title><rect x="761.4" y="643.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (405 samples, 0.43%)</title><rect x="761.4" y="627.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (405 samples, 0.43%)</title><rect x="761.4" y="611.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="764.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.run (845 samples, 0.90%)</title><rect x="766.5" y="675.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (845 samples, 0.90%)</title><rect x="766.5" y="659.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (845 samples, 0.90%)</title><rect x="766.5" y="643.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (845 samples, 0.90%)</title><rect x="766.5" y="627.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (845 samples, 0.90%)</title><rect x="766.5" y="611.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (845 samples, 0.90%)</title><rect x="766.5" y="595.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (845 samples, 0.90%)</title><rect x="766.5" y="579.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (845 samples, 0.90%)</title><rect x="766.5" y="563.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (845 samples, 0.90%)</title><rect x="766.5" y="547.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (845 samples, 0.90%)</title><rect x="766.5" y="531.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (845 samples, 0.90%)</title><rect x="766.5" y="515.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (775 samples, 0.83%)</title><rect x="766.5" y="499.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.04%)</title><rect x="766.5" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.04%)</title><rect x="766.5" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$207/693312092.get$Lambda (21 samples, 0.02%)</title><rect x="766.6" y="451.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$207 (21 samples, 0.02%)</title><rect x="766.6" y="435.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="769.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (736 samples, 0.79%)</title><rect x="767.0" y="483.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (29 samples, 0.03%)</title><rect x="767.0" y="467.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="770.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (707 samples, 0.76%)</title><rect x="767.4" y="467.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (707 samples, 0.76%)</title><rect x="767.4" y="451.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (707 samples, 0.76%)</title><rect x="767.4" y="435.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (136 samples, 0.15%)</title><rect x="767.4" y="419.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (51 samples, 0.05%)</title><rect x="767.4" y="403.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="770.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/556718513.apply (69 samples, 0.07%)</title><rect x="768.0" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="771.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (69 samples, 0.07%)</title><rect x="768.0" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (69 samples, 0.07%)</title><rect x="768.0" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.0" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (22 samples, 0.02%)</title><rect x="768.0" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.0" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (22 samples, 0.02%)</title><rect x="768.0" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.0" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (22 samples, 0.02%)</title><rect x="768.0" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="771.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (47 samples, 0.05%)</title><rect x="768.3" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (39 samples, 0.04%)</title><rect x="768.4" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (39 samples, 0.04%)</title><rect x="768.4" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (21 samples, 0.02%)</title><rect x="768.4" y="307.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="771.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (567 samples, 0.61%)</title><rect x="769.1" y="419.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (567 samples, 0.61%)</title><rect x="769.1" y="403.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$192/1238073191.apply (567 samples, 0.61%)</title><rect x="769.1" y="387.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (567 samples, 0.61%)</title><rect x="769.1" y="371.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (567 samples, 0.61%)</title><rect x="769.1" y="355.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1400327321.apply (567 samples, 0.61%)</title><rect x="769.1" y="339.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (567 samples, 0.61%)</title><rect x="769.1" y="323.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (41 samples, 0.04%)</title><rect x="769.3" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (41 samples, 0.04%)</title><rect x="769.3" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.02%)</title><rect x="769.3" y="275.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="772.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (514 samples, 0.55%)</title><rect x="769.8" y="307.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="769.8" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="769.8" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (185 samples, 0.20%)</title><rect x="770.1" y="291.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (185 samples, 0.20%)</title><rect x="770.1" y="275.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (185 samples, 0.20%)</title><rect x="770.1" y="259.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$202/1500652670.accept (64 samples, 0.07%)</title><rect x="770.1" y="243.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (64 samples, 0.07%)</title><rect x="770.1" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (64 samples, 0.07%)</title><rect x="770.1" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (48 samples, 0.05%)</title><rect x="770.3" y="195.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (48 samples, 0.05%)</title><rect x="770.3" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (27 samples, 0.03%)</title><rect x="770.3" y="163.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="773.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.02%)</title><rect x="770.6" y="163.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.02%)</title><rect x="770.6" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.02%)</title><rect x="770.6" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="773.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$204/1682365891.accept (84 samples, 0.09%)</title><rect x="770.9" y="243.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (84 samples, 0.09%)</title><rect x="770.9" y="227.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (84 samples, 0.09%)</title><rect x="770.9" y="211.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (84 samples, 0.09%)</title><rect x="770.9" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (84 samples, 0.09%)</title><rect x="770.9" y="179.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (84 samples, 0.09%)</title><rect x="770.9" y="163.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (84 samples, 0.09%)</title><rect x="770.9" y="147.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (84 samples, 0.09%)</title><rect x="770.9" y="131.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (84 samples, 0.09%)</title><rect x="770.9" y="115.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (84 samples, 0.09%)</title><rect x="770.9" y="99.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (34 samples, 0.04%)</title><rect x="770.9" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (34 samples, 0.04%)</title><rect x="770.9" y="67.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (50 samples, 0.05%)</title><rect x="771.3" y="83.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (50 samples, 0.05%)</title><rect x="771.3" y="67.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (31 samples, 0.03%)</title><rect x="771.6" y="51.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.6" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (20 samples, 0.02%)</title><rect x="771.6" y="35.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="774.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="772.0" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="772.0" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="772.0" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="775.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (305 samples, 0.33%)</title><rect x="772.4" y="291.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (25 samples, 0.03%)</title><rect x="772.4" y="275.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="775.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (263 samples, 0.28%)</title><rect x="773.0" y="275.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (140 samples, 0.15%)</title><rect x="773.1" y="259.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (30 samples, 0.03%)</title><rect x="773.3" y="243.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="776.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (93 samples, 0.10%)</title><rect x="773.7" y="243.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (41 samples, 0.04%)</title><rect x="774.4" y="227.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (109 samples, 0.12%)</title><rect x="774.9" y="259.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.9" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.02%)</title><rect x="774.9" y="243.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="777.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (46 samples, 0.05%)</title><rect x="775.2" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.03%)</title><rect x="775.2" y="227.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="778.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (42 samples, 0.04%)</title><rect x="775.7" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (42 samples, 0.04%)</title><rect x="775.7" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.7" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (42 samples, 0.04%)</title><rect x="775.7" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.7" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (42 samples, 0.04%)</title><rect x="775.7" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.04%)</title><rect x="775.7" y="179.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.7" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.04%)</title><rect x="775.7" y="163.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="778.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (70 samples, 0.07%)</title><rect x="776.3" y="499.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (70 samples, 0.07%)</title><rect x="776.3" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (70 samples, 0.07%)</title><rect x="776.3" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (70 samples, 0.07%)</title><rect x="776.3" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (70 samples, 0.07%)</title><rect x="776.3" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.3" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (70 samples, 0.07%)</title><rect x="776.3" y="419.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.3" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (30 samples, 0.03%)</title><rect x="776.3" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.3" y="414.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (30 samples, 0.03%)</title><rect x="776.3" y="387.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="779.3" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (40 samples, 0.04%)</title><rect x="776.7" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.7" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (40 samples, 0.04%)</title><rect x="776.7" y="387.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="779.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,148 samples, 3.37%)</title><rect x="777.2" y="675.0" width="39.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.2" y="686.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,148 samples, 3.37%)</title><rect x="777.2" y="659.0" width="39.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.2" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,263 samples, 2.42%)</title><rect x="777.2" y="643.0" width="28.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.2" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (2,263 samples, 2.42%)</title><rect x="777.2" y="627.0" width="28.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,263 samples, 2.42%)</title><rect x="777.2" y="611.0" width="28.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.2" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (47 samples, 0.05%)</title><rect x="777.2" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (47 samples, 0.05%)</title><rect x="777.2" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (47 samples, 0.05%)</title><rect x="777.2" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (47 samples, 0.05%)</title><rect x="777.2" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/502800944.linkToTargetMethod (32 samples, 0.03%)</title><rect x="777.2" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1076770748.invoke (32 samples, 0.03%)</title><rect x="777.2" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.03%)</title><rect x="777.2" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (32 samples, 0.03%)</title><rect x="777.2" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (32 samples, 0.03%)</title><rect x="777.2" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.2" y="478.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="777.2" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="780.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,216 samples, 2.37%)</title><rect x="777.8" y="595.0" width="28.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,216 samples, 2.37%)</title><rect x="777.8" y="579.0" width="28.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.8" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,216 samples, 2.37%)</title><rect x="777.8" y="563.0" width="28.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.8" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,216 samples, 2.37%)</title><rect x="777.8" y="547.0" width="28.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.8" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,024 samples, 1.10%)</title><rect x="777.8" y="531.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,024 samples, 1.10%)</title><rect x="777.8" y="515.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,024 samples, 1.10%)</title><rect x="777.8" y="499.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,024 samples, 1.10%)</title><rect x="777.8" y="483.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,024 samples, 1.10%)</title><rect x="777.8" y="467.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,024 samples, 1.10%)</title><rect x="777.8" y="451.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,024 samples, 1.10%)</title><rect x="777.8" y="435.0" width="12.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (996 samples, 1.07%)</title><rect x="777.8" y="419.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (996 samples, 1.07%)</title><rect x="777.8" y="403.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (979 samples, 1.05%)</title><rect x="777.8" y="387.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/704105605.apply (912 samples, 0.98%)</title><rect x="778.0" y="371.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (912 samples, 0.98%)</title><rect x="778.0" y="355.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (51 samples, 0.05%)</title><rect x="778.3" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (51 samples, 0.05%)</title><rect x="778.3" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (30 samples, 0.03%)</title><rect x="778.3" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="781.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.02%)</title><rect x="778.6" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.02%)</title><rect x="778.6" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.02%)</title><rect x="778.6" y="275.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="781.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (843 samples, 0.90%)</title><rect x="778.9" y="339.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (41 samples, 0.04%)</title><rect x="779.0" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (41 samples, 0.04%)</title><rect x="779.0" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.03%)</title><rect x="779.0" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="782.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (791 samples, 0.85%)</title><rect x="779.6" y="323.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$124/917536706.apply (57 samples, 0.06%)</title><rect x="779.6" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.6" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (57 samples, 0.06%)</title><rect x="779.6" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.6" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (57 samples, 0.06%)</title><rect x="779.6" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (39 samples, 0.04%)</title><rect x="779.8" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.02%)</title><rect x="780.0" y="243.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="783.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (734 samples, 0.79%)</title><rect x="780.3" y="307.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1827980514.linkToTargetMethod (35 samples, 0.04%)</title><rect x="780.5" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/673721291.invokeStatic (35 samples, 0.04%)</title><rect x="780.5" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/611985749.get$Lambda (35 samples, 0.04%)</title><rect x="780.5" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$217 (35 samples, 0.04%)</title><rect x="780.5" y="243.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="783.5" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (136 samples, 0.15%)</title><rect x="780.9" y="291.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (49 samples, 0.05%)</title><rect x="780.9" y="275.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.9" y="286.0"></text>
</g>
<g>
<title>java/util/List.spliterator (27 samples, 0.03%)</title><rect x="780.9" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.9" y="270.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (27 samples, 0.03%)</title><rect x="780.9" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="783.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (22 samples, 0.02%)</title><rect x="781.2" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.2" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (22 samples, 0.02%)</title><rect x="781.2" y="243.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="784.2" y="254.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (42 samples, 0.04%)</title><rect x="781.5" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (42 samples, 0.04%)</title><rect x="781.5" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (42 samples, 0.04%)</title><rect x="781.5" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.5" y="254.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (45 samples, 0.05%)</title><rect x="782.1" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (45 samples, 0.05%)</title><rect x="782.1" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="785.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (99 samples, 0.11%)</title><rect x="782.6" y="291.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (46 samples, 0.05%)</title><rect x="782.6" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.03%)</title><rect x="782.6" y="259.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="785.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (53 samples, 0.06%)</title><rect x="783.2" y="275.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (53 samples, 0.06%)</title><rect x="783.2" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (35 samples, 0.04%)</title><rect x="783.2" y="243.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="786.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (21 samples, 0.02%)</title><rect x="783.9" y="291.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="786.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.02%)</title><rect x="784.4" y="291.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="787.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (21 samples, 0.02%)</title><rect x="784.6" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (21 samples, 0.02%)</title><rect x="784.6" y="275.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="787.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (369 samples, 0.40%)</title><rect x="784.9" y="291.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/611985749.run (369 samples, 0.40%)</title><rect x="784.9" y="275.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (369 samples, 0.40%)</title><rect x="784.9" y="259.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.05%)</title><rect x="784.9" y="243.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.05%)</title><rect x="784.9" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$221/1241568452.get$Lambda (20 samples, 0.02%)</title><rect x="785.2" y="211.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$221 (20 samples, 0.02%)</title><rect x="785.2" y="195.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="788.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (56 samples, 0.06%)</title><rect x="785.4" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (56 samples, 0.06%)</title><rect x="785.4" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.03%)</title><rect x="785.4" y="211.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="788.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.03%)</title><rect x="785.8" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.03%)</title><rect x="785.8" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.8" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.03%)</title><rect x="785.8" y="179.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="788.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (23 samples, 0.02%)</title><rect x="786.1" y="243.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="789.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (21 samples, 0.02%)</title><rect x="786.4" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.02%)</title><rect x="786.4" y="227.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="789.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (57 samples, 0.06%)</title><rect x="786.7" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (57 samples, 0.06%)</title><rect x="786.7" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (45 samples, 0.05%)</title><rect x="786.8" y="211.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (45 samples, 0.05%)</title><rect x="786.8" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (45 samples, 0.05%)</title><rect x="786.8" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.03%)</title><rect x="786.8" y="163.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="789.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (55 samples, 0.06%)</title><rect x="787.4" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.06%)</title><rect x="787.4" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/926370398.invoke (55 samples, 0.06%)</title><rect x="787.4" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.06%)</title><rect x="787.4" y="195.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (46 samples, 0.05%)</title><rect x="787.5" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (46 samples, 0.05%)</title><rect x="787.5" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.5" y="174.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="787.5" y="147.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="790.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (114 samples, 0.12%)</title><rect x="788.1" y="243.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (34 samples, 0.04%)</title><rect x="788.1" y="227.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="791.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (80 samples, 0.09%)</title><rect x="788.5" y="227.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.09%)</title><rect x="788.5" y="211.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/926370398.invoke (80 samples, 0.09%)</title><rect x="788.5" y="195.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.09%)</title><rect x="788.5" y="179.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (20 samples, 0.02%)</title><rect x="788.5" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.02%)</title><rect x="788.5" y="147.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="791.5" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (60 samples, 0.06%)</title><rect x="788.8" y="163.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (60 samples, 0.06%)</title><rect x="788.8" y="147.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="791.8" y="158.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.06%)</title><rect x="788.8" y="131.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="791.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$194/381966895.apply (50 samples, 0.05%)</title><rect x="789.5" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (50 samples, 0.05%)</title><rect x="789.5" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (25 samples, 0.03%)</title><rect x="789.5" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (25 samples, 0.03%)</title><rect x="789.5" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.5" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (25 samples, 0.03%)</title><rect x="789.5" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.5" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (25 samples, 0.03%)</title><rect x="789.5" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="792.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (25 samples, 0.03%)</title><rect x="789.9" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.03%)</title><rect x="789.9" y="323.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="792.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$209/1821490069.apply (28 samples, 0.03%)</title><rect x="790.4" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (28 samples, 0.03%)</title><rect x="790.4" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (28 samples, 0.03%)</title><rect x="790.4" y="387.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="793.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,192 samples, 1.28%)</title><rect x="790.7" y="531.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (73 samples, 0.08%)</title><rect x="790.7" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (73 samples, 0.08%)</title><rect x="790.7" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.7" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (73 samples, 0.08%)</title><rect x="790.7" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.7" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (73 samples, 0.08%)</title><rect x="790.7" y="467.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (73 samples, 0.08%)</title><rect x="790.7" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.7" y="462.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.08%)</title><rect x="790.7" y="435.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="793.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (63 samples, 0.07%)</title><rect x="791.7" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (63 samples, 0.07%)</title><rect x="791.7" y="499.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.7" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (63 samples, 0.07%)</title><rect x="791.7" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.7" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (63 samples, 0.07%)</title><rect x="791.7" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (63 samples, 0.07%)</title><rect x="791.7" y="451.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.7" y="462.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.07%)</title><rect x="791.7" y="435.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="794.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (96 samples, 0.10%)</title><rect x="792.5" y="515.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (22 samples, 0.02%)</title><rect x="792.9" y="499.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.9" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (22 samples, 0.02%)</title><rect x="792.9" y="483.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.9" y="494.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.02%)</title><rect x="792.9" y="467.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="795.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (42 samples, 0.04%)</title><rect x="793.1" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.04%)</title><rect x="793.1" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.02%)</title><rect x="793.1" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="796.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.02%)</title><rect x="793.4" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.4" y="478.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.02%)</title><rect x="793.4" y="451.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="796.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (318 samples, 0.34%)</title><rect x="793.7" y="515.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (318 samples, 0.34%)</title><rect x="793.7" y="499.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (318 samples, 0.34%)</title><rect x="793.7" y="483.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.7" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.02%)</title><rect x="793.8" y="467.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="796.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (31 samples, 0.03%)</title><rect x="794.0" y="467.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="797.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="794.6" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="794.6" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.get$Lambda (25 samples, 0.03%)</title><rect x="794.6" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.6" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (25 samples, 0.03%)</title><rect x="794.6" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="797.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (176 samples, 0.19%)</title><rect x="795.1" y="467.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (176 samples, 0.19%)</title><rect x="795.1" y="451.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (176 samples, 0.19%)</title><rect x="795.1" y="435.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.03%)</title><rect x="795.1" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.03%)</title><rect x="795.1" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.get$Lambda (26 samples, 0.03%)</title><rect x="795.1" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.1" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (26 samples, 0.03%)</title><rect x="795.1" y="371.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="798.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (41 samples, 0.04%)</title><rect x="795.4" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (41 samples, 0.04%)</title><rect x="795.4" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (41 samples, 0.04%)</title><rect x="795.4" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (41 samples, 0.04%)</title><rect x="795.4" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (41 samples, 0.04%)</title><rect x="795.4" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (41 samples, 0.04%)</title><rect x="795.4" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (41 samples, 0.04%)</title><rect x="795.4" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.04%)</title><rect x="795.4" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.04%)</title><rect x="795.4" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="798.4" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (62 samples, 0.07%)</title><rect x="795.9" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.9" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (62 samples, 0.07%)</title><rect x="795.9" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (31 samples, 0.03%)</title><rect x="795.9" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (31 samples, 0.03%)</title><rect x="795.9" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.03%)</title><rect x="795.9" y="355.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="798.9" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (31 samples, 0.03%)</title><rect x="796.3" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="799.3" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (31 samples, 0.03%)</title><rect x="796.3" y="371.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="799.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (47 samples, 0.05%)</title><rect x="796.7" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (47 samples, 0.05%)</title><rect x="796.7" y="403.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="799.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (32 samples, 0.03%)</title><rect x="797.3" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (32 samples, 0.03%)</title><rect x="797.3" y="451.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="800.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (642 samples, 0.69%)</title><rect x="797.7" y="515.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.7" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (32 samples, 0.03%)</title><rect x="797.7" y="499.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="800.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.05%)</title><rect x="798.1" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.1" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.05%)</title><rect x="798.1" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.1" y="494.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="798.1" y="467.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="801.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (102 samples, 0.11%)</title><rect x="798.7" y="499.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (102 samples, 0.11%)</title><rect x="798.7" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.04%)</title><rect x="798.7" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="801.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.07%)</title><rect x="799.1" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="802.1" y="478.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.07%)</title><rect x="799.1" y="451.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="802.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (462 samples, 0.49%)</title><rect x="800.0" y="499.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (142 samples, 0.15%)</title><rect x="800.0" y="483.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (142 samples, 0.15%)</title><rect x="800.0" y="467.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.06%)</title><rect x="800.0" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="803.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (82 samples, 0.09%)</title><rect x="800.7" y="451.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="803.7" y="462.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.09%)</title><rect x="800.7" y="435.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="803.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (67 samples, 0.07%)</title><rect x="801.8" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (67 samples, 0.07%)</title><rect x="801.8" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.8" y="478.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.04%)</title><rect x="801.8" y="451.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="804.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.03%)</title><rect x="802.2" y="451.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="805.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.trim (64 samples, 0.07%)</title><rect x="802.6" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (64 samples, 0.07%)</title><rect x="802.6" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.07%)</title><rect x="802.6" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.03%)</title><rect x="802.6" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="805.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.04%)</title><rect x="803.0" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.0" y="446.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="803.0" y="419.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="806.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (62 samples, 0.07%)</title><rect x="803.4" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (62 samples, 0.07%)</title><rect x="803.4" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (62 samples, 0.07%)</title><rect x="803.4" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (62 samples, 0.07%)</title><rect x="803.4" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.07%)</title><rect x="803.4" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.07%)</title><rect x="803.4" y="403.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="806.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (127 samples, 0.14%)</title><rect x="804.2" y="483.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (42 samples, 0.04%)</title><rect x="804.2" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.2" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (42 samples, 0.04%)</title><rect x="804.2" y="451.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="807.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (52 samples, 0.06%)</title><rect x="804.7" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.7" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (52 samples, 0.06%)</title><rect x="804.7" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="807.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$211/1826361417.apply (33 samples, 0.04%)</title><rect x="805.4" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (33 samples, 0.04%)</title><rect x="805.4" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (33 samples, 0.04%)</title><rect x="805.4" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="808.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (885 samples, 0.95%)</title><rect x="805.8" y="643.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (885 samples, 0.95%)</title><rect x="805.8" y="627.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (885 samples, 0.95%)</title><rect x="805.8" y="611.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (885 samples, 0.95%)</title><rect x="805.8" y="595.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (885 samples, 0.95%)</title><rect x="805.8" y="579.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (883 samples, 0.95%)</title><rect x="805.8" y="563.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.04%)</title><rect x="805.8" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.04%)</title><rect x="805.8" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$178/978000964.get$Lambda (23 samples, 0.02%)</title><rect x="806.0" y="515.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="809.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$178 (23 samples, 0.02%)</title><rect x="806.0" y="499.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="809.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (28 samples, 0.03%)</title><rect x="806.2" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="809.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (801 samples, 0.86%)</title><rect x="806.8" y="547.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (801 samples, 0.86%)</title><rect x="806.8" y="531.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/1882091062.run (307 samples, 0.33%)</title><rect x="806.8" y="515.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (307 samples, 0.33%)</title><rect x="806.8" y="499.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (307 samples, 0.33%)</title><rect x="806.8" y="483.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (100 samples, 0.11%)</title><rect x="806.8" y="467.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.8" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (74 samples, 0.08%)</title><rect x="806.8" y="451.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.8" y="462.0"></text>
</g>
<g>
<title>java/util/List.spliterator (35 samples, 0.04%)</title><rect x="806.8" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.8" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (35 samples, 0.04%)</title><rect x="806.8" y="419.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="809.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (39 samples, 0.04%)</title><rect x="807.3" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.3" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (39 samples, 0.04%)</title><rect x="807.3" y="419.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="810.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (26 samples, 0.03%)</title><rect x="807.8" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (26 samples, 0.03%)</title><rect x="807.8" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (26 samples, 0.03%)</title><rect x="807.8" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (207 samples, 0.22%)</title><rect x="808.1" y="467.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (195 samples, 0.21%)</title><rect x="808.3" y="451.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (78 samples, 0.08%)</title><rect x="808.3" y="435.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (57 samples, 0.06%)</title><rect x="809.2" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.2" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.02%)</title><rect x="809.4" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.4" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (20 samples, 0.02%)</title><rect x="809.4" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.4" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (20 samples, 0.02%)</title><rect x="809.4" y="387.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="812.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (21 samples, 0.02%)</title><rect x="809.7" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (21 samples, 0.02%)</title><rect x="809.7" y="403.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="812.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (60 samples, 0.06%)</title><rect x="810.0" y="435.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (46 samples, 0.05%)</title><rect x="810.1" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (31 samples, 0.03%)</title><rect x="810.3" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (31 samples, 0.03%)</title><rect x="810.3" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (24 samples, 0.03%)</title><rect x="810.3" y="371.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="813.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (494 samples, 0.53%)</title><rect x="810.7" y="515.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (494 samples, 0.53%)</title><rect x="810.7" y="499.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (494 samples, 0.53%)</title><rect x="810.7" y="483.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (484 samples, 0.52%)</title><rect x="810.7" y="467.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (484 samples, 0.52%)</title><rect x="810.7" y="451.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (484 samples, 0.52%)</title><rect x="810.7" y="435.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (484 samples, 0.52%)</title><rect x="810.7" y="419.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$223/1023865256.accept (484 samples, 0.52%)</title><rect x="810.7" y="403.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (484 samples, 0.52%)</title><rect x="810.7" y="387.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (484 samples, 0.52%)</title><rect x="810.7" y="371.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (484 samples, 0.52%)</title><rect x="810.7" y="355.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (50 samples, 0.05%)</title><rect x="810.7" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$226/363328708.apply (50 samples, 0.05%)</title><rect x="810.7" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (50 samples, 0.05%)</title><rect x="810.7" y="307.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (50 samples, 0.05%)</title><rect x="810.7" y="291.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="813.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (434 samples, 0.46%)</title><rect x="811.4" y="339.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (434 samples, 0.46%)</title><rect x="811.4" y="323.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (434 samples, 0.46%)</title><rect x="811.4" y="307.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (434 samples, 0.46%)</title><rect x="811.4" y="291.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.4" y="302.0"></text>
</g>
<g>
<title>java.lang.Thread (280 samples, 0.30%)</title><rect x="811.4" y="275.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="814.4" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (154 samples, 0.16%)</title><rect x="814.9" y="275.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="817.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (49 samples, 0.05%)</title><rect x="815.2" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.05%)</title><rect x="815.2" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.03%)</title><rect x="815.2" y="227.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="818.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.03%)</title><rect x="815.5" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.5" y="238.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.03%)</title><rect x="815.5" y="211.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="818.5" y="222.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (82 samples, 0.09%)</title><rect x="815.8" y="259.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.8" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (82 samples, 0.09%)</title><rect x="815.8" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.8" y="254.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (71 samples, 0.08%)</title><rect x="815.9" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.9" y="238.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (33 samples, 0.04%)</title><rect x="815.9" y="211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.9" y="222.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (33 samples, 0.04%)</title><rect x="815.9" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.9" y="206.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (33 samples, 0.04%)</title><rect x="815.9" y="179.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="818.9" y="190.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (38 samples, 0.04%)</title><rect x="816.4" y="211.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.4" y="222.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (25 samples, 0.03%)</title><rect x="816.4" y="195.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="819.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3,743 samples, 4.01%)</title><rect x="817.0" y="723.0" width="47.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.0" y="734.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (99 samples, 0.11%)</title><rect x="817.0" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.11%)</title><rect x="817.0" y="691.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$188/927563624.get$Lambda (52 samples, 0.06%)</title><rect x="817.0" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.0" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$188 (52 samples, 0.06%)</title><rect x="817.0" y="659.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="820.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$193/719479391.get$Lambda (47 samples, 0.05%)</title><rect x="817.6" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$193 (47 samples, 0.05%)</title><rect x="817.6" y="659.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="820.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/63001505.linkToTargetMethod (72 samples, 0.08%)</title><rect x="818.2" y="707.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.08%)</title><rect x="818.2" y="691.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1748993312.get$Lambda (72 samples, 0.08%)</title><rect x="818.2" y="675.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$189 (72 samples, 0.08%)</title><rect x="818.2" y="659.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="821.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (733 samples, 0.78%)</title><rect x="819.1" y="707.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$190/467524561.accept (602 samples, 0.64%)</title><rect x="819.1" y="691.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (602 samples, 0.64%)</title><rect x="819.1" y="675.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (602 samples, 0.64%)</title><rect x="819.1" y="659.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (602 samples, 0.64%)</title><rect x="819.1" y="643.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (602 samples, 0.64%)</title><rect x="819.1" y="627.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (602 samples, 0.64%)</title><rect x="819.1" y="611.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (602 samples, 0.64%)</title><rect x="819.1" y="595.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (602 samples, 0.64%)</title><rect x="819.1" y="579.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (602 samples, 0.64%)</title><rect x="819.1" y="563.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (602 samples, 0.64%)</title><rect x="819.1" y="547.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (602 samples, 0.64%)</title><rect x="819.1" y="531.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (602 samples, 0.64%)</title><rect x="819.1" y="515.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (84 samples, 0.09%)</title><rect x="819.1" y="499.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (84 samples, 0.09%)</title><rect x="819.1" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (84 samples, 0.09%)</title><rect x="819.1" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (84 samples, 0.09%)</title><rect x="819.1" y="451.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (84 samples, 0.09%)</title><rect x="819.1" y="435.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (84 samples, 0.09%)</title><rect x="819.1" y="419.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (84 samples, 0.09%)</title><rect x="819.1" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (84 samples, 0.09%)</title><rect x="819.1" y="387.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="822.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (63 samples, 0.07%)</title><rect x="820.2" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.07%)</title><rect x="820.2" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.07%)</title><rect x="820.2" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/1402872104.get$Lambda (63 samples, 0.07%)</title><rect x="820.2" y="451.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="823.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200 (63 samples, 0.07%)</title><rect x="820.2" y="435.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="823.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (455 samples, 0.49%)</title><rect x="821.0" y="499.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (249 samples, 0.27%)</title><rect x="821.0" y="483.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="824.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (174 samples, 0.19%)</title><rect x="821.0" y="467.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.0" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (174 samples, 0.19%)</title><rect x="821.0" y="451.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="824.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (75 samples, 0.08%)</title><rect x="823.2" y="467.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.2" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (75 samples, 0.08%)</title><rect x="823.2" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.2" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (75 samples, 0.08%)</title><rect x="823.2" y="435.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="826.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (206 samples, 0.22%)</title><rect x="824.2" y="483.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$153/863571012.get (206 samples, 0.22%)</title><rect x="824.2" y="467.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (206 samples, 0.22%)</title><rect x="824.2" y="451.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (206 samples, 0.22%)</title><rect x="824.2" y="435.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (206 samples, 0.22%)</title><rect x="824.2" y="419.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.2" y="430.0"></text>
</g>
<g>
<title>byte[] (205 samples, 0.22%)</title><rect x="824.2" y="403.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="827.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$195/1595160449.accept (131 samples, 0.14%)</title><rect x="826.8" y="691.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (131 samples, 0.14%)</title><rect x="826.8" y="675.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1748993312.run (131 samples, 0.14%)</title><rect x="826.8" y="659.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (131 samples, 0.14%)</title><rect x="826.8" y="643.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (131 samples, 0.14%)</title><rect x="826.8" y="627.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (131 samples, 0.14%)</title><rect x="826.8" y="611.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (131 samples, 0.14%)</title><rect x="826.8" y="595.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.8" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (131 samples, 0.14%)</title><rect x="826.8" y="579.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="829.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (433 samples, 0.46%)</title><rect x="828.4" y="707.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.4" y="718.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (433 samples, 0.46%)</title><rect x="828.4" y="691.0" width="5.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="831.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (178 samples, 0.19%)</title><rect x="833.9" y="707.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (86 samples, 0.09%)</title><rect x="833.9" y="691.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (86 samples, 0.09%)</title><rect x="833.9" y="675.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (86 samples, 0.09%)</title><rect x="833.9" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (86 samples, 0.09%)</title><rect x="833.9" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (86 samples, 0.09%)</title><rect x="833.9" y="627.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (86 samples, 0.09%)</title><rect x="833.9" y="611.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.9" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (86 samples, 0.09%)</title><rect x="833.9" y="595.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="836.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (92 samples, 0.10%)</title><rect x="835.0" y="691.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.0" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (92 samples, 0.10%)</title><rect x="835.0" y="675.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="838.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (285 samples, 0.31%)</title><rect x="836.1" y="707.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/715486789.run (186 samples, 0.20%)</title><rect x="836.1" y="691.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (186 samples, 0.20%)</title><rect x="836.1" y="675.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (186 samples, 0.20%)</title><rect x="836.1" y="659.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (186 samples, 0.20%)</title><rect x="836.1" y="643.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (186 samples, 0.20%)</title><rect x="836.1" y="627.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (186 samples, 0.20%)</title><rect x="836.1" y="611.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (186 samples, 0.20%)</title><rect x="836.1" y="595.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (186 samples, 0.20%)</title><rect x="836.1" y="579.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (186 samples, 0.20%)</title><rect x="836.1" y="563.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (186 samples, 0.20%)</title><rect x="836.1" y="547.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (186 samples, 0.20%)</title><rect x="836.1" y="531.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="839.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (186 samples, 0.20%)</title><rect x="836.1" y="515.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (186 samples, 0.20%)</title><rect x="836.1" y="499.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/502800944.linkToTargetMethod (128 samples, 0.14%)</title><rect x="836.1" y="483.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1076770748.invoke (128 samples, 0.14%)</title><rect x="836.1" y="467.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (128 samples, 0.14%)</title><rect x="836.1" y="451.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (128 samples, 0.14%)</title><rect x="836.1" y="435.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (128 samples, 0.14%)</title><rect x="836.1" y="419.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="839.1" y="430.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.14%)</title><rect x="836.1" y="403.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="839.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (58 samples, 0.06%)</title><rect x="837.7" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.06%)</title><rect x="837.7" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.06%)</title><rect x="837.7" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/1402872104.get$Lambda (58 samples, 0.06%)</title><rect x="837.7" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200 (58 samples, 0.06%)</title><rect x="837.7" y="419.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="840.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$160/810264248.run (99 samples, 0.11%)</title><rect x="838.5" y="691.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (99 samples, 0.11%)</title><rect x="838.5" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.10%)</title><rect x="838.5" y="659.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.10%)</title><rect x="838.5" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.get$Lambda (98 samples, 0.10%)</title><rect x="838.5" y="627.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$198 (98 samples, 0.10%)</title><rect x="838.5" y="611.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="841.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (993 samples, 1.06%)</title><rect x="839.7" y="707.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.7" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (259 samples, 0.28%)</title><rect x="839.7" y="691.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.7" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (259 samples, 0.28%)</title><rect x="839.7" y="675.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.7" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (259 samples, 0.28%)</title><rect x="839.7" y="659.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.7" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.create (259 samples, 0.28%)</title><rect x="839.7" y="643.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.7" y="654.0"></text>
</g>
<g>
<title>java.time.Instant (259 samples, 0.28%)</title><rect x="839.7" y="627.0" width="3.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="842.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (734 samples, 0.79%)</title><rect x="843.0" y="691.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (161 samples, 0.17%)</title><rect x="843.0" y="675.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (161 samples, 0.17%)</title><rect x="843.0" y="659.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$228/451835415.get$Lambda (161 samples, 0.17%)</title><rect x="843.0" y="643.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$228 (161 samples, 0.17%)</title><rect x="843.0" y="627.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="846.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (573 samples, 0.61%)</title><rect x="845.0" y="675.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.0" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (265 samples, 0.28%)</title><rect x="845.0" y="659.0" width="3.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="848.0" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (308 samples, 0.33%)</title><rect x="848.4" y="659.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.4" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (308 samples, 0.33%)</title><rect x="848.4" y="643.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.4" y="654.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (308 samples, 0.33%)</title><rect x="848.4" y="627.0" width="3.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="851.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (648 samples, 0.69%)</title><rect x="852.3" y="707.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.07%)</title><rect x="852.3" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.07%)</title><rect x="852.3" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$187/1350857380.get$Lambda (65 samples, 0.07%)</title><rect x="852.3" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$187 (65 samples, 0.07%)</title><rect x="852.3" y="643.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="855.3" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (347 samples, 0.37%)</title><rect x="853.1" y="691.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (144 samples, 0.15%)</title><rect x="853.1" y="675.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.1" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (144 samples, 0.15%)</title><rect x="853.1" y="659.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="856.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (203 samples, 0.22%)</title><rect x="854.9" y="675.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="857.9" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (203 samples, 0.22%)</title><rect x="854.9" y="659.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="857.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (236 samples, 0.25%)</title><rect x="857.5" y="691.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.5" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (236 samples, 0.25%)</title><rect x="857.5" y="675.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="860.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (153 samples, 0.16%)</title><rect x="860.5" y="707.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (153 samples, 0.16%)</title><rect x="860.5" y="691.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (153 samples, 0.16%)</title><rect x="860.5" y="675.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (153 samples, 0.16%)</title><rect x="860.5" y="659.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (46 samples, 0.05%)</title><rect x="860.5" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (46 samples, 0.05%)</title><rect x="860.5" y="627.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="863.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (107 samples, 0.11%)</title><rect x="861.0" y="643.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (107 samples, 0.11%)</title><rect x="861.0" y="627.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (107 samples, 0.11%)</title><rect x="861.0" y="611.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (107 samples, 0.11%)</title><rect x="861.0" y="595.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (107 samples, 0.11%)</title><rect x="861.0" y="579.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.0" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (107 samples, 0.11%)</title><rect x="861.0" y="563.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="864.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (22 samples, 0.02%)</title><rect x="862.4" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="865.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (22 samples, 0.02%)</title><rect x="862.4" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (22 samples, 0.02%)</title><rect x="862.4" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (22 samples, 0.02%)</title><rect x="862.4" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="865.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (21 samples, 0.02%)</title><rect x="862.4" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.4" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (21 samples, 0.02%)</title><rect x="862.4" y="627.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="865.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (127 samples, 0.14%)</title><rect x="862.7" y="707.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (127 samples, 0.14%)</title><rect x="862.7" y="691.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (127 samples, 0.14%)</title><rect x="862.7" y="675.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.7" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (127 samples, 0.14%)</title><rect x="862.7" y="659.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="865.7" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (25,781 samples, 27.60%)</title><rect x="864.3" y="723.0" width="325.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.3" y="734.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (406 samples, 0.43%)</title><rect x="864.3" y="707.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="867.3" y="718.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (406 samples, 0.43%)</title><rect x="864.3" y="691.0" width="5.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="867.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (25,375 samples, 27.17%)</title><rect x="869.4" y="707.0" width="320.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.4" y="718.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (25,375 samples, 27.17%)</title><rect x="869.4" y="691.0" width="320.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.4" y="702.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (25,375 samples, 27.17%)</title><rect x="869.4" y="675.0" width="320.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.4" y="686.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18,743 samples, 20.07%)</title><rect x="869.4" y="659.0" width="236.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.4" y="670.0">one/nio/http/HttpSession.handle..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18,743 samples, 20.07%)</title><rect x="869.4" y="643.0" width="236.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.4" y="654.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (18,308 samples, 19.60%)</title><rect x="869.4" y="627.0" width="231.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.4" y="638.0">RequestHandler1_entity.handleRe..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (329 samples, 0.35%)</title><rect x="869.4" y="611.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (329 samples, 0.35%)</title><rect x="869.4" y="595.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (329 samples, 0.35%)</title><rect x="869.4" y="579.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (329 samples, 0.35%)</title><rect x="869.4" y="563.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (160 samples, 0.17%)</title><rect x="869.4" y="547.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="872.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (169 samples, 0.18%)</title><rect x="871.4" y="547.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.4" y="558.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.18%)</title><rect x="871.4" y="531.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="874.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (17,979 samples, 19.25%)</title><rect x="873.6" y="611.0" width="227.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.6" y="622.0">ru/mail/polis/service/codearou..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.getNodes (463 samples, 0.50%)</title><rect x="873.6" y="595.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.6" y="606.0"></text>
</g>
<g>
<title>java/util/Set.of (463 samples, 0.50%)</title><rect x="873.6" y="579.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.6" y="590.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (156 samples, 0.17%)</title><rect x="873.6" y="563.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="876.6" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (307 samples, 0.33%)</title><rect x="875.5" y="563.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.5" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (307 samples, 0.33%)</title><rect x="875.5" y="547.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="878.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.invokeHandlerByMethod (17,516 samples, 18.75%)</title><rect x="879.4" y="595.0" width="221.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.4" y="606.0">ru/mail/polis/service/codearo..</text>
</g>
<g>
<title>java.lang.String[] (242 samples, 0.26%)</title><rect x="879.4" y="579.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="882.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (171 samples, 0.18%)</title><rect x="882.5" y="579.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (171 samples, 0.18%)</title><rect x="882.5" y="563.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (171 samples, 0.18%)</title><rect x="882.5" y="547.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (171 samples, 0.18%)</title><rect x="882.5" y="531.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.5" y="542.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.18%)</title><rect x="882.5" y="515.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="885.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (450 samples, 0.48%)</title><rect x="884.6" y="579.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (450 samples, 0.48%)</title><rect x="884.6" y="563.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.6" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (450 samples, 0.48%)</title><rect x="884.6" y="547.0" width="5.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="887.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (464 samples, 0.50%)</title><rect x="890.3" y="579.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="893.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (464 samples, 0.50%)</title><rect x="890.3" y="563.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (464 samples, 0.50%)</title><rect x="890.3" y="547.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="893.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (192 samples, 0.21%)</title><rect x="890.3" y="531.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="893.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (272 samples, 0.29%)</title><rect x="892.7" y="531.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.7" y="542.0"></text>
</g>
<g>
<title>byte[] (272 samples, 0.29%)</title><rect x="892.7" y="515.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="895.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (21 samples, 0.02%)</title><rect x="896.2" y="579.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.02%)</title><rect x="896.2" y="563.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="899.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (16,168 samples, 17.31%)</title><rect x="896.4" y="579.0" width="204.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.4" y="590.0">ru/mail/polis/service/codea..</text>
</g>
<g>
<title>java.util.ArrayList (188 samples, 0.20%)</title><rect x="896.4" y="563.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="899.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (311 samples, 0.33%)</title><rect x="898.8" y="563.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (311 samples, 0.33%)</title><rect x="898.8" y="547.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$120/984099083.get$Lambda (177 samples, 0.19%)</title><rect x="898.8" y="531.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.8" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$120 (177 samples, 0.19%)</title><rect x="898.8" y="515.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="901.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$136/744653440.get$Lambda (134 samples, 0.14%)</title><rect x="901.1" y="531.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$136 (134 samples, 0.14%)</title><rect x="901.1" y="515.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="904.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2076888264.linkToTargetMethod (353 samples, 0.38%)</title><rect x="902.7" y="563.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/501441918.invokeStatic (353 samples, 0.38%)</title><rect x="902.7" y="547.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$137/1144310053.get$Lambda (353 samples, 0.38%)</title><rect x="902.7" y="531.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.7" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$137 (353 samples, 0.38%)</title><rect x="902.7" y="515.0" width="4.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="905.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (52 samples, 0.06%)</title><rect x="907.2" y="563.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (52 samples, 0.06%)</title><rect x="907.2" y="547.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="910.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (229 samples, 0.25%)</title><rect x="907.9" y="563.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.9" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (229 samples, 0.25%)</title><rect x="907.9" y="547.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="910.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (8,565 samples, 9.17%)</title><rect x="910.8" y="563.0" width="108.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.8" y="574.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (8,565 samples, 9.17%)</title><rect x="910.8" y="547.0" width="108.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.8" y="558.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (415 samples, 0.44%)</title><rect x="910.8" y="531.0" width="5.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="913.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (416 samples, 0.45%)</title><rect x="916.0" y="531.0" width="5.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="919.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (7,734 samples, 8.28%)</title><rect x="921.3" y="531.0" width="97.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="924.3" y="542.0">java/util/c..</text>
</g>
<g>
<title>java.lang.Thread (991 samples, 1.06%)</title><rect x="921.3" y="515.0" width="12.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="924.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Thread (2,515 samples, 2.69%)</title><rect x="933.8" y="515.0" width="31.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.8" y="526.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (4,228 samples, 4.53%)</title><rect x="965.6" y="515.0" width="53.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.6" y="526.0">java/..</text>
</g>
<g>
<title>java.lang.StringBuilder (306 samples, 0.33%)</title><rect x="965.6" y="499.0" width="3.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="968.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (312 samples, 0.33%)</title><rect x="969.4" y="499.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.4" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (312 samples, 0.33%)</title><rect x="969.4" y="483.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.4" y="494.0"></text>
</g>
<g>
<title>byte[] (312 samples, 0.33%)</title><rect x="969.4" y="467.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="972.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (907 samples, 0.97%)</title><rect x="973.4" y="499.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="976.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (907 samples, 0.97%)</title><rect x="973.4" y="483.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String (308 samples, 0.33%)</title><rect x="973.4" y="467.0" width="3.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="976.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (599 samples, 0.64%)</title><rect x="977.3" y="467.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.3" y="478.0"></text>
</g>
<g>
<title>byte[] (599 samples, 0.64%)</title><rect x="977.3" y="451.0" width="7.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="980.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2,703 samples, 2.89%)</title><rect x="984.8" y="499.0" width="34.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.8" y="510.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2,703 samples, 2.89%)</title><rect x="984.8" y="483.0" width="34.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.8" y="494.0">ja..</text>
</g>
<g>
<title>java.lang.Object (300 samples, 0.32%)</title><rect x="984.8" y="467.0" width="3.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="987.8" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (2,403 samples, 2.57%)</title><rect x="988.6" y="467.0" width="30.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.6" y="478.0">ja..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (1,176 samples, 1.26%)</title><rect x="988.6" y="451.0" width="14.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.6" y="462.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (1,176 samples, 1.26%)</title><rect x="988.6" y="435.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.6" y="446.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (1,176 samples, 1.26%)</title><rect x="988.6" y="419.0" width="14.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="991.6" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (1,227 samples, 1.31%)</title><rect x="1003.5" y="451.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.5" y="462.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (739 samples, 0.79%)</title><rect x="1003.5" y="435.0" width="9.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1006.5" y="446.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (488 samples, 0.52%)</title><rect x="1012.8" y="435.0" width="6.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1015.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (884 samples, 0.95%)</title><rect x="1019.0" y="563.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (884 samples, 0.95%)</title><rect x="1019.0" y="547.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (568 samples, 0.61%)</title><rect x="1019.0" y="531.0" width="7.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1022.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (316 samples, 0.34%)</title><rect x="1026.1" y="531.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1029.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (316 samples, 0.34%)</title><rect x="1026.1" y="515.0" width="4.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1029.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3,594 samples, 3.85%)</title><rect x="1030.1" y="563.0" width="45.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.1" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,594 samples, 3.85%)</title><rect x="1030.1" y="547.0" width="45.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.1" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,594 samples, 3.85%)</title><rect x="1030.1" y="531.0" width="45.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.1" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,594 samples, 3.85%)</title><rect x="1030.1" y="515.0" width="45.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.1" y="526.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.03%)</title><rect x="1030.1" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.03%)</title><rect x="1030.1" y="483.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$134/981260519.get$Lambda (30 samples, 0.03%)</title><rect x="1030.1" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$134 (30 samples, 0.03%)</title><rect x="1030.1" y="451.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1033.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (133 samples, 0.14%)</title><rect x="1030.5" y="499.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (133 samples, 0.14%)</title><rect x="1030.5" y="483.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (58 samples, 0.06%)</title><rect x="1030.5" y="467.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1033.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.08%)</title><rect x="1031.3" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.08%)</title><rect x="1031.3" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.08%)</title><rect x="1031.3" y="435.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1034.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (118 samples, 0.13%)</title><rect x="1032.2" y="499.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1035.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (118 samples, 0.13%)</title><rect x="1032.2" y="483.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (58 samples, 0.06%)</title><rect x="1032.2" y="467.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1035.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.06%)</title><rect x="1032.9" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1035.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.06%)</title><rect x="1032.9" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1035.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.06%)</title><rect x="1032.9" y="435.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1035.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (85 samples, 0.09%)</title><rect x="1033.7" y="499.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1036.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (169 samples, 0.18%)</title><rect x="1034.8" y="499.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1037.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,697 samples, 1.82%)</title><rect x="1036.9" y="499.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.9" y="510.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (185 samples, 0.20%)</title><rect x="1036.9" y="483.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.9" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (146 samples, 0.16%)</title><rect x="1036.9" y="467.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.9" y="478.0"></text>
</g>
<g>
<title>java/util/List.spliterator (52 samples, 0.06%)</title><rect x="1036.9" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.9" y="462.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (52 samples, 0.06%)</title><rect x="1036.9" y="435.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1039.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (94 samples, 0.10%)</title><rect x="1037.6" y="451.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.6" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (94 samples, 0.10%)</title><rect x="1037.6" y="435.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1040.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (39 samples, 0.04%)</title><rect x="1038.7" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1041.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (39 samples, 0.04%)</title><rect x="1038.7" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (39 samples, 0.04%)</title><rect x="1038.7" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/22069592.get (39 samples, 0.04%)</title><rect x="1038.7" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.7" y="430.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (39 samples, 0.04%)</title><rect x="1038.7" y="403.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1041.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (770 samples, 0.82%)</title><rect x="1039.2" y="483.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (770 samples, 0.82%)</title><rect x="1039.2" y="467.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.2" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (21 samples, 0.02%)</title><rect x="1039.2" y="451.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1042.2" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.04%)</title><rect x="1039.5" y="451.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1042.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (98 samples, 0.10%)</title><rect x="1040.0" y="451.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1043.0" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (28 samples, 0.03%)</title><rect x="1041.2" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1044.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.05%)</title><rect x="1041.6" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.05%)</title><rect x="1041.6" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.get$Lambda (47 samples, 0.05%)</title><rect x="1041.6" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.6" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (47 samples, 0.05%)</title><rect x="1041.6" y="403.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1044.6" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (393 samples, 0.42%)</title><rect x="1042.2" y="451.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (393 samples, 0.42%)</title><rect x="1042.2" y="435.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (393 samples, 0.42%)</title><rect x="1042.2" y="419.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.2" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (393 samples, 0.42%)</title><rect x="1042.2" y="403.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (153 samples, 0.16%)</title><rect x="1042.2" y="387.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (95 samples, 0.10%)</title><rect x="1042.2" y="371.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (95 samples, 0.10%)</title><rect x="1042.2" y="355.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (95 samples, 0.10%)</title><rect x="1042.2" y="339.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (95 samples, 0.10%)</title><rect x="1042.2" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1045.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (95 samples, 0.10%)</title><rect x="1042.2" y="307.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (95 samples, 0.10%)</title><rect x="1042.2" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (95 samples, 0.10%)</title><rect x="1042.2" y="275.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (95 samples, 0.10%)</title><rect x="1042.2" y="259.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1045.2" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (58 samples, 0.06%)</title><rect x="1043.4" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (58 samples, 0.06%)</title><rect x="1043.4" y="355.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1046.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.06%)</title><rect x="1044.1" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.06%)</title><rect x="1044.1" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.get$Lambda (57 samples, 0.06%)</title><rect x="1044.1" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.1" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (57 samples, 0.06%)</title><rect x="1044.1" y="339.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1047.1" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (89 samples, 0.10%)</title><rect x="1044.8" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.8" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (89 samples, 0.10%)</title><rect x="1044.8" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (48 samples, 0.05%)</title><rect x="1044.8" y="355.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.05%)</title><rect x="1044.8" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.05%)</title><rect x="1044.8" y="323.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1047.8" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (41 samples, 0.04%)</title><rect x="1045.4" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.4" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (41 samples, 0.04%)</title><rect x="1045.4" y="339.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1048.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (94 samples, 0.10%)</title><rect x="1045.9" y="387.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (94 samples, 0.10%)</title><rect x="1045.9" y="371.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1048.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (55 samples, 0.06%)</title><rect x="1047.1" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.1" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (55 samples, 0.06%)</title><rect x="1047.1" y="435.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1050.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (91 samples, 0.10%)</title><rect x="1047.8" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (91 samples, 0.10%)</title><rect x="1047.8" y="435.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1050.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (20 samples, 0.02%)</title><rect x="1049.0" y="483.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1052.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (493 samples, 0.53%)</title><rect x="1049.2" y="483.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.2" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (493 samples, 0.53%)</title><rect x="1049.2" y="467.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.2" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (444 samples, 0.48%)</title><rect x="1049.2" y="451.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.2" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (444 samples, 0.48%)</title><rect x="1049.2" y="435.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.2" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (444 samples, 0.48%)</title><rect x="1049.2" y="419.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.2" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (110 samples, 0.12%)</title><rect x="1049.2" y="403.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1052.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (162 samples, 0.17%)</title><rect x="1050.6" y="403.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.6" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (162 samples, 0.17%)</title><rect x="1050.6" y="387.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.6" y="398.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.17%)</title><rect x="1050.6" y="371.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1053.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (172 samples, 0.18%)</title><rect x="1052.7" y="403.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (172 samples, 0.18%)</title><rect x="1052.7" y="387.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (172 samples, 0.18%)</title><rect x="1052.7" y="371.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.7" y="382.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.18%)</title><rect x="1052.7" y="355.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1055.7" y="366.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (49 samples, 0.05%)</title><rect x="1054.8" y="451.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1057.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (74 samples, 0.08%)</title><rect x="1055.4" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (74 samples, 0.08%)</title><rect x="1055.4" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1058.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (155 samples, 0.17%)</title><rect x="1056.4" y="483.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.4" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (55 samples, 0.06%)</title><rect x="1056.4" y="467.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1059.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (43 samples, 0.05%)</title><rect x="1057.1" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.05%)</title><rect x="1057.1" y="451.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1060.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (57 samples, 0.06%)</title><rect x="1057.6" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (57 samples, 0.06%)</title><rect x="1057.6" y="451.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1060.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (935 samples, 1.00%)</title><rect x="1058.3" y="499.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (24 samples, 0.03%)</title><rect x="1058.3" y="483.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1061.3" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.map (82 samples, 0.09%)</title><rect x="1058.6" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/810424680.apply (82 samples, 0.09%)</title><rect x="1058.6" y="467.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (44 samples, 0.05%)</title><rect x="1058.6" y="451.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1061.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (38 samples, 0.04%)</title><rect x="1059.2" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (38 samples, 0.04%)</title><rect x="1059.2" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1062.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (125 samples, 0.13%)</title><rect x="1059.7" y="483.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1062.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (31 samples, 0.03%)</title><rect x="1061.3" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (31 samples, 0.03%)</title><rect x="1061.3" y="467.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1064.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (27 samples, 0.03%)</title><rect x="1061.6" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.6" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (27 samples, 0.03%)</title><rect x="1061.6" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.6" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (27 samples, 0.03%)</title><rect x="1061.6" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.6" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (27 samples, 0.03%)</title><rect x="1061.6" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1064.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (646 samples, 0.69%)</title><rect x="1062.0" y="483.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (646 samples, 0.69%)</title><rect x="1062.0" y="467.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Class[] (52 samples, 0.06%)</title><rect x="1062.0" y="451.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1065.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.05%)</title><rect x="1062.6" y="451.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1065.6" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (54 samples, 0.06%)</title><rect x="1063.3" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1066.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (303 samples, 0.32%)</title><rect x="1063.9" y="451.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (303 samples, 0.32%)</title><rect x="1063.9" y="435.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (303 samples, 0.32%)</title><rect x="1063.9" y="419.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.9" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (303 samples, 0.32%)</title><rect x="1063.9" y="403.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.9" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (303 samples, 0.32%)</title><rect x="1063.9" y="387.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1066.9" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (101 samples, 0.11%)</title><rect x="1067.8" y="451.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (101 samples, 0.11%)</title><rect x="1067.8" y="435.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (25 samples, 0.03%)</title><rect x="1067.8" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (25 samples, 0.03%)</title><rect x="1067.8" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1070.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (76 samples, 0.08%)</title><rect x="1068.1" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1071.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (76 samples, 0.08%)</title><rect x="1068.1" y="403.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1071.1" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (87 samples, 0.09%)</title><rect x="1069.1" y="451.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (87 samples, 0.09%)</title><rect x="1069.1" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1072.1" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (87 samples, 0.09%)</title><rect x="1069.1" y="419.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1072.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (427 samples, 0.46%)</title><rect x="1070.2" y="499.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (49 samples, 0.05%)</title><rect x="1070.2" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1073.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (49 samples, 0.05%)</title><rect x="1070.2" y="467.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1073.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.05%)</title><rect x="1070.8" y="483.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1073.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (329 samples, 0.35%)</title><rect x="1071.4" y="483.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.06%)</title><rect x="1071.4" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.06%)</title><rect x="1071.4" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.get$Lambda (37 samples, 0.04%)</title><rect x="1071.4" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (37 samples, 0.04%)</title><rect x="1071.4" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1074.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (275 samples, 0.29%)</title><rect x="1072.1" y="467.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (275 samples, 0.29%)</title><rect x="1072.1" y="451.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (152 samples, 0.16%)</title><rect x="1072.1" y="435.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1075.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (123 samples, 0.13%)</title><rect x="1074.0" y="435.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1077.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (123 samples, 0.13%)</title><rect x="1074.0" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1077.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (123 samples, 0.13%)</title><rect x="1074.0" y="403.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1077.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (833 samples, 0.89%)</title><rect x="1075.5" y="563.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1078.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (66 samples, 0.07%)</title><rect x="1075.5" y="547.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1078.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (767 samples, 0.82%)</title><rect x="1076.4" y="547.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (708 samples, 0.76%)</title><rect x="1076.4" y="531.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (708 samples, 0.76%)</title><rect x="1076.4" y="515.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.4" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (29 samples, 0.03%)</title><rect x="1076.4" y="499.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1079.4" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (45 samples, 0.05%)</title><rect x="1076.7" y="499.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1079.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (92 samples, 0.10%)</title><rect x="1077.3" y="499.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1080.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (30 samples, 0.03%)</title><rect x="1078.5" y="499.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1081.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.07%)</title><rect x="1078.9" y="499.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.07%)</title><rect x="1078.9" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1081.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.get$Lambda (65 samples, 0.07%)</title><rect x="1078.9" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.9" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (65 samples, 0.07%)</title><rect x="1078.9" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1081.9" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (64 samples, 0.07%)</title><rect x="1079.7" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.7" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (64 samples, 0.07%)</title><rect x="1079.7" y="483.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1082.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (300 samples, 0.32%)</title><rect x="1080.5" y="499.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (300 samples, 0.32%)</title><rect x="1080.5" y="483.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1083.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (300 samples, 0.32%)</title><rect x="1080.5" y="467.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.05%)</title><rect x="1080.5" y="451.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1083.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.05%)</title><rect x="1080.5" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.get$Lambda (47 samples, 0.05%)</title><rect x="1080.5" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.5" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$123 (47 samples, 0.05%)</title><rect x="1080.5" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1083.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (120 samples, 0.13%)</title><rect x="1081.1" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (120 samples, 0.13%)</title><rect x="1081.1" y="435.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1084.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (120 samples, 0.13%)</title><rect x="1081.1" y="419.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (120 samples, 0.13%)</title><rect x="1081.1" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1084.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (120 samples, 0.13%)</title><rect x="1081.1" y="387.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (120 samples, 0.13%)</title><rect x="1081.1" y="371.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (120 samples, 0.13%)</title><rect x="1081.1" y="355.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (120 samples, 0.13%)</title><rect x="1081.1" y="339.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (120 samples, 0.13%)</title><rect x="1081.1" y="323.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1084.1" y="334.0"></text>
</g>
<g>
<title>java/util/List.copyOf (69 samples, 0.07%)</title><rect x="1082.6" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.6" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (69 samples, 0.07%)</title><rect x="1082.6" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (33 samples, 0.04%)</title><rect x="1082.6" y="419.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.04%)</title><rect x="1082.6" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.04%)</title><rect x="1082.6" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1085.6" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (36 samples, 0.04%)</title><rect x="1083.0" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.0" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (36 samples, 0.04%)</title><rect x="1083.0" y="403.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1086.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (64 samples, 0.07%)</title><rect x="1083.5" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (64 samples, 0.07%)</title><rect x="1083.5" y="435.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1086.5" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (83 samples, 0.09%)</title><rect x="1084.3" y="499.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (83 samples, 0.09%)</title><rect x="1084.3" y="483.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1087.3" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (59 samples, 0.06%)</title><rect x="1085.3" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1088.3" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (59 samples, 0.06%)</title><rect x="1085.3" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1088.3" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (59 samples, 0.06%)</title><rect x="1085.3" y="499.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1088.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.setRequestPattern (1,159 samples, 1.24%)</title><rect x="1086.1" y="563.0" width="14.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (166 samples, 0.18%)</title><rect x="1086.1" y="547.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (166 samples, 0.18%)</title><rect x="1086.1" y="531.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (166 samples, 0.18%)</title><rect x="1086.1" y="515.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (50 samples, 0.05%)</title><rect x="1086.1" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.05%)</title><rect x="1086.1" y="483.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1089.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (116 samples, 0.12%)</title><rect x="1086.7" y="499.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (116 samples, 0.12%)</title><rect x="1086.7" y="483.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.7" y="494.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.12%)</title><rect x="1086.7" y="467.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1089.7" y="478.0"></text>
</g>
<g>
<title>java/net/URI.create (631 samples, 0.68%)</title><rect x="1088.2" y="547.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1091.2" y="558.0"></text>
</g>
<g>
<title>java.net.URI (123 samples, 0.13%)</title><rect x="1088.2" y="531.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1091.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (508 samples, 0.54%)</title><rect x="1089.7" y="531.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.7" y="542.0"></text>
</g>
<g>
<title>java.net.URI$Parser (51 samples, 0.05%)</title><rect x="1089.7" y="515.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1092.7" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (457 samples, 0.49%)</title><rect x="1090.4" y="515.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (77 samples, 0.08%)</title><rect x="1090.4" y="499.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (77 samples, 0.08%)</title><rect x="1090.4" y="483.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.05%)</title><rect x="1090.4" y="467.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1093.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.03%)</title><rect x="1090.9" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.9" y="478.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="1090.9" y="451.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1093.9" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (380 samples, 0.41%)</title><rect x="1091.3" y="499.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (189 samples, 0.20%)</title><rect x="1091.3" y="483.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (189 samples, 0.20%)</title><rect x="1091.3" y="467.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.08%)</title><rect x="1091.3" y="451.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1094.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (112 samples, 0.12%)</title><rect x="1092.3" y="451.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.3" y="462.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.12%)</title><rect x="1092.3" y="435.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1095.3" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (191 samples, 0.20%)</title><rect x="1093.7" y="483.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (93 samples, 0.10%)</title><rect x="1093.7" y="467.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.10%)</title><rect x="1093.7" y="451.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.05%)</title><rect x="1093.7" y="435.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1096.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (49 samples, 0.05%)</title><rect x="1094.3" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.3" y="446.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.05%)</title><rect x="1094.3" y="419.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1097.3" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (98 samples, 0.10%)</title><rect x="1094.9" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.9" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (98 samples, 0.10%)</title><rect x="1094.9" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (98 samples, 0.10%)</title><rect x="1094.9" y="435.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1097.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (98 samples, 0.10%)</title><rect x="1094.9" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.05%)</title><rect x="1094.9" y="403.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1097.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.06%)</title><rect x="1095.4" y="403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.4" y="414.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.06%)</title><rect x="1095.4" y="387.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1098.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (174 samples, 0.19%)</title><rect x="1096.1" y="547.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (66 samples, 0.07%)</title><rect x="1096.1" y="531.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1099.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (108 samples, 0.12%)</title><rect x="1097.0" y="531.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (32 samples, 0.03%)</title><rect x="1097.0" y="515.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1100.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (76 samples, 0.08%)</title><rect x="1097.4" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1100.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (76 samples, 0.08%)</title><rect x="1097.4" y="499.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1100.4" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (44 samples, 0.05%)</title><rect x="1098.3" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.3" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.create (44 samples, 0.05%)</title><rect x="1098.3" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.3" y="542.0"></text>
</g>
<g>
<title>java.time.Duration (44 samples, 0.05%)</title><rect x="1098.3" y="515.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1101.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (144 samples, 0.15%)</title><rect x="1098.9" y="547.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1101.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (144 samples, 0.15%)</title><rect x="1098.9" y="531.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (144 samples, 0.15%)</title><rect x="1098.9" y="515.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.9" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (36 samples, 0.04%)</title><rect x="1098.9" y="499.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1101.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (51 samples, 0.05%)</title><rect x="1099.3" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.05%)</title><rect x="1099.3" y="483.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1102.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (57 samples, 0.06%)</title><rect x="1100.0" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1103.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (57 samples, 0.06%)</title><rect x="1100.0" y="483.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1103.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (435 samples, 0.47%)</title><rect x="1100.7" y="627.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (435 samples, 0.47%)</title><rect x="1100.7" y="611.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (435 samples, 0.47%)</title><rect x="1100.7" y="595.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (223 samples, 0.24%)</title><rect x="1100.7" y="579.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1103.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (212 samples, 0.23%)</title><rect x="1103.5" y="579.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.5" y="590.0"></text>
</g>
<g>
<title>byte[] (212 samples, 0.23%)</title><rect x="1103.5" y="563.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1106.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,679 samples, 1.80%)</title><rect x="1106.2" y="659.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.2" y="670.0">o..</text>
</g>
<g>
<title>one.nio.http.Request (210 samples, 0.22%)</title><rect x="1106.2" y="643.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1109.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (492 samples, 0.53%)</title><rect x="1108.9" y="643.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1111.9" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (457 samples, 0.49%)</title><rect x="1108.9" y="627.0" width="5.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1111.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.04%)</title><rect x="1114.6" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.6" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (977 samples, 1.05%)</title><rect x="1115.1" y="643.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.1" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (977 samples, 1.05%)</title><rect x="1115.1" y="627.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.1" y="638.0"></text>
</g>
<g>
<title>char[] (628 samples, 0.67%)</title><rect x="1115.1" y="611.0" width="7.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1118.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String (141 samples, 0.15%)</title><rect x="1123.1" y="611.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1126.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (204 samples, 0.22%)</title><rect x="1124.8" y="611.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (204 samples, 0.22%)</title><rect x="1124.8" y="595.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (204 samples, 0.22%)</title><rect x="1124.8" y="579.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1127.8" y="590.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.22%)</title><rect x="1124.8" y="563.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1127.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (142 samples, 0.15%)</title><rect x="1127.4" y="659.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.4" y="670.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.15%)</title><rect x="1127.4" y="643.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1130.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (507 samples, 0.54%)</title><rect x="1129.2" y="659.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (507 samples, 0.54%)</title><rect x="1129.2" y="643.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (507 samples, 0.54%)</title><rect x="1129.2" y="627.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String (298 samples, 0.32%)</title><rect x="1129.2" y="611.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1132.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (209 samples, 0.22%)</title><rect x="1133.0" y="611.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.0" y="622.0"></text>
</g>
<g>
<title>byte[] (209 samples, 0.22%)</title><rect x="1133.0" y="595.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1136.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,304 samples, 4.61%)</title><rect x="1135.6" y="659.0" width="54.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.6" y="670.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,304 samples, 4.61%)</title><rect x="1135.6" y="643.0" width="54.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.6" y="654.0">one/n..</text>
</g>
<g>
<title>char[] (1,950 samples, 2.09%)</title><rect x="1135.6" y="627.0" width="24.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1138.6" y="638.0">c..</text>
</g>
<g>
<title>char[] (259 samples, 0.28%)</title><rect x="1160.3" y="627.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.3" y="638.0"></text>
</g>
<g>
<title>java.lang.String (704 samples, 0.75%)</title><rect x="1163.5" y="627.0" width="8.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1166.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,391 samples, 1.49%)</title><rect x="1172.4" y="627.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,391 samples, 1.49%)</title><rect x="1172.4" y="611.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1175.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,391 samples, 1.49%)</title><rect x="1172.4" y="595.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1175.4" y="606.0"></text>
</g>
<g>
<title>byte[] (1,391 samples, 1.49%)</title><rect x="1172.4" y="579.0" width="17.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1175.4" y="590.0"></text>
</g>
</g>
</svg>
