<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">GET/PUT combo session (#5)</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (4,892 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.22%)</title><rect x="10.0" y="899.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.22%)</title><rect x="10.0" y="883.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (11 samples, 0.22%)</title><rect x="10.0" y="867.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (10 samples, 0.20%)</title><rect x="10.0" y="851.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (6 samples, 0.12%)</title><rect x="10.0" y="835.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="11.4" y="835.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="14.4" y="846.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.04%)</title><rect x="12.7" y="899.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="15.7" y="910.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.16%)</title><rect x="13.1" y="899.0" width="2.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="16.1" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.16%)</title><rect x="13.1" y="883.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.1" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (8 samples, 0.16%)</title><rect x="13.1" y="867.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.1" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.06%)</title><rect x="13.1" y="851.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.1" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="13.1" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.1" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.10%)</title><rect x="13.9" y="851.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.9" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.04%)</title><rect x="14.6" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.6" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="14.6" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="17.6" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.08%)</title><rect x="15.1" y="899.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="18.1" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.14%)</title><rect x="16.0" y="899.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="19.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="16.8" y="883.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="19.8" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="16.8" y="867.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.8" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="16.8" y="851.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.8" y="862.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="16.8" y="835.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.8" y="846.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.08%)</title><rect x="16.8" y="819.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="19.8" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="17.0" y="803.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="20.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,887 samples, 79.46%)</title><rect x="18.0" y="899.0" width="937.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.0" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,887 samples, 79.46%)</title><rect x="18.0" y="883.0" width="937.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.0" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,887 samples, 79.46%)</title><rect x="18.0" y="867.0" width="937.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.0" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (9 samples, 0.18%)</title><rect x="19.4" y="851.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.18%)</title><rect x="19.4" y="835.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.18%)</title><rect x="19.4" y="819.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.18%)</title><rect x="19.4" y="803.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (269 samples, 5.50%)</title><rect x="21.6" y="851.0" width="64.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.6" y="862.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (268 samples, 5.48%)</title><rect x="21.8" y="835.0" width="64.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.8" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (4 samples, 0.08%)</title><rect x="22.3" y="819.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (233 samples, 4.76%)</title><rect x="23.3" y="819.0" width="56.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.3" y="830.0">java/u..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (8 samples, 0.16%)</title><rect x="24.2" y="803.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.08%)</title><rect x="26.2" y="803.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.04%)</title><rect x="27.1" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="27.1" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (3 samples, 0.06%)</title><rect x="27.6" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (212 samples, 4.33%)</title><rect x="28.3" y="803.0" width="51.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="31.3" y="814.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (212 samples, 4.33%)</title><rect x="28.3" y="787.0" width="51.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.3" y="798.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="29.3" y="771.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (80 samples, 1.64%)</title><rect x="30.0" y="771.0" width="19.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="33.0" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="31.5" y="755.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="34.5" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (16 samples, 0.33%)</title><rect x="32.0" y="755.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="35.0" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="34.1" y="739.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="37.1" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="34.6" y="739.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="37.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.06%)</title><rect x="36.1" y="755.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="39.1" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (38 samples, 0.78%)</title><rect x="36.8" y="755.0" width="9.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="39.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.70%)</title><rect x="37.7" y="739.0" width="8.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="40.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.67%)</title><rect x="38.0" y="723.0" width="7.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="41.0" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.14%)</title><rect x="44.0" y="707.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.0" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.14%)</title><rect x="44.0" y="691.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.0" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="45.0" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.0" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="46.2" y="755.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="49.2" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.04%)</title><rect x="46.7" y="755.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="49.7" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="47.4" y="755.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="50.4" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.10%)</title><rect x="48.1" y="755.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="51.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 2.51%)</title><rect x="49.3" y="771.0" width="29.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="52.3" y="782.0">[u..</text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.04%)</title><rect x="49.6" y="755.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="52.6" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (9 samples, 0.18%)</title><rect x="50.0" y="755.0" width="2.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="53.0" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.06%)</title><rect x="52.2" y="755.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="55.2" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (107 samples, 2.19%)</title><rect x="53.2" y="755.0" width="25.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="56.2" y="766.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 1.23%)</title><rect x="64.5" y="739.0" width="14.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 1.23%)</title><rect x="64.5" y="723.0" width="14.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="67.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 0.82%)</title><rect x="69.1" y="707.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="72.1" y="718.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.65%)</title><rect x="71.0" y="691.0" width="7.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="74.0" y="702.0"></text>
</g>
<g>
<title>futex_wait (28 samples, 0.57%)</title><rect x="71.5" y="675.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="74.5" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.22%)</title><rect x="72.5" y="659.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.5" y="670.0"></text>
</g>
<g>
<title>plist_add (4 samples, 0.08%)</title><rect x="73.2" y="643.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.2" y="654.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="74.2" y="643.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="77.2" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.08%)</title><rect x="74.2" y="627.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="77.2" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="74.6" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="77.6" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.14%)</title><rect x="75.1" y="659.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.1" y="670.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="75.6" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.6" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.06%)</title><rect x="76.1" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.1" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.04%)</title><rect x="76.8" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.8" y="670.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.06%)</title><rect x="77.3" y="659.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="80.3" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="78.3" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.3" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="79.0" y="771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="82.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (8 samples, 0.16%)</title><rect x="79.5" y="819.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.14%)</title><rect x="79.7" y="803.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.08%)</title><rect x="79.7" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.06%)</title><rect x="80.7" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.06%)</title><rect x="80.7" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.06%)</title><rect x="80.7" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.06%)</title><rect x="80.7" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.06%)</title><rect x="80.7" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.43%)</title><rect x="81.4" y="819.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.43%)</title><rect x="81.4" y="803.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.39%)</title><rect x="81.9" y="787.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.39%)</title><rect x="81.9" y="771.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.39%)</title><rect x="81.9" y="755.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.9" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="81.9" y="739.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="84.9" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="82.1" y="723.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="85.1" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.33%)</title><rect x="82.6" y="739.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="85.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.29%)</title><rect x="83.1" y="723.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.29%)</title><rect x="83.1" y="707.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.27%)</title><rect x="83.3" y="691.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="86.3" y="702.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.27%)</title><rect x="83.3" y="675.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.27%)</title><rect x="83.3" y="659.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="86.3" y="670.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.27%)</title><rect x="83.3" y="643.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.3" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.27%)</title><rect x="83.3" y="627.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="86.3" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.27%)</title><rect x="83.3" y="611.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="86.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run (3,603 samples, 73.65%)</title><rect x="86.5" y="851.0" width="869.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.5" y="862.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6 (3,603 samples, 73.65%)</title><rect x="86.5" y="835.0" width="869.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.5" y="846.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,003 samples, 20.50%)</title><rect x="87.7" y="819.0" width="241.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.7" y="830.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.14%)</title><rect x="91.0" y="803.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="94.0" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.14%)</title><rect x="91.0" y="787.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.0" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.14%)</title><rect x="91.0" y="771.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="94.0" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (6 samples, 0.12%)</title><rect x="91.0" y="755.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="94.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (15 samples, 0.31%)</title><rect x="92.7" y="803.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.29%)</title><rect x="93.0" y="787.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.29%)</title><rect x="93.0" y="771.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="95.9" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (952 samples, 19.46%)</title><rect x="96.4" y="803.0" width="229.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.4" y="814.0">one/nio/http/HttpSession.write..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (33 samples, 0.67%)</title><rect x="96.4" y="787.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.12%)</title><rect x="102.9" y="771.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.12%)</title><rect x="102.9" y="755.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.12%)</title><rect x="102.9" y="739.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.12%)</title><rect x="102.9" y="723.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.12%)</title><rect x="102.9" y="707.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (919 samples, 18.79%)</title><rect x="104.3" y="787.0" width="221.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.3" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (919 samples, 18.79%)</title><rect x="104.3" y="771.0" width="221.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.3" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>gettimeofday (7 samples, 0.14%)</title><rect x="105.8" y="755.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (904 samples, 18.48%)</title><rect x="107.4" y="755.0" width="218.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.4" y="766.0">one/nio/net/Session$ArrayQueu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (897 samples, 18.34%)</title><rect x="109.1" y="739.0" width="216.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.1" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (27 samples, 0.55%)</title><rect x="111.5" y="723.0" width="6.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="114.5" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="112.0" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="115.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="112.8" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="115.8" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.14%)</title><rect x="113.2" y="707.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="116.2" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.25%)</title><rect x="114.9" y="707.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="117.9" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.06%)</title><rect x="115.4" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="118.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="116.4" y="691.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="119.4" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.08%)</title><rect x="116.9" y="691.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="119.9" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="117.3" y="675.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.3" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.14%)</title><rect x="118.1" y="723.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="121.1" y="734.0"></text>
</g>
<g>
<title>__libc_send (851 samples, 17.40%)</title><rect x="119.8" y="723.0" width="205.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="122.8" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (829 samples, 16.95%)</title><rect x="125.1" y="707.0" width="199.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.1" y="718.0">entry_SYSCALL_64_after_hwf..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.06%)</title><rect x="125.1" y="691.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="128.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (826 samples, 16.88%)</title><rect x="125.8" y="691.0" width="199.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.8" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (786 samples, 16.07%)</title><rect x="135.2" y="675.0" width="189.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.2" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (782 samples, 15.99%)</title><rect x="135.4" y="659.0" width="188.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.4" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="137.8" y="643.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="140.8" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (755 samples, 15.43%)</title><rect x="138.6" y="643.0" width="182.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="141.6" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (744 samples, 15.21%)</title><rect x="139.5" y="627.0" width="179.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="142.5" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (741 samples, 15.15%)</title><rect x="140.3" y="611.0" width="178.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.3" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="140.5" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.5" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.08%)</title><rect x="141.2" y="595.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="144.2" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.06%)</title><rect x="141.2" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.2" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="142.2" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="145.2" y="606.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.04%)</title><rect x="142.7" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="145.7" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="143.1" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="146.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (724 samples, 14.80%)</title><rect x="143.9" y="595.0" width="174.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="146.9" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.10%)</title><rect x="146.8" y="579.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="149.8" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.08%)</title><rect x="147.0" y="563.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="150.0" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.14%)</title><rect x="148.2" y="579.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="151.2" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.12%)</title><rect x="148.5" y="563.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.5" y="574.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.04%)</title><rect x="149.9" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="152.9" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (30 samples, 0.61%)</title><rect x="150.6" y="579.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="153.6" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (23 samples, 0.47%)</title><rect x="151.6" y="563.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="154.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (13 samples, 0.27%)</title><rect x="151.8" y="547.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.18%)</title><rect x="152.1" y="531.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.1" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="152.8" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="155.8" y="526.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="153.3" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="156.3" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.04%)</title><rect x="153.8" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="156.8" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.16%)</title><rect x="155.0" y="547.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="158.0" y="558.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.06%)</title><rect x="157.1" y="563.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="160.1" y="574.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.06%)</title><rect x="157.9" y="579.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="160.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (647 samples, 13.23%)</title><rect x="158.8" y="579.0" width="156.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.8" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (646 samples, 13.21%)</title><rect x="159.1" y="563.0" width="155.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="162.1" y="574.0">__tcp_push_pending_f..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.04%)</title><rect x="159.3" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="162.3" y="558.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="159.8" y="547.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="162.8" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.04%)</title><rect x="160.5" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.5" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (637 samples, 13.02%)</title><rect x="161.2" y="547.0" width="153.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="164.2" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (598 samples, 12.22%)</title><rect x="164.1" y="531.0" width="144.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="167.1" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (3 samples, 0.06%)</title><rect x="168.2" y="515.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="171.2" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (571 samples, 11.67%)</title><rect x="169.0" y="515.0" width="137.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.0" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (569 samples, 11.63%)</title><rect x="169.0" y="499.0" width="137.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="172.0" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (562 samples, 11.49%)</title><rect x="170.4" y="483.0" width="135.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="173.4" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (84 samples, 1.72%)</title><rect x="171.4" y="467.0" width="20.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.4" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.06%)</title><rect x="171.9" y="451.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="174.9" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (77 samples, 1.57%)</title><rect x="172.6" y="451.0" width="18.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="175.6" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (13 samples, 0.27%)</title><rect x="172.8" y="435.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="175.8" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (13 samples, 0.27%)</title><rect x="172.8" y="419.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="175.8" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (50 samples, 1.02%)</title><rect x="176.0" y="435.0" width="12.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.0" y="446.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.04%)</title><rect x="176.2" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="179.2" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.04%)</title><rect x="176.7" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="179.7" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (44 samples, 0.90%)</title><rect x="177.4" y="419.0" width="10.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.4" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (11 samples, 0.22%)</title><rect x="177.9" y="403.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="180.9" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.08%)</title><rect x="181.3" y="403.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="184.3" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (23 samples, 0.47%)</title><rect x="182.5" y="403.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="185.5" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (3 samples, 0.06%)</title><rect x="184.4" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.4" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (9 samples, 0.18%)</title><rect x="185.8" y="387.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.8" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.04%)</title><rect x="187.5" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="190.5" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.06%)</title><rect x="188.0" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="191.0" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (10 samples, 0.20%)</title><rect x="188.7" y="435.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="191.7" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (5 samples, 0.10%)</title><rect x="189.0" y="419.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.08%)</title><rect x="190.2" y="419.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="193.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (3 samples, 0.06%)</title><rect x="190.4" y="403.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="191.1" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="194.1" y="462.0"></text>
</g>
<g>
<title>ip_output (471 samples, 9.63%)</title><rect x="191.6" y="467.0" width="113.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="194.6" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (459 samples, 9.38%)</title><rect x="192.8" y="451.0" width="110.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="195.8" y="462.0">ip_finish_out..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.14%)</title><rect x="194.0" y="435.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="197.0" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="195.7" y="435.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="198.7" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (442 samples, 9.04%)</title><rect x="196.5" y="435.0" width="106.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="199.5" y="446.0">ip_finish_out..</text>
</g>
<g>
<title>__local_bh_enable_ip (387 samples, 7.91%)</title><rect x="199.6" y="419.0" width="93.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="202.6" y="430.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.21 (386 samples, 7.89%)</title><rect x="199.8" y="403.0" width="93.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="202.8" y="414.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (379 samples, 7.75%)</title><rect x="201.5" y="387.0" width="91.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.5" y="398.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (378 samples, 7.73%)</title><rect x="201.5" y="371.0" width="91.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.5" y="382.0">__softirqen..</text>
</g>
<g>
<title>net_rx_action (371 samples, 7.58%)</title><rect x="202.7" y="355.0" width="89.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="205.7" y="366.0">net_rx_act..</text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.06%)</title><rect x="204.2" y="339.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.2" y="350.0"></text>
</g>
<g>
<title>process_backlog (362 samples, 7.40%)</title><rect x="204.9" y="339.0" width="87.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="207.9" y="350.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (356 samples, 7.28%)</title><rect x="206.1" y="323.0" width="85.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="209.1" y="334.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (353 samples, 7.22%)</title><rect x="206.3" y="307.0" width="85.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.3" y="318.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 0.20%)</title><rect x="206.8" y="291.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="209.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv (340 samples, 6.95%)</title><rect x="209.2" y="291.0" width="82.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.2" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (2 samples, 0.04%)</title><rect x="210.4" y="275.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="213.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (320 samples, 6.54%)</title><rect x="210.9" y="275.0" width="77.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="213.9" y="286.0">ip_rcv_fi..</text>
</g>
<g>
<title>ip_local_deliver (316 samples, 6.46%)</title><rect x="211.2" y="259.0" width="76.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.2" y="270.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (302 samples, 6.17%)</title><rect x="212.1" y="243.0" width="72.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="215.1" y="254.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (299 samples, 6.11%)</title><rect x="212.1" y="227.0" width="72.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="215.1" y="238.0">ip_proto..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.04%)</title><rect x="213.3" y="211.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (289 samples, 5.91%)</title><rect x="214.5" y="211.0" width="69.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="217.5" y="222.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (11 samples, 0.22%)</title><rect x="217.2" y="195.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="220.2" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.06%)</title><rect x="219.1" y="179.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="222.1" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.06%)</title><rect x="220.1" y="195.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="223.1" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.08%)</title><rect x="220.8" y="195.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="223.8" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.18%)</title><rect x="221.8" y="195.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="224.8" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.08%)</title><rect x="222.3" y="179.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="225.3" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.06%)</title><rect x="223.2" y="179.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="226.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (248 samples, 5.07%)</title><rect x="224.2" y="195.0" width="59.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="227.2" y="206.0">tcp_v4..</text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.06%)</title><rect x="225.2" y="179.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="228.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (241 samples, 4.93%)</title><rect x="225.9" y="179.0" width="58.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="228.9" y="190.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (11 samples, 0.22%)</title><rect x="227.6" y="163.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="230.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.16%)</title><rect x="228.3" y="147.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="231.3" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.12%)</title><rect x="228.8" y="131.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="231.8" y="142.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.12%)</title><rect x="228.8" y="115.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.8" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.10%)</title><rect x="228.8" y="99.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.8" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.08%)</title><rect x="230.5" y="163.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="233.5" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.04%)</title><rect x="230.9" y="147.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="233.9" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="230.9" y="131.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="233.9" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="230.9" y="115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.9" y="126.0"></text>
</g>
<g>
<title>tcp_ack (57 samples, 1.17%)</title><rect x="231.4" y="163.0" width="13.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="234.4" y="174.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.04%)</title><rect x="233.6" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (39 samples, 0.80%)</title><rect x="234.6" y="147.0" width="9.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.6" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.43%)</title><rect x="236.7" y="131.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="239.7" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.18%)</title><rect x="236.7" y="115.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="239.7" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.12%)</title><rect x="237.5" y="99.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.5" y="110.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.22%)</title><rect x="238.9" y="115.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="241.9" y="126.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.20%)</title><rect x="239.1" y="99.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="242.1" y="110.0"></text>
</g>
<g>
<title>skb_free_head (7 samples, 0.14%)</title><rect x="239.9" y="83.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.9" y="94.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.14%)</title><rect x="239.9" y="67.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="242.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.06%)</title><rect x="240.8" y="51.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.8" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.04%)</title><rect x="241.1" y="35.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="244.1" y="46.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.04%)</title><rect x="242.5" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="245.5" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (4 samples, 0.08%)</title><rect x="243.0" y="131.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="246.0" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.04%)</title><rect x="244.2" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.2" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.04%)</title><rect x="244.7" y="147.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="247.7" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.10%)</title><rect x="245.2" y="163.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="248.2" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (142 samples, 2.90%)</title><rect x="246.6" y="163.0" width="34.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="249.6" y="174.0">tc..</text>
</g>
<g>
<title>sock_def_readable (128 samples, 2.62%)</title><rect x="248.1" y="147.0" width="30.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="251.1" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (127 samples, 2.60%)</title><rect x="248.3" y="131.0" width="30.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="251.3" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (127 samples, 2.60%)</title><rect x="248.3" y="115.0" width="30.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="251.3" y="126.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (127 samples, 2.60%)</title><rect x="248.3" y="99.0" width="30.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="251.3" y="110.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.10%)</title><rect x="278.9" y="147.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.9" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.06%)</title><rect x="280.2" y="147.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="283.2" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.08%)</title><rect x="280.9" y="163.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.9" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.06%)</title><rect x="281.8" y="163.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="284.8" y="174.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="282.1" y="147.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="285.1" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="283.0" y="163.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="286.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.04%)</title><rect x="284.5" y="227.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="287.5" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.04%)</title><rect x="285.0" y="243.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="288.0" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.12%)</title><rect x="285.7" y="243.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="288.7" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.10%)</title><rect x="285.7" y="227.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="288.7" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.10%)</title><rect x="285.7" y="211.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="288.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.04%)</title><rect x="287.6" y="259.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.6" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.04%)</title><rect x="288.1" y="275.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="291.1" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.04%)</title><rect x="288.6" y="275.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.6" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="289.1" y="275.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="292.1" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.12%)</title><rect x="289.6" y="275.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="292.6" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="290.5" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="293.5" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="290.5" y="243.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="293.5" y="254.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="290.5" y="227.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="293.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.04%)</title><rect x="291.5" y="307.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="294.5" y="318.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.04%)</title><rect x="292.2" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="295.2" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (41 samples, 0.84%)</title><rect x="292.9" y="419.0" width="9.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="295.9" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (39 samples, 0.80%)</title><rect x="292.9" y="403.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.9" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (20 samples, 0.41%)</title><rect x="294.6" y="387.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="297.6" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (15 samples, 0.31%)</title><rect x="295.4" y="371.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="298.4" y="382.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.14%)</title><rect x="296.6" y="355.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="299.6" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.12%)</title><rect x="296.8" y="339.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="299.8" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (5 samples, 0.10%)</title><rect x="297.0" y="323.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="300.0" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.18%)</title><rect x="299.9" y="387.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="302.9" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.08%)</title><rect x="300.7" y="371.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.7" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="303.1" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.1" y="446.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.04%)</title><rect x="303.6" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.6" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.10%)</title><rect x="304.0" y="451.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="307.0" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="304.8" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="307.8" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="305.5" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="308.5" y="478.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.10%)</title><rect x="306.7" y="515.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.7" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="306.7" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="309.7" y="510.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.06%)</title><rect x="307.2" y="499.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="310.2" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.06%)</title><rect x="308.4" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="311.4" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.04%)</title><rect x="309.1" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="312.1" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="309.6" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="312.6" y="542.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.06%)</title><rect x="310.3" y="531.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="313.3" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.20%)</title><rect x="311.0" y="531.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="314.0" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (5 samples, 0.10%)</title><rect x="311.5" y="515.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="314.5" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="312.7" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="315.7" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="312.7" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="315.7" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="313.0" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="316.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="313.0" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="316.0" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.04%)</title><rect x="314.2" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="317.2" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (15 samples, 0.31%)</title><rect x="314.9" y="579.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="317.9" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.06%)</title><rect x="315.6" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="318.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.18%)</title><rect x="316.3" y="563.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="319.3" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="317.8" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.8" y="558.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.04%)</title><rect x="318.5" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="321.5" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.14%)</title><rect x="319.0" y="627.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.0" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.14%)</title><rect x="319.0" y="611.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="322.0" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.14%)</title><rect x="319.0" y="595.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="322.0" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="320.2" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="323.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.29%)</title><rect x="320.7" y="643.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.7" y="654.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.27%)</title><rect x="320.7" y="627.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="323.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.27%)</title><rect x="320.7" y="611.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="323.7" y="622.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.25%)</title><rect x="320.9" y="595.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.9" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="324.3" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="327.3" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="325.5" y="755.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="328.5" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="325.5" y="739.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="328.5" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="325.5" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="328.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.22%)</title><rect x="326.0" y="803.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.12%)</title><rect x="327.2" y="787.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.12%)</title><rect x="327.2" y="771.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.04%)</title><rect x="328.6" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.6" y="814.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (2 samples, 0.04%)</title><rect x="329.1" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$74/1361385511.exec (1,210 samples, 24.73%)</title><rect x="329.6" y="819.0" width="291.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.6" y="830.0">ru/mail/polis/service/codearound/RepliS..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$1 (1,210 samples, 24.73%)</title><rect x="329.6" y="803.0" width="291.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.6" y="814.0">ru/mail/polis/service/codearound/RepliS..</text>
</g>
<g>
<title>one/nio/http/Request.getBody (2 samples, 0.04%)</title><rect x="329.6" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (1,208 samples, 24.69%)</title><rect x="330.1" y="787.0" width="291.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.1" y="798.0">ru/mail/polis/service/codearound/Replic..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.37%)</title><rect x="337.1" y="771.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="340.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.35%)</title><rect x="337.3" y="755.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.3" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.33%)</title><rect x="337.6" y="739.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.33%)</title><rect x="337.6" y="723.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.6" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.12%)</title><rect x="339.5" y="707.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="339.7" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="339.7" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="340.2" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="341.4" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.06%)</title><rect x="341.4" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="341.4" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="341.4" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.4" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="341.4" y="707.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="344.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (518 samples, 10.59%)</title><rect x="342.1" y="771.0" width="125.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.1" y="782.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (3 samples, 0.06%)</title><rect x="342.1" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (515 samples, 10.53%)</title><rect x="342.9" y="755.0" width="124.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.9" y="766.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (515 samples, 10.53%)</title><rect x="342.9" y="739.0" width="124.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.9" y="750.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (91 samples, 1.86%)</title><rect x="343.4" y="723.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.4" y="734.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="343.4" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="346.4" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="343.4" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="346.4" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="343.4" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="346.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="343.4" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="346.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (89 samples, 1.82%)</title><rect x="343.8" y="707.0" width="21.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.8" y="718.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.33%)</title><rect x="344.8" y="691.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="347.8" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="345.5" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="348.5" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.06%)</title><rect x="346.2" y="675.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="349.2" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.14%)</title><rect x="347.0" y="675.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="350.0" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="347.9" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="350.9" y="670.0"></text>
</g>
<g>
<title>__GI___recv (66 samples, 1.35%)</title><rect x="348.7" y="691.0" width="15.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="351.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 1.25%)</title><rect x="349.9" y="675.0" width="14.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="352.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 1.23%)</title><rect x="350.1" y="659.0" width="14.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (52 samples, 1.06%)</title><rect x="352.0" y="643.0" width="12.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.0" y="654.0"></text>
</g>
<g>
<title>__sys_recvfrom (51 samples, 1.04%)</title><rect x="352.0" y="627.0" width="12.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.0" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (46 samples, 0.94%)</title><rect x="352.8" y="611.0" width="11.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="355.8" y="622.0"></text>
</g>
<g>
<title>inet_recvmsg (46 samples, 0.94%)</title><rect x="352.8" y="595.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="355.8" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (43 samples, 0.88%)</title><rect x="353.5" y="579.0" width="10.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="356.5" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (27 samples, 0.55%)</title><rect x="354.4" y="563.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="357.4" y="574.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="355.2" y="547.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="358.2" y="558.0"></text>
</g>
<g>
<title>add_wait_queue (3 samples, 0.06%)</title><rect x="356.1" y="547.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="359.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="356.1" y="531.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.1" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.14%)</title><rect x="356.9" y="547.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="359.9" y="558.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="356.9" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.9" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.08%)</title><rect x="357.3" y="531.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="360.3" y="542.0"></text>
</g>
<g>
<title>remove_wait_queue (2 samples, 0.04%)</title><rect x="358.5" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="358.5" y="531.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="361.5" y="542.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.04%)</title><rect x="359.0" y="547.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="362.0" y="558.0"></text>
</g>
<g>
<title>wait_woken (6 samples, 0.12%)</title><rect x="359.5" y="547.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="362.5" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.08%)</title><rect x="360.0" y="531.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.0" y="542.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="360.5" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="363.5" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="360.5" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="363.5" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="360.5" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="363.5" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.20%)</title><rect x="361.0" y="563.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.0" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.20%)</title><rect x="361.0" y="547.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.0" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.18%)</title><rect x="361.2" y="531.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="364.2" y="542.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.08%)</title><rect x="361.2" y="515.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.2" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="361.7" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="364.7" y="510.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.08%)</title><rect x="362.4" y="515.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.4" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.08%)</title><rect x="362.4" y="499.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="365.4" y="510.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="363.9" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="366.9" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="363.9" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="366.9" y="606.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="364.6" y="691.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="367.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (36 samples, 0.74%)</title><rect x="365.3" y="723.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.14%)</title><rect x="365.5" y="707.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="365.8" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="365.8" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="366.3" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="369.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="366.5" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="366.7" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="366.7" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.7" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.04%)</title><rect x="366.7" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.7" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.08%)</title><rect x="367.2" y="707.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="370.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (14 samples, 0.29%)</title><rect x="368.2" y="707.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.20%)</title><rect x="369.2" y="691.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.20%)</title><rect x="369.2" y="675.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.12%)</title><rect x="371.6" y="707.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="372.3" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="372.3" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.3" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="372.5" y="659.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="375.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (3 samples, 0.06%)</title><rect x="373.0" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="376.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.06%)</title><rect x="373.0" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.04%)</title><rect x="373.0" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (13 samples, 0.27%)</title><rect x="374.0" y="723.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.18%)</title><rect x="374.5" y="707.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.04%)</title><rect x="375.0" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.08%)</title><rect x="375.7" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="375.9" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="375.9" y="659.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.04%)</title><rect x="376.6" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.04%)</title><rect x="377.1" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (72 samples, 1.47%)</title><rect x="377.6" y="723.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.6" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (4 samples, 0.08%)</title><rect x="378.8" y="707.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="381.8" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (63 samples, 1.29%)</title><rect x="379.8" y="707.0" width="15.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="382.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 1.14%)</title><rect x="381.5" y="691.0" width="13.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="384.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.04%)</title><rect x="381.5" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="384.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 1.10%)</title><rect x="381.9" y="675.0" width="13.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="384.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (32 samples, 0.65%)</title><rect x="387.3" y="659.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="390.3" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (31 samples, 0.63%)</title><rect x="387.3" y="643.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="390.3" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.04%)</title><rect x="387.7" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="390.7" y="638.0"></text>
</g>
<g>
<title>security_socket_setsockopt (7 samples, 0.14%)</title><rect x="388.5" y="627.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="391.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (6 samples, 0.12%)</title><rect x="388.7" y="611.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="391.7" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (6 samples, 0.12%)</title><rect x="388.7" y="595.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="391.7" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.08%)</title><rect x="389.2" y="579.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="392.2" y="590.0"></text>
</g>
<g>
<title>sock_setsockopt (17 samples, 0.35%)</title><rect x="390.1" y="627.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="393.1" y="638.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="392.1" y="611.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="395.1" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (5 samples, 0.10%)</title><rect x="392.6" y="611.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="395.6" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="393.8" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="394.2" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="397.2" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="394.2" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="394.2" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.2" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="394.2" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (298 samples, 6.09%)</title><rect x="395.0" y="723.0" width="71.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.0" y="734.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (18 samples, 0.37%)</title><rect x="396.2" y="707.0" width="4.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="399.2" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.04%)</title><rect x="398.3" y="691.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="401.3" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.12%)</title><rect x="398.8" y="691.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="401.8" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.06%)</title><rect x="399.6" y="675.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="402.6" y="686.0"></text>
</g>
<g>
<title>__libc_send (274 samples, 5.60%)</title><rect x="400.8" y="707.0" width="66.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="403.8" y="718.0">__libc_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (265 samples, 5.42%)</title><rect x="402.9" y="691.0" width="64.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="405.9" y="702.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (265 samples, 5.42%)</title><rect x="402.9" y="675.0" width="64.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="405.9" y="686.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (255 samples, 5.21%)</title><rect x="405.1" y="659.0" width="61.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.1" y="670.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (251 samples, 5.13%)</title><rect x="405.1" y="643.0" width="60.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="408.1" y="654.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (249 samples, 5.09%)</title><rect x="405.3" y="627.0" width="60.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="408.3" y="638.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (246 samples, 5.03%)</title><rect x="405.6" y="611.0" width="59.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.6" y="622.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (240 samples, 4.91%)</title><rect x="406.8" y="595.0" width="57.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="409.8" y="606.0">tcp_se..</text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="407.3" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="410.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (234 samples, 4.78%)</title><rect x="408.2" y="579.0" width="56.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.2" y="590.0">tcp_se..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.04%)</title><rect x="409.4" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.4" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (14 samples, 0.29%)</title><rect x="410.2" y="563.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="413.2" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.27%)</title><rect x="410.4" y="547.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="413.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.04%)</title><rect x="410.4" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="413.4" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (10 samples, 0.20%)</title><rect x="410.9" y="531.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="413.9" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.08%)</title><rect x="412.3" y="515.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="415.3" y="526.0"></text>
</g>
<g>
<title>___slab_alloc (2 samples, 0.04%)</title><rect x="412.8" y="499.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.8" y="510.0"></text>
</g>
<g>
<title>new_slab (2 samples, 0.04%)</title><rect x="412.8" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="415.8" y="494.0"></text>
</g>
<g>
<title>tcp_push (210 samples, 4.29%)</title><rect x="413.8" y="563.0" width="50.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="416.8" y="574.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (209 samples, 4.27%)</title><rect x="414.0" y="547.0" width="50.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="417.0" y="558.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (208 samples, 4.25%)</title><rect x="414.3" y="531.0" width="50.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="417.3" y="542.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (198 samples, 4.05%)</title><rect x="415.0" y="515.0" width="47.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="418.0" y="526.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (189 samples, 3.86%)</title><rect x="416.2" y="499.0" width="45.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="419.2" y="510.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (189 samples, 3.86%)</title><rect x="416.2" y="483.0" width="45.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="419.2" y="494.0">__ip..</text>
</g>
<g>
<title>ip_local_out (188 samples, 3.84%)</title><rect x="416.4" y="467.0" width="45.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="419.4" y="478.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (26 samples, 0.53%)</title><rect x="416.7" y="451.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="419.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.49%)</title><rect x="417.2" y="435.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="420.2" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.06%)</title><rect x="417.4" y="419.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="420.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.06%)</title><rect x="417.4" y="403.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.4" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (17 samples, 0.35%)</title><rect x="418.1" y="419.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="421.1" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (15 samples, 0.31%)</title><rect x="418.6" y="403.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.6" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (6 samples, 0.12%)</title><rect x="419.3" y="387.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="422.3" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (4 samples, 0.08%)</title><rect x="421.3" y="387.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="424.3" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.04%)</title><rect x="421.7" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="424.7" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="422.2" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="425.2" y="430.0"></text>
</g>
<g>
<title>ip_output (158 samples, 3.23%)</title><rect x="423.0" y="451.0" width="38.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.0" y="462.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (154 samples, 3.15%)</title><rect x="423.2" y="435.0" width="37.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="426.2" y="446.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.06%)</title><rect x="423.2" y="419.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (150 samples, 3.07%)</title><rect x="423.9" y="419.0" width="36.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.9" y="430.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (128 samples, 2.62%)</title><rect x="424.6" y="403.0" width="30.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.6" y="414.0">__..</text>
</g>
<g>
<title>do_softirq.part.21 (127 samples, 2.60%)</title><rect x="424.9" y="387.0" width="30.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="427.9" y="398.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (125 samples, 2.56%)</title><rect x="425.4" y="371.0" width="30.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="428.4" y="382.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (125 samples, 2.56%)</title><rect x="425.4" y="355.0" width="30.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="428.4" y="366.0">__..</text>
</g>
<g>
<title>net_rx_action (123 samples, 2.51%)</title><rect x="425.8" y="339.0" width="29.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="428.8" y="350.0">ne..</text>
</g>
<g>
<title>process_backlog (121 samples, 2.47%)</title><rect x="426.3" y="323.0" width="29.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.3" y="334.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (120 samples, 2.45%)</title><rect x="426.6" y="307.0" width="28.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.6" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (120 samples, 2.45%)</title><rect x="426.6" y="291.0" width="28.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="429.6" y="302.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.10%)</title><rect x="426.8" y="275.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (114 samples, 2.33%)</title><rect x="428.0" y="275.0" width="27.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="431.0" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (2 samples, 0.04%)</title><rect x="428.3" y="259.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="431.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (108 samples, 2.21%)</title><rect x="428.7" y="259.0" width="26.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="431.7" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (106 samples, 2.17%)</title><rect x="429.0" y="243.0" width="25.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.0" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (105 samples, 2.15%)</title><rect x="429.0" y="227.0" width="25.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="432.0" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (105 samples, 2.15%)</title><rect x="429.0" y="211.0" width="25.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="432.0" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (104 samples, 2.13%)</title><rect x="429.2" y="195.0" width="25.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="432.2" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="429.9" y="179.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="432.9" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="430.7" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="433.7" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.04%)</title><rect x="431.2" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="434.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (93 samples, 1.90%)</title><rect x="431.6" y="179.0" width="22.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="434.6" y="190.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (90 samples, 1.84%)</title><rect x="432.4" y="163.0" width="21.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="435.4" y="174.0">t..</text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.04%)</title><rect x="433.1" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="436.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.04%)</title><rect x="433.6" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="436.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack (22 samples, 0.45%)</title><rect x="434.0" y="147.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="437.0" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (17 samples, 0.35%)</title><rect x="435.0" y="131.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.16%)</title><rect x="436.2" y="115.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="439.2" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.10%)</title><rect x="436.9" y="99.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="439.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.10%)</title><rect x="436.9" y="83.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="439.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="437.7" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="440.7" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="437.7" y="51.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="440.7" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.04%)</title><rect x="438.6" y="115.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.6" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (57 samples, 1.17%)</title><rect x="439.6" y="147.0" width="13.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (53 samples, 1.08%)</title><rect x="440.1" y="131.0" width="12.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (52 samples, 1.06%)</title><rect x="440.3" y="115.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="443.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (52 samples, 1.06%)</title><rect x="440.3" y="99.0" width="12.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="443.3" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 1.04%)</title><rect x="440.6" y="83.0" width="12.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="443.6" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="453.3" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="456.3" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="454.8" y="259.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.8" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="455.0" y="243.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="458.0" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (19 samples, 0.39%)</title><rect x="455.5" y="403.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="458.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.37%)</title><rect x="455.5" y="387.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.18%)</title><rect x="456.5" y="371.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="459.5" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.16%)</title><rect x="456.7" y="355.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="459.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.04%)</title><rect x="457.0" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="460.0" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="457.4" y="339.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="457.4" y="323.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="460.4" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="457.4" y="307.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="460.4" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.06%)</title><rect x="457.9" y="339.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="460.9" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.10%)</title><rect x="458.7" y="371.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="461.7" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="460.3" y="435.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="461.3" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.3" y="462.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="461.8" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.8" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="461.8" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="464.8" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.06%)</title><rect x="463.7" y="515.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="466.7" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="464.9" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="467.9" y="622.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="465.6" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="468.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.16%)</title><rect x="467.1" y="771.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (2 samples, 0.04%)</title><rect x="469.3" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (2 samples, 0.04%)</title><rect x="469.3" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="469.3" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (628 samples, 12.84%)</title><rect x="470.0" y="771.0" width="151.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.0" y="782.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (625 samples, 12.78%)</title><rect x="470.0" y="755.0" width="150.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.0" y="766.0">org/rocksdb/RocksDB..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="471.0" y="739.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="474.0" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (614 samples, 12.55%)</title><rect x="471.4" y="739.0" width="148.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.4" y="750.0">org/rocksdb/RocksDB..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (416 samples, 8.50%)</title><rect x="472.4" y="723.0" width="100.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="475.4" y="734.0">Java_org_roc..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.06%)</title><rect x="472.9" y="707.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="475.9" y="718.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.04%)</title><rect x="473.6" y="707.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="476.6" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="474.6" y="707.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="477.6" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.06%)</title><rect x="475.3" y="707.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="478.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="476.3" y="707.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="479.3" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (397 samples, 8.12%)</title><rect x="477.0" y="707.0" width="95.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="480.0" y="718.0">rocksdb_put..</text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.06%)</title><rect x="477.5" y="691.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="480.5" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.14%)</title><rect x="478.4" y="691.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="481.4" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="479.2" y="675.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="482.2" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="479.6" y="675.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="482.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (379 samples, 7.75%)</title><rect x="480.4" y="691.0" width="91.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="483.4" y="702.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="480.6" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="483.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (376 samples, 7.69%)</title><rect x="481.1" y="675.0" width="90.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="484.1" y="686.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (368 samples, 7.52%)</title><rect x="481.1" y="659.0" width="88.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="484.1" y="670.0">rocksdb::D..</text>
</g>
<g>
<title>__libc_free (2 samples, 0.04%)</title><rect x="481.3" y="643.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="484.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (327 samples, 6.68%)</title><rect x="482.5" y="643.0" width="78.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="485.5" y="654.0">rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.08%)</title><rect x="482.5" y="627.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="485.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.04%)</title><rect x="484.0" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="487.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (295 samples, 6.03%)</title><rect x="484.7" y="627.0" width="71.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="487.7" y="638.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="490.2" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="493.2" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.16%)</title><rect x="490.7" y="611.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="493.7" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="492.7" y="611.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="495.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.04%)</title><rect x="493.4" y="611.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="496.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.08%)</title><rect x="494.1" y="611.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="497.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (3 samples, 0.06%)</title><rect x="495.1" y="611.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="498.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.04%)</title><rect x="495.3" y="595.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="498.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) [clone .plt] (2 samples, 0.04%)</title><rect x="496.0" y="611.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="499.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (98 samples, 2.00%)</title><rect x="496.5" y="611.0" width="23.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="499.5" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (4 samples, 0.08%)</title><rect x="497.2" y="595.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="500.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (85 samples, 1.74%)</title><rect x="498.2" y="595.0" width="20.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="501.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (80 samples, 1.64%)</title><rect x="498.9" y="579.0" width="19.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="501.9" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (16 samples, 0.33%)</title><rect x="500.1" y="563.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="503.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.04%)</title><rect x="504.2" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="507.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (32 samples, 0.65%)</title><rect x="505.0" y="563.0" width="7.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="508.0" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.08%)</title><rect x="506.2" y="547.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="509.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.04%)</title><rect x="507.4" y="547.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="510.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.04%)</title><rect x="508.1" y="547.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="511.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (16 samples, 0.33%)</title><rect x="508.8" y="547.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="511.8" y="558.0"></text>
</g>
<g>
<title>__GI_write (2 samples, 0.04%)</title><rect x="509.5" y="531.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="512.5" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.10%)</title><rect x="510.0" y="531.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="513.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (5 samples, 0.10%)</title><rect x="511.2" y="531.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="514.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="513.2" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="516.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (19 samples, 0.39%)</title><rect x="513.6" y="563.0" width="4.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="516.6" y="574.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.04%)</title><rect x="514.1" y="547.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="517.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.04%)</title><rect x="514.6" y="547.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="517.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (10 samples, 0.20%)</title><rect x="515.1" y="547.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="518.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="517.5" y="547.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="520.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="518.2" y="579.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="521.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="519.2" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="522.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (7 samples, 0.14%)</title><rect x="520.4" y="611.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="523.4" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.10%)</title><rect x="520.9" y="595.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="523.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (118 samples, 2.41%)</title><rect x="522.8" y="611.0" width="28.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="525.8" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (114 samples, 2.33%)</title><rect x="523.5" y="595.0" width="27.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="526.5" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="523.8" y="579.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="526.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.04%)</title><rect x="524.3" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="527.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (109 samples, 2.23%)</title><rect x="524.7" y="579.0" width="26.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="527.7" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::GetVarint32PtrFallback(char const*, char const*, unsigned int*) (2 samples, 0.04%)</title><rect x="525.7" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="528.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (97 samples, 1.98%)</title><rect x="526.2" y="563.0" width="23.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="529.2" y="574.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (3 samples, 0.06%)</title><rect x="526.2" y="547.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="529.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.06%)</title><rect x="527.4" y="547.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="530.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (89 samples, 1.82%)</title><rect x="528.1" y="547.0" width="21.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="531.1" y="558.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (5 samples, 0.10%)</title><rect x="528.6" y="531.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="531.6" y="542.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (5 samples, 0.10%)</title><rect x="529.8" y="531.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="532.8" y="542.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.06%)</title><rect x="530.3" y="515.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="533.3" y="526.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.06%)</title><rect x="530.3" y="499.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="533.3" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.06%)</title><rect x="530.3" y="483.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="533.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (73 samples, 1.49%)</title><rect x="531.5" y="531.0" width="17.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="534.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (10 samples, 0.20%)</title><rect x="533.2" y="515.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="536.2" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="533.9" y="499.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="536.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (5 samples, 0.10%)</title><rect x="534.4" y="499.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="537.4" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (51 samples, 1.04%)</title><rect x="535.6" y="515.0" width="12.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="538.6" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (45 samples, 0.92%)</title><rect x="536.3" y="499.0" width="10.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="539.3" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (15 samples, 0.31%)</title><rect x="541.4" y="483.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="544.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 0.29%)</title><rect x="541.6" y="467.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="544.6" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.06%)</title><rect x="542.4" y="451.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="545.4" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (6 samples, 0.12%)</title><rect x="543.1" y="451.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="546.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.18%)</title><rect x="545.0" y="483.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="548.0" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect x="546.0" y="467.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="549.0" y="478.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.04%)</title><rect x="546.7" y="467.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="549.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.06%)</title><rect x="547.2" y="499.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="550.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.04%)</title><rect x="547.9" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="550.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.06%)</title><rect x="548.4" y="515.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="551.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.06%)</title><rect x="548.4" y="499.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="551.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (5 samples, 0.10%)</title><rect x="549.8" y="563.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="552.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const [clone .plt] (2 samples, 0.04%)</title><rect x="552.2" y="611.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="555.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="553.0" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="556.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (5 samples, 0.10%)</title><rect x="553.4" y="611.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="556.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.04%)</title><rect x="554.2" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="557.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.04%)</title><rect x="554.7" y="611.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="557.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (4 samples, 0.08%)</title><rect x="555.9" y="627.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="558.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.06%)</title><rect x="556.8" y="627.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="559.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (4 samples, 0.08%)</title><rect x="558.3" y="627.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="561.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.04%)</title><rect x="559.2" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="562.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) [clone .plt] (2 samples, 0.04%)</title><rect x="559.7" y="627.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="562.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (2 samples, 0.04%)</title><rect x="560.2" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="563.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.06%)</title><rect x="561.6" y="643.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="564.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (19 samples, 0.39%)</title><rect x="562.6" y="643.0" width="4.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="565.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.04%)</title><rect x="562.9" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="565.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const [clone .plt] (2 samples, 0.04%)</title><rect x="563.3" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="566.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (4 samples, 0.08%)</title><rect x="563.8" y="627.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="566.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (3 samples, 0.06%)</title><rect x="564.8" y="627.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="567.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="565.5" y="627.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="568.5" y="638.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.04%)</title><rect x="566.0" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="569.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.04%)</title><rect x="567.4" y="643.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="570.4" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="568.4" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="571.4" y="654.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (3 samples, 0.06%)</title><rect x="568.9" y="643.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="571.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.04%)</title><rect x="569.8" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="572.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="570.6" y="659.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="573.6" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.04%)</title><rect x="572.3" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="575.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (163 samples, 3.33%)</title><rect x="572.7" y="723.0" width="39.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="575.7" y="734.0">[un..</text>
</g>
<g>
<title>__GI_write (156 samples, 3.19%)</title><rect x="572.7" y="707.0" width="37.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="575.7" y="718.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (152 samples, 3.11%)</title><rect x="573.7" y="691.0" width="36.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="576.7" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (152 samples, 3.11%)</title><rect x="573.7" y="675.0" width="36.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="576.7" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_write (137 samples, 2.80%)</title><rect x="577.1" y="659.0" width="33.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.1" y="670.0">__..</text>
</g>
<g>
<title>ksys_write (137 samples, 2.80%)</title><rect x="577.1" y="643.0" width="33.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.1" y="654.0">ks..</text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.16%)</title><rect x="577.8" y="627.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="580.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.16%)</title><rect x="577.8" y="611.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.8" y="622.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.12%)</title><rect x="578.3" y="595.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.3" y="606.0"></text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.04%)</title><rect x="579.7" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.7" y="638.0"></text>
</g>
<g>
<title>vfs_write (121 samples, 2.47%)</title><rect x="580.9" y="627.0" width="29.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="583.9" y="638.0">vf..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.04%)</title><rect x="580.9" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.9" y="622.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.04%)</title><rect x="581.4" y="611.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.4" y="622.0"></text>
</g>
<g>
<title>__vfs_write (109 samples, 2.23%)</title><rect x="581.9" y="611.0" width="26.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.9" y="622.0">_..</text>
</g>
<g>
<title>new_sync_write (109 samples, 2.23%)</title><rect x="581.9" y="595.0" width="26.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="584.9" y="606.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (107 samples, 2.19%)</title><rect x="582.4" y="579.0" width="25.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.4" y="590.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (103 samples, 2.11%)</title><rect x="582.9" y="563.0" width="24.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.9" y="574.0">_..</text>
</g>
<g>
<title>file_update_time (13 samples, 0.27%)</title><rect x="583.6" y="547.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.6" y="558.0"></text>
</g>
<g>
<title>generic_update_time (11 samples, 0.22%)</title><rect x="584.1" y="531.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.1" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (11 samples, 0.22%)</title><rect x="584.1" y="515.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.1" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (10 samples, 0.20%)</title><rect x="584.3" y="499.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.3" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="584.3" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.3" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.06%)</title><rect x="584.8" y="483.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.8" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.06%)</title><rect x="584.8" y="467.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="587.8" y="478.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.04%)</title><rect x="584.8" y="451.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="587.8" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="584.8" y="435.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.8" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="584.8" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.8" y="430.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.10%)</title><rect x="585.5" y="483.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="588.5" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.04%)</title><rect x="585.5" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="588.5" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.04%)</title><rect x="585.5" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="588.5" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.04%)</title><rect x="585.5" y="435.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="588.5" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (2 samples, 0.04%)</title><rect x="585.5" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="588.5" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.06%)</title><rect x="586.0" y="467.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="589.0" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="586.0" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="589.0" y="462.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.04%)</title><rect x="586.0" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="589.0" y="446.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.04%)</title><rect x="586.0" y="419.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="589.0" y="430.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.04%)</title><rect x="586.0" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="589.0" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (86 samples, 1.76%)</title><rect x="586.7" y="547.0" width="20.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="589.7" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (40 samples, 0.82%)</title><rect x="587.2" y="531.0" width="9.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="590.2" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (10 samples, 0.20%)</title><rect x="587.7" y="515.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.7" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (9 samples, 0.18%)</title><rect x="587.9" y="499.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="590.9" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.04%)</title><rect x="588.2" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="591.2" y="494.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.10%)</title><rect x="588.9" y="483.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="591.9" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (4 samples, 0.08%)</title><rect x="589.1" y="467.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="592.1" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (6 samples, 0.12%)</title><rect x="590.1" y="515.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.1" y="526.0"></text>
</g>
<g>
<title>create_empty_buffers (3 samples, 0.06%)</title><rect x="590.6" y="499.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="593.6" y="510.0"></text>
</g>
<g>
<title>alloc_page_buffers (3 samples, 0.06%)</title><rect x="590.6" y="483.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="593.6" y="494.0"></text>
</g>
<g>
<title>alloc_buffer_head (2 samples, 0.04%)</title><rect x="590.8" y="467.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="593.8" y="478.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.04%)</title><rect x="591.6" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="594.6" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (19 samples, 0.39%)</title><rect x="592.0" y="515.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="595.0" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (19 samples, 0.39%)</title><rect x="592.0" y="499.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="595.0" y="510.0"></text>
</g>
<g>
<title>__page_cache_alloc (2 samples, 0.04%)</title><rect x="592.0" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="595.0" y="494.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.04%)</title><rect x="592.0" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="595.0" y="478.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.04%)</title><rect x="592.0" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="595.0" y="462.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.04%)</title><rect x="592.0" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="595.0" y="446.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (6 samples, 0.12%)</title><rect x="592.8" y="483.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="595.8" y="494.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (2 samples, 0.04%)</title><rect x="592.8" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="595.8" y="478.0"></text>
</g>
<g>
<title>lru_cache_add (3 samples, 0.06%)</title><rect x="593.2" y="467.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="596.2" y="478.0"></text>
</g>
<g>
<title>__lru_cache_add (3 samples, 0.06%)</title><rect x="593.2" y="451.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="596.2" y="462.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (2 samples, 0.04%)</title><rect x="593.5" y="435.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="596.5" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="593.5" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.5" y="430.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.16%)</title><rect x="594.2" y="483.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="597.2" y="494.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.12%)</title><rect x="594.7" y="467.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="597.7" y="478.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.04%)</title><rect x="595.7" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="598.7" y="462.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="596.1" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="599.1" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (41 samples, 0.84%)</title><rect x="596.9" y="531.0" width="9.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="599.9" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.10%)</title><rect x="596.9" y="515.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="599.9" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.08%)</title><rect x="597.1" y="499.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="600.1" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.06%)</title><rect x="597.3" y="483.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.3" y="494.0"></text>
</g>
<g>
<title>generic_write_end (35 samples, 0.72%)</title><rect x="598.3" y="515.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.3" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (30 samples, 0.61%)</title><rect x="598.6" y="499.0" width="7.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.6" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (29 samples, 0.59%)</title><rect x="598.6" y="483.0" width="6.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.6" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (28 samples, 0.57%)</title><rect x="598.8" y="467.0" width="6.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="601.8" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.08%)</title><rect x="599.0" y="451.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.0" y="462.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.04%)</title><rect x="599.5" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="602.5" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (19 samples, 0.39%)</title><rect x="600.2" y="451.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="603.2" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (13 samples, 0.27%)</title><rect x="600.5" y="435.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="603.5" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (13 samples, 0.27%)</title><rect x="600.5" y="419.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="603.5" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (7 samples, 0.14%)</title><rect x="601.9" y="403.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.9" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (7 samples, 0.14%)</title><rect x="601.9" y="387.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="604.9" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (7 samples, 0.14%)</title><rect x="601.9" y="371.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="604.9" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (7 samples, 0.14%)</title><rect x="601.9" y="355.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="604.9" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.10%)</title><rect x="603.6" y="435.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.6" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.06%)</title><rect x="603.9" y="419.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.9" y="430.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.04%)</title><rect x="603.9" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="606.9" y="414.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.04%)</title><rect x="603.9" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="606.9" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.06%)</title><rect x="604.8" y="451.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="607.8" y="462.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.08%)</title><rect x="605.8" y="499.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="608.8" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (4 samples, 0.08%)</title><rect x="605.8" y="483.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="608.8" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (3 samples, 0.06%)</title><rect x="606.0" y="467.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="609.0" y="478.0"></text>
</g>
<g>
<title>__set_page_dirty (3 samples, 0.06%)</title><rect x="606.0" y="451.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="606.0" y="435.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="609.0" y="446.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.04%)</title><rect x="607.0" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="610.0" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.16%)</title><rect x="608.2" y="611.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.2" y="622.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.06%)</title><rect x="609.4" y="595.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="612.4" y="606.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="610.4" y="707.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="613.4" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="611.6" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="614.6" y="718.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.04%)</title><rect x="612.1" y="723.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="615.1" y="734.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.10%)</title><rect x="612.5" y="723.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="615.5" y="734.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (13 samples, 0.27%)</title><rect x="613.7" y="723.0" width="3.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="616.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.06%)</title><rect x="617.4" y="723.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="620.4" y="734.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.08%)</title><rect x="618.3" y="723.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="621.3" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.10%)</title><rect x="619.5" y="739.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="622.5" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="620.3" y="723.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="623.3" y="734.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="620.3" y="707.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="623.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (3 samples, 0.06%)</title><rect x="620.7" y="755.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.7" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="621.0" y="739.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="624.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.exec (1,384 samples, 28.29%)</title><rect x="621.5" y="819.0" width="333.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.5" y="830.0">ru/mail/polis/service/codearound/RepliService..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$0 (1,382 samples, 28.25%)</title><rect x="622.0" y="803.0" width="333.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.0" y="814.0">ru/mail/polis/service/codearound/RepliService..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (1,382 samples, 28.25%)</title><rect x="622.0" y="787.0" width="333.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.0" y="798.0">ru/mail/polis/service/codearound/ReplicationL..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="622.2" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="622.2" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="622.2" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="622.2" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="622.2" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (582 samples, 11.90%)</title><rect x="622.9" y="771.0" width="140.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.9" y="782.0">one/nio/http/HttpC..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (2 samples, 0.04%)</title><rect x="622.9" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (580 samples, 11.86%)</title><rect x="623.4" y="755.0" width="139.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.4" y="766.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (580 samples, 11.86%)</title><rect x="623.4" y="739.0" width="139.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.4" y="750.0">one/nio/http/Http..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.20%)</title><rect x="623.6" y="723.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.20%)</title><rect x="623.6" y="707.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="623.9" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.10%)</title><rect x="624.4" y="691.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.06%)</title><rect x="624.8" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.06%)</title><rect x="624.8" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.8" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.04%)</title><rect x="625.1" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (91 samples, 1.86%)</title><rect x="626.1" y="723.0" width="21.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.1" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (90 samples, 1.84%)</title><rect x="626.3" y="707.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.3" y="718.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.29%)</title><rect x="626.5" y="691.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="629.5" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.06%)</title><rect x="628.0" y="675.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="631.0" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.10%)</title><rect x="628.7" y="675.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="631.7" y="686.0"></text>
</g>
<g>
<title>__GI___recv (71 samples, 1.45%)</title><rect x="629.9" y="691.0" width="17.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="632.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 1.37%)</title><rect x="630.9" y="675.0" width="16.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="633.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (66 samples, 1.35%)</title><rect x="631.1" y="659.0" width="15.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="634.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (60 samples, 1.23%)</title><rect x="632.6" y="643.0" width="14.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="635.6" y="654.0"></text>
</g>
<g>
<title>__sys_recvfrom (58 samples, 1.19%)</title><rect x="632.6" y="627.0" width="14.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="635.6" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (49 samples, 1.00%)</title><rect x="633.0" y="611.0" width="11.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="636.0" y="622.0"></text>
</g>
<g>
<title>inet_recvmsg (45 samples, 0.92%)</title><rect x="633.3" y="595.0" width="10.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.3" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (41 samples, 0.84%)</title><rect x="634.3" y="579.0" width="9.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="637.3" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.06%)</title><rect x="636.9" y="563.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="639.9" y="574.0"></text>
</g>
<g>
<title>sk_wait_data (21 samples, 0.43%)</title><rect x="637.6" y="563.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="640.6" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.14%)</title><rect x="638.6" y="547.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="641.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.10%)</title><rect x="639.1" y="531.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="642.1" y="542.0"></text>
</g>
<g>
<title>remove_wait_queue (3 samples, 0.06%)</title><rect x="640.3" y="547.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="643.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="640.3" y="531.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="643.3" y="542.0"></text>
</g>
<g>
<title>wait_woken (6 samples, 0.12%)</title><rect x="641.2" y="547.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.2" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (5 samples, 0.10%)</title><rect x="641.5" y="531.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="641.5" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="644.5" y="526.0"></text>
</g>
<g>
<title>del_timer_sync (2 samples, 0.04%)</title><rect x="642.0" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="645.0" y="526.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.04%)</title><rect x="642.0" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="645.0" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="642.0" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="645.0" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.06%)</title><rect x="642.7" y="563.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="645.7" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.06%)</title><rect x="642.7" y="547.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="645.7" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.06%)</title><rect x="642.7" y="531.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="645.7" y="542.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="642.7" y="515.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="645.7" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.04%)</title><rect x="643.7" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="646.7" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="643.7" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="646.7" y="558.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.04%)</title><rect x="644.1" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="647.1" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.14%)</title><rect x="644.9" y="611.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="647.9" y="622.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.12%)</title><rect x="644.9" y="595.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="647.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.12%)</title><rect x="644.9" y="579.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.9" y="590.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.10%)</title><rect x="645.1" y="563.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="648.1" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="647.3" y="691.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="650.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (33 samples, 0.67%)</title><rect x="648.0" y="723.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.08%)</title><rect x="648.7" y="707.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="648.7" y="691.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="648.7" y="675.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.06%)</title><rect x="648.7" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.06%)</title><rect x="648.7" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.7" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.06%)</title><rect x="648.7" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.16%)</title><rect x="649.7" y="707.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.08%)</title><rect x="650.7" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="650.7" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (11 samples, 0.22%)</title><rect x="651.6" y="707.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.20%)</title><rect x="651.9" y="691.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.9" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.20%)</title><rect x="651.9" y="675.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="654.3" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.08%)</title><rect x="655.0" y="707.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="655.5" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="655.5" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (31 samples, 0.63%)</title><rect x="656.0" y="723.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (28 samples, 0.57%)</title><rect x="656.4" y="707.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (23 samples, 0.47%)</title><rect x="656.9" y="691.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (15 samples, 0.31%)</title><rect x="657.6" y="675.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.08%)</title><rect x="661.3" y="675.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.08%)</title><rect x="661.3" y="659.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.3" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="662.5" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="662.5" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="662.7" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.12%)</title><rect x="663.4" y="723.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.10%)</title><rect x="663.7" y="707.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.10%)</title><rect x="663.7" y="691.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.7" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="664.4" y="675.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="667.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (82 samples, 1.68%)</title><rect x="664.9" y="723.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.9" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (3 samples, 0.06%)</title><rect x="666.1" y="707.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="669.1" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (74 samples, 1.51%)</title><rect x="666.8" y="707.0" width="17.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="669.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 1.39%)</title><rect x="668.3" y="691.0" width="16.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="671.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 1.37%)</title><rect x="668.5" y="675.0" width="16.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="671.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (45 samples, 0.92%)</title><rect x="673.8" y="659.0" width="10.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="676.8" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (41 samples, 0.84%)</title><rect x="673.8" y="643.0" width="9.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="676.8" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="674.1" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="677.1" y="638.0"></text>
</g>
<g>
<title>__get_user_4 (7 samples, 0.14%)</title><rect x="674.5" y="627.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="677.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.04%)</title><rect x="676.2" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.2" y="638.0"></text>
</g>
<g>
<title>security_socket_setsockopt (10 samples, 0.20%)</title><rect x="676.7" y="627.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="679.7" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (3 samples, 0.06%)</title><rect x="676.7" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="679.7" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (7 samples, 0.14%)</title><rect x="677.4" y="611.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="680.4" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (6 samples, 0.12%)</title><rect x="677.7" y="595.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="680.7" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.06%)</title><rect x="678.4" y="579.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="681.4" y="590.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.04%)</title><rect x="679.1" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="682.1" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (12 samples, 0.25%)</title><rect x="679.6" y="627.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.6" y="638.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.12%)</title><rect x="680.6" y="611.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="683.6" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.08%)</title><rect x="680.8" y="595.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="683.8" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="682.0" y="611.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="685.0" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.10%)</title><rect x="682.5" y="627.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="685.5" y="638.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="682.5" y="611.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="685.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="682.5" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="685.5" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="682.7" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="685.7" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="683.2" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="686.2" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.06%)</title><rect x="683.9" y="643.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (321 samples, 6.56%)</title><rect x="684.7" y="723.0" width="77.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.7" y="734.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (23 samples, 0.47%)</title><rect x="685.9" y="707.0" width="5.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="688.9" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.08%)</title><rect x="688.5" y="691.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="691.5" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.16%)</title><rect x="689.5" y="691.0" width="1.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="692.5" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="690.5" y="675.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="693.5" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="690.9" y="675.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="693.9" y="686.0"></text>
</g>
<g>
<title>__libc_send (291 samples, 5.95%)</title><rect x="691.7" y="707.0" width="70.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="694.7" y="718.0">__libc_s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (287 samples, 5.87%)</title><rect x="692.6" y="691.0" width="69.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="695.6" y="702.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (286 samples, 5.85%)</title><rect x="692.9" y="675.0" width="69.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="695.9" y="686.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (271 samples, 5.54%)</title><rect x="696.2" y="659.0" width="65.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="699.2" y="670.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (268 samples, 5.48%)</title><rect x="696.2" y="643.0" width="64.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="699.2" y="654.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (262 samples, 5.36%)</title><rect x="696.7" y="627.0" width="63.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="699.7" y="638.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (258 samples, 5.27%)</title><rect x="696.7" y="611.0" width="62.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="699.7" y="622.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (256 samples, 5.23%)</title><rect x="697.2" y="595.0" width="61.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="700.2" y="606.0">tcp_se..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="697.7" y="579.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="700.7" y="590.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="697.7" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="700.7" y="574.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="698.2" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (248 samples, 5.07%)</title><rect x="699.1" y="579.0" width="59.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.1" y="590.0">tcp_se..</text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.14%)</title><rect x="700.8" y="563.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="703.8" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.14%)</title><rect x="700.8" y="547.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="703.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.08%)</title><rect x="701.3" y="531.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.08%)</title><rect x="701.3" y="515.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="704.3" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.04%)</title><rect x="701.8" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="704.8" y="510.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.06%)</title><rect x="702.5" y="563.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="705.5" y="574.0"></text>
</g>
<g>
<title>tcp_push (224 samples, 4.58%)</title><rect x="703.2" y="563.0" width="54.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="706.2" y="574.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (224 samples, 4.58%)</title><rect x="703.2" y="547.0" width="54.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.2" y="558.0">__tcp..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="703.5" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="706.5" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (220 samples, 4.50%)</title><rect x="704.2" y="531.0" width="53.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="707.2" y="542.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (205 samples, 4.19%)</title><rect x="705.7" y="515.0" width="49.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="708.7" y="526.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (201 samples, 4.11%)</title><rect x="706.4" y="499.0" width="48.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="709.4" y="510.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (198 samples, 4.05%)</title><rect x="706.6" y="483.0" width="47.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.6" y="494.0">__ip..</text>
</g>
<g>
<title>ip_local_out (197 samples, 4.03%)</title><rect x="706.6" y="467.0" width="47.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="709.6" y="478.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (26 samples, 0.53%)</title><rect x="707.1" y="451.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="710.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 0.47%)</title><rect x="707.8" y="435.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="710.8" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.08%)</title><rect x="708.1" y="419.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="711.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.08%)</title><rect x="708.1" y="403.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.1" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (16 samples, 0.33%)</title><rect x="709.0" y="419.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.0" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.04%)</title><rect x="709.3" y="403.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="712.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (12 samples, 0.25%)</title><rect x="709.8" y="403.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.8" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.04%)</title><rect x="710.2" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="713.2" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.04%)</title><rect x="710.7" y="387.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.7" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (6 samples, 0.12%)</title><rect x="711.2" y="387.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="714.2" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.06%)</title><rect x="711.9" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="714.9" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="712.9" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="715.9" y="430.0"></text>
</g>
<g>
<title>ip_output (167 samples, 3.41%)</title><rect x="713.4" y="451.0" width="40.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="716.4" y="462.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (161 samples, 3.29%)</title><rect x="713.6" y="435.0" width="38.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="716.6" y="446.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (159 samples, 3.25%)</title><rect x="713.9" y="419.0" width="38.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="716.9" y="430.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (136 samples, 2.78%)</title><rect x="714.8" y="403.0" width="32.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.8" y="414.0">__..</text>
</g>
<g>
<title>do_softirq.part.21 (135 samples, 2.76%)</title><rect x="715.1" y="387.0" width="32.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="718.1" y="398.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (133 samples, 2.72%)</title><rect x="715.5" y="371.0" width="32.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="718.5" y="382.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (133 samples, 2.72%)</title><rect x="715.5" y="355.0" width="32.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="718.5" y="366.0">__..</text>
</g>
<g>
<title>net_rx_action (132 samples, 2.70%)</title><rect x="715.8" y="339.0" width="31.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="718.8" y="350.0">ne..</text>
</g>
<g>
<title>process_backlog (129 samples, 2.64%)</title><rect x="716.5" y="323.0" width="31.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="719.5" y="334.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (126 samples, 2.58%)</title><rect x="717.2" y="307.0" width="30.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="720.2" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (124 samples, 2.53%)</title><rect x="717.5" y="291.0" width="29.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="720.5" y="302.0">__..</text>
</g>
<g>
<title>ip_rcv (122 samples, 2.49%)</title><rect x="718.0" y="275.0" width="29.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="721.0" y="286.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (5 samples, 0.10%)</title><rect x="718.2" y="259.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="721.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (112 samples, 2.29%)</title><rect x="719.4" y="259.0" width="27.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="722.4" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (110 samples, 2.25%)</title><rect x="719.4" y="243.0" width="26.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="722.4" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (108 samples, 2.21%)</title><rect x="719.4" y="227.0" width="26.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="722.4" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (107 samples, 2.19%)</title><rect x="719.6" y="211.0" width="25.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="722.6" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (104 samples, 2.13%)</title><rect x="720.4" y="195.0" width="25.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="723.4" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="721.8" y="179.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="724.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.06%)</title><rect x="722.8" y="179.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="725.8" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="723.0" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (88 samples, 1.80%)</title><rect x="723.7" y="179.0" width="21.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.7" y="190.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (86 samples, 1.76%)</title><rect x="724.2" y="163.0" width="20.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="727.2" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.06%)</title><rect x="724.5" y="147.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="727.5" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="724.7" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="727.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.35%)</title><rect x="725.7" y="147.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="728.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.16%)</title><rect x="727.4" y="131.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.10%)</title><rect x="727.8" y="115.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="730.8" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.10%)</title><rect x="727.8" y="99.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="730.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.10%)</title><rect x="727.8" y="83.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="730.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="728.6" y="67.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="731.6" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="728.6" y="51.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="731.6" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="729.8" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="732.8" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (58 samples, 1.19%)</title><rect x="730.3" y="147.0" width="13.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="733.3" y="158.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="730.5" y="131.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="733.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (55 samples, 1.12%)</title><rect x="731.0" y="131.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="734.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 1.10%)</title><rect x="731.2" y="115.0" width="13.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="734.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 1.10%)</title><rect x="731.2" y="99.0" width="13.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="734.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (54 samples, 1.10%)</title><rect x="731.2" y="83.0" width="13.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="734.2" y="94.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="744.2" y="147.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="747.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.04%)</title><rect x="745.0" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="748.0" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.08%)</title><rect x="746.4" y="259.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="749.4" y="270.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="746.9" y="243.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="749.9" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.37%)</title><rect x="747.6" y="403.0" width="4.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="750.6" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.35%)</title><rect x="747.6" y="387.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="750.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.16%)</title><rect x="748.3" y="371.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="751.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.08%)</title><rect x="749.1" y="355.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="752.1" y="366.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.06%)</title><rect x="749.1" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.1" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="749.3" y="323.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="752.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="749.3" y="307.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="752.3" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="750.5" y="371.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="753.5" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (3 samples, 0.06%)</title><rect x="751.0" y="371.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="754.0" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="752.4" y="435.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.06%)</title><rect x="752.9" y="435.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="755.9" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (3 samples, 0.06%)</title><rect x="752.9" y="419.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="755.9" y="430.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.14%)</title><rect x="755.6" y="515.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="758.6" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.04%)</title><rect x="756.1" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="759.1" y="510.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.04%)</title><rect x="756.1" y="483.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="759.1" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="756.5" y="499.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="759.5" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="756.5" y="483.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="759.5" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="756.8" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="759.8" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.14%)</title><rect x="757.3" y="563.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="760.3" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.12%)</title><rect x="757.5" y="547.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="760.5" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.06%)</title><rect x="758.2" y="531.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="761.2" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.06%)</title><rect x="759.0" y="611.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="762.0" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="759.2" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="762.2" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="759.2" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="762.2" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="759.2" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="762.2" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.08%)</title><rect x="759.9" y="627.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="762.9" y="638.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.06%)</title><rect x="759.9" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="762.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="759.9" y="595.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="762.9" y="606.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="759.9" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="762.9" y="590.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.06%)</title><rect x="760.9" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="763.9" y="654.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.10%)</title><rect x="762.1" y="723.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.1" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.10%)</title><rect x="762.1" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.1" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (5 samples, 0.10%)</title><rect x="762.1" y="691.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.getNodes (11 samples, 0.22%)</title><rect x="763.5" y="771.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.12%)</title><rect x="763.5" y="755.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.12%)</title><rect x="763.5" y="739.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.12%)</title><rect x="763.5" y="723.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.12%)</title><rect x="763.5" y="707.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (4 samples, 0.08%)</title><rect x="765.2" y="755.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="768.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueExternalResponse (62 samples, 1.27%)</title><rect x="766.2" y="771.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.06%)</title><rect x="766.2" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.syncReplicaValues (54 samples, 1.10%)</title><rect x="766.9" y="755.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.9" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="774.6" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.6" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="775.1" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="775.6" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="778.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (4 samples, 0.08%)</title><rect x="776.1" y="739.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (4 samples, 0.08%)</title><rect x="776.1" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.08%)</title><rect x="776.1" y="707.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.08%)</title><rect x="776.1" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.06%)</title><rect x="776.3" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.06%)</title><rect x="776.3" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.06%)</title><rect x="776.3" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.06%)</title><rect x="776.3" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (2 samples, 0.04%)</title><rect x="776.6" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.6" y="622.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$80/867048386.apply (2 samples, 0.04%)</title><rect x="776.6" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.6" y="606.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (2 samples, 0.04%)</title><rect x="776.6" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.6" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$79/1667381018.compare (2 samples, 0.04%)</title><rect x="776.6" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.6" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (2 samples, 0.04%)</title><rect x="776.6" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.6" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.08%)</title><rect x="777.3" y="739.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="780.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (3 samples, 0.06%)</title><rect x="778.5" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (5 samples, 0.10%)</title><rect x="779.9" y="755.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="780.2" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.2" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="780.2" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="780.7" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalResponse (720 samples, 14.72%)</title><rect x="781.1" y="771.0" width="173.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.1" y="782.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="781.1" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (705 samples, 14.41%)</title><rect x="781.6" y="755.0" width="170.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="784.6" y="766.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (704 samples, 14.39%)</title><rect x="781.6" y="739.0" width="169.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.6" y="750.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (700 samples, 14.31%)</title><rect x="781.6" y="723.0" width="168.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.6" y="734.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (700 samples, 14.31%)</title><rect x="781.6" y="707.0" width="168.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.6" y="718.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (593 samples, 12.12%)</title><rect x="782.8" y="691.0" width="143.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="785.8" y="702.0">Java_org_rocksdb_R..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.06%)</title><rect x="782.8" y="675.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="785.8" y="686.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.06%)</title><rect x="783.6" y="675.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="786.6" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.06%)</title><rect x="784.5" y="675.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="787.5" y="686.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.06%)</title><rect x="786.0" y="675.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="789.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.04%)</title><rect x="786.7" y="675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="789.7" y="686.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (570 samples, 11.65%)</title><rect x="787.2" y="675.0" width="137.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="790.2" y="686.0">rocksdb_get_helpe..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="787.7" y="659.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="790.7" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.08%)</title><rect x="789.1" y="659.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="792.1" y="670.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.08%)</title><rect x="790.1" y="659.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="793.1" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.12%)</title><rect x="791.0" y="659.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="794.0" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="791.0" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="794.0" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.08%)</title><rect x="791.5" y="643.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="794.5" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.08%)</title><rect x="791.5" y="627.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="794.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (510 samples, 10.43%)</title><rect x="793.0" y="659.0" width="123.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="796.0" y="670.0">rocksdb::DB::Ge..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (506 samples, 10.34%)</title><rect x="793.5" y="643.0" width="122.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="796.5" y="654.0">rocksdb::DB::Ge..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (3 samples, 0.06%)</title><rect x="794.2" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="797.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (3 samples, 0.06%)</title><rect x="794.2" y="611.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="797.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (497 samples, 10.16%)</title><rect x="794.9" y="627.0" width="119.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="797.9" y="638.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (492 samples, 10.06%)</title><rect x="795.1" y="611.0" width="118.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="798.1" y="622.0">rocksdb::DBImp..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="795.1" y="595.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="798.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (3 samples, 0.06%)</title><rect x="795.6" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="798.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) [clone .plt] (2 samples, 0.04%)</title><rect x="796.3" y="595.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="799.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.04%)</title><rect x="797.1" y="595.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="800.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (474 samples, 9.69%)</title><rect x="797.8" y="595.0" width="114.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="800.8" y="606.0">rocksdb::DBImp..</text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.06%)</title><rect x="799.7" y="579.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="802.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.14%)</title><rect x="800.4" y="579.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="803.4" y="590.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (2 samples, 0.04%)</title><rect x="802.4" y="579.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="805.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (8 samples, 0.16%)</title><rect x="802.9" y="579.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="805.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (4 samples, 0.08%)</title><rect x="803.6" y="563.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="806.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (5 samples, 0.10%)</title><rect x="805.3" y="579.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="808.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (4 samples, 0.08%)</title><rect x="805.3" y="563.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="808.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.04%)</title><rect x="805.5" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="808.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.04%)</title><rect x="807.0" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="810.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (179 samples, 3.66%)</title><rect x="807.4" y="579.0" width="43.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="810.4" y="590.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="808.6" y="563.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="811.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (168 samples, 3.43%)</title><rect x="809.1" y="563.0" width="40.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="812.1" y="574.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (166 samples, 3.39%)</title><rect x="809.1" y="547.0" width="40.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="812.1" y="558.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="809.4" y="531.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="812.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (159 samples, 3.25%)</title><rect x="809.9" y="531.0" width="38.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="812.9" y="542.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="838.1" y="515.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="841.1" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.10%)</title><rect x="838.8" y="515.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="841.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (33 samples, 0.67%)</title><rect x="840.2" y="515.0" width="8.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="843.2" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (5 samples, 0.10%)</title><rect x="843.4" y="499.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="846.4" y="510.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (12 samples, 0.25%)</title><rect x="844.6" y="499.0" width="2.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="847.6" y="510.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.04%)</title><rect x="847.7" y="499.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="850.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="848.2" y="531.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="851.2" y="542.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="848.7" y="531.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="851.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (4 samples, 0.08%)</title><rect x="849.7" y="563.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="852.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (248 samples, 5.07%)</title><rect x="852.3" y="579.0" width="59.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="855.3" y="590.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (5 samples, 0.10%)</title><rect x="853.5" y="563.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="856.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (3 samples, 0.06%)</title><rect x="854.0" y="547.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="857.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (237 samples, 4.84%)</title><rect x="855.0" y="563.0" width="57.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="858.0" y="574.0">rocksd..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (223 samples, 4.56%)</title><rect x="855.4" y="547.0" width="53.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="858.4" y="558.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="856.4" y="531.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="859.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (3 samples, 0.06%)</title><rect x="857.4" y="531.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="860.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (2 samples, 0.04%)</title><rect x="858.3" y="531.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="861.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (141 samples, 2.88%)</title><rect x="859.1" y="531.0" width="34.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="862.1" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (140 samples, 2.86%)</title><rect x="859.3" y="515.0" width="33.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="862.3" y="526.0">ro..</text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.04%)</title><rect x="860.0" y="499.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="863.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const [clone .plt] (2 samples, 0.04%)</title><rect x="860.5" y="499.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="863.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (131 samples, 2.68%)</title><rect x="861.0" y="499.0" width="31.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="864.0" y="510.0">ro..</text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (7 samples, 0.14%)</title><rect x="861.5" y="483.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="864.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (69 samples, 1.41%)</title><rect x="864.6" y="483.0" width="16.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="867.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (51 samples, 1.04%)</title><rect x="866.5" y="467.0" width="12.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="869.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (5 samples, 0.10%)</title><rect x="879.3" y="467.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="882.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::Read(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::Slice*, char*, rocksdb::IODebugContext*) const (2 samples, 0.04%)</title><rect x="880.0" y="451.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="883.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (18 samples, 0.37%)</title><rect x="881.3" y="483.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="884.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (16 samples, 0.33%)</title><rect x="881.3" y="467.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="884.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (11 samples, 0.22%)</title><rect x="882.0" y="451.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="885.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (10 samples, 0.20%)</title><rect x="882.2" y="435.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="885.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (10 samples, 0.20%)</title><rect x="882.2" y="419.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="885.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.04%)</title><rect x="885.1" y="467.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="888.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const (27 samples, 0.55%)</title><rect x="885.6" y="483.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="888.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (23 samples, 0.47%)</title><rect x="886.6" y="467.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="889.6" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (2 samples, 0.04%)</title><rect x="886.6" y="451.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="889.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (16 samples, 0.33%)</title><rect x="887.5" y="451.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="890.5" y="462.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10763650808127726843.so (4 samples, 0.08%)</title><rect x="887.5" y="435.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="890.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::Block::~Block() (4 samples, 0.08%)</title><rect x="887.5" y="419.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="890.5" y="430.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.04%)</title><rect x="888.5" y="435.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="891.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::EvictFromLRU(unsigned long, rocksdb::autovector&lt;rocksdb::LRUHandle*, 8ul&gt;*) (6 samples, 0.12%)</title><rect x="889.7" y="435.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="892.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (4 samples, 0.08%)</title><rect x="890.2" y="419.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="893.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.04%)</title><rect x="892.6" y="499.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="895.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (10 samples, 0.20%)</title><rect x="893.1" y="531.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="896.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (7 samples, 0.14%)</title><rect x="893.8" y="515.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="896.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="895.0" y="499.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="898.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (54 samples, 1.10%)</title><rect x="895.7" y="531.0" width="13.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="898.7" y="542.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.06%)</title><rect x="907.1" y="515.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="910.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (3 samples, 0.06%)</title><rect x="907.8" y="515.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="910.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (3 samples, 0.06%)</title><rect x="909.2" y="547.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="912.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.04%)</title><rect x="910.0" y="547.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="913.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="910.7" y="547.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="913.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (3 samples, 0.06%)</title><rect x="911.2" y="547.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="914.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (3 samples, 0.06%)</title><rect x="912.1" y="595.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="915.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.04%)</title><rect x="913.3" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="916.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (3 samples, 0.06%)</title><rect x="913.8" y="611.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="916.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (2 samples, 0.04%)</title><rect x="914.8" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="917.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (32 samples, 0.65%)</title><rect x="916.2" y="659.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="919.2" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.06%)</title><rect x="916.7" y="643.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="919.7" y="654.0"></text>
</g>
<g>
<title>jni_NewByteArray (23 samples, 0.47%)</title><rect x="917.4" y="643.0" width="5.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="920.4" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.08%)</title><rect x="917.9" y="627.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="920.9" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.33%)</title><rect x="919.1" y="627.0" width="3.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="922.1" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.29%)</title><rect x="919.1" y="611.0" width="3.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="922.1" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.27%)</title><rect x="919.1" y="595.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="922.1" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (5 samples, 0.10%)</title><rect x="920.3" y="579.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="923.3" y="590.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.04%)</title><rect x="921.8" y="579.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="924.8" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="922.5" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="925.5" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.08%)</title><rect x="923.0" y="643.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="926.0" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="923.5" y="627.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="926.5" y="638.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="923.5" y="611.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="926.5" y="622.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.06%)</title><rect x="923.9" y="659.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="926.9" y="670.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="924.9" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.9" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (2 samples, 0.04%)</title><rect x="925.4" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="928.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 1.31%)</title><rect x="925.9" y="691.0" width="15.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="928.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.25%)</title><rect x="925.9" y="675.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="928.9" y="686.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (8 samples, 0.16%)</title><rect x="925.9" y="659.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="928.9" y="670.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="928.0" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="931.0" y="670.0"></text>
</g>
<g>
<title>pread64 (51 samples, 1.04%)</title><rect x="929.0" y="675.0" width="12.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="932.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.04%)</title><rect x="929.0" y="659.0" width="12.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.0" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.04%)</title><rect x="929.0" y="643.0" width="12.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="932.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (46 samples, 0.94%)</title><rect x="930.2" y="627.0" width="11.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="933.2" y="638.0"></text>
</g>
<g>
<title>ksys_pread64 (44 samples, 0.90%)</title><rect x="930.7" y="611.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.7" y="622.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.12%)</title><rect x="930.7" y="595.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="933.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.12%)</title><rect x="930.7" y="579.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="933.7" y="590.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.12%)</title><rect x="930.7" y="563.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="933.7" y="574.0"></text>
</g>
<g>
<title>vfs_read (37 samples, 0.76%)</title><rect x="932.4" y="595.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="935.4" y="606.0"></text>
</g>
<g>
<title>__vfs_read (31 samples, 0.63%)</title><rect x="932.4" y="579.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.4" y="590.0"></text>
</g>
<g>
<title>new_sync_read (31 samples, 0.63%)</title><rect x="932.4" y="563.0" width="7.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="935.4" y="574.0"></text>
</g>
<g>
<title>ext4_file_read_iter (28 samples, 0.57%)</title><rect x="933.1" y="547.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.1" y="558.0"></text>
</g>
<g>
<title>generic_file_read_iter (27 samples, 0.55%)</title><rect x="933.1" y="531.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="936.1" y="542.0"></text>
</g>
<g>
<title>copy_page_to_iter (9 samples, 0.18%)</title><rect x="933.4" y="515.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.4" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.16%)</title><rect x="933.4" y="499.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="936.4" y="510.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.06%)</title><rect x="935.5" y="515.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="938.5" y="526.0"></text>
</g>
<g>
<title>activate_page (2 samples, 0.04%)</title><rect x="935.5" y="499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="938.5" y="510.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (2 samples, 0.04%)</title><rect x="935.5" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="938.5" y="494.0"></text>
</g>
<g>
<title>pagecache_get_page (11 samples, 0.22%)</title><rect x="936.2" y="515.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="939.2" y="526.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.22%)</title><rect x="936.2" y="499.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="939.2" y="510.0"></text>
</g>
<g>
<title>xas_load (7 samples, 0.14%)</title><rect x="937.0" y="483.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.0" y="494.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.06%)</title><rect x="937.9" y="467.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="940.9" y="478.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.04%)</title><rect x="938.9" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="941.9" y="526.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.04%)</title><rect x="938.9" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.9" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.12%)</title><rect x="939.9" y="579.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.9" y="590.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.08%)</title><rect x="940.3" y="563.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.3" y="574.0"></text>
</g>
<g>
<title>__libc_free (7 samples, 0.14%)</title><rect x="941.3" y="691.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="944.3" y="702.0"></text>
</g>
<g>
<title>__malloc (15 samples, 0.31%)</title><rect x="943.0" y="691.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="946.0" y="702.0"></text>
</g>
<g>
<title>_int_malloc (4 samples, 0.08%)</title><rect x="946.6" y="691.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="949.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (6 samples, 0.12%)</title><rect x="947.6" y="691.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="950.6" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.04%)</title><rect x="949.0" y="691.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="952.0" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="949.8" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="952.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (4 samples, 0.08%)</title><rect x="950.5" y="723.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (4 samples, 0.08%)</title><rect x="950.5" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="953.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="950.5" y="691.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="951.0" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="951.0" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.0" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="951.0" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="954.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (13 samples, 0.27%)</title><rect x="951.7" y="755.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="954.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.25%)</title><rect x="951.9" y="739.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="953.9" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="953.9" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.9" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="953.9" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="953.9" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="953.9" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.9" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="953.9" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (2 samples, 0.04%)</title><rect x="954.8" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="954.8" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="954.8" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="954.8" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="954.8" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.8" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="954.8" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="957.8" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (961 samples, 19.64%)</title><rect x="955.5" y="899.0" width="231.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.5" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (7 samples, 0.14%)</title><rect x="957.5" y="883.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="960.5" y="894.0"></text>
</g>
<g>
<title>gettimeofday@plt (3 samples, 0.06%)</title><rect x="959.2" y="883.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="962.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (246 samples, 5.03%)</title><rect x="959.9" y="883.0" width="59.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.9" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (245 samples, 5.01%)</title><rect x="960.1" y="867.0" width="59.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.1" y="878.0">one/ni..</text>
</g>
<g>
<title>JVM_IHashCode (157 samples, 3.21%)</title><rect x="961.8" y="851.0" width="37.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="964.8" y="862.0">JVM..</text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.10%)</title><rect x="961.8" y="835.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="964.8" y="846.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.06%)</title><rect x="963.0" y="835.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="966.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait (149 samples, 3.05%)</title><rect x="963.7" y="835.0" width="36.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="966.7" y="846.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (139 samples, 2.84%)</title><rect x="966.2" y="819.0" width="33.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="969.2" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (138 samples, 2.82%)</title><rect x="966.4" y="803.0" width="33.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="969.4" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (115 samples, 2.35%)</title><rect x="971.9" y="787.0" width="27.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="974.9" y="798.0">_..</text>
</g>
<g>
<title>do_epoll_wait (111 samples, 2.27%)</title><rect x="971.9" y="771.0" width="26.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="974.9" y="782.0">d..</text>
</g>
<g>
<title>__fdget (4 samples, 0.08%)</title><rect x="972.7" y="755.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.7" y="766.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.08%)</title><rect x="972.7" y="739.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="975.7" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="973.2" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="976.2" y="734.0"></text>
</g>
<g>
<title>ep_poll (102 samples, 2.09%)</title><rect x="973.6" y="755.0" width="24.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.6" y="766.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (71 samples, 1.45%)</title><rect x="978.2" y="739.0" width="17.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="981.2" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (44 samples, 0.90%)</title><rect x="982.8" y="723.0" width="10.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="985.8" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (28 samples, 0.57%)</title><rect x="984.5" y="707.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="987.5" y="718.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.31%)</title><rect x="986.7" y="691.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="989.7" y="702.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.14%)</title><rect x="988.1" y="675.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="991.1" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="989.8" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.8" y="686.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.08%)</title><rect x="990.3" y="691.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="993.3" y="702.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.18%)</title><rect x="991.2" y="707.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="994.2" y="718.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.16%)</title><rect x="993.4" y="723.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="996.4" y="734.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="993.9" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="996.9" y="718.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.08%)</title><rect x="994.4" y="707.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="997.4" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.04%)</title><rect x="995.3" y="739.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="998.3" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.16%)</title><rect x="996.1" y="739.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="999.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.16%)</title><rect x="996.1" y="723.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="999.1" y="734.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.16%)</title><rect x="996.1" y="707.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="999.1" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.16%)</title><rect x="996.1" y="691.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="999.1" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.12%)</title><rect x="996.5" y="675.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="999.5" y="686.0"></text>
</g>
<g>
<title>apic_timer_interrupt (4 samples, 0.08%)</title><rect x="997.0" y="659.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1000.0" y="670.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (4 samples, 0.08%)</title><rect x="997.0" y="643.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1000.0" y="654.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.08%)</title><rect x="997.0" y="627.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1000.0" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.08%)</title><rect x="997.0" y="611.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.0" y="622.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.06%)</title><rect x="997.3" y="595.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1000.3" y="606.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.06%)</title><rect x="997.3" y="579.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="997.3" y="563.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1000.3" y="574.0"></text>
</g>
<g>
<title>fput (3 samples, 0.06%)</title><rect x="999.0" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1002.0" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.08%)</title><rect x="999.7" y="851.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1002.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 1.43%)</title><rect x="1000.7" y="851.0" width="16.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1003.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="1000.7" y="835.0" width="1.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1003.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="1000.7" y="819.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1003.7" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="1000.7" y="803.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1003.7" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.06%)</title><rect x="1001.1" y="803.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1004.1" y="814.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="1001.9" y="803.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1004.9" y="814.0"></text>
</g>
<g>
<title>epoll_wait (60 samples, 1.23%)</title><rect x="1003.1" y="835.0" width="14.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1006.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 1.21%)</title><rect x="1003.3" y="819.0" width="14.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1006.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.19%)</title><rect x="1003.5" y="803.0" width="14.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1006.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (45 samples, 0.92%)</title><rect x="1006.4" y="787.0" width="10.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.4" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (45 samples, 0.92%)</title><rect x="1006.4" y="771.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1009.4" y="782.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="1006.4" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1009.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="1006.4" y="739.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1009.4" y="750.0"></text>
</g>
<g>
<title>ep_poll (42 samples, 0.86%)</title><rect x="1006.9" y="755.0" width="10.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1009.9" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (30 samples, 0.61%)</title><rect x="1008.6" y="739.0" width="7.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1011.6" y="750.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="1009.8" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.8" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (16 samples, 0.33%)</title><rect x="1010.5" y="723.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1013.5" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (9 samples, 0.18%)</title><rect x="1012.0" y="707.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1015.0" y="718.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.08%)</title><rect x="1013.0" y="691.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1016.0" y="702.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.12%)</title><rect x="1014.4" y="723.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1017.4" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.08%)</title><rect x="1016.1" y="739.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1019.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.08%)</title><rect x="1016.1" y="723.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1019.1" y="734.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="1016.1" y="707.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1019.1" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.06%)</title><rect x="1016.3" y="691.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1019.3" y="702.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="1017.5" y="851.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1020.5" y="862.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.10%)</title><rect x="1018.0" y="851.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1021.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (694 samples, 14.19%)</title><rect x="1019.2" y="883.0" width="167.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.2" y="894.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="1021.9" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.9" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="1021.9" y="851.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1024.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (680 samples, 13.90%)</title><rect x="1022.4" y="867.0" width="164.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.4" y="878.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (482 samples, 9.85%)</title><rect x="1023.3" y="851.0" width="116.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.3" y="862.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (366 samples, 7.48%)</title><rect x="1027.9" y="835.0" width="88.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.9" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (361 samples, 7.38%)</title><rect x="1029.1" y="819.0" width="87.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1032.1" y="830.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (327 samples, 6.68%)</title><rect x="1029.4" y="803.0" width="78.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1032.4" y="814.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (30 samples, 0.61%)</title><rect x="1030.1" y="787.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (30 samples, 0.61%)</title><rect x="1030.1" y="771.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="1032.7" y="755.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.08%)</title><rect x="1032.7" y="739.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.12%)</title><rect x="1033.7" y="755.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.12%)</title><rect x="1033.7" y="739.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.10%)</title><rect x="1033.9" y="723.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.9" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.06%)</title><rect x="1035.1" y="755.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1038.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.10%)</title><rect x="1036.1" y="755.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="1036.6" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="1036.6" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="1036.6" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (294 samples, 6.01%)</title><rect x="1037.3" y="787.0" width="70.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.3" y="798.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.33%)</title><rect x="1037.8" y="771.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.33%)</title><rect x="1037.8" y="755.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (15 samples, 0.31%)</title><rect x="1038.0" y="739.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.31%)</title><rect x="1038.0" y="723.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="1041.2" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="1041.9" y="771.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.08%)</title><rect x="1041.9" y="755.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1041.9" y="739.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1042.4" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.25%)</title><rect x="1042.9" y="771.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.14%)</title><rect x="1043.3" y="755.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.14%)</title><rect x="1043.3" y="739.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="1045.0" y="755.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="1045.0" y="739.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1048.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.06%)</title><rect x="1045.0" y="723.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.08%)</title><rect x="1045.8" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="1045.8" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.08%)</title><rect x="1045.8" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1048.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (252 samples, 5.15%)</title><rect x="1047.0" y="771.0" width="60.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.0" y="782.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (252 samples, 5.15%)</title><rect x="1047.0" y="755.0" width="60.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.0" y="766.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (251 samples, 5.13%)</title><rect x="1047.2" y="739.0" width="60.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.2" y="750.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (7 samples, 0.14%)</title><rect x="1047.2" y="723.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.10%)</title><rect x="1047.7" y="707.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.08%)</title><rect x="1047.9" y="691.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.27%)</title><rect x="1048.9" y="723.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.27%)</title><rect x="1048.9" y="707.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (12 samples, 0.25%)</title><rect x="1049.1" y="691.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (12 samples, 0.25%)</title><rect x="1049.1" y="675.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="1051.5" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (231 samples, 4.72%)</title><rect x="1052.0" y="723.0" width="55.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.0" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (231 samples, 4.72%)</title><rect x="1052.0" y="707.0" width="55.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.0" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (228 samples, 4.66%)</title><rect x="1052.8" y="691.0" width="54.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.8" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (226 samples, 4.62%)</title><rect x="1053.2" y="675.0" width="54.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.2" y="686.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (226 samples, 4.62%)</title><rect x="1053.2" y="659.0" width="54.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.2" y="670.0">jdk/i..</text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.06%)</title><rect x="1054.2" y="643.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1057.2" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="1054.9" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1057.9" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.06%)</title><rect x="1055.4" y="643.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1058.4" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (34 samples, 0.70%)</title><rect x="1056.6" y="643.0" width="8.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1059.6" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.10%)</title><rect x="1058.1" y="627.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1061.1" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.10%)</title><rect x="1059.3" y="627.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1062.3" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (6 samples, 0.12%)</title><rect x="1060.7" y="627.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.7" y="638.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.06%)</title><rect x="1062.2" y="627.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1065.2" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.10%)</title><rect x="1062.9" y="627.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1065.9" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="1064.1" y="627.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1067.1" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (173 samples, 3.54%)</title><rect x="1064.8" y="643.0" width="41.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1067.8" y="654.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (151 samples, 3.09%)</title><rect x="1070.1" y="627.0" width="36.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1073.1" y="638.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (150 samples, 3.07%)</title><rect x="1070.4" y="611.0" width="36.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1073.4" y="622.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (133 samples, 2.72%)</title><rect x="1074.5" y="595.0" width="32.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1077.5" y="606.0">__..</text>
</g>
<g>
<title>do_futex (132 samples, 2.70%)</title><rect x="1074.5" y="579.0" width="31.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1077.5" y="590.0">do..</text>
</g>
<g>
<title>futex_wake (128 samples, 2.62%)</title><rect x="1075.2" y="563.0" width="30.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1078.2" y="574.0">fu..</text>
</g>
<g>
<title>get_futex_key (3 samples, 0.06%)</title><rect x="1077.4" y="547.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1080.4" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.06%)</title><rect x="1078.3" y="547.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1081.3" y="558.0"></text>
</g>
<g>
<title>wake_up_q (111 samples, 2.27%)</title><rect x="1079.3" y="547.0" width="26.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1082.3" y="558.0">w..</text>
</g>
<g>
<title>try_to_wake_up (110 samples, 2.25%)</title><rect x="1079.5" y="531.0" width="26.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1082.5" y="542.0">t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (109 samples, 2.23%)</title><rect x="1079.8" y="515.0" width="26.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1082.8" y="526.0">_..</text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.08%)</title><rect x="1106.5" y="643.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1109.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationFactor.defaultRepliFactor (2 samples, 0.04%)</title><rect x="1107.7" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (30 samples, 0.61%)</title><rect x="1108.2" y="803.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (30 samples, 0.61%)</title><rect x="1108.2" y="787.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (12 samples, 0.25%)</title><rect x="1108.2" y="771.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.2" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.12%)</title><rect x="1109.7" y="755.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1112.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (18 samples, 0.37%)</title><rect x="1111.1" y="771.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (18 samples, 0.37%)</title><rect x="1111.1" y="755.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (18 samples, 0.37%)</title><rect x="1111.1" y="739.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.1" y="750.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (6 samples, 0.12%)</title><rect x="1111.4" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.4" y="734.0"></text>
</g>
<g>
<title>itable stub (11 samples, 0.22%)</title><rect x="1112.8" y="723.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1115.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.06%)</title><rect x="1115.5" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="1115.5" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="1115.5" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (44 samples, 0.90%)</title><rect x="1116.2" y="835.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.10%)</title><rect x="1118.1" y="819.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="1118.4" y="803.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1121.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="1118.4" y="787.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="1118.6" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.37%)</title><rect x="1119.3" y="819.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1122.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.37%)</title><rect x="1119.3" y="803.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (12 samples, 0.25%)</title><rect x="1123.7" y="819.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (11 samples, 0.22%)</title><rect x="1126.8" y="835.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.12%)</title><rect x="1127.3" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.12%)</title><rect x="1127.3" y="803.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.04%)</title><rect x="1128.0" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.04%)</title><rect x="1128.0" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="1128.7" y="819.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1131.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.06%)</title><rect x="1129.5" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (26 samples, 0.53%)</title><rect x="1130.2" y="835.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.29%)</title><rect x="1133.1" y="819.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.29%)</title><rect x="1133.1" y="803.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.27%)</title><rect x="1136.5" y="835.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.27%)</title><rect x="1136.5" y="819.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (193 samples, 3.95%)</title><rect x="1139.8" y="851.0" width="46.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.8" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (192 samples, 3.92%)</title><rect x="1140.1" y="835.0" width="46.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.1" y="846.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (46 samples, 0.94%)</title><rect x="1142.5" y="819.0" width="11.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1145.5" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="1143.7" y="803.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.7" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.06%)</title><rect x="1144.4" y="803.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.4" y="814.0"></text>
</g>
<g>
<title>__memmove_ssse3 (8 samples, 0.16%)</title><rect x="1145.1" y="803.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1148.1" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (21 samples, 0.43%)</title><rect x="1147.1" y="803.0" width="5.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1150.1" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.08%)</title><rect x="1148.5" y="787.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.5" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.12%)</title><rect x="1149.7" y="787.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.7" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.08%)</title><rect x="1151.2" y="787.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1154.2" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.08%)</title><rect x="1151.2" y="771.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.2" y="782.0"></text>
</g>
<g>
<title>memmove@plt (3 samples, 0.06%)</title><rect x="1152.1" y="803.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1155.1" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.06%)</title><rect x="1152.9" y="803.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.9" y="814.0"></text>
</g>
<g>
<title>__GI___recv (129 samples, 2.64%)</title><rect x="1153.6" y="819.0" width="31.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1156.6" y="830.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (122 samples, 2.49%)</title><rect x="1155.3" y="803.0" width="29.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1158.3" y="814.0">en..</text>
</g>
<g>
<title>do_syscall_64 (121 samples, 2.47%)</title><rect x="1155.5" y="787.0" width="29.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1158.5" y="798.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (100 samples, 2.04%)</title><rect x="1160.6" y="771.0" width="24.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.6" y="782.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (92 samples, 1.88%)</title><rect x="1160.8" y="755.0" width="22.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.8" y="766.0">_..</text>
</g>
<g>
<title>sock_recvmsg (76 samples, 1.55%)</title><rect x="1162.3" y="739.0" width="18.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1165.3" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="1163.0" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1166.0" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (58 samples, 1.19%)</title><rect x="1163.5" y="723.0" width="14.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.5" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="1163.9" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1166.9" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 1.08%)</title><rect x="1164.7" y="707.0" width="12.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.7" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="1167.8" y="691.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1170.8" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="1167.8" y="675.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1170.8" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="1168.3" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1171.3" y="686.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="1169.5" y="691.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1172.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (18 samples, 0.37%)</title><rect x="1170.0" y="691.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.0" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.31%)</title><rect x="1170.2" y="675.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.2" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (15 samples, 0.31%)</title><rect x="1170.2" y="659.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1173.2" y="670.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="1170.2" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1173.2" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="1170.2" y="627.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1173.2" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.20%)</title><rect x="1171.2" y="643.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1174.2" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.16%)</title><rect x="1171.2" y="627.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1174.2" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.04%)</title><rect x="1173.1" y="627.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1176.1" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="1173.8" y="675.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1176.8" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.12%)</title><rect x="1174.3" y="691.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.3" y="702.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.06%)</title><rect x="1175.0" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1178.0" y="686.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (3 samples, 0.06%)</title><rect x="1175.0" y="659.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.0" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.06%)</title><rect x="1175.0" y="643.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1178.0" y="654.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.06%)</title><rect x="1175.0" y="627.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1178.0" y="638.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.06%)</title><rect x="1175.0" y="611.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.0" y="622.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.06%)</title><rect x="1175.0" y="595.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1178.0" y="606.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.06%)</title><rect x="1175.0" y="579.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.0" y="590.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.06%)</title><rect x="1175.0" y="563.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1178.0" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.04%)</title><rect x="1175.3" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.3" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.12%)</title><rect x="1175.8" y="691.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1178.8" y="702.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="1176.0" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1179.0" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.06%)</title><rect x="1176.5" y="675.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1179.5" y="686.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="1176.5" y="659.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1179.5" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.25%)</title><rect x="1177.5" y="723.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.5" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.20%)</title><rect x="1177.9" y="707.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1180.9" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (9 samples, 0.18%)</title><rect x="1178.2" y="691.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1181.2" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.16%)</title><rect x="1178.4" y="675.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1181.4" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.20%)</title><rect x="1180.6" y="739.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.20%)</title><rect x="1180.6" y="723.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1183.6" y="734.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.20%)</title><rect x="1180.6" y="707.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.6" y="718.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.14%)</title><rect x="1181.3" y="691.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1184.3" y="702.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.08%)</title><rect x="1183.2" y="755.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1186.2" y="766.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.06%)</title><rect x="1184.7" y="819.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1187.7" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.08%)</title><rect x="1185.4" y="819.0" width="1.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1188.4" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="1186.6" y="883.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="1186.9" y="867.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1189.9" y="878.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.22%)</title><rect x="1187.3" y="899.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.22%)</title><rect x="1187.3" y="883.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.22%)</title><rect x="1187.3" y="867.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.16%)</title><rect x="1187.6" y="851.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.14%)</title><rect x="1187.6" y="835.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.6" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.10%)</title><rect x="1187.6" y="819.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.6" y="830.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.10%)</title><rect x="1187.6" y="803.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1190.6" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.04%)</title><rect x="1188.8" y="819.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.8" y="830.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.04%)</title><rect x="1189.5" y="851.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.04%)</title><rect x="1189.5" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title><rect x="1189.5" y="819.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1189.5" y="803.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1189.5" y="787.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.04%)</title><rect x="1189.5" y="771.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::print() (2 samples, 0.04%)</title><rect x="1189.5" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.5" y="766.0"></text>
</g>
</g>
</svg>
