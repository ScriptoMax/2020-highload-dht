<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Multi-node RAM</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (47,625 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (24,838 samples, 52.15%)</title><rect x="10.0" y="323.0" width="615.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (24,838 samples, 52.15%)</title><rect x="10.0" y="307.0" width="615.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (24,838 samples, 52.15%)</title><rect x="10.0" y="291.0" width="615.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,119 samples, 2.35%)</title><rect x="10.0" y="275.0" width="27.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,119 samples, 2.35%)</title><rect x="10.0" y="259.0" width="27.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,119 samples, 2.35%)</title><rect x="10.0" y="243.0" width="27.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,119 samples, 2.35%)</title><rect x="10.0" y="227.0" width="27.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="238.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,119 samples, 2.35%)</title><rect x="10.0" y="211.0" width="27.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.0" y="222.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.run (23,719 samples, 49.80%)</title><rect x="37.7" y="275.0" width="587.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.7" y="286.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4 (23,719 samples, 49.80%)</title><rect x="37.7" y="259.0" width="587.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.7" y="270.0">ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5,319 samples, 11.17%)</title><rect x="37.7" y="243.0" width="131.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.7" y="254.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5,319 samples, 11.17%)</title><rect x="37.7" y="227.0" width="131.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.7" y="238.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3,883 samples, 8.15%)</title><rect x="37.7" y="211.0" width="96.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.7" y="222.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3,883 samples, 8.15%)</title><rect x="37.7" y="195.0" width="96.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.7" y="206.0">one/nio/uti..</text>
</g>
<g>
<title>byte[] (3,883 samples, 8.15%)</title><rect x="37.7" y="179.0" width="96.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="40.7" y="190.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (1,436 samples, 3.02%)</title><rect x="133.9" y="211.0" width="35.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.9" y="222.0">one..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,436 samples, 3.02%)</title><rect x="133.9" y="195.0" width="35.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="136.9" y="206.0">one..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/652582163.exec (18,400 samples, 38.64%)</title><rect x="169.5" y="243.0" width="455.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.5" y="254.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$69/652582..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$entity$1 (18,400 samples, 38.64%)</title><rect x="169.5" y="227.0" width="455.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.5" y="238.0">ru/mail/polis/service/codearound/AsyncService.lambda$entity$1</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.get (18,400 samples, 38.64%)</title><rect x="169.5" y="211.0" width="455.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.5" y="222.0">ru/mail/polis/service/codearound/AsyncService.get</text>
</g>
<g>
<title>one.nio.http.Response (732 samples, 1.54%)</title><rect x="169.5" y="195.0" width="18.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="172.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,733 samples, 3.64%)</title><rect x="187.7" y="195.0" width="42.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="190.7" y="206.0">one/..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,733 samples, 3.64%)</title><rect x="187.7" y="179.0" width="42.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.7" y="190.0">java..</text>
</g>
<g>
<title>java.lang.String[] (1,733 samples, 3.64%)</title><rect x="187.7" y="163.0" width="42.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="190.7" y="174.0">java..</text>
</g>
<g>
<title>one/nio/http/Response.ok (3,654 samples, 7.67%)</title><rect x="230.6" y="195.0" width="90.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.6" y="206.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,654 samples, 7.67%)</title><rect x="230.6" y="179.0" width="90.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.6" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>byte[] (1,493 samples, 3.13%)</title><rect x="230.6" y="163.0" width="37.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="233.6" y="174.0">byt..</text>
</g>
<g>
<title>java.lang.String[] (1,305 samples, 2.74%)</title><rect x="267.6" y="163.0" width="32.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="270.6" y="174.0">ja..</text>
</g>
<g>
<title>java.lang.String (856 samples, 1.80%)</title><rect x="299.9" y="163.0" width="21.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="302.9" y="174.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.proxy (9,215 samples, 19.35%)</title><rect x="321.1" y="195.0" width="228.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.1" y="206.0">ru/mail/polis/service/codearou..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.17%)</title><rect x="321.1" y="179.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1668016508.invoke (82 samples, 0.17%)</title><rect x="321.1" y="163.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.17%)</title><rect x="321.1" y="147.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.04%)</title><rect x="321.1" y="131.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.04%)</title><rect x="321.1" y="115.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="324.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (64 samples, 0.13%)</title><rect x="321.6" y="131.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (64 samples, 0.13%)</title><rect x="321.6" y="115.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.6" y="126.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.13%)</title><rect x="321.6" y="99.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="324.6" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,133 samples, 19.18%)</title><rect x="323.2" y="179.0" width="226.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.2" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,133 samples, 19.18%)</title><rect x="323.2" y="163.0" width="226.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="326.2" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (75 samples, 0.16%)</title><rect x="323.2" y="147.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="326.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (7,896 samples, 16.58%)</title><rect x="325.0" y="147.0" width="195.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.0" y="158.0">one/nio/http/HttpClient$R..</text>
</g>
<g>
<title>byte[] (7,746 samples, 16.26%)</title><rect x="325.0" y="131.0" width="191.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="328.0" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (150 samples, 0.31%)</title><rect x="516.9" y="131.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="519.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (919 samples, 1.93%)</title><rect x="520.7" y="147.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.7" y="158.0">o..</text>
</g>
<g>
<title>byte[] (145 samples, 0.30%)</title><rect x="520.7" y="131.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="523.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.10%)</title><rect x="524.2" y="131.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.10%)</title><rect x="524.2" y="115.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.07%)</title><rect x="524.2" y="99.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="527.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.03%)</title><rect x="525.1" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.1" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.03%)</title><rect x="525.1" y="83.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="528.1" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (21 samples, 0.04%)</title><rect x="525.4" y="131.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="528.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (516 samples, 1.08%)</title><rect x="526.0" y="131.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.0" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (516 samples, 1.08%)</title><rect x="526.0" y="115.0" width="12.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.0" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (516 samples, 1.08%)</title><rect x="526.0" y="99.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.0" y="110.0"></text>
</g>
<g>
<title>char[] (349 samples, 0.73%)</title><rect x="526.0" y="83.0" width="8.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="529.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (95 samples, 0.20%)</title><rect x="534.6" y="83.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="537.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (72 samples, 0.15%)</title><rect x="537.0" y="83.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="540.0" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (72 samples, 0.15%)</title><rect x="537.0" y="67.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.0" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (72 samples, 0.15%)</title><rect x="537.0" y="51.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.0" y="62.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.15%)</title><rect x="537.0" y="35.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="540.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (152 samples, 0.32%)</title><rect x="538.7" y="131.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (152 samples, 0.32%)</title><rect x="538.7" y="115.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="541.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (37 samples, 0.08%)</title><rect x="542.5" y="131.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.08%)</title><rect x="542.5" y="115.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 0.08%)</title><rect x="542.5" y="99.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.06%)</title><rect x="542.5" y="83.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="545.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (186 samples, 0.39%)</title><rect x="543.4" y="147.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.4" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (186 samples, 0.39%)</title><rect x="543.4" y="131.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.4" y="142.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.39%)</title><rect x="543.4" y="115.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="546.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (38 samples, 0.08%)</title><rect x="548.0" y="147.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (38 samples, 0.08%)</title><rect x="548.0" y="131.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.08%)</title><rect x="548.0" y="115.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.03%)</title><rect x="548.0" y="99.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="551.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.05%)</title><rect x="548.4" y="99.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.4" y="110.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.05%)</title><rect x="548.4" y="83.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="551.4" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (19 samples, 0.04%)</title><rect x="549.0" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.0" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (19 samples, 0.04%)</title><rect x="549.0" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.0" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (19 samples, 0.04%)</title><rect x="549.0" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.0" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (19 samples, 0.04%)</title><rect x="549.0" y="99.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="552.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (747 samples, 1.57%)</title><rect x="549.4" y="195.0" width="18.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.4" y="206.0"></text>
</g>
<g>
<title>byte[] (747 samples, 1.57%)</title><rect x="549.4" y="179.0" width="18.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="552.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.get (2,319 samples, 4.87%)</title><rect x="568.0" y="195.0" width="57.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.0" y="206.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (794 samples, 1.67%)</title><rect x="568.0" y="179.0" width="19.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.0" y="190.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (794 samples, 1.67%)</title><rect x="568.0" y="163.0" width="19.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.0" y="174.0"></text>
</g>
<g>
<title>byte[] (794 samples, 1.67%)</title><rect x="568.0" y="147.0" width="19.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="571.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (1,525 samples, 3.20%)</title><rect x="587.6" y="179.0" width="37.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.6" y="190.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (1,525 samples, 3.20%)</title><rect x="587.6" y="163.0" width="37.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.6" y="174.0">ru/..</text>
</g>
<g>
<title>byte[] (1,525 samples, 3.20%)</title><rect x="587.6" y="147.0" width="37.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="590.6" y="158.0">byt..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (22,787 samples, 47.85%)</title><rect x="625.4" y="323.0" width="564.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.4" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,412 samples, 2.96%)</title><rect x="625.4" y="307.0" width="35.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.4" y="318.0">on..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,412 samples, 2.96%)</title><rect x="625.4" y="291.0" width="35.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="628.4" y="302.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (21,375 samples, 44.88%)</title><rect x="660.4" y="307.0" width="529.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.4" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (21,375 samples, 44.88%)</title><rect x="660.4" y="291.0" width="529.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.4" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21,375 samples, 44.88%)</title><rect x="660.4" y="275.0" width="529.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.4" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,693 samples, 16.15%)</title><rect x="660.4" y="259.0" width="190.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.4" y="270.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,693 samples, 16.15%)</title><rect x="660.4" y="243.0" width="190.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.4" y="254.0">one/nio/http/HttpServer.h..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (6,075 samples, 12.76%)</title><rect x="660.4" y="227.0" width="150.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.4" y="238.0">RequestHandler0_ent..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,669 samples, 3.50%)</title><rect x="660.4" y="211.0" width="41.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.4" y="222.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,669 samples, 3.50%)</title><rect x="660.4" y="195.0" width="41.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="663.4" y="206.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,669 samples, 3.50%)</title><rect x="660.4" y="179.0" width="41.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.4" y="190.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,669 samples, 3.50%)</title><rect x="660.4" y="163.0" width="41.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.4" y="174.0">jav..</text>
</g>
<g>
<title>java.lang.String (620 samples, 1.30%)</title><rect x="660.4" y="147.0" width="15.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="663.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,049 samples, 2.20%)</title><rect x="675.8" y="147.0" width="25.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.8" y="158.0">j..</text>
</g>
<g>
<title>byte[] (1,049 samples, 2.20%)</title><rect x="675.8" y="131.0" width="25.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="678.8" y="142.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.entity (4,406 samples, 9.25%)</title><rect x="701.7" y="211.0" width="109.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.7" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.getBytes (812 samples, 1.70%)</title><rect x="701.7" y="195.0" width="20.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (812 samples, 1.70%)</title><rect x="701.7" y="179.0" width="20.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (812 samples, 1.70%)</title><rect x="701.7" y="163.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (812 samples, 1.70%)</title><rect x="701.7" y="147.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.7" y="158.0"></text>
</g>
<g>
<title>byte[] (812 samples, 1.70%)</title><rect x="701.7" y="131.0" width="20.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="704.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (647 samples, 1.36%)</title><rect x="721.9" y="195.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (647 samples, 1.36%)</title><rect x="721.9" y="179.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/652582163.get$Lambda (647 samples, 1.36%)</title><rect x="721.9" y="163.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.AsyncService$$Lambda$69 (647 samples, 1.36%)</title><rect x="721.9" y="147.0" width="16.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="724.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.runAsyncHandler (753 samples, 1.58%)</title><rect x="737.9" y="195.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (753 samples, 1.58%)</title><rect x="737.9" y="179.0" width="18.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (753 samples, 1.58%)</title><rect x="737.9" y="163.0" width="18.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.get$Lambda (753 samples, 1.58%)</title><rect x="737.9" y="147.0" width="18.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.AsyncService$$Lambda$67 (753 samples, 1.58%)</title><rect x="737.9" y="131.0" width="18.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="740.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (2,194 samples, 4.61%)</title><rect x="756.6" y="195.0" width="54.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.6" y="206.0">ru/ma..</text>
</g>
<g>
<title>byte[] (837 samples, 1.76%)</title><rect x="756.6" y="179.0" width="20.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="759.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,357 samples, 2.85%)</title><rect x="777.3" y="179.0" width="33.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.3" y="190.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,357 samples, 2.85%)</title><rect x="777.3" y="163.0" width="33.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.3" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,357 samples, 2.85%)</title><rect x="777.3" y="147.0" width="33.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="780.3" y="158.0">ja..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,618 samples, 3.40%)</title><rect x="810.9" y="227.0" width="40.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.9" y="238.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,618 samples, 3.40%)</title><rect x="810.9" y="211.0" width="40.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.9" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,618 samples, 3.40%)</title><rect x="810.9" y="195.0" width="40.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.9" y="206.0">jav..</text>
</g>
<g>
<title>java.lang.String (548 samples, 1.15%)</title><rect x="810.9" y="179.0" width="13.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="813.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,070 samples, 2.25%)</title><rect x="824.5" y="179.0" width="26.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.5" y="190.0">j..</text>
</g>
<g>
<title>byte[] (1,070 samples, 2.25%)</title><rect x="824.5" y="163.0" width="26.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="827.5" y="174.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7,083 samples, 14.87%)</title><rect x="851.0" y="259.0" width="175.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.0" y="270.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one.nio.http.Request (1,131 samples, 2.37%)</title><rect x="851.0" y="243.0" width="28.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="854.0" y="254.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,123 samples, 4.46%)</title><rect x="879.0" y="243.0" width="52.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.0" y="254.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (2,123 samples, 4.46%)</title><rect x="879.0" y="227.0" width="52.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="882.0" y="238.0">java...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,829 samples, 8.04%)</title><rect x="931.6" y="243.0" width="94.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="934.6" y="254.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,829 samples, 8.04%)</title><rect x="931.6" y="227.0" width="94.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.6" y="238.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (1,897 samples, 3.98%)</title><rect x="931.6" y="211.0" width="47.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="934.6" y="222.0">char[]</text>
</g>
<g>
<title>java.lang.String (611 samples, 1.28%)</title><rect x="978.6" y="211.0" width="15.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="981.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,321 samples, 2.77%)</title><rect x="993.8" y="211.0" width="32.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.8" y="222.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,321 samples, 2.77%)</title><rect x="993.8" y="195.0" width="32.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="996.8" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,321 samples, 2.77%)</title><rect x="993.8" y="179.0" width="32.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.8" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (1,321 samples, 2.77%)</title><rect x="993.8" y="163.0" width="32.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="996.8" y="174.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,599 samples, 13.86%)</title><rect x="1026.5" y="259.0" width="163.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1029.5" y="270.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,599 samples, 13.86%)</title><rect x="1026.5" y="243.0" width="163.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1029.5" y="254.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (3,460 samples, 7.27%)</title><rect x="1026.5" y="227.0" width="85.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1029.5" y="238.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,024 samples, 2.15%)</title><rect x="1112.2" y="227.0" width="25.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1115.2" y="238.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,115 samples, 4.44%)</title><rect x="1137.6" y="227.0" width="52.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.6" y="238.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,115 samples, 4.44%)</title><rect x="1137.6" y="211.0" width="52.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.6" y="222.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,115 samples, 4.44%)</title><rect x="1137.6" y="195.0" width="52.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1140.6" y="206.0">java/..</text>
</g>
<g>
<title>byte[] (2,115 samples, 4.44%)</title><rect x="1137.6" y="179.0" width="52.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1140.6" y="190.0">byte[]</text>
</g>
</g>
</svg>
