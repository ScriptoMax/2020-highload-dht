<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Replication control | CPU</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (8,175 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (433 samples, 5.30%)</title><rect x="10.0" y="899.0" width="62.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="910.0">/usr/l..</text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (433 samples, 5.30%)</title><rect x="10.0" y="883.0" width="62.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="894.0">rocksd..</text>
</g>
<g>
<title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (433 samples, 5.30%)</title><rect x="10.0" y="867.0" width="62.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="878.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::BGWorkCompaction(void*) (345 samples, 4.22%)</title><rect x="10.0" y="851.0" width="49.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="862.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) (345 samples, 4.22%)</title><rect x="10.0" y="835.0" width="49.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="846.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) (343 samples, 4.20%)</title><rect x="10.0" y="819.0" width="49.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="830.0">rocks..</text>
</g>
<g>
<title>rocksdb::CompactionJob::Run() (343 samples, 4.20%)</title><rect x="10.0" y="803.0" width="49.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="814.0">rocks..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::FileSize() const (3 samples, 0.04%)</title><rect x="10.0" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*) (338 samples, 4.13%)</title><rect x="10.4" y="787.0" width="48.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.4" y="798.0">rock..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 0.69%)</title><rect x="11.3" y="771.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector::InternalAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long) (2 samples, 0.02%)</title><rect x="12.3" y="755.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Flush() (11 samples, 0.13%)</title><rect x="12.6" y="755.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, bool) (10 samples, 0.12%)</title><rect x="12.6" y="739.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, bool) (10 samples, 0.12%)</title><rect x="12.6" y="723.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.6" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (2 samples, 0.02%)</title><rect x="12.6" y="707.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="15.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, bool) (4 samples, 0.05%)</title><rect x="13.2" y="707.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.2" y="718.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="13.2" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="16.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="13.5" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (10 samples, 0.12%)</title><rect x="14.5" y="755.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.06%)</title><rect x="15.9" y="755.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.05%)</title><rect x="16.6" y="755.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="19.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (3 samples, 0.04%)</title><rect x="17.5" y="755.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::string*, rocksdb::Slice const*, rocksdb::BlockHandle const&amp;) (3 samples, 0.04%)</title><rect x="17.9" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.9" y="766.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (6 samples, 0.07%)</title><rect x="18.5" y="755.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (2 samples, 0.02%)</title><rect x="19.5" y="771.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="22.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (252 samples, 3.08%)</title><rect x="19.8" y="771.0" width="36.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.8" y="782.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (4 samples, 0.05%)</title><rect x="20.5" y="755.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="23.5" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.07%)</title><rect x="21.1" y="755.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.1" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.04%)</title><rect x="22.0" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="25.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (153 samples, 1.87%)</title><rect x="22.7" y="755.0" width="22.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="25.7" y="766.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (3 samples, 0.04%)</title><rect x="26.9" y="739.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="29.9" y="750.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.02%)</title><rect x="27.3" y="739.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="30.3" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="27.6" y="739.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="30.6" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.02%)</title><rect x="28.0" y="739.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="31.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (109 samples, 1.33%)</title><rect x="28.5" y="739.0" width="15.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.5" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (7 samples, 0.09%)</title><rect x="32.4" y="723.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="35.4" y="734.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.06%)</title><rect x="33.4" y="723.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.4" y="734.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (9 samples, 0.11%)</title><rect x="34.1" y="723.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="37.1" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="35.4" y="723.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="38.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (2 samples, 0.02%)</title><rect x="36.1" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (53 samples, 0.65%)</title><rect x="36.6" y="723.0" width="7.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (49 samples, 0.60%)</title><rect x="37.1" y="707.0" width="7.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="40.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::FindBlockForward() (35 samples, 0.43%)</title><rect x="37.3" y="691.0" width="5.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="40.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (32 samples, 0.39%)</title><rect x="37.3" y="675.0" width="4.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="40.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (31 samples, 0.38%)</title><rect x="37.4" y="659.0" width="4.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="40.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (4 samples, 0.05%)</title><rect x="37.6" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="40.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (2 samples, 0.02%)</title><rect x="37.9" y="627.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="40.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (26 samples, 0.32%)</title><rect x="38.1" y="643.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="41.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (21 samples, 0.26%)</title><rect x="38.3" y="627.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="41.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (16 samples, 0.20%)</title><rect x="38.9" y="611.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="41.9" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (6 samples, 0.07%)</title><rect x="39.0" y="595.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="42.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (2 samples, 0.02%)</title><rect x="40.0" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="43.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (5 samples, 0.06%)</title><rect x="40.5" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="43.5" y="606.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.02%)</title><rect x="40.5" y="579.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (2 samples, 0.02%)</title><rect x="41.6" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="44.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.02%)</title><rect x="41.6" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="44.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.02%)</title><rect x="41.6" y="595.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="44.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.02%)</title><rect x="41.6" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="44.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (10 samples, 0.12%)</title><rect x="42.6" y="691.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="45.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (3 samples, 0.04%)</title><rect x="44.2" y="739.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="47.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::PrepareOutput() (2 samples, 0.02%)</title><rect x="44.8" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="47.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (73 samples, 0.89%)</title><rect x="45.2" y="755.0" width="10.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="48.2" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (5 samples, 0.06%)</title><rect x="47.4" y="739.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="50.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::CheckOutOfBound() (3 samples, 0.04%)</title><rect x="48.4" y="739.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="51.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (47 samples, 0.57%)</title><rect x="49.0" y="739.0" width="6.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="52.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (40 samples, 0.49%)</title><rect x="50.0" y="723.0" width="5.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="53.0" y="734.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="50.3" y="707.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="53.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::FindBlockForward() (29 samples, 0.35%)</title><rect x="50.7" y="707.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="53.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (22 samples, 0.27%)</title><rect x="51.1" y="691.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="54.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (21 samples, 0.26%)</title><rect x="51.3" y="675.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="54.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (2 samples, 0.02%)</title><rect x="51.4" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="54.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (2 samples, 0.02%)</title><rect x="51.4" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="54.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Insert(rocksdb::LRUHandle*) (2 samples, 0.02%)</title><rect x="51.4" y="627.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="54.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.02%)</title><rect x="51.4" y="611.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="54.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (18 samples, 0.22%)</title><rect x="51.7" y="659.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="54.7" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (13 samples, 0.16%)</title><rect x="52.1" y="643.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="55.1" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="52.3" y="627.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="55.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (10 samples, 0.12%)</title><rect x="52.6" y="627.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="55.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (4 samples, 0.05%)</title><rect x="52.6" y="611.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="55.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (2 samples, 0.02%)</title><rect x="53.2" y="611.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="56.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::PosixRandomAccessFile::Read(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::Slice*, char*, rocksdb::IODebugContext*) const (2 samples, 0.02%)</title><rect x="53.2" y="595.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="56.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (4 samples, 0.05%)</title><rect x="53.4" y="611.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="56.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MemoryAllocator*) (2 samples, 0.02%)</title><rect x="53.7" y="595.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="56.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (2 samples, 0.02%)</title><rect x="54.0" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="57.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (6 samples, 0.07%)</title><rect x="54.9" y="707.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::key() const (2 samples, 0.02%)</title><rect x="55.9" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="58.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::CompactionJob::SubcompactionState::ShouldStopBefore(rocksdb::Slice const&amp;, unsigned long) (3 samples, 0.04%)</title><rect x="56.5" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="59.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::FileMetaData::UpdateBoundaries(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, rocksdb::ValueType) (5 samples, 0.06%)</title><rect x="56.9" y="771.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="59.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Next() (2 samples, 0.02%)</title><rect x="57.8" y="771.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="60.8" y="782.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (5 samples, 0.06%)</title><rect x="58.5" y="771.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="61.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::FileMetaData::UpdateBoundaries(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, rocksdb::ValueType) (2 samples, 0.02%)</title><rect x="59.2" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="62.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&amp;, bool) (2 samples, 0.02%)</title><rect x="59.5" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="62.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::string const&amp;, std::string const&amp;, rocksdb::FileType, unsigned long) (2 samples, 0.02%)</title><rect x="59.5" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="62.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::string const&amp;, std::string const&amp;, bool, bool) (2 samples, 0.02%)</title><rect x="59.5" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::string const&amp;, std::string const&amp;, bool) (2 samples, 0.02%)</title><rect x="59.5" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="62.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::DeleteScheduler::DeleteFile(std::string const&amp;, std::string const&amp;, bool) (2 samples, 0.02%)</title><rect x="59.5" y="755.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="62.5" y="766.0"></text>
</g>
<g>
<title>__GI___unlink (2 samples, 0.02%)</title><rect x="59.5" y="739.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="62.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="59.5" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="62.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="59.5" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_unlink (2 samples, 0.02%)</title><rect x="59.5" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="62.5" y="702.0"></text>
</g>
<g>
<title>do_unlinkat (2 samples, 0.02%)</title><rect x="59.5" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="62.5" y="686.0"></text>
</g>
<g>
<title>iput (2 samples, 0.02%)</title><rect x="59.5" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.5" y="670.0"></text>
</g>
<g>
<title>evict (2 samples, 0.02%)</title><rect x="59.5" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.5" y="654.0"></text>
</g>
<g>
<title>ext4_evict_inode (2 samples, 0.02%)</title><rect x="59.5" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.5" y="638.0"></text>
</g>
<g>
<title>truncate_inode_pages_final (2 samples, 0.02%)</title><rect x="59.5" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.5" y="622.0"></text>
</g>
<g>
<title>truncate_inode_pages_range (2 samples, 0.02%)</title><rect x="59.5" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="62.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (88 samples, 1.08%)</title><rect x="59.8" y="851.0" width="12.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="62.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (85 samples, 1.04%)</title><rect x="59.8" y="835.0" width="12.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="62.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, 8ul&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (85 samples, 1.04%)</title><rect x="59.8" y="819.0" width="12.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="62.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (85 samples, 1.04%)</title><rect x="59.8" y="803.0" width="12.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="62.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*) (85 samples, 1.04%)</title><rect x="59.8" y="787.0" width="12.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="62.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::FlushJob::WriteLevel0Table() (85 samples, 1.04%)</title><rect x="59.8" y="771.0" width="12.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::BuildTable(std::string const&amp;, rocksdb::Env*, rocksdb::FileSystem*, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&amp;, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::default_del (83 samples, 1.02%)</title><rect x="60.1" y="755.0" width="12.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="63.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (27 samples, 0.33%)</title><rect x="61.0" y="739.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="64.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::Flush() (7 samples, 0.09%)</title><rect x="61.5" y="723.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="64.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, bool) (7 samples, 0.09%)</title><rect x="61.5" y="707.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="64.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, bool) (7 samples, 0.09%)</title><rect x="61.5" y="691.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="64.5" y="702.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (3 samples, 0.04%)</title><rect x="61.5" y="675.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="64.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext&amp;, rocksdb::UncompressionContext*, std::string*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (4 samples, 0.05%)</title><rect x="62.0" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="65.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::string*, std::string*, std::string*) (4 samples, 0.05%)</title><rect x="62.0" y="659.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="65.0" y="670.0"></text>
</g>
<g>
<title>__memset_erms (2 samples, 0.02%)</title><rect x="62.1" y="643.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="65.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (5 samples, 0.06%)</title><rect x="62.5" y="723.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="65.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.02%)</title><rect x="63.3" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="66.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (3 samples, 0.04%)</title><rect x="63.7" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="66.7" y="734.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="64.3" y="723.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="67.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::Next() (31 samples, 0.38%)</title><rect x="65.0" y="739.0" width="4.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="68.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::NextFromInput() (21 samples, 0.26%)</title><rect x="66.1" y="723.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="69.1" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (3 samples, 0.04%)</title><rect x="67.3" y="707.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="70.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Next() (3 samples, 0.04%)</title><rect x="68.0" y="707.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="71.0" y="718.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="68.2" y="691.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="71.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (4 samples, 0.05%)</title><rect x="68.5" y="707.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="71.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::CompactionIterator::PrepareOutput() (2 samples, 0.02%)</title><rect x="69.5" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="72.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::FlushBlockBySizePolicy::Update(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="69.8" y="739.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="72.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Next() (2 samples, 0.02%)</title><rect x="70.0" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="73.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (2 samples, 0.02%)</title><rect x="70.3" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="73.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::ThreadStatusUpdater::SetThreadOperationProperty(int, unsigned long) (3 samples, 0.04%)</title><rect x="70.8" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="73.8" y="750.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.02%)</title><rect x="71.5" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="74.5" y="750.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="71.8" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="74.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&amp;, bool) (3 samples, 0.04%)</title><rect x="72.1" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="75.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::string const&amp;, std::string const&amp;, rocksdb::FileType, unsigned long) (3 samples, 0.04%)</title><rect x="72.1" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="75.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::string const&amp;, std::string const&amp;, bool, bool) (3 samples, 0.04%)</title><rect x="72.1" y="803.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="75.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::string const&amp;, std::string const&amp;, bool) (3 samples, 0.04%)</title><rect x="72.1" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="75.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DeleteScheduler::DeleteFile(std::string const&amp;, std::string const&amp;, bool) (3 samples, 0.04%)</title><rect x="72.1" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="75.1" y="782.0"></text>
</g>
<g>
<title>__GI___unlink (3 samples, 0.04%)</title><rect x="72.1" y="755.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="75.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="72.1" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="75.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="72.1" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="75.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_unlink (3 samples, 0.04%)</title><rect x="72.1" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="75.1" y="718.0"></text>
</g>
<g>
<title>do_unlinkat (3 samples, 0.04%)</title><rect x="72.1" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.1" y="702.0"></text>
</g>
<g>
<title>iput (3 samples, 0.04%)</title><rect x="72.1" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.1" y="686.0"></text>
</g>
<g>
<title>evict (3 samples, 0.04%)</title><rect x="72.1" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.1" y="670.0"></text>
</g>
<g>
<title>ext4_evict_inode (3 samples, 0.04%)</title><rect x="72.1" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="75.1" y="654.0"></text>
</g>
<g>
<title>truncate_inode_pages_final (3 samples, 0.04%)</title><rect x="72.1" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.1" y="638.0"></text>
</g>
<g>
<title>truncate_inode_pages_range (3 samples, 0.04%)</title><rect x="72.1" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="75.1" y="622.0"></text>
</g>
<g>
<title>delete_from_page_cache_batch (2 samples, 0.02%)</title><rect x="72.2" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="72.2" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.2" y="590.0"></text>
</g>
<g>
<title>LZ4_compress_fast_continue (6 samples, 0.07%)</title><rect x="72.5" y="899.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="75.5" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (40 samples, 0.49%)</title><rect x="73.4" y="899.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="76.4" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (39 samples, 0.48%)</title><rect x="73.5" y="883.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="76.5" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (37 samples, 0.45%)</title><rect x="73.8" y="867.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="76.8" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (33 samples, 0.40%)</title><rect x="74.2" y="851.0" width="4.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="77.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (6 samples, 0.07%)</title><rect x="74.2" y="835.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="77.2" y="846.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.10%)</title><rect x="75.1" y="835.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="78.1" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.10%)</title><rect x="76.4" y="835.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="79.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="76.7" y="819.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.06%)</title><rect x="76.8" y="803.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="79.8" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="77.3" y="787.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.3" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="77.7" y="835.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="80.7" y="846.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (4 samples, 0.05%)</title><rect x="78.0" y="835.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="81.0" y="846.0"></text>
</g>
<g>
<title>[no_Java_frame] (6 samples, 0.07%)</title><rect x="79.1" y="899.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="82.1" y="910.0"></text>
</g>
<g>
<title>[not_walkable_Java] (9 samples, 0.11%)</title><rect x="80.0" y="899.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="83.0" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.09%)</title><rect x="80.0" y="883.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.0" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.06%)</title><rect x="80.2" y="867.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="83.2" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.05%)</title><rect x="80.3" y="851.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="83.3" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.02%)</title><rect x="80.6" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="83.6" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="80.6" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="83.6" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.02%)</title><rect x="80.6" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="83.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.21%)</title><rect x="81.3" y="899.0" width="14.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="84.3" y="910.0"></text>
</g>
<g>
<title>LZ4_compress_fast_continue (29 samples, 0.35%)</title><rect x="81.3" y="883.0" width="4.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="84.3" y="894.0"></text>
</g>
<g>
<title>LZ4_decompress_safe (21 samples, 0.26%)</title><rect x="85.5" y="883.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="88.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.27%)</title><rect x="88.5" y="883.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="91.5" y="894.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (12 samples, 0.15%)</title><rect x="88.5" y="867.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="91.5" y="878.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (3 samples, 0.04%)</title><rect x="90.4" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="93.4" y="878.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (5 samples, 0.06%)</title><rect x="91.0" y="867.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.0" y="878.0"></text>
</g>
<g>
<title>__GI_write (4 samples, 0.05%)</title><rect x="91.7" y="883.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="94.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="91.7" y="867.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="91.7" y="851.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="94.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.05%)</title><rect x="91.7" y="835.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.7" y="846.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 0.05%)</title><rect x="91.7" y="819.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="94.7" y="830.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.05%)</title><rect x="91.7" y="803.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="94.7" y="814.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.05%)</title><rect x="91.7" y="787.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="94.7" y="798.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.05%)</title><rect x="91.7" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="94.7" y="782.0"></text>
</g>
<g>
<title>ext4_file_write_iter (4 samples, 0.05%)</title><rect x="91.7" y="755.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.7" y="766.0"></text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 0.05%)</title><rect x="91.7" y="739.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.7" y="750.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 0.05%)</title><rect x="91.7" y="723.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="94.7" y="734.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.04%)</title><rect x="91.7" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.7" y="718.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.02%)</title><rect x="91.8" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.8" y="702.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.02%)</title><rect x="91.8" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.8" y="686.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (2 samples, 0.02%)</title><rect x="91.8" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="94.8" y="670.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (2 samples, 0.02%)</title><rect x="91.8" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.8" y="654.0"></text>
</g>
<g>
<title>pread64 (21 samples, 0.26%)</title><rect x="92.6" y="883.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="95.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.26%)</title><rect x="92.6" y="867.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="95.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.26%)</title><rect x="92.6" y="851.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (15 samples, 0.18%)</title><rect x="93.4" y="835.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="96.4" y="846.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.18%)</title><rect x="93.4" y="819.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="96.4" y="830.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.17%)</title><rect x="93.6" y="803.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="96.6" y="814.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.15%)</title><rect x="93.6" y="787.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="96.6" y="798.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.15%)</title><rect x="93.6" y="771.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.6" y="782.0"></text>
</g>
<g>
<title>ext4_file_read_iter (12 samples, 0.15%)</title><rect x="93.6" y="755.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.6" y="766.0"></text>
</g>
<g>
<title>generic_file_read_iter (11 samples, 0.13%)</title><rect x="93.6" y="739.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="96.6" y="750.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.07%)</title><rect x="93.9" y="723.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="96.9" y="734.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.07%)</title><rect x="93.9" y="707.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="96.9" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="95.3" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.3" y="798.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="95.3" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.3" y="782.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="95.3" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.3" y="766.0"></text>
</g>
<g>
<title>[unknown_Java] (42 samples, 0.51%)</title><rect x="95.6" y="899.0" width="6.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="98.6" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="95.9" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="98.9" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (36 samples, 0.44%)</title><rect x="96.5" y="883.0" width="5.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="99.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.44%)</title><rect x="96.5" y="867.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.44%)</title><rect x="96.5" y="851.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="99.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.39%)</title><rect x="96.9" y="835.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="99.9" y="846.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.38%)</title><rect x="97.0" y="819.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="100.0" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="97.0" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="100.0" y="814.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.32%)</title><rect x="97.3" y="803.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="100.3" y="814.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="97.9" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.9" y="798.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.24%)</title><rect x="98.2" y="787.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.2" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.24%)</title><rect x="98.2" y="771.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="101.2" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.24%)</title><rect x="98.2" y="755.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.2" y="766.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="101.2" y="803.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="104.2" y="814.0"></text>
</g>
<g>
<title>__libc_free (5 samples, 0.06%)</title><rect x="101.8" y="899.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="104.8" y="910.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (12 samples, 0.15%)</title><rect x="102.5" y="899.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="105.5" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (37 samples, 0.45%)</title><rect x="104.3" y="899.0" width="5.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="107.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.24%)</title><rect x="106.7" y="883.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="109.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.24%)</title><rect x="106.7" y="867.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.20%)</title><rect x="107.3" y="851.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.3" y="862.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.18%)</title><rect x="107.3" y="835.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.3" y="846.0"></text>
</g>
<g>
<title>futex_wait (15 samples, 0.18%)</title><rect x="107.3" y="819.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="110.3" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 0.15%)</title><rect x="107.6" y="803.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.6" y="814.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (8 samples, 0.10%)</title><rect x="107.7" y="787.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.10%)</title><rect x="107.7" y="771.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.7" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="109.6" y="899.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="112.6" y="910.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.02%)</title><rect x="110.0" y="899.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="113.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5,861 samples, 71.69%)</title><rect x="110.5" y="899.0" width="846.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.5" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5,861 samples, 71.69%)</title><rect x="110.5" y="883.0" width="846.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.5" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5,861 samples, 71.69%)</title><rect x="110.5" y="867.0" width="846.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.5" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 0.06%)</title><rect x="111.8" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (9 samples, 0.11%)</title><rect x="112.5" y="851.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.11%)</title><rect x="112.5" y="835.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.11%)</title><rect x="112.5" y="819.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.11%)</title><rect x="112.5" y="803.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.run (3 samples, 0.04%)</title><rect x="113.3" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (398 samples, 4.87%)</title><rect x="113.8" y="851.0" width="57.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.8" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (397 samples, 4.86%)</title><rect x="113.9" y="835.0" width="57.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.9" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (5 samples, 0.06%)</title><rect x="114.4" y="819.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.06%)</title><rect x="114.4" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.06%)</title><rect x="114.4" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.06%)</title><rect x="114.4" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (372 samples, 4.55%)</title><rect x="115.1" y="819.0" width="53.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.1" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.05%)</title><rect x="115.8" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (16 samples, 0.20%)</title><rect x="116.4" y="803.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.20%)</title><rect x="116.4" y="787.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="118.1" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.02%)</title><rect x="118.1" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.02%)</title><rect x="118.4" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (6 samples, 0.07%)</title><rect x="118.7" y="803.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (6 samples, 0.07%)</title><rect x="118.7" y="787.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (337 samples, 4.12%)</title><rect x="119.6" y="803.0" width="48.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.6" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.02%)</title><rect x="120.0" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (332 samples, 4.06%)</title><rect x="120.3" y="787.0" width="47.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.3" y="798.0">jdk/..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.02%)</title><rect x="122.3" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="125.3" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.05%)</title><rect x="122.6" y="771.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="125.6" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="123.2" y="771.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="126.2" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (161 samples, 1.97%)</title><rect x="123.6" y="771.0" width="23.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="126.6" y="782.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.04%)</title><rect x="124.9" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="127.9" y="766.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="125.3" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="128.3" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.02%)</title><rect x="125.8" y="755.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="128.8" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (26 samples, 0.32%)</title><rect x="126.1" y="755.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="129.1" y="766.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.02%)</title><rect x="128.5" y="739.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="131.5" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="128.9" y="739.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="131.9" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.02%)</title><rect x="129.2" y="739.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="132.2" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.02%)</title><rect x="129.5" y="739.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="132.5" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="129.9" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="132.9" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="130.2" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="133.2" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (3 samples, 0.04%)</title><rect x="130.7" y="755.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="133.7" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (78 samples, 0.95%)</title><rect x="131.1" y="755.0" width="11.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="134.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 0.83%)</title><rect x="132.5" y="739.0" width="9.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="135.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 0.82%)</title><rect x="132.7" y="723.0" width="9.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="135.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.31%)</title><rect x="138.5" y="707.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.5" y="718.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.27%)</title><rect x="138.6" y="691.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="141.6" y="702.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.13%)</title><rect x="139.0" y="675.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="142.0" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="139.9" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="142.9" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (3 samples, 0.04%)</title><rect x="140.2" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="143.2" y="670.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.06%)</title><rect x="140.6" y="675.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="143.6" y="686.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="141.4" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="144.4" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="141.8" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="144.8" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="142.1" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="145.1" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.05%)</title><rect x="142.4" y="755.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="145.4" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="142.9" y="755.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="145.9" y="766.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (4 samples, 0.05%)</title><rect x="143.5" y="755.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="146.5" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.05%)</title><rect x="144.1" y="755.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="147.1" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (12 samples, 0.15%)</title><rect x="144.8" y="755.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="147.8" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.02%)</title><rect x="146.5" y="755.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="149.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (143 samples, 1.75%)</title><rect x="146.8" y="771.0" width="20.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="149.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (4 samples, 0.05%)</title><rect x="146.8" y="755.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="149.8" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (22 samples, 0.27%)</title><rect x="147.6" y="755.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="150.6" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (114 samples, 1.39%)</title><rect x="151.0" y="755.0" width="16.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="154.0" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 0.81%)</title><rect x="158.0" y="739.0" width="9.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="161.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="158.0" y="723.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="161.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 0.78%)</title><rect x="158.2" y="723.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="161.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 0.35%)</title><rect x="162.7" y="707.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.7" y="718.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.33%)</title><rect x="163.0" y="691.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="166.0" y="702.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 0.27%)</title><rect x="163.6" y="675.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="166.6" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.07%)</title><rect x="164.3" y="659.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="167.3" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="164.9" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="167.9" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.09%)</title><rect x="165.2" y="659.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="168.2" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.02%)</title><rect x="165.9" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.9" y="654.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="166.3" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="169.3" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="166.9" y="707.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="169.9" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.06%)</title><rect x="167.5" y="771.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="170.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.05%)</title><rect x="168.2" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.21%)</title><rect x="168.8" y="819.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.21%)</title><rect x="168.8" y="803.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.21%)</title><rect x="168.8" y="787.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.21%)</title><rect x="168.8" y="771.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.20%)</title><rect x="168.9" y="755.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.9" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.16%)</title><rect x="169.4" y="739.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="172.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.13%)</title><rect x="169.6" y="723.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.13%)</title><rect x="169.6" y="707.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.11%)</title><rect x="169.9" y="691.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.9" y="702.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.10%)</title><rect x="170.1" y="675.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="173.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.10%)</title><rect x="170.1" y="659.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="173.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.10%)</title><rect x="170.1" y="643.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="173.1" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.10%)</title><rect x="170.1" y="627.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="173.1" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.09%)</title><rect x="170.2" y="611.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="173.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.run (5,440 samples, 66.54%)</title><rect x="171.2" y="851.0" width="785.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.2" y="862.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$7 (5,440 samples, 66.54%)</title><rect x="171.2" y="835.0" width="785.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.2" y="846.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$7</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,507 samples, 18.43%)</title><rect x="171.2" y="819.0" width="217.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.2" y="830.0">one/nio/http/HttpSession.send..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.09%)</title><rect x="175.7" y="803.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="178.7" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.09%)</title><rect x="175.7" y="787.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="178.7" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.09%)</title><rect x="175.7" y="771.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="178.7" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (7 samples, 0.09%)</title><rect x="175.7" y="755.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="178.7" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="176.9" y="803.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="179.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,440 samples, 17.61%)</title><rect x="177.4" y="803.0" width="207.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.4" y="814.0">one/nio/http/HttpSession.wr..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (44 samples, 0.54%)</title><rect x="178.3" y="787.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="181.2" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.2" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="181.2" y="755.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="184.2" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="181.2" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="184.2" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="181.2" y="723.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="184.2" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="181.2" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="184.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.26%)</title><rect x="181.5" y="771.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="184.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (21 samples, 0.26%)</title><rect x="181.5" y="755.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (21 samples, 0.26%)</title><rect x="181.5" y="739.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="184.2" y="723.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="187.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,390 samples, 17.00%)</title><rect x="184.7" y="787.0" width="200.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.7" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,389 samples, 16.99%)</title><rect x="184.8" y="771.0" width="200.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.8" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (2 samples, 0.02%)</title><rect x="186.2" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="189.2" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.18%)</title><rect x="186.5" y="755.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="189.5" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (13 samples, 0.16%)</title><rect x="186.7" y="739.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="189.7" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (12 samples, 0.15%)</title><rect x="186.7" y="723.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="189.7" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="188.0" y="707.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="191.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,361 samples, 16.65%)</title><rect x="188.8" y="755.0" width="196.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.8" y="766.0">one/nio/net/Session$ArrayQ..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.02%)</title><rect x="189.7" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,353 samples, 16.55%)</title><rect x="190.0" y="739.0" width="195.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.0" y="750.0">one/nio/net/NativeSocket...</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (40 samples, 0.49%)</title><rect x="194.2" y="723.0" width="5.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="197.2" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="196.2" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="199.2" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.07%)</title><rect x="196.5" y="707.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="199.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.15%)</title><rect x="197.5" y="707.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="200.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="197.9" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="200.9" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.07%)</title><rect x="198.4" y="691.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="201.4" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.04%)</title><rect x="198.8" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="201.8" y="686.0"></text>
</g>
<g>
<title>memmove@plt (3 samples, 0.04%)</title><rect x="199.2" y="707.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="202.2" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.04%)</title><rect x="200.0" y="723.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="203.0" y="734.0"></text>
</g>
<g>
<title>__libc_send (1,278 samples, 15.63%)</title><rect x="200.5" y="723.0" width="184.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="203.5" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,253 samples, 15.33%)</title><rect x="204.1" y="707.0" width="180.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.1" y="718.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.04%)</title><rect x="204.1" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="207.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1,249 samples, 15.28%)</title><rect x="204.7" y="691.0" width="180.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="207.7" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.02%)</title><rect x="212.5" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1,191 samples, 14.57%)</title><rect x="212.8" y="675.0" width="171.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="215.8" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,186 samples, 14.51%)</title><rect x="213.1" y="659.0" width="171.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="216.1" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="215.5" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="218.5" y="654.0"></text>
</g>
<g>
<title>fput (4 samples, 0.05%)</title><rect x="215.8" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="218.8" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1,150 samples, 14.07%)</title><rect x="216.7" y="643.0" width="166.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="219.7" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.02%)</title><rect x="217.1" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="220.1" y="638.0"></text>
</g>
<g>
<title>inet_sendmsg (1,134 samples, 13.87%)</title><rect x="217.4" y="627.0" width="163.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="220.4" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,129 samples, 13.81%)</title><rect x="218.0" y="611.0" width="163.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="221.0" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="218.1" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="218.6" y="595.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="221.6" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (10 samples, 0.12%)</title><rect x="219.2" y="595.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.2" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="219.4" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.06%)</title><rect x="219.9" y="579.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.9" y="590.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.06%)</title><rect x="220.6" y="595.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="223.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="220.7" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="223.7" y="590.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="221.5" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="224.5" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (4 samples, 0.05%)</title><rect x="222.2" y="595.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="225.2" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="222.8" y="595.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="225.8" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.02%)</title><rect x="223.0" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="226.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,091 samples, 13.35%)</title><rect x="223.3" y="595.0" width="157.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.3" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (9 samples, 0.11%)</title><rect x="227.7" y="579.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.7" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.09%)</title><rect x="228.0" y="563.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="231.0" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.02%)</title><rect x="229.1" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="232.1" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (15 samples, 0.18%)</title><rect x="229.4" y="579.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.4" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (12 samples, 0.15%)</title><rect x="229.5" y="563.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="232.5" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.02%)</title><rect x="231.3" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="234.3" y="574.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.02%)</title><rect x="231.7" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="234.7" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (54 samples, 0.66%)</title><rect x="232.0" y="579.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="235.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (48 samples, 0.59%)</title><rect x="232.1" y="563.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (22 samples, 0.27%)</title><rect x="233.2" y="547.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="236.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (19 samples, 0.23%)</title><rect x="233.3" y="531.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="236.3" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (8 samples, 0.10%)</title><rect x="234.6" y="515.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="237.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.22%)</title><rect x="236.3" y="547.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="239.3" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="238.6" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="241.6" y="542.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.05%)</title><rect x="239.2" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="242.2" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.02%)</title><rect x="239.8" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="242.8" y="590.0"></text>
</g>
<g>
<title>tcp_push (948 samples, 11.60%)</title><rect x="240.2" y="579.0" width="136.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="243.2" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (942 samples, 11.52%)</title><rect x="240.7" y="563.0" width="135.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="243.7" y="574.0">__tcp_push_pendin..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="240.7" y="547.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.7" y="558.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.06%)</title><rect x="240.9" y="547.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.9" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="241.8" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="244.8" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (5 samples, 0.06%)</title><rect x="242.1" y="547.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="245.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (927 samples, 11.34%)</title><rect x="242.8" y="547.0" width="133.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="245.8" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="246.7" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="249.7" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (844 samples, 10.32%)</title><rect x="247.0" y="531.0" width="121.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="250.0" y="542.0">__tcp_transmit_..</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="251.1" y="515.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="254.1" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.02%)</title><rect x="251.3" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="254.3" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (786 samples, 9.61%)</title><rect x="251.6" y="515.0" width="113.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="254.6" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (777 samples, 9.50%)</title><rect x="251.8" y="499.0" width="112.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="254.8" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (764 samples, 9.35%)</title><rect x="253.1" y="483.0" width="110.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.1" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.02%)</title><rect x="253.5" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="256.5" y="478.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.02%)</title><rect x="253.5" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="256.5" y="462.0"></text>
</g>
<g>
<title>ip_output (758 samples, 9.27%)</title><rect x="253.8" y="467.0" width="109.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="256.8" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="253.8" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (753 samples, 9.21%)</title><rect x="254.2" y="451.0" width="108.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.2" y="462.0">ip_finish_out..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.10%)</title><rect x="254.9" y="435.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="257.9" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (736 samples, 9.00%)</title><rect x="256.4" y="435.0" width="106.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="259.4" y="446.0">ip_finish_out..</text>
</g>
<g>
<title>__local_bh_enable_ip (644 samples, 7.88%)</title><rect x="258.8" y="419.0" width="93.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="261.8" y="430.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.21 (643 samples, 7.87%)</title><rect x="259.0" y="403.0" width="92.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="262.0" y="414.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (632 samples, 7.73%)</title><rect x="260.4" y="387.0" width="91.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.4" y="398.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (631 samples, 7.72%)</title><rect x="260.4" y="371.0" width="91.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="263.4" y="382.0">__softirqen..</text>
</g>
<g>
<title>net_rx_action (614 samples, 7.51%)</title><rect x="262.6" y="355.0" width="88.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="265.6" y="366.0">net_rx_act..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.02%)</title><rect x="264.0" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="267.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (601 samples, 7.35%)</title><rect x="264.5" y="339.0" width="86.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="267.5" y="350.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (586 samples, 7.17%)</title><rect x="266.2" y="323.0" width="84.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.2" y="334.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (582 samples, 7.12%)</title><rect x="266.5" y="307.0" width="84.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.5" y="318.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (16 samples, 0.20%)</title><rect x="266.5" y="291.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="269.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (565 samples, 6.91%)</title><rect x="268.8" y="291.0" width="81.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="271.8" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.04%)</title><rect x="268.8" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (13 samples, 0.16%)</title><rect x="269.2" y="275.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="272.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (546 samples, 6.68%)</title><rect x="271.1" y="275.0" width="78.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="274.1" y="286.0">ip_rcv_fi..</text>
</g>
<g>
<title>ip_local_deliver (540 samples, 6.61%)</title><rect x="271.3" y="259.0" width="77.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="274.3" y="270.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (538 samples, 6.58%)</title><rect x="271.4" y="243.0" width="77.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="274.4" y="254.0">ip_local_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (535 samples, 6.54%)</title><rect x="271.4" y="227.0" width="77.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="274.4" y="238.0">ip_protoc..</text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.04%)</title><rect x="272.4" y="211.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="275.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (524 samples, 6.41%)</title><rect x="273.0" y="211.0" width="75.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="276.0" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (21 samples, 0.26%)</title><rect x="275.9" y="195.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="278.9" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.02%)</title><rect x="278.6" y="179.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.6" y="190.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (4 samples, 0.05%)</title><rect x="278.9" y="195.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="281.9" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="279.6" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="282.6" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.09%)</title><rect x="279.9" y="195.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="282.9" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="280.2" y="179.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="283.2" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="280.6" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.6" y="190.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.02%)</title><rect x="280.9" y="195.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="283.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (466 samples, 5.70%)</title><rect x="281.2" y="195.0" width="67.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="284.2" y="206.0">tcp_v4_..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.02%)</title><rect x="281.2" y="179.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="284.2" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.02%)</title><rect x="281.7" y="179.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="284.7" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="281.9" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="284.9" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (459 samples, 5.61%)</title><rect x="282.2" y="179.0" width="66.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="285.2" y="190.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (25 samples, 0.31%)</title><rect x="283.5" y="163.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="286.5" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="284.1" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="287.1" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (19 samples, 0.23%)</title><rect x="284.4" y="147.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.4" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.21%)</title><rect x="284.7" y="131.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="287.7" y="142.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.18%)</title><rect x="285.0" y="115.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="288.0" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.11%)</title><rect x="285.7" y="99.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="288.7" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.05%)</title><rect x="287.1" y="163.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="290.1" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.04%)</title><rect x="287.9" y="163.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.9" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.02%)</title><rect x="288.3" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="291.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (116 samples, 1.42%)</title><rect x="288.6" y="163.0" width="16.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="291.6" y="174.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.02%)</title><rect x="292.8" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.8" y="158.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.02%)</title><rect x="293.2" y="147.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="296.2" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (75 samples, 0.92%)</title><rect x="293.5" y="147.0" width="10.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (35 samples, 0.43%)</title><rect x="296.2" y="131.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.2" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (13 samples, 0.16%)</title><rect x="296.4" y="115.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="299.4" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.12%)</title><rect x="296.8" y="99.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="299.8" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="297.7" y="83.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="300.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (17 samples, 0.21%)</title><rect x="298.4" y="115.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="301.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.21%)</title><rect x="298.4" y="99.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="301.4" y="110.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.11%)</title><rect x="299.6" y="83.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="302.6" y="94.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.11%)</title><rect x="299.6" y="67.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="300.3" y="51.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="303.3" y="62.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="300.9" y="115.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.9" y="126.0"></text>
</g>
<g>
<title>rb_erase (6 samples, 0.07%)</title><rect x="301.9" y="131.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.9" y="142.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.02%)</title><rect x="302.7" y="131.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="305.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (8 samples, 0.10%)</title><rect x="303.0" y="131.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="306.0" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (4 samples, 0.05%)</title><rect x="304.6" y="147.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="307.6" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.05%)</title><rect x="305.3" y="163.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="308.3" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.02%)</title><rect x="305.9" y="163.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="308.9" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (271 samples, 3.31%)</title><rect x="306.2" y="163.0" width="39.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="309.2" y="174.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (249 samples, 3.05%)</title><rect x="307.6" y="147.0" width="36.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="310.6" y="158.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (240 samples, 2.94%)</title><rect x="308.9" y="131.0" width="34.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="311.9" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (239 samples, 2.92%)</title><rect x="308.9" y="115.0" width="34.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="311.9" y="126.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (238 samples, 2.91%)</title><rect x="309.1" y="99.0" width="34.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="312.1" y="110.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.10%)</title><rect x="343.6" y="147.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="346.6" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (4 samples, 0.05%)</title><rect x="344.7" y="147.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="347.7" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.07%)</title><rect x="345.5" y="163.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="348.5" y="174.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="345.7" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.7" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="345.9" y="131.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="348.9" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.02%)</title><rect x="346.3" y="163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="349.3" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.06%)</title><rect x="346.6" y="163.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="349.6" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.02%)</title><rect x="347.3" y="163.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="350.3" y="174.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="347.6" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="350.6" y="174.0"></text>
</g>
<g>
<title>tcp_urg (3 samples, 0.04%)</title><rect x="348.1" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="351.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="348.8" y="227.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="351.8" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (4 samples, 0.05%)</title><rect x="349.3" y="259.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="352.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (3 samples, 0.04%)</title><rect x="349.9" y="275.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.02%)</title><rect x="350.5" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="353.5" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.04%)</title><rect x="350.8" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="353.8" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (73 samples, 0.89%)</title><rect x="351.8" y="419.0" width="10.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.8" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (68 samples, 0.83%)</title><rect x="352.1" y="403.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.1" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (33 samples, 0.40%)</title><rect x="354.4" y="387.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.4" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (26 samples, 0.32%)</title><rect x="354.8" y="371.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="357.8" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.07%)</title><rect x="355.1" y="355.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="358.1" y="366.0"></text>
</g>
<g>
<title>netif_rx (16 samples, 0.20%)</title><rect x="356.0" y="355.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.0" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (15 samples, 0.18%)</title><rect x="356.1" y="339.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="359.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (15 samples, 0.18%)</title><rect x="356.1" y="323.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="359.1" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.05%)</title><rect x="358.6" y="371.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="361.6" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.05%)</title><rect x="359.2" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="362.2" y="398.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.02%)</title><rect x="359.7" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="362.7" y="398.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.02%)</title><rect x="360.0" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="363.0" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (10 samples, 0.12%)</title><rect x="360.3" y="387.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="363.3" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.04%)</title><rect x="360.9" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="363.9" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.02%)</title><rect x="361.3" y="371.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="364.3" y="382.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.02%)</title><rect x="362.1" y="403.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="365.1" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.21 (2 samples, 0.02%)</title><rect x="362.3" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="365.3" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="362.6" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.6" y="446.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="362.9" y="451.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="365.9" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.05%)</title><rect x="363.4" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="366.4" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="363.9" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="366.9" y="510.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.04%)</title><rect x="364.2" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="367.2" y="510.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.04%)</title><rect x="364.6" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.6" y="510.0"></text>
</g>
<g>
<title>skb_clone (19 samples, 0.23%)</title><rect x="365.1" y="515.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="368.1" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.06%)</title><rect x="365.5" y="499.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="368.5" y="510.0"></text>
</g>
<g>
<title>__skb_clone (11 samples, 0.13%)</title><rect x="366.2" y="499.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="369.2" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.04%)</title><rect x="367.4" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="370.4" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.04%)</title><rect x="367.8" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.8" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.02%)</title><rect x="368.5" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="371.5" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.02%)</title><rect x="368.8" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="371.8" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.02%)</title><rect x="369.1" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.1" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.02%)</title><rect x="369.4" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.4" y="542.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.06%)</title><rect x="369.8" y="531.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="372.8" y="542.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="370.0" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.0" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="370.7" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="373.7" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.02%)</title><rect x="371.1" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="374.1" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (20 samples, 0.24%)</title><rect x="371.4" y="531.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="374.4" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (3 samples, 0.04%)</title><rect x="372.3" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="375.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.13%)</title><rect x="372.7" y="515.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="375.7" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.11%)</title><rect x="373.0" y="499.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="376.0" y="510.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.10%)</title><rect x="373.2" y="483.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="376.2" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="373.6" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="376.6" y="478.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.02%)</title><rect x="374.0" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="377.0" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.02%)</title><rect x="374.3" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="377.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="374.9" y="531.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="377.9" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.06%)</title><rect x="375.5" y="531.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="378.5" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="375.8" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="378.8" y="526.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="375.9" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="378.9" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.02%)</title><rect x="376.3" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="379.3" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.04%)</title><rect x="376.6" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="379.6" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.04%)</title><rect x="377.1" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="380.1" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (21 samples, 0.26%)</title><rect x="377.5" y="579.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="380.5" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (17 samples, 0.21%)</title><rect x="378.1" y="563.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.1" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="379.9" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.9" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="380.5" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="383.5" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.13%)</title><rect x="381.1" y="627.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="384.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (11 samples, 0.13%)</title><rect x="381.1" y="611.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="384.1" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (11 samples, 0.13%)</title><rect x="381.1" y="595.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.1" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.09%)</title><rect x="381.7" y="579.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="384.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.13%)</title><rect x="382.7" y="643.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="385.7" y="654.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.12%)</title><rect x="382.8" y="627.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="385.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.12%)</title><rect x="382.8" y="611.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="385.8" y="622.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.11%)</title><rect x="383.0" y="595.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="386.0" y="606.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="384.3" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="387.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="384.7" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="387.7" y="686.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="384.7" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="387.7" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="384.7" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="387.7" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="385.0" y="723.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="388.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.23%)</title><rect x="385.3" y="803.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="386.9" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.10%)</title><rect x="386.9" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (5 samples, 0.06%)</title><rect x="388.0" y="803.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="391.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$66/1595893425.exec (3,933 samples, 48.11%)</title><rect x="388.8" y="819.0" width="567.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.8" y="830.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$66/1595893425.exec</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$2 (3,933 samples, 48.11%)</title><rect x="388.8" y="803.0" width="567.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.8" y="814.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$2</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes (3,933 samples, 48.11%)</title><rect x="388.8" y="787.0" width="567.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.8" y="798.0">ru/mail/polis/service/codearound/ReplicationLsm.upsertWithMultipleNodes</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (63 samples, 0.77%)</title><rect x="390.1" y="771.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (63 samples, 0.77%)</title><rect x="390.1" y="755.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.1" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="390.1" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="393.1" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="390.1" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="393.1" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="390.1" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="393.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="390.2" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="393.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 0.73%)</title><rect x="390.5" y="739.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="393.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (60 samples, 0.73%)</title><rect x="390.5" y="723.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (60 samples, 0.73%)</title><rect x="390.5" y="707.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (55 samples, 0.67%)</title><rect x="390.5" y="691.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.05%)</title><rect x="397.1" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.1" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="397.7" y="675.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="400.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.06%)</title><rect x="398.4" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.06%)</title><rect x="398.4" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (1,889 samples, 23.11%)</title><rect x="399.1" y="771.0" width="272.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.1" y="782.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="402.9" y="755.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="405.9" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.10%)</title><rect x="403.2" y="755.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="406.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (12 samples, 0.15%)</title><rect x="404.3" y="755.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.06%)</title><rect x="405.4" y="739.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="408.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="405.4" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="405.4" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="408.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.06%)</title><rect x="405.4" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="408.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,836 samples, 22.46%)</title><rect x="406.1" y="755.0" width="265.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.1" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,832 samples, 22.41%)</title><rect x="406.1" y="739.0" width="264.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="409.1" y="750.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="408.0" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="408.0" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="408.0" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (463 samples, 5.66%)</title><rect x="408.5" y="723.0" width="66.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.5" y="734.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (392 samples, 4.80%)</title><rect x="418.3" y="707.0" width="56.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.3" y="718.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (46 samples, 0.56%)</title><rect x="420.7" y="691.0" width="6.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="423.7" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="422.0" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="425.0" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="422.5" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="425.5" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.07%)</title><rect x="423.0" y="675.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="426.0" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (20 samples, 0.24%)</title><rect x="423.8" y="675.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="426.8" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="424.6" y="659.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="427.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.09%)</title><rect x="425.1" y="659.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="428.1" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="426.1" y="659.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="429.1" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.04%)</title><rect x="426.9" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="429.9" y="686.0"></text>
</g>
<g>
<title>__GI___recv (318 samples, 3.89%)</title><rect x="427.3" y="691.0" width="45.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="430.3" y="702.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (294 samples, 3.60%)</title><rect x="430.8" y="675.0" width="42.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="433.8" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (293 samples, 3.58%)</title><rect x="430.9" y="659.0" width="42.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="433.9" y="670.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (259 samples, 3.17%)</title><rect x="435.8" y="643.0" width="37.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="438.8" y="654.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (255 samples, 3.12%)</title><rect x="436.0" y="627.0" width="36.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.0" y="638.0">__s..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="436.7" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="439.7" y="622.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="437.0" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="440.0" y="622.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.02%)</title><rect x="437.5" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="440.5" y="622.0"></text>
</g>
<g>
<title>sock_recvmsg (229 samples, 2.80%)</title><rect x="437.8" y="611.0" width="33.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.8" y="622.0">so..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.06%)</title><rect x="437.8" y="595.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="440.8" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (211 samples, 2.58%)</title><rect x="438.6" y="595.0" width="30.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="441.6" y="606.0">in..</text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="439.0" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="442.0" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="439.4" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="442.4" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (203 samples, 2.48%)</title><rect x="439.7" y="579.0" width="29.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.7" y="590.0">tc..</text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.12%)</title><rect x="444.3" y="563.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.3" y="574.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="444.3" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="447.3" y="558.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.09%)</title><rect x="444.6" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.6" y="558.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="444.6" y="531.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="447.6" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="445.3" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="448.3" y="542.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.02%)</title><rect x="445.3" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="448.3" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="445.8" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="448.8" y="574.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="446.3" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.3" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="446.6" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.02%)</title><rect x="446.9" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="449.9" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.07%)</title><rect x="447.2" y="563.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="450.2" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="447.2" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="450.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="447.6" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="450.6" y="558.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="448.1" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="451.1" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="448.2" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="451.2" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (93 samples, 1.14%)</title><rect x="448.7" y="563.0" width="13.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="451.7" y="574.0"></text>
</g>
<g>
<title>add_wait_queue (3 samples, 0.04%)</title><rect x="451.0" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="454.0" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="451.1" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.1" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (33 samples, 0.40%)</title><rect x="451.4" y="547.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="454.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (33 samples, 0.40%)</title><rect x="451.4" y="531.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="454.4" y="542.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (2 samples, 0.02%)</title><rect x="455.9" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.9" y="526.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="456.2" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="459.2" y="558.0"></text>
</g>
<g>
<title>remove_wait_queue (19 samples, 0.23%)</title><rect x="456.5" y="547.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="459.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="456.5" y="531.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="459.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.21%)</title><rect x="456.7" y="531.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="459.7" y="542.0"></text>
</g>
<g>
<title>schedule_timeout (6 samples, 0.07%)</title><rect x="459.2" y="547.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.2" y="558.0"></text>
</g>
<g>
<title>wait_woken (14 samples, 0.17%)</title><rect x="460.1" y="547.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.1" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (11 samples, 0.13%)</title><rect x="460.5" y="531.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.10%)</title><rect x="460.5" y="515.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.5" y="526.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="461.8" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.8" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="461.8" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.8" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="461.8" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="464.8" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (30 samples, 0.37%)</title><rect x="462.1" y="563.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="465.1" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (28 samples, 0.34%)</title><rect x="462.1" y="547.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="465.1" y="558.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="462.4" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="465.4" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (24 samples, 0.29%)</title><rect x="462.7" y="531.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.7" y="542.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.13%)</title><rect x="462.8" y="515.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="465.8" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="463.8" y="499.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.8" y="510.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.12%)</title><rect x="464.4" y="515.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="467.4" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.12%)</title><rect x="464.4" y="499.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="467.4" y="510.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="465.8" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="468.8" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.06%)</title><rect x="466.4" y="563.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="469.4" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="467.1" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="470.1" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.11%)</title><rect x="467.4" y="563.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="470.4" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.10%)</title><rect x="467.6" y="547.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.6" y="558.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="468.4" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.4" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="468.4" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="471.4" y="526.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.02%)</title><rect x="468.7" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.7" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.15%)</title><rect x="469.0" y="595.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.0" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.12%)</title><rect x="469.3" y="579.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="472.3" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (9 samples, 0.11%)</title><rect x="469.4" y="563.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.4" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.09%)</title><rect x="469.7" y="547.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="472.7" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.16%)</title><rect x="470.9" y="611.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="473.9" y="622.0"></text>
</g>
<g>
<title>__fdget (12 samples, 0.15%)</title><rect x="470.9" y="595.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="473.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.13%)</title><rect x="471.0" y="579.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="474.0" y="590.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.11%)</title><rect x="471.3" y="563.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="474.3" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="472.9" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="475.9" y="638.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="473.2" y="691.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="476.2" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.09%)</title><rect x="473.9" y="691.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="476.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (3 samples, 0.04%)</title><rect x="474.9" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (78 samples, 0.95%)</title><rect x="475.4" y="723.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.06%)</title><rect x="475.8" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="475.8" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="475.8" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="475.9" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.9" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="475.9" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.9" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.02%)</title><rect x="476.1" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="476.5" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="476.7" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.7" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.09%)</title><rect x="477.1" y="707.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="480.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (32 samples, 0.39%)</title><rect x="478.1" y="707.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.37%)</title><rect x="478.4" y="691.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.37%)</title><rect x="478.4" y="675.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.09%)</title><rect x="482.7" y="707.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (19 samples, 0.23%)</title><rect x="483.9" y="707.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.13%)</title><rect x="485.0" y="691.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.13%)</title><rect x="485.0" y="675.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (48 samples, 0.59%)</title><rect x="486.6" y="723.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.26%)</title><rect x="490.2" y="707.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (21 samples, 0.26%)</title><rect x="490.2" y="691.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (21 samples, 0.26%)</title><rect x="490.2" y="675.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.2" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="492.7" y="659.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="495.7" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.02%)</title><rect x="493.3" y="707.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.3" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="493.3" y="691.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.3" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="493.3" y="675.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="496.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.12%)</title><rect x="493.5" y="723.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="493.8" y="707.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.10%)</title><rect x="493.8" y="691.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.05%)</title><rect x="495.0" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (257 samples, 3.14%)</title><rect x="495.6" y="723.0" width="37.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.6" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (16 samples, 0.20%)</title><rect x="497.6" y="707.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="500.6" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (225 samples, 2.75%)</title><rect x="499.9" y="707.0" width="32.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="502.9" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (203 samples, 2.48%)</title><rect x="503.1" y="691.0" width="29.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="506.1" y="702.0">en..</text>
</g>
<g>
<title>__x64_sys_setsockopt (7 samples, 0.09%)</title><rect x="503.1" y="675.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="506.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (196 samples, 2.40%)</title><rect x="504.1" y="675.0" width="28.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.1" y="686.0">do..</text>
</g>
<g>
<title>__sys_setsockopt (4 samples, 0.05%)</title><rect x="514.0" y="659.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="517.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (123 samples, 1.50%)</title><rect x="514.6" y="659.0" width="17.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="517.6" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (119 samples, 1.46%)</title><rect x="514.6" y="643.0" width="17.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="517.6" y="654.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="515.5" y="627.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="518.5" y="638.0"></text>
</g>
<g>
<title>__get_user_4 (13 samples, 0.16%)</title><rect x="516.1" y="627.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="519.1" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.02%)</title><rect x="517.9" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="520.9" y="638.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="518.4" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="521.4" y="638.0"></text>
</g>
<g>
<title>security_socket_setsockopt (23 samples, 0.28%)</title><rect x="518.8" y="627.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="521.8" y="638.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.02%)</title><rect x="519.1" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="522.1" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (19 samples, 0.23%)</title><rect x="519.4" y="611.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="522.4" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.05%)</title><rect x="519.4" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="522.4" y="606.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (15 samples, 0.18%)</title><rect x="520.0" y="595.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.0" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.10%)</title><rect x="521.0" y="579.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="524.0" y="590.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.02%)</title><rect x="522.1" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="525.1" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (43 samples, 0.53%)</title><rect x="522.4" y="627.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.4" y="638.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.02%)</title><rect x="525.0" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="528.0" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="525.3" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="528.3" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="525.6" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="528.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="525.6" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="528.6" y="606.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="526.0" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.0" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (11 samples, 0.13%)</title><rect x="526.5" y="611.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="529.5" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.06%)</title><rect x="526.9" y="595.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="529.9" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.04%)</title><rect x="527.6" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="530.6" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.05%)</title><rect x="528.0" y="611.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="531.0" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (22 samples, 0.27%)</title><rect x="528.6" y="627.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="531.6" y="638.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.20%)</title><rect x="528.8" y="611.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="531.8" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="528.8" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="531.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.16%)</title><rect x="529.2" y="595.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="532.2" y="606.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.12%)</title><rect x="529.6" y="579.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="532.6" y="590.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="531.1" y="611.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="534.1" y="622.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="531.8" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="534.8" y="654.0"></text>
</g>
<g>
<title>setsockopt@plt (2 samples, 0.02%)</title><rect x="532.4" y="707.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="535.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (952 samples, 11.65%)</title><rect x="532.7" y="723.0" width="137.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.7" y="734.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (35 samples, 0.43%)</title><rect x="540.0" y="707.0" width="5.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="543.0" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="541.9" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="544.9" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="542.2" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="545.2" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.07%)</title><rect x="542.5" y="691.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="545.5" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.10%)</title><rect x="543.3" y="691.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="546.3" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="543.3" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="546.3" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="543.9" y="675.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="546.9" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.04%)</title><rect x="544.6" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="547.6" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.04%)</title><rect x="545.1" y="707.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="548.1" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (7 samples, 0.09%)</title><rect x="545.5" y="707.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="548.5" y="718.0"></text>
</g>
<g>
<title>__libc_send (853 samples, 10.43%)</title><rect x="546.5" y="707.0" width="123.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="549.5" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (840 samples, 10.28%)</title><rect x="548.4" y="691.0" width="121.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="551.4" y="702.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.04%)</title><rect x="548.4" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (837 samples, 10.24%)</title><rect x="548.8" y="675.0" width="120.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="551.8" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (799 samples, 9.77%)</title><rect x="553.6" y="659.0" width="115.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="556.6" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (792 samples, 9.69%)</title><rect x="553.6" y="643.0" width="114.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="556.6" y="654.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="554.3" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.3" y="638.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="554.7" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="557.7" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (776 samples, 9.49%)</title><rect x="555.0" y="627.0" width="112.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="558.0" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (765 samples, 9.36%)</title><rect x="555.8" y="611.0" width="110.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="558.8" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (759 samples, 9.28%)</title><rect x="556.6" y="595.0" width="109.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="559.6" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="557.2" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="560.2" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="557.5" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.5" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="558.2" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="561.2" y="590.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="558.5" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.5" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (4 samples, 0.05%)</title><rect x="559.4" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="562.4" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.02%)</title><rect x="560.1" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (731 samples, 8.94%)</title><rect x="560.7" y="579.0" width="105.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.7" y="590.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="562.4" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="565.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="562.4" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="565.4" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="563.1" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="566.1" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.09%)</title><rect x="563.7" y="563.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.7" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.07%)</title><rect x="563.8" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="566.8" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (41 samples, 0.50%)</title><rect x="564.9" y="563.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="567.9" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (29 samples, 0.35%)</title><rect x="565.7" y="547.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="568.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (14 samples, 0.17%)</title><rect x="566.4" y="531.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="569.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.13%)</title><rect x="566.6" y="515.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="569.6" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.05%)</title><rect x="567.5" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.5" y="510.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="568.2" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.2" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.10%)</title><rect x="568.5" y="531.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.5" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.02%)</title><rect x="569.0" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="572.0" y="526.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.02%)</title><rect x="569.6" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="572.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.05%)</title><rect x="570.0" y="547.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="573.0" y="558.0"></text>
</g>
<g>
<title>tcp_push (642 samples, 7.85%)</title><rect x="571.1" y="563.0" width="92.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="574.1" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (638 samples, 7.80%)</title><rect x="571.6" y="547.0" width="92.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.6" y="558.0">__tcp_push_..</text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.05%)</title><rect x="571.8" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="574.8" y="542.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="572.4" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="575.4" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.02%)</title><rect x="572.9" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="575.9" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (3 samples, 0.04%)</title><rect x="573.2" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="576.2" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (624 samples, 7.63%)</title><rect x="573.7" y="531.0" width="90.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="576.7" y="542.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (587 samples, 7.18%)</title><rect x="575.0" y="515.0" width="84.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="578.0" y="526.0">__tcp_tran..</text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.04%)</title><rect x="576.5" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="579.5" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (558 samples, 6.83%)</title><rect x="577.1" y="499.0" width="80.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="580.1" y="510.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (555 samples, 6.79%)</title><rect x="577.3" y="483.0" width="80.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="580.3" y="494.0">__ip_queu..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.02%)</title><rect x="577.4" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="580.4" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.02%)</title><rect x="577.7" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="580.7" y="478.0"></text>
</g>
<g>
<title>ip_local_out (546 samples, 6.68%)</title><rect x="578.0" y="467.0" width="78.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.0" y="478.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.02%)</title><rect x="578.0" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.0" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.02%)</title><rect x="578.3" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="581.3" y="462.0"></text>
</g>
<g>
<title>ip_output (540 samples, 6.61%)</title><rect x="578.6" y="451.0" width="77.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="581.6" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (535 samples, 6.54%)</title><rect x="579.3" y="435.0" width="77.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.3" y="446.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.09%)</title><rect x="580.2" y="419.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="583.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (521 samples, 6.37%)</title><rect x="581.3" y="419.0" width="75.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.3" y="430.0">ip_finis..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="582.9" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="585.9" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (461 samples, 5.64%)</title><rect x="583.2" y="403.0" width="66.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.2" y="414.0">__local..</text>
</g>
<g>
<title>do_softirq.part.21 (460 samples, 5.63%)</title><rect x="583.3" y="387.0" width="66.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="586.3" y="398.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (455 samples, 5.57%)</title><rect x="584.1" y="371.0" width="65.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.1" y="382.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (454 samples, 5.55%)</title><rect x="584.1" y="355.0" width="65.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="587.1" y="366.0">__softi..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.02%)</title><rect x="585.3" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="588.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (439 samples, 5.37%)</title><rect x="585.8" y="339.0" width="63.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="588.8" y="350.0">net_rx_..</text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.04%)</title><rect x="586.9" y="323.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.9" y="334.0"></text>
</g>
<g>
<title>process_backlog (427 samples, 5.22%)</title><rect x="587.5" y="323.0" width="61.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="590.5" y="334.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (414 samples, 5.06%)</title><rect x="589.2" y="307.0" width="59.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="592.2" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (414 samples, 5.06%)</title><rect x="589.2" y="291.0" width="59.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="592.2" y="302.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (8 samples, 0.10%)</title><rect x="589.5" y="275.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="592.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (402 samples, 4.92%)</title><rect x="590.7" y="275.0" width="58.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.7" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (11 samples, 0.13%)</title><rect x="590.8" y="259.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="593.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (388 samples, 4.75%)</title><rect x="592.4" y="259.0" width="56.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.4" y="270.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (377 samples, 4.61%)</title><rect x="593.3" y="243.0" width="54.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="596.3" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (373 samples, 4.56%)</title><rect x="593.7" y="227.0" width="53.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="596.7" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (373 samples, 4.56%)</title><rect x="593.7" y="211.0" width="53.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="596.7" y="222.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (366 samples, 4.48%)</title><rect x="594.7" y="195.0" width="52.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="597.7" y="206.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.10%)</title><rect x="596.2" y="179.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="599.2" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="596.9" y="163.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="597.5" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.07%)</title><rect x="597.9" y="179.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="600.9" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="598.5" y="163.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="601.5" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (3 samples, 0.04%)</title><rect x="598.8" y="179.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="601.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (332 samples, 4.06%)</title><rect x="599.2" y="179.0" width="47.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="602.2" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (331 samples, 4.05%)</title><rect x="599.4" y="163.0" width="47.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="602.4" y="174.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (10 samples, 0.12%)</title><rect x="600.1" y="147.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="603.1" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="600.2" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.2" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.09%)</title><rect x="600.5" y="131.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.5" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="600.8" y="115.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="603.8" y="126.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="600.9" y="99.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="603.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="601.1" y="83.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="604.1" y="94.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="601.7" y="147.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.7" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.02%)</title><rect x="602.1" y="147.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="605.1" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.02%)</title><rect x="602.4" y="147.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="605.4" y="158.0"></text>
</g>
<g>
<title>tcp_ack (83 samples, 1.02%)</title><rect x="602.7" y="147.0" width="12.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="605.7" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.02%)</title><rect x="604.1" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="607.1" y="142.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.02%)</title><rect x="604.5" y="131.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="607.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (54 samples, 0.66%)</title><rect x="605.0" y="131.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="608.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.32%)</title><rect x="607.0" y="115.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.05%)</title><rect x="607.1" y="99.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.1" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="607.3" y="83.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="610.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.22%)</title><rect x="607.7" y="99.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.18%)</title><rect x="608.0" y="83.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="611.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.11%)</title><rect x="608.9" y="67.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="611.9" y="78.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.10%)</title><rect x="609.0" y="51.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="612.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="609.7" y="35.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.7" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="610.5" y="99.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="613.5" y="110.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.02%)</title><rect x="610.8" y="115.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="613.8" y="126.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="611.3" y="115.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="614.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (3 samples, 0.04%)</title><rect x="611.8" y="115.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.8" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="612.3" y="115.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="615.3" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.04%)</title><rect x="612.8" y="131.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="615.8" y="142.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.02%)</title><rect x="613.2" y="131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="616.2" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.02%)</title><rect x="613.5" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.5" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="613.8" y="131.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="616.8" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.04%)</title><rect x="614.2" y="131.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="617.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (212 samples, 2.59%)</title><rect x="614.8" y="147.0" width="30.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.8" y="158.0">tc..</text>
</g>
<g>
<title>sock_def_readable (198 samples, 2.42%)</title><rect x="615.8" y="131.0" width="28.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="618.8" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (194 samples, 2.37%)</title><rect x="616.4" y="115.0" width="28.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="619.4" y="126.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (191 samples, 2.34%)</title><rect x="616.5" y="99.0" width="27.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="619.5" y="110.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (190 samples, 2.32%)</title><rect x="616.7" y="83.0" width="27.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="619.7" y="94.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="644.1" y="99.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="647.1" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="644.4" y="131.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.4" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="645.0" y="131.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="648.0" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.02%)</title><rect x="645.4" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="648.4" y="158.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.02%)</title><rect x="645.4" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="648.4" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (6 samples, 0.07%)</title><rect x="645.8" y="147.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="648.8" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="646.7" y="147.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="649.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.04%)</title><rect x="647.1" y="179.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="650.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="647.7" y="243.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="650.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (3 samples, 0.04%)</title><rect x="648.0" y="243.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="651.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.02%)</title><rect x="648.4" y="259.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.4" y="270.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.02%)</title><rect x="649.1" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="652.1" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (46 samples, 0.56%)</title><rect x="649.7" y="403.0" width="6.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (42 samples, 0.51%)</title><rect x="649.7" y="387.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (21 samples, 0.26%)</title><rect x="651.2" y="371.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="654.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (15 samples, 0.18%)</title><rect x="651.6" y="355.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.6" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.02%)</title><rect x="651.9" y="339.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.11%)</title><rect x="652.2" y="339.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="655.2" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.11%)</title><rect x="652.2" y="323.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.2" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.11%)</title><rect x="652.2" y="307.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="655.2" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.02%)</title><rect x="653.5" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.5" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.02%)</title><rect x="653.8" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="656.8" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.02%)</title><rect x="654.2" y="371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="657.2" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (8 samples, 0.10%)</title><rect x="654.5" y="371.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="657.5" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.05%)</title><rect x="654.8" y="355.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.8" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.02%)</title><rect x="655.1" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="658.1" y="350.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.02%)</title><rect x="656.1" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="659.1" y="398.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.02%)</title><rect x="656.5" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="659.5" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.05%)</title><rect x="656.8" y="467.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="659.8" y="478.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.09%)</title><rect x="657.7" y="499.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="660.7" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="657.7" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="660.7" y="494.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.06%)</title><rect x="658.0" y="483.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.0" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="658.4" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="661.4" y="478.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.02%)</title><rect x="658.7" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="661.7" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.02%)</title><rect x="659.0" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.0" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.04%)</title><rect x="659.3" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="662.3" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.02%)</title><rect x="659.4" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.4" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.02%)</title><rect x="659.8" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.8" y="526.0"></text>
</g>
<g>
<title>jiffies_to_usecs (4 samples, 0.05%)</title><rect x="660.3" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="663.3" y="526.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="660.8" y="515.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="663.8" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.07%)</title><rect x="661.7" y="515.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.7" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="662.0" y="499.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="665.0" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="662.9" y="515.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.9" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.02%)</title><rect x="663.1" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="666.1" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.02%)</title><rect x="663.4" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="666.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.21%)</title><rect x="663.7" y="563.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="666.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="663.7" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="666.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (14 samples, 0.17%)</title><rect x="664.2" y="547.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="667.2" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="665.6" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="668.6" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.07%)</title><rect x="666.2" y="611.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="669.2" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.02%)</title><rect x="666.3" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="669.3" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="666.6" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="669.6" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.04%)</title><rect x="666.6" y="579.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="669.6" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.04%)</title><rect x="666.6" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="669.6" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.07%)</title><rect x="667.0" y="627.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="670.0" y="638.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.07%)</title><rect x="667.0" y="611.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="670.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.07%)</title><rect x="667.0" y="595.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="670.0" y="606.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.07%)</title><rect x="667.0" y="579.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="670.0" y="590.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.02%)</title><rect x="668.1" y="643.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="671.1" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.05%)</title><rect x="668.3" y="643.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="671.3" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.05%)</title><rect x="668.9" y="659.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="671.9" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="669.2" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.2" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="669.2" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="672.2" y="638.0"></text>
</g>
<g>
<title>send@plt (3 samples, 0.04%)</title><rect x="669.6" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="672.6" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.04%)</title><rect x="670.1" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.04%)</title><rect x="670.5" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.04%)</title><rect x="671.1" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (2 samples, 0.02%)</title><rect x="671.5" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (37 samples, 0.45%)</title><rect x="672.0" y="771.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.06%)</title><rect x="673.4" y="755.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="676.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="673.4" y="739.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="676.4" y="750.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.07%)</title><rect x="674.1" y="755.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="677.1" y="766.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.02%)</title><rect x="675.0" y="755.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="678.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (6 samples, 0.07%)</title><rect x="675.3" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.3" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.10%)</title><rect x="676.1" y="755.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="679.1" y="766.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.09%)</title><rect x="676.3" y="739.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="679.3" y="750.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.09%)</title><rect x="676.3" y="723.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="679.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsertValue (1,933 samples, 23.65%)</title><rect x="677.3" y="771.0" width="279.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.3" y="782.0">ru/mail/polis/service/codearound/Task..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,926 samples, 23.56%)</title><rect x="677.3" y="755.0" width="278.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.3" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>gettimeofday (6 samples, 0.07%)</title><rect x="678.3" y="739.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="681.3" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,903 samples, 23.28%)</title><rect x="679.3" y="739.0" width="274.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.3" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1,317 samples, 16.11%)</title><rect x="681.3" y="723.0" width="190.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="684.3" y="734.0">Java_org_rocksdb_RocksDB_..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.04%)</title><rect x="683.2" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="686.2" y="718.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.06%)</title><rect x="683.6" y="707.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="686.6" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (8 samples, 0.10%)</title><rect x="684.4" y="707.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="687.4" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.05%)</title><rect x="686.2" y="707.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="689.2" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (3 samples, 0.04%)</title><rect x="686.8" y="707.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="689.8" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (9 samples, 0.11%)</title><rect x="687.3" y="707.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="690.3" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="688.6" y="707.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="691.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="688.8" y="707.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="691.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.02%)</title><rect x="689.4" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="692.4" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1,259 samples, 15.40%)</title><rect x="689.7" y="707.0" width="181.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="692.7" y="718.0">rocksdb_put_helper(JNIE..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.06%)</title><rect x="690.0" y="691.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="693.0" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.05%)</title><rect x="690.9" y="691.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="693.9" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.05%)</title><rect x="691.4" y="691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="694.4" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (12 samples, 0.15%)</title><rect x="692.0" y="691.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="695.0" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.04%)</title><rect x="693.8" y="691.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="696.8" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (20 samples, 0.24%)</title><rect x="694.2" y="691.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="697.2" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="694.3" y="675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="697.3" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.02%)</title><rect x="694.8" y="675.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="697.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.07%)</title><rect x="695.0" y="675.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="698.0" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.10%)</title><rect x="695.9" y="675.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="698.9" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.09%)</title><rect x="696.1" y="659.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="699.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,194 samples, 14.61%)</title><rect x="697.2" y="691.0" width="172.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="700.2" y="702.0">rocksdb::DB::Put(rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.07%)</title><rect x="697.6" y="675.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="700.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.02%)</title><rect x="698.5" y="675.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="701.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,183 samples, 14.47%)</title><rect x="698.8" y="675.0" width="170.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="701.8" y="686.0">rocksdb::DBImpl::Put(r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,169 samples, 14.30%)</title><rect x="698.9" y="659.0" width="168.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="701.9" y="670.0">rocksdb::DB::Put(rocks..</text>
</g>
<g>
<title>__libc_free (9 samples, 0.11%)</title><rect x="700.1" y="643.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="703.1" y="654.0"></text>
</g>
<g>
<title>operator delete(void*) (4 samples, 0.05%)</title><rect x="701.5" y="643.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="704.5" y="654.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (4 samples, 0.05%)</title><rect x="702.1" y="643.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="705.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (6 samples, 0.07%)</title><rect x="702.7" y="643.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="705.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1,048 samples, 12.82%)</title><rect x="703.6" y="643.0" width="151.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="706.6" y="654.0">rocksdb::DBImpl::Wr..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (7 samples, 0.09%)</title><rect x="704.3" y="627.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="707.3" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (7 samples, 0.09%)</title><rect x="705.3" y="627.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="708.3" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.09%)</title><rect x="706.3" y="627.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="709.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.05%)</title><rect x="707.3" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="710.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.02%)</title><rect x="708.0" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="711.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (962 samples, 11.77%)</title><rect x="708.3" y="627.0" width="138.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="711.3" y="638.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="720.0" y="611.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="723.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (20 samples, 0.24%)</title><rect x="720.5" y="611.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="723.5" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 0.10%)</title><rect x="723.5" y="611.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="726.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (9 samples, 0.11%)</title><rect x="724.6" y="611.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="727.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (15 samples, 0.18%)</title><rect x="725.9" y="611.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="728.9" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.04%)</title><rect x="727.5" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="730.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.02%)</title><rect x="728.1" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="731.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 0.02%)</title><rect x="728.4" y="611.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="731.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) [clone .plt] (4 samples, 0.05%)</title><rect x="728.7" y="611.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="731.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (290 samples, 3.55%)</title><rect x="729.3" y="611.0" width="41.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="732.3" y="622.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (4 samples, 0.05%)</title><rect x="732.4" y="595.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="735.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (247 samples, 3.02%)</title><rect x="733.0" y="595.0" width="35.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="736.0" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.05%)</title><rect x="734.0" y="579.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="737.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (220 samples, 2.69%)</title><rect x="734.7" y="579.0" width="31.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="737.7" y="590.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (45 samples, 0.55%)</title><rect x="736.9" y="563.0" width="6.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="739.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.02%)</title><rect x="743.4" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="746.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (3 samples, 0.04%)</title><rect x="743.7" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="746.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (6 samples, 0.07%)</title><rect x="744.1" y="563.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="747.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (73 samples, 0.89%)</title><rect x="745.1" y="563.0" width="10.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="748.1" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.07%)</title><rect x="746.9" y="547.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="749.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.02%)</title><rect x="748.0" y="547.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="751.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.02%)</title><rect x="748.3" y="547.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="751.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (8 samples, 0.10%)</title><rect x="748.6" y="547.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="751.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (3 samples, 0.04%)</title><rect x="749.8" y="547.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="752.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (37 samples, 0.45%)</title><rect x="750.2" y="547.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="753.2" y="558.0"></text>
</g>
<g>
<title>__GI_write (5 samples, 0.06%)</title><rect x="751.8" y="531.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="754.8" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (10 samples, 0.12%)</title><rect x="752.5" y="531.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="755.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (8 samples, 0.10%)</title><rect x="754.1" y="531.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="757.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.02%)</title><rect x="755.2" y="531.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="758.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.04%)</title><rect x="755.7" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="758.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (10 samples, 0.12%)</title><rect x="756.3" y="563.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="759.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (3 samples, 0.04%)</title><rect x="757.7" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="760.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (58 samples, 0.71%)</title><rect x="758.1" y="563.0" width="8.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="761.1" y="574.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (6 samples, 0.07%)</title><rect x="758.6" y="547.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="761.6" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="759.4" y="547.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="762.4" y="558.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (3 samples, 0.04%)</title><rect x="760.1" y="547.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="763.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (8 samples, 0.10%)</title><rect x="760.7" y="547.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="763.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.02%)</title><rect x="761.9" y="547.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="764.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (24 samples, 0.29%)</title><rect x="762.2" y="547.0" width="3.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="765.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.02%)</title><rect x="765.3" y="531.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="768.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (6 samples, 0.07%)</title><rect x="765.6" y="547.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="768.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (13 samples, 0.16%)</title><rect x="766.5" y="579.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="769.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="768.4" y="579.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="771.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (3 samples, 0.04%)</title><rect x="768.7" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="771.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 0.09%)</title><rect x="769.2" y="595.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="772.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.02%)</title><rect x="770.3" y="595.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="773.3" y="606.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (4 samples, 0.05%)</title><rect x="770.5" y="595.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="773.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() [clone .plt] (2 samples, 0.02%)</title><rect x="771.3" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="774.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (38 samples, 0.46%)</title><rect x="771.6" y="611.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="774.6" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (31 samples, 0.38%)</title><rect x="772.1" y="595.0" width="4.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="775.1" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (2 samples, 0.02%)</title><rect x="776.6" y="595.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="779.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (3 samples, 0.04%)</title><rect x="777.0" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="780.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (3 samples, 0.04%)</title><rect x="777.5" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="780.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (3 samples, 0.04%)</title><rect x="777.9" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="780.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.02%)</title><rect x="778.3" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="781.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (3 samples, 0.04%)</title><rect x="778.6" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="781.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (6 samples, 0.07%)</title><rect x="779.1" y="611.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="782.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.04%)</title><rect x="780.1" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="783.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (361 samples, 4.42%)</title><rect x="780.5" y="611.0" width="52.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="783.5" y="622.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (350 samples, 4.28%)</title><rect x="781.8" y="595.0" width="50.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="784.8" y="606.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.06%)</title><rect x="781.9" y="579.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="784.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.04%)</title><rect x="782.7" y="579.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="785.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) [clone .plt] (4 samples, 0.05%)</title><rect x="783.1" y="579.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="786.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (6 samples, 0.07%)</title><rect x="783.7" y="579.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="786.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (2 samples, 0.02%)</title><rect x="784.5" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="787.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (327 samples, 4.00%)</title><rect x="785.1" y="579.0" width="47.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="788.1" y="590.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (308 samples, 3.77%)</title><rect x="786.4" y="563.0" width="44.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="789.4" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (7 samples, 0.09%)</title><rect x="786.6" y="547.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="789.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (5 samples, 0.06%)</title><rect x="787.6" y="547.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="790.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (5 samples, 0.06%)</title><rect x="788.3" y="547.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="791.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (289 samples, 3.54%)</title><rect x="789.2" y="547.0" width="41.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="792.2" y="558.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (6 samples, 0.07%)</title><rect x="791.6" y="531.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="794.6" y="542.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.02%)</title><rect x="792.5" y="531.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="795.5" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.04%)</title><rect x="792.8" y="531.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="795.8" y="542.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (3 samples, 0.04%)</title><rect x="793.3" y="531.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="796.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (6 samples, 0.07%)</title><rect x="793.9" y="531.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="796.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (2 samples, 0.02%)</title><rect x="794.8" y="531.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="797.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (5 samples, 0.06%)</title><rect x="795.1" y="531.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="798.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (232 samples, 2.84%)</title><rect x="795.8" y="531.0" width="33.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="798.8" y="542.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (23 samples, 0.28%)</title><rect x="798.3" y="515.0" width="3.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="801.3" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="798.8" y="499.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="801.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (11 samples, 0.13%)</title><rect x="799.8" y="499.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="802.8" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (162 samples, 1.98%)</title><rect x="801.6" y="515.0" width="23.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="804.6" y="526.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (140 samples, 1.71%)</title><rect x="803.6" y="499.0" width="20.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="806.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (49 samples, 0.60%)</title><rect x="813.8" y="483.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="816.8" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (4 samples, 0.05%)</title><rect x="814.9" y="467.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="817.9" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.10%)</title><rect x="815.4" y="467.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="818.4" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.02%)</title><rect x="816.6" y="467.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="819.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (28 samples, 0.34%)</title><rect x="816.9" y="467.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="819.9" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (3 samples, 0.04%)</title><rect x="818.8" y="451.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="821.8" y="462.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.02%)</title><rect x="819.2" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="822.2" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (8 samples, 0.10%)</title><rect x="819.5" y="451.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="822.5" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="820.6" y="451.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="823.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (19 samples, 0.23%)</title><rect x="821.1" y="483.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="824.1" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (9 samples, 0.11%)</title><rect x="822.2" y="467.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="825.2" y="478.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.02%)</title><rect x="823.5" y="467.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="826.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (6 samples, 0.07%)</title><rect x="823.8" y="499.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="826.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.02%)</title><rect x="824.7" y="499.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="827.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (4 samples, 0.05%)</title><rect x="825.0" y="515.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="828.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.04%)</title><rect x="825.7" y="515.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="828.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (13 samples, 0.16%)</title><rect x="826.3" y="515.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="829.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (2 samples, 0.02%)</title><rect x="826.8" y="499.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="829.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (7 samples, 0.09%)</title><rect x="827.1" y="499.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="830.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (8 samples, 0.10%)</title><rect x="828.1" y="515.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="831.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (5 samples, 0.06%)</title><rect x="829.3" y="531.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="832.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (2 samples, 0.02%)</title><rect x="830.0" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="833.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.04%)</title><rect x="830.3" y="531.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="833.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.04%)</title><rect x="830.9" y="563.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="833.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (6 samples, 0.07%)</title><rect x="831.3" y="563.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="834.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.05%)</title><rect x="832.6" y="611.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="835.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.05%)</title><rect x="832.6" y="595.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="835.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.05%)</title><rect x="832.6" y="579.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="835.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.05%)</title><rect x="832.6" y="563.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="835.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.04%)</title><rect x="832.6" y="547.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="835.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.04%)</title><rect x="832.6" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="835.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.04%)</title><rect x="832.6" y="515.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="835.6" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.04%)</title><rect x="832.6" y="499.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="835.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (2 samples, 0.02%)</title><rect x="832.8" y="483.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="835.8" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15646463843615173279.so (2 samples, 0.02%)</title><rect x="832.8" y="467.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="835.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.02%)</title><rect x="832.8" y="451.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="835.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (5 samples, 0.06%)</title><rect x="833.2" y="611.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="836.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="833.9" y="611.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="836.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.02%)</title><rect x="834.2" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="837.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (46 samples, 0.56%)</title><rect x="834.5" y="611.0" width="6.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="837.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.04%)</title><rect x="841.3" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="844.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (5 samples, 0.06%)</title><rect x="841.7" y="611.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="844.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (6 samples, 0.07%)</title><rect x="842.4" y="611.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="845.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.04%)</title><rect x="843.3" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="846.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.02%)</title><rect x="843.4" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="846.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.02%)</title><rect x="844.0" y="611.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="847.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (2 samples, 0.02%)</title><rect x="844.3" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="847.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.04%)</title><rect x="844.6" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="847.6" y="622.0"></text>
</g>
<g>
<title>sched_yield (13 samples, 0.16%)</title><rect x="845.2" y="611.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="848.2" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.12%)</title><rect x="845.6" y="595.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="848.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.12%)</title><rect x="845.6" y="579.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.6" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (5 samples, 0.06%)</title><rect x="846.3" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="849.3" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (5 samples, 0.06%)</title><rect x="846.3" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="849.3" y="558.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.06%)</title><rect x="846.3" y="531.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="849.3" y="542.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.06%)</title><rect x="846.3" y="515.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="849.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.04%)</title><rect x="847.2" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="850.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (6 samples, 0.07%)</title><rect x="847.6" y="627.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="850.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (5 samples, 0.06%)</title><rect x="848.5" y="627.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="851.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.02%)</title><rect x="849.4" y="627.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="852.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (6 samples, 0.07%)</title><rect x="849.6" y="627.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="852.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (6 samples, 0.07%)</title><rect x="850.5" y="627.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="853.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.02%)</title><rect x="851.5" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="854.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.04%)</title><rect x="851.9" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="854.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) [clone .plt] (3 samples, 0.04%)</title><rect x="852.5" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="855.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (5 samples, 0.06%)</title><rect x="853.0" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="856.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (6 samples, 0.07%)</title><rect x="853.7" y="627.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="856.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) [clone .plt] (2 samples, 0.02%)</title><rect x="854.5" y="627.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="857.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (6 samples, 0.07%)</title><rect x="854.8" y="643.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="857.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.05%)</title><rect x="855.8" y="643.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="858.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (44 samples, 0.54%)</title><rect x="856.6" y="643.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="859.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.02%)</title><rect x="856.6" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="859.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (9 samples, 0.11%)</title><rect x="856.9" y="627.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="859.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (2 samples, 0.02%)</title><rect x="858.2" y="627.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="861.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const [clone .plt] (2 samples, 0.02%)</title><rect x="858.4" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="861.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.02%)</title><rect x="858.7" y="627.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="861.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.11%)</title><rect x="859.0" y="627.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="862.0" y="638.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.04%)</title><rect x="859.9" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="862.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (8 samples, 0.10%)</title><rect x="860.3" y="627.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="863.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (3 samples, 0.04%)</title><rect x="861.5" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="864.5" y="638.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (6 samples, 0.07%)</title><rect x="861.9" y="627.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="864.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (4 samples, 0.05%)</title><rect x="862.9" y="643.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="865.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.04%)</title><rect x="863.5" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="866.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.02%)</title><rect x="863.9" y="643.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="866.9" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (5 samples, 0.06%)</title><rect x="864.2" y="643.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="867.2" y="654.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (8 samples, 0.10%)</title><rect x="864.9" y="643.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="867.9" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (6 samples, 0.07%)</title><rect x="866.2" y="643.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="869.2" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) [clone .plt] (2 samples, 0.02%)</title><rect x="867.1" y="643.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="870.1" y="654.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.02%)</title><rect x="867.4" y="643.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="870.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (3 samples, 0.04%)</title><rect x="867.7" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="870.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.04%)</title><rect x="868.1" y="659.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="871.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.02%)</title><rect x="868.7" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="871.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.02%)</title><rect x="869.1" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="872.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (9 samples, 0.11%)</title><rect x="869.6" y="691.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="872.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (525 samples, 6.42%)</title><rect x="871.4" y="723.0" width="75.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="874.4" y="734.0">[unknown]</text>
</g>
<g>
<title>__GI_write (512 samples, 6.26%)</title><rect x="871.4" y="707.0" width="73.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="874.4" y="718.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (494 samples, 6.04%)</title><rect x="874.0" y="691.0" width="71.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="877.0" y="702.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (493 samples, 6.03%)</title><rect x="874.2" y="675.0" width="71.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="877.2" y="686.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_write (444 samples, 5.43%)</title><rect x="881.3" y="659.0" width="64.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.3" y="670.0">__x64_s..</text>
</g>
<g>
<title>fput (3 samples, 0.04%)</title><rect x="881.8" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.8" y="654.0"></text>
</g>
<g>
<title>ksys_write (437 samples, 5.35%)</title><rect x="882.3" y="643.0" width="63.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="885.3" y="654.0">ksys_wr..</text>
</g>
<g>
<title>__fdget_pos (18 samples, 0.22%)</title><rect x="883.1" y="627.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.17%)</title><rect x="883.3" y="611.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.3" y="622.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.13%)</title><rect x="883.7" y="595.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="886.7" y="606.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="885.3" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="888.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="885.7" y="627.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.7" y="638.0"></text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.02%)</title><rect x="886.4" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="889.4" y="638.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="886.9" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.9" y="638.0"></text>
</g>
<g>
<title>vfs_write (402 samples, 4.92%)</title><rect x="887.3" y="627.0" width="58.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="890.3" y="638.0">vfs_wr..</text>
</g>
<g>
<title>__sb_start_write (10 samples, 0.12%)</title><rect x="888.6" y="611.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="891.6" y="622.0"></text>
</g>
<g>
<title>__vfs_write (362 samples, 4.43%)</title><rect x="890.1" y="611.0" width="52.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="893.1" y="622.0">__vfs..</text>
</g>
<g>
<title>new_sync_write (361 samples, 4.42%)</title><rect x="890.2" y="595.0" width="52.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.2" y="606.0">new_s..</text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 0.05%)</title><rect x="890.5" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="893.5" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (351 samples, 4.29%)</title><rect x="891.2" y="579.0" width="50.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="894.2" y="590.0">ext4_..</text>
</g>
<g>
<title>__generic_file_write_iter (333 samples, 4.07%)</title><rect x="892.4" y="563.0" width="48.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="895.4" y="574.0">__ge..</text>
</g>
<g>
<title>__x86_indirect_thunk_r10 (2 samples, 0.02%)</title><rect x="893.4" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="896.4" y="558.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.02%)</title><rect x="893.7" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="896.7" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (4 samples, 0.05%)</title><rect x="894.2" y="547.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="897.2" y="558.0"></text>
</g>
<g>
<title>file_remove_privs (6 samples, 0.07%)</title><rect x="894.8" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="897.8" y="558.0"></text>
</g>
<g>
<title>file_update_time (20 samples, 0.24%)</title><rect x="895.7" y="547.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.7" y="558.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.04%)</title><rect x="895.7" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="898.7" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.02%)</title><rect x="895.8" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.8" y="526.0"></text>
</g>
<g>
<title>generic_update_time (14 samples, 0.17%)</title><rect x="896.1" y="531.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="899.1" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (13 samples, 0.16%)</title><rect x="896.3" y="515.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="899.3" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (12 samples, 0.15%)</title><rect x="896.4" y="499.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="899.4" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.02%)</title><rect x="896.4" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="899.4" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.05%)</title><rect x="896.7" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="899.7" y="494.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.02%)</title><rect x="896.7" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.7" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.02%)</title><rect x="897.0" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="900.0" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (6 samples, 0.07%)</title><rect x="897.3" y="483.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.3" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.04%)</title><rect x="897.3" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="900.3" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.04%)</title><rect x="897.3" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="900.3" y="462.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.04%)</title><rect x="897.7" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="900.7" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.02%)</title><rect x="897.7" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="900.7" y="462.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.02%)</title><rect x="898.1" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="901.1" y="542.0"></text>
</g>
<g>
<title>generic_perform_write (289 samples, 3.54%)</title><rect x="898.6" y="547.0" width="41.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.6" y="558.0">gen..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.04%)</title><rect x="899.9" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="902.9" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (91 samples, 1.11%)</title><rect x="900.4" y="531.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="903.4" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (33 samples, 0.40%)</title><rect x="901.5" y="515.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="904.5" y="526.0"></text>
</g>
<g>
<title>ext4_journal_check_start (3 samples, 0.04%)</title><rect x="901.7" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="904.7" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (26 samples, 0.32%)</title><rect x="902.2" y="499.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="905.2" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (12 samples, 0.15%)</title><rect x="902.6" y="483.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="905.6" y="494.0"></text>
</g>
<g>
<title>start_this_handle (9 samples, 0.11%)</title><rect x="904.6" y="483.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.6" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (4 samples, 0.05%)</title><rect x="905.4" y="467.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="908.4" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (4 samples, 0.05%)</title><rect x="906.2" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="909.2" y="526.0"></text>
</g>
<g>
<title>ext4_nonda_switch (5 samples, 0.06%)</title><rect x="906.8" y="515.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="909.8" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (40 samples, 0.49%)</title><rect x="907.5" y="515.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.5" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (35 samples, 0.43%)</title><rect x="907.7" y="499.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.7" y="510.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (4 samples, 0.05%)</title><rect x="908.0" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="911.0" y="494.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (3 samples, 0.04%)</title><rect x="908.0" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="911.0" y="478.0"></text>
</g>
<g>
<title>find_get_entry (25 samples, 0.31%)</title><rect x="908.5" y="483.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="911.5" y="494.0"></text>
</g>
<g>
<title>xas_load (16 samples, 0.20%)</title><rect x="909.7" y="467.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="912.7" y="478.0"></text>
</g>
<g>
<title>xas_start (9 samples, 0.11%)</title><rect x="910.7" y="451.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="913.7" y="462.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.05%)</title><rect x="912.1" y="483.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="915.1" y="494.0"></text>
</g>
<g>
<title>wait_for_stable_page (4 samples, 0.05%)</title><rect x="912.7" y="499.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="915.7" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (161 samples, 1.97%)</title><rect x="913.6" y="531.0" width="23.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.6" y="542.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (23 samples, 0.28%)</title><rect x="914.2" y="515.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="917.2" y="526.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.04%)</title><rect x="914.2" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="917.2" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (20 samples, 0.24%)</title><rect x="914.6" y="499.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.6" y="510.0"></text>
</g>
<g>
<title>__wake_up (12 samples, 0.15%)</title><rect x="915.3" y="483.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="918.3" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.13%)</title><rect x="915.3" y="467.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="918.3" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.09%)</title><rect x="915.9" y="451.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="918.9" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="917.2" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="920.2" y="494.0"></text>
</g>
<g>
<title>generic_write_end (132 samples, 1.61%)</title><rect x="917.8" y="515.0" width="19.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="920.8" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (125 samples, 1.53%)</title><rect x="917.8" y="499.0" width="18.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="920.8" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (120 samples, 1.47%)</title><rect x="917.9" y="483.0" width="17.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="920.9" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (111 samples, 1.36%)</title><rect x="919.1" y="467.0" width="16.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="922.1" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (7 samples, 0.09%)</title><rect x="919.1" y="451.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="922.1" y="462.0"></text>
</g>
<g>
<title>ext4_journal_check_start (5 samples, 0.06%)</title><rect x="919.2" y="435.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="922.2" y="446.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="919.6" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="922.6" y="430.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="919.6" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="922.6" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.04%)</title><rect x="920.1" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="923.1" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (98 samples, 1.20%)</title><rect x="920.7" y="451.0" width="14.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="923.7" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (61 samples, 0.75%)</title><rect x="920.7" y="435.0" width="8.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="923.7" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (53 samples, 0.65%)</title><rect x="921.4" y="419.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="924.4" y="430.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (6 samples, 0.07%)</title><rect x="923.4" y="403.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="926.4" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (2 samples, 0.02%)</title><rect x="923.8" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="926.8" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="924.3" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="927.3" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (22 samples, 0.27%)</title><rect x="924.7" y="403.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.7" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (3 samples, 0.04%)</title><rect x="924.8" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="927.8" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (18 samples, 0.22%)</title><rect x="925.3" y="387.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="928.3" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (5 samples, 0.06%)</title><rect x="926.0" y="371.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="929.0" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (8 samples, 0.10%)</title><rect x="926.7" y="371.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.7" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (6 samples, 0.07%)</title><rect x="927.0" y="355.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="930.0" y="366.0"></text>
</g>
<g>
<title>from_kgid (2 samples, 0.02%)</title><rect x="927.9" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="930.9" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.04%)</title><rect x="928.5" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="931.5" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.04%)</title><rect x="929.0" y="419.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="932.0" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (37 samples, 0.45%)</title><rect x="929.5" y="435.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="932.5" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (27 samples, 0.33%)</title><rect x="929.6" y="419.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="932.6" y="430.0"></text>
</g>
<g>
<title>__getblk_gfp (15 samples, 0.18%)</title><rect x="930.6" y="403.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="933.6" y="414.0"></text>
</g>
<g>
<title>__find_get_block (13 samples, 0.16%)</title><rect x="930.8" y="387.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="933.8" y="398.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.02%)</title><rect x="932.3" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.3" y="382.0"></text>
</g>
<g>
<title>ext4_get_group_desc (4 samples, 0.05%)</title><rect x="932.8" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="935.8" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (5 samples, 0.06%)</title><rect x="933.5" y="419.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="936.5" y="430.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (4 samples, 0.05%)</title><rect x="933.6" y="403.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="936.6" y="414.0"></text>
</g>
<g>
<title>ext4_inode_table (2 samples, 0.02%)</title><rect x="934.4" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="937.4" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.02%)</title><rect x="934.8" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="937.8" y="462.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.04%)</title><rect x="935.4" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="938.4" y="494.0"></text>
</g>
<g>
<title>block_write_end (7 samples, 0.09%)</title><rect x="935.8" y="499.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="938.8" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (6 samples, 0.07%)</title><rect x="935.8" y="483.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.8" y="494.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.02%)</title><rect x="936.8" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.8" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (14 samples, 0.17%)</title><rect x="937.1" y="531.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="940.1" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.02%)</title><rect x="937.8" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.8" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.06%)</title><rect x="938.1" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.1" y="526.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.02%)</title><rect x="938.8" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.8" y="526.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (8 samples, 0.10%)</title><rect x="939.1" y="531.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.1" y="542.0"></text>
</g>
<g>
<title>down_write_trylock (2 samples, 0.02%)</title><rect x="940.4" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="943.4" y="574.0"></text>
</g>
<g>
<title>ext4_write_checks (6 samples, 0.07%)</title><rect x="940.7" y="563.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="943.7" y="574.0"></text>
</g>
<g>
<title>generic_write_check_limits (2 samples, 0.02%)</title><rect x="940.7" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="943.7" y="558.0"></text>
</g>
<g>
<title>generic_write_checks (4 samples, 0.05%)</title><rect x="941.0" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="944.0" y="558.0"></text>
</g>
<g>
<title>up_write (3 samples, 0.04%)</title><rect x="941.9" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="944.9" y="590.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="942.3" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="945.3" y="622.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="942.6" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="945.6" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (16 samples, 0.20%)</title><rect x="943.0" y="611.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="946.0" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="943.5" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="946.5" y="606.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.13%)</title><rect x="943.8" y="595.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="946.8" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (6 samples, 0.07%)</title><rect x="944.0" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="947.0" y="590.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.07%)</title><rect x="944.0" y="563.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.0" y="574.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.04%)</title><rect x="944.9" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.9" y="590.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.04%)</title><rect x="945.6" y="707.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="948.6" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.02%)</title><rect x="946.3" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="949.3" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.04%)</title><rect x="946.6" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="949.6" y="718.0"></text>
</g>
<g>
<title>__libc_free (5 samples, 0.06%)</title><rect x="947.2" y="723.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="950.2" y="734.0"></text>
</g>
<g>
<title>__malloc (12 samples, 0.15%)</title><rect x="947.9" y="723.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="950.9" y="734.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (7 samples, 0.09%)</title><rect x="949.7" y="723.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="952.7" y="734.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (7 samples, 0.09%)</title><rect x="950.7" y="723.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="953.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.04%)</title><rect x="951.7" y="723.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="954.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="951.8" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="954.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="951.8" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="954.8" y="702.0"></text>
</g>
<g>
<title>memcpy@plt (3 samples, 0.04%)</title><rect x="952.3" y="723.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="955.3" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (4 samples, 0.05%)</title><rect x="952.7" y="723.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="955.7" y="734.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.05%)</title><rect x="953.4" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="956.4" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.11%)</title><rect x="954.0" y="739.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="957.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.07%)</title><rect x="954.4" y="723.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="957.4" y="734.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="954.6" y="707.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="957.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (7 samples, 0.09%)</title><rect x="955.3" y="755.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="958.3" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="955.7" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="958.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (2 samples, 0.02%)</title><rect x="956.0" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,576 samples, 19.28%)</title><rect x="956.6" y="899.0" width="227.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="959.6" y="910.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>gettimeofday (11 samples, 0.13%)</title><rect x="958.2" y="883.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="961.2" y="894.0"></text>
</g>
<g>
<title>gettimeofday@plt (3 samples, 0.04%)</title><rect x="959.8" y="883.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="962.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (427 samples, 5.22%)</title><rect x="960.4" y="883.0" width="61.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="963.4" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (420 samples, 5.14%)</title><rect x="961.4" y="867.0" width="60.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.4" y="878.0">one/ni..</text>
</g>
<g>
<title>JVM_IHashCode (109 samples, 1.33%)</title><rect x="963.8" y="851.0" width="15.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="966.8" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.02%)</title><rect x="963.8" y="835.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="966.8" y="846.0"></text>
</g>
<g>
<title>epoll_wait (107 samples, 1.31%)</title><rect x="964.1" y="835.0" width="15.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="967.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 1.22%)</title><rect x="965.0" y="819.0" width="14.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 1.21%)</title><rect x="965.1" y="803.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (81 samples, 0.99%)</title><rect x="967.6" y="787.0" width="11.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="970.6" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (80 samples, 0.98%)</title><rect x="967.6" y="771.0" width="11.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="970.6" y="782.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="967.9" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="970.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="967.9" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="970.9" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="968.0" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="971.0" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="968.4" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="971.4" y="766.0"></text>
</g>
<g>
<title>ep_poll (68 samples, 0.83%)</title><rect x="968.7" y="755.0" width="9.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="971.7" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (58 samples, 0.71%)</title><rect x="969.9" y="739.0" width="8.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="972.9" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (44 samples, 0.54%)</title><rect x="971.5" y="723.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="974.5" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (37 samples, 0.45%)</title><rect x="972.0" y="707.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="975.0" y="718.0"></text>
</g>
<g>
<title>sock_poll (33 samples, 0.40%)</title><rect x="972.3" y="691.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (18 samples, 0.22%)</title><rect x="973.2" y="675.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="976.2" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (9 samples, 0.11%)</title><rect x="975.8" y="675.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="978.8" y="686.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.02%)</title><rect x="977.1" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.1" y="702.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.04%)</title><rect x="977.4" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="980.4" y="718.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="977.8" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="980.8" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.02%)</title><rect x="978.2" y="739.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="981.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.02%)</title><rect x="978.2" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="981.2" y="734.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="978.2" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="981.2" y="718.0"></text>
</g>
<g>
<title>fput (3 samples, 0.04%)</title><rect x="978.7" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="981.7" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (7 samples, 0.09%)</title><rect x="979.5" y="851.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="982.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (266 samples, 3.25%)</title><rect x="980.6" y="851.0" width="38.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="983.6" y="862.0">[un..</text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="980.6" y="835.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="983.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="980.6" y="819.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="983.6" y="830.0"></text>
</g>
<g>
<title>clock_gettime (11 samples, 0.13%)</title><rect x="980.8" y="803.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="983.8" y="814.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.07%)</title><rect x="981.6" y="787.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="984.6" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="982.4" y="835.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="985.4" y="846.0"></text>
</g>
<g>
<title>epoll_wait (250 samples, 3.06%)</title><rect x="982.9" y="835.0" width="36.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="985.9" y="846.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (227 samples, 2.78%)</title><rect x="986.2" y="819.0" width="32.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="989.2" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (226 samples, 2.76%)</title><rect x="986.3" y="803.0" width="32.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="989.3" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (184 samples, 2.25%)</title><rect x="992.3" y="787.0" width="26.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="995.3" y="798.0">_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="992.3" y="771.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="995.3" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (179 samples, 2.19%)</title><rect x="992.5" y="771.0" width="25.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="995.5" y="782.0">d..</text>
</g>
<g>
<title>__fdget (12 samples, 0.15%)</title><rect x="993.3" y="755.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="996.3" y="766.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.13%)</title><rect x="993.4" y="739.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="996.4" y="750.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.12%)</title><rect x="993.5" y="723.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="996.5" y="734.0"></text>
</g>
<g>
<title>ep_poll (160 samples, 1.96%)</title><rect x="995.1" y="755.0" width="23.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="998.1" y="766.0">e..</text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.02%)</title><rect x="997.0" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1000.0" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (134 samples, 1.64%)</title><rect x="997.3" y="739.0" width="19.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1000.3" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (84 samples, 1.03%)</title><rect x="1002.2" y="723.0" width="12.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1005.2" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (61 samples, 0.75%)</title><rect x="1005.1" y="707.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.1" y="718.0"></text>
</g>
<g>
<title>sock_poll (49 samples, 0.60%)</title><rect x="1006.4" y="691.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (28 samples, 0.34%)</title><rect x="1007.8" y="675.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1010.8" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (11 samples, 0.13%)</title><rect x="1011.9" y="675.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1014.9" y="686.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.04%)</title><rect x="1013.5" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1016.5" y="702.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.04%)</title><rect x="1013.9" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.9" y="718.0"></text>
</g>
<g>
<title>mutex_lock (16 samples, 0.20%)</title><rect x="1014.3" y="723.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.3" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.10%)</title><rect x="1017.1" y="739.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1020.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.09%)</title><rect x="1017.2" y="723.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1020.2" y="734.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.07%)</title><rect x="1017.4" y="707.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1020.4" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.06%)</title><rect x="1017.5" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1020.5" y="702.0"></text>
</g>
<g>
<title>fput (3 samples, 0.04%)</title><rect x="1018.4" y="771.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1021.4" y="782.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.06%)</title><rect x="1019.0" y="851.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1022.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 0.17%)</title><rect x="1019.8" y="851.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1022.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,113 samples, 13.61%)</title><rect x="1022.0" y="883.0" width="160.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1025.0" y="894.0">one/nio/net/Session...</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.12%)</title><rect x="1023.4" y="867.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1026.4" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.12%)</title><rect x="1023.4" y="851.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1026.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.05%)</title><rect x="1023.6" y="835.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1026.6" y="846.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.04%)</title><rect x="1023.7" y="819.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1026.7" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (5 samples, 0.06%)</title><rect x="1024.2" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1027.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,093 samples, 13.37%)</title><rect x="1024.9" y="867.0" width="157.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1027.9" y="878.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (756 samples, 9.25%)</title><rect x="1025.6" y="851.0" width="109.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1028.6" y="862.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (621 samples, 7.60%)</title><rect x="1030.5" y="835.0" width="89.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.5" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (621 samples, 7.60%)</title><rect x="1030.5" y="819.0" width="89.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.5" y="830.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (596 samples, 7.29%)</title><rect x="1032.2" y="803.0" width="86.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.2" y="814.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.04%)</title><rect x="1032.4" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (51 samples, 0.62%)</title><rect x="1032.8" y="787.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (51 samples, 0.62%)</title><rect x="1032.8" y="771.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.15%)</title><rect x="1034.4" y="755.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (12 samples, 0.15%)</title><rect x="1034.4" y="739.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1037.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.17%)</title><rect x="1036.1" y="755.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.17%)</title><rect x="1036.1" y="739.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.1" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1036.9" y="723.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1039.9" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="1036.9" y="707.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1039.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="1036.9" y="691.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1039.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1036.9" y="675.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1039.9" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="1037.1" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.1" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="1037.1" y="707.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1040.1" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1037.1" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1040.1" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="1037.1" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1037.1" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1040.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.06%)</title><rect x="1037.4" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.4" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="1038.2" y="755.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1041.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (9 samples, 0.11%)</title><rect x="1038.9" y="755.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.10%)</title><rect x="1039.0" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.10%)</title><rect x="1039.0" y="723.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1042.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.10%)</title><rect x="1039.0" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1042.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (541 samples, 6.62%)</title><rect x="1040.2" y="787.0" width="78.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.2" y="798.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.11%)</title><rect x="1040.6" y="771.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1043.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.11%)</title><rect x="1040.6" y="755.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.11%)</title><rect x="1040.6" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.6" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.11%)</title><rect x="1040.6" y="723.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.06%)</title><rect x="1041.2" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (23 samples, 0.28%)</title><rect x="1041.9" y="771.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="1043.2" y="755.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.10%)</title><rect x="1043.2" y="739.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.07%)</title><rect x="1044.4" y="755.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.07%)</title><rect x="1044.4" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.4" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.07%)</title><rect x="1044.4" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.09%)</title><rect x="1045.2" y="771.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1045.5" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="1045.5" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (20 samples, 0.24%)</title><rect x="1046.2" y="771.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.2" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.07%)</title><rect x="1048.3" y="755.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1051.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (479 samples, 5.86%)</title><rect x="1049.1" y="771.0" width="69.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.1" y="782.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (479 samples, 5.86%)</title><rect x="1049.1" y="755.0" width="69.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1052.1" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (457 samples, 5.59%)</title><rect x="1052.3" y="739.0" width="66.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.3" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.04%)</title><rect x="1052.3" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="1052.3" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (454 samples, 5.55%)</title><rect x="1052.7" y="723.0" width="65.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.7" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (454 samples, 5.55%)</title><rect x="1052.7" y="707.0" width="65.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.7" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (454 samples, 5.55%)</title><rect x="1052.7" y="691.0" width="65.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.7" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (454 samples, 5.55%)</title><rect x="1052.7" y="675.0" width="65.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.7" y="686.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (420 samples, 5.14%)</title><rect x="1057.6" y="659.0" width="60.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.6" y="670.0">jdk/in..</text>
</g>
<g>
<title>Parker::unpark() (4 samples, 0.05%)</title><rect x="1058.8" y="643.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1061.8" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.02%)</title><rect x="1059.4" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1062.4" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.05%)</title><rect x="1059.7" y="643.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1062.7" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="1060.2" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1063.2" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (4 samples, 0.05%)</title><rect x="1060.5" y="643.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1063.5" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (104 samples, 1.27%)</title><rect x="1061.1" y="643.0" width="15.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1064.1" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.09%)</title><rect x="1063.3" y="627.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1066.3" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="1064.4" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1067.4" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (9 samples, 0.11%)</title><rect x="1064.7" y="627.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1067.7" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (6 samples, 0.07%)</title><rect x="1066.0" y="627.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1069.0" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (21 samples, 0.26%)</title><rect x="1066.9" y="627.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1069.9" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="1069.9" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1072.9" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (6 samples, 0.07%)</title><rect x="1070.3" y="627.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.3" y="638.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="1071.2" y="627.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1074.2" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (27 samples, 0.33%)</title><rect x="1071.5" y="627.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1074.5" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.05%)</title><rect x="1075.5" y="627.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1078.5" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (271 samples, 3.31%)</title><rect x="1076.1" y="643.0" width="39.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1079.1" y="654.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (253 samples, 3.09%)</title><rect x="1078.7" y="627.0" width="36.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1081.7" y="638.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (252 samples, 3.08%)</title><rect x="1078.9" y="611.0" width="36.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1081.9" y="622.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (215 samples, 2.63%)</title><rect x="1083.9" y="595.0" width="31.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1086.9" y="606.0">__..</text>
</g>
<g>
<title>do_futex (214 samples, 2.62%)</title><rect x="1084.1" y="579.0" width="30.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1087.1" y="590.0">do..</text>
</g>
<g>
<title>futex_wake (203 samples, 2.48%)</title><rect x="1084.8" y="563.0" width="29.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1087.8" y="574.0">fu..</text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="1085.5" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1088.5" y="558.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (2 samples, 0.02%)</title><rect x="1085.9" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1088.9" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.06%)</title><rect x="1086.2" y="547.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1089.2" y="558.0"></text>
</g>
<g>
<title>wake_q_add (3 samples, 0.04%)</title><rect x="1086.5" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1089.5" y="542.0"></text>
</g>
<g>
<title>wake_up_q (188 samples, 2.30%)</title><rect x="1086.9" y="547.0" width="27.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1089.9" y="558.0">w..</text>
</g>
<g>
<title>try_to_wake_up (188 samples, 2.30%)</title><rect x="1086.9" y="531.0" width="27.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1089.9" y="542.0">t..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="1086.9" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1089.9" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (186 samples, 2.28%)</title><rect x="1087.2" y="515.0" width="26.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1090.2" y="526.0">_..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="1114.1" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.1" y="574.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="1114.4" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1117.4" y="574.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="1114.9" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1117.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (13 samples, 0.16%)</title><rect x="1115.2" y="643.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1118.2" y="654.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.07%)</title><rect x="1117.3" y="643.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1120.3" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1118.3" y="803.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1121.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.11%)</title><rect x="1118.6" y="803.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.11%)</title><rect x="1118.6" y="787.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.07%)</title><rect x="1118.6" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="1119.4" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="1119.4" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="1119.4" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="1119.8" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (38 samples, 0.46%)</title><rect x="1120.1" y="835.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.1" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1121.3" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1124.3" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.02%)</title><rect x="1121.3" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.3" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.02%)</title><rect x="1121.3" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.3" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="1121.3" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1124.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.07%)</title><rect x="1121.6" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.07%)</title><rect x="1121.6" y="803.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.07%)</title><rect x="1121.6" y="787.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1124.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.07%)</title><rect x="1121.6" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="1121.9" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.21%)</title><rect x="1122.4" y="819.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.21%)</title><rect x="1122.4" y="803.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.06%)</title><rect x="1124.9" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.23%)</title><rect x="1125.6" y="835.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.18%)</title><rect x="1126.1" y="819.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.18%)</title><rect x="1126.1" y="803.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.1" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="1127.6" y="787.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1130.6" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="1127.9" y="787.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1130.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 0.54%)</title><rect x="1128.4" y="835.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.4" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (8 samples, 0.10%)</title><rect x="1129.1" y="819.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1132.1" y="830.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.10%)</title><rect x="1130.2" y="819.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1133.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.28%)</title><rect x="1131.4" y="819.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1134.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.02%)</title><rect x="1134.7" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1137.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (330 samples, 4.04%)</title><rect x="1135.0" y="851.0" width="47.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.0" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (316 samples, 3.87%)</title><rect x="1135.7" y="835.0" width="45.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.7" y="846.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (57 samples, 0.70%)</title><rect x="1137.6" y="819.0" width="8.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1140.6" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.09%)</title><rect x="1139.2" y="803.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.2" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="1140.2" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.2" y="814.0"></text>
</g>
<g>
<title>__memmove_ssse3 (13 samples, 0.16%)</title><rect x="1140.5" y="803.0" width="1.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1143.5" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.02%)</title><rect x="1142.1" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1145.1" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="1142.1" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1145.1" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.02%)</title><rect x="1142.1" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.1" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (21 samples, 0.26%)</title><rect x="1142.4" y="803.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1145.4" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="1143.7" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.7" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="1144.2" y="787.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1147.2" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.06%)</title><rect x="1144.7" y="787.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1147.7" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.04%)</title><rect x="1145.0" y="771.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.0" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.02%)</title><rect x="1145.5" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.5" y="814.0"></text>
</g>
<g>
<title>__GI___recv (233 samples, 2.85%)</title><rect x="1145.8" y="819.0" width="33.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1148.8" y="830.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (214 samples, 2.62%)</title><rect x="1148.6" y="803.0" width="30.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.6" y="814.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.04%)</title><rect x="1148.6" y="787.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1151.6" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (211 samples, 2.58%)</title><rect x="1149.0" y="787.0" width="30.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1152.0" y="798.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (174 samples, 2.13%)</title><rect x="1154.3" y="771.0" width="25.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.3" y="782.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (167 samples, 2.04%)</title><rect x="1154.5" y="755.0" width="24.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.5" y="766.0">_..</text>
</g>
<g>
<title>sock_recvmsg (140 samples, 1.71%)</title><rect x="1156.2" y="739.0" width="20.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1159.2" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (121 samples, 1.48%)</title><rect x="1156.5" y="723.0" width="17.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1159.5" y="734.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="1157.7" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.7" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.05%)</title><rect x="1158.1" y="707.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1161.1" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (106 samples, 1.30%)</title><rect x="1158.7" y="707.0" width="15.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1161.7" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.11%)</title><rect x="1161.7" y="691.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1164.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.09%)</title><rect x="1161.7" y="675.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1164.7" y="686.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.05%)</title><rect x="1161.7" y="659.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1164.7" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="1162.3" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1165.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="1163.2" y="691.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1166.2" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="1163.7" y="691.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1166.7" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (46 samples, 0.56%)</title><rect x="1164.2" y="691.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1167.2" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (45 samples, 0.55%)</title><rect x="1164.2" y="675.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1167.2" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (40 samples, 0.49%)</title><rect x="1164.9" y="659.0" width="5.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1167.9" y="670.0"></text>
</g>
<g>
<title>__check_object_size (22 samples, 0.27%)</title><rect x="1165.0" y="643.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1168.0" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="1165.6" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.6" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (15 samples, 0.18%)</title><rect x="1166.0" y="627.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1169.0" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.12%)</title><rect x="1168.3" y="643.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1171.3" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.11%)</title><rect x="1168.5" y="627.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1171.5" y="638.0"></text>
</g>
<g>
<title>check_stack_object (6 samples, 0.07%)</title><rect x="1169.8" y="643.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.8" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="1170.8" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1173.8" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (17 samples, 0.21%)</title><rect x="1171.2" y="691.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1174.2" y="702.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.07%)</title><rect x="1171.5" y="675.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1174.5" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (9 samples, 0.11%)</title><rect x="1172.4" y="675.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1175.4" y="686.0"></text>
</g>
<g>
<title>ktime_get (9 samples, 0.11%)</title><rect x="1172.4" y="659.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1175.4" y="670.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.06%)</title><rect x="1173.0" y="643.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1176.0" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="1173.7" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1176.7" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.20%)</title><rect x="1174.0" y="723.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1177.0" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (12 samples, 0.15%)</title><rect x="1174.6" y="707.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1177.6" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.15%)</title><rect x="1174.6" y="691.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1177.6" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.12%)</title><rect x="1174.8" y="675.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.8" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.06%)</title><rect x="1175.6" y="659.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.6" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (15 samples, 0.18%)</title><rect x="1176.4" y="739.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1179.4" y="750.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.16%)</title><rect x="1176.6" y="723.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.6" y="734.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.15%)</title><rect x="1176.7" y="707.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1179.7" y="718.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.12%)</title><rect x="1177.0" y="691.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1180.0" y="702.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="1178.6" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1181.6" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.02%)</title><rect x="1179.2" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.07%)</title><rect x="1179.5" y="819.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1182.5" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="1180.3" y="819.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1183.3" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="1180.8" y="819.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1183.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (9 samples, 0.11%)</title><rect x="1181.3" y="835.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.02%)</title><rect x="1182.3" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.3" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.12%)</title><rect x="1182.6" y="883.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.6" y="894.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.09%)</title><rect x="1183.1" y="867.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1186.1" y="878.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.09%)</title><rect x="1183.1" y="851.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1186.1" y="862.0"></text>
</g>
<g>
<title>start_thread (20 samples, 0.24%)</title><rect x="1184.1" y="899.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1187.1" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (20 samples, 0.24%)</title><rect x="1184.1" y="883.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1187.1" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (20 samples, 0.24%)</title><rect x="1184.1" y="867.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.1" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 0.11%)</title><rect x="1184.1" y="851.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.1" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.11%)</title><rect x="1184.1" y="835.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.1" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.06%)</title><rect x="1184.1" y="819.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.1" y="830.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.06%)</title><rect x="1184.1" y="803.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1187.1" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1184.9" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.04%)</title><rect x="1184.9" y="803.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.02%)</title><rect x="1185.1" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.1" y="798.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.02%)</title><rect x="1185.1" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.1" y="782.0"></text>
</g>
<g>
<title>JavaThread::run() (8 samples, 0.10%)</title><rect x="1185.4" y="851.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.4" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (8 samples, 0.10%)</title><rect x="1185.4" y="835.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.4" y="846.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (8 samples, 0.10%)</title><rect x="1185.4" y="819.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.4" y="830.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.10%)</title><rect x="1185.4" y="803.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.4" y="814.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (8 samples, 0.10%)</title><rect x="1185.4" y="787.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.4" y="798.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (4 samples, 0.05%)</title><rect x="1185.4" y="771.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.4" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.04%)</title><rect x="1185.5" y="755.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.02%)</title><rect x="1185.5" y="739.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.5" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 0.04%)</title><rect x="1186.0" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="782.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.02%)</title><rect x="1186.5" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.02%)</title><rect x="1186.5" y="835.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.5" y="846.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (10 samples, 0.12%)</title><rect x="1187.0" y="899.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="910.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (11 samples, 0.13%)</title><rect x="1188.4" y="899.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.4" y="910.0"></text>
</g>
</g>
</svg>
