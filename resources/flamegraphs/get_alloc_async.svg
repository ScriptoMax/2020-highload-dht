<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Java async client | RAM</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (229,957 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (133,960 samples, 58.25%)</title><rect x="10.0" y="691.0" width="687.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (85,330 samples, 37.11%)</title><rect x="10.0" y="675.0" width="437.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils$$Lambda$120/1292373631.get (85,326 samples, 37.11%)</title><rect x="10.0" y="659.0" width="437.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="670.0">ru/mail/polis/service/codearound/FutureUtils$$Lambda$120/129..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.lambda$execLocalRequest$0 (85,326 samples, 37.11%)</title><rect x="10.0" y="643.0" width="437.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="654.0">ru/mail/polis/service/codearound/FutureUtils.lambda$execLoca..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.getKeyFromRequest (85,318 samples, 37.10%)</title><rect x="10.0" y="627.0" width="437.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="638.0">ru/mail/polis/service/codearound/FutureUtils.getKeyFromRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (85,318 samples, 37.10%)</title><rect x="10.0" y="611.0" width="437.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="622.0">one/nio/http/Request.getParameter</text>
</g>
<g>
<title>java/lang/String.substring (85,318 samples, 37.10%)</title><rect x="10.0" y="595.0" width="437.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="606.0">java/lang/String.substring</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85,318 samples, 37.10%)</title><rect x="10.0" y="579.0" width="437.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="590.0">java/lang/StringLatin1.newString</text>
</g>
<g>
<title>java.lang.String (85,316 samples, 37.10%)</title><rect x="10.0" y="563.0" width="437.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.0" y="574.0">java.lang.String</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (28,319 samples, 12.31%)</title><rect x="447.9" y="675.0" width="145.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.9" y="686.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (28,319 samples, 12.31%)</title><rect x="447.9" y="659.0" width="145.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.9" y="670.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (28,319 samples, 12.31%)</title><rect x="447.9" y="643.0" width="145.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.9" y="654.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (28,319 samples, 12.31%)</title><rect x="447.9" y="627.0" width="145.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.9" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (28,319 samples, 12.31%)</title><rect x="447.9" y="611.0" width="145.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.9" y="622.0">java/util/concurre..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$224/98912514.accept (28,319 samples, 12.31%)</title><rect x="447.9" y="595.0" width="145.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.9" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$getWithMultipleNodes$0 (28,319 samples, 12.31%)</title><rect x="447.9" y="579.0" width="145.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.9" y="590.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execGetWithFutures (28,319 samples, 12.31%)</title><rect x="447.9" y="563.0" width="145.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.9" y="574.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncConnectUtils.body (9,455 samples, 4.11%)</title><rect x="447.9" y="547.0" width="48.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.9" y="558.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncConnectUtils.body (9,455 samples, 4.11%)</title><rect x="447.9" y="531.0" width="48.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.9" y="542.0">ru/m..</text>
</g>
<g>
<title>byte[] (9,455 samples, 4.11%)</title><rect x="447.9" y="515.0" width="48.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="450.9" y="526.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (18,864 samples, 8.20%)</title><rect x="496.4" y="547.0" width="96.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.4" y="558.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18,863 samples, 8.20%)</title><rect x="496.4" y="531.0" width="96.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.4" y="542.0">java/nio/By..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18,863 samples, 8.20%)</title><rect x="496.4" y="515.0" width="96.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.4" y="526.0">java/nio/By..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18,863 samples, 8.20%)</title><rect x="496.4" y="499.0" width="96.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="499.4" y="510.0">java.nio.He..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20,311 samples, 8.83%)</title><rect x="593.2" y="675.0" width="104.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.2" y="686.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20,311 samples, 8.83%)</title><rect x="593.2" y="659.0" width="104.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.2" y="670.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9,974 samples, 4.34%)</title><rect x="593.2" y="643.0" width="51.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.2" y="654.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,974 samples, 4.34%)</title><rect x="593.2" y="627.0" width="51.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.2" y="638.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9,974 samples, 4.34%)</title><rect x="593.2" y="611.0" width="51.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.2" y="622.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (66 samples, 0.03%)</title><rect x="593.2" y="595.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="596.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1557312951.apply (9,908 samples, 4.31%)</title><rect x="593.5" y="595.0" width="50.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.5" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (9,908 samples, 4.31%)</title><rect x="593.5" y="579.0" width="50.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.5" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (9,908 samples, 4.31%)</title><rect x="593.5" y="563.0" width="50.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.5" y="574.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (85 samples, 0.04%)</title><rect x="593.5" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.04%)</title><rect x="593.5" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/1949660912.get$Lambda (52 samples, 0.02%)</title><rect x="593.5" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$183 (52 samples, 0.02%)</title><rect x="593.5" y="499.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="596.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (139 samples, 0.06%)</title><rect x="594.0" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (139 samples, 0.06%)</title><rect x="594.0" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (66 samples, 0.03%)</title><rect x="594.0" y="515.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="597.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.03%)</title><rect x="594.3" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.03%)</title><rect x="594.3" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (73 samples, 0.03%)</title><rect x="594.3" y="483.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="597.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (264 samples, 0.11%)</title><rect x="594.7" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (264 samples, 0.11%)</title><rect x="594.7" y="531.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (141 samples, 0.06%)</title><rect x="594.7" y="515.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="597.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (123 samples, 0.05%)</title><rect x="595.4" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (123 samples, 0.05%)</title><rect x="595.4" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (123 samples, 0.05%)</title><rect x="595.4" y="483.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="598.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (9,090 samples, 3.95%)</title><rect x="596.0" y="547.0" width="46.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.0" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (9,090 samples, 3.95%)</title><rect x="596.0" y="531.0" width="46.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.0" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (9,090 samples, 3.95%)</title><rect x="596.0" y="515.0" width="46.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.0" y="526.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (130 samples, 0.06%)</title><rect x="596.0" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (130 samples, 0.06%)</title><rect x="596.0" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6,250 samples, 2.72%)</title><rect x="596.7" y="499.0" width="32.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.7" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6,250 samples, 2.72%)</title><rect x="596.7" y="483.0" width="32.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.7" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,190 samples, 2.69%)</title><rect x="596.7" y="467.0" width="31.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.7" y="478.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1014279463.apply (6,190 samples, 2.69%)</title><rect x="596.7" y="451.0" width="31.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.7" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (6,190 samples, 2.69%)</title><rect x="596.7" y="435.0" width="31.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.7" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6,190 samples, 2.69%)</title><rect x="596.7" y="419.0" width="31.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.7" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/885247476.apply (6,190 samples, 2.69%)</title><rect x="596.7" y="403.0" width="31.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.7" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (6,190 samples, 2.69%)</title><rect x="596.7" y="387.0" width="31.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.7" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.03%)</title><rect x="596.7" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.03%)</title><rect x="596.7" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$182/511051166.get$Lambda (60 samples, 0.03%)</title><rect x="596.7" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$182 (60 samples, 0.03%)</title><rect x="596.7" y="323.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="599.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (149 samples, 0.06%)</title><rect x="597.0" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (149 samples, 0.06%)</title><rect x="597.0" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (73 samples, 0.03%)</title><rect x="597.0" y="339.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="600.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.03%)</title><rect x="597.4" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (73 samples, 0.03%)</title><rect x="597.4" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="600.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (73 samples, 0.03%)</title><rect x="597.4" y="307.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="600.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (137 samples, 0.06%)</title><rect x="597.8" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (137 samples, 0.06%)</title><rect x="597.8" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (81 samples, 0.04%)</title><rect x="597.8" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="600.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.02%)</title><rect x="598.2" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.02%)</title><rect x="598.2" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.02%)</title><rect x="598.2" y="307.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="601.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (5,844 samples, 2.54%)</title><rect x="598.5" y="371.0" width="30.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.5" y="382.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.02%)</title><rect x="598.5" y="355.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.02%)</title><rect x="598.5" y="339.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,775 samples, 2.08%)</title><rect x="598.7" y="355.0" width="24.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.7" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,775 samples, 2.08%)</title><rect x="598.7" y="339.0" width="24.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.7" y="350.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (51 samples, 0.02%)</title><rect x="598.7" y="323.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="601.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$175/1685208549.apply (4,591 samples, 2.00%)</title><rect x="599.0" y="323.0" width="23.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.0" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (4,591 samples, 2.00%)</title><rect x="599.0" y="307.0" width="23.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.0" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (134 samples, 0.06%)</title><rect x="599.1" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (134 samples, 0.06%)</title><rect x="599.1" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (74 samples, 0.03%)</title><rect x="599.1" y="259.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="602.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.03%)</title><rect x="599.5" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.03%)</title><rect x="599.5" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.03%)</title><rect x="599.5" y="227.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="602.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.03%)</title><rect x="599.8" y="291.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="602.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (86 samples, 0.04%)</title><rect x="600.1" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (51 samples, 0.02%)</title><rect x="600.3" y="275.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (51 samples, 0.02%)</title><rect x="600.3" y="259.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (51 samples, 0.02%)</title><rect x="600.3" y="243.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (51 samples, 0.02%)</title><rect x="600.3" y="227.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (51 samples, 0.02%)</title><rect x="600.3" y="211.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.3" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (51 samples, 0.02%)</title><rect x="600.3" y="195.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="603.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (157 samples, 0.07%)</title><rect x="600.5" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (157 samples, 0.07%)</title><rect x="600.5" y="275.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (118 samples, 0.05%)</title><rect x="600.7" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (118 samples, 0.05%)</title><rect x="600.7" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (74 samples, 0.03%)</title><rect x="600.7" y="227.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="603.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (4,131 samples, 1.80%)</title><rect x="601.4" y="291.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.4" y="302.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (353 samples, 0.15%)</title><rect x="601.6" y="275.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (353 samples, 0.15%)</title><rect x="601.6" y="259.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (353 samples, 0.15%)</title><rect x="601.6" y="243.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.6" y="254.0"></text>
</g>
<g>
<title>byte[] (353 samples, 0.15%)</title><rect x="601.6" y="227.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="604.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (157 samples, 0.07%)</title><rect x="603.4" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.4" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (157 samples, 0.07%)</title><rect x="603.4" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.4" y="270.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.07%)</title><rect x="603.4" y="243.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="606.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (323 samples, 0.14%)</title><rect x="604.2" y="275.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (323 samples, 0.14%)</title><rect x="604.2" y="259.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (323 samples, 0.14%)</title><rect x="604.2" y="243.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.2" y="254.0"></text>
</g>
<g>
<title>byte[] (323 samples, 0.14%)</title><rect x="604.2" y="227.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="607.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (101 samples, 0.04%)</title><rect x="605.8" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (101 samples, 0.04%)</title><rect x="605.8" y="259.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.8" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (101 samples, 0.04%)</title><rect x="605.8" y="243.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="608.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,460 samples, 1.07%)</title><rect x="606.6" y="275.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,384 samples, 0.60%)</title><rect x="606.8" y="259.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (868 samples, 0.38%)</title><rect x="606.8" y="243.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.8" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (868 samples, 0.38%)</title><rect x="606.8" y="227.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.8" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (868 samples, 0.38%)</title><rect x="606.8" y="211.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (868 samples, 0.38%)</title><rect x="606.8" y="195.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.8" y="206.0"></text>
</g>
<g>
<title>byte[] (868 samples, 0.38%)</title><rect x="606.8" y="179.0" width="4.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="609.8" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (131 samples, 0.06%)</title><rect x="611.3" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (131 samples, 0.06%)</title><rect x="611.3" y="227.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (131 samples, 0.06%)</title><rect x="611.3" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (131 samples, 0.06%)</title><rect x="611.3" y="195.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="614.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (126 samples, 0.05%)</title><rect x="612.0" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.0" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (62 samples, 0.03%)</title><rect x="612.0" y="227.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="615.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (64 samples, 0.03%)</title><rect x="612.3" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (64 samples, 0.03%)</title><rect x="612.3" y="211.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="615.3" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$191/1521704547.test (259 samples, 0.11%)</title><rect x="612.6" y="243.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.6" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (259 samples, 0.11%)</title><rect x="612.6" y="227.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/27319466.test (259 samples, 0.11%)</title><rect x="612.6" y="211.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (259 samples, 0.11%)</title><rect x="612.6" y="195.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.6" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1627857534.test (259 samples, 0.11%)</title><rect x="612.6" y="179.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.6" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (259 samples, 0.11%)</title><rect x="612.6" y="163.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/728258269.test (259 samples, 0.11%)</title><rect x="612.6" y="147.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (259 samples, 0.11%)</title><rect x="612.6" y="131.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (259 samples, 0.11%)</title><rect x="612.6" y="115.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (259 samples, 0.11%)</title><rect x="612.6" y="99.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (150 samples, 0.07%)</title><rect x="612.6" y="83.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="615.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (109 samples, 0.05%)</title><rect x="613.4" y="83.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.4" y="94.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.05%)</title><rect x="613.4" y="67.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="616.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,031 samples, 0.45%)</title><rect x="613.9" y="259.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,031 samples, 0.45%)</title><rect x="613.9" y="243.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,031 samples, 0.45%)</title><rect x="613.9" y="227.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (49 samples, 0.02%)</title><rect x="614.1" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="617.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (104 samples, 0.05%)</title><rect x="614.4" y="211.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="617.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.03%)</title><rect x="615.1" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.03%)</title><rect x="615.1" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.1" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.get$Lambda (72 samples, 0.03%)</title><rect x="615.1" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.1" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (72 samples, 0.03%)</title><rect x="615.1" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="618.1" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (50 samples, 0.02%)</title><rect x="615.4" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.4" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (50 samples, 0.02%)</title><rect x="615.4" y="195.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="618.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (607 samples, 0.26%)</title><rect x="615.7" y="211.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.7" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (607 samples, 0.26%)</title><rect x="615.7" y="195.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.7" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (607 samples, 0.26%)</title><rect x="615.7" y="179.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.7" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (103 samples, 0.04%)</title><rect x="615.7" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.7" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (103 samples, 0.04%)</title><rect x="615.7" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (103 samples, 0.04%)</title><rect x="615.7" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.04%)</title><rect x="615.7" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.04%)</title><rect x="615.7" y="99.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.7" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.04%)</title><rect x="615.7" y="83.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.7" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.04%)</title><rect x="615.7" y="67.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (103 samples, 0.04%)</title><rect x="615.7" y="51.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.04%)</title><rect x="615.7" y="35.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="618.7" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (301 samples, 0.13%)</title><rect x="616.2" y="163.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.2" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (301 samples, 0.13%)</title><rect x="616.2" y="147.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (144 samples, 0.06%)</title><rect x="616.2" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (144 samples, 0.06%)</title><rect x="616.2" y="115.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (144 samples, 0.06%)</title><rect x="616.2" y="99.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="619.2" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (157 samples, 0.07%)</title><rect x="617.0" y="131.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.0" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (157 samples, 0.07%)</title><rect x="617.0" y="115.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="620.0" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (203 samples, 0.09%)</title><rect x="617.8" y="163.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.8" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (203 samples, 0.09%)</title><rect x="617.8" y="147.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="620.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (78 samples, 0.03%)</title><rect x="618.8" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (78 samples, 0.03%)</title><rect x="618.8" y="195.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="621.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (153 samples, 0.07%)</title><rect x="619.2" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.05%)</title><rect x="619.5" y="259.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (106 samples, 0.05%)</title><rect x="619.5" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1177377518.invoke (106 samples, 0.05%)</title><rect x="619.5" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.05%)</title><rect x="619.5" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (54 samples, 0.02%)</title><rect x="619.5" y="195.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.02%)</title><rect x="619.5" y="179.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="622.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.02%)</title><rect x="619.7" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.02%)</title><rect x="619.7" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.7" y="190.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.02%)</title><rect x="619.7" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="622.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (120 samples, 0.05%)</title><rect x="620.0" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (120 samples, 0.05%)</title><rect x="620.0" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.05%)</title><rect x="620.0" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (120 samples, 0.05%)</title><rect x="620.0" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1177377518.invoke (120 samples, 0.05%)</title><rect x="620.0" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.05%)</title><rect x="620.0" y="195.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (79 samples, 0.03%)</title><rect x="620.2" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (79 samples, 0.03%)</title><rect x="620.2" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.2" y="174.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.03%)</title><rect x="620.2" y="147.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="623.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (376 samples, 0.16%)</title><rect x="620.6" y="275.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.6" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (99 samples, 0.04%)</title><rect x="620.6" y="259.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="623.6" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (103 samples, 0.04%)</title><rect x="621.1" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.04%)</title><rect x="621.1" y="243.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="624.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (174 samples, 0.08%)</title><rect x="621.7" y="259.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (174 samples, 0.08%)</title><rect x="621.7" y="243.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="624.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (133 samples, 0.06%)</title><rect x="622.5" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (133 samples, 0.06%)</title><rect x="622.5" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (133 samples, 0.06%)</title><rect x="622.5" y="291.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="625.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (162 samples, 0.07%)</title><rect x="623.2" y="355.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="626.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.03%)</title><rect x="624.1" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="627.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (788 samples, 0.34%)</title><rect x="624.4" y="355.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.02%)</title><rect x="624.4" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.02%)</title><rect x="624.4" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (63 samples, 0.03%)</title><rect x="624.7" y="339.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="627.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (68 samples, 0.03%)</title><rect x="625.0" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="628.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (84 samples, 0.04%)</title><rect x="625.4" y="339.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="628.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (250 samples, 0.11%)</title><rect x="625.8" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (250 samples, 0.11%)</title><rect x="625.8" y="323.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (250 samples, 0.11%)</title><rect x="625.8" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (250 samples, 0.11%)</title><rect x="625.8" y="291.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (250 samples, 0.11%)</title><rect x="625.8" y="275.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (250 samples, 0.11%)</title><rect x="625.8" y="259.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (250 samples, 0.11%)</title><rect x="625.8" y="243.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (250 samples, 0.11%)</title><rect x="625.8" y="227.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (250 samples, 0.11%)</title><rect x="625.8" y="211.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.03%)</title><rect x="625.8" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.03%)</title><rect x="625.8" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.8" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (73 samples, 0.03%)</title><rect x="626.2" y="195.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="629.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (100 samples, 0.04%)</title><rect x="626.6" y="195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (100 samples, 0.04%)</title><rect x="626.6" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (55 samples, 0.02%)</title><rect x="626.8" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.8" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (55 samples, 0.02%)</title><rect x="626.8" y="147.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="629.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (203 samples, 0.09%)</title><rect x="627.1" y="339.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.1" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (51 samples, 0.02%)</title><rect x="627.1" y="323.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="630.1" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (80 samples, 0.03%)</title><rect x="627.3" y="323.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="630.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (72 samples, 0.03%)</title><rect x="627.7" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.7" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (72 samples, 0.03%)</title><rect x="627.7" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.7" y="318.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.03%)</title><rect x="627.7" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="630.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (66 samples, 0.03%)</title><rect x="628.1" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.03%)</title><rect x="628.1" y="323.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="631.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.03%)</title><rect x="628.5" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.03%)</title><rect x="628.5" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.03%)</title><rect x="628.5" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="631.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (126 samples, 0.05%)</title><rect x="628.8" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (126 samples, 0.05%)</title><rect x="628.8" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (60 samples, 0.03%)</title><rect x="628.8" y="467.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="631.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.03%)</title><rect x="629.1" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.03%)</title><rect x="629.1" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.03%)</title><rect x="629.1" y="435.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="632.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (2,584 samples, 1.12%)</title><rect x="629.4" y="499.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.04%)</title><rect x="629.4" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.04%)</title><rect x="629.4" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$161/186376468.get$Lambda (50 samples, 0.02%)</title><rect x="629.4" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$161 (50 samples, 0.02%)</title><rect x="629.4" y="435.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="632.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (125 samples, 0.05%)</title><rect x="629.9" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (125 samples, 0.05%)</title><rect x="629.9" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$162/766100649.apply (60 samples, 0.03%)</title><rect x="629.9" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (60 samples, 0.03%)</title><rect x="629.9" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (60 samples, 0.03%)</title><rect x="629.9" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.03%)</title><rect x="629.9" y="403.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="632.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.03%)</title><rect x="630.2" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.03%)</title><rect x="630.2" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.03%)</title><rect x="630.2" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="633.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (51 samples, 0.02%)</title><rect x="630.5" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (51 samples, 0.02%)</title><rect x="630.5" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.02%)</title><rect x="630.5" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.02%)</title><rect x="630.5" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.02%)</title><rect x="630.5" y="419.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="633.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (2,317 samples, 1.01%)</title><rect x="630.8" y="483.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (2,317 samples, 1.01%)</title><rect x="630.8" y="467.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (204 samples, 0.09%)</title><rect x="630.8" y="451.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="633.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (2,046 samples, 0.89%)</title><rect x="631.8" y="451.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.8" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (59 samples, 0.03%)</title><rect x="632.0" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="635.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (105 samples, 0.05%)</title><rect x="632.6" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (105 samples, 0.05%)</title><rect x="632.6" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (105 samples, 0.05%)</title><rect x="632.6" y="403.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="635.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (142 samples, 0.06%)</title><rect x="633.4" y="435.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="636.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (86 samples, 0.04%)</title><rect x="634.1" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="637.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (125 samples, 0.05%)</title><rect x="634.6" y="435.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="637.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (128 samples, 0.06%)</title><rect x="635.2" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="638.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (626 samples, 0.27%)</title><rect x="635.9" y="435.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.03%)</title><rect x="636.7" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.03%)</title><rect x="636.7" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (50 samples, 0.02%)</title><rect x="637.2" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="640.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.03%)</title><rect x="637.5" y="419.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="640.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (258 samples, 0.11%)</title><rect x="637.8" y="419.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (53 samples, 0.02%)</title><rect x="637.8" y="403.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="640.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (79 samples, 0.03%)</title><rect x="638.0" y="403.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="641.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (101 samples, 0.04%)</title><rect x="638.6" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (378 samples, 0.16%)</title><rect x="639.1" y="435.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (60 samples, 0.03%)</title><rect x="639.6" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="642.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (60 samples, 0.03%)</title><rect x="639.6" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="642.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (224 samples, 0.10%)</title><rect x="639.9" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (73 samples, 0.03%)</title><rect x="640.1" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="643.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (86 samples, 0.04%)</title><rect x="640.6" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (179 samples, 0.08%)</title><rect x="641.4" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/992802731.linkToTargetMethod (51 samples, 0.02%)</title><rect x="641.4" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.02%)</title><rect x="641.4" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$143/1532545.get$Lambda (51 samples, 0.02%)</title><rect x="641.4" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$143 (51 samples, 0.02%)</title><rect x="641.4" y="371.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="644.4" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (128 samples, 0.06%)</title><rect x="641.7" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$143/1532545.run (128 samples, 0.06%)</title><rect x="641.7" y="403.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (128 samples, 0.06%)</title><rect x="641.7" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.7" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (94 samples, 0.04%)</title><rect x="641.8" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (67 samples, 0.03%)</title><rect x="642.3" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.03%)</title><rect x="642.3" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="645.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (84 samples, 0.04%)</title><rect x="642.7" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (84 samples, 0.04%)</title><rect x="642.7" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (84 samples, 0.04%)</title><rect x="642.7" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.7" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (84 samples, 0.04%)</title><rect x="642.7" y="499.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="645.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (246 samples, 0.11%)</title><rect x="643.1" y="547.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (200 samples, 0.09%)</title><rect x="643.1" y="531.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="646.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (195 samples, 0.08%)</title><rect x="644.4" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (195 samples, 0.08%)</title><rect x="644.4" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (192 samples, 0.08%)</title><rect x="644.4" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (192 samples, 0.08%)</title><rect x="644.4" y="595.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (192 samples, 0.08%)</title><rect x="644.4" y="579.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="647.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$190/680108995.run (984 samples, 0.43%)</title><rect x="645.4" y="643.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (984 samples, 0.43%)</title><rect x="645.4" y="627.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (984 samples, 0.43%)</title><rect x="645.4" y="611.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (984 samples, 0.43%)</title><rect x="645.4" y="595.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (984 samples, 0.43%)</title><rect x="645.4" y="579.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (984 samples, 0.43%)</title><rect x="645.4" y="563.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (984 samples, 0.43%)</title><rect x="645.4" y="547.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (984 samples, 0.43%)</title><rect x="645.4" y="531.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (984 samples, 0.43%)</title><rect x="645.4" y="515.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (984 samples, 0.43%)</title><rect x="645.4" y="499.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (984 samples, 0.43%)</title><rect x="645.4" y="483.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (884 samples, 0.38%)</title><rect x="645.4" y="467.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.04%)</title><rect x="645.4" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.04%)</title><rect x="645.4" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (798 samples, 0.35%)</title><rect x="645.8" y="451.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (107 samples, 0.05%)</title><rect x="645.8" y="435.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="648.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (691 samples, 0.30%)</title><rect x="646.3" y="435.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (691 samples, 0.30%)</title><rect x="646.3" y="419.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (691 samples, 0.30%)</title><rect x="646.3" y="403.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (321 samples, 0.14%)</title><rect x="646.3" y="387.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (113 samples, 0.05%)</title><rect x="646.3" y="371.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="649.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$197/659260885.apply (208 samples, 0.09%)</title><rect x="646.9" y="371.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (208 samples, 0.09%)</title><rect x="646.9" y="355.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (208 samples, 0.09%)</title><rect x="646.9" y="339.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (170 samples, 0.07%)</title><rect x="647.1" y="323.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (145 samples, 0.06%)</title><rect x="647.3" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (145 samples, 0.06%)</title><rect x="647.3" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (70 samples, 0.03%)</title><rect x="647.3" y="275.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="650.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.03%)</title><rect x="647.6" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (75 samples, 0.03%)</title><rect x="647.6" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.03%)</title><rect x="647.6" y="243.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="650.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (370 samples, 0.16%)</title><rect x="648.0" y="387.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (370 samples, 0.16%)</title><rect x="648.0" y="371.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$182/511051166.apply (370 samples, 0.16%)</title><rect x="648.0" y="355.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (370 samples, 0.16%)</title><rect x="648.0" y="339.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (370 samples, 0.16%)</title><rect x="648.0" y="323.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/912003413.apply (370 samples, 0.16%)</title><rect x="648.0" y="307.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (370 samples, 0.16%)</title><rect x="648.0" y="291.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (136 samples, 0.06%)</title><rect x="648.1" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (136 samples, 0.06%)</title><rect x="648.1" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (68 samples, 0.03%)</title><rect x="648.1" y="243.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="651.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.03%)</title><rect x="648.5" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.03%)</title><rect x="648.5" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.03%)</title><rect x="648.5" y="211.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="651.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (207 samples, 0.09%)</title><rect x="648.8" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (119 samples, 0.05%)</title><rect x="648.8" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (56 samples, 0.02%)</title><rect x="648.8" y="243.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="651.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (63 samples, 0.03%)</title><rect x="649.1" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (63 samples, 0.03%)</title><rect x="649.1" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.03%)</title><rect x="649.1" y="211.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="652.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (88 samples, 0.04%)</title><rect x="649.4" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (100 samples, 0.04%)</title><rect x="649.9" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (100 samples, 0.04%)</title><rect x="649.9" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (100 samples, 0.04%)</title><rect x="649.9" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (100 samples, 0.04%)</title><rect x="649.9" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (100 samples, 0.04%)</title><rect x="649.9" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.9" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (100 samples, 0.04%)</title><rect x="649.9" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (57 samples, 0.02%)</title><rect x="650.1" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.1" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (57 samples, 0.02%)</title><rect x="650.1" y="355.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="653.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9,158 samples, 3.98%)</title><rect x="650.4" y="643.0" width="47.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.4" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9,158 samples, 3.98%)</title><rect x="650.4" y="627.0" width="47.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.4" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,417 samples, 2.79%)</title><rect x="650.4" y="611.0" width="32.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.4" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (6,417 samples, 2.79%)</title><rect x="650.4" y="595.0" width="32.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.4" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6,417 samples, 2.79%)</title><rect x="650.4" y="579.0" width="32.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.4" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (123 samples, 0.05%)</title><rect x="650.4" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (123 samples, 0.05%)</title><rect x="650.4" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (123 samples, 0.05%)</title><rect x="650.4" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (123 samples, 0.05%)</title><rect x="650.4" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1800031768.linkToTargetMethod (68 samples, 0.03%)</title><rect x="650.4" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1344199921.invoke (68 samples, 0.03%)</title><rect x="650.4" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.03%)</title><rect x="650.4" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (68 samples, 0.03%)</title><rect x="650.4" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (68 samples, 0.03%)</title><rect x="650.4" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.4" y="446.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.03%)</title><rect x="650.4" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="653.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (55 samples, 0.02%)</title><rect x="650.8" y="499.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.02%)</title><rect x="650.8" y="483.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.02%)</title><rect x="650.8" y="467.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192/200436329.get$Lambda (55 samples, 0.02%)</title><rect x="650.8" y="451.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192 (55 samples, 0.02%)</title><rect x="650.8" y="435.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="653.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6,294 samples, 2.74%)</title><rect x="651.0" y="563.0" width="32.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.0" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6,294 samples, 2.74%)</title><rect x="651.0" y="547.0" width="32.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,294 samples, 2.74%)</title><rect x="651.0" y="531.0" width="32.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (6,294 samples, 2.74%)</title><rect x="651.0" y="515.0" width="32.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.0" y="526.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,013 samples, 1.31%)</title><rect x="651.0" y="499.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,013 samples, 1.31%)</title><rect x="651.0" y="483.0" width="15.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,013 samples, 1.31%)</title><rect x="651.0" y="467.0" width="15.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3,013 samples, 1.31%)</title><rect x="651.0" y="451.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,013 samples, 1.31%)</title><rect x="651.0" y="435.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3,013 samples, 1.31%)</title><rect x="651.0" y="419.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,013 samples, 1.31%)</title><rect x="651.0" y="403.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,933 samples, 1.28%)</title><rect x="651.0" y="387.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,933 samples, 1.28%)</title><rect x="651.0" y="371.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,877 samples, 1.25%)</title><rect x="651.0" y="355.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (68 samples, 0.03%)</title><rect x="651.0" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="654.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/1729175167.apply (2,681 samples, 1.17%)</title><rect x="651.4" y="339.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,681 samples, 1.17%)</title><rect x="651.4" y="323.0" width="13.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (143 samples, 0.06%)</title><rect x="651.6" y="307.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (143 samples, 0.06%)</title><rect x="651.6" y="291.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (89 samples, 0.04%)</title><rect x="651.6" y="275.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="654.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.02%)</title><rect x="652.0" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.02%)</title><rect x="652.0" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.02%)</title><rect x="652.0" y="243.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="655.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,501 samples, 1.09%)</title><rect x="652.3" y="307.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (134 samples, 0.06%)</title><rect x="652.5" y="291.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (134 samples, 0.06%)</title><rect x="652.5" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (72 samples, 0.03%)</title><rect x="652.5" y="259.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="655.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.03%)</title><rect x="652.8" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.03%)</title><rect x="652.8" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.03%)</title><rect x="652.8" y="227.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="655.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,339 samples, 1.02%)</title><rect x="653.1" y="291.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.1" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$124/564253995.apply (170 samples, 0.07%)</title><rect x="653.1" y="275.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (170 samples, 0.07%)</title><rect x="653.1" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (170 samples, 0.07%)</title><rect x="653.1" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (56 samples, 0.02%)</title><rect x="653.1" y="227.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="656.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (114 samples, 0.05%)</title><rect x="653.4" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.4" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (51 samples, 0.02%)</title><rect x="653.4" y="211.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="656.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.03%)</title><rect x="653.7" y="211.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="656.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2,169 samples, 0.94%)</title><rect x="654.0" y="275.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.02%)</title><rect x="654.0" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.02%)</title><rect x="654.0" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/17487658.linkToTargetMethod (94 samples, 0.04%)</title><rect x="654.3" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1192680792.invokeStatic (94 samples, 0.04%)</title><rect x="654.3" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$211/1190816396.get$Lambda (94 samples, 0.04%)</title><rect x="654.3" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$211 (94 samples, 0.04%)</title><rect x="654.3" y="211.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="657.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (435 samples, 0.19%)</title><rect x="654.8" y="259.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (175 samples, 0.08%)</title><rect x="654.8" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (80 samples, 0.03%)</title><rect x="654.8" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.8" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (80 samples, 0.03%)</title><rect x="654.8" y="211.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="657.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (95 samples, 0.04%)</title><rect x="655.2" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (95 samples, 0.04%)</title><rect x="655.2" y="211.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="658.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (141 samples, 0.06%)</title><rect x="655.7" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (141 samples, 0.06%)</title><rect x="655.7" y="227.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (141 samples, 0.06%)</title><rect x="655.7" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$208/2091018564.get (54 samples, 0.02%)</title><rect x="655.9" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="658.9" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (54 samples, 0.02%)</title><rect x="655.9" y="179.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="658.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (119 samples, 0.05%)</title><rect x="656.4" y="243.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (119 samples, 0.05%)</title><rect x="656.4" y="227.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="659.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (278 samples, 0.12%)</title><rect x="657.0" y="259.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (130 samples, 0.06%)</title><rect x="657.0" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (75 samples, 0.03%)</title><rect x="657.0" y="227.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="660.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.02%)</title><rect x="657.4" y="227.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.02%)</title><rect x="657.4" y="211.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.02%)</title><rect x="657.4" y="195.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="660.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (148 samples, 0.06%)</title><rect x="657.7" y="243.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (148 samples, 0.06%)</title><rect x="657.7" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (96 samples, 0.04%)</title><rect x="657.7" y="211.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="660.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.02%)</title><rect x="658.2" y="211.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.02%)</title><rect x="658.2" y="195.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.02%)</title><rect x="658.2" y="179.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="661.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (62 samples, 0.03%)</title><rect x="658.7" y="259.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="661.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.02%)</title><rect x="659.0" y="259.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="662.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,110 samples, 0.48%)</title><rect x="659.4" y="259.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$211/1190816396.run (1,110 samples, 0.48%)</title><rect x="659.4" y="243.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,110 samples, 0.48%)</title><rect x="659.4" y="227.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.05%)</title><rect x="659.4" y="211.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.05%)</title><rect x="659.4" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (147 samples, 0.06%)</title><rect x="660.0" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (147 samples, 0.06%)</title><rect x="660.0" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (84 samples, 0.04%)</title><rect x="660.0" y="179.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="663.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.03%)</title><rect x="660.4" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.03%)</title><rect x="660.4" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.4" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.03%)</title><rect x="660.4" y="147.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="663.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (76 samples, 0.03%)</title><rect x="660.7" y="211.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="663.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (78 samples, 0.03%)</title><rect x="661.1" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (78 samples, 0.03%)</title><rect x="661.1" y="195.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="664.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (187 samples, 0.08%)</title><rect x="661.5" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (187 samples, 0.08%)</title><rect x="661.5" y="195.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (145 samples, 0.06%)</title><rect x="661.8" y="179.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (145 samples, 0.06%)</title><rect x="661.8" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (145 samples, 0.06%)</title><rect x="661.8" y="147.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (83 samples, 0.04%)</title><rect x="661.8" y="131.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="664.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.03%)</title><rect x="662.2" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.03%)</title><rect x="662.2" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.2" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.03%)</title><rect x="662.2" y="99.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="665.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (210 samples, 0.09%)</title><rect x="662.5" y="211.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (210 samples, 0.09%)</title><rect x="662.5" y="195.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1416233903.invoke (210 samples, 0.09%)</title><rect x="662.5" y="179.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (210 samples, 0.09%)</title><rect x="662.5" y="163.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (57 samples, 0.02%)</title><rect x="662.5" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.02%)</title><rect x="662.5" y="131.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="665.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (153 samples, 0.07%)</title><rect x="662.8" y="147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (153 samples, 0.07%)</title><rect x="662.8" y="131.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.8" y="142.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.07%)</title><rect x="662.8" y="115.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="665.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (306 samples, 0.13%)</title><rect x="663.6" y="211.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (98 samples, 0.04%)</title><rect x="663.6" y="195.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="666.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (208 samples, 0.09%)</title><rect x="664.1" y="195.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="667.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (208 samples, 0.09%)</title><rect x="664.1" y="179.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1416233903.invoke (208 samples, 0.09%)</title><rect x="664.1" y="163.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (208 samples, 0.09%)</title><rect x="664.1" y="147.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (162 samples, 0.07%)</title><rect x="664.3" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (162 samples, 0.07%)</title><rect x="664.3" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.3" y="126.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.07%)</title><rect x="664.3" y="99.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="667.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/1949660912.apply (128 samples, 0.06%)</title><rect x="665.1" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (128 samples, 0.06%)</title><rect x="665.1" y="323.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (62 samples, 0.03%)</title><rect x="665.1" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.1" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (62 samples, 0.03%)</title><rect x="665.1" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.1" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (62 samples, 0.03%)</title><rect x="665.1" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.1" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (62 samples, 0.03%)</title><rect x="665.1" y="259.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="668.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (66 samples, 0.03%)</title><rect x="665.5" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.03%)</title><rect x="665.5" y="291.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="668.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (56 samples, 0.02%)</title><rect x="665.8" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (56 samples, 0.02%)</title><rect x="665.8" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$184/1522648861.apply (56 samples, 0.02%)</title><rect x="665.8" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (56 samples, 0.02%)</title><rect x="665.8" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (56 samples, 0.02%)</title><rect x="665.8" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.02%)</title><rect x="665.8" y="275.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="668.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/498747434.apply (80 samples, 0.03%)</title><rect x="666.1" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (80 samples, 0.03%)</title><rect x="666.1" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (80 samples, 0.03%)</title><rect x="666.1" y="355.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="669.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (3,281 samples, 1.43%)</title><rect x="666.5" y="499.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (202 samples, 0.09%)</title><rect x="666.5" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (202 samples, 0.09%)</title><rect x="666.5" y="467.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (202 samples, 0.09%)</title><rect x="666.5" y="451.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (202 samples, 0.09%)</title><rect x="666.5" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (202 samples, 0.09%)</title><rect x="666.5" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.5" y="430.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.09%)</title><rect x="666.5" y="403.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="669.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (355 samples, 0.15%)</title><rect x="667.5" y="483.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.5" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (50 samples, 0.02%)</title><rect x="667.5" y="467.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="670.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (69 samples, 0.03%)</title><rect x="667.8" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 0.03%)</title><rect x="667.8" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (69 samples, 0.03%)</title><rect x="667.8" y="435.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.8" y="446.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.03%)</title><rect x="667.8" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="670.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (61 samples, 0.03%)</title><rect x="668.1" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (61 samples, 0.03%)</title><rect x="668.1" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.1" y="462.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.03%)</title><rect x="668.1" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="671.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (175 samples, 0.08%)</title><rect x="668.5" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (175 samples, 0.08%)</title><rect x="668.5" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (111 samples, 0.05%)</title><rect x="668.5" y="435.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="671.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.03%)</title><rect x="669.0" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.0" y="446.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.03%)</title><rect x="669.0" y="419.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="672.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (831 samples, 0.36%)</title><rect x="669.4" y="483.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (831 samples, 0.36%)</title><rect x="669.4" y="467.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (831 samples, 0.36%)</title><rect x="669.4" y="451.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (103 samples, 0.04%)</title><rect x="669.7" y="435.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="672.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.02%)</title><rect x="670.4" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.02%)</title><rect x="670.4" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.get$Lambda (57 samples, 0.02%)</title><rect x="670.4" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.4" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (57 samples, 0.02%)</title><rect x="670.4" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="673.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (432 samples, 0.19%)</title><rect x="670.9" y="435.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (432 samples, 0.19%)</title><rect x="670.9" y="419.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (432 samples, 0.19%)</title><rect x="670.9" y="403.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (105 samples, 0.05%)</title><rect x="670.9" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (105 samples, 0.05%)</title><rect x="670.9" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (105 samples, 0.05%)</title><rect x="670.9" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.05%)</title><rect x="670.9" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (105 samples, 0.05%)</title><rect x="670.9" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.05%)</title><rect x="670.9" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (105 samples, 0.05%)</title><rect x="670.9" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (105 samples, 0.05%)</title><rect x="670.9" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (105 samples, 0.05%)</title><rect x="670.9" y="259.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="673.9" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (175 samples, 0.08%)</title><rect x="671.4" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.4" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (175 samples, 0.08%)</title><rect x="671.4" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (86 samples, 0.04%)</title><rect x="671.4" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (86 samples, 0.04%)</title><rect x="671.4" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (86 samples, 0.04%)</title><rect x="671.4" y="323.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="674.4" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (89 samples, 0.04%)</title><rect x="671.9" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (89 samples, 0.04%)</title><rect x="671.9" y="339.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="674.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (152 samples, 0.07%)</title><rect x="672.3" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="675.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (152 samples, 0.07%)</title><rect x="672.3" y="371.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="675.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (100 samples, 0.04%)</title><rect x="673.1" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (100 samples, 0.04%)</title><rect x="673.1" y="419.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="676.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,893 samples, 0.82%)</title><rect x="673.6" y="483.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.6" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (105 samples, 0.05%)</title><rect x="673.6" y="467.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="676.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (141 samples, 0.06%)</title><rect x="674.2" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="677.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (141 samples, 0.06%)</title><rect x="674.2" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.2" y="462.0"></text>
</g>
<g>
<title>byte[] (141 samples, 0.06%)</title><rect x="674.2" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="677.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (257 samples, 0.11%)</title><rect x="674.9" y="467.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (257 samples, 0.11%)</title><rect x="674.9" y="451.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.04%)</title><rect x="674.9" y="435.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="677.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (169 samples, 0.07%)</title><rect x="675.3" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.3" y="446.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.07%)</title><rect x="675.3" y="419.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="678.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,390 samples, 0.60%)</title><rect x="676.2" y="467.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (413 samples, 0.18%)</title><rect x="676.2" y="451.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (413 samples, 0.18%)</title><rect x="676.2" y="435.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (185 samples, 0.08%)</title><rect x="676.2" y="419.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="679.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (228 samples, 0.10%)</title><rect x="677.2" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.2" y="430.0"></text>
</g>
<g>
<title>byte[] (228 samples, 0.10%)</title><rect x="677.2" y="403.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="680.2" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (184 samples, 0.08%)</title><rect x="678.3" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (184 samples, 0.08%)</title><rect x="678.3" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.3" y="446.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.05%)</title><rect x="678.3" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="681.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.03%)</title><rect x="678.9" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="681.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (195 samples, 0.08%)</title><rect x="679.3" y="451.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (195 samples, 0.08%)</title><rect x="679.3" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (195 samples, 0.08%)</title><rect x="679.3" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.04%)</title><rect x="679.3" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="682.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (104 samples, 0.05%)</title><rect x="679.7" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.7" y="414.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.05%)</title><rect x="679.7" y="387.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="682.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (236 samples, 0.10%)</title><rect x="680.3" y="451.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (236 samples, 0.10%)</title><rect x="680.3" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (236 samples, 0.10%)</title><rect x="680.3" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (236 samples, 0.10%)</title><rect x="680.3" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (236 samples, 0.10%)</title><rect x="680.3" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (236 samples, 0.10%)</title><rect x="680.3" y="371.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="683.3" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (362 samples, 0.16%)</title><rect x="681.5" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.5" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (121 samples, 0.05%)</title><rect x="681.5" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.5" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (121 samples, 0.05%)</title><rect x="681.5" y="419.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="684.5" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (149 samples, 0.06%)</title><rect x="682.1" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (149 samples, 0.06%)</title><rect x="682.1" y="419.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="685.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$205/1058335064.apply (92 samples, 0.04%)</title><rect x="682.9" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (92 samples, 0.04%)</title><rect x="682.9" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.9" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (92 samples, 0.04%)</title><rect x="682.9" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="685.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2,741 samples, 1.19%)</title><rect x="683.3" y="611.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,741 samples, 1.19%)</title><rect x="683.3" y="595.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,741 samples, 1.19%)</title><rect x="683.3" y="579.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$160/667105618.run (2,741 samples, 1.19%)</title><rect x="683.3" y="563.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,741 samples, 1.19%)</title><rect x="683.3" y="547.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (229 samples, 0.10%)</title><rect x="683.3" y="531.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.04%)</title><rect x="683.3" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.04%)</title><rect x="683.3" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (59 samples, 0.03%)</title><rect x="683.8" y="515.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="686.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (88 samples, 0.04%)</title><rect x="684.1" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (88 samples, 0.04%)</title><rect x="684.1" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (51 samples, 0.02%)</title><rect x="684.2" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (51 samples, 0.02%)</title><rect x="684.2" y="467.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="687.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (2,512 samples, 1.09%)</title><rect x="684.5" y="531.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,512 samples, 1.09%)</title><rect x="684.5" y="515.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2,512 samples, 1.09%)</title><rect x="684.5" y="499.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2,512 samples, 1.09%)</title><rect x="684.5" y="483.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2,512 samples, 1.09%)</title><rect x="684.5" y="467.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2,512 samples, 1.09%)</title><rect x="684.5" y="451.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (86 samples, 0.04%)</title><rect x="684.5" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (86 samples, 0.04%)</title><rect x="684.5" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (86 samples, 0.04%)</title><rect x="684.5" y="403.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="687.5" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (51 samples, 0.02%)</title><rect x="685.0" y="435.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.0" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (51 samples, 0.02%)</title><rect x="685.0" y="419.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="688.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/1706852430.run (841 samples, 0.37%)</title><rect x="685.2" y="435.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (841 samples, 0.37%)</title><rect x="685.2" y="419.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (841 samples, 0.37%)</title><rect x="685.2" y="403.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (229 samples, 0.10%)</title><rect x="685.2" y="387.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="688.2" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (157 samples, 0.07%)</title><rect x="685.2" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="688.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (110 samples, 0.05%)</title><rect x="685.5" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="688.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (110 samples, 0.05%)</title><rect x="685.5" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="688.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (72 samples, 0.03%)</title><rect x="686.0" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (72 samples, 0.03%)</title><rect x="686.0" y="355.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (72 samples, 0.03%)</title><rect x="686.0" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (612 samples, 0.27%)</title><rect x="686.4" y="387.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (572 samples, 0.25%)</title><rect x="686.6" y="371.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (252 samples, 0.11%)</title><rect x="686.6" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.6" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (71 samples, 0.03%)</title><rect x="687.0" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.0" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (71 samples, 0.03%)</title><rect x="687.0" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.0" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (71 samples, 0.03%)</title><rect x="687.0" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="690.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (52 samples, 0.02%)</title><rect x="687.6" y="339.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="690.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (109 samples, 0.05%)</title><rect x="687.9" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.9" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (51 samples, 0.02%)</title><rect x="687.9" y="339.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.9" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (51 samples, 0.02%)</title><rect x="687.9" y="323.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (51 samples, 0.02%)</title><rect x="687.9" y="307.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.02%)</title><rect x="687.9" y="291.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="690.9" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (58 samples, 0.03%)</title><rect x="688.1" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (58 samples, 0.03%)</title><rect x="688.1" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.1" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (58 samples, 0.03%)</title><rect x="688.1" y="307.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="691.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (211 samples, 0.09%)</title><rect x="688.4" y="355.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (51 samples, 0.02%)</title><rect x="688.4" y="339.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="691.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (160 samples, 0.07%)</title><rect x="688.7" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (117 samples, 0.05%)</title><rect x="688.9" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (117 samples, 0.05%)</title><rect x="688.9" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (82 samples, 0.04%)</title><rect x="688.9" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="691.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1,384 samples, 0.60%)</title><rect x="689.5" y="435.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1,384 samples, 0.60%)</title><rect x="689.5" y="419.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1,384 samples, 0.60%)</title><rect x="689.5" y="403.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,316 samples, 0.57%)</title><rect x="689.5" y="387.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,316 samples, 0.57%)</title><rect x="689.5" y="371.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,316 samples, 0.57%)</title><rect x="689.5" y="355.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,316 samples, 0.57%)</title><rect x="689.5" y="339.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/691981639.accept (1,316 samples, 0.57%)</title><rect x="689.5" y="323.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (1,316 samples, 0.57%)</title><rect x="689.5" y="307.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,316 samples, 0.57%)</title><rect x="689.5" y="291.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,316 samples, 0.57%)</title><rect x="689.5" y="275.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (129 samples, 0.06%)</title><rect x="689.5" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$220/1020364899.apply (129 samples, 0.06%)</title><rect x="689.5" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (129 samples, 0.06%)</title><rect x="689.5" y="227.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (129 samples, 0.06%)</title><rect x="689.5" y="211.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="692.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,187 samples, 0.52%)</title><rect x="690.2" y="259.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,187 samples, 0.52%)</title><rect x="690.2" y="243.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,187 samples, 0.52%)</title><rect x="690.2" y="227.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1,187 samples, 0.52%)</title><rect x="690.2" y="211.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.2" y="222.0"></text>
</g>
<g>
<title>java.lang.Thread (752 samples, 0.33%)</title><rect x="690.2" y="195.0" width="3.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="693.2" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (435 samples, 0.19%)</title><rect x="694.1" y="195.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (68 samples, 0.03%)</title><rect x="694.1" y="179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.1" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (68 samples, 0.03%)</title><rect x="694.1" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.1" y="174.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.03%)</title><rect x="694.1" y="147.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="697.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (116 samples, 0.05%)</title><rect x="694.4" y="179.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (116 samples, 0.05%)</title><rect x="694.4" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.02%)</title><rect x="694.4" y="147.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="697.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.03%)</title><rect x="694.7" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.7" y="158.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.03%)</title><rect x="694.7" y="131.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="697.7" y="142.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (251 samples, 0.11%)</title><rect x="695.0" y="179.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.0" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (251 samples, 0.11%)</title><rect x="695.0" y="163.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.0" y="174.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (223 samples, 0.10%)</title><rect x="695.1" y="147.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.1" y="158.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (98 samples, 0.04%)</title><rect x="695.1" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.1" y="142.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (98 samples, 0.04%)</title><rect x="695.1" y="115.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.1" y="126.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (98 samples, 0.04%)</title><rect x="695.1" y="99.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="698.1" y="110.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (125 samples, 0.05%)</title><rect x="695.6" y="131.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.6" y="142.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (81 samples, 0.04%)</title><rect x="695.6" y="115.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="698.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (68 samples, 0.03%)</title><rect x="696.3" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.3" y="398.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.03%)</title><rect x="696.3" y="371.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="699.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (150 samples, 0.07%)</title><rect x="696.6" y="435.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (150 samples, 0.07%)</title><rect x="696.6" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (150 samples, 0.07%)</title><rect x="696.6" y="403.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (150 samples, 0.07%)</title><rect x="696.6" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (150 samples, 0.07%)</title><rect x="696.6" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (113 samples, 0.05%)</title><rect x="696.8" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.05%)</title><rect x="696.8" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.8" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (113 samples, 0.05%)</title><rect x="696.8" y="323.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="699.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (21,807 samples, 9.48%)</title><rect x="697.4" y="691.0" width="111.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.4" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (496 samples, 0.22%)</title><rect x="697.4" y="675.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (496 samples, 0.22%)</title><rect x="697.4" y="659.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$180/1922513332.get$Lambda (232 samples, 0.10%)</title><rect x="697.4" y="643.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$180 (232 samples, 0.10%)</title><rect x="697.4" y="627.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="700.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/2027554893.get$Lambda (264 samples, 0.11%)</title><rect x="698.6" y="643.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="701.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$187 (264 samples, 0.11%)</title><rect x="698.6" y="627.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="701.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/992802731.linkToTargetMethod (421 samples, 0.18%)</title><rect x="699.9" y="675.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (421 samples, 0.18%)</title><rect x="699.9" y="659.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$181/525718990.get$Lambda (421 samples, 0.18%)</title><rect x="699.9" y="643.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$181 (421 samples, 0.18%)</title><rect x="699.9" y="627.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="702.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2,803 samples, 1.22%)</title><rect x="702.1" y="675.0" width="14.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1705485627.accept (2,157 samples, 0.94%)</title><rect x="702.1" y="659.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (2,157 samples, 0.94%)</title><rect x="702.1" y="643.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2,157 samples, 0.94%)</title><rect x="702.1" y="627.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (2,157 samples, 0.94%)</title><rect x="702.1" y="611.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="705.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (2,157 samples, 0.94%)</title><rect x="702.1" y="595.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (2,157 samples, 0.94%)</title><rect x="702.1" y="579.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,157 samples, 0.94%)</title><rect x="702.1" y="563.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,157 samples, 0.94%)</title><rect x="702.1" y="547.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,157 samples, 0.94%)</title><rect x="702.1" y="531.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2,157 samples, 0.94%)</title><rect x="702.1" y="515.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/133136300.run (2,157 samples, 0.94%)</title><rect x="702.1" y="499.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2,157 samples, 0.94%)</title><rect x="702.1" y="483.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (426 samples, 0.19%)</title><rect x="702.1" y="467.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (426 samples, 0.19%)</title><rect x="702.1" y="451.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (426 samples, 0.19%)</title><rect x="702.1" y="435.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (424 samples, 0.18%)</title><rect x="702.1" y="419.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (424 samples, 0.18%)</title><rect x="702.1" y="403.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (424 samples, 0.18%)</title><rect x="702.1" y="387.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (424 samples, 0.18%)</title><rect x="702.1" y="371.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (424 samples, 0.18%)</title><rect x="702.1" y="355.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="705.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (264 samples, 0.11%)</title><rect x="704.3" y="467.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (264 samples, 0.11%)</title><rect x="704.3" y="451.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (264 samples, 0.11%)</title><rect x="704.3" y="435.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192/200436329.get$Lambda (264 samples, 0.11%)</title><rect x="704.3" y="419.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192 (264 samples, 0.11%)</title><rect x="704.3" y="403.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="707.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1,467 samples, 0.64%)</title><rect x="705.6" y="467.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1,209 samples, 0.53%)</title><rect x="705.6" y="451.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (798 samples, 0.35%)</title><rect x="705.6" y="435.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (798 samples, 0.35%)</title><rect x="705.6" y="419.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="708.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (411 samples, 0.18%)</title><rect x="709.7" y="435.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (411 samples, 0.18%)</title><rect x="709.7" y="419.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.7" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (411 samples, 0.18%)</title><rect x="709.7" y="403.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="712.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (258 samples, 0.11%)</title><rect x="711.9" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$149/338232184.get (258 samples, 0.11%)</title><rect x="711.9" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (258 samples, 0.11%)</title><rect x="711.9" y="419.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (258 samples, 0.11%)</title><rect x="711.9" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (256 samples, 0.11%)</title><rect x="711.9" y="387.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.9" y="398.0"></text>
</g>
<g>
<title>byte[] (253 samples, 0.11%)</title><rect x="711.9" y="371.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="714.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$188/546108432.accept (646 samples, 0.28%)</title><rect x="713.2" y="659.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (646 samples, 0.28%)</title><rect x="713.2" y="643.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$181/525718990.run (646 samples, 0.28%)</title><rect x="713.2" y="627.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="716.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (646 samples, 0.28%)</title><rect x="713.2" y="611.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (646 samples, 0.28%)</title><rect x="713.2" y="595.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (646 samples, 0.28%)</title><rect x="713.2" y="579.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (646 samples, 0.28%)</title><rect x="713.2" y="563.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.2" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (646 samples, 0.28%)</title><rect x="713.2" y="547.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="716.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2,364 samples, 1.03%)</title><rect x="716.5" y="675.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.5" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (2,364 samples, 1.03%)</title><rect x="716.5" y="659.0" width="12.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="719.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (779 samples, 0.34%)</title><rect x="728.6" y="675.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (407 samples, 0.18%)</title><rect x="728.6" y="659.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (407 samples, 0.18%)</title><rect x="728.6" y="643.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (407 samples, 0.18%)</title><rect x="728.6" y="627.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (407 samples, 0.18%)</title><rect x="728.6" y="611.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (407 samples, 0.18%)</title><rect x="728.6" y="595.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (407 samples, 0.18%)</title><rect x="728.6" y="579.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.6" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (407 samples, 0.18%)</title><rect x="728.6" y="563.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="731.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (372 samples, 0.16%)</title><rect x="730.7" y="659.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (372 samples, 0.16%)</title><rect x="730.7" y="643.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="733.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,434 samples, 0.62%)</title><rect x="732.6" y="675.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/2085266465.run (953 samples, 0.41%)</title><rect x="732.6" y="659.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (953 samples, 0.41%)</title><rect x="732.6" y="643.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (953 samples, 0.41%)</title><rect x="732.6" y="627.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (953 samples, 0.41%)</title><rect x="732.6" y="611.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (953 samples, 0.41%)</title><rect x="732.6" y="595.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (953 samples, 0.41%)</title><rect x="732.6" y="579.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$152/133136300.run (953 samples, 0.41%)</title><rect x="732.6" y="563.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (953 samples, 0.41%)</title><rect x="732.6" y="547.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (952 samples, 0.41%)</title><rect x="732.6" y="531.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (952 samples, 0.41%)</title><rect x="732.6" y="515.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (946 samples, 0.41%)</title><rect x="732.6" y="499.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (946 samples, 0.41%)</title><rect x="732.6" y="483.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (946 samples, 0.41%)</title><rect x="732.6" y="467.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1800031768.linkToTargetMethod (686 samples, 0.30%)</title><rect x="732.6" y="451.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1344199921.invoke (686 samples, 0.30%)</title><rect x="732.6" y="435.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (686 samples, 0.30%)</title><rect x="732.6" y="419.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (686 samples, 0.30%)</title><rect x="732.6" y="403.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (686 samples, 0.30%)</title><rect x="732.6" y="387.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.6" y="398.0"></text>
</g>
<g>
<title>byte[] (686 samples, 0.30%)</title><rect x="732.6" y="371.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="735.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (260 samples, 0.11%)</title><rect x="736.1" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (260 samples, 0.11%)</title><rect x="736.1" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (260 samples, 0.11%)</title><rect x="736.1" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192/200436329.get$Lambda (260 samples, 0.11%)</title><rect x="736.1" y="403.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$192 (260 samples, 0.11%)</title><rect x="736.1" y="387.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="739.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$156/184979527.run (481 samples, 0.21%)</title><rect x="737.5" y="659.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (481 samples, 0.21%)</title><rect x="737.5" y="643.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (474 samples, 0.21%)</title><rect x="737.5" y="627.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (474 samples, 0.21%)</title><rect x="737.5" y="611.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$190/680108995.get$Lambda (474 samples, 0.21%)</title><rect x="737.5" y="595.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$190 (474 samples, 0.21%)</title><rect x="737.5" y="579.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="740.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9,007 samples, 3.92%)</title><rect x="740.0" y="675.0" width="46.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.0" y="686.0">jdk/..</text>
</g>
<g>
<title>java/time/Instant.now (1,486 samples, 0.65%)</title><rect x="740.0" y="659.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.0" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1,486 samples, 0.65%)</title><rect x="740.0" y="643.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.0" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1,486 samples, 0.65%)</title><rect x="740.0" y="627.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (1,486 samples, 0.65%)</title><rect x="740.0" y="611.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.0" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (1,486 samples, 0.65%)</title><rect x="740.0" y="595.0" width="7.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="743.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (7,521 samples, 3.27%)</title><rect x="747.6" y="659.0" width="38.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.6" y="670.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,020 samples, 0.44%)</title><rect x="747.6" y="643.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,020 samples, 0.44%)</title><rect x="747.6" y="627.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$222/10302261.get$Lambda (1,020 samples, 0.44%)</title><rect x="747.6" y="611.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$222 (1,020 samples, 0.44%)</title><rect x="747.6" y="595.0" width="5.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="750.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1,912 samples, 0.83%)</title><rect x="752.8" y="643.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.8" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1,912 samples, 0.83%)</title><rect x="752.8" y="627.0" width="9.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="755.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (990 samples, 0.43%)</title><rect x="762.6" y="643.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (990 samples, 0.43%)</title><rect x="762.6" y="627.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.6" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (990 samples, 0.43%)</title><rect x="762.6" y="611.0" width="5.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="765.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3,599 samples, 1.57%)</title><rect x="767.7" y="643.0" width="18.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.7" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,515 samples, 0.66%)</title><rect x="767.7" y="627.0" width="7.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="770.7" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2,084 samples, 0.91%)</title><rect x="775.5" y="627.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.5" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2,084 samples, 0.91%)</title><rect x="775.5" y="611.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.5" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2,084 samples, 0.91%)</title><rect x="775.5" y="595.0" width="10.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="778.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2,855 samples, 1.24%)</title><rect x="786.2" y="675.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (237 samples, 0.10%)</title><rect x="786.2" y="659.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (237 samples, 0.10%)</title><rect x="786.2" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$179/1087851508.get$Lambda (237 samples, 0.10%)</title><rect x="786.2" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$179 (237 samples, 0.10%)</title><rect x="786.2" y="611.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="789.2" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,528 samples, 0.66%)</title><rect x="787.4" y="659.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (659 samples, 0.29%)</title><rect x="787.4" y="643.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (659 samples, 0.29%)</title><rect x="787.4" y="627.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="790.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (869 samples, 0.38%)</title><rect x="790.8" y="643.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (869 samples, 0.38%)</title><rect x="790.8" y="627.0" width="4.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="793.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,090 samples, 0.47%)</title><rect x="795.3" y="659.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.3" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,088 samples, 0.47%)</title><rect x="795.3" y="643.0" width="5.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="798.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (819 samples, 0.36%)</title><rect x="800.8" y="675.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (819 samples, 0.36%)</title><rect x="800.8" y="659.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (819 samples, 0.36%)</title><rect x="800.8" y="643.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (819 samples, 0.36%)</title><rect x="800.8" y="627.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (281 samples, 0.12%)</title><rect x="800.8" y="611.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (281 samples, 0.12%)</title><rect x="800.8" y="595.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="803.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (538 samples, 0.23%)</title><rect x="802.3" y="611.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (538 samples, 0.23%)</title><rect x="802.3" y="595.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (538 samples, 0.23%)</title><rect x="802.3" y="579.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (538 samples, 0.23%)</title><rect x="802.3" y="563.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (538 samples, 0.23%)</title><rect x="802.3" y="547.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (538 samples, 0.23%)</title><rect x="802.3" y="531.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="805.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (217 samples, 0.09%)</title><rect x="805.0" y="675.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (217 samples, 0.09%)</title><rect x="805.0" y="659.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (217 samples, 0.09%)</title><rect x="805.0" y="643.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (217 samples, 0.09%)</title><rect x="805.0" y="627.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (214 samples, 0.09%)</title><rect x="805.0" y="611.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (214 samples, 0.09%)</title><rect x="805.0" y="595.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="808.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (612 samples, 0.27%)</title><rect x="806.2" y="675.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (612 samples, 0.27%)</title><rect x="806.2" y="659.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (612 samples, 0.27%)</title><rect x="806.2" y="643.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (612 samples, 0.27%)</title><rect x="806.2" y="627.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="809.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (74,190 samples, 32.26%)</title><rect x="809.3" y="691.0" width="380.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.3" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,633 samples, 0.71%)</title><rect x="809.3" y="675.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.3" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,633 samples, 0.71%)</title><rect x="809.3" y="659.0" width="8.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="812.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (72,557 samples, 31.55%)</title><rect x="817.7" y="675.0" width="372.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.7" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (72,557 samples, 31.55%)</title><rect x="817.7" y="659.0" width="372.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.7" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (72,557 samples, 31.55%)</title><rect x="817.7" y="643.0" width="372.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.7" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (50,721 samples, 22.06%)</title><rect x="817.7" y="627.0" width="260.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.7" y="638.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (50,721 samples, 22.06%)</title><rect x="817.7" y="611.0" width="260.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.7" y="622.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (49,643 samples, 21.59%)</title><rect x="817.7" y="595.0" width="254.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.7" y="606.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,100 samples, 0.48%)</title><rect x="817.7" y="579.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,100 samples, 0.48%)</title><rect x="817.7" y="563.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,100 samples, 0.48%)</title><rect x="817.7" y="547.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,100 samples, 0.48%)</title><rect x="817.7" y="531.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (605 samples, 0.26%)</title><rect x="817.7" y="515.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="820.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (495 samples, 0.22%)</title><rect x="820.8" y="515.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.8" y="526.0"></text>
</g>
<g>
<title>byte[] (495 samples, 0.22%)</title><rect x="820.8" y="499.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="823.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (48,543 samples, 21.11%)</title><rect x="823.3" y="579.0" width="249.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.3" y="590.0">ru/mail/polis/service/codearound/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,151 samples, 0.50%)</title><rect x="823.3" y="563.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,151 samples, 0.50%)</title><rect x="823.3" y="547.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,151 samples, 0.50%)</title><rect x="823.3" y="531.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (490 samples, 0.21%)</title><rect x="823.3" y="515.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="826.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (661 samples, 0.29%)</title><rect x="825.8" y="515.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.8" y="526.0"></text>
</g>
<g>
<title>byte[] (661 samples, 0.29%)</title><rect x="825.8" y="499.0" width="3.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="828.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.getNodes (80 samples, 0.03%)</title><rect x="829.2" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.2" y="574.0"></text>
</g>
<g>
<title>java/util/Set.of (80 samples, 0.03%)</title><rect x="829.2" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.2" y="558.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (80 samples, 0.03%)</title><rect x="829.2" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.2" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (80 samples, 0.03%)</title><rect x="829.2" y="515.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="832.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.invokeHandlerByMethod (47,312 samples, 20.57%)</title><rect x="829.6" y="563.0" width="242.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.6" y="574.0">ru/mail/polis/service/codearound..</text>
</g>
<g>
<title>java.lang.String[] (489 samples, 0.21%)</title><rect x="829.6" y="547.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="832.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (710 samples, 0.31%)</title><rect x="832.2" y="547.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (710 samples, 0.31%)</title><rect x="832.2" y="531.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (710 samples, 0.31%)</title><rect x="832.2" y="515.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (710 samples, 0.31%)</title><rect x="832.2" y="499.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.2" y="510.0"></text>
</g>
<g>
<title>byte[] (710 samples, 0.31%)</title><rect x="832.2" y="483.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="835.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,149 samples, 0.50%)</title><rect x="835.8" y="547.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,149 samples, 0.50%)</title><rect x="835.8" y="531.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,149 samples, 0.50%)</title><rect x="835.8" y="515.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String (511 samples, 0.22%)</title><rect x="835.8" y="499.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="838.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (638 samples, 0.28%)</title><rect x="838.4" y="499.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.4" y="510.0"></text>
</g>
<g>
<title>byte[] (638 samples, 0.28%)</title><rect x="838.4" y="483.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="841.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (80 samples, 0.03%)</title><rect x="841.7" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (80 samples, 0.03%)</title><rect x="841.7" y="531.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="844.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (44,884 samples, 19.52%)</title><rect x="842.1" y="547.0" width="230.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.1" y="558.0">ru/mail/polis/service/codearou..</text>
</g>
<g>
<title>java.util.ArrayList (1,184 samples, 0.51%)</title><rect x="842.1" y="531.0" width="6.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="845.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (545 samples, 0.24%)</title><rect x="848.2" y="531.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="851.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1767039311.linkToTargetMethod (1,312 samples, 0.57%)</title><rect x="851.0" y="531.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/875749224.invokeStatic (1,312 samples, 0.57%)</title><rect x="851.0" y="515.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$224/98912514.get$Lambda (641 samples, 0.28%)</title><rect x="851.0" y="499.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$224 (641 samples, 0.28%)</title><rect x="851.0" y="483.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="854.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$227/954829132.get$Lambda (671 samples, 0.29%)</title><rect x="854.3" y="499.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.3" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.ReplicationLsm$$Lambda$227 (671 samples, 0.29%)</title><rect x="854.3" y="483.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="857.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (612 samples, 0.27%)</title><rect x="857.7" y="531.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (612 samples, 0.27%)</title><rect x="857.7" y="515.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="860.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (813 samples, 0.35%)</title><rect x="860.8" y="531.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (813 samples, 0.35%)</title><rect x="860.8" y="515.0" width="4.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="863.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (2,586 samples, 1.12%)</title><rect x="865.0" y="531.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (2,586 samples, 1.12%)</title><rect x="865.0" y="515.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (1,223 samples, 0.53%)</title><rect x="865.0" y="499.0" width="6.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="868.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (826 samples, 0.36%)</title><rect x="871.3" y="499.0" width="4.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="874.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (252 samples, 0.11%)</title><rect x="875.5" y="499.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (121 samples, 0.05%)</title><rect x="875.5" y="483.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="878.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (89 samples, 0.04%)</title><rect x="876.2" y="483.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="879.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (285 samples, 0.12%)</title><rect x="876.8" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (285 samples, 0.12%)</title><rect x="876.8" y="483.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="879.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,283 samples, 0.56%)</title><rect x="878.3" y="531.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,283 samples, 0.56%)</title><rect x="878.3" y="515.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (844 samples, 0.37%)</title><rect x="878.3" y="499.0" width="4.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="881.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (439 samples, 0.19%)</title><rect x="882.6" y="499.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (439 samples, 0.19%)</title><rect x="882.6" y="483.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="885.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1,112 samples, 0.48%)</title><rect x="884.9" y="531.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="887.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1,112 samples, 0.48%)</title><rect x="884.9" y="515.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (782 samples, 0.34%)</title><rect x="884.9" y="499.0" width="4.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="887.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (330 samples, 0.14%)</title><rect x="888.9" y="499.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="891.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (330 samples, 0.14%)</title><rect x="888.9" y="483.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="891.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (10,296 samples, 4.48%)</title><rect x="890.6" y="531.0" width="52.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.6" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,296 samples, 4.48%)</title><rect x="890.6" y="515.0" width="52.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.6" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,296 samples, 4.48%)</title><rect x="890.6" y="499.0" width="52.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.6" y="510.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,296 samples, 4.48%)</title><rect x="890.6" y="483.0" width="52.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.6" y="494.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (76 samples, 0.03%)</title><rect x="890.6" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (76 samples, 0.03%)</title><rect x="890.6" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/1447974469.get$Lambda (76 samples, 0.03%)</title><rect x="890.6" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$133 (76 samples, 0.03%)</title><rect x="890.6" y="419.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="893.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (418 samples, 0.18%)</title><rect x="891.0" y="467.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (418 samples, 0.18%)</title><rect x="891.0" y="451.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (249 samples, 0.11%)</title><rect x="891.0" y="435.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="894.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.07%)</title><rect x="892.2" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="895.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (169 samples, 0.07%)</title><rect x="892.2" y="419.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (169 samples, 0.07%)</title><rect x="892.2" y="403.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="895.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (371 samples, 0.16%)</title><rect x="893.1" y="467.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (371 samples, 0.16%)</title><rect x="893.1" y="451.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (229 samples, 0.10%)</title><rect x="893.1" y="435.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="896.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (142 samples, 0.06%)</title><rect x="894.3" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (142 samples, 0.06%)</title><rect x="894.3" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (142 samples, 0.06%)</title><rect x="894.3" y="403.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="897.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (304 samples, 0.13%)</title><rect x="895.0" y="467.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="898.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (461 samples, 0.20%)</title><rect x="896.6" y="467.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="899.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (4,799 samples, 2.09%)</title><rect x="898.9" y="467.0" width="24.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.9" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (595 samples, 0.26%)</title><rect x="898.9" y="451.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.9" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (465 samples, 0.20%)</title><rect x="898.9" y="435.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.9" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (155 samples, 0.07%)</title><rect x="898.9" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.9" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (155 samples, 0.07%)</title><rect x="898.9" y="403.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="901.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (310 samples, 0.13%)</title><rect x="899.7" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.7" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (310 samples, 0.13%)</title><rect x="899.7" y="403.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="902.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (130 samples, 0.06%)</title><rect x="901.3" y="435.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (130 samples, 0.06%)</title><rect x="901.3" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (130 samples, 0.06%)</title><rect x="901.3" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$23/1792393294.get (130 samples, 0.06%)</title><rect x="901.3" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.3" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (130 samples, 0.06%)</title><rect x="901.3" y="371.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="904.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,832 samples, 0.80%)</title><rect x="902.0" y="451.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,832 samples, 0.80%)</title><rect x="902.0" y="435.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.0" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (91 samples, 0.04%)</title><rect x="902.0" y="419.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="905.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (135 samples, 0.06%)</title><rect x="902.5" y="419.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="905.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (260 samples, 0.11%)</title><rect x="903.2" y="419.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="906.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (74 samples, 0.03%)</title><rect x="904.5" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="907.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (171 samples, 0.07%)</title><rect x="904.9" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (171 samples, 0.07%)</title><rect x="904.9" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="907.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.get$Lambda (171 samples, 0.07%)</title><rect x="904.9" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.9" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (171 samples, 0.07%)</title><rect x="904.9" y="371.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="907.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (712 samples, 0.31%)</title><rect x="905.7" y="419.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.7" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (712 samples, 0.31%)</title><rect x="905.7" y="403.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (712 samples, 0.31%)</title><rect x="905.7" y="387.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (712 samples, 0.31%)</title><rect x="905.7" y="371.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (272 samples, 0.12%)</title><rect x="905.7" y="355.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (272 samples, 0.12%)</title><rect x="905.7" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.7" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (272 samples, 0.12%)</title><rect x="905.7" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (272 samples, 0.12%)</title><rect x="905.7" y="307.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (272 samples, 0.12%)</title><rect x="905.7" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (272 samples, 0.12%)</title><rect x="905.7" y="275.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (272 samples, 0.12%)</title><rect x="905.7" y="259.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (272 samples, 0.12%)</title><rect x="905.7" y="243.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.7" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (272 samples, 0.12%)</title><rect x="905.7" y="227.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="908.7" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (242 samples, 0.11%)</title><rect x="907.1" y="355.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.1" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (242 samples, 0.11%)</title><rect x="907.1" y="339.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (142 samples, 0.06%)</title><rect x="907.1" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (142 samples, 0.06%)</title><rect x="907.1" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (142 samples, 0.06%)</title><rect x="907.1" y="291.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="910.1" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (100 samples, 0.04%)</title><rect x="907.9" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.9" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (100 samples, 0.04%)</title><rect x="907.9" y="307.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="910.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (198 samples, 0.09%)</title><rect x="908.4" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (198 samples, 0.09%)</title><rect x="908.4" y="339.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="911.4" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (143 samples, 0.06%)</title><rect x="909.4" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.4" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (143 samples, 0.06%)</title><rect x="909.4" y="403.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="912.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (246 samples, 0.11%)</title><rect x="910.1" y="419.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (246 samples, 0.11%)</title><rect x="910.1" y="403.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="913.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (96 samples, 0.04%)</title><rect x="911.4" y="451.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="914.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,551 samples, 0.67%)</title><rect x="911.9" y="451.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.9" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,551 samples, 0.67%)</title><rect x="911.9" y="435.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.9" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,393 samples, 0.61%)</title><rect x="911.9" y="419.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.9" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,393 samples, 0.61%)</title><rect x="911.9" y="403.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.9" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,393 samples, 0.61%)</title><rect x="911.9" y="387.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.9" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (370 samples, 0.16%)</title><rect x="911.9" y="371.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="914.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (497 samples, 0.22%)</title><rect x="913.8" y="371.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.8" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (497 samples, 0.22%)</title><rect x="913.8" y="355.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.8" y="366.0"></text>
</g>
<g>
<title>byte[] (497 samples, 0.22%)</title><rect x="913.8" y="339.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="916.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (526 samples, 0.23%)</title><rect x="916.3" y="371.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (526 samples, 0.23%)</title><rect x="916.3" y="355.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (526 samples, 0.23%)</title><rect x="916.3" y="339.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.3" y="350.0"></text>
</g>
<g>
<title>byte[] (526 samples, 0.23%)</title><rect x="916.3" y="323.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="919.3" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (158 samples, 0.07%)</title><rect x="919.0" y="419.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="922.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (268 samples, 0.12%)</title><rect x="919.8" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (268 samples, 0.12%)</title><rect x="919.8" y="435.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="922.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (457 samples, 0.20%)</title><rect x="921.2" y="451.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="924.2" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (120 samples, 0.05%)</title><rect x="921.2" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="924.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (119 samples, 0.05%)</title><rect x="921.8" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (119 samples, 0.05%)</title><rect x="921.8" y="419.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="924.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (218 samples, 0.09%)</title><rect x="922.4" y="435.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="925.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (218 samples, 0.09%)</title><rect x="922.4" y="419.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="925.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,692 samples, 1.17%)</title><rect x="923.6" y="467.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (68 samples, 0.03%)</title><rect x="923.6" y="451.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="926.6" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.map (266 samples, 0.12%)</title><rect x="923.9" y="451.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="926.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1335409496.apply (266 samples, 0.12%)</title><rect x="923.9" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="926.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (147 samples, 0.06%)</title><rect x="923.9" y="419.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="926.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (119 samples, 0.05%)</title><rect x="924.7" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (119 samples, 0.05%)</title><rect x="924.7" y="403.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="927.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (356 samples, 0.15%)</title><rect x="925.3" y="451.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="928.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (101 samples, 0.04%)</title><rect x="927.1" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (101 samples, 0.04%)</title><rect x="927.1" y="435.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="930.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (85 samples, 0.04%)</title><rect x="927.6" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.6" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (85 samples, 0.04%)</title><rect x="927.6" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.6" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (85 samples, 0.04%)</title><rect x="927.6" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.6" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (85 samples, 0.04%)</title><rect x="927.6" y="403.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="930.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,816 samples, 0.79%)</title><rect x="928.1" y="451.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,816 samples, 0.79%)</title><rect x="928.1" y="435.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="931.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (138 samples, 0.06%)</title><rect x="928.1" y="419.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="931.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (173 samples, 0.08%)</title><rect x="928.8" y="419.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="931.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (181 samples, 0.08%)</title><rect x="929.7" y="419.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="932.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (790 samples, 0.34%)</title><rect x="930.6" y="419.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (790 samples, 0.34%)</title><rect x="930.6" y="403.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (790 samples, 0.34%)</title><rect x="930.6" y="387.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.6" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (790 samples, 0.34%)</title><rect x="930.6" y="371.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.6" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (790 samples, 0.34%)</title><rect x="930.6" y="355.0" width="4.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="933.6" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (275 samples, 0.12%)</title><rect x="934.6" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (275 samples, 0.12%)</title><rect x="934.6" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (92 samples, 0.04%)</title><rect x="934.6" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (92 samples, 0.04%)</title><rect x="934.6" y="371.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="937.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (183 samples, 0.08%)</title><rect x="935.1" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (183 samples, 0.08%)</title><rect x="935.1" y="371.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="938.1" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (259 samples, 0.11%)</title><rect x="936.1" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.1" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (259 samples, 0.11%)</title><rect x="936.1" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="939.1" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (259 samples, 0.11%)</title><rect x="936.1" y="387.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="939.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,175 samples, 0.51%)</title><rect x="937.4" y="467.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="940.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (107 samples, 0.05%)</title><rect x="937.4" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="940.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (107 samples, 0.05%)</title><rect x="937.4" y="435.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="940.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.07%)</title><rect x="937.9" y="451.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="940.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (907 samples, 0.39%)</title><rect x="938.8" y="451.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="941.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (184 samples, 0.08%)</title><rect x="938.8" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (184 samples, 0.08%)</title><rect x="938.8" y="419.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1557312951.get$Lambda (96 samples, 0.04%)</title><rect x="938.8" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (96 samples, 0.04%)</title><rect x="938.8" y="387.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="941.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/1729175167.get$Lambda (88 samples, 0.04%)</title><rect x="939.2" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$130 (88 samples, 0.04%)</title><rect x="939.2" y="387.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="942.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (723 samples, 0.31%)</title><rect x="939.7" y="435.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (723 samples, 0.31%)</title><rect x="939.7" y="419.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="942.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (405 samples, 0.18%)</title><rect x="939.7" y="403.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="942.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (318 samples, 0.14%)</title><rect x="941.8" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (318 samples, 0.14%)</title><rect x="941.8" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (318 samples, 0.14%)</title><rect x="941.8" y="371.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="944.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,075 samples, 0.90%)</title><rect x="943.4" y="531.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (196 samples, 0.09%)</title><rect x="943.4" y="515.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="946.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,879 samples, 0.82%)</title><rect x="944.4" y="515.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.4" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,787 samples, 0.78%)</title><rect x="944.4" y="499.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,787 samples, 0.78%)</title><rect x="944.4" y="483.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.4" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (68 samples, 0.03%)</title><rect x="944.4" y="467.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="947.4" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (128 samples, 0.06%)</title><rect x="944.8" y="467.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="947.8" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (253 samples, 0.11%)</title><rect x="945.4" y="467.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="948.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (92 samples, 0.04%)</title><rect x="946.7" y="467.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="949.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (136 samples, 0.06%)</title><rect x="947.2" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (136 samples, 0.06%)</title><rect x="947.2" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.get$Lambda (136 samples, 0.06%)</title><rect x="947.2" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.2" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (136 samples, 0.06%)</title><rect x="947.2" y="419.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="950.2" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (163 samples, 0.07%)</title><rect x="947.9" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.9" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (163 samples, 0.07%)</title><rect x="947.9" y="451.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="950.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (691 samples, 0.30%)</title><rect x="948.7" y="467.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1041613328.accept (691 samples, 0.30%)</title><rect x="948.7" y="451.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (691 samples, 0.30%)</title><rect x="948.7" y="435.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (280 samples, 0.12%)</title><rect x="948.7" y="419.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1575688071.accept (280 samples, 0.12%)</title><rect x="948.7" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (280 samples, 0.12%)</title><rect x="948.7" y="387.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="951.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (280 samples, 0.12%)</title><rect x="948.7" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (280 samples, 0.12%)</title><rect x="948.7" y="355.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (280 samples, 0.12%)</title><rect x="948.7" y="339.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (280 samples, 0.12%)</title><rect x="948.7" y="323.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (280 samples, 0.12%)</title><rect x="948.7" y="307.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (280 samples, 0.12%)</title><rect x="948.7" y="291.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="951.7" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (224 samples, 0.10%)</title><rect x="950.2" y="419.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.2" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (224 samples, 0.10%)</title><rect x="950.2" y="403.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (109 samples, 0.05%)</title><rect x="950.2" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (109 samples, 0.05%)</title><rect x="950.2" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (109 samples, 0.05%)</title><rect x="950.2" y="355.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="953.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (115 samples, 0.05%)</title><rect x="950.7" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (115 samples, 0.05%)</title><rect x="950.7" y="371.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="953.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (187 samples, 0.08%)</title><rect x="951.3" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="954.3" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (187 samples, 0.08%)</title><rect x="951.3" y="403.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="954.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (256 samples, 0.11%)</title><rect x="952.3" y="467.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="955.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (256 samples, 0.11%)</title><rect x="952.3" y="451.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="955.3" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (92 samples, 0.04%)</title><rect x="953.6" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.6" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.of (92 samples, 0.04%)</title><rect x="953.6" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.6" y="494.0"></text>
</g>
<g>
<title>java.util.Optional (92 samples, 0.04%)</title><rect x="953.6" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="956.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.execLocalRequest (19,365 samples, 8.42%)</title><rect x="954.1" y="531.0" width="99.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.1" y="542.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (695 samples, 0.30%)</title><rect x="954.1" y="515.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (695 samples, 0.30%)</title><rect x="954.1" y="499.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils$$Lambda$120/1292373631.get$Lambda (695 samples, 0.30%)</title><rect x="954.1" y="483.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.1" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.FutureUtils$$Lambda$120 (695 samples, 0.30%)</title><rect x="954.1" y="467.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="957.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (18,670 samples, 8.12%)</title><rect x="957.6" y="515.0" width="95.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.6" y="526.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (18,670 samples, 8.12%)</title><rect x="957.6" y="499.0" width="95.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.6" y="510.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (599 samples, 0.26%)</title><rect x="957.6" y="483.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="960.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (559 samples, 0.24%)</title><rect x="960.7" y="483.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="963.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (17,512 samples, 7.62%)</title><rect x="963.6" y="483.0" width="89.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.6" y="494.0">java/util/..</text>
</g>
<g>
<title>java.lang.Thread (1,925 samples, 0.84%)</title><rect x="963.6" y="467.0" width="9.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="966.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Thread (7,102 samples, 3.09%)</title><rect x="973.4" y="467.0" width="36.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="976.4" y="478.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (8,485 samples, 3.69%)</title><rect x="1009.9" y="467.0" width="43.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1012.9" y="478.0">java..</text>
</g>
<g>
<title>java.lang.StringBuilder (358 samples, 0.16%)</title><rect x="1009.9" y="451.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1012.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (543 samples, 0.24%)</title><rect x="1011.7" y="451.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.7" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (543 samples, 0.24%)</title><rect x="1011.7" y="435.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.7" y="446.0"></text>
</g>
<g>
<title>byte[] (543 samples, 0.24%)</title><rect x="1011.7" y="419.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1014.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,991 samples, 0.87%)</title><rect x="1014.5" y="451.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,991 samples, 0.87%)</title><rect x="1014.5" y="435.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (922 samples, 0.40%)</title><rect x="1014.5" y="419.0" width="4.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1017.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,069 samples, 0.46%)</title><rect x="1019.2" y="419.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.2" y="430.0"></text>
</g>
<g>
<title>byte[] (1,069 samples, 0.46%)</title><rect x="1019.2" y="403.0" width="5.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1022.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (5,593 samples, 2.43%)</title><rect x="1024.7" y="451.0" width="28.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.7" y="462.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (5,593 samples, 2.43%)</title><rect x="1024.7" y="435.0" width="28.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.7" y="446.0">ja..</text>
</g>
<g>
<title>java.lang.Object (530 samples, 0.23%)</title><rect x="1024.7" y="419.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1027.7" y="430.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (5,063 samples, 2.20%)</title><rect x="1027.4" y="419.0" width="26.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.4" y="430.0">j..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (2,305 samples, 1.00%)</title><rect x="1027.4" y="403.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1030.4" y="414.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (2,305 samples, 1.00%)</title><rect x="1027.4" y="387.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.4" y="398.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (2,305 samples, 1.00%)</title><rect x="1027.4" y="371.0" width="11.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1030.4" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (2,758 samples, 1.20%)</title><rect x="1039.3" y="403.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1042.3" y="414.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (1,424 samples, 0.62%)</title><rect x="1039.3" y="387.0" width="7.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1042.3" y="398.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (1,334 samples, 0.58%)</title><rect x="1046.6" y="387.0" width="6.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1049.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.setRequestPattern (3,701 samples, 1.61%)</title><rect x="1053.4" y="531.0" width="19.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (448 samples, 0.19%)</title><rect x="1053.4" y="515.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1263877414.invoke (448 samples, 0.19%)</title><rect x="1053.4" y="499.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (448 samples, 0.19%)</title><rect x="1053.4" y="483.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (128 samples, 0.06%)</title><rect x="1053.4" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (128 samples, 0.06%)</title><rect x="1053.4" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1056.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (320 samples, 0.14%)</title><rect x="1054.1" y="467.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (320 samples, 0.14%)</title><rect x="1054.1" y="451.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.1" y="462.0"></text>
</g>
<g>
<title>byte[] (320 samples, 0.14%)</title><rect x="1054.1" y="435.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1057.1" y="446.0"></text>
</g>
<g>
<title>java/net/URI.create (1,985 samples, 0.86%)</title><rect x="1055.7" y="515.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1058.7" y="526.0"></text>
</g>
<g>
<title>java.net.URI (411 samples, 0.18%)</title><rect x="1055.7" y="499.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1058.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,574 samples, 0.68%)</title><rect x="1057.8" y="499.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.8" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (150 samples, 0.07%)</title><rect x="1057.8" y="483.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1060.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,424 samples, 0.62%)</title><rect x="1058.6" y="483.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (266 samples, 0.12%)</title><rect x="1058.6" y="467.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (266 samples, 0.12%)</title><rect x="1058.6" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1061.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (149 samples, 0.06%)</title><rect x="1058.6" y="435.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1061.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (117 samples, 0.05%)</title><rect x="1059.4" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1062.4" y="446.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.05%)</title><rect x="1059.4" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1062.4" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,158 samples, 0.50%)</title><rect x="1060.0" y="467.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (581 samples, 0.25%)</title><rect x="1060.0" y="451.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (581 samples, 0.25%)</title><rect x="1060.0" y="435.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (255 samples, 0.11%)</title><rect x="1060.0" y="419.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1063.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (326 samples, 0.14%)</title><rect x="1061.3" y="419.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.3" y="430.0"></text>
</g>
<g>
<title>byte[] (326 samples, 0.14%)</title><rect x="1061.3" y="403.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1064.3" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (577 samples, 0.25%)</title><rect x="1063.0" y="451.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (283 samples, 0.12%)</title><rect x="1063.0" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (283 samples, 0.12%)</title><rect x="1063.0" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (111 samples, 0.05%)</title><rect x="1063.0" y="403.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1066.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (172 samples, 0.07%)</title><rect x="1063.5" y="403.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.5" y="414.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.07%)</title><rect x="1063.5" y="387.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1066.5" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (294 samples, 0.13%)</title><rect x="1064.4" y="435.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.4" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (294 samples, 0.13%)</title><rect x="1064.4" y="419.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1067.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (294 samples, 0.13%)</title><rect x="1064.4" y="403.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (294 samples, 0.13%)</title><rect x="1064.4" y="387.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (132 samples, 0.06%)</title><rect x="1064.4" y="371.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1067.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (162 samples, 0.07%)</title><rect x="1065.1" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.1" y="382.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.07%)</title><rect x="1065.1" y="355.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1068.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (718 samples, 0.31%)</title><rect x="1065.9" y="515.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (280 samples, 0.12%)</title><rect x="1065.9" y="499.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1068.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (438 samples, 0.19%)</title><rect x="1067.3" y="499.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (117 samples, 0.05%)</title><rect x="1067.3" y="483.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1070.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (321 samples, 0.14%)</title><rect x="1067.9" y="483.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1070.9" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (321 samples, 0.14%)</title><rect x="1067.9" y="467.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1070.9" y="478.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (117 samples, 0.05%)</title><rect x="1069.6" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.6" y="526.0"></text>
</g>
<g>
<title>java/time/Duration.create (117 samples, 0.05%)</title><rect x="1069.6" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.6" y="510.0"></text>
</g>
<g>
<title>java.time.Duration (117 samples, 0.05%)</title><rect x="1069.6" y="483.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1072.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (433 samples, 0.19%)</title><rect x="1070.2" y="515.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (433 samples, 0.19%)</title><rect x="1070.2" y="499.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (433 samples, 0.19%)</title><rect x="1070.2" y="483.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1073.2" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (124 samples, 0.05%)</title><rect x="1070.2" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1073.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (132 samples, 0.06%)</title><rect x="1070.8" y="467.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.8" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (132 samples, 0.06%)</title><rect x="1070.8" y="451.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1073.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (177 samples, 0.08%)</title><rect x="1071.5" y="467.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (177 samples, 0.08%)</title><rect x="1071.5" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1074.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,078 samples, 0.47%)</title><rect x="1072.4" y="595.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,078 samples, 0.47%)</title><rect x="1072.4" y="579.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,078 samples, 0.47%)</title><rect x="1072.4" y="563.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (488 samples, 0.21%)</title><rect x="1072.4" y="547.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1075.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (590 samples, 0.26%)</title><rect x="1074.9" y="547.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1077.9" y="558.0"></text>
</g>
<g>
<title>byte[] (590 samples, 0.26%)</title><rect x="1074.9" y="531.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1077.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6,569 samples, 2.86%)</title><rect x="1078.0" y="627.0" width="33.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.0" y="638.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (1,055 samples, 0.46%)</title><rect x="1078.0" y="611.0" width="5.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1081.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,996 samples, 0.87%)</title><rect x="1083.4" y="611.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (1,490 samples, 0.65%)</title><rect x="1083.4" y="595.0" width="7.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1086.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (506 samples, 0.22%)</title><rect x="1091.0" y="595.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1094.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,518 samples, 1.53%)</title><rect x="1093.6" y="611.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,518 samples, 1.53%)</title><rect x="1093.6" y="595.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.6" y="606.0"></text>
</g>
<g>
<title>char[] (1,486 samples, 0.65%)</title><rect x="1093.6" y="579.0" width="7.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1096.6" y="590.0"></text>
</g>
<g>
<title>char[] (138 samples, 0.06%)</title><rect x="1101.2" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1104.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (703 samples, 0.31%)</title><rect x="1101.9" y="579.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1104.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,191 samples, 0.52%)</title><rect x="1105.5" y="579.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1108.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,191 samples, 0.52%)</title><rect x="1105.5" y="563.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,191 samples, 0.52%)</title><rect x="1105.5" y="547.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.5" y="558.0"></text>
</g>
<g>
<title>byte[] (1,191 samples, 0.52%)</title><rect x="1105.5" y="531.0" width="6.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1108.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (236 samples, 0.10%)</title><rect x="1111.7" y="627.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.7" y="638.0"></text>
</g>
<g>
<title>byte[] (236 samples, 0.10%)</title><rect x="1111.7" y="611.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1114.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,323 samples, 0.58%)</title><rect x="1112.9" y="627.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,323 samples, 0.58%)</title><rect x="1112.9" y="611.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,323 samples, 0.58%)</title><rect x="1112.9" y="595.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (780 samples, 0.34%)</title><rect x="1112.9" y="579.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1115.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (543 samples, 0.24%)</title><rect x="1116.9" y="579.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.9" y="590.0"></text>
</g>
<g>
<title>byte[] (543 samples, 0.24%)</title><rect x="1116.9" y="563.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1119.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,708 samples, 5.96%)</title><rect x="1119.7" y="627.0" width="70.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.7" y="638.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,708 samples, 5.96%)</title><rect x="1119.7" y="611.0" width="70.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.7" y="622.0">one/nio/..</text>
</g>
<g>
<title>char[] (5,076 samples, 2.21%)</title><rect x="1119.7" y="595.0" width="26.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1122.7" y="606.0">c..</text>
</g>
<g>
<title>char[] (1,177 samples, 0.51%)</title><rect x="1145.7" y="595.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (2,683 samples, 1.17%)</title><rect x="1151.7" y="595.0" width="13.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1154.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,772 samples, 2.08%)</title><rect x="1165.5" y="595.0" width="24.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.5" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,772 samples, 2.08%)</title><rect x="1165.5" y="579.0" width="24.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.5" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,772 samples, 2.08%)</title><rect x="1165.5" y="563.0" width="24.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.5" y="574.0">j..</text>
</g>
<g>
<title>byte[] (4,772 samples, 2.08%)</title><rect x="1165.5" y="547.0" width="24.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1168.5" y="558.0">b..</text>
</g>
</g>
</svg>
