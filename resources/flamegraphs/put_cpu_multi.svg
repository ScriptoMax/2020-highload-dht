<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Multi-node CPU</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (3,614 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="10.0" y="915.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.06%)</title><rect x="10.0" y="899.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (2 samples, 0.06%)</title><rect x="10.0" y="883.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.06%)</title><rect x="10.0" y="867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="10.0" y="851.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="10.3" y="851.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.3" y="862.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.06%)</title><rect x="10.7" y="915.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.7" y="926.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.06%)</title><rect x="11.3" y="915.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="14.3" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="11.3" y="899.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.3" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.06%)</title><rect x="11.3" y="883.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.3" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.06%)</title><rect x="11.3" y="867.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.3" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.06%)</title><rect x="11.3" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.3" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="11.6" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.6" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="11.6" y="819.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="14.6" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.08%)</title><rect x="12.0" y="915.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="15.0" y="926.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="12.0" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.0" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="12.3" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.3" y="910.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="12.3" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.3" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="12.6" y="899.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="15.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="12.6" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="15.6" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="12.6" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="15.6" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="12.6" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="15.6" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="12.6" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="15.6" y="846.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="12.6" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="15.6" y="830.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="12.6" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="15.6" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="12.6" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="15.6" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="12.6" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="12.9" y="915.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="15.9" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.22%)</title><rect x="13.3" y="915.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="16.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.14%)</title><rect x="14.2" y="899.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="17.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.14%)</title><rect x="14.2" y="883.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="17.2" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.08%)</title><rect x="14.9" y="867.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="17.9" y="878.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.08%)</title><rect x="14.9" y="851.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="17.9" y="862.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.08%)</title><rect x="14.9" y="835.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="17.9" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.06%)</title><rect x="14.9" y="819.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="17.9" y="830.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="14.9" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="17.9" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="15.2" y="803.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.2" y="814.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="15.2" y="787.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="18.2" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="15.2" y="771.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="18.2" y="782.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="15.6" y="819.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="18.6" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,669 samples, 73.85%)</title><rect x="15.9" y="915.0" width="871.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.9" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,669 samples, 73.85%)</title><rect x="15.9" y="899.0" width="871.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.9" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,669 samples, 73.85%)</title><rect x="15.9" y="883.0" width="871.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.9" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="16.2" y="867.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.2" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="16.2" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="19.2" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="16.2" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.2" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="16.2" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.2" y="830.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="16.2" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.2" y="814.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="16.2" y="787.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="19.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="16.2" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="19.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (9 samples, 0.25%)</title><rect x="16.5" y="867.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.25%)</title><rect x="16.5" y="851.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.25%)</title><rect x="16.5" y="835.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.25%)</title><rect x="16.5" y="819.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2 samples, 0.06%)</title><rect x="18.8" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (146 samples, 4.04%)</title><rect x="19.5" y="867.0" width="47.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.5" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (143 samples, 3.96%)</title><rect x="20.4" y="851.0" width="46.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.4" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (2 samples, 0.06%)</title><rect x="23.4" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="23.7" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="23.7" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="23.7" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.03%)</title><rect x="23.7" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (125 samples, 3.46%)</title><rect x="24.0" y="835.0" width="40.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.0" y="846.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="24.0" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (5 samples, 0.14%)</title><rect x="24.4" y="819.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.03%)</title><rect x="24.7" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (3 samples, 0.08%)</title><rect x="25.0" y="803.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.03%)</title><rect x="25.3" y="787.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="25.3" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.3" y="782.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="25.3" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="25.7" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.03%)</title><rect x="25.7" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (3 samples, 0.08%)</title><rect x="26.0" y="819.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (116 samples, 3.21%)</title><rect x="27.0" y="819.0" width="37.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.0" y="830.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (116 samples, 3.21%)</title><rect x="27.0" y="803.0" width="37.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.0" y="814.0">jdk..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="27.6" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.6" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (47 samples, 1.30%)</title><rect x="28.0" y="787.0" width="15.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="31.0" y="798.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="28.6" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.6" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.25%)</title><rect x="28.9" y="771.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="31.9" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="31.2" y="755.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="34.2" y="766.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="31.9" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="34.9" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="32.2" y="771.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="35.2" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="32.5" y="771.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="35.5" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (25 samples, 0.69%)</title><rect x="32.9" y="771.0" width="8.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="35.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.61%)</title><rect x="33.8" y="755.0" width="7.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="36.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.61%)</title><rect x="33.8" y="739.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="36.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.28%)</title><rect x="37.4" y="723.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="40.4" y="734.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.14%)</title><rect x="38.1" y="707.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="41.1" y="718.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.11%)</title><rect x="38.4" y="691.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="41.4" y="702.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.06%)</title><rect x="39.1" y="675.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.1" y="686.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="39.4" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="42.4" y="670.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.08%)</title><rect x="39.7" y="707.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="42.7" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="40.7" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="43.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="41.0" y="771.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="44.0" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="41.3" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="44.3" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.06%)</title><rect x="41.7" y="771.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="44.7" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.08%)</title><rect x="42.3" y="771.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="45.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.80%)</title><rect x="43.3" y="787.0" width="21.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="46.3" y="798.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (5 samples, 0.14%)</title><rect x="43.3" y="771.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="46.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (4 samples, 0.11%)</title><rect x="44.9" y="771.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="47.9" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.14%)</title><rect x="46.2" y="771.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="49.2" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.06%)</title><rect x="47.9" y="771.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="50.9" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="48.5" y="771.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="51.5" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (48 samples, 1.33%)</title><rect x="48.9" y="771.0" width="15.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="51.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.75%)</title><rect x="55.7" y="755.0" width="8.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="58.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.75%)</title><rect x="55.7" y="739.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.44%)</title><rect x="58.6" y="723.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.6" y="734.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.39%)</title><rect x="59.3" y="707.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="62.3" y="718.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.39%)</title><rect x="59.3" y="691.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="62.3" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="59.3" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="62.3" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.14%)</title><rect x="59.6" y="675.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="62.6" y="686.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.11%)</title><rect x="60.0" y="659.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.0" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.08%)</title><rect x="60.3" y="643.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="63.3" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.11%)</title><rect x="61.3" y="675.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.3" y="686.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="61.6" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.6" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="61.9" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="64.9" y="670.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="62.2" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="65.2" y="670.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="62.6" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="65.6" y="686.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.06%)</title><rect x="62.9" y="675.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.9" y="686.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="63.5" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="66.5" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="63.9" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="66.9" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="64.5" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="67.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.19%)</title><rect x="64.9" y="835.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7 samples, 0.19%)</title><rect x="64.9" y="819.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.11%)</title><rect x="65.8" y="803.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.08%)</title><rect x="66.2" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.06%)</title><rect x="66.2" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="66.8" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="66.8" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="66.8" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.run (2,512 samples, 69.51%)</title><rect x="67.1" y="867.0" width="820.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.1" y="878.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4 (2,510 samples, 69.45%)</title><rect x="67.8" y="851.0" width="819.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.8" y="862.0">ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (989 samples, 27.37%)</title><rect x="67.8" y="835.0" width="322.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.8" y="846.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (32 samples, 0.89%)</title><rect x="69.4" y="819.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (32 samples, 0.89%)</title><rect x="69.4" y="803.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (32 samples, 0.89%)</title><rect x="69.4" y="787.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.4" y="798.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.28%)</title><rect x="72.4" y="771.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="75.4" y="782.0"></text>
</g>
<g>
<title>gettimeofday@plt (4 samples, 0.11%)</title><rect x="75.6" y="771.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="78.6" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.25%)</title><rect x="76.9" y="771.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="79.9" y="782.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="76.9" y="755.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="79.9" y="766.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.19%)</title><rect x="77.6" y="755.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="80.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.17%)</title><rect x="77.9" y="739.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="80.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (939 samples, 25.98%)</title><rect x="79.9" y="819.0" width="306.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.9" y="830.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="79.9" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (35 samples, 0.97%)</title><rect x="80.5" y="803.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.47%)</title><rect x="86.4" y="787.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 0.47%)</title><rect x="86.4" y="771.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 0.47%)</title><rect x="86.4" y="755.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="91.3" y="739.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="94.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (902 samples, 24.96%)</title><rect x="92.0" y="803.0" width="294.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.0" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="92.0" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="95.0" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="92.0" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="95.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (901 samples, 24.93%)</title><rect x="92.3" y="787.0" width="294.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.3" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.06%)</title><rect x="95.9" y="771.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="98.9" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="96.2" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="99.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (888 samples, 24.57%)</title><rect x="96.5" y="771.0" width="290.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.5" y="782.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.08%)</title><rect x="96.9" y="755.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (884 samples, 24.46%)</title><rect x="97.8" y="755.0" width="288.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.8" y="766.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (42 samples, 1.16%)</title><rect x="102.7" y="739.0" width="13.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="105.7" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.14%)</title><rect x="106.3" y="723.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="109.3" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.06%)</title><rect x="108.0" y="723.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="111.0" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="108.6" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="111.6" y="734.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.17%)</title><rect x="108.9" y="723.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="111.9" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (14 samples, 0.39%)</title><rect x="110.9" y="723.0" width="4.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="113.9" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.06%)</title><rect x="112.2" y="707.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="115.2" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.08%)</title><rect x="112.9" y="707.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="115.9" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.11%)</title><rect x="113.8" y="707.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="116.8" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.06%)</title><rect x="114.5" y="691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="117.5" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="115.1" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="118.1" y="718.0"></text>
</g>
<g>
<title>memmove@plt (2 samples, 0.06%)</title><rect x="115.5" y="723.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="118.5" y="734.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="116.1" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.1" y="734.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.06%)</title><rect x="116.4" y="739.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="119.4" y="750.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="117.1" y="739.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="120.1" y="750.0"></text>
</g>
<g>
<title>__libc_send (822 samples, 22.74%)</title><rect x="117.4" y="739.0" width="268.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="120.4" y="750.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (810 samples, 22.41%)</title><rect x="121.3" y="723.0" width="264.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="124.3" y="734.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (5 samples, 0.14%)</title><rect x="121.3" y="707.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="124.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (805 samples, 22.27%)</title><rect x="123.0" y="707.0" width="262.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="126.0" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.03%)</title><rect x="132.1" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="135.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_sendto (776 samples, 21.47%)</title><rect x="132.4" y="691.0" width="253.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="135.4" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (772 samples, 21.36%)</title><rect x="132.4" y="675.0" width="252.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.4" y="686.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="135.1" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="138.1" y="670.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.06%)</title><rect x="135.4" y="659.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="138.4" y="670.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.06%)</title><rect x="135.4" y="643.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.4" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.03%)</title><rect x="136.0" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="139.0" y="670.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="136.4" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.4" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (742 samples, 20.53%)</title><rect x="136.7" y="659.0" width="242.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.7" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.11%)</title><rect x="137.3" y="643.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="140.3" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (729 samples, 20.17%)</title><rect x="138.6" y="643.0" width="238.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="141.6" y="654.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="139.6" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="142.6" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (724 samples, 20.03%)</title><rect x="140.0" y="627.0" width="236.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.0" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="140.6" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="143.6" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="140.9" y="611.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="143.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="141.6" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="144.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.06%)</title><rect x="141.9" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="144.9" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.08%)</title><rect x="142.6" y="611.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.6" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="142.6" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="145.6" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="142.6" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.06%)</title><rect x="142.9" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="145.9" y="606.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.08%)</title><rect x="143.5" y="611.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="146.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="144.2" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="147.2" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="144.2" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="147.2" y="590.0"></text>
</g>
<g>
<title>skb_put (3 samples, 0.08%)</title><rect x="144.5" y="611.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="147.5" y="622.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.03%)</title><rect x="145.5" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="148.5" y="622.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="145.8" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="148.8" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.14%)</title><rect x="146.2" y="611.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="149.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (699 samples, 19.34%)</title><rect x="147.8" y="611.0" width="228.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="150.8" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.14%)</title><rect x="151.1" y="595.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="154.1" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.11%)</title><rect x="151.1" y="579.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="154.1" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="152.0" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="155.0" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="152.0" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="155.0" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="152.0" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.0" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="152.0" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="155.0" y="526.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="152.0" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="155.0" y="510.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="152.0" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="152.0" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.0" y="478.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="152.4" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="155.4" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.06%)</title><rect x="152.7" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.7" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="153.3" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="156.3" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.14%)</title><rect x="153.7" y="595.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="156.7" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.08%)</title><rect x="153.7" y="579.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="156.7" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.06%)</title><rect x="154.6" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="157.6" y="590.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="155.3" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="158.3" y="606.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="155.6" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="158.6" y="606.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.06%)</title><rect x="155.9" y="595.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.9" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.94%)</title><rect x="156.6" y="595.0" width="11.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="159.6" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (25 samples, 0.69%)</title><rect x="158.2" y="579.0" width="8.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="161.2" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.08%)</title><rect x="158.6" y="563.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="161.6" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (11 samples, 0.30%)</title><rect x="159.5" y="563.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.22%)</title><rect x="159.5" y="547.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.5" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.11%)</title><rect x="160.5" y="531.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="163.5" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="161.8" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="164.8" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.06%)</title><rect x="162.2" y="547.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="165.2" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="162.8" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="165.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.25%)</title><rect x="163.1" y="563.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="166.1" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.08%)</title><rect x="164.8" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="167.8" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="165.7" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="168.7" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.03%)</title><rect x="166.1" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="169.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.03%)</title><rect x="166.4" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="169.4" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="166.7" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="169.7" y="590.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.06%)</title><rect x="167.1" y="579.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.1" y="590.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.06%)</title><rect x="167.7" y="595.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.7" y="606.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.03%)</title><rect x="168.0" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="171.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (618 samples, 17.10%)</title><rect x="168.4" y="595.0" width="201.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="171.4" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (615 samples, 17.02%)</title><rect x="168.7" y="579.0" width="200.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="171.7" y="590.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="168.7" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.7" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.06%)</title><rect x="169.0" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="172.0" y="574.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.06%)</title><rect x="169.7" y="563.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="172.7" y="574.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (2 samples, 0.06%)</title><rect x="170.3" y="563.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="173.3" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (608 samples, 16.82%)</title><rect x="171.0" y="563.0" width="198.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="174.0" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.08%)</title><rect x="176.8" y="547.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="179.8" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (543 samples, 15.02%)</title><rect x="177.8" y="547.0" width="177.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="180.8" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.06%)</title><rect x="184.0" y="531.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.0" y="542.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.08%)</title><rect x="184.7" y="531.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.7" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.06%)</title><rect x="185.7" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="188.7" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (507 samples, 14.03%)</title><rect x="186.3" y="531.0" width="165.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="189.3" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (504 samples, 13.95%)</title><rect x="186.6" y="515.0" width="164.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.6" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="189.6" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="192.6" y="510.0"></text>
</g>
<g>
<title>ip_local_out (492 samples, 13.61%)</title><rect x="189.9" y="499.0" width="160.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="192.9" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (107 samples, 2.96%)</title><rect x="190.6" y="483.0" width="34.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="193.6" y="494.0">__..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.25%)</title><rect x="191.2" y="467.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="194.2" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.11%)</title><rect x="194.2" y="467.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="197.2" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.06%)</title><rect x="195.5" y="467.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="198.5" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (87 samples, 2.41%)</title><rect x="196.1" y="467.0" width="28.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="199.1" y="478.0">nf..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.08%)</title><rect x="196.4" y="451.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.4" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (17 samples, 0.47%)</title><rect x="197.4" y="451.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="200.4" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (16 samples, 0.44%)</title><rect x="197.7" y="435.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="200.7" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (55 samples, 1.52%)</title><rect x="203.0" y="451.0" width="17.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="206.0" y="462.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (5 samples, 0.14%)</title><rect x="203.0" y="435.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="206.0" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.06%)</title><rect x="204.6" y="435.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="207.6" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (46 samples, 1.27%)</title><rect x="205.3" y="435.0" width="15.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="208.3" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (10 samples, 0.28%)</title><rect x="206.9" y="419.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="209.9" y="430.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="209.8" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.8" y="414.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="209.8" y="387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="212.8" y="398.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="209.8" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="212.8" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="209.8" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.8" y="366.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="209.8" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="212.8" y="350.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="209.8" y="323.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="212.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="209.8" y="307.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="212.8" y="318.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (1 samples, 0.03%)</title><rect x="210.1" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="213.1" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.03%)</title><rect x="210.5" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="213.5" y="430.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (5 samples, 0.14%)</title><rect x="210.8" y="419.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="213.8" y="430.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (4 samples, 0.11%)</title><rect x="212.4" y="419.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.4" y="430.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.03%)</title><rect x="213.7" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="216.7" y="430.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (19 samples, 0.53%)</title><rect x="214.1" y="419.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.1" y="430.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.03%)</title><rect x="217.0" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="220.0" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="217.3" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="220.3" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="217.7" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="220.7" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="217.7" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="220.7" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (3 samples, 0.08%)</title><rect x="218.0" y="403.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="221.0" y="414.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (4 samples, 0.11%)</title><rect x="219.0" y="403.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.0" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.06%)</title><rect x="219.6" y="387.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="222.6" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (2 samples, 0.06%)</title><rect x="220.3" y="435.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="223.3" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.06%)</title><rect x="220.9" y="451.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="223.9" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.06%)</title><rect x="221.6" y="451.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="224.6" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (7 samples, 0.19%)</title><rect x="222.2" y="451.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="225.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.08%)</title><rect x="222.2" y="435.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="225.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.11%)</title><rect x="223.2" y="435.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="226.2" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (3 samples, 0.08%)</title><rect x="223.2" y="419.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="226.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.03%)</title><rect x="224.2" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="227.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (3 samples, 0.08%)</title><rect x="224.5" y="467.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="227.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="225.5" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="228.5" y="494.0"></text>
</g>
<g>
<title>ip_output (379 samples, 10.49%)</title><rect x="225.8" y="483.0" width="123.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="228.8" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="226.5" y="467.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="229.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="227.1" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="230.1" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (362 samples, 10.02%)</title><rect x="227.5" y="467.0" width="118.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="230.5" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (9 samples, 0.25%)</title><rect x="229.4" y="451.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.4" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="232.4" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="235.4" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (343 samples, 9.49%)</title><rect x="232.7" y="451.0" width="112.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.7" y="462.0">ip_finish_out..</text>
</g>
<g>
<title>__local_bh_enable_ip (294 samples, 8.14%)</title><rect x="236.3" y="435.0" width="96.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="239.3" y="446.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.21 (294 samples, 8.14%)</title><rect x="236.3" y="419.0" width="96.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="239.3" y="430.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (290 samples, 8.02%)</title><rect x="237.6" y="403.0" width="94.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.6" y="414.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (289 samples, 8.00%)</title><rect x="237.6" y="387.0" width="94.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="240.6" y="398.0">__softirqen..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="240.5" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="243.5" y="382.0"></text>
</g>
<g>
<title>net_rx_action (277 samples, 7.66%)</title><rect x="240.8" y="371.0" width="90.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="243.8" y="382.0">net_rx_act..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="244.1" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="247.1" y="366.0"></text>
</g>
<g>
<title>process_backlog (266 samples, 7.36%)</title><rect x="244.4" y="355.0" width="86.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="247.4" y="366.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (258 samples, 7.14%)</title><rect x="247.0" y="339.0" width="84.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="250.0" y="350.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="247.0" y="323.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (257 samples, 7.11%)</title><rect x="247.4" y="323.0" width="83.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="250.4" y="334.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.25%)</title><rect x="248.0" y="307.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="251.0" y="318.0"></text>
</g>
<g>
<title>ip_rcv (244 samples, 6.75%)</title><rect x="251.0" y="307.0" width="79.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="254.0" y="318.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.08%)</title><rect x="251.6" y="291.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="254.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (2 samples, 0.06%)</title><rect x="252.6" y="291.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="255.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (229 samples, 6.34%)</title><rect x="253.2" y="291.0" width="74.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="256.2" y="302.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (226 samples, 6.25%)</title><rect x="253.6" y="275.0" width="73.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="256.6" y="286.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (210 samples, 5.81%)</title><rect x="253.9" y="259.0" width="68.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.9" y="270.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (210 samples, 5.81%)</title><rect x="253.9" y="243.0" width="68.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.9" y="254.0">ip_prot..</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="254.9" y="227.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="257.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (206 samples, 5.70%)</title><rect x="255.2" y="227.0" width="67.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="258.2" y="238.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.28%)</title><rect x="257.5" y="211.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.5" y="222.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="260.4" y="195.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="263.4" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.06%)</title><rect x="260.8" y="211.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="263.8" y="222.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.06%)</title><rect x="261.4" y="211.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.4" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="262.1" y="211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="265.1" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.14%)</title><rect x="262.4" y="211.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="265.4" y="222.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.06%)</title><rect x="262.7" y="195.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="265.7" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.06%)</title><rect x="263.4" y="195.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="266.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (179 samples, 4.95%)</title><rect x="264.0" y="211.0" width="58.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="267.0" y="222.0">tcp_v4..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="264.0" y="195.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="267.0" y="206.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="264.3" y="195.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="267.3" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (177 samples, 4.90%)</title><rect x="264.7" y="195.0" width="57.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="267.7" y="206.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.36%)</title><rect x="265.7" y="179.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="268.7" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="266.3" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="269.3" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (10 samples, 0.28%)</title><rect x="266.6" y="163.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="269.6" y="174.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="267.3" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="270.3" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.19%)</title><rect x="267.6" y="147.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="270.6" y="158.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.19%)</title><rect x="267.6" y="131.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="270.6" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.19%)</title><rect x="267.6" y="115.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="270.6" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="269.9" y="179.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.9" y="190.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.06%)</title><rect x="270.2" y="179.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.2" y="190.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="270.9" y="179.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.9" y="190.0"></text>
</g>
<g>
<title>tcp_ack (70 samples, 1.94%)</title><rect x="271.2" y="179.0" width="22.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="274.2" y="190.0">t..</text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.06%)</title><rect x="275.5" y="163.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.5" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="276.1" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="279.1" y="174.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="276.4" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="279.4" y="174.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.06%)</title><rect x="276.8" y="163.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="279.8" y="174.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="277.4" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="280.4" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (48 samples, 1.33%)</title><rect x="277.7" y="163.0" width="15.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="280.7" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.58%)</title><rect x="283.0" y="147.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="286.0" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.17%)</title><rect x="283.0" y="131.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="286.0" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.14%)</title><rect x="283.3" y="115.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="286.3" y="126.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.08%)</title><rect x="283.9" y="99.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="286.9" y="110.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.03%)</title><rect x="284.6" y="83.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="287.6" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="284.9" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="287.9" y="142.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.36%)</title><rect x="285.2" y="131.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.2" y="142.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.30%)</title><rect x="285.6" y="115.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="288.6" y="126.0"></text>
</g>
<g>
<title>skb_free_head (7 samples, 0.19%)</title><rect x="286.9" y="99.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="289.9" y="110.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.19%)</title><rect x="286.9" y="83.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="289.9" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.06%)</title><rect x="288.5" y="67.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="291.5" y="78.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.03%)</title><rect x="288.8" y="51.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.8" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="289.2" y="115.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="292.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="289.5" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="292.5" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="289.8" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="292.8" y="158.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="290.1" y="147.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="293.1" y="158.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="290.5" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="293.5" y="158.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="290.8" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="293.8" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (6 samples, 0.17%)</title><rect x="291.1" y="147.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="294.1" y="158.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="293.1" y="147.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="296.1" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="293.4" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="296.4" y="174.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="293.7" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.7" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.06%)</title><rect x="294.1" y="179.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="297.1" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.08%)</title><rect x="294.7" y="179.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="297.7" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (77 samples, 2.13%)</title><rect x="295.7" y="179.0" width="25.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.7" y="190.0">t..</text>
</g>
<g>
<title>dst_release (2 samples, 0.06%)</title><rect x="296.7" y="163.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="299.7" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (66 samples, 1.83%)</title><rect x="297.3" y="163.0" width="21.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="300.3" y="174.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (61 samples, 1.69%)</title><rect x="299.0" y="147.0" width="19.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="302.0" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (61 samples, 1.69%)</title><rect x="299.0" y="131.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="302.0" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (59 samples, 1.63%)</title><rect x="299.6" y="115.0" width="19.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.6" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.08%)</title><rect x="318.9" y="163.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="321.9" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.08%)</title><rect x="319.9" y="163.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.9" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.08%)</title><rect x="320.8" y="179.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.8" y="190.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.06%)</title><rect x="320.8" y="163.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="323.8" y="174.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="321.2" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="324.2" y="158.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="321.5" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="324.5" y="174.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.06%)</title><rect x="321.8" y="179.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="324.8" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.06%)</title><rect x="322.5" y="259.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.5" y="270.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (1 samples, 0.03%)</title><rect x="323.1" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="326.1" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.30%)</title><rect x="323.4" y="259.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.4" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (5 samples, 0.14%)</title><rect x="324.1" y="243.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="327.1" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.14%)</title><rect x="324.1" y="227.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="327.1" y="238.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.06%)</title><rect x="325.7" y="243.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.7" y="254.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.06%)</title><rect x="325.7" y="227.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.7" y="238.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="326.4" y="243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="329.4" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.03%)</title><rect x="326.7" y="243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="329.7" y="254.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="326.7" y="227.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="329.7" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.03%)</title><rect x="327.0" y="259.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="330.0" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.06%)</title><rect x="327.4" y="275.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="330.4" y="286.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.08%)</title><rect x="328.0" y="291.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.0" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.03%)</title><rect x="329.0" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="332.0" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.11%)</title><rect x="329.3" y="291.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.03%)</title><rect x="330.6" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="333.6" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="331.0" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="334.0" y="318.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="331.3" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="334.3" y="382.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="331.6" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="334.6" y="382.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="331.6" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="334.6" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="331.6" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="334.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="331.9" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.9" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (38 samples, 1.05%)</title><rect x="332.3" y="435.0" width="12.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="335.3" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (32 samples, 0.89%)</title><rect x="332.9" y="419.0" width="10.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="335.9" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (19 samples, 0.53%)</title><rect x="334.2" y="403.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="337.2" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.06%)</title><rect x="335.2" y="387.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="338.2" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.36%)</title><rect x="335.9" y="387.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="338.9" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.06%)</title><rect x="336.5" y="371.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="339.5" y="382.0"></text>
</g>
<g>
<title>netif_rx (8 samples, 0.22%)</title><rect x="337.2" y="371.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="340.2" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.22%)</title><rect x="337.2" y="355.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.2" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.22%)</title><rect x="337.2" y="339.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="340.2" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="339.8" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.8" y="382.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="339.8" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="342.8" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="340.1" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="343.1" y="398.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.06%)</title><rect x="340.4" y="403.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="343.4" y="414.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="341.1" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="344.1" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.06%)</title><rect x="341.4" y="403.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="344.4" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="341.7" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="344.7" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (4 samples, 0.11%)</title><rect x="342.1" y="403.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.1" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.06%)</title><rect x="343.4" y="419.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="346.4" y="430.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.03%)</title><rect x="344.0" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="347.0" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="344.3" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="347.3" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.08%)</title><rect x="344.7" y="451.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="347.7" y="462.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (1 samples, 0.03%)</title><rect x="345.7" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="348.7" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="346.0" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.0" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.28%)</title><rect x="346.3" y="467.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="349.3" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (8 samples, 0.22%)</title><rect x="346.6" y="451.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="349.6" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (7 samples, 0.19%)</title><rect x="347.0" y="435.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="350.0" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.03%)</title><rect x="349.2" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="352.2" y="462.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="349.6" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.6" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.06%)</title><rect x="349.9" y="483.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.9" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="350.5" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.5" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="350.9" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="353.9" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.06%)</title><rect x="351.2" y="515.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="354.2" y="526.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.22%)</title><rect x="351.9" y="531.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="354.9" y="542.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.08%)</title><rect x="352.2" y="515.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.2" y="526.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.11%)</title><rect x="353.2" y="515.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="356.2" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.08%)</title><rect x="353.5" y="499.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.5" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="354.5" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="357.5" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="354.8" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="357.8" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.06%)</title><rect x="355.1" y="547.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="358.1" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.08%)</title><rect x="355.8" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="358.8" y="558.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.22%)</title><rect x="356.8" y="547.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="359.8" y="558.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.08%)</title><rect x="358.4" y="531.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="361.4" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.06%)</title><rect x="359.4" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.4" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.39%)</title><rect x="360.0" y="547.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.0" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="360.3" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="363.3" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="360.7" y="531.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="363.7" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.06%)</title><rect x="361.3" y="531.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="364.3" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.06%)</title><rect x="361.3" y="515.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="364.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (8 samples, 0.22%)</title><rect x="362.0" y="531.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.0" y="542.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="362.3" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="365.3" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.17%)</title><rect x="362.6" y="515.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="365.6" y="526.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.17%)</title><rect x="362.6" y="499.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.6" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="363.3" y="483.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="366.3" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.03%)</title><rect x="364.3" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="367.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="364.3" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="367.3" y="478.0"></text>
</g>
<g>
<title>tcp_options_write (4 samples, 0.11%)</title><rect x="364.6" y="547.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="367.6" y="558.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.06%)</title><rect x="365.9" y="547.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="368.9" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.06%)</title><rect x="366.5" y="547.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="369.5" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.11%)</title><rect x="367.2" y="547.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="370.2" y="558.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="367.9" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.9" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="368.5" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="371.5" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.06%)</title><rect x="368.8" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="371.8" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.06%)</title><rect x="369.5" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="372.5" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.47%)</title><rect x="370.1" y="595.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="373.1" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="371.1" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="374.1" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.36%)</title><rect x="371.4" y="579.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.4" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.14%)</title><rect x="373.7" y="563.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="376.7" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="375.4" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="378.4" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="375.7" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="378.7" y="606.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="376.0" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="379.0" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="376.3" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="379.3" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.19%)</title><rect x="376.7" y="643.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="379.7" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.19%)</title><rect x="376.7" y="627.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="379.7" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.19%)</title><rect x="376.7" y="611.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="379.7" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="377.3" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="380.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.11%)</title><rect x="377.6" y="595.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="380.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.47%)</title><rect x="379.0" y="659.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="382.0" y="670.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.44%)</title><rect x="379.3" y="643.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="382.3" y="654.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.44%)</title><rect x="379.3" y="627.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="382.3" y="638.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.39%)</title><rect x="379.9" y="611.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.9" y="622.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.08%)</title><rect x="384.5" y="675.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.5" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="385.5" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="388.5" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="385.8" y="739.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="388.8" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="386.1" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="389.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="386.1" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="389.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="386.1" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="389.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.36%)</title><rect x="386.5" y="819.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="389.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.14%)</title><rect x="389.1" y="803.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.14%)</title><rect x="389.1" y="787.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="392.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$66/198562544.exec (1,521 samples, 42.09%)</title><rect x="390.7" y="835.0" width="496.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.7" y="846.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$66/198562544.e..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$entity$2 (1,521 samples, 42.09%)</title><rect x="390.7" y="819.0" width="496.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.7" y="830.0">ru/mail/polis/service/codearound/AsyncService.lambda$entity$2</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.upsert (1,521 samples, 42.09%)</title><rect x="390.7" y="803.0" width="496.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.7" y="814.0">ru/mail/polis/service/codearound/AsyncService.upsert</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.17%)</title><rect x="390.7" y="787.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.17%)</title><rect x="390.7" y="771.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.17%)</title><rect x="390.7" y="755.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.17%)</title><rect x="390.7" y="739.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.17%)</title><rect x="390.7" y="723.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.17%)</title><rect x="390.7" y="707.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="392.7" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.7" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="392.7" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="395.7" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="392.7" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="395.7" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="392.7" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="395.7" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="392.7" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="395.7" y="734.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="392.7" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="395.7" y="718.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.03%)</title><rect x="392.7" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="395.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.proxy (698 samples, 19.31%)</title><rect x="393.0" y="787.0" width="227.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.0" y="798.0">ru/mail/polis/service/codearou..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.25%)</title><rect x="393.0" y="771.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1668016508.invoke (9 samples, 0.25%)</title><rect x="393.0" y="755.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.25%)</title><rect x="393.0" y="739.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.0" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.14%)</title><rect x="394.3" y="723.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="397.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.08%)</title><rect x="395.9" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.08%)</title><rect x="395.9" y="755.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="398.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="395.9" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.9" y="750.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="396.6" y="739.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="399.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (686 samples, 18.98%)</title><rect x="396.9" y="771.0" width="224.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.9" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="396.9" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (685 samples, 18.95%)</title><rect x="397.2" y="755.0" width="223.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.2" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.08%)</title><rect x="399.9" y="739.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="402.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="399.9" y="723.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="399.9" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (144 samples, 3.98%)</title><rect x="400.8" y="739.0" width="47.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.8" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (117 samples, 3.24%)</title><rect x="409.3" y="723.0" width="38.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.3" y="734.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.50%)</title><rect x="411.0" y="707.0" width="5.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="414.0" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.08%)</title><rect x="412.3" y="691.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="415.3" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="413.2" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="416.2" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (3 samples, 0.08%)</title><rect x="413.6" y="691.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="416.6" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.19%)</title><rect x="414.5" y="691.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="417.5" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="415.5" y="675.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="418.5" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="415.8" y="675.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="418.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="416.5" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="419.5" y="686.0"></text>
</g>
<g>
<title>__GI___recv (91 samples, 2.52%)</title><rect x="416.8" y="707.0" width="29.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="419.8" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 2.32%)</title><rect x="419.1" y="691.0" width="27.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.1" y="702.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="419.1" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="422.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (83 samples, 2.30%)</title><rect x="419.4" y="675.0" width="27.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.4" y="686.0">d..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.06%)</title><rect x="423.0" y="659.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="426.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (69 samples, 1.91%)</title><rect x="423.7" y="659.0" width="22.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="426.7" y="670.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (68 samples, 1.88%)</title><rect x="423.7" y="643.0" width="22.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.7" y="654.0">_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="423.7" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="426.7" y="638.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.03%)</title><rect x="424.0" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="427.0" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (64 samples, 1.77%)</title><rect x="424.3" y="627.0" width="20.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="427.3" y="638.0"></text>
</g>
<g>
<title>inet_recvmsg (59 samples, 1.63%)</title><rect x="424.3" y="611.0" width="19.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="427.3" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.03%)</title><rect x="424.7" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="427.7" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (57 samples, 1.58%)</title><rect x="425.0" y="595.0" width="18.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.0" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="429.9" y="579.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.9" y="590.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="429.9" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="432.9" y="574.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="429.9" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="432.9" y="558.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="430.2" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="433.2" y="574.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.06%)</title><rect x="430.5" y="579.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.5" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="430.9" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.9" y="574.0"></text>
</g>
<g>
<title>sk_wait_data (21 samples, 0.58%)</title><rect x="431.2" y="579.0" width="6.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="434.2" y="590.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.03%)</title><rect x="431.5" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="434.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="431.5" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="434.5" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.06%)</title><rect x="431.8" y="563.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="434.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.06%)</title><rect x="431.8" y="547.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.8" y="558.0"></text>
</g>
<g>
<title>remove_wait_queue (9 samples, 0.25%)</title><rect x="432.5" y="563.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="435.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="432.5" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="435.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.22%)</title><rect x="432.8" y="547.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="435.8" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.03%)</title><rect x="435.4" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="438.4" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="435.8" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="438.8" y="574.0"></text>
</g>
<g>
<title>wait_woken (6 samples, 0.17%)</title><rect x="436.1" y="563.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="439.1" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (6 samples, 0.17%)</title><rect x="436.1" y="547.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="439.1" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="436.4" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="439.4" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="436.7" y="531.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="439.7" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="437.7" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="440.7" y="542.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="437.7" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.7" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.30%)</title><rect x="438.1" y="579.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.1" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.25%)</title><rect x="438.1" y="563.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="441.1" y="574.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="438.7" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="441.7" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.17%)</title><rect x="439.0" y="547.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="442.0" y="558.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="439.0" y="531.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="442.0" y="542.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="439.4" y="531.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.4" y="542.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="439.4" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="442.4" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="439.7" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="442.7" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.06%)</title><rect x="440.0" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.0" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.06%)</title><rect x="440.0" y="515.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.0" y="526.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.03%)</title><rect x="440.7" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.7" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.06%)</title><rect x="441.0" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="444.0" y="574.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="441.6" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.6" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="442.0" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.0" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.08%)</title><rect x="442.3" y="579.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="445.3" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.08%)</title><rect x="442.3" y="563.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="445.3" y="574.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.06%)</title><rect x="442.6" y="547.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="445.6" y="558.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="442.9" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="445.9" y="542.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="443.3" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="446.3" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.14%)</title><rect x="443.6" y="611.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="446.6" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="443.6" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="446.6" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.11%)</title><rect x="443.9" y="595.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="446.9" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.11%)</title><rect x="443.9" y="579.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="446.9" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.06%)</title><rect x="444.3" y="563.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="447.3" y="574.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="444.9" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.9" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="444.9" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.9" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="444.9" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.9" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="444.9" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="447.9" y="526.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="444.9" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="447.9" y="510.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="444.9" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="447.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="444.9" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="447.9" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.06%)</title><rect x="445.2" y="627.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="448.2" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="445.2" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="448.2" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="445.2" y="595.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="448.2" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="445.2" y="579.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="448.2" y="590.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="445.9" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="446.2" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="449.2" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="446.2" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="449.2" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.08%)</title><rect x="446.5" y="707.0" width="1.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="449.5" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="447.5" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="450.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="447.5" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="450.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="447.5" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="450.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (27 samples, 0.75%)</title><rect x="447.8" y="739.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.08%)</title><rect x="448.2" y="723.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="448.2" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="448.2" y="691.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="448.8" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="448.8" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.8" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="448.8" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="449.2" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="449.2" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (11 samples, 0.30%)</title><rect x="449.5" y="723.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.25%)</title><rect x="450.1" y="707.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.25%)</title><rect x="450.1" y="691.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.1" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="452.7" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="455.7" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="452.7" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.7" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="452.7" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.14%)</title><rect x="453.1" y="723.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.17%)</title><rect x="454.7" y="723.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="456.0" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="456.0" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (29 samples, 0.80%)</title><rect x="456.7" y="739.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="460.9" y="723.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="463.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.39%)</title><rect x="461.2" y="723.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (14 samples, 0.39%)</title><rect x="461.2" y="707.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (14 samples, 0.39%)</title><rect x="461.2" y="691.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.2" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="465.5" y="675.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="468.5" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="465.8" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="468.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="465.8" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="468.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="465.8" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="468.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.06%)</title><rect x="466.1" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="466.1" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="466.1" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="466.8" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (76 samples, 2.10%)</title><rect x="467.4" y="739.0" width="24.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="470.4" y="750.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.06%)</title><rect x="468.7" y="723.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="471.7" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (69 samples, 1.91%)</title><rect x="469.4" y="723.0" width="22.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="472.4" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 1.77%)</title><rect x="471.0" y="707.0" width="20.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="474.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 1.77%)</title><rect x="471.0" y="691.0" width="20.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="474.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (39 samples, 1.08%)</title><rect x="479.2" y="675.0" width="12.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="482.2" y="686.0"></text>
</g>
<g>
<title>__sys_setsockopt (38 samples, 1.05%)</title><rect x="479.2" y="659.0" width="12.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.2" y="670.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="479.2" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="482.2" y="654.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.06%)</title><rect x="479.5" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="482.5" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.03%)</title><rect x="480.2" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="483.2" y="654.0"></text>
</g>
<g>
<title>security_socket_setsockopt (11 samples, 0.30%)</title><rect x="480.5" y="643.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="483.5" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (3 samples, 0.08%)</title><rect x="480.5" y="627.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (8 samples, 0.22%)</title><rect x="481.5" y="627.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="484.5" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="481.5" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="484.5" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (7 samples, 0.19%)</title><rect x="481.8" y="611.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="484.8" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.14%)</title><rect x="482.5" y="595.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.5" y="606.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.06%)</title><rect x="484.1" y="643.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="487.1" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (12 samples, 0.33%)</title><rect x="484.7" y="643.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="487.7" y="654.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.06%)</title><rect x="485.1" y="627.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.1" y="638.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.08%)</title><rect x="485.7" y="627.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="488.7" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="486.4" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="489.4" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (6 samples, 0.17%)</title><rect x="486.7" y="627.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="489.7" y="638.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="487.7" y="611.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="490.7" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="488.0" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="491.0" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="488.3" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.3" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.25%)</title><rect x="488.7" y="643.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="491.7" y="654.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.19%)</title><rect x="488.7" y="627.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="491.7" y="638.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="488.7" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="491.7" y="622.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.17%)</title><rect x="489.0" y="611.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="492.0" y="622.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.17%)</title><rect x="489.0" y="595.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="490.9" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.9" y="638.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="491.6" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="494.6" y="670.0"></text>
</g>
<g>
<title>setsockopt@plt (1 samples, 0.03%)</title><rect x="491.9" y="723.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="494.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (393 samples, 10.87%)</title><rect x="492.3" y="739.0" width="128.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.3" y="750.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (25 samples, 0.69%)</title><rect x="497.5" y="723.0" width="8.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="500.5" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="501.4" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="504.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="501.7" y="707.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="504.7" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (4 samples, 0.11%)</title><rect x="502.0" y="707.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="505.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.11%)</title><rect x="503.4" y="707.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="506.4" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="503.4" y="691.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="506.4" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="503.7" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="506.7" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.06%)</title><rect x="504.0" y="691.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="507.0" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="504.3" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="507.3" y="686.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.03%)</title><rect x="504.7" y="707.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="507.7" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.06%)</title><rect x="505.0" y="707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="508.0" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.08%)</title><rect x="505.6" y="723.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="508.6" y="734.0"></text>
</g>
<g>
<title>__libc_send (346 samples, 9.57%)</title><rect x="506.6" y="723.0" width="113.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="509.6" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (344 samples, 9.52%)</title><rect x="507.3" y="707.0" width="112.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="510.3" y="718.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.06%)</title><rect x="507.3" y="691.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (342 samples, 9.46%)</title><rect x="507.9" y="691.0" width="111.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="510.9" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (332 samples, 9.19%)</title><rect x="511.2" y="675.0" width="108.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="514.2" y="686.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (330 samples, 9.13%)</title><rect x="511.2" y="659.0" width="107.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="514.2" y="670.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="511.8" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.8" y="654.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.03%)</title><rect x="512.2" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="515.2" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (322 samples, 8.91%)</title><rect x="512.5" y="643.0" width="105.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="515.5" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (317 samples, 8.77%)</title><rect x="512.8" y="627.0" width="103.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="515.8" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (315 samples, 8.72%)</title><rect x="513.1" y="611.0" width="102.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="516.1" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="513.1" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.06%)</title><rect x="513.5" y="595.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="516.5" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="514.1" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="517.1" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="514.1" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.1" y="590.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="514.5" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="517.5" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="514.8" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="517.8" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (307 samples, 8.49%)</title><rect x="515.1" y="595.0" width="100.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.1" y="606.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.08%)</title><rect x="516.7" y="579.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="519.7" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.08%)</title><rect x="516.7" y="563.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="519.7" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="517.7" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="520.7" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.06%)</title><rect x="518.4" y="579.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="521.4" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="518.4" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="521.4" y="574.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="518.7" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="521.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (19 samples, 0.53%)</title><rect x="519.0" y="579.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="522.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.33%)</title><rect x="519.7" y="563.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="522.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.11%)</title><rect x="520.3" y="547.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="523.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.08%)</title><rect x="520.7" y="531.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="523.7" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.06%)</title><rect x="521.0" y="515.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="524.0" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="521.3" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="524.3" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="521.3" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="524.3" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="521.3" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="524.3" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="521.3" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.3" y="462.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="521.3" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="524.3" y="446.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="521.3" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="524.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="521.3" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="524.3" y="414.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.17%)</title><rect x="521.6" y="547.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="524.6" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="523.6" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.6" y="574.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.11%)</title><rect x="523.9" y="563.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="526.9" y="574.0"></text>
</g>
<g>
<title>tcp_push (272 samples, 7.53%)</title><rect x="525.2" y="579.0" width="88.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.2" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (272 samples, 7.53%)</title><rect x="525.2" y="563.0" width="88.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="528.2" y="574.0">__tcp_push..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="525.2" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="528.2" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (271 samples, 7.50%)</title><rect x="525.6" y="547.0" width="88.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="528.6" y="558.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (255 samples, 7.06%)</title><rect x="527.5" y="531.0" width="83.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="530.5" y="542.0">__tcp_tra..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="530.1" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="533.1" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (244 samples, 6.75%)</title><rect x="530.5" y="515.0" width="79.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="533.5" y="526.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (244 samples, 6.75%)</title><rect x="530.5" y="499.0" width="79.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="533.5" y="510.0">__ip_queu..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="532.1" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="535.1" y="494.0"></text>
</g>
<g>
<title>ip_local_out (237 samples, 6.56%)</title><rect x="532.4" y="483.0" width="77.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="535.4" y="494.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (40 samples, 1.11%)</title><rect x="533.1" y="467.0" width="13.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.1" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.03%)</title><rect x="533.1" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="536.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (39 samples, 1.08%)</title><rect x="533.4" y="451.0" width="12.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.4" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.06%)</title><rect x="533.4" y="435.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="536.4" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.25%)</title><rect x="534.0" y="435.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="537.0" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.25%)</title><rect x="534.0" y="419.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.0" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (26 samples, 0.72%)</title><rect x="537.0" y="435.0" width="8.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="540.0" y="446.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.06%)</title><rect x="537.0" y="419.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="540.0" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (23 samples, 0.64%)</title><rect x="537.6" y="419.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="540.6" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.11%)</title><rect x="538.6" y="403.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="541.6" y="414.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find?[nf_conntrack] (2 samples, 0.06%)</title><rect x="539.9" y="403.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="542.9" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.03%)</title><rect x="540.6" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="543.6" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (13 samples, 0.36%)</title><rect x="540.9" y="403.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="543.9" y="414.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.03%)</title><rect x="543.5" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="546.5" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.03%)</title><rect x="543.8" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="546.8" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.08%)</title><rect x="544.2" y="387.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="547.2" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (1 samples, 0.03%)</title><rect x="545.1" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.06%)</title><rect x="545.5" y="435.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="548.5" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.03%)</title><rect x="545.8" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.8" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="545.8" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="548.8" y="414.0"></text>
</g>
<g>
<title>ip_output (195 samples, 5.40%)</title><rect x="546.1" y="467.0" width="63.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="549.1" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (187 samples, 5.17%)</title><rect x="546.1" y="451.0" width="61.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="549.1" y="462.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="546.5" y="435.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="549.5" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (183 samples, 5.06%)</title><rect x="547.1" y="435.0" width="59.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="550.1" y="446.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (160 samples, 4.43%)</title><rect x="547.8" y="419.0" width="52.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="550.8" y="430.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.21 (159 samples, 4.40%)</title><rect x="548.1" y="403.0" width="51.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.1" y="414.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (157 samples, 4.34%)</title><rect x="548.7" y="387.0" width="51.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="551.7" y="398.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (157 samples, 4.34%)</title><rect x="548.7" y="371.0" width="51.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="551.7" y="382.0">__sof..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="549.7" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="552.7" y="366.0"></text>
</g>
<g>
<title>net_rx_action (153 samples, 4.23%)</title><rect x="550.0" y="355.0" width="50.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="553.0" y="366.0">net_r..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="551.4" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="554.4" y="350.0"></text>
</g>
<g>
<title>process_backlog (148 samples, 4.10%)</title><rect x="551.7" y="339.0" width="48.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="554.7" y="350.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (148 samples, 4.10%)</title><rect x="551.7" y="323.0" width="48.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="554.7" y="334.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (148 samples, 4.10%)</title><rect x="551.7" y="307.0" width="48.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="554.7" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="551.7" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="554.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (146 samples, 4.04%)</title><rect x="552.0" y="291.0" width="47.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="555.0" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (1 samples, 0.03%)</title><rect x="552.0" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (140 samples, 3.87%)</title><rect x="552.3" y="275.0" width="45.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="555.3" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (139 samples, 3.85%)</title><rect x="552.3" y="259.0" width="45.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="555.3" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (138 samples, 3.82%)</title><rect x="552.3" y="243.0" width="45.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="555.3" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (138 samples, 3.82%)</title><rect x="552.3" y="227.0" width="45.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="555.3" y="238.0">ip_p..</text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="552.7" y="211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="555.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (136 samples, 3.76%)</title><rect x="553.0" y="211.0" width="44.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="556.0" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.08%)</title><rect x="553.3" y="195.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="556.3" y="206.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.03%)</title><rect x="554.3" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="557.3" y="206.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="554.6" y="195.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="557.6" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="555.3" y="195.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="558.3" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.11%)</title><rect x="555.6" y="195.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.6" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="555.9" y="179.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.9" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.06%)</title><rect x="556.2" y="179.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="559.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (123 samples, 3.40%)</title><rect x="556.9" y="195.0" width="40.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="559.9" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="557.2" y="179.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="560.2" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.03%)</title><rect x="557.6" y="179.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.6" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (120 samples, 3.32%)</title><rect x="557.9" y="179.0" width="39.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="560.9" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.08%)</title><rect x="558.5" y="163.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="561.5" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.06%)</title><rect x="558.9" y="147.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.9" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="559.2" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="562.2" y="142.0"></text>
</g>
<g>
<title>tcp_ack (34 samples, 0.94%)</title><rect x="559.5" y="163.0" width="11.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="562.5" y="174.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.06%)</title><rect x="561.1" y="147.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="564.1" y="158.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="561.8" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="564.8" y="158.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="562.1" y="147.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="565.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (21 samples, 0.58%)</title><rect x="562.5" y="147.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="565.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.33%)</title><rect x="564.1" y="131.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="567.1" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.17%)</title><rect x="564.1" y="115.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="567.1" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.17%)</title><rect x="564.1" y="99.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="567.1" y="110.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.11%)</title><rect x="564.7" y="83.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="567.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.17%)</title><rect x="566.0" y="115.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="569.0" y="126.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.14%)</title><rect x="566.0" y="99.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="569.0" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.06%)</title><rect x="567.0" y="83.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.0" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.06%)</title><rect x="567.0" y="67.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="570.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="567.3" y="51.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="570.3" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.03%)</title><rect x="567.3" y="35.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="570.3" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="567.7" y="99.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="570.7" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.06%)</title><rect x="568.0" y="131.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="571.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.06%)</title><rect x="568.7" y="131.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="571.7" y="142.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="569.0" y="115.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="572.0" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.06%)</title><rect x="569.3" y="147.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="572.3" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.06%)</title><rect x="570.0" y="147.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="573.0" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.08%)</title><rect x="570.6" y="163.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="573.6" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (73 samples, 2.02%)</title><rect x="571.6" y="163.0" width="23.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="574.6" y="174.0">t..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="572.2" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="575.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (66 samples, 1.83%)</title><rect x="572.6" y="147.0" width="21.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.6" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (65 samples, 1.80%)</title><rect x="572.9" y="131.0" width="21.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="575.9" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (64 samples, 1.77%)</title><rect x="572.9" y="115.0" width="20.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.9" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (64 samples, 1.77%)</title><rect x="572.9" y="99.0" width="20.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="575.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="593.8" y="115.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="596.8" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="594.1" y="147.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="597.1" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.08%)</title><rect x="594.4" y="147.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="597.4" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="595.4" y="163.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="598.4" y="174.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="595.4" y="147.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="598.4" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.06%)</title><rect x="595.8" y="163.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="598.8" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="596.4" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="599.4" y="174.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="596.7" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="599.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="597.1" y="195.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.1" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="597.4" y="243.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.4" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.03%)</title><rect x="597.4" y="227.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.4" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.03%)</title><rect x="597.4" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (1 samples, 0.03%)</title><rect x="597.7" y="259.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.7" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (3 samples, 0.08%)</title><rect x="598.0" y="275.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="601.0" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.06%)</title><rect x="599.0" y="275.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.0" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (1 samples, 0.03%)</title><rect x="599.3" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="602.3" y="270.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.03%)</title><rect x="599.3" y="243.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="602.3" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.03%)</title><rect x="599.7" y="291.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.7" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.55%)</title><rect x="600.0" y="419.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="603.0" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.55%)</title><rect x="600.0" y="403.0" width="6.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="603.0" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.19%)</title><rect x="602.3" y="387.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.3" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.14%)</title><rect x="602.9" y="371.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="605.9" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="602.9" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="605.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.06%)</title><rect x="603.3" y="355.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.3" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="603.3" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="606.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="603.6" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.6" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="603.6" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="606.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.06%)</title><rect x="603.9" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="604.6" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.6" y="398.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.03%)</title><rect x="604.9" y="387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="607.9" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.11%)</title><rect x="605.2" y="387.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="608.2" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.06%)</title><rect x="605.9" y="371.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="608.9" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.21 (1 samples, 0.03%)</title><rect x="606.5" y="419.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="609.5" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="606.9" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.9" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.03%)</title><rect x="607.2" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="610.2" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.06%)</title><rect x="607.5" y="451.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.5" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.14%)</title><rect x="608.2" y="451.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="611.2" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.03%)</title><rect x="608.8" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="611.8" y="446.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.03%)</title><rect x="608.8" y="419.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="611.8" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.03%)</title><rect x="609.1" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="612.1" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (1 samples, 0.03%)</title><rect x="609.5" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="612.5" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (1 samples, 0.03%)</title><rect x="609.5" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="612.5" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="609.8" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.8" y="494.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.06%)</title><rect x="610.1" y="515.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="613.1" y="526.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.06%)</title><rect x="610.1" y="499.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="613.1" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="610.4" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.4" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.06%)</title><rect x="610.8" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="613.8" y="542.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.06%)</title><rect x="611.4" y="531.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="614.4" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.11%)</title><rect x="612.1" y="531.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="615.1" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="613.1" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="616.1" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="613.1" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="616.1" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="613.4" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="616.4" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="613.7" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="616.7" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.08%)</title><rect x="614.0" y="579.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="617.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.08%)</title><rect x="614.0" y="563.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="617.0" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.06%)</title><rect x="614.4" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="617.4" y="558.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="615.0" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="618.0" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.06%)</title><rect x="615.3" y="595.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="618.3" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="616.0" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="619.0" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.11%)</title><rect x="616.3" y="627.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="619.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.11%)</title><rect x="616.3" y="611.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="619.3" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.11%)</title><rect x="616.3" y="595.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="619.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.08%)</title><rect x="616.7" y="579.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="619.7" y="590.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="617.3" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="620.3" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="617.3" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="620.3" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.11%)</title><rect x="617.6" y="643.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="620.6" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="618.0" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="621.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="618.0" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="621.0" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="618.0" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="621.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="618.6" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.6" y="638.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="618.9" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="621.9" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="619.3" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="622.3" y="670.0"></text>
</g>
<g>
<title>send@plt (3 samples, 0.08%)</title><rect x="619.6" y="723.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="622.6" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.03%)</title><rect x="620.6" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (8 samples, 0.22%)</title><rect x="620.9" y="787.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.primaryFor (8 samples, 0.22%)</title><rect x="620.9" y="771.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (8 samples, 0.22%)</title><rect x="620.9" y="755.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.upsert (808 samples, 22.36%)</title><rect x="623.5" y="787.0" width="263.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.5" y="798.0">ru/mail/polis/service/codearound/Ta..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (787 samples, 21.78%)</title><rect x="623.5" y="771.0" width="257.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.5" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="623.8" y="755.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="626.8" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (785 samples, 21.72%)</title><rect x="624.2" y="755.0" width="256.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.2" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (532 samples, 14.72%)</title><rect x="626.1" y="739.0" width="173.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="629.1" y="750.0">Java_org_rocksdb_Rocks..</text>
</g>
<g>
<title>__malloc (5 samples, 0.14%)</title><rect x="626.8" y="723.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="629.8" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="628.4" y="723.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="631.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.11%)</title><rect x="628.7" y="723.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="631.7" y="734.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (1 samples, 0.03%)</title><rect x="630.0" y="723.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="633.0" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.03%)</title><rect x="630.4" y="723.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="633.4" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="630.7" y="723.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="633.7" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.03%)</title><rect x="631.0" y="723.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="634.0" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="631.3" y="723.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="634.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.06%)</title><rect x="631.7" y="723.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="634.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (513 samples, 14.19%)</title><rect x="632.3" y="723.0" width="167.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="635.3" y="734.0">rocksdb_put_helper(JN..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="633.6" y="707.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="636.6" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="634.0" y="707.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="637.0" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.08%)</title><rect x="634.3" y="707.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="637.3" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.06%)</title><rect x="635.3" y="707.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="638.3" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="635.9" y="707.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="638.9" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="635.9" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="638.9" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.28%)</title><rect x="636.2" y="707.0" width="3.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="639.2" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="636.6" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="639.6" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.08%)</title><rect x="636.9" y="691.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="639.9" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.14%)</title><rect x="637.9" y="691.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="640.9" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.11%)</title><rect x="638.2" y="675.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="641.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (487 samples, 13.48%)</title><rect x="639.5" y="707.0" width="159.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="642.5" y="718.0">rocksdb::DB::Put(roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.08%)</title><rect x="640.2" y="691.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="643.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (482 samples, 13.34%)</title><rect x="641.1" y="691.0" width="157.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="644.1" y="702.0">rocksdb::DBImpl::Put..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (473 samples, 13.09%)</title><rect x="641.5" y="675.0" width="154.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="644.5" y="686.0">rocksdb::DB::Put(roc..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.08%)</title><rect x="641.8" y="659.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="644.8" y="670.0"></text>
</g>
<g>
<title>free@plt (1 samples, 0.03%)</title><rect x="642.8" y="659.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="645.8" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.03%)</title><rect x="643.1" y="659.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="646.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.03%)</title><rect x="643.4" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="646.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (430 samples, 11.90%)</title><rect x="643.8" y="659.0" width="140.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="646.8" y="670.0">rocksdb::DBImpl::W..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.11%)</title><rect x="645.1" y="643.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="648.1" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (5 samples, 0.14%)</title><rect x="646.4" y="643.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="649.4" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="648.0" y="643.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="651.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.11%)</title><rect x="648.6" y="643.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="651.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (3 samples, 0.08%)</title><rect x="650.0" y="643.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="653.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (385 samples, 10.65%)</title><rect x="650.9" y="643.0" width="125.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="653.9" y="654.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="660.7" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="663.7" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.03%)</title><rect x="661.1" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="664.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.14%)</title><rect x="661.4" y="627.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="664.4" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.08%)</title><rect x="663.0" y="627.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="666.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (4 samples, 0.11%)</title><rect x="664.0" y="627.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="667.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.11%)</title><rect x="665.3" y="627.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="668.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.03%)</title><rect x="666.6" y="627.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="669.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.03%)</title><rect x="666.6" y="611.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="669.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.08%)</title><rect x="666.9" y="627.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="669.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) [clone .plt] (1 samples, 0.03%)</title><rect x="667.9" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="670.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (122 samples, 3.38%)</title><rect x="668.2" y="627.0" width="39.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="671.2" y="638.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (3 samples, 0.08%)</title><rect x="669.9" y="611.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="672.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (108 samples, 2.99%)</title><rect x="670.9" y="611.0" width="35.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="673.9" y="622.0">roc..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.03%)</title><rect x="672.2" y="595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="675.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (101 samples, 2.79%)</title><rect x="672.5" y="595.0" width="33.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="675.5" y="606.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (24 samples, 0.66%)</title><rect x="673.8" y="579.0" width="7.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="676.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (3 samples, 0.08%)</title><rect x="681.6" y="579.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="684.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="682.6" y="579.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="685.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (46 samples, 1.27%)</title><rect x="682.9" y="579.0" width="15.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="685.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="685.2" y="563.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="688.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (3 samples, 0.08%)</title><rect x="685.9" y="563.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="688.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() [clone .plt] (1 samples, 0.03%)</title><rect x="686.9" y="563.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="689.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (3 samples, 0.08%)</title><rect x="687.2" y="563.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="690.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (4 samples, 0.11%)</title><rect x="688.2" y="563.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="691.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.06%)</title><rect x="689.5" y="563.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="692.5" y="574.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="689.8" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="692.8" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="689.8" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="692.8" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="689.8" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="692.8" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="689.8" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.8" y="510.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="689.8" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="692.8" y="494.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="689.8" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="689.8" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (3 samples, 0.08%)</title><rect x="690.1" y="563.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="693.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (20 samples, 0.55%)</title><rect x="691.1" y="563.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="694.1" y="574.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.03%)</title><rect x="694.4" y="547.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="697.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.19%)</title><rect x="694.7" y="547.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="697.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="697.0" y="547.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="700.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.03%)</title><rect x="697.3" y="547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="700.3" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="697.6" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="700.6" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="697.6" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="700.6" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="697.6" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="700.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="698.0" y="579.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="701.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (4 samples, 0.11%)</title><rect x="698.3" y="579.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="701.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="699.6" y="579.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="702.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (17 samples, 0.47%)</title><rect x="699.9" y="579.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="702.9" y="590.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="700.9" y="563.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="703.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.08%)</title><rect x="701.2" y="563.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="704.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (5 samples, 0.14%)</title><rect x="702.2" y="563.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="705.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.03%)</title><rect x="703.5" y="547.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="706.5" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="703.5" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="706.5" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="703.5" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="706.5" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="703.5" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="706.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (5 samples, 0.14%)</title><rect x="703.8" y="563.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="706.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.06%)</title><rect x="705.5" y="595.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="708.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (2 samples, 0.06%)</title><rect x="706.1" y="611.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="709.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.03%)</title><rect x="706.8" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="709.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="707.1" y="611.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="710.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.03%)</title><rect x="707.4" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="710.4" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="707.4" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="710.4" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="707.4" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.4" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="707.4" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="710.4" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="707.4" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="710.4" y="558.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="707.4" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="710.4" y="542.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="707.4" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="710.4" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="707.4" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="710.4" y="510.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.03%)</title><rect x="707.7" y="611.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="710.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.03%)</title><rect x="708.1" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="711.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() [clone .plt] (2 samples, 0.06%)</title><rect x="708.4" y="627.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="711.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.08%)</title><rect x="709.1" y="627.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="712.1" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.06%)</title><rect x="709.4" y="611.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="712.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.03%)</title><rect x="710.0" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (2 samples, 0.06%)</title><rect x="710.4" y="627.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="713.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.06%)</title><rect x="711.0" y="627.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="714.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.03%)</title><rect x="711.7" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="714.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.03%)</title><rect x="712.0" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="715.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const [clone .plt] (1 samples, 0.03%)</title><rect x="712.3" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="715.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (179 samples, 4.95%)</title><rect x="712.6" y="627.0" width="58.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="715.6" y="638.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (173 samples, 4.79%)</title><rect x="714.0" y="611.0" width="56.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="717.0" y="622.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.06%)</title><rect x="714.0" y="595.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="717.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.06%)</title><rect x="714.6" y="595.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="717.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) [clone .plt] (1 samples, 0.03%)</title><rect x="715.3" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="718.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.06%)</title><rect x="715.6" y="595.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="718.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.06%)</title><rect x="716.2" y="595.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="719.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (164 samples, 4.54%)</title><rect x="716.9" y="595.0" width="53.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="719.9" y="606.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (155 samples, 4.29%)</title><rect x="718.8" y="579.0" width="50.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="721.8" y="590.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.03%)</title><rect x="718.8" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="721.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (4 samples, 0.11%)</title><rect x="719.2" y="563.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="722.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (3 samples, 0.08%)</title><rect x="720.5" y="563.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="723.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (147 samples, 4.07%)</title><rect x="721.5" y="563.0" width="48.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="724.5" y="574.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (5 samples, 0.14%)</title><rect x="722.8" y="547.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="725.8" y="558.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (2 samples, 0.06%)</title><rect x="724.4" y="547.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="727.4" y="558.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (2 samples, 0.06%)</title><rect x="725.1" y="547.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="728.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (3 samples, 0.08%)</title><rect x="725.7" y="547.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="728.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (3 samples, 0.08%)</title><rect x="726.7" y="547.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="729.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.06%)</title><rect x="727.7" y="547.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="730.7" y="558.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="728.0" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="731.0" y="542.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="728.0" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="731.0" y="526.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="728.0" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="731.0" y="510.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="728.0" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="731.0" y="494.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="728.0" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="731.0" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="728.0" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="731.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (119 samples, 3.29%)</title><rect x="728.3" y="547.0" width="38.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="731.3" y="558.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (10 samples, 0.28%)</title><rect x="730.3" y="531.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="733.3" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="731.6" y="515.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="734.6" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="731.9" y="515.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="734.9" y="526.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="732.2" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.2" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="732.2" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.2" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="732.2" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="735.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.03%)</title><rect x="732.6" y="515.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="735.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.03%)</title><rect x="732.9" y="515.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="735.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.03%)</title><rect x="732.9" y="499.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="735.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.03%)</title><rect x="733.2" y="515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="736.2" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (95 samples, 2.63%)</title><rect x="733.5" y="531.0" width="31.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="736.5" y="542.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (84 samples, 2.32%)</title><rect x="735.2" y="515.0" width="27.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="738.2" y="526.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (30 samples, 0.83%)</title><rect x="748.6" y="499.0" width="9.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="751.6" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="749.2" y="483.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="752.2" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="749.5" y="483.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="752.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (25 samples, 0.69%)</title><rect x="750.2" y="483.0" width="8.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="753.2" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (6 samples, 0.17%)</title><rect x="753.8" y="467.0" width="1.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="756.8" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="755.7" y="467.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="758.7" y="478.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (7 samples, 0.19%)</title><rect x="756.1" y="467.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="759.1" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="758.4" y="499.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="761.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (12 samples, 0.33%)</title><rect x="758.7" y="499.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="761.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (1 samples, 0.03%)</title><rect x="761.3" y="483.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="764.3" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.08%)</title><rect x="761.6" y="483.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="764.6" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="762.6" y="515.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="765.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.08%)</title><rect x="762.9" y="515.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="765.9" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="763.3" y="499.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="766.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.06%)</title><rect x="763.9" y="515.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="766.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.08%)</title><rect x="764.6" y="531.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="767.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() [clone .plt] (1 samples, 0.03%)</title><rect x="765.5" y="531.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="768.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.06%)</title><rect x="765.9" y="531.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="768.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (1 samples, 0.03%)</title><rect x="765.9" y="515.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="768.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.03%)</title><rect x="766.2" y="515.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="769.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.06%)</title><rect x="766.5" y="531.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="769.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.06%)</title><rect x="767.2" y="547.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="770.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() [clone .plt] (1 samples, 0.03%)</title><rect x="767.8" y="547.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="770.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.08%)</title><rect x="768.2" y="547.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="771.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (1 samples, 0.03%)</title><rect x="769.1" y="547.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="772.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="769.5" y="579.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="772.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.06%)</title><rect x="769.8" y="579.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="772.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="770.4" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="773.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.03%)</title><rect x="770.8" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="773.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.03%)</title><rect x="771.1" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="774.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.03%)</title><rect x="771.1" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="774.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="771.1" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="774.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="771.1" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="774.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="771.1" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="774.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.03%)</title><rect x="771.1" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="774.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.03%)</title><rect x="771.1" y="531.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="774.1" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.03%)</title><rect x="771.1" y="515.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="774.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10632146771579166219.so (1 samples, 0.03%)</title><rect x="771.1" y="499.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="774.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.03%)</title><rect x="771.1" y="483.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="774.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.03%)</title><rect x="771.4" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="774.4" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="771.4" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="774.4" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="771.4" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="774.4" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="771.4" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="774.4" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="771.4" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="774.4" y="574.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="771.4" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="774.4" y="558.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="771.4" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="774.4" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="771.4" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="774.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.03%)</title><rect x="771.7" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="774.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.03%)</title><rect x="772.1" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="775.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.03%)</title><rect x="772.4" y="627.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="775.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (2 samples, 0.06%)</title><rect x="772.7" y="627.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="775.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (3 samples, 0.08%)</title><rect x="773.4" y="627.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="776.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.06%)</title><rect x="774.4" y="627.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="777.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.08%)</title><rect x="775.0" y="627.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="778.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (2 samples, 0.06%)</title><rect x="776.0" y="627.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="779.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.03%)</title><rect x="776.6" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="779.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) [clone .plt] (1 samples, 0.03%)</title><rect x="777.0" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="780.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.06%)</title><rect x="777.3" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="780.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.11%)</title><rect x="777.9" y="643.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="780.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.06%)</title><rect x="779.3" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="782.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.06%)</title><rect x="779.9" y="643.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="782.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (4 samples, 0.11%)</title><rect x="780.6" y="643.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="783.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.03%)</title><rect x="781.9" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="784.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.03%)</title><rect x="782.2" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="785.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.06%)</title><rect x="782.5" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="785.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.06%)</title><rect x="783.2" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="786.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) [clone .plt] (1 samples, 0.03%)</title><rect x="783.8" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="786.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.03%)</title><rect x="784.2" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="787.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (4 samples, 0.11%)</title><rect x="784.5" y="659.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="787.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) [clone .plt] (2 samples, 0.06%)</title><rect x="785.8" y="659.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="788.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 0.39%)</title><rect x="786.4" y="659.0" width="4.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="789.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.06%)</title><rect x="786.4" y="643.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="789.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.06%)</title><rect x="787.1" y="643.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="790.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.03%)</title><rect x="787.7" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="790.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.17%)</title><rect x="788.1" y="643.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="791.1" y="654.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.06%)</title><rect x="789.0" y="627.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="792.0" y="638.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.03%)</title><rect x="789.7" y="627.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="792.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.03%)</title><rect x="790.0" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="793.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) [clone .plt] (1 samples, 0.03%)</title><rect x="790.4" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="793.4" y="654.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="790.7" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="793.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.08%)</title><rect x="791.0" y="659.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="794.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="792.0" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="795.0" y="670.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.06%)</title><rect x="792.3" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="795.3" y="670.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) [clone .plt] (1 samples, 0.03%)</title><rect x="793.0" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="796.0" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.06%)</title><rect x="793.3" y="659.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="796.3" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (4 samples, 0.11%)</title><rect x="793.9" y="659.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="796.9" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) [clone .plt] (2 samples, 0.06%)</title><rect x="795.3" y="659.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="798.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="795.9" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="798.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (6 samples, 0.17%)</title><rect x="796.2" y="675.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="799.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="797.9" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="800.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="797.9" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="800.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="797.9" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="800.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="798.2" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="801.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="798.5" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="801.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="798.8" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="801.8" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.06%)</title><rect x="799.2" y="707.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="802.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (227 samples, 6.28%)</title><rect x="799.8" y="739.0" width="74.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="802.8" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="799.8" y="723.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="802.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="799.8" y="707.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="802.8" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="799.8" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="802.8" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="800.1" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="803.1" y="718.0"></text>
</g>
<g>
<title>__GI_write (215 samples, 5.95%)</title><rect x="800.5" y="723.0" width="70.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="803.5" y="734.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (206 samples, 5.70%)</title><rect x="803.4" y="707.0" width="67.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.4" y="718.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="803.4" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (205 samples, 5.67%)</title><rect x="803.7" y="691.0" width="67.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="806.7" y="702.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_write (181 samples, 5.01%)</title><rect x="810.3" y="675.0" width="59.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.3" y="686.0">__x64_..</text>
</g>
<g>
<title>__f_unlock_pos (2 samples, 0.06%)</title><rect x="810.3" y="659.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="813.3" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="810.9" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="813.9" y="670.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="811.3" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="814.3" y="670.0"></text>
</g>
<g>
<title>ksys_write (177 samples, 4.90%)</title><rect x="811.6" y="659.0" width="57.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="814.6" y="670.0">ksys_w..</text>
</g>
<g>
<title>__fdget_pos (11 samples, 0.30%)</title><rect x="812.2" y="643.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.2" y="654.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.28%)</title><rect x="812.6" y="627.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="815.6" y="638.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.17%)</title><rect x="813.9" y="611.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="816.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="815.8" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.8" y="654.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.03%)</title><rect x="816.1" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="819.1" y="654.0"></text>
</g>
<g>
<title>vfs_write (162 samples, 4.48%)</title><rect x="816.5" y="643.0" width="52.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="819.5" y="654.0">vfs_w..</text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.06%)</title><rect x="817.1" y="627.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="820.1" y="638.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.06%)</title><rect x="817.8" y="627.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="820.8" y="638.0"></text>
</g>
<g>
<title>__vfs_write (142 samples, 3.93%)</title><rect x="818.4" y="627.0" width="46.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="821.4" y="638.0">__vf..</text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.06%)</title><rect x="818.4" y="611.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="821.4" y="622.0"></text>
</g>
<g>
<title>new_sync_write (140 samples, 3.87%)</title><rect x="819.1" y="611.0" width="45.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="822.1" y="622.0">new_..</text>
</g>
<g>
<title>ext4_file_write_iter (140 samples, 3.87%)</title><rect x="819.1" y="595.0" width="45.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="822.1" y="606.0">ext4..</text>
</g>
<g>
<title>__generic_file_write_iter (135 samples, 3.74%)</title><rect x="820.4" y="579.0" width="44.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="823.4" y="590.0">__ge..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="821.7" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.7" y="574.0"></text>
</g>
<g>
<title>file_update_time (8 samples, 0.22%)</title><rect x="822.0" y="563.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="825.0" y="574.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.03%)</title><rect x="822.7" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="825.7" y="558.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="823.0" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="826.0" y="558.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="823.0" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="826.0" y="542.0"></text>
</g>
<g>
<title>generic_update_time (4 samples, 0.11%)</title><rect x="823.3" y="547.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="826.3" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.11%)</title><rect x="823.3" y="531.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="826.3" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.11%)</title><rect x="823.3" y="515.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="826.3" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.08%)</title><rect x="823.3" y="499.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="826.3" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.08%)</title><rect x="823.3" y="483.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="826.3" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="823.3" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="826.3" y="478.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="823.7" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="826.7" y="478.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.03%)</title><rect x="824.0" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="827.0" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.03%)</title><rect x="824.3" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="827.3" y="510.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.03%)</title><rect x="824.3" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.3" y="494.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="824.3" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="827.3" y="478.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.03%)</title><rect x="824.3" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.3" y="462.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.03%)</title><rect x="824.3" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="827.3" y="446.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="824.3" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="827.3" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (121 samples, 3.35%)</title><rect x="824.6" y="563.0" width="39.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="827.6" y="574.0">gen..</text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.03%)</title><rect x="825.3" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="828.3" y="558.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.08%)</title><rect x="825.6" y="547.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="828.6" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (36 samples, 1.00%)</title><rect x="826.6" y="547.0" width="11.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="829.6" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (14 samples, 0.39%)</title><rect x="826.9" y="531.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.9" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (14 samples, 0.39%)</title><rect x="826.9" y="515.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="829.9" y="526.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.03%)</title><rect x="827.2" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.2" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.03%)</title><rect x="827.6" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="830.6" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.08%)</title><rect x="827.9" y="499.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="830.9" y="510.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.03%)</title><rect x="828.9" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="831.9" y="510.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.08%)</title><rect x="829.2" y="499.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="832.2" y="510.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.11%)</title><rect x="830.2" y="499.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="833.2" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.03%)</title><rect x="831.2" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="834.2" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="831.5" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.5" y="542.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="831.5" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="834.5" y="526.0"></text>
</g>
<g>
<title>ext4_block_write_begin (5 samples, 0.14%)</title><rect x="831.8" y="531.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="834.8" y="542.0"></text>
</g>
<g>
<title>ext4_nonda_switch (4 samples, 0.11%)</title><rect x="833.5" y="531.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="836.5" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (9 samples, 0.25%)</title><rect x="834.8" y="531.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="837.8" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (9 samples, 0.25%)</title><rect x="834.8" y="515.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="837.8" y="526.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.19%)</title><rect x="835.1" y="499.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="838.1" y="510.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.14%)</title><rect x="835.7" y="483.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="838.7" y="494.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="837.0" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="840.0" y="478.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="837.4" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="840.4" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.03%)</title><rect x="837.7" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.7" y="542.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.03%)</title><rect x="838.0" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="841.0" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (66 samples, 1.83%)</title><rect x="838.4" y="547.0" width="21.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="841.4" y="558.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (10 samples, 0.28%)</title><rect x="838.4" y="531.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="841.4" y="542.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.06%)</title><rect x="838.7" y="515.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="841.7" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (6 samples, 0.17%)</title><rect x="839.3" y="515.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="842.3" y="526.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.06%)</title><rect x="840.3" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="843.3" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.06%)</title><rect x="840.3" y="483.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="843.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="840.6" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="843.6" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="841.0" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="844.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="841.3" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="844.3" y="526.0"></text>
</g>
<g>
<title>generic_write_end (56 samples, 1.55%)</title><rect x="841.6" y="531.0" width="18.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="844.6" y="542.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (1 samples, 0.03%)</title><rect x="841.6" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="844.6" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (53 samples, 1.47%)</title><rect x="841.9" y="515.0" width="17.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="844.9" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (53 samples, 1.47%)</title><rect x="841.9" y="499.0" width="17.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="844.9" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.03%)</title><rect x="842.3" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="845.3" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (51 samples, 1.41%)</title><rect x="842.6" y="483.0" width="16.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="845.6" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.03%)</title><rect x="842.6" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="845.6" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.03%)</title><rect x="842.6" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="845.6" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.08%)</title><rect x="842.9" y="467.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="845.9" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.06%)</title><rect x="843.2" y="451.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="846.2" y="462.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="843.9" y="467.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="846.9" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (46 samples, 1.27%)</title><rect x="844.2" y="467.0" width="15.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="847.2" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.03%)</title><rect x="844.6" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="847.6" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (30 samples, 0.83%)</title><rect x="844.9" y="451.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="847.9" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (28 samples, 0.77%)</title><rect x="845.2" y="435.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="848.2" y="446.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.03%)</title><rect x="849.8" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="852.8" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.03%)</title><rect x="849.8" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="850.1" y="419.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="853.1" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (10 samples, 0.28%)</title><rect x="850.4" y="419.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="853.4" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (9 samples, 0.25%)</title><rect x="850.8" y="403.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="853.8" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.08%)</title><rect x="851.1" y="387.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="854.1" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (5 samples, 0.14%)</title><rect x="852.1" y="387.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="855.1" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.11%)</title><rect x="852.4" y="371.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="855.4" y="382.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.03%)</title><rect x="853.7" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="856.7" y="430.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.03%)</title><rect x="853.7" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="856.7" y="414.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.03%)</title><rect x="854.0" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="857.0" y="430.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.03%)</title><rect x="854.0" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="857.0" y="414.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.03%)</title><rect x="854.3" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="857.3" y="446.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (14 samples, 0.39%)</title><rect x="854.7" y="451.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="857.7" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (9 samples, 0.25%)</title><rect x="854.7" y="435.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="857.7" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.08%)</title><rect x="855.7" y="419.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="858.7" y="430.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.08%)</title><rect x="855.7" y="403.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="858.7" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.03%)</title><rect x="856.3" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="859.3" y="398.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.08%)</title><rect x="856.6" y="419.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="859.6" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (3 samples, 0.08%)</title><rect x="857.6" y="435.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="860.6" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.03%)</title><rect x="857.9" y="419.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="860.9" y="430.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (1 samples, 0.03%)</title><rect x="858.3" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="861.3" y="430.0"></text>
</g>
<g>
<title>ext4_inode_table (2 samples, 0.06%)</title><rect x="858.6" y="435.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="861.6" y="446.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.06%)</title><rect x="859.2" y="515.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.2" y="526.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.06%)</title><rect x="859.2" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.2" y="510.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.03%)</title><rect x="859.6" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.6" y="494.0"></text>
</g>
<g>
<title>__set_page_dirty (1 samples, 0.03%)</title><rect x="859.6" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="862.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="859.6" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="862.6" y="462.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.03%)</title><rect x="859.9" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="862.9" y="558.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (7 samples, 0.19%)</title><rect x="860.2" y="547.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="863.2" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="861.5" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="864.5" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.06%)</title><rect x="861.9" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="864.9" y="542.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (5 samples, 0.14%)</title><rect x="862.5" y="547.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="865.5" y="558.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.03%)</title><rect x="864.1" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="867.1" y="574.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.03%)</title><rect x="864.5" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="867.5" y="590.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.03%)</title><rect x="864.5" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="867.5" y="574.0"></text>
</g>
<g>
<title>generic_write_check_limits (1 samples, 0.03%)</title><rect x="864.5" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="867.5" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="864.8" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="867.8" y="638.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.06%)</title><rect x="865.1" y="627.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="868.1" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (11 samples, 0.30%)</title><rect x="865.8" y="627.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="868.8" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="866.8" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="869.8" y="622.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.19%)</title><rect x="867.1" y="611.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="870.1" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.06%)</title><rect x="867.4" y="595.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="870.4" y="606.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.06%)</title><rect x="867.4" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="870.4" y="590.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.11%)</title><rect x="868.1" y="595.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="871.1" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="869.4" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="872.4" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="869.4" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.4" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="869.4" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.4" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="869.4" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="872.4" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="869.4" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="872.4" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="869.4" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="872.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="869.4" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="872.4" y="590.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 0.08%)</title><rect x="869.7" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="872.7" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="870.7" y="723.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="873.7" y="734.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.08%)</title><rect x="871.0" y="723.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="874.0" y="734.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="872.0" y="723.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="875.0" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.06%)</title><rect x="872.3" y="723.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="875.3" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (3 samples, 0.08%)</title><rect x="873.0" y="723.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="876.0" y="734.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.11%)</title><rect x="873.9" y="739.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="876.9" y="750.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.19%)</title><rect x="875.2" y="739.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="878.2" y="750.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.03%)</title><rect x="877.5" y="739.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="880.5" y="750.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.06%)</title><rect x="877.9" y="739.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="880.9" y="750.0"></text>
</g>
<g>
<title>memcpy@plt (3 samples, 0.08%)</title><rect x="878.5" y="739.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="881.5" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.03%)</title><rect x="879.5" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="882.5" y="750.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.06%)</title><rect x="879.8" y="739.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="882.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (2 samples, 0.06%)</title><rect x="880.5" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="883.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.06%)</title><rect x="880.5" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="880.5" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="883.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="880.5" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="880.5" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="880.8" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (19 samples, 0.53%)</title><rect x="881.1" y="771.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (18 samples, 0.50%)</title><rect x="881.4" y="755.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (6 samples, 0.17%)</title><rect x="881.4" y="739.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.17%)</title><rect x="881.4" y="723.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.17%)</title><rect x="881.4" y="707.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.06%)</title><rect x="882.1" y="691.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="882.8" y="691.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="885.8" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.33%)</title><rect x="883.4" y="739.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.33%)</title><rect x="883.4" y="723.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="886.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.33%)</title><rect x="883.4" y="707.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.19%)</title><rect x="884.4" y="691.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="886.7" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.7" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (919 samples, 25.43%)</title><rect x="887.3" y="915.0" width="300.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.3" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="888.3" y="899.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="891.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="888.3" y="883.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="891.3" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.08%)</title><rect x="888.3" y="867.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="891.3" y="878.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.17%)</title><rect x="889.3" y="899.0" width="1.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="892.3" y="910.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.03%)</title><rect x="891.2" y="899.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="894.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.11%)</title><rect x="891.6" y="899.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (343 samples, 9.49%)</title><rect x="892.9" y="899.0" width="112.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.9" y="910.0">one/nio/net/N..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (328 samples, 9.08%)</title><rect x="897.8" y="883.0" width="107.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.8" y="894.0">one/nio/net/N..</text>
</g>
<g>
<title>JVM_IHashCode (111 samples, 3.07%)</title><rect x="903.3" y="867.0" width="36.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="906.3" y="878.0">JVM..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.06%)</title><rect x="903.3" y="851.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="906.3" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="904.0" y="851.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="907.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (108 samples, 2.99%)</title><rect x="904.3" y="851.0" width="35.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="907.3" y="862.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 2.88%)</title><rect x="905.6" y="835.0" width="34.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="908.6" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (104 samples, 2.88%)</title><rect x="905.6" y="819.0" width="34.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="908.6" y="830.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (94 samples, 2.60%)</title><rect x="908.9" y="803.0" width="30.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="911.9" y="814.0">__..</text>
</g>
<g>
<title>do_epoll_wait (94 samples, 2.60%)</title><rect x="908.9" y="787.0" width="30.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="911.9" y="798.0">do..</text>
</g>
<g>
<title>__fdget (6 samples, 0.17%)</title><rect x="910.8" y="771.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="913.8" y="782.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.17%)</title><rect x="910.8" y="755.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="913.8" y="766.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.11%)</title><rect x="911.5" y="739.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="914.5" y="750.0"></text>
</g>
<g>
<title>ep_poll (80 samples, 2.21%)</title><rect x="912.8" y="771.0" width="26.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="915.8" y="782.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (64 samples, 1.77%)</title><rect x="917.0" y="755.0" width="20.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="920.0" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (47 samples, 1.30%)</title><rect x="921.0" y="739.0" width="15.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="924.0" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (37 samples, 1.02%)</title><rect x="921.9" y="723.0" width="12.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.9" y="734.0"></text>
</g>
<g>
<title>sock_poll (26 samples, 0.72%)</title><rect x="924.9" y="707.0" width="8.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.9" y="718.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.30%)</title><rect x="929.1" y="691.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="932.1" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.06%)</title><rect x="932.7" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="935.7" y="702.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.06%)</title><rect x="933.4" y="707.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="936.4" y="718.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.19%)</title><rect x="934.0" y="723.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="937.0" y="734.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.14%)</title><rect x="936.3" y="739.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.3" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="937.9" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="940.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.06%)</title><rect x="938.3" y="755.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="941.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.06%)</title><rect x="938.3" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="941.3" y="750.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.06%)</title><rect x="938.3" y="723.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="941.3" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.06%)</title><rect x="938.3" y="707.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="941.3" y="718.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="938.9" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.9" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="939.2" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="942.2" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (9 samples, 0.25%)</title><rect x="939.6" y="867.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="942.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (172 samples, 4.76%)</title><rect x="942.5" y="867.0" width="56.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="945.5" y="878.0">[unkno..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="942.5" y="851.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="945.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="942.5" y="835.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="945.5" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="942.5" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="945.5" y="830.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="942.8" y="819.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="945.8" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.06%)</title><rect x="943.5" y="851.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="946.5" y="862.0"></text>
</g>
<g>
<title>epoll_wait (167 samples, 4.62%)</title><rect x="944.1" y="851.0" width="54.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="947.1" y="862.0">epoll..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (164 samples, 4.54%)</title><rect x="945.1" y="835.0" width="53.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="948.1" y="846.0">entry..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="945.1" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="948.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (163 samples, 4.51%)</title><rect x="945.4" y="819.0" width="53.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="948.4" y="830.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (117 samples, 3.24%)</title><rect x="960.1" y="803.0" width="38.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="963.1" y="814.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (117 samples, 3.24%)</title><rect x="960.1" y="787.0" width="38.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="963.1" y="798.0">do_..</text>
</g>
<g>
<title>__fdget (10 samples, 0.28%)</title><rect x="960.1" y="771.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="963.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.28%)</title><rect x="960.1" y="755.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="963.1" y="766.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.22%)</title><rect x="960.8" y="739.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.8" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="963.1" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="966.1" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="963.1" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="966.1" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="963.1" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="966.1" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="963.1" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="966.1" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="963.1" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.1" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="963.1" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="966.1" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="963.1" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="966.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="963.4" y="771.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.4" y="782.0"></text>
</g>
<g>
<title>ep_poll (104 samples, 2.88%)</title><rect x="964.1" y="771.0" width="33.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="967.1" y="782.0">ep..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (86 samples, 2.38%)</title><rect x="967.6" y="755.0" width="28.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="970.6" y="766.0">ep..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="972.9" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="975.9" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (61 samples, 1.69%)</title><rect x="973.2" y="739.0" width="19.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.2" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (51 samples, 1.41%)</title><rect x="975.5" y="723.0" width="16.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="978.5" y="734.0"></text>
</g>
<g>
<title>sock_poll (35 samples, 0.97%)</title><rect x="980.1" y="707.0" width="11.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="983.1" y="718.0"></text>
</g>
<g>
<title>tcp_poll (16 samples, 0.44%)</title><rect x="985.9" y="691.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="988.9" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="991.2" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="994.2" y="702.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.06%)</title><rect x="991.5" y="707.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="994.5" y="718.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.08%)</title><rect x="992.1" y="723.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="995.1" y="734.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.22%)</title><rect x="993.1" y="739.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="996.1" y="750.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="995.1" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="998.1" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="995.4" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="998.4" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="995.7" y="755.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.7" y="766.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="996.1" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.1" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="996.4" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="999.4" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.08%)</title><rect x="996.7" y="755.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="999.7" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.08%)</title><rect x="996.7" y="739.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="999.7" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="996.7" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="999.7" y="734.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.06%)</title><rect x="997.0" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.0" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="997.4" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.4" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="997.7" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.7" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.03%)</title><rect x="998.0" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1001.0" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.03%)</title><rect x="998.3" y="803.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1001.3" y="814.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="998.7" y="867.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1001.7" y="878.0"></text>
</g>
<g>
<title>epoll_wait (17 samples, 0.47%)</title><rect x="999.0" y="867.0" width="5.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1002.0" y="878.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="1004.5" y="867.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1007.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (553 samples, 15.30%)</title><rect x="1004.9" y="899.0" width="180.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.9" y="910.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="1006.2" y="883.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.2" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.08%)</title><rect x="1006.2" y="867.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1009.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.06%)</title><rect x="1006.2" y="851.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1009.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.06%)</title><rect x="1006.2" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1009.2" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.03%)</title><rect x="1006.8" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1009.8" y="862.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.03%)</title><rect x="1006.8" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1009.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (546 samples, 15.11%)</title><rect x="1007.2" y="883.0" width="178.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.2" y="894.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (352 samples, 9.74%)</title><rect x="1007.5" y="867.0" width="114.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.5" y="878.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4 samples, 0.11%)</title><rect x="1011.7" y="851.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.7" y="862.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.22%)</title><rect x="1013.0" y="851.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1016.0" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.08%)</title><rect x="1015.6" y="851.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1018.6" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="1016.6" y="851.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1019.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (258 samples, 7.14%)</title><rect x="1017.3" y="851.0" width="84.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.3" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (258 samples, 7.14%)</title><rect x="1017.3" y="835.0" width="84.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.3" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (242 samples, 6.70%)</title><rect x="1017.6" y="819.0" width="79.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.6" y="830.0">RequestHa..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.06%)</title><rect x="1017.9" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.06%)</title><rect x="1017.9" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.06%)</title><rect x="1017.9" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.06%)</title><rect x="1017.9" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.06%)</title><rect x="1017.9" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1020.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (22 samples, 0.61%)</title><rect x="1018.6" y="803.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1021.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (20 samples, 0.55%)</title><rect x="1019.2" y="787.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1022.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1023.8" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1026.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1023.8" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.11%)</title><rect x="1024.1" y="771.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.11%)</title><rect x="1024.1" y="755.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1027.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.08%)</title><rect x="1024.5" y="739.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="1025.4" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1028.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1025.4" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1025.4" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1025.4" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.entity (217 samples, 6.00%)</title><rect x="1025.8" y="803.0" width="70.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1028.8" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.19%)</title><rect x="1029.0" y="787.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (7 samples, 0.19%)</title><rect x="1029.0" y="771.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.17%)</title><rect x="1029.4" y="755.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.08%)</title><rect x="1030.3" y="739.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.03%)</title><rect x="1031.3" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.08%)</title><rect x="1031.6" y="787.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.08%)</title><rect x="1031.6" y="771.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1034.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$66/198562544.get$Lambda (3 samples, 0.08%)</title><rect x="1031.6" y="755.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1034.6" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1031.6" y="739.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1034.6" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1031.6" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1034.6" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1031.6" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1034.6" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1031.6" y="691.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1034.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1031.6" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1034.6" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.03%)</title><rect x="1031.6" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1034.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$66/198562544.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1032.0" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.runAsyncHandler (176 samples, 4.87%)</title><rect x="1032.6" y="787.0" width="57.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.6" y="798.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.08%)</title><rect x="1032.6" y="771.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1035.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.08%)</title><rect x="1032.6" y="755.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1035.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.get$Lambda (3 samples, 0.08%)</title><rect x="1032.6" y="739.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$67/267016018.&lt;init&gt; (3 samples, 0.08%)</title><rect x="1032.6" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (173 samples, 4.79%)</title><rect x="1033.6" y="771.0" width="56.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.6" y="782.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (173 samples, 4.79%)</title><rect x="1033.6" y="755.0" width="56.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.6" y="766.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (10 samples, 0.28%)</title><rect x="1033.6" y="739.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (10 samples, 0.28%)</title><rect x="1033.6" y="723.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1036.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (10 samples, 0.28%)</title><rect x="1033.6" y="707.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (10 samples, 0.28%)</title><rect x="1033.6" y="691.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.03%)</title><rect x="1036.5" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="1036.9" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="1036.9" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="1036.9" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="1036.9" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="1036.9" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="1036.9" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.9" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="1036.9" y="643.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1039.9" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="1036.9" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1039.9" y="638.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1036.9" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1039.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (162 samples, 4.48%)</title><rect x="1037.2" y="739.0" width="52.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.2" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (162 samples, 4.48%)</title><rect x="1037.2" y="723.0" width="52.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1040.2" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (162 samples, 4.48%)</title><rect x="1037.2" y="707.0" width="52.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.2" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (162 samples, 4.48%)</title><rect x="1037.2" y="691.0" width="52.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.2" y="702.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (161 samples, 4.45%)</title><rect x="1037.5" y="675.0" width="52.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.5" y="686.0">jdk/i..</text>
</g>
<g>
<title>Parker::unpark() (3 samples, 0.08%)</title><rect x="1037.8" y="659.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1040.8" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1038.8" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1041.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.06%)</title><rect x="1039.2" y="659.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1042.2" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.06%)</title><rect x="1039.8" y="659.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1042.8" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.08%)</title><rect x="1040.5" y="659.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1043.5" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (42 samples, 1.16%)</title><rect x="1041.4" y="659.0" width="13.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1044.4" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="1044.1" y="643.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.1" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.03%)</title><rect x="1044.7" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.7" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.08%)</title><rect x="1045.0" y="643.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1048.0" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.22%)</title><rect x="1046.0" y="643.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1049.0" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.06%)</title><rect x="1048.6" y="643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1051.6" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (5 samples, 0.14%)</title><rect x="1049.3" y="643.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1052.3" y="654.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.06%)</title><rect x="1050.9" y="643.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1053.9" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (9 samples, 0.25%)</title><rect x="1051.6" y="643.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1054.6" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="1054.5" y="643.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1057.5" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (101 samples, 2.79%)</title><rect x="1055.2" y="659.0" width="32.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1058.2" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 2.41%)</title><rect x="1059.7" y="643.0" width="28.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1062.7" y="654.0">en..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1059.7" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1062.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (86 samples, 2.38%)</title><rect x="1060.0" y="627.0" width="28.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1063.0" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (72 samples, 1.99%)</title><rect x="1064.3" y="611.0" width="23.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1067.3" y="622.0">_..</text>
</g>
<g>
<title>do_futex (71 samples, 1.96%)</title><rect x="1064.6" y="595.0" width="23.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1067.6" y="606.0">d..</text>
</g>
<g>
<title>futex_wake (70 samples, 1.94%)</title><rect x="1064.6" y="579.0" width="22.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1067.6" y="590.0">f..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.06%)</title><rect x="1065.9" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1068.9" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.11%)</title><rect x="1066.6" y="563.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1069.6" y="574.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.03%)</title><rect x="1067.6" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1070.6" y="558.0"></text>
</g>
<g>
<title>wake_up_q (60 samples, 1.66%)</title><rect x="1067.9" y="563.0" width="19.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.9" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (59 samples, 1.63%)</title><rect x="1068.2" y="547.0" width="19.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="1068.2" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1071.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (58 samples, 1.60%)</title><rect x="1068.5" y="531.0" width="19.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.5" y="542.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="1087.5" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.5" y="590.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1087.8" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1090.8" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.08%)</title><rect x="1088.1" y="659.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1091.1" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="1089.1" y="659.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1092.1" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="1089.4" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1092.4" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="1089.8" y="659.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1092.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (20 samples, 0.55%)</title><rect x="1090.1" y="787.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.42%)</title><rect x="1091.7" y="771.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 0.42%)</title><rect x="1091.7" y="755.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.22%)</title><rect x="1093.7" y="739.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.22%)</title><rect x="1093.7" y="723.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.22%)</title><rect x="1093.7" y="707.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1094.3" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.3" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="1094.3" y="675.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1097.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="1095.0" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1095.3" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.3" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="1095.3" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1095.3" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1098.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="1095.6" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1098.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.06%)</title><rect x="1095.6" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.6" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="1096.0" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.0" y="670.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1096.3" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1099.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (15 samples, 0.42%)</title><rect x="1096.6" y="819.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 0.42%)</title><rect x="1096.6" y="803.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1099.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.14%)</title><rect x="1096.6" y="787.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.28%)</title><rect x="1098.3" y="787.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (10 samples, 0.28%)</title><rect x="1098.3" y="771.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (10 samples, 0.28%)</title><rect x="1098.3" y="755.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 0.53%)</title><rect x="1101.5" y="851.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.5" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1102.5" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1105.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1102.5" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.5" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1102.5" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.5" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1102.5" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.5" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1102.5" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.5" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1102.5" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1105.5" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="1102.5" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.5" y="750.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="1102.5" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.5" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="1102.5" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.5" y="718.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="1102.5" y="691.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1105.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.11%)</title><rect x="1102.8" y="835.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1105.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="1102.8" y="819.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1105.8" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.06%)</title><rect x="1102.8" y="803.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1105.8" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1102.8" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1105.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1102.8" y="771.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.8" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1102.8" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1105.8" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="1103.1" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1106.1" y="798.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="1103.1" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1106.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="1103.5" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="1103.5" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="1103.5" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.22%)</title><rect x="1104.1" y="835.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.19%)</title><rect x="1104.5" y="819.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1107.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.08%)</title><rect x="1106.7" y="835.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.28%)</title><rect x="1107.7" y="851.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1110.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.25%)</title><rect x="1108.0" y="835.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.25%)</title><rect x="1108.0" y="819.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (35 samples, 0.97%)</title><rect x="1111.0" y="851.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.50%)</title><rect x="1116.5" y="835.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.5" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.06%)</title><rect x="1121.4" y="819.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.4" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.06%)</title><rect x="1121.4" y="803.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.4" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.06%)</title><rect x="1121.4" y="787.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.4" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="1121.4" y="771.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1124.4" y="782.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="1121.4" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.4" y="766.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="1121.4" y="739.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.4" y="750.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="1121.8" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1122.1" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1122.1" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="1122.1" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.1" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1122.1" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1125.1" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1122.1" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.1" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1122.1" y="739.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1125.1" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1122.1" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.1" y="734.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="1122.1" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1125.1" y="718.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.03%)</title><rect x="1122.1" y="691.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1125.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.06%)</title><rect x="1122.4" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (191 samples, 5.29%)</title><rect x="1123.1" y="867.0" width="62.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.1" y="878.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (190 samples, 5.26%)</title><rect x="1123.4" y="851.0" width="62.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.4" y="862.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (43 samples, 1.19%)</title><rect x="1127.0" y="835.0" width="14.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1130.0" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.08%)</title><rect x="1128.9" y="819.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.9" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="1129.9" y="819.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1132.9" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.08%)</title><rect x="1130.2" y="819.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.2" y="830.0"></text>
</g>
<g>
<title>__memmove_ssse3 (13 samples, 0.36%)</title><rect x="1131.2" y="819.0" width="4.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1134.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.42%)</title><rect x="1135.5" y="819.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1138.5" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="1136.1" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.11%)</title><rect x="1136.5" y="803.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.5" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.22%)</title><rect x="1137.8" y="803.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1140.8" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.11%)</title><rect x="1139.1" y="787.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.1" y="798.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.03%)</title><rect x="1140.4" y="819.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1143.4" y="830.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="1140.7" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.7" y="830.0"></text>
</g>
<g>
<title>__GI___recv (131 samples, 3.62%)</title><rect x="1141.0" y="835.0" width="42.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1144.0" y="846.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (121 samples, 3.35%)</title><rect x="1144.3" y="819.0" width="39.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1147.3" y="830.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.08%)</title><rect x="1144.3" y="803.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1147.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (118 samples, 3.27%)</title><rect x="1145.3" y="803.0" width="38.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1148.3" y="814.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="1150.8" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1153.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (100 samples, 2.77%)</title><rect x="1151.1" y="787.0" width="32.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1154.1" y="798.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (97 samples, 2.68%)</title><rect x="1151.1" y="771.0" width="31.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1154.1" y="782.0">__..</text>
</g>
<g>
<title>__fdget (2 samples, 0.06%)</title><rect x="1152.1" y="755.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1155.1" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1152.8" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1155.8" y="766.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.08%)</title><rect x="1153.1" y="755.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.1" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (79 samples, 2.19%)</title><rect x="1154.1" y="755.0" width="25.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.1" y="766.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="1154.4" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1157.4" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (67 samples, 1.85%)</title><rect x="1154.7" y="739.0" width="21.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1157.7" y="750.0">i..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1155.4" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1158.4" y="734.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.06%)</title><rect x="1155.7" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1158.7" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="1156.4" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1159.4" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="1156.7" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1159.7" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (60 samples, 1.66%)</title><rect x="1157.0" y="723.0" width="19.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.0" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.11%)</title><rect x="1162.2" y="707.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1165.2" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1162.2" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.2" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.06%)</title><rect x="1162.6" y="691.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1165.6" y="702.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="1162.9" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1165.9" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1163.2" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1166.2" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1163.6" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1166.6" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="1163.9" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1166.9" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1164.2" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1167.2" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1164.2" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1167.2" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (18 samples, 0.50%)</title><rect x="1164.5" y="707.0" width="5.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1167.5" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (17 samples, 0.47%)</title><rect x="1164.5" y="691.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1167.5" y="702.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="1164.9" y="675.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1167.9" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.39%)</title><rect x="1165.5" y="675.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1168.5" y="686.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.22%)</title><rect x="1165.5" y="659.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1168.5" y="670.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="1165.8" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1168.8" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.17%)</title><rect x="1166.2" y="643.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1169.2" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="1168.1" y="659.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1171.1" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.06%)</title><rect x="1168.8" y="659.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.8" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.06%)</title><rect x="1168.8" y="643.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.8" y="654.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.06%)</title><rect x="1169.4" y="659.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1172.4" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="1170.1" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1173.1" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.22%)</title><rect x="1170.4" y="707.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1173.4" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (10 samples, 0.28%)</title><rect x="1173.0" y="707.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.0" y="718.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.08%)</title><rect x="1173.3" y="691.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.3" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.17%)</title><rect x="1174.3" y="691.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1177.3" y="702.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.14%)</title><rect x="1174.3" y="675.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1177.3" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1176.0" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1179.0" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="1176.3" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1179.3" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (9 samples, 0.25%)</title><rect x="1176.6" y="739.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1179.6" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="1176.9" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.9" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.19%)</title><rect x="1177.3" y="723.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1180.3" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.06%)</title><rect x="1177.3" y="707.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1180.3" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.14%)</title><rect x="1177.9" y="707.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.9" y="718.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="1178.2" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.2" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.08%)</title><rect x="1178.6" y="691.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1181.6" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.03%)</title><rect x="1179.6" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.6" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.25%)</title><rect x="1179.9" y="755.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.9" y="766.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.19%)</title><rect x="1180.2" y="739.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.2" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1180.2" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1183.2" y="734.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.17%)</title><rect x="1180.5" y="723.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1183.5" y="734.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.17%)</title><rect x="1180.5" y="707.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.5" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1182.5" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1185.5" y="750.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1182.8" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.8" y="782.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.06%)</title><rect x="1183.1" y="771.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1186.1" y="782.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="1183.8" y="835.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1186.8" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.11%)</title><rect x="1184.1" y="835.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1187.1" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.17%)</title><rect x="1185.4" y="899.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.4" y="910.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="1185.4" y="883.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1188.4" y="894.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.11%)</title><rect x="1186.1" y="883.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1189.1" y="894.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.08%)</title><rect x="1186.4" y="867.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1189.4" y="878.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.22%)</title><rect x="1187.4" y="915.0" width="2.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.22%)</title><rect x="1187.4" y="899.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1190.4" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (8 samples, 0.22%)</title><rect x="1187.4" y="883.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.11%)</title><rect x="1187.4" y="867.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.4" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.08%)</title><rect x="1187.4" y="851.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.4" y="862.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="1187.4" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="1187.4" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.4" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="1187.4" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.4" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.03%)</title><rect x="1187.4" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.4" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.03%)</title><rect x="1187.4" y="771.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.03%)</title><rect x="1187.4" y="755.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="1187.4" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1187.4" y="723.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.06%)</title><rect x="1187.7" y="835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="1187.7" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.03%)</title><rect x="1188.0" y="819.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.0" y="830.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.03%)</title><rect x="1188.4" y="851.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1188.4" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1188.4" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.03%)</title><rect x="1188.7" y="867.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.03%)</title><rect x="1188.7" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.7" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.03%)</title><rect x="1188.7" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.03%)</title><rect x="1188.7" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="830.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.03%)</title><rect x="1188.7" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="1188.7" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>G1CollectionSet::finalize_old_part(double) (1 samples, 0.03%)</title><rect x="1188.7" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>void QuickSort::inner_sort&lt;true, unsigned int, int (*)(unsigned int, unsigned int)&gt;(unsigned int*, unsigned long, int (*)(unsigned int, unsigned int)) (1 samples, 0.03%)</title><rect x="1188.7" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="766.0"></text>
</g>
<g>
<title>void QuickSort::inner_sort&lt;true, unsigned int, int (*)(unsigned int, unsigned int)&gt;(unsigned int*, unsigned long, int (*)(unsigned int, unsigned int)) (1 samples, 0.03%)</title><rect x="1188.7" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.08%)</title><rect x="1189.0" y="867.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.0" y="878.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.03%)</title><rect x="1189.0" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="862.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.03%)</title><rect x="1189.0" y="835.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.06%)</title><rect x="1189.3" y="851.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.3" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.06%)</title><rect x="1189.3" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.3" y="846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.06%)</title><rect x="1189.3" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.3" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="1189.3" y="803.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1192.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1189.3" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1189.3" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.3" y="782.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="1189.7" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.7" y="814.0"></text>
</g>
</g>
</svg>
