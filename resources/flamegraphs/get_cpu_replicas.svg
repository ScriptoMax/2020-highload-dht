<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Replication control | CPU</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (5,311 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.04%)</title><rect x="10.0" y="931.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="10.0" y="915.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.04%)</title><rect x="10.0" y="899.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="10.0" y="883.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="10.0" y="867.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="10.0" y="851.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,294 samples, 99.68%)</title><rect x="10.9" y="931.0" width="1176.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.9" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (13 samples, 0.24%)</title><rect x="11.1" y="915.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (13 samples, 0.24%)</title><rect x="11.1" y="899.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.11%)</title><rect x="12.4" y="883.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (3 samples, 0.06%)</title><rect x="14.0" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (217 samples, 4.09%)</title><rect x="14.7" y="915.0" width="48.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.7" y="926.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.04%)</title><rect x="16.0" y="899.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.04%)</title><rect x="16.0" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (209 samples, 3.94%)</title><rect x="16.4" y="899.0" width="46.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.4" y="910.0">one/..</text>
</g>
<g>
<title>JVM_IHashCode (91 samples, 1.71%)</title><rect x="18.0" y="883.0" width="20.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="21.0" y="894.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="18.0" y="867.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="21.0" y="878.0"></text>
</g>
<g>
<title>epoll_wait (89 samples, 1.68%)</title><rect x="18.4" y="867.0" width="19.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="21.4" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (84 samples, 1.58%)</title><rect x="19.6" y="851.0" width="18.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="22.6" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (84 samples, 1.58%)</title><rect x="19.6" y="835.0" width="18.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="22.6" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (70 samples, 1.32%)</title><rect x="22.7" y="819.0" width="15.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="25.7" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (70 samples, 1.32%)</title><rect x="22.7" y="803.0" width="15.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="25.7" y="814.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.13%)</title><rect x="23.6" y="787.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="26.6" y="798.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.13%)</title><rect x="23.6" y="771.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="26.6" y="782.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.06%)</title><rect x="24.4" y="755.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.4" y="766.0"></text>
</g>
<g>
<title>ep_poll (58 samples, 1.09%)</title><rect x="25.3" y="787.0" width="12.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="28.3" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (47 samples, 0.88%)</title><rect x="26.4" y="771.0" width="10.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="29.4" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (34 samples, 0.64%)</title><rect x="27.1" y="755.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.1" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (28 samples, 0.53%)</title><rect x="27.8" y="739.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="30.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.34%)</title><rect x="29.6" y="723.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.6" y="734.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.17%)</title><rect x="31.3" y="707.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="34.3" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="33.6" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="36.6" y="734.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.06%)</title><rect x="34.0" y="739.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="37.0" y="750.0"></text>
</g>
<g>
<title>mutex_lock (9 samples, 0.17%)</title><rect x="34.7" y="755.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.7" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.09%)</title><rect x="37.1" y="771.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="40.1" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.08%)</title><rect x="37.3" y="755.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="40.3" y="766.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="37.8" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="40.8" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.04%)</title><rect x="37.8" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="40.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.98%)</title><rect x="38.2" y="883.0" width="23.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="41.2" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="38.2" y="867.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="41.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="38.2" y="851.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="41.2" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="38.2" y="835.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="41.2" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (7 samples, 0.13%)</title><rect x="38.7" y="835.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="41.7" y="846.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="40.2" y="835.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="43.2" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="40.2" y="819.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="43.2" y="830.0"></text>
</g>
<g>
<title>epoll_wait (94 samples, 1.77%)</title><rect x="40.7" y="867.0" width="20.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="43.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (90 samples, 1.69%)</title><rect x="41.5" y="851.0" width="20.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="44.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (89 samples, 1.68%)</title><rect x="41.8" y="835.0" width="19.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.8" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (79 samples, 1.49%)</title><rect x="44.0" y="819.0" width="17.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.0" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (79 samples, 1.49%)</title><rect x="44.0" y="803.0" width="17.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="47.0" y="814.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="44.9" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="47.9" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="44.9" y="771.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="47.9" y="782.0"></text>
</g>
<g>
<title>ep_poll (73 samples, 1.37%)</title><rect x="45.3" y="787.0" width="16.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.3" y="798.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (67 samples, 1.26%)</title><rect x="46.2" y="771.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="49.2" y="782.0"></text>
</g>
<g>
<title>ep_send_events_proc (49 samples, 0.92%)</title><rect x="49.5" y="755.0" width="10.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.5" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (39 samples, 0.73%)</title><rect x="50.7" y="739.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="53.7" y="750.0"></text>
</g>
<g>
<title>sock_poll (28 samples, 0.53%)</title><rect x="52.4" y="723.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="55.4" y="734.0"></text>
</g>
<g>
<title>tcp_poll (12 samples, 0.23%)</title><rect x="55.5" y="707.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="58.5" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="58.2" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.2" y="718.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.06%)</title><rect x="58.7" y="723.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.7" y="734.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.09%)</title><rect x="59.3" y="739.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.3" y="750.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.06%)</title><rect x="60.4" y="755.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="63.4" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.04%)</title><rect x="61.1" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="64.1" y="782.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.04%)</title><rect x="62.2" y="883.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="65.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,060 samples, 95.27%)</title><rect x="62.9" y="915.0" width="1124.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.9" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,054 samples, 95.16%)</title><rect x="63.5" y="899.0" width="1122.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.5" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,745 samples, 89.34%)</title><rect x="64.0" y="883.0" width="1054.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.0" y="894.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,628 samples, 87.14%)</title><rect x="68.7" y="867.0" width="1028.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.7" y="878.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,625 samples, 87.08%)</title><rect x="69.3" y="851.0" width="1027.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.3" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4,603 samples, 86.67%)</title><rect x="69.5" y="835.0" width="1022.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.5" y="846.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (28 samples, 0.53%)</title><rect x="69.8" y="819.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.53%)</title><rect x="69.8" y="803.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.24%)</title><rect x="70.0" y="787.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.24%)</title><rect x="70.0" y="771.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.09%)</title><rect x="71.3" y="755.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="74.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="72.4" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.09%)</title><rect x="72.9" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="74.0" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="74.2" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.11%)</title><rect x="74.7" y="787.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.11%)</title><rect x="74.7" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.11%)</title><rect x="74.7" y="755.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.09%)</title><rect x="74.9" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (4,574 samples, 86.12%)</title><rect x="76.0" y="819.0" width="1016.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.0" y="830.0">ru/mail/polis/service/codearound/RepliServiceImpl.entity</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,320 samples, 24.85%)</title><rect x="78.7" y="803.0" width="293.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.7" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.13%)</title><rect x="80.0" y="787.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.13%)</title><rect x="80.0" y="771.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.13%)</title><rect x="80.0" y="755.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.06%)</title><rect x="80.9" y="739.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,296 samples, 24.40%)</title><rect x="81.8" y="787.0" width="287.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.8" y="798.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (31 samples, 0.58%)</title><rect x="82.0" y="771.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="83.8" y="755.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="86.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.08%)</title><rect x="84.4" y="755.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (16 samples, 0.30%)</title><rect x="85.3" y="755.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.06%)</title><rect x="85.3" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.08%)</title><rect x="86.0" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.06%)</title><rect x="86.2" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.04%)</title><rect x="86.4" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.17%)</title><rect x="86.9" y="739.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.17%)</title><rect x="86.9" y="723.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.17%)</title><rect x="86.9" y="707.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.08%)</title><rect x="87.8" y="691.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.04%)</title><rect x="87.8" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.04%)</title><rect x="88.2" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,264 samples, 23.80%)</title><rect x="88.9" y="771.0" width="280.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.9" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,263 samples, 23.78%)</title><rect x="89.1" y="755.0" width="280.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.1" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>gettimeofday (5 samples, 0.09%)</title><rect x="90.0" y="739.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="93.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.04%)</title><rect x="91.1" y="739.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="94.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,249 samples, 23.52%)</title><rect x="91.5" y="739.0" width="277.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.5" y="750.0">one/nio/net/Session$ArrayQueueItem.wr..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,243 samples, 23.40%)</title><rect x="92.9" y="723.0" width="276.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.9" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (35 samples, 0.66%)</title><rect x="97.5" y="707.0" width="7.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="100.5" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (5 samples, 0.09%)</title><rect x="102.4" y="691.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="105.4" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.13%)</title><rect x="103.5" y="691.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="106.5" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="103.8" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="106.8" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.06%)</title><rect x="104.2" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="107.2" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.13%)</title><rect x="105.3" y="707.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="108.3" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.06%)</title><rect x="106.9" y="707.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="109.9" y="718.0"></text>
</g>
<g>
<title>__libc_send (1,172 samples, 22.07%)</title><rect x="107.5" y="707.0" width="260.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="110.5" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,148 samples, 21.62%)</title><rect x="112.9" y="691.0" width="255.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.9" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.04%)</title><rect x="112.9" y="675.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1,145 samples, 21.56%)</title><rect x="113.5" y="675.0" width="254.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="116.5" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,090 samples, 20.52%)</title><rect x="125.1" y="659.0" width="242.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.1" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,086 samples, 20.45%)</title><rect x="125.1" y="643.0" width="241.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.1" y="654.0">__sys_sendto</text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="126.6" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="129.6" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (1,059 samples, 19.94%)</title><rect x="127.5" y="627.0" width="235.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="130.5" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1,040 samples, 19.58%)</title><rect x="128.6" y="611.0" width="231.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.6" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.08%)</title><rect x="129.5" y="595.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="132.5" y="606.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="130.4" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="133.4" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,026 samples, 19.32%)</title><rect x="130.9" y="595.0" width="227.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="133.9" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="131.1" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="134.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="131.8" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.8" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.08%)</title><rect x="132.4" y="579.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="135.4" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="133.3" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="136.3" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.04%)</title><rect x="134.0" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.08%)</title><rect x="134.4" y="579.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="137.4" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="135.3" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,001 samples, 18.85%)</title><rect x="135.8" y="579.0" width="222.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="138.8" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.09%)</title><rect x="140.4" y="563.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="143.4" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.08%)</title><rect x="140.6" y="547.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.6" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.15%)</title><rect x="141.8" y="563.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="144.8" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.13%)</title><rect x="141.8" y="547.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.8" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (3 samples, 0.06%)</title><rect x="143.8" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="146.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (40 samples, 0.75%)</title><rect x="144.4" y="563.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="147.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (29 samples, 0.55%)</title><rect x="145.8" y="547.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="148.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (15 samples, 0.28%)</title><rect x="147.3" y="531.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="150.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.23%)</title><rect x="147.5" y="515.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="150.5" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.08%)</title><rect x="148.9" y="499.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="151.9" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.04%)</title><rect x="149.8" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.8" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.13%)</title><rect x="150.6" y="531.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.6" y="542.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.09%)</title><rect x="152.2" y="547.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="155.2" y="558.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.08%)</title><rect x="153.3" y="563.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="156.3" y="574.0"></text>
</g>
<g>
<title>tcp_push (892 samples, 16.80%)</title><rect x="154.6" y="563.0" width="198.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="157.6" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (886 samples, 16.68%)</title><rect x="155.3" y="547.0" width="196.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="158.3" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="155.8" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="158.8" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.04%)</title><rect x="156.4" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="159.4" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.06%)</title><rect x="156.9" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.9" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (2 samples, 0.04%)</title><rect x="157.5" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="160.5" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (874 samples, 16.46%)</title><rect x="158.0" y="531.0" width="194.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="161.0" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (5 samples, 0.09%)</title><rect x="162.0" y="515.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="165.0" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (808 samples, 15.21%)</title><rect x="163.1" y="515.0" width="179.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="166.1" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (766 samples, 14.42%)</title><rect x="169.5" y="499.0" width="170.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="172.5" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (759 samples, 14.29%)</title><rect x="169.5" y="483.0" width="168.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="172.5" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.04%)</title><rect x="170.4" y="467.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="173.4" y="478.0"></text>
</g>
<g>
<title>ip_local_out (747 samples, 14.07%)</title><rect x="170.9" y="467.0" width="165.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="173.9" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (148 samples, 2.79%)</title><rect x="170.9" y="451.0" width="32.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="173.9" y="462.0">__..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.04%)</title><rect x="172.2" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="175.2" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (7 samples, 0.13%)</title><rect x="172.6" y="435.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="175.6" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.08%)</title><rect x="174.2" y="435.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="177.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (127 samples, 2.39%)</title><rect x="175.1" y="435.0" width="28.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="178.1" y="446.0">nf..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (5 samples, 0.09%)</title><rect x="175.3" y="419.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.3" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (18 samples, 0.34%)</title><rect x="176.4" y="419.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="179.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (18 samples, 0.34%)</title><rect x="176.4" y="403.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="179.4" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.06%)</title><rect x="179.7" y="387.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.7" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (93 samples, 1.75%)</title><rect x="180.4" y="419.0" width="20.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="183.4" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.04%)</title><rect x="181.1" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="184.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (84 samples, 1.58%)</title><rect x="181.7" y="403.0" width="18.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.7" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (27 samples, 0.51%)</title><rect x="182.6" y="387.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="185.6" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.04%)</title><rect x="189.1" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="192.1" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (11 samples, 0.21%)</title><rect x="189.5" y="387.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.5" y="398.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (37 samples, 0.70%)</title><rect x="192.2" y="387.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="195.2" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (2 samples, 0.04%)</title><rect x="194.6" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.6" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (4 samples, 0.08%)</title><rect x="195.3" y="371.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="198.3" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (19 samples, 0.36%)</title><rect x="196.2" y="371.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.2" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (9 samples, 0.17%)</title><rect x="198.4" y="355.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="201.4" y="366.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (3 samples, 0.06%)</title><rect x="200.4" y="403.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="203.4" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="201.1" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (8 samples, 0.15%)</title><rect x="201.5" y="419.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (4 samples, 0.08%)</title><rect x="201.7" y="403.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.7" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.06%)</title><rect x="202.6" y="403.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.6" y="414.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.04%)</title><rect x="202.9" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="205.9" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="203.3" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="206.3" y="446.0"></text>
</g>
<g>
<title>ip_output (590 samples, 11.11%)</title><rect x="204.0" y="451.0" width="131.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.0" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (571 samples, 10.75%)</title><rect x="205.1" y="435.0" width="126.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="208.1" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.06%)</title><rect x="206.0" y="419.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="209.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (561 samples, 10.56%)</title><rect x="206.9" y="419.0" width="124.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.9" y="430.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (478 samples, 9.00%)</title><rect x="209.7" y="403.0" width="106.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="212.7" y="414.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq.part.21 (477 samples, 8.98%)</title><rect x="210.0" y="387.0" width="105.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="213.0" y="398.0">do_softirq.pa..</text>
</g>
<g>
<title>do_softirq_own_stack (471 samples, 8.87%)</title><rect x="211.3" y="371.0" width="104.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.3" y="382.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (471 samples, 8.87%)</title><rect x="211.3" y="355.0" width="104.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="214.3" y="366.0">__softirqent..</text>
</g>
<g>
<title>__kfree_skb_flush (4 samples, 0.08%)</title><rect x="213.3" y="339.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="216.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (457 samples, 8.60%)</title><rect x="214.2" y="339.0" width="101.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="217.2" y="350.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.04%)</title><rect x="215.5" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="218.5" y="334.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.04%)</title><rect x="216.0" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="219.0" y="334.0"></text>
</g>
<g>
<title>process_backlog (447 samples, 8.42%)</title><rect x="216.4" y="323.0" width="99.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="219.4" y="334.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (438 samples, 8.25%)</title><rect x="218.2" y="307.0" width="97.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="221.2" y="318.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (437 samples, 8.23%)</title><rect x="218.2" y="291.0" width="97.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="221.2" y="302.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_core (17 samples, 0.32%)</title><rect x="218.2" y="275.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (418 samples, 7.87%)</title><rect x="222.0" y="275.0" width="92.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.0" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.04%)</title><rect x="222.2" y="259.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="225.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (401 samples, 7.55%)</title><rect x="222.8" y="259.0" width="89.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="225.8" y="270.0">ip_rcv_fin..</text>
</g>
<g>
<title>ip_local_deliver (396 samples, 7.46%)</title><rect x="223.1" y="243.0" width="88.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="226.1" y="254.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (385 samples, 7.25%)</title><rect x="223.3" y="227.0" width="85.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="226.3" y="238.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (384 samples, 7.23%)</title><rect x="223.5" y="211.0" width="85.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="226.5" y="222.0">ip_protoco..</text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.06%)</title><rect x="226.0" y="195.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="229.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (370 samples, 6.97%)</title><rect x="226.6" y="195.0" width="82.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="229.6" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="228.6" y="179.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="231.6" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (14 samples, 0.26%)</title><rect x="229.1" y="179.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="232.1" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.04%)</title><rect x="232.4" y="179.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="235.4" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="232.8" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.08%)</title><rect x="233.5" y="179.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.5" y="190.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.04%)</title><rect x="234.4" y="179.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="237.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (328 samples, 6.18%)</title><rect x="234.8" y="179.0" width="72.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.8" y="190.0">tcp_v4_d..</text>
</g>
<g>
<title>tcp_ack (5 samples, 0.09%)</title><rect x="235.7" y="163.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="238.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (318 samples, 5.99%)</title><rect x="236.8" y="163.0" width="70.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="239.8" y="174.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (15 samples, 0.28%)</title><rect x="238.2" y="147.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="241.2" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (11 samples, 0.21%)</title><rect x="239.1" y="131.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.19%)</title><rect x="239.3" y="115.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="242.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.15%)</title><rect x="239.7" y="99.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="242.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.13%)</title><rect x="240.0" y="83.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="243.0" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.06%)</title><rect x="241.5" y="147.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="244.5" y="158.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.08%)</title><rect x="242.2" y="147.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.2" y="158.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="243.1" y="147.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.1" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.04%)</title><rect x="243.7" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="246.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.04%)</title><rect x="244.2" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="247.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (82 samples, 1.54%)</title><rect x="244.6" y="147.0" width="18.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="247.6" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.04%)</title><rect x="247.7" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.7" y="142.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.04%)</title><rect x="248.4" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="251.4" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (58 samples, 1.09%)</title><rect x="249.1" y="131.0" width="12.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.43%)</title><rect x="252.8" y="115.0" width="5.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.8" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.11%)</title><rect x="253.1" y="99.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="256.1" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.08%)</title><rect x="253.5" y="83.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="256.5" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="254.0" y="67.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.0" y="78.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.28%)</title><rect x="254.6" y="99.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="257.6" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="254.6" y="83.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.23%)</title><rect x="255.1" y="83.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="258.1" y="94.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.15%)</title><rect x="256.0" y="67.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="259.0" y="78.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.15%)</title><rect x="256.0" y="51.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="259.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.06%)</title><rect x="257.1" y="35.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.1" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.04%)</title><rect x="258.0" y="115.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="261.0" y="126.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.06%)</title><rect x="258.6" y="115.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="261.6" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (6 samples, 0.11%)</title><rect x="259.5" y="115.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="262.5" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (5 samples, 0.09%)</title><rect x="260.8" y="115.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="263.8" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.04%)</title><rect x="262.4" y="131.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="265.4" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (12 samples, 0.23%)</title><rect x="262.8" y="147.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="265.8" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (171 samples, 3.22%)</title><rect x="265.7" y="147.0" width="38.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.7" y="158.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (160 samples, 3.01%)</title><rect x="267.7" y="131.0" width="35.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.7" y="142.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (154 samples, 2.90%)</title><rect x="269.1" y="115.0" width="34.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="272.1" y="126.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (152 samples, 2.86%)</title><rect x="269.3" y="99.0" width="33.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.3" y="110.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (151 samples, 2.84%)</title><rect x="269.5" y="83.0" width="33.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.5" y="94.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.04%)</title><rect x="303.3" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.3" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.04%)</title><rect x="303.7" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="306.7" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.11%)</title><rect x="304.2" y="147.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="307.2" y="158.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.08%)</title><rect x="304.4" y="131.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="307.4" y="142.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="304.8" y="115.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="307.8" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.04%)</title><rect x="305.5" y="147.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.5" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.04%)</title><rect x="305.9" y="147.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.9" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="306.4" y="147.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="309.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.04%)</title><rect x="307.7" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="310.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.06%)</title><rect x="308.2" y="179.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="311.2" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.11%)</title><rect x="309.5" y="227.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="312.5" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.06%)</title><rect x="309.9" y="211.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="312.9" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.06%)</title><rect x="309.9" y="195.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="312.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.04%)</title><rect x="311.1" y="243.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="314.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (2 samples, 0.04%)</title><rect x="311.5" y="243.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="314.5" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (4 samples, 0.08%)</title><rect x="312.2" y="259.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="315.2" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.11%)</title><rect x="313.3" y="259.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.3" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.04%)</title><rect x="313.5" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="316.5" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat_ipv4] (3 samples, 0.06%)</title><rect x="313.9" y="243.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="316.9" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="314.2" y="227.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="317.2" y="238.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="314.2" y="211.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="317.2" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="314.8" y="275.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.8" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (69 samples, 1.30%)</title><rect x="315.9" y="403.0" width="15.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="318.9" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (69 samples, 1.30%)</title><rect x="315.9" y="387.0" width="15.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="318.9" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (37 samples, 0.70%)</title><rect x="319.9" y="371.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="322.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (26 samples, 0.49%)</title><rect x="321.5" y="355.0" width="5.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="324.5" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.09%)</title><rect x="322.2" y="339.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="325.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (14 samples, 0.26%)</title><rect x="323.3" y="339.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="326.3" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.26%)</title><rect x="323.3" y="323.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="326.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (13 samples, 0.24%)</title><rect x="323.5" y="307.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.5" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.06%)</title><rect x="326.6" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="329.6" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.06%)</title><rect x="327.3" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="330.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="328.2" y="371.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.2" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.17%)</title><rect x="329.3" y="371.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.3" y="382.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="331.5" y="419.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="334.5" y="430.0"></text>
</g>
<g>
<title>ipv4_helper?[nf_conntrack] (2 samples, 0.04%)</title><rect x="331.9" y="435.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="334.9" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.21%)</title><rect x="332.4" y="435.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="335.4" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (5 samples, 0.09%)</title><rect x="332.6" y="419.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="335.6" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.04%)</title><rect x="333.3" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="336.3" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (3 samples, 0.06%)</title><rect x="334.2" y="419.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="337.2" y="430.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.04%)</title><rect x="335.0" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="338.0" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.11%)</title><rect x="335.5" y="451.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="338.5" y="462.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.06%)</title><rect x="336.8" y="467.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="339.8" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.06%)</title><rect x="337.5" y="467.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.5" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.08%)</title><rect x="338.2" y="483.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="341.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.04%)</title><rect x="339.3" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="342.3" y="494.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.11%)</title><rect x="339.7" y="499.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.7" y="510.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.09%)</title><rect x="339.9" y="483.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="342.9" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="340.6" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="343.6" y="478.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.06%)</title><rect x="341.0" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="344.0" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.04%)</title><rect x="341.9" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="344.9" y="510.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.06%)</title><rect x="342.6" y="515.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="345.6" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.06%)</title><rect x="343.5" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.5" y="526.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.11%)</title><rect x="344.4" y="515.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="347.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.06%)</title><rect x="345.0" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="348.0" y="510.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="345.7" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="348.7" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.26%)</title><rect x="346.4" y="515.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.4" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.04%)</title><rect x="347.5" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.5" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.13%)</title><rect x="347.9" y="499.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="350.9" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.11%)</title><rect x="348.2" y="483.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="351.2" y="494.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.11%)</title><rect x="348.2" y="467.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="351.2" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="348.6" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="351.6" y="462.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.04%)</title><rect x="349.0" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.0" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.06%)</title><rect x="349.9" y="515.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.9" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (6 samples, 0.11%)</title><rect x="350.6" y="515.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.06%)</title><rect x="352.2" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.2" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (22 samples, 0.41%)</title><rect x="353.0" y="563.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.0" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (19 samples, 0.36%)</title><rect x="353.7" y="547.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="356.7" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.11%)</title><rect x="356.4" y="531.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="359.4" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.06%)</title><rect x="358.2" y="579.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="361.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (4 samples, 0.08%)</title><rect x="358.8" y="595.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="361.8" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.24%)</title><rect x="359.7" y="611.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="362.7" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="360.2" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.2" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (9 samples, 0.17%)</title><rect x="360.6" y="595.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="363.6" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (9 samples, 0.17%)</title><rect x="360.6" y="579.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="363.6" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.08%)</title><rect x="361.7" y="563.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="364.7" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.30%)</title><rect x="362.8" y="627.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.8" y="638.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.30%)</title><rect x="362.8" y="611.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="365.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.30%)</title><rect x="362.8" y="595.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="365.8" y="606.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.26%)</title><rect x="363.3" y="579.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="366.3" y="590.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="366.4" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="369.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.06%)</title><rect x="367.3" y="659.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="370.3" y="670.0"></text>
</g>
<g>
<title>send@plt (4 samples, 0.08%)</title><rect x="368.2" y="707.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="371.2" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="369.0" y="739.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="372.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.06%)</title><rect x="369.0" y="723.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="372.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="369.0" y="707.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="372.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.17%)</title><rect x="369.7" y="787.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="369.9" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="370.4" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="370.6" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="371.3" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="374.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.24%)</title><rect x="371.9" y="803.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.08%)</title><rect x="372.4" y="787.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.13%)</title><rect x="373.3" y="787.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.13%)</title><rect x="373.3" y="771.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="374.8" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="374.8" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="377.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (11 samples, 0.21%)</title><rect x="375.5" y="803.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="378.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (3,215 samples, 60.53%)</title><rect x="377.9" y="803.0" width="714.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.9" y="814.0">ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.19%)</title><rect x="380.6" y="787.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (10 samples, 0.19%)</title><rect x="380.6" y="771.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (8 samples, 0.15%)</title><rect x="381.0" y="755.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.08%)</title><rect x="381.9" y="739.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="382.8" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1353070773.invoke (2 samples, 0.04%)</title><rect x="382.8" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.09%)</title><rect x="383.3" y="787.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.09%)</title><rect x="383.3" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="383.3" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.08%)</title><rect x="383.5" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.5" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="383.7" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.7" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.09%)</title><rect x="384.4" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.4" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (4 samples, 0.08%)</title><rect x="384.6" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.6" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (4 samples, 0.08%)</title><rect x="384.6" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.6" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="385.5" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.5" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="385.5" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.5" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="385.5" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.5" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="385.5" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.5" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="385.5" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.5" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="385.5" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="388.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.09%)</title><rect x="385.9" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="385.9" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="386.2" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="386.6" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="389.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="386.6" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="386.6" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="389.6" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="387.0" y="787.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="390.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (1,385 samples, 26.08%)</title><rect x="387.5" y="787.0" width="307.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.5" y="798.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (9 samples, 0.17%)</title><rect x="387.5" y="771.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.09%)</title><rect x="388.2" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="388.8" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="388.8" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="388.8" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,376 samples, 25.91%)</title><rect x="389.5" y="771.0" width="305.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="392.5" y="782.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,376 samples, 25.91%)</title><rect x="389.5" y="755.0" width="305.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.5" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (243 samples, 4.58%)</title><rect x="390.2" y="739.0" width="53.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.2" y="750.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.08%)</title><rect x="390.2" y="723.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="393.2" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.06%)</title><rect x="390.4" y="707.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="393.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.06%)</title><rect x="390.4" y="691.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="393.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="390.4" y="675.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="393.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="390.4" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="393.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (239 samples, 4.50%)</title><rect x="391.0" y="723.0" width="53.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.0" y="734.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (38 samples, 0.72%)</title><rect x="392.8" y="707.0" width="8.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="395.8" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="395.0" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="398.0" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="395.7" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="398.7" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.06%)</title><rect x="396.1" y="691.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="399.1" y="702.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.13%)</title><rect x="396.8" y="691.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="399.8" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.23%)</title><rect x="398.4" y="691.0" width="2.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="401.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.09%)</title><rect x="399.5" y="675.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="402.5" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="400.6" y="675.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="403.6" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="400.6" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="403.6" y="670.0"></text>
</g>
<g>
<title>__GI___recv (189 samples, 3.56%)</title><rect x="401.3" y="707.0" width="42.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="404.3" y="718.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (176 samples, 3.31%)</title><rect x="404.1" y="691.0" width="39.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="407.1" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (176 samples, 3.31%)</title><rect x="404.1" y="675.0" width="39.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="407.1" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (155 samples, 2.92%)</title><rect x="408.8" y="659.0" width="34.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="411.8" y="670.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (151 samples, 2.84%)</title><rect x="408.8" y="643.0" width="33.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.8" y="654.0">__..</text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="409.7" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.7" y="638.0"></text>
</g>
<g>
<title>fput (4 samples, 0.08%)</title><rect x="410.1" y="627.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.1" y="638.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.04%)</title><rect x="411.0" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="414.0" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (130 samples, 2.45%)</title><rect x="411.5" y="627.0" width="28.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="414.5" y="638.0">so..</text>
</g>
<g>
<title>inet_recvmsg (122 samples, 2.30%)</title><rect x="411.9" y="611.0" width="27.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="414.9" y="622.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (115 samples, 2.17%)</title><rect x="413.5" y="595.0" width="25.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="416.5" y="606.0">t..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.09%)</title><rect x="418.6" y="579.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.6" y="590.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="418.8" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="421.8" y="574.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="418.8" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.8" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="419.7" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="422.7" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="420.4" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="423.4" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (56 samples, 1.05%)</title><rect x="421.0" y="579.0" width="12.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.0" y="590.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.06%)</title><rect x="421.7" y="563.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="424.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.08%)</title><rect x="422.4" y="563.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="425.4" y="574.0"></text>
</g>
<g>
<title>add_wait_queue (2 samples, 0.04%)</title><rect x="423.5" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="426.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="423.5" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="426.5" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (19 samples, 0.36%)</title><rect x="423.9" y="563.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.9" y="574.0"></text>
</g>
<g>
<title>_cond_resched (4 samples, 0.08%)</title><rect x="424.4" y="547.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.4" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.06%)</title><rect x="424.6" y="531.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="427.6" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (12 samples, 0.23%)</title><rect x="425.3" y="547.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="428.3" y="558.0"></text>
</g>
<g>
<title>remove_wait_queue (8 samples, 0.15%)</title><rect x="428.1" y="563.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="431.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.13%)</title><rect x="428.4" y="547.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="431.4" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (6 samples, 0.11%)</title><rect x="429.9" y="563.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="432.9" y="574.0"></text>
</g>
<g>
<title>wait_woken (10 samples, 0.19%)</title><rect x="431.3" y="563.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="434.3" y="574.0"></text>
</g>
<g>
<title>schedule_timeout (10 samples, 0.19%)</title><rect x="431.3" y="547.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.09%)</title><rect x="431.9" y="531.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.9" y="542.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="433.0" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="436.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (19 samples, 0.36%)</title><rect x="433.5" y="579.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.5" y="590.0"></text>
</g>
<g>
<title>__skb_datagram_iter (18 samples, 0.34%)</title><rect x="433.5" y="563.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.5" y="574.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="434.1" y="547.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="437.1" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (12 samples, 0.23%)</title><rect x="434.8" y="547.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="437.8" y="558.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.08%)</title><rect x="434.8" y="531.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="437.8" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="435.3" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="438.3" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.13%)</title><rect x="435.7" y="531.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="438.7" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.09%)</title><rect x="435.9" y="515.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="438.9" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="437.9" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="440.9" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.04%)</title><rect x="438.4" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="441.4" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="438.4" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.4" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.11%)</title><rect x="439.0" y="611.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="442.0" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.09%)</title><rect x="439.3" y="595.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="442.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="439.3" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="442.3" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.06%)</title><rect x="439.7" y="579.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.7" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.06%)</title><rect x="439.7" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.7" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.17%)</title><rect x="440.4" y="627.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.4" y="638.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.17%)</title><rect x="440.4" y="611.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.17%)</title><rect x="440.4" y="595.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.4" y="606.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.13%)</title><rect x="440.8" y="579.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="443.8" y="590.0"></text>
</g>
<g>
<title>fput (3 samples, 0.06%)</title><rect x="442.4" y="643.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="445.4" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="443.5" y="707.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="446.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (85 samples, 1.60%)</title><rect x="444.1" y="739.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.21%)</title><rect x="445.0" y="723.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="445.5" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.13%)</title><rect x="445.9" y="707.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="448.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.11%)</title><rect x="445.9" y="691.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.9" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.06%)</title><rect x="446.6" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.6" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.11%)</title><rect x="447.5" y="723.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="450.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (27 samples, 0.51%)</title><rect x="448.8" y="723.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 0.45%)</title><rect x="449.5" y="707.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.43%)</title><rect x="449.7" y="691.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.13%)</title><rect x="453.0" y="675.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.13%)</title><rect x="453.0" y="659.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.13%)</title><rect x="453.0" y="643.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.17%)</title><rect x="454.8" y="723.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (8 samples, 0.15%)</title><rect x="456.8" y="723.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (20 samples, 0.38%)</title><rect x="458.6" y="723.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.11%)</title><rect x="458.8" y="707.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.21%)</title><rect x="460.1" y="707.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.21%)</title><rect x="460.1" y="691.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.1" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="461.9" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="461.9" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.9" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.04%)</title><rect x="461.9" y="643.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="462.6" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (44 samples, 0.83%)</title><rect x="463.0" y="739.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.09%)</title><rect x="464.4" y="723.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.06%)</title><rect x="464.8" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.8" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="465.0" y="691.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="468.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (30 samples, 0.56%)</title><rect x="465.5" y="723.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.13%)</title><rect x="466.8" y="707.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (3 samples, 0.06%)</title><rect x="467.7" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.15%)</title><rect x="468.4" y="707.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.06%)</title><rect x="468.6" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.04%)</title><rect x="468.6" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.6" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="469.2" y="691.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="472.2" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="469.7" y="691.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="472.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.17%)</title><rect x="470.1" y="707.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.13%)</title><rect x="470.6" y="691.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.09%)</title><rect x="471.0" y="675.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="471.7" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.06%)</title><rect x="472.1" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="472.4" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.09%)</title><rect x="472.8" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="472.8" y="723.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="472.8" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (225 samples, 4.24%)</title><rect x="473.9" y="739.0" width="50.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.9" y="750.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (15 samples, 0.28%)</title><rect x="475.2" y="723.0" width="3.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="478.2" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (203 samples, 3.82%)</title><rect x="478.6" y="723.0" width="45.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="481.6" y="734.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (176 samples, 3.31%)</title><rect x="484.6" y="707.0" width="39.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="487.6" y="718.0">ent..</text>
</g>
<g>
<title>__x64_sys_setsockopt (5 samples, 0.09%)</title><rect x="484.6" y="691.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="487.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (171 samples, 3.22%)</title><rect x="485.7" y="691.0" width="38.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="488.7" y="702.0">do_..</text>
</g>
<g>
<title>__sys_setsockopt (3 samples, 0.06%)</title><rect x="497.7" y="675.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="500.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (113 samples, 2.13%)</title><rect x="498.4" y="675.0" width="25.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="501.4" y="686.0">_..</text>
</g>
<g>
<title>__sys_setsockopt (109 samples, 2.05%)</title><rect x="498.6" y="659.0" width="24.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.6" y="670.0">_..</text>
</g>
<g>
<title>__get_user_4 (11 samples, 0.21%)</title><rect x="499.5" y="643.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="502.5" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (3 samples, 0.06%)</title><rect x="501.9" y="643.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="504.9" y="654.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.09%)</title><rect x="502.6" y="643.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="505.6" y="654.0"></text>
</g>
<g>
<title>security_socket_setsockopt (25 samples, 0.47%)</title><rect x="503.7" y="643.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="506.7" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (6 samples, 0.11%)</title><rect x="504.4" y="627.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.4" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (16 samples, 0.30%)</title><rect x="505.7" y="627.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="508.7" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="505.7" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="508.7" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (14 samples, 0.26%)</title><rect x="506.1" y="611.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="509.1" y="622.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="507.7" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="510.7" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.09%)</title><rect x="508.1" y="595.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.1" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (39 samples, 0.73%)</title><rect x="509.5" y="643.0" width="8.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="512.5" y="654.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.06%)</title><rect x="512.6" y="627.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="515.6" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.08%)</title><rect x="513.5" y="627.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="516.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="513.9" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="516.9" y="622.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.09%)</title><rect x="514.3" y="627.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="517.3" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="515.0" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.0" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (12 samples, 0.23%)</title><rect x="515.5" y="627.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="518.5" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="516.8" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="519.8" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.08%)</title><rect x="517.2" y="611.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="520.2" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (21 samples, 0.40%)</title><rect x="518.1" y="643.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.1" y="654.0"></text>
</g>
<g>
<title>__fdget (19 samples, 0.36%)</title><rect x="518.3" y="627.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="521.3" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="518.3" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="521.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (17 samples, 0.32%)</title><rect x="518.8" y="611.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.8" y="622.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.26%)</title><rect x="519.5" y="595.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="522.5" y="606.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="522.8" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="525.8" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (771 samples, 14.52%)</title><rect x="523.9" y="739.0" width="171.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.9" y="750.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (44 samples, 0.83%)</title><rect x="529.0" y="723.0" width="9.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="532.0" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="532.8" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="535.8" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="533.2" y="707.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="536.2" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3 (8 samples, 0.15%)</title><rect x="533.9" y="707.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="536.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.19%)</title><rect x="535.7" y="707.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="538.7" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="536.3" y="691.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="539.3" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.06%)</title><rect x="536.8" y="691.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="539.8" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.06%)</title><rect x="538.1" y="707.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="541.1" y="718.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.09%)</title><rect x="538.8" y="723.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="541.8" y="734.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="539.9" y="723.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="542.9" y="734.0"></text>
</g>
<g>
<title>__libc_send (696 samples, 13.10%)</title><rect x="540.3" y="723.0" width="154.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="543.3" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (684 samples, 12.88%)</title><rect x="543.0" y="707.0" width="152.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="546.0" y="718.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.08%)</title><rect x="543.0" y="691.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="546.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (680 samples, 12.80%)</title><rect x="543.9" y="691.0" width="151.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.9" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (658 samples, 12.39%)</title><rect x="547.9" y="675.0" width="146.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="550.9" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (655 samples, 12.33%)</title><rect x="548.1" y="659.0" width="145.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="551.1" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="548.6" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="551.6" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (648 samples, 12.20%)</title><rect x="549.2" y="643.0" width="144.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="552.2" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (636 samples, 11.98%)</title><rect x="549.9" y="627.0" width="141.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="552.9" y="638.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (632 samples, 11.90%)</title><rect x="550.8" y="611.0" width="140.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="553.8" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="551.0" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.0" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="551.7" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="554.7" y="606.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.06%)</title><rect x="552.1" y="595.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="555.1" y="606.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.06%)</title><rect x="553.0" y="595.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="556.0" y="606.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.04%)</title><rect x="553.7" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="556.7" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="554.3" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="557.3" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (610 samples, 11.49%)</title><rect x="554.8" y="595.0" width="135.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="557.8" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="557.2" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.2" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.06%)</title><rect x="557.2" y="563.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.2" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.06%)</title><rect x="557.9" y="579.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="560.9" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.11%)</title><rect x="558.8" y="579.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="561.8" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="559.2" y="563.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="562.2" y="574.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.04%)</title><rect x="560.1" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="563.1" y="590.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.04%)</title><rect x="560.6" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.6" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (27 samples, 0.51%)</title><rect x="561.0" y="579.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="564.0" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (20 samples, 0.38%)</title><rect x="562.1" y="563.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.1" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (12 samples, 0.23%)</title><rect x="562.3" y="547.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="565.3" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.21%)</title><rect x="562.3" y="531.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="565.3" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.09%)</title><rect x="563.5" y="515.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="566.5" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.11%)</title><rect x="565.0" y="547.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="568.0" y="558.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="566.6" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="569.6" y="574.0"></text>
</g>
<g>
<title>tcp_push (543 samples, 10.22%)</title><rect x="567.2" y="579.0" width="120.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="570.2" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (540 samples, 10.17%)</title><rect x="567.7" y="563.0" width="120.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="570.7" y="574.0">__tcp_push_pend..</text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.04%)</title><rect x="568.1" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="571.1" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.04%)</title><rect x="568.8" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="571.8" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (532 samples, 10.02%)</title><rect x="569.5" y="547.0" width="118.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="572.5" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (507 samples, 9.55%)</title><rect x="571.2" y="531.0" width="112.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="574.2" y="542.0">__tcp_transmit..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="573.2" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="576.2" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (488 samples, 9.19%)</title><rect x="573.9" y="515.0" width="108.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.9" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (487 samples, 9.17%)</title><rect x="574.1" y="499.0" width="108.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="577.1" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.04%)</title><rect x="575.2" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="578.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out (475 samples, 8.94%)</title><rect x="575.7" y="483.0" width="105.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="578.7" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (75 samples, 1.41%)</title><rect x="575.9" y="467.0" width="16.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.9" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.08%)</title><rect x="576.1" y="451.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="579.1" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (3 samples, 0.06%)</title><rect x="577.0" y="451.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.0" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (65 samples, 1.22%)</title><rect x="577.7" y="451.0" width="14.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="580.7" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (9 samples, 0.17%)</title><rect x="578.6" y="435.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="581.6" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (9 samples, 0.17%)</title><rect x="578.6" y="419.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="581.6" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (42 samples, 0.79%)</title><rect x="580.6" y="435.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="583.6" y="446.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (3 samples, 0.06%)</title><rect x="580.8" y="419.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (37 samples, 0.70%)</title><rect x="581.4" y="419.0" width="8.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="584.4" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (8 samples, 0.15%)</title><rect x="582.3" y="403.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="585.3" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (3 samples, 0.06%)</title><rect x="584.6" y="403.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.6" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (3 samples, 0.06%)</title><rect x="585.2" y="403.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="588.2" y="414.0"></text>
</g>
<g>
<title>tcp_packet?[nf_conntrack] (17 samples, 0.32%)</title><rect x="585.9" y="403.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="588.9" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.04%)</title><rect x="587.4" y="387.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.4" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (8 samples, 0.15%)</title><rect x="587.9" y="387.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="590.9" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (4 samples, 0.08%)</title><rect x="589.9" y="435.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="592.9" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (6 samples, 0.11%)</title><rect x="590.8" y="435.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="593.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (2 samples, 0.04%)</title><rect x="591.0" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="594.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat_ipv4] (3 samples, 0.06%)</title><rect x="591.4" y="419.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="594.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (2 samples, 0.04%)</title><rect x="591.7" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="594.7" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="592.1" y="451.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="595.1" y="462.0"></text>
</g>
<g>
<title>ip_output (397 samples, 7.48%)</title><rect x="592.6" y="467.0" width="88.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="595.6" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.06%)</title><rect x="593.2" y="451.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="596.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (383 samples, 7.21%)</title><rect x="594.1" y="451.0" width="85.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="597.1" y="462.0">ip_finish_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (10 samples, 0.19%)</title><rect x="594.8" y="435.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (369 samples, 6.95%)</title><rect x="597.0" y="435.0" width="82.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="600.0" y="446.0">ip_finish..</text>
</g>
<g>
<title>__local_bh_enable_ip (317 samples, 5.97%)</title><rect x="599.2" y="419.0" width="70.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.2" y="430.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.21 (315 samples, 5.93%)</title><rect x="599.7" y="403.0" width="70.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.7" y="414.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (315 samples, 5.93%)</title><rect x="599.7" y="387.0" width="70.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="602.7" y="398.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (315 samples, 5.93%)</title><rect x="599.7" y="371.0" width="70.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="602.7" y="382.0">__softi..</text>
</g>
<g>
<title>net_rx_action (309 samples, 5.82%)</title><rect x="600.8" y="355.0" width="68.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="603.8" y="366.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (304 samples, 5.72%)</title><rect x="601.9" y="339.0" width="67.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="604.9" y="350.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (300 samples, 5.65%)</title><rect x="602.8" y="323.0" width="66.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="605.8" y="334.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (299 samples, 5.63%)</title><rect x="603.0" y="307.0" width="66.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="606.0" y="318.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.13%)</title><rect x="603.0" y="291.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="606.0" y="302.0"></text>
</g>
<g>
<title>ip_rcv (291 samples, 5.48%)</title><rect x="604.6" y="291.0" width="64.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="607.6" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.21 (3 samples, 0.06%)</title><rect x="605.7" y="275.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="608.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (274 samples, 5.16%)</title><rect x="606.3" y="275.0" width="60.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.3" y="286.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (268 samples, 5.05%)</title><rect x="607.0" y="259.0" width="59.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="610.0" y="270.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (257 samples, 4.84%)</title><rect x="607.2" y="243.0" width="57.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.2" y="254.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (256 samples, 4.82%)</title><rect x="607.2" y="227.0" width="56.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.2" y="238.0">ip_pro..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.08%)</title><rect x="608.3" y="211.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="611.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (244 samples, 4.59%)</title><rect x="609.9" y="211.0" width="54.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="612.9" y="222.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.19%)</title><rect x="611.0" y="195.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="614.0" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.13%)</title><rect x="613.4" y="195.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="616.4" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.04%)</title><rect x="613.7" y="179.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="616.7" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.06%)</title><rect x="614.3" y="179.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="617.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (215 samples, 4.05%)</title><rect x="615.4" y="195.0" width="47.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="618.4" y="206.0">tcp_..</text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.04%)</title><rect x="615.7" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="618.7" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="616.1" y="179.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="619.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (210 samples, 3.95%)</title><rect x="616.6" y="179.0" width="46.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="619.6" y="190.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.15%)</title><rect x="617.4" y="163.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="620.4" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.11%)</title><rect x="617.9" y="147.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.9" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.08%)</title><rect x="618.3" y="131.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="621.3" y="142.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.06%)</title><rect x="618.6" y="115.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="621.6" y="126.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.04%)</title><rect x="619.2" y="163.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="622.2" y="174.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.04%)</title><rect x="619.7" y="163.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="622.7" y="174.0"></text>
</g>
<g>
<title>tcp_ack (55 samples, 1.04%)</title><rect x="620.1" y="163.0" width="12.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.1" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="622.8" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="625.8" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (34 samples, 0.64%)</title><rect x="624.3" y="147.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="627.3" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.28%)</title><rect x="626.3" y="131.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="629.3" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="626.3" y="115.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="629.3" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="626.6" y="99.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="629.6" y="110.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.17%)</title><rect x="627.2" y="115.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="630.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.15%)</title><rect x="627.2" y="99.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="630.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.06%)</title><rect x="628.3" y="83.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="631.3" y="94.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.06%)</title><rect x="628.3" y="67.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.3" y="78.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.06%)</title><rect x="629.7" y="131.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="632.7" y="142.0"></text>
</g>
<g>
<title>tcp_chrono_stop (3 samples, 0.06%)</title><rect x="630.8" y="131.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="633.8" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.04%)</title><rect x="631.4" y="131.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="634.4" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="632.3" y="163.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="635.3" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (122 samples, 2.30%)</title><rect x="633.0" y="163.0" width="27.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="636.0" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (112 samples, 2.11%)</title><rect x="633.9" y="147.0" width="24.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.9" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (108 samples, 2.03%)</title><rect x="634.8" y="131.0" width="24.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.8" y="142.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (107 samples, 2.01%)</title><rect x="634.8" y="115.0" width="23.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="637.8" y="126.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (107 samples, 2.01%)</title><rect x="634.8" y="99.0" width="23.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="637.8" y="110.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.11%)</title><rect x="658.8" y="147.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.8" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.04%)</title><rect x="660.1" y="163.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.1" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.09%)</title><rect x="660.5" y="163.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="663.5" y="174.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="660.5" y="147.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="663.5" y="158.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="660.8" y="131.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="663.8" y="142.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="661.2" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="664.2" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.04%)</title><rect x="661.9" y="163.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="664.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.04%)</title><rect x="663.2" y="195.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="666.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.04%)</title><rect x="663.7" y="195.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="666.7" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.04%)</title><rect x="664.3" y="243.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="667.3" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.11%)</title><rect x="665.2" y="243.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="668.2" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (6 samples, 0.11%)</title><rect x="665.2" y="227.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="668.2" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (6 samples, 0.11%)</title><rect x="665.2" y="211.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="668.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.19 (3 samples, 0.06%)</title><rect x="666.5" y="259.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="669.5" y="270.0"></text>
</g>
<g>
<title>ip_sabotage_in?[br_netfilter] (2 samples, 0.04%)</title><rect x="667.2" y="275.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="670.2" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (5 samples, 0.09%)</title><rect x="667.7" y="275.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="670.7" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="668.8" y="275.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="671.8" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (42 samples, 0.79%)</title><rect x="669.7" y="419.0" width="9.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="672.7" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (40 samples, 0.75%)</title><rect x="669.7" y="403.0" width="8.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.7" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (26 samples, 0.49%)</title><rect x="670.8" y="387.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="673.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (16 samples, 0.30%)</title><rect x="672.5" y="371.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="675.5" y="382.0"></text>
</g>
<g>
<title>netif_rx (14 samples, 0.26%)</title><rect x="673.0" y="355.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.0" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.06%)</title><rect x="673.2" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="676.2" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (10 samples, 0.19%)</title><rect x="673.9" y="339.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="676.9" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.17%)</title><rect x="674.1" y="323.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="677.1" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.13%)</title><rect x="677.0" y="387.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="680.0" y="398.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (3 samples, 0.06%)</title><rect x="677.9" y="371.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.9" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.09%)</title><rect x="679.7" y="451.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="682.7" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="680.3" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="683.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.04%)</title><rect x="680.8" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="683.8" y="478.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.04%)</title><rect x="681.2" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.2" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.06%)</title><rect x="681.7" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.7" y="494.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.06%)</title><rect x="682.3" y="515.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="685.3" y="526.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.06%)</title><rect x="682.3" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.3" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="682.5" y="483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.5" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.04%)</title><rect x="683.0" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="686.0" y="526.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.08%)</title><rect x="684.1" y="531.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="687.1" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.08%)</title><rect x="685.7" y="531.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="688.7" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.19%)</title><rect x="687.9" y="579.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="690.9" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.06%)</title><rect x="687.9" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="690.9" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.13%)</title><rect x="688.5" y="563.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="691.5" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.06%)</title><rect x="689.4" y="547.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="692.4" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.06%)</title><rect x="690.3" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="693.3" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.15%)</title><rect x="691.2" y="627.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.2" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.11%)</title><rect x="691.6" y="611.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.6" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.11%)</title><rect x="691.6" y="595.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="694.6" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.08%)</title><rect x="692.1" y="579.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="695.1" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="693.2" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="696.2" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="693.2" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="696.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="693.2" y="611.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="696.2" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="693.2" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.2" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.08%)</title><rect x="694.1" y="675.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="697.1" y="686.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.06%)</title><rect x="694.3" y="659.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="697.3" y="670.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.06%)</title><rect x="694.3" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.3" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="694.5" y="627.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="697.5" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="694.5" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="697.5" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="694.5" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="697.5" y="606.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="694.5" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.5" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="694.5" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="697.5" y="574.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="694.5" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="697.5" y="558.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="694.5" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="694.5" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.04%)</title><rect x="695.2" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (3 samples, 0.06%)</title><rect x="695.6" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.isThisNode (3 samples, 0.06%)</title><rect x="695.6" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.06%)</title><rect x="695.6" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.04%)</title><rect x="695.9" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.getNodeReplica (28 samples, 0.53%)</title><rect x="696.3" y="787.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (16 samples, 0.30%)</title><rect x="699.0" y="771.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (4 samples, 0.08%)</title><rect x="701.6" y="755.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.08%)</title><rect x="701.6" y="739.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (2 samples, 0.04%)</title><rect x="702.1" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="705.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueExternalResponse (125 samples, 2.35%)</title><rect x="702.5" y="787.0" width="27.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.5" y="798.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.13%)</title><rect x="702.5" y="771.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.syncReplicaValues (25 samples, 0.47%)</title><rect x="704.1" y="771.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.1" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.06%)</title><rect x="704.5" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.5" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (3 samples, 0.06%)</title><rect x="704.5" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (19 samples, 0.36%)</title><rect x="705.4" y="755.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (18 samples, 0.34%)</title><rect x="705.6" y="739.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.34%)</title><rect x="705.6" y="723.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (17 samples, 0.32%)</title><rect x="705.9" y="707.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (15 samples, 0.28%)</title><rect x="705.9" y="691.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 0.19%)</title><rect x="706.1" y="675.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (9 samples, 0.17%)</title><rect x="706.1" y="659.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (7 samples, 0.13%)</title><rect x="706.5" y="643.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (3 samples, 0.06%)</title><rect x="707.4" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.4" y="638.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$70/1167852559.apply (2 samples, 0.04%)</title><rect x="707.6" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.6" y="622.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (2 samples, 0.04%)</title><rect x="707.6" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.06%)</title><rect x="708.3" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (3 samples, 0.06%)</title><rect x="708.3" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="708.5" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.04%)</title><rect x="708.5" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.04%)</title><rect x="709.2" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (2 samples, 0.04%)</title><rect x="709.2" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytes (6 samples, 0.11%)</title><rect x="709.6" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.06%)</title><rect x="710.1" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="710.3" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (87 samples, 1.64%)</title><rect x="711.0" y="771.0" width="19.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.24%)</title><rect x="711.2" y="755.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.21%)</title><rect x="711.6" y="739.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.17%)</title><rect x="712.1" y="723.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="713.4" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="713.6" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.15%)</title><rect x="714.1" y="755.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="717.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="714.1" y="739.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="714.1" y="723.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="714.1" y="707.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.06%)</title><rect x="714.5" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="715.2" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.06%)</title><rect x="715.2" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.06%)</title><rect x="715.2" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.2" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.06%)</title><rect x="715.9" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (4 samples, 0.08%)</title><rect x="716.5" y="755.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.byteOffset (3 samples, 0.06%)</title><rect x="716.5" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="716.5" y="723.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="719.5" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (58 samples, 1.09%)</title><rect x="717.4" y="755.0" width="12.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextPutIndex (54 samples, 1.02%)</title><rect x="718.3" y="739.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalResponse (1,628 samples, 30.65%)</title><rect x="730.3" y="787.0" width="361.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.3" y="798.0">ru/mail/polis/service/codearound/RepliServiceUtil..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (64 samples, 1.21%)</title><rect x="731.0" y="771.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.0" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="741.4" y="755.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="744.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.04%)</title><rect x="742.1" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (2 samples, 0.04%)</title><rect x="742.5" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (4 samples, 0.08%)</title><rect x="743.0" y="755.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (2 samples, 0.04%)</title><rect x="743.9" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (4 samples, 0.08%)</title><rect x="744.3" y="755.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (1,554 samples, 29.26%)</title><rect x="745.2" y="771.0" width="345.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.2" y="782.0">ru/mail/polis/service/codearound/TaskDAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (1,551 samples, 29.20%)</title><rect x="745.2" y="755.0" width="344.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.2" y="766.0">ru/mail/polis/service/codearound/TaskDAO.getVal..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,538 samples, 28.96%)</title><rect x="745.4" y="739.0" width="341.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.4" y="750.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,538 samples, 28.96%)</title><rect x="745.4" y="723.0" width="341.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.4" y="734.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (1,453 samples, 27.36%)</title><rect x="747.0" y="707.0" width="322.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="750.0" y="718.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (5 samples, 0.09%)</title><rect x="748.5" y="691.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="751.5" y="702.0"></text>
</g>
<g>
<title>__libc_free (6 samples, 0.11%)</title><rect x="749.6" y="691.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="752.6" y="702.0"></text>
</g>
<g>
<title>__malloc (19 samples, 0.36%)</title><rect x="751.0" y="691.0" width="4.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="754.0" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 0.13%)</title><rect x="755.4" y="691.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="758.4" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="757.0" y="691.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="760.0" y="702.0"></text>
</g>
<g>
<title>malloc@plt (2 samples, 0.04%)</title><rect x="757.6" y="691.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="760.6" y="702.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.04%)</title><rect x="758.1" y="691.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="761.1" y="702.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (3 samples, 0.06%)</title><rect x="758.5" y="691.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="761.5" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (8 samples, 0.15%)</title><rect x="759.2" y="691.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="762.2" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (5 samples, 0.09%)</title><rect x="761.0" y="691.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="764.0" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (12 samples, 0.23%)</title><rect x="762.1" y="691.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="765.1" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="764.7" y="691.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="767.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (7 samples, 0.13%)</title><rect x="765.2" y="691.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="768.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (6 samples, 0.11%)</title><rect x="766.7" y="691.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="769.7" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1,348 samples, 25.38%)</title><rect x="768.3" y="691.0" width="299.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="771.3" y="702.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="770.7" y="675.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="773.7" y="686.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (4 samples, 0.08%)</title><rect x="771.4" y="675.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="774.4" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3 (7 samples, 0.13%)</title><rect x="772.5" y="675.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="775.5" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (9 samples, 0.17%)</title><rect x="774.1" y="675.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="777.1" y="686.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.06%)</title><rect x="775.0" y="659.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="778.0" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (18 samples, 0.34%)</title><rect x="776.1" y="675.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="779.1" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.06%)</title><rect x="777.4" y="659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="780.4" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.06%)</title><rect x="778.1" y="659.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="781.1" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.11%)</title><rect x="778.7" y="659.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="781.7" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="779.6" y="643.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="782.6" y="654.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.04%)</title><rect x="780.1" y="675.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="783.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1,197 samples, 22.54%)</title><rect x="781.0" y="675.0" width="265.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="784.0" y="686.0">rocksdb::DB::Get(rocksdb::ReadOptio..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.04%)</title><rect x="781.6" y="659.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="784.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.04%)</title><rect x="782.1" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="785.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1,179 samples, 22.20%)</title><rect x="782.5" y="659.0" width="262.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="785.5" y="670.0">rocksdb::DB::Get(rocksdb::ReadOptio..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (22 samples, 0.41%)</title><rect x="784.7" y="643.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="787.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (4 samples, 0.08%)</title><rect x="784.7" y="627.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="787.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (14 samples, 0.26%)</title><rect x="786.1" y="627.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="789.1" y="638.0"></text>
</g>
<g>
<title>malloc_usable_size (3 samples, 0.06%)</title><rect x="786.3" y="611.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="789.3" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.13%)</title><rect x="787.0" y="611.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="790.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.04%)</title><rect x="788.7" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="791.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1,144 samples, 21.54%)</title><rect x="789.6" y="643.0" width="254.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="792.6" y="654.0">rocksdb::DBImpl::Get(rocksdb::Read..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (1,135 samples, 21.37%)</title><rect x="790.1" y="627.0" width="252.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="793.1" y="638.0">rocksdb::DBImpl::Get(rocksdb::Read..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.06%)</title><rect x="790.3" y="611.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="793.3" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.13%)</title><rect x="791.2" y="611.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="794.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.04%)</title><rect x="792.7" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="795.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (2 samples, 0.04%)</title><rect x="793.2" y="611.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="796.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.04%)</title><rect x="793.6" y="611.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="796.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.04%)</title><rect x="794.1" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="797.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1,066 samples, 20.07%)</title><rect x="794.5" y="611.0" width="236.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="797.5" y="622.0">rocksdb::DBImpl::GetImpl(rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (2 samples, 0.04%)</title><rect x="799.9" y="595.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="802.9" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.06%)</title><rect x="800.3" y="595.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="803.3" y="606.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (3 samples, 0.06%)</title><rect x="801.0" y="595.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="804.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (13 samples, 0.24%)</title><rect x="801.6" y="595.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="804.6" y="606.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (4 samples, 0.08%)</title><rect x="804.7" y="595.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="807.7" y="606.0"></text>
</g>
<g>
<title>memcpy@plt (2 samples, 0.04%)</title><rect x="805.6" y="595.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="808.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (18 samples, 0.34%)</title><rect x="806.3" y="595.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="809.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.04%)</title><rect x="807.4" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="810.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (2 samples, 0.04%)</title><rect x="807.8" y="579.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="810.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.06%)</title><rect x="808.3" y="579.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="811.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (5 samples, 0.09%)</title><rect x="809.0" y="579.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="812.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.04%)</title><rect x="810.3" y="595.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="813.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (17 samples, 0.32%)</title><rect x="811.0" y="595.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="814.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (10 samples, 0.19%)</title><rect x="811.0" y="579.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="814.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.04%)</title><rect x="811.4" y="563.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="814.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (4 samples, 0.08%)</title><rect x="811.8" y="563.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="814.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (4 samples, 0.08%)</title><rect x="813.2" y="579.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="816.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (3 samples, 0.06%)</title><rect x="814.1" y="579.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="817.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.08%)</title><rect x="814.7" y="595.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="817.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (6 samples, 0.11%)</title><rect x="816.1" y="595.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="819.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (128 samples, 2.41%)</title><rect x="817.4" y="595.0" width="28.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="820.4" y="606.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (3 samples, 0.06%)</title><rect x="819.6" y="579.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="822.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (112 samples, 2.11%)</title><rect x="820.7" y="579.0" width="24.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="823.7" y="590.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (92 samples, 1.73%)</title><rect x="823.2" y="563.0" width="20.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="826.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (6 samples, 0.11%)</title><rect x="824.3" y="547.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="827.3" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (2 samples, 0.04%)</title><rect x="824.7" y="531.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="827.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (74 samples, 1.39%)</title><rect x="825.6" y="547.0" width="16.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="828.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (6 samples, 0.11%)</title><rect x="834.1" y="531.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="837.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.08%)</title><rect x="835.8" y="531.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="838.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (24 samples, 0.45%)</title><rect x="836.7" y="531.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="839.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (3 samples, 0.06%)</title><rect x="837.8" y="515.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="840.8" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (11 samples, 0.21%)</title><rect x="838.7" y="515.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="841.7" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="841.2" y="515.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="844.2" y="526.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.04%)</title><rect x="841.6" y="515.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="844.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.13%)</title><rect x="842.1" y="547.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="845.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 0.11%)</title><rect x="843.6" y="563.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="846.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const [clone .plt] (3 samples, 0.06%)</title><rect x="845.0" y="563.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="848.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (3 samples, 0.06%)</title><rect x="845.8" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="848.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) [clone .plt] (3 samples, 0.06%)</title><rect x="846.5" y="595.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="849.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (8 samples, 0.15%)</title><rect x="847.2" y="595.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="850.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (7 samples, 0.13%)</title><rect x="849.0" y="595.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="852.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (7 samples, 0.13%)</title><rect x="849.0" y="579.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="852.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (2 samples, 0.04%)</title><rect x="851.0" y="595.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="854.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (2 samples, 0.04%)</title><rect x="851.4" y="595.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="854.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (5 samples, 0.09%)</title><rect x="852.3" y="595.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="855.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (4 samples, 0.08%)</title><rect x="853.6" y="595.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="856.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (792 samples, 14.91%)</title><rect x="854.7" y="595.0" width="176.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="857.7" y="606.0">rocksdb::Version::Get(r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (6 samples, 0.11%)</title><rect x="863.8" y="579.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="866.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (4 samples, 0.08%)</title><rect x="865.6" y="579.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="868.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (7 samples, 0.13%)</title><rect x="866.5" y="579.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="869.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (2 samples, 0.04%)</title><rect x="868.1" y="579.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="871.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (4 samples, 0.08%)</title><rect x="868.5" y="579.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="871.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (725 samples, 13.65%)</title><rect x="869.6" y="579.0" width="161.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="872.6" y="590.0">rocksdb::TableCache::..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (4 samples, 0.08%)</title><rect x="872.7" y="563.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="875.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (660 samples, 12.43%)</title><rect x="873.8" y="563.0" width="146.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="876.8" y="574.0">rocksdb::BlockBase..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (10 samples, 0.19%)</title><rect x="883.8" y="547.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="886.8" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="886.1" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="889.1" y="558.0"></text>
</g>
<g>
<title>__libc_free (10 samples, 0.19%)</title><rect x="886.7" y="547.0" width="2.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="889.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="888.9" y="547.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="891.9" y="558.0"></text>
</g>
<g>
<title>operator delete(void*) (3 samples, 0.06%)</title><rect x="889.4" y="547.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="892.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (19 samples, 0.36%)</title><rect x="890.1" y="547.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="893.1" y="558.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.04%)</title><rect x="892.1" y="531.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="895.1" y="542.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="892.5" y="531.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="895.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (2 samples, 0.04%)</title><rect x="893.4" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (2 samples, 0.04%)</title><rect x="893.8" y="531.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="896.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (3 samples, 0.06%)</title><rect x="894.3" y="547.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="897.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (2 samples, 0.04%)</title><rect x="894.9" y="547.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="897.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (5 samples, 0.09%)</title><rect x="895.4" y="547.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="898.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (4 samples, 0.08%)</title><rect x="896.9" y="547.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="899.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (5 samples, 0.09%)</title><rect x="897.8" y="547.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="900.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (2 samples, 0.04%)</title><rect x="898.9" y="547.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="901.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.04%)</title><rect x="899.6" y="547.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (4 samples, 0.08%)</title><rect x="900.1" y="547.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="903.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) [clone .plt] (2 samples, 0.04%)</title><rect x="900.9" y="547.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="903.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (218 samples, 4.10%)</title><rect x="901.4" y="547.0" width="48.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="904.4" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (2 samples, 0.04%)</title><rect x="906.7" y="531.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="909.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (4 samples, 0.08%)</title><rect x="907.4" y="531.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="910.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (187 samples, 3.52%)</title><rect x="908.3" y="531.0" width="41.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="911.3" y="542.0">roc..</text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.04%)</title><rect x="910.1" y="515.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="913.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (172 samples, 3.24%)</title><rect x="910.5" y="515.0" width="38.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="913.5" y="526.0">roc..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (4 samples, 0.08%)</title><rect x="912.5" y="499.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="915.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (5 samples, 0.09%)</title><rect x="913.4" y="499.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="916.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (11 samples, 0.21%)</title><rect x="914.5" y="499.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="917.5" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (5 samples, 0.09%)</title><rect x="914.7" y="483.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="917.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (2 samples, 0.04%)</title><rect x="916.3" y="483.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="919.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (3 samples, 0.06%)</title><rect x="916.9" y="499.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="919.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (136 samples, 2.56%)</title><rect x="918.1" y="499.0" width="30.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="921.1" y="510.0">ro..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (119 samples, 2.24%)</title><rect x="919.2" y="483.0" width="26.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="922.2" y="494.0">r..</text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (10 samples, 0.19%)</title><rect x="920.1" y="467.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="923.1" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.06%)</title><rect x="922.3" y="467.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="925.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (6 samples, 0.11%)</title><rect x="923.2" y="467.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="926.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="924.5" y="467.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="927.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (4 samples, 0.08%)</title><rect x="925.2" y="467.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="928.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (78 samples, 1.47%)</title><rect x="926.0" y="467.0" width="17.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="929.0" y="478.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="926.7" y="451.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="929.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="926.7" y="435.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="926.7" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="929.7" y="430.0"></text>
</g>
<g>
<title>malloc_usable_size (5 samples, 0.09%)</title><rect x="927.2" y="451.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="930.2" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_lock (14 samples, 0.26%)</title><rect x="928.3" y="451.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="931.3" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (4 samples, 0.08%)</title><rect x="931.4" y="451.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="934.4" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (9 samples, 0.17%)</title><rect x="932.3" y="451.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="935.3" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (4 samples, 0.08%)</title><rect x="934.3" y="451.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="937.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (7 samples, 0.13%)</title><rect x="935.2" y="451.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="938.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.09%)</title><rect x="936.7" y="451.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="939.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) [clone .plt] (2 samples, 0.04%)</title><rect x="937.8" y="451.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="940.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (23 samples, 0.43%)</title><rect x="938.3" y="451.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="941.3" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect x="938.3" y="435.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="941.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (21 samples, 0.40%)</title><rect x="938.7" y="435.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="941.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (3 samples, 0.06%)</title><rect x="943.6" y="467.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="946.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (4 samples, 0.08%)</title><rect x="944.3" y="467.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="947.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (2 samples, 0.04%)</title><rect x="945.2" y="467.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="948.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (2 samples, 0.04%)</title><rect x="945.6" y="483.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="948.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.06%)</title><rect x="946.3" y="483.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="949.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::GetUsage(rocksdb::Cache::Handle*) const (2 samples, 0.04%)</title><rect x="946.9" y="483.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="949.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (4 samples, 0.08%)</title><rect x="947.4" y="483.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="950.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockContents*, rocksdb::CompressionType, rocksdb::UncompressionDict const&amp;, rocksdb::MemoryAllocator*, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.04%)</title><rect x="948.3" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="951.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (2 samples, 0.04%)</title><rect x="948.3" y="483.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="951.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (4 samples, 0.08%)</title><rect x="948.7" y="515.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="951.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (119 samples, 2.24%)</title><rect x="949.8" y="547.0" width="26.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="952.8" y="558.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (5 samples, 0.09%)</title><rect x="954.5" y="531.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="957.5" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="955.6" y="531.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="958.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (69 samples, 1.30%)</title><rect x="956.3" y="531.0" width="15.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="959.3" y="542.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (6 samples, 0.11%)</title><rect x="958.0" y="515.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="961.0" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="959.4" y="515.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="962.4" y="526.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (4 samples, 0.08%)</title><rect x="960.3" y="515.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="963.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (29 samples, 0.55%)</title><rect x="961.2" y="515.0" width="6.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="964.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (18 samples, 0.34%)</title><rect x="967.6" y="515.0" width="4.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="970.6" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (3 samples, 0.06%)</title><rect x="969.6" y="499.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="972.6" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="970.3" y="499.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="973.3" y="510.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.08%)</title><rect x="970.7" y="499.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="973.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (6 samples, 0.11%)</title><rect x="971.6" y="531.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="974.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (15 samples, 0.28%)</title><rect x="972.9" y="531.0" width="3.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="975.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (2 samples, 0.04%)</title><rect x="974.3" y="515.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="977.3" y="526.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (5 samples, 0.09%)</title><rect x="974.7" y="515.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="977.7" y="526.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.04%)</title><rect x="975.8" y="515.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="978.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (22 samples, 0.41%)</title><rect x="976.5" y="547.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="979.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (3 samples, 0.06%)</title><rect x="977.6" y="531.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="980.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (11 samples, 0.21%)</title><rect x="978.3" y="531.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="981.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.04%)</title><rect x="978.5" y="515.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="981.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (8 samples, 0.15%)</title><rect x="978.9" y="515.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="981.9" y="526.0"></text>
</g>
<g>
<title>malloc_usable_size (2 samples, 0.04%)</title><rect x="979.2" y="499.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="982.2" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.06%)</title><rect x="979.6" y="499.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="982.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.04%)</title><rect x="980.3" y="499.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="983.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (3 samples, 0.06%)</title><rect x="980.7" y="531.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="983.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (11 samples, 0.21%)</title><rect x="981.4" y="547.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="984.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (3 samples, 0.06%)</title><rect x="982.7" y="531.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="985.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (149 samples, 2.81%)</title><rect x="983.8" y="547.0" width="33.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="986.8" y="558.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni10473752177992636.so (11 samples, 0.21%)</title><rect x="1001.8" y="531.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1004.8" y="542.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (19 samples, 0.36%)</title><rect x="1004.7" y="531.0" width="4.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1007.7" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.17%)</title><rect x="1008.9" y="531.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1011.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) [clone .plt] (2 samples, 0.04%)</title><rect x="1011.4" y="531.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1014.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (9 samples, 0.17%)</title><rect x="1011.8" y="531.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1014.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (3 samples, 0.06%)</title><rect x="1012.9" y="515.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1015.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (14 samples, 0.26%)</title><rect x="1013.8" y="531.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1016.8" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.08%)</title><rect x="1015.8" y="515.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1018.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (3 samples, 0.06%)</title><rect x="1016.9" y="547.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1019.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (5 samples, 0.09%)</title><rect x="1018.0" y="547.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1021.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.09%)</title><rect x="1019.4" y="547.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1022.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (5 samples, 0.09%)</title><rect x="1020.5" y="563.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1023.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (3 samples, 0.06%)</title><rect x="1021.6" y="563.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1024.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (3 samples, 0.06%)</title><rect x="1022.3" y="563.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() [clone .plt] (2 samples, 0.04%)</title><rect x="1022.9" y="563.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1025.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (5 samples, 0.09%)</title><rect x="1023.4" y="563.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1026.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.04%)</title><rect x="1024.5" y="563.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1027.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (4 samples, 0.08%)</title><rect x="1024.9" y="563.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1027.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="1025.8" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1028.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.04%)</title><rect x="1026.3" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1029.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (3 samples, 0.06%)</title><rect x="1026.7" y="563.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1029.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (3 samples, 0.06%)</title><rect x="1027.8" y="563.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1030.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="1028.5" y="563.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1031.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (2 samples, 0.04%)</title><rect x="1029.4" y="563.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1032.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() [clone .plt] (2 samples, 0.04%)</title><rect x="1029.8" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1032.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (3 samples, 0.06%)</title><rect x="1030.7" y="595.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1033.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.06%)</title><rect x="1031.4" y="611.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1034.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) [clone .plt] (2 samples, 0.04%)</title><rect x="1032.0" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1035.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (6 samples, 0.11%)</title><rect x="1032.5" y="611.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1035.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (3 samples, 0.06%)</title><rect x="1033.8" y="611.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1036.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.04%)</title><rect x="1034.5" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1037.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (5 samples, 0.09%)</title><rect x="1034.9" y="611.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1037.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (11 samples, 0.21%)</title><rect x="1036.0" y="611.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1039.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() [clone .plt] (2 samples, 0.04%)</title><rect x="1038.5" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (6 samples, 0.11%)</title><rect x="1038.9" y="611.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1041.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (2 samples, 0.04%)</title><rect x="1040.3" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1043.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (5 samples, 0.09%)</title><rect x="1040.7" y="611.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1043.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) [clone .plt] (2 samples, 0.04%)</title><rect x="1041.8" y="611.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1044.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (6 samples, 0.11%)</title><rect x="1042.3" y="627.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1045.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (3 samples, 0.06%)</title><rect x="1043.8" y="643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1046.8" y="654.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (8 samples, 0.15%)</title><rect x="1044.9" y="659.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.04%)</title><rect x="1046.9" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (89 samples, 1.68%)</title><rect x="1047.4" y="675.0" width="19.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1050.4" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="1048.0" y="659.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1051.0" y="670.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.04%)</title><rect x="1048.5" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1051.5" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3 (6 samples, 0.11%)</title><rect x="1049.6" y="659.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1052.6" y="670.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 0.13%)</title><rect x="1050.9" y="659.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1053.9" y="670.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.04%)</title><rect x="1051.8" y="643.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1054.8" y="654.0"></text>
</g>
<g>
<title>jni_NewByteArray (52 samples, 0.98%)</title><rect x="1052.5" y="659.0" width="11.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1055.5" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (4 samples, 0.08%)</title><rect x="1053.8" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1056.8" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.15%)</title><rect x="1054.7" y="643.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1057.7" y="654.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (4 samples, 0.08%)</title><rect x="1056.5" y="643.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1059.5" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.08%)</title><rect x="1057.4" y="643.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1060.4" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (26 samples, 0.49%)</title><rect x="1058.2" y="643.0" width="5.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1061.2" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (20 samples, 0.38%)</title><rect x="1059.6" y="627.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1062.6" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.24%)</title><rect x="1059.8" y="611.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.8" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.06%)</title><rect x="1060.7" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1063.7" y="606.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (5 samples, 0.09%)</title><rect x="1061.4" y="595.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1064.4" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.09%)</title><rect x="1062.9" y="611.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1065.9" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.26%)</title><rect x="1064.0" y="659.0" width="3.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1067.0" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1064.7" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.7" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="1065.1" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1068.1" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.11%)</title><rect x="1065.8" y="643.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1068.8" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="1066.7" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1069.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.04%)</title><rect x="1067.1" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1070.1" y="686.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (5 samples, 0.09%)</title><rect x="1067.8" y="691.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1070.8" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="1069.1" y="691.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1072.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="1069.8" y="707.0" width="4.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1072.8" y="718.0"></text>
</g>
<g>
<title>LZ4_decompress_safe (4 samples, 0.08%)</title><rect x="1069.8" y="691.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1072.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="1070.7" y="691.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1073.7" y="702.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (8 samples, 0.15%)</title><rect x="1070.7" y="675.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1073.7" y="686.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="1072.9" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1075.9" y="686.0"></text>
</g>
<g>
<title>pread64 (4 samples, 0.08%)</title><rect x="1073.6" y="691.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1076.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="1073.6" y="675.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1076.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="1073.6" y="659.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1076.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.08%)</title><rect x="1073.6" y="643.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1076.6" y="654.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.08%)</title><rect x="1073.6" y="627.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1076.6" y="638.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.08%)</title><rect x="1073.6" y="611.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1076.6" y="622.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.04%)</title><rect x="1073.6" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1076.6" y="606.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.04%)</title><rect x="1073.6" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1076.6" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.04%)</title><rect x="1074.0" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1077.0" y="606.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.04%)</title><rect x="1074.0" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1077.0" y="590.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="1074.0" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1077.0" y="574.0"></text>
</g>
<g>
<title>__libc_free (10 samples, 0.19%)</title><rect x="1074.5" y="707.0" width="2.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1077.5" y="718.0"></text>
</g>
<g>
<title>__malloc (11 samples, 0.21%)</title><rect x="1076.7" y="707.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1079.7" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (2 samples, 0.04%)</title><rect x="1079.4" y="707.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1082.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (13 samples, 0.24%)</title><rect x="1079.8" y="707.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1082.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (3 samples, 0.06%)</title><rect x="1082.7" y="707.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1085.7" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (4 samples, 0.08%)</title><rect x="1083.4" y="707.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1086.4" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (4 samples, 0.08%)</title><rect x="1084.2" y="707.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1087.2" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (7 samples, 0.13%)</title><rect x="1085.4" y="707.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1088.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (12 samples, 0.23%)</title><rect x="1087.1" y="739.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (8 samples, 0.15%)</title><rect x="1088.0" y="723.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.06%)</title><rect x="1088.2" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1091.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.06%)</title><rect x="1088.2" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1091.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.08%)</title><rect x="1088.9" y="707.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1089.1" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1089.1" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (3 samples, 0.06%)</title><rect x="1089.8" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="1090.0" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="1090.0" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (7 samples, 0.13%)</title><rect x="1090.5" y="771.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.09%)</title><rect x="1090.7" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.09%)</title><rect x="1090.7" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.09%)</title><rect x="1090.7" y="723.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.7" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="1090.9" y="707.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1093.9" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1091.4" y="707.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1094.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.04%)</title><rect x="1092.2" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (13 samples, 0.24%)</title><rect x="1092.7" y="835.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.24%)</title><rect x="1092.7" y="819.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.7" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.21%)</title><rect x="1092.7" y="803.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.13%)</title><rect x="1093.6" y="787.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="1095.1" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="1095.1" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.09%)</title><rect x="1095.8" y="835.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.09%)</title><rect x="1095.8" y="819.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="1096.2" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.2" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="1096.5" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.56%)</title><rect x="1096.9" y="867.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.38%)</title><rect x="1098.7" y="851.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.38%)</title><rect x="1098.7" y="835.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.04%)</title><rect x="1103.1" y="851.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (16 samples, 0.30%)</title><rect x="1103.6" y="867.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.26%)</title><rect x="1103.6" y="851.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1106.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.26%)</title><rect x="1103.6" y="835.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.04%)</title><rect x="1104.9" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.08%)</title><rect x="1105.8" y="819.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.04%)</title><rect x="1107.1" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.19%)</title><rect x="1107.6" y="867.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="1107.6" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.15%)</title><rect x="1108.0" y="851.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.15%)</title><rect x="1108.0" y="835.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.09%)</title><rect x="1108.7" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.09%)</title><rect x="1108.7" y="803.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.7" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (5 samples, 0.09%)</title><rect x="1108.7" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1111.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.72%)</title><rect x="1109.8" y="867.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.72%)</title><rect x="1109.8" y="851.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.8" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.06%)</title><rect x="1111.8" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1114.8" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.06%)</title><rect x="1111.8" y="819.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1114.8" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.06%)</title><rect x="1111.8" y="803.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1114.8" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="1111.8" y="787.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1114.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.06%)</title><rect x="1111.8" y="771.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1114.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.49%)</title><rect x="1112.5" y="835.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.47%)</title><rect x="1112.5" y="819.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.5" y="830.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2 samples, 0.04%)</title><rect x="1114.9" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.9" y="814.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.17%)</title><rect x="1115.3" y="803.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1118.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.06%)</title><rect x="1117.3" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.04%)</title><rect x="1118.2" y="883.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="1118.2" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="1118.2" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="1118.2" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (305 samples, 5.74%)</title><rect x="1118.7" y="883.0" width="67.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.7" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (301 samples, 5.67%)</title><rect x="1119.3" y="867.0" width="66.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.3" y="878.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (45 samples, 0.85%)</title><rect x="1123.1" y="851.0" width="10.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1126.1" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.08%)</title><rect x="1124.5" y="835.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1127.5" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.06%)</title><rect x="1125.3" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1128.3" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.04%)</title><rect x="1126.0" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1129.0" y="846.0"></text>
</g>
<g>
<title>__memmove_ssse3 (5 samples, 0.09%)</title><rect x="1126.5" y="835.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1129.5" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (23 samples, 0.43%)</title><rect x="1127.6" y="835.0" width="5.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1130.6" y="846.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1129.1" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1132.1" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="1129.8" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1132.8" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.09%)</title><rect x="1130.2" y="819.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.2" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.11%)</title><rect x="1131.3" y="819.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1134.3" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="1132.2" y="803.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.2" y="814.0"></text>
</g>
<g>
<title>__GI___recv (232 samples, 4.37%)</title><rect x="1133.1" y="851.0" width="51.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1136.1" y="862.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (221 samples, 4.16%)</title><rect x="1135.6" y="835.0" width="49.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1138.6" y="846.0">entry..</text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 0.11%)</title><rect x="1135.6" y="819.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1138.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (215 samples, 4.05%)</title><rect x="1136.9" y="819.0" width="47.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1139.9" y="830.0">do_s..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.04%)</title><rect x="1146.0" y="803.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1149.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (172 samples, 3.24%)</title><rect x="1146.5" y="803.0" width="38.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1149.5" y="814.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (165 samples, 3.11%)</title><rect x="1146.5" y="787.0" width="36.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1149.5" y="798.0">__s..</text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.04%)</title><rect x="1148.0" y="771.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.0" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (142 samples, 2.67%)</title><rect x="1148.7" y="771.0" width="31.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1151.7" y="782.0">so..</text>
</g>
<g>
<title>inet_recvmsg (125 samples, 2.35%)</title><rect x="1149.3" y="755.0" width="27.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1152.3" y="766.0">i..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="1150.9" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.9" y="750.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="1151.6" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1154.6" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="1152.0" y="739.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.0" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (111 samples, 2.09%)</title><rect x="1152.5" y="739.0" width="24.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1155.5" y="750.0">t..</text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.17%)</title><rect x="1156.2" y="723.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1159.2" y="734.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.15%)</title><rect x="1156.5" y="707.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1159.5" y="718.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.09%)</title><rect x="1156.5" y="691.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1159.5" y="702.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="1157.8" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1160.8" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="1158.7" y="723.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1161.7" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.06%)</title><rect x="1159.3" y="723.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1162.3" y="734.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.08%)</title><rect x="1160.0" y="723.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="1160.2" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1163.2" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (49 samples, 0.92%)</title><rect x="1160.9" y="723.0" width="10.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.9" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (45 samples, 0.85%)</title><rect x="1161.1" y="707.0" width="10.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1164.1" y="718.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="1161.8" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1164.8" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (40 samples, 0.75%)</title><rect x="1162.2" y="691.0" width="8.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.2" y="702.0"></text>
</g>
<g>
<title>__check_object_size (21 samples, 0.40%)</title><rect x="1162.2" y="675.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1165.2" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.19%)</title><rect x="1164.7" y="659.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1167.7" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="1166.9" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1169.9" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (16 samples, 0.30%)</title><rect x="1167.3" y="675.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1170.3" y="686.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.11%)</title><rect x="1167.6" y="659.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1170.6" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (9 samples, 0.17%)</title><rect x="1168.9" y="659.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1171.9" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="1171.3" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.3" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (12 samples, 0.23%)</title><rect x="1171.8" y="723.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1174.8" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (11 samples, 0.21%)</title><rect x="1174.4" y="723.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1177.4" y="734.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.09%)</title><rect x="1174.7" y="707.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.09%)</title><rect x="1175.8" y="707.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1178.8" y="718.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.06%)</title><rect x="1175.8" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1178.8" y="702.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="1176.4" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1179.4" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.23%)</title><rect x="1177.1" y="755.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1180.1" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (11 samples, 0.21%)</title><rect x="1177.3" y="739.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1180.3" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.19%)</title><rect x="1177.6" y="723.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.6" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.15%)</title><rect x="1178.0" y="707.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.0" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.04%)</title><rect x="1179.8" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.8" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.24%)</title><rect x="1180.2" y="771.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1183.2" y="782.0"></text>
</g>
<g>
<title>__fdget (12 samples, 0.23%)</title><rect x="1180.2" y="755.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1183.2" y="766.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.21%)</title><rect x="1180.4" y="739.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1183.4" y="750.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.19%)</title><rect x="1180.7" y="723.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1183.7" y="734.0"></text>
</g>
<g>
<title>fput (3 samples, 0.06%)</title><rect x="1183.1" y="787.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1186.1" y="798.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.04%)</title><rect x="1183.8" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.8" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="1184.2" y="787.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1187.2" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.06%)</title><rect x="1184.7" y="851.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1187.7" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="1185.6" y="851.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.6" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="1186.4" y="899.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.4" y="910.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="1186.7" y="883.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1189.7" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="1186.7" y="867.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1189.7" y="878.0"></text>
</g>
<g>
<title>start_thread (13 samples, 0.24%)</title><rect x="1187.1" y="931.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1190.1" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 0.24%)</title><rect x="1187.1" y="915.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1190.1" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 0.24%)</title><rect x="1187.1" y="899.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="910.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.15%)</title><rect x="1187.1" y="883.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (8 samples, 0.15%)</title><rect x="1187.1" y="867.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.08%)</title><rect x="1187.1" y="851.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.06%)</title><rect x="1187.3" y="835.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.08%)</title><rect x="1188.0" y="851.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="862.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1188.2" y="835.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.2" y="846.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.06%)</title><rect x="1188.9" y="883.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.9" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.06%)</title><rect x="1188.9" y="867.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="878.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title><rect x="1188.9" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.9" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1188.9" y="835.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1188.9" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.04%)</title><rect x="1188.9" y="803.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.04%)</title><rect x="1189.6" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.6" y="894.0"></text>
</g>
</g>
</svg>
