<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Replication control | RAM</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (64,622 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (36,442 samples, 56.39%)</title><rect x="10.0" y="323.0" width="665.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (36,442 samples, 56.39%)</title><rect x="10.0" y="307.0" width="665.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (36,442 samples, 56.39%)</title><rect x="10.0" y="291.0" width="665.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (790 samples, 1.22%)</title><rect x="10.0" y="275.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (790 samples, 1.22%)</title><rect x="10.0" y="259.0" width="14.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (788 samples, 1.22%)</title><rect x="10.0" y="243.0" width="14.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (788 samples, 1.22%)</title><rect x="10.0" y="227.0" width="14.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (788 samples, 1.22%)</title><rect x="10.0" y="211.0" width="14.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.run (35,652 samples, 55.17%)</title><rect x="24.4" y="275.0" width="651.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.4" y="286.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$7 (35,652 samples, 55.17%)</title><rect x="24.4" y="259.0" width="651.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.4" y="270.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$7</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4,747 samples, 7.35%)</title><rect x="24.4" y="243.0" width="86.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.4" y="254.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,348 samples, 5.18%)</title><rect x="24.4" y="227.0" width="61.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.4" y="238.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,369 samples, 3.67%)</title><rect x="24.4" y="211.0" width="43.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.4" y="222.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,369 samples, 3.67%)</title><rect x="24.4" y="195.0" width="43.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.4" y="206.0">one/..</text>
</g>
<g>
<title>byte[] (2,369 samples, 3.67%)</title><rect x="24.4" y="179.0" width="43.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="27.4" y="190.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (979 samples, 1.51%)</title><rect x="67.7" y="211.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.7" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (979 samples, 1.51%)</title><rect x="67.7" y="195.0" width="17.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="70.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,399 samples, 2.16%)</title><rect x="85.6" y="227.0" width="25.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.6" y="238.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,399 samples, 2.16%)</title><rect x="85.6" y="211.0" width="25.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.6" y="222.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,399 samples, 2.16%)</title><rect x="85.6" y="195.0" width="25.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.6" y="206.0">j..</text>
</g>
<g>
<title>java.lang.String (617 samples, 0.95%)</title><rect x="85.6" y="179.0" width="11.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (782 samples, 1.21%)</title><rect x="96.8" y="179.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.8" y="190.0"></text>
</g>
<g>
<title>byte[] (782 samples, 1.21%)</title><rect x="96.8" y="163.0" width="14.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="99.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$69/1047830724.exec (30,905 samples, 47.82%)</title><rect x="111.1" y="243.0" width="564.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.1" y="254.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$69/1047830724.exec</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$1 (30,905 samples, 47.82%)</title><rect x="111.1" y="227.0" width="564.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.1" y="238.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$1</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (30,905 samples, 47.82%)</title><rect x="111.1" y="211.0" width="564.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.1" y="222.0">ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes</text>
</g>
<g>
<title>java.lang.String[] (900 samples, 1.39%)</title><rect x="111.1" y="195.0" width="16.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="114.1" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (537 samples, 0.83%)</title><rect x="127.5" y="195.0" width="9.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="130.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (804 samples, 1.24%)</title><rect x="137.3" y="195.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (804 samples, 1.24%)</title><rect x="137.3" y="179.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (804 samples, 1.24%)</title><rect x="137.3" y="163.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (804 samples, 1.24%)</title><rect x="137.3" y="147.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.3" y="158.0"></text>
</g>
<g>
<title>byte[] (804 samples, 1.24%)</title><rect x="137.3" y="131.0" width="14.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="140.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (107 samples, 0.17%)</title><rect x="152.0" y="195.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1585787493.invoke (107 samples, 0.17%)</title><rect x="152.0" y="179.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (107 samples, 0.17%)</title><rect x="152.0" y="163.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (43 samples, 0.07%)</title><rect x="152.0" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.07%)</title><rect x="152.0" y="131.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="155.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (64 samples, 0.10%)</title><rect x="152.8" y="147.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (64 samples, 0.10%)</title><rect x="152.8" y="131.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.8" y="142.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.10%)</title><rect x="152.8" y="115.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="155.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,200 samples, 1.86%)</title><rect x="154.0" y="195.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.0" y="206.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,200 samples, 1.86%)</title><rect x="154.0" y="179.0" width="21.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.0" y="190.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,200 samples, 1.86%)</title><rect x="154.0" y="163.0" width="21.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="157.0" y="174.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.add (1,375 samples, 2.13%)</title><rect x="175.9" y="195.0" width="25.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.9" y="206.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.add (1,375 samples, 2.13%)</title><rect x="175.9" y="179.0" width="25.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.9" y="190.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.grow (1,375 samples, 2.13%)</title><rect x="175.9" y="163.0" width="25.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.9" y="174.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.grow (1,375 samples, 2.13%)</title><rect x="175.9" y="147.0" width="25.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.9" y="158.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,375 samples, 2.13%)</title><rect x="175.9" y="131.0" width="25.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.9" y="142.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (1,375 samples, 2.13%)</title><rect x="175.9" y="115.0" width="25.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="178.9" y="126.0">j..</text>
</g>
<g>
<title>one/nio/http/HttpClient.get (13,187 samples, 20.41%)</title><rect x="201.0" y="195.0" width="240.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.0" y="206.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (294 samples, 0.45%)</title><rect x="201.0" y="179.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.0" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (126 samples, 0.19%)</title><rect x="201.0" y="163.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="204.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (168 samples, 0.26%)</title><rect x="203.3" y="163.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (168 samples, 0.26%)</title><rect x="203.3" y="147.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="206.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,893 samples, 19.95%)</title><rect x="206.4" y="179.0" width="235.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.4" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,893 samples, 19.95%)</title><rect x="206.4" y="163.0" width="235.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.4" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (112 samples, 0.17%)</title><rect x="206.4" y="147.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="209.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (11,817 samples, 18.29%)</title><rect x="208.4" y="147.0" width="215.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.4" y="158.0">one/nio/http/HttpClient$Resp..</text>
</g>
<g>
<title>byte[] (11,537 samples, 17.85%)</title><rect x="208.4" y="131.0" width="210.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="211.4" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (280 samples, 0.43%)</title><rect x="419.1" y="131.0" width="5.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="422.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (713 samples, 1.10%)</title><rect x="424.2" y="147.0" width="13.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.2" y="158.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.04%)</title><rect x="424.2" y="131.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="427.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.03%)</title><rect x="424.6" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.03%)</title><rect x="424.6" y="115.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (612 samples, 0.95%)</title><rect x="425.1" y="131.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (612 samples, 0.95%)</title><rect x="425.1" y="115.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (612 samples, 0.95%)</title><rect x="425.1" y="99.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="428.1" y="110.0"></text>
</g>
<g>
<title>char[] (476 samples, 0.74%)</title><rect x="425.1" y="83.0" width="8.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="428.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.10%)</title><rect x="433.8" y="83.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="436.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (71 samples, 0.11%)</title><rect x="435.0" y="83.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.0" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (71 samples, 0.11%)</title><rect x="435.0" y="67.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.0" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (71 samples, 0.11%)</title><rect x="435.0" y="51.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.0" y="62.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.11%)</title><rect x="435.0" y="35.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="438.0" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.03%)</title><rect x="436.3" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.03%)</title><rect x="436.3" y="115.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="439.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (31 samples, 0.05%)</title><rect x="436.6" y="131.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.05%)</title><rect x="436.6" y="115.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.05%)</title><rect x="436.6" y="99.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.02%)</title><rect x="436.6" y="83.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="439.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.02%)</title><rect x="436.9" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.9" y="94.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.02%)</title><rect x="436.9" y="67.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="439.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (193 samples, 0.30%)</title><rect x="437.2" y="147.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (193 samples, 0.30%)</title><rect x="437.2" y="131.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.2" y="142.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.30%)</title><rect x="437.2" y="115.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="440.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (47 samples, 0.07%)</title><rect x="440.7" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.07%)</title><rect x="440.7" y="131.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.07%)</title><rect x="440.7" y="115.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.03%)</title><rect x="440.7" y="99.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="443.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.05%)</title><rect x="441.0" y="99.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.0" y="110.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.05%)</title><rect x="441.0" y="83.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="444.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (17 samples, 0.03%)</title><rect x="441.8" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (17 samples, 0.03%)</title><rect x="441.8" y="179.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="444.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueExternalResponse (3,668 samples, 5.68%)</title><rect x="442.1" y="195.0" width="67.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.1" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (499 samples, 0.77%)</title><rect x="442.1" y="179.0" width="9.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="445.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,245 samples, 3.47%)</title><rect x="451.2" y="179.0" width="41.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.2" y="190.0">one..</text>
</g>
<g>
<title>byte[] (906 samples, 1.40%)</title><rect x="451.2" y="163.0" width="16.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="454.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (807 samples, 1.25%)</title><rect x="467.8" y="163.0" width="14.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="470.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (532 samples, 0.82%)</title><rect x="482.5" y="163.0" width="9.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="485.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.syncReplicaValues (143 samples, 0.22%)</title><rect x="492.2" y="179.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (33 samples, 0.05%)</title><rect x="492.2" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (14 samples, 0.02%)</title><rect x="492.2" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.2" y="158.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (14 samples, 0.02%)</title><rect x="492.2" y="131.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="495.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (19 samples, 0.03%)</title><rect x="492.5" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.5" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (19 samples, 0.03%)</title><rect x="492.5" y="131.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="495.5" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (30 samples, 0.05%)</title><rect x="492.9" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.9" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (30 samples, 0.05%)</title><rect x="492.9" y="147.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="495.9" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (74 samples, 0.11%)</title><rect x="493.5" y="163.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.5" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (67 samples, 0.10%)</title><rect x="493.6" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (67 samples, 0.10%)</title><rect x="493.6" y="131.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (67 samples, 0.10%)</title><rect x="493.6" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (54 samples, 0.08%)</title><rect x="493.6" y="99.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.6" y="110.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (54 samples, 0.08%)</title><rect x="493.6" y="83.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (54 samples, 0.08%)</title><rect x="493.6" y="67.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.6" y="78.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (54 samples, 0.08%)</title><rect x="493.6" y="51.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="496.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytes (16 samples, 0.02%)</title><rect x="494.8" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.8" y="190.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.02%)</title><rect x="494.8" y="163.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="497.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (765 samples, 1.18%)</title><rect x="495.1" y="179.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="498.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (765 samples, 1.18%)</title><rect x="495.1" y="163.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.1" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (765 samples, 1.18%)</title><rect x="495.1" y="147.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.1" y="158.0"></text>
</g>
<g>
<title>byte[] (765 samples, 1.18%)</title><rect x="495.1" y="131.0" width="14.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="498.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalResponse (7,262 samples, 11.24%)</title><rect x="509.1" y="195.0" width="132.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.1" y="206.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one.nio.http.Response (575 samples, 0.89%)</title><rect x="509.1" y="179.0" width="10.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="512.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,232 samples, 3.45%)</title><rect x="519.6" y="179.0" width="40.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.6" y="190.0">one..</text>
</g>
<g>
<title>byte[] (801 samples, 1.24%)</title><rect x="519.6" y="163.0" width="14.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="522.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (901 samples, 1.39%)</title><rect x="534.2" y="163.0" width="16.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="537.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (530 samples, 0.82%)</title><rect x="550.7" y="163.0" width="9.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="553.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (3,695 samples, 5.72%)</title><rect x="560.3" y="179.0" width="67.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.3" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (2,676 samples, 4.14%)</title><rect x="560.3" y="163.0" width="48.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.3" y="174.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (744 samples, 1.15%)</title><rect x="560.3" y="147.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.3" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (744 samples, 1.15%)</title><rect x="560.3" y="131.0" width="13.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.3" y="142.0"></text>
</g>
<g>
<title>byte[] (744 samples, 1.15%)</title><rect x="560.3" y="115.0" width="13.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="563.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (1,932 samples, 2.99%)</title><rect x="573.9" y="147.0" width="35.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.9" y="158.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (1,932 samples, 2.99%)</title><rect x="573.9" y="131.0" width="35.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.9" y="142.0">ru/..</text>
</g>
<g>
<title>byte[] (768 samples, 1.19%)</title><rect x="573.9" y="115.0" width="14.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="576.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,164 samples, 1.80%)</title><rect x="587.9" y="115.0" width="21.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.9" y="126.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,164 samples, 1.80%)</title><rect x="587.9" y="99.0" width="21.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="590.9" y="110.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (1,019 samples, 1.58%)</title><rect x="609.2" y="163.0" width="18.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,019 samples, 1.58%)</title><rect x="609.2" y="147.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.2" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,019 samples, 1.58%)</title><rect x="609.2" y="131.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.2" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,019 samples, 1.58%)</title><rect x="609.2" y="115.0" width="18.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="612.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (760 samples, 1.18%)</title><rect x="627.8" y="179.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (760 samples, 1.18%)</title><rect x="627.8" y="163.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.8" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (760 samples, 1.18%)</title><rect x="627.8" y="147.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.8" y="158.0"></text>
</g>
<g>
<title>byte[] (760 samples, 1.18%)</title><rect x="627.8" y="131.0" width="13.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="630.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (1,848 samples, 2.86%)</title><rect x="641.7" y="195.0" width="33.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.7" y="206.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,087 samples, 1.68%)</title><rect x="641.7" y="179.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,087 samples, 1.68%)</title><rect x="641.7" y="163.0" width="19.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.7" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,087 samples, 1.68%)</title><rect x="641.7" y="147.0" width="19.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="644.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.Value (761 samples, 1.18%)</title><rect x="661.5" y="179.0" width="13.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="664.5" y="190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (28,180 samples, 43.61%)</title><rect x="675.4" y="323.0" width="514.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.4" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (663 samples, 1.03%)</title><rect x="675.4" y="307.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.4" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (663 samples, 1.03%)</title><rect x="675.4" y="291.0" width="12.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="678.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (27,517 samples, 42.58%)</title><rect x="687.5" y="307.0" width="502.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.5" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27,517 samples, 42.58%)</title><rect x="687.5" y="291.0" width="502.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.5" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27,517 samples, 42.58%)</title><rect x="687.5" y="275.0" width="502.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.5" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,217 samples, 14.26%)</title><rect x="687.5" y="259.0" width="168.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.5" y="270.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,217 samples, 14.26%)</title><rect x="687.5" y="243.0" width="168.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.5" y="254.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (7,291 samples, 11.28%)</title><rect x="687.5" y="227.0" width="133.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.5" y="238.0">RequestHandler1_e..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2,092 samples, 3.24%)</title><rect x="687.5" y="211.0" width="38.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.5" y="222.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,092 samples, 3.24%)</title><rect x="687.5" y="195.0" width="38.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.5" y="206.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (2,092 samples, 3.24%)</title><rect x="687.5" y="179.0" width="38.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.5" y="190.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,092 samples, 3.24%)</title><rect x="687.5" y="163.0" width="38.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.5" y="174.0">jav..</text>
</g>
<g>
<title>java.lang.String (872 samples, 1.35%)</title><rect x="687.5" y="147.0" width="16.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="690.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,220 samples, 1.89%)</title><rect x="703.5" y="147.0" width="22.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.5" y="158.0">j..</text>
</g>
<g>
<title>byte[] (1,220 samples, 1.89%)</title><rect x="703.5" y="131.0" width="22.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="706.5" y="142.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (5,199 samples, 8.05%)</title><rect x="725.7" y="211.0" width="95.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.7" y="222.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,230 samples, 1.90%)</title><rect x="725.7" y="195.0" width="22.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.7" y="206.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,230 samples, 1.90%)</title><rect x="725.7" y="179.0" width="22.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.7" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,230 samples, 1.90%)</title><rect x="725.7" y="163.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.7" y="174.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,230 samples, 1.90%)</title><rect x="725.7" y="147.0" width="22.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.7" y="158.0">j..</text>
</g>
<g>
<title>byte[] (1,230 samples, 1.90%)</title><rect x="725.7" y="131.0" width="22.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="728.7" y="142.0">b..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/754095337.linkToTargetMethod (1,094 samples, 1.69%)</title><rect x="748.2" y="195.0" width="20.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/790308207.invokeStatic (1,094 samples, 1.69%)</title><rect x="748.2" y="179.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$69/1047830724.get$Lambda (1,094 samples, 1.69%)</title><rect x="748.2" y="163.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$69 (1,094 samples, 1.69%)</title><rect x="748.2" y="147.0" width="20.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="751.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (752 samples, 1.16%)</title><rect x="768.2" y="195.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (752 samples, 1.16%)</title><rect x="768.2" y="179.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (752 samples, 1.16%)</title><rect x="768.2" y="163.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (502 samples, 0.78%)</title><rect x="768.2" y="147.0" width="9.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="771.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (250 samples, 0.39%)</title><rect x="777.3" y="147.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.3" y="158.0"></text>
</g>
<g>
<title>byte[] (250 samples, 0.39%)</title><rect x="777.3" y="131.0" width="4.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="780.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (1,228 samples, 1.90%)</title><rect x="781.9" y="195.0" width="22.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.9" y="206.0">r..</text>
</g>
<g>
<title>byte[] (1,228 samples, 1.90%)</title><rect x="781.9" y="179.0" width="22.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="784.9" y="190.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (895 samples, 1.38%)</title><rect x="804.3" y="195.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (894 samples, 1.38%)</title><rect x="804.3" y="179.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (894 samples, 1.38%)</title><rect x="804.3" y="163.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$68/2145359531.get$Lambda (894 samples, 1.38%)</title><rect x="804.3" y="147.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$68 (894 samples, 1.38%)</title><rect x="804.3" y="131.0" width="16.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="807.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,926 samples, 2.98%)</title><rect x="820.7" y="227.0" width="35.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.7" y="238.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,926 samples, 2.98%)</title><rect x="820.7" y="211.0" width="35.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.7" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,926 samples, 2.98%)</title><rect x="820.7" y="195.0" width="35.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.7" y="206.0">jav..</text>
</g>
<g>
<title>java.lang.String (773 samples, 1.20%)</title><rect x="820.7" y="179.0" width="14.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="823.7" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,153 samples, 1.78%)</title><rect x="834.8" y="179.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.8" y="190.0">j..</text>
</g>
<g>
<title>byte[] (1,153 samples, 1.78%)</title><rect x="834.8" y="163.0" width="21.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="837.8" y="174.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9,697 samples, 15.01%)</title><rect x="855.8" y="259.0" width="177.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.8" y="270.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one.nio.http.Request (1,406 samples, 2.18%)</title><rect x="855.8" y="243.0" width="25.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="858.8" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,069 samples, 4.75%)</title><rect x="881.5" y="243.0" width="56.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.5" y="254.0">one/ni..</text>
</g>
<g>
<title>java.lang.String[] (3,069 samples, 4.75%)</title><rect x="881.5" y="227.0" width="56.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="884.5" y="238.0">java.l..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,222 samples, 8.08%)</title><rect x="937.6" y="243.0" width="95.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.6" y="254.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,222 samples, 8.08%)</title><rect x="937.6" y="227.0" width="95.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.6" y="238.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (2,850 samples, 4.41%)</title><rect x="937.6" y="211.0" width="52.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="940.6" y="222.0">char[]</text>
</g>
<g>
<title>java.lang.String (824 samples, 1.28%)</title><rect x="989.6" y="211.0" width="15.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="992.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,548 samples, 2.40%)</title><rect x="1004.6" y="211.0" width="28.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.6" y="222.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,548 samples, 2.40%)</title><rect x="1004.6" y="195.0" width="28.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.6" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,548 samples, 2.40%)</title><rect x="1004.6" y="179.0" width="28.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.6" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (1,548 samples, 2.40%)</title><rect x="1004.6" y="163.0" width="28.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1007.6" y="174.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,603 samples, 13.31%)</title><rect x="1032.9" y="259.0" width="157.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1035.9" y="270.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,603 samples, 13.31%)</title><rect x="1032.9" y="243.0" width="157.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.9" y="254.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (4,173 samples, 6.46%)</title><rect x="1032.9" y="227.0" width="76.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1035.9" y="238.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,539 samples, 2.38%)</title><rect x="1109.1" y="227.0" width="28.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1112.1" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,891 samples, 4.47%)</title><rect x="1137.2" y="227.0" width="52.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.2" y="238.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,891 samples, 4.47%)</title><rect x="1137.2" y="211.0" width="52.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.2" y="222.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,891 samples, 4.47%)</title><rect x="1137.2" y="195.0" width="52.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.2" y="206.0">java/..</text>
</g>
<g>
<title>byte[] (2,891 samples, 4.47%)</title><rect x="1137.2" y="179.0" width="52.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1140.2" y="190.0">byte[]</text>
</g>
</g>
</svg>
