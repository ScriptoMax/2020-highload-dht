<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">GET the newest contents in overwhelming requests (#4)</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (34,524 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (17,713 samples, 51.31%)</title><rect x="10.0" y="323.0" width="605.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,713 samples, 51.31%)</title><rect x="10.0" y="307.0" width="605.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,713 samples, 51.31%)</title><rect x="10.0" y="291.0" width="605.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (160 samples, 0.46%)</title><rect x="10.0" y="275.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (160 samples, 0.46%)</title><rect x="10.0" y="259.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (159 samples, 0.46%)</title><rect x="10.0" y="243.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (159 samples, 0.46%)</title><rect x="10.0" y="227.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (159 samples, 0.46%)</title><rect x="10.0" y="211.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run (17,553 samples, 50.84%)</title><rect x="15.5" y="275.0" width="599.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.5" y="286.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6 (17,553 samples, 50.84%)</title><rect x="15.5" y="259.0" width="599.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.5" y="270.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$runAsyncHandler$6</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,747 samples, 7.96%)</title><rect x="15.5" y="243.0" width="93.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.5" y="254.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,510 samples, 7.27%)</title><rect x="15.5" y="227.0" width="85.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.5" y="238.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,305 samples, 6.68%)</title><rect x="15.5" y="211.0" width="78.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.5" y="222.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,305 samples, 6.68%)</title><rect x="15.5" y="195.0" width="78.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.5" y="206.0">one/nio/u..</text>
</g>
<g>
<title>byte[] (2,305 samples, 6.68%)</title><rect x="15.5" y="179.0" width="78.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="18.5" y="190.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (205 samples, 0.59%)</title><rect x="94.3" y="211.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.3" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (205 samples, 0.59%)</title><rect x="94.3" y="195.0" width="7.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="97.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (237 samples, 0.69%)</title><rect x="101.3" y="227.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (237 samples, 0.69%)</title><rect x="101.3" y="211.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (237 samples, 0.69%)</title><rect x="101.3" y="195.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String (108 samples, 0.31%)</title><rect x="101.3" y="179.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="104.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (129 samples, 0.37%)</title><rect x="104.9" y="179.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.9" y="190.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.37%)</title><rect x="104.9" y="163.0" width="4.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="107.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.exec (14,806 samples, 42.89%)</title><rect x="109.4" y="243.0" width="506.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.4" y="254.0">ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/100780430..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$0 (14,806 samples, 42.89%)</title><rect x="109.4" y="227.0" width="506.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.4" y="238.0">ru/mail/polis/service/codearound/RepliServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (14,806 samples, 42.89%)</title><rect x="109.4" y="211.0" width="506.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.4" y="222.0">ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes</text>
</g>
<g>
<title>java.lang.String[] (1,093 samples, 3.17%)</title><rect x="109.4" y="195.0" width="37.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="112.4" y="206.0">jav..</text>
</g>
<g>
<title>java.util.ArrayList (93 samples, 0.27%)</title><rect x="146.7" y="195.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="149.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (119 samples, 0.34%)</title><rect x="149.9" y="195.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (119 samples, 0.34%)</title><rect x="149.9" y="179.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (119 samples, 0.34%)</title><rect x="149.9" y="163.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (119 samples, 0.34%)</title><rect x="149.9" y="147.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.9" y="158.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.34%)</title><rect x="149.9" y="131.0" width="4.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="152.9" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.12%)</title><rect x="154.0" y="195.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1730173572.invoke (42 samples, 0.12%)</title><rect x="154.0" y="179.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.12%)</title><rect x="154.0" y="163.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (36 samples, 0.10%)</title><rect x="154.2" y="147.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (36 samples, 0.10%)</title><rect x="154.2" y="131.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.2" y="142.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.10%)</title><rect x="154.2" y="115.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="157.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (338 samples, 0.98%)</title><rect x="155.4" y="195.0" width="11.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (338 samples, 0.98%)</title><rect x="155.4" y="179.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (338 samples, 0.98%)</title><rect x="155.4" y="163.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="158.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (338 samples, 0.98%)</title><rect x="155.4" y="147.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (338 samples, 0.98%)</title><rect x="155.4" y="131.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.4" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (338 samples, 0.98%)</title><rect x="155.4" y="115.0" width="11.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="158.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (4,378 samples, 12.68%)</title><rect x="167.0" y="195.0" width="149.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.0" y="206.0">one/nio/http/HttpCl..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (53 samples, 0.15%)</title><rect x="167.0" y="179.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.0" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.06%)</title><rect x="167.0" y="163.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="170.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (34 samples, 0.10%)</title><rect x="167.6" y="163.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.10%)</title><rect x="167.6" y="147.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="170.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4,325 samples, 12.53%)</title><rect x="168.8" y="179.0" width="147.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.8" y="190.0">one/nio/http/HttpCl..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (4,325 samples, 12.53%)</title><rect x="168.8" y="163.0" width="147.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.8" y="174.0">one/nio/http/HttpCl..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (37 samples, 0.11%)</title><rect x="168.8" y="147.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="171.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (3,240 samples, 9.38%)</title><rect x="170.0" y="147.0" width="110.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.0" y="158.0">one/nio/http/..</text>
</g>
<g>
<title>byte[] (3,169 samples, 9.18%)</title><rect x="170.0" y="131.0" width="108.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="173.0" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (71 samples, 0.21%)</title><rect x="278.3" y="131.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="281.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (920 samples, 2.66%)</title><rect x="280.8" y="147.0" width="31.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.8" y="158.0">on..</text>
</g>
<g>
<title>byte[] (338 samples, 0.98%)</title><rect x="280.8" y="131.0" width="11.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="283.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.09%)</title><rect x="292.3" y="131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.09%)</title><rect x="292.3" y="115.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.06%)</title><rect x="292.3" y="99.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="295.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.03%)</title><rect x="293.0" y="99.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.0" y="110.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.03%)</title><rect x="293.0" y="83.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="296.0" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.03%)</title><rect x="293.3" y="131.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="296.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (487 samples, 1.41%)</title><rect x="293.7" y="131.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (487 samples, 1.41%)</title><rect x="293.7" y="115.0" width="16.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.7" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (487 samples, 1.41%)</title><rect x="293.7" y="99.0" width="16.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.7" y="110.0"></text>
</g>
<g>
<title>char[] (409 samples, 1.18%)</title><rect x="293.7" y="83.0" width="14.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="296.7" y="94.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.10%)</title><rect x="307.7" y="83.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="310.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.13%)</title><rect x="308.8" y="83.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (45 samples, 0.13%)</title><rect x="308.8" y="67.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.8" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (45 samples, 0.13%)</title><rect x="308.8" y="51.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.8" y="62.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.13%)</title><rect x="308.8" y="35.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="311.8" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (38 samples, 0.11%)</title><rect x="310.4" y="131.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="313.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (38 samples, 0.11%)</title><rect x="310.4" y="115.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="313.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (16 samples, 0.05%)</title><rect x="311.7" y="131.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.05%)</title><rect x="311.7" y="115.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.05%)</title><rect x="311.7" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="311.7" y="83.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="314.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (58 samples, 0.17%)</title><rect x="312.2" y="147.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (58 samples, 0.17%)</title><rect x="312.2" y="131.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="315.2" y="142.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.17%)</title><rect x="312.2" y="115.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="315.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (48 samples, 0.14%)</title><rect x="314.2" y="147.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.14%)</title><rect x="314.2" y="131.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.14%)</title><rect x="314.2" y="115.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.05%)</title><rect x="314.2" y="99.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="317.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.09%)</title><rect x="314.8" y="99.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.8" y="110.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.09%)</title><rect x="314.8" y="83.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="317.8" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (22 samples, 0.06%)</title><rect x="315.8" y="147.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.8" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (22 samples, 0.06%)</title><rect x="315.8" y="131.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.8" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (22 samples, 0.06%)</title><rect x="315.8" y="115.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.8" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (22 samples, 0.06%)</title><rect x="315.8" y="99.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="318.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.getNodes (467 samples, 1.35%)</title><rect x="316.6" y="195.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (429 samples, 1.24%)</title><rect x="316.6" y="179.0" width="14.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="319.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.05%)</title><rect x="331.2" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.05%)</title><rect x="331.2" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.05%)</title><rect x="331.2" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.05%)</title><rect x="331.2" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.2" y="142.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="331.2" y="115.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="334.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.05%)</title><rect x="331.8" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.05%)</title><rect x="331.8" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.8" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (18 samples, 0.05%)</title><rect x="331.8" y="147.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="334.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueExternalResponse (2,191 samples, 6.35%)</title><rect x="332.5" y="195.0" width="74.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.5" y="206.0">ru/mail/..</text>
</g>
<g>
<title>one.nio.http.Response (137 samples, 0.40%)</title><rect x="332.5" y="179.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="335.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (521 samples, 1.51%)</title><rect x="337.2" y="179.0" width="17.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.2" y="190.0"></text>
</g>
<g>
<title>byte[] (257 samples, 0.74%)</title><rect x="337.2" y="163.0" width="8.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="340.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (158 samples, 0.46%)</title><rect x="346.0" y="163.0" width="5.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="349.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (106 samples, 0.31%)</title><rect x="351.4" y="163.0" width="3.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="354.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.syncReplicaValues (134 samples, 0.39%)</title><rect x="355.0" y="179.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.0" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (97 samples, 0.28%)</title><rect x="355.0" y="163.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="358.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (81 samples, 0.23%)</title><rect x="355.0" y="147.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.0" y="158.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (81 samples, 0.23%)</title><rect x="355.0" y="131.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="358.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.05%)</title><rect x="357.8" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.8" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.05%)</title><rect x="357.8" y="131.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="360.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (12 samples, 0.03%)</title><rect x="358.6" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.6" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (12 samples, 0.03%)</title><rect x="358.6" y="147.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="361.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (19 samples, 0.06%)</title><rect x="359.0" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (16 samples, 0.05%)</title><rect x="359.1" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.04%)</title><rect x="359.1" y="131.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (13 samples, 0.04%)</title><rect x="359.1" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytes (180 samples, 0.52%)</title><rect x="359.6" y="179.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.6" y="190.0"></text>
</g>
<g>
<title>byte[] (180 samples, 0.52%)</title><rect x="359.6" y="163.0" width="6.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="362.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (1,219 samples, 3.53%)</title><rect x="365.8" y="179.0" width="41.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.8" y="190.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,219 samples, 3.53%)</title><rect x="365.8" y="163.0" width="41.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.8" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,219 samples, 3.53%)</title><rect x="365.8" y="147.0" width="41.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.8" y="158.0">jav..</text>
</g>
<g>
<title>byte[] (1,219 samples, 3.53%)</title><rect x="365.8" y="131.0" width="41.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="368.8" y="142.0">byt..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceUtils.issueInternalResponse (5,338 samples, 15.46%)</title><rect x="407.4" y="195.0" width="182.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.4" y="206.0">ru/mail/polis/service/co..</text>
</g>
<g>
<title>one.nio.http.Response (147 samples, 0.43%)</title><rect x="407.4" y="179.0" width="5.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="410.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (507 samples, 1.47%)</title><rect x="412.5" y="179.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.5" y="190.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.56%)</title><rect x="412.5" y="163.0" width="6.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="415.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (195 samples, 0.56%)</title><rect x="419.1" y="163.0" width="6.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="422.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.34%)</title><rect x="425.7" y="163.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="428.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (2,409 samples, 6.98%)</title><rect x="429.8" y="179.0" width="82.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.8" y="190.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (2,185 samples, 6.33%)</title><rect x="429.8" y="163.0" width="74.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.8" y="174.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,458 samples, 4.22%)</title><rect x="429.8" y="147.0" width="49.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.8" y="158.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,458 samples, 4.22%)</title><rect x="429.8" y="131.0" width="49.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.8" y="142.0">org/r..</text>
</g>
<g>
<title>byte[] (1,458 samples, 4.22%)</title><rect x="429.8" y="115.0" width="49.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="432.8" y="126.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (727 samples, 2.11%)</title><rect x="479.6" y="147.0" width="24.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.6" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (727 samples, 2.11%)</title><rect x="479.6" y="131.0" width="24.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.6" y="142.0">r..</text>
</g>
<g>
<title>byte[] (134 samples, 0.39%)</title><rect x="479.6" y="115.0" width="4.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="482.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (593 samples, 1.72%)</title><rect x="484.2" y="115.0" width="20.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.2" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (593 samples, 1.72%)</title><rect x="484.2" y="99.0" width="20.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="487.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (224 samples, 0.65%)</title><rect x="504.5" y="163.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (224 samples, 0.65%)</title><rect x="504.5" y="147.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (224 samples, 0.65%)</title><rect x="504.5" y="131.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (224 samples, 0.65%)</title><rect x="504.5" y="115.0" width="7.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="507.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (2,275 samples, 6.59%)</title><rect x="512.1" y="179.0" width="77.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.1" y="190.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,001 samples, 5.80%)</title><rect x="512.1" y="163.0" width="68.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.1" y="174.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (234 samples, 0.68%)</title><rect x="512.1" y="147.0" width="8.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="515.1" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,767 samples, 5.12%)</title><rect x="520.1" y="147.0" width="60.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.1" y="158.0">java/n..</text>
</g>
<g>
<title>byte[] (1,767 samples, 5.12%)</title><rect x="520.1" y="131.0" width="60.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="523.1" y="142.0">byte[]</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (274 samples, 0.79%)</title><rect x="580.5" y="163.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.5" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (274 samples, 0.79%)</title><rect x="580.5" y="147.0" width="9.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="583.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (747 samples, 2.16%)</title><rect x="589.9" y="195.0" width="25.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.9" y="206.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (330 samples, 0.96%)</title><rect x="589.9" y="179.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (330 samples, 0.96%)</title><rect x="589.9" y="163.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.9" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (330 samples, 0.96%)</title><rect x="589.9" y="147.0" width="11.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="592.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.Value (417 samples, 1.21%)</title><rect x="601.2" y="179.0" width="14.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="604.2" y="190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16,811 samples, 48.69%)</title><rect x="615.4" y="323.0" width="574.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.4" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (423 samples, 1.23%)</title><rect x="615.4" y="307.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.4" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (423 samples, 1.23%)</title><rect x="615.4" y="291.0" width="14.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="618.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (16,388 samples, 47.47%)</title><rect x="629.9" y="307.0" width="560.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.9" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (16,388 samples, 47.47%)</title><rect x="629.9" y="291.0" width="560.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.9" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16,388 samples, 47.47%)</title><rect x="629.9" y="275.0" width="560.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.9" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,646 samples, 16.35%)</title><rect x="629.9" y="259.0" width="192.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.9" y="270.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,646 samples, 16.35%)</title><rect x="629.9" y="243.0" width="192.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.9" y="254.0">one/nio/http/HttpServer.h..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,002 samples, 11.59%)</title><rect x="629.9" y="227.0" width="136.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.9" y="238.0">RequestHandler1_e..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,289 samples, 3.73%)</title><rect x="629.9" y="211.0" width="44.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.9" y="222.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,289 samples, 3.73%)</title><rect x="629.9" y="195.0" width="44.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.9" y="206.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (1,289 samples, 3.73%)</title><rect x="629.9" y="179.0" width="44.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.9" y="190.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,289 samples, 3.73%)</title><rect x="629.9" y="163.0" width="44.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.9" y="174.0">java..</text>
</g>
<g>
<title>java.lang.String (530 samples, 1.54%)</title><rect x="629.9" y="147.0" width="18.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="632.9" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (759 samples, 2.20%)</title><rect x="648.0" y="147.0" width="25.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.0" y="158.0">j..</text>
</g>
<g>
<title>byte[] (759 samples, 2.20%)</title><rect x="648.0" y="131.0" width="25.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="651.0" y="142.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (2,713 samples, 7.86%)</title><rect x="673.9" y="211.0" width="92.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.9" y="222.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.getBytes (855 samples, 2.48%)</title><rect x="673.9" y="195.0" width="29.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.9" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (855 samples, 2.48%)</title><rect x="673.9" y="179.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.9" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (855 samples, 2.48%)</title><rect x="673.9" y="163.0" width="29.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.9" y="174.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (855 samples, 2.48%)</title><rect x="673.9" y="147.0" width="29.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.9" y="158.0">ja..</text>
</g>
<g>
<title>byte[] (855 samples, 2.48%)</title><rect x="673.9" y="131.0" width="29.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="676.9" y="142.0">by..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/737645283.linkToTargetMethod (708 samples, 2.05%)</title><rect x="703.2" y="195.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.2" y="206.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/920798542.invokeStatic (708 samples, 2.05%)</title><rect x="703.2" y="179.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.2" y="190.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$76/1007804300.get$Lambda (708 samples, 2.05%)</title><rect x="703.2" y="163.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.2" y="174.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$76 (708 samples, 2.05%)</title><rect x="703.2" y="147.0" width="24.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="706.2" y="158.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (553 samples, 1.60%)</title><rect x="727.4" y="195.0" width="18.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (553 samples, 1.60%)</title><rect x="727.4" y="179.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (553 samples, 1.60%)</title><rect x="727.4" y="163.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (326 samples, 0.94%)</title><rect x="727.4" y="147.0" width="11.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="730.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (227 samples, 0.66%)</title><rect x="738.5" y="147.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.5" y="158.0"></text>
</g>
<g>
<title>byte[] (227 samples, 0.66%)</title><rect x="738.5" y="131.0" width="7.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="741.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.runAsyncHandler (597 samples, 1.73%)</title><rect x="746.3" y="195.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="749.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (597 samples, 1.73%)</title><rect x="746.3" y="179.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (597 samples, 1.73%)</title><rect x="746.3" y="163.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl$$Lambda$75/1280889908.get$Lambda (597 samples, 1.73%)</title><rect x="746.3" y="147.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.RepliServiceImpl$$Lambda$75 (597 samples, 1.73%)</title><rect x="746.3" y="131.0" width="20.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="749.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,644 samples, 4.76%)</title><rect x="766.7" y="227.0" width="56.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.7" y="238.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.substring (1,644 samples, 4.76%)</title><rect x="766.7" y="211.0" width="56.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.7" y="222.0">java/l..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,644 samples, 4.76%)</title><rect x="766.7" y="195.0" width="56.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.7" y="206.0">java/l..</text>
</g>
<g>
<title>java.lang.String (609 samples, 1.76%)</title><rect x="766.7" y="179.0" width="20.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="769.7" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,035 samples, 3.00%)</title><rect x="787.5" y="179.0" width="35.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.5" y="190.0">jav..</text>
</g>
<g>
<title>byte[] (1,035 samples, 3.00%)</title><rect x="787.5" y="163.0" width="35.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="790.5" y="174.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6,383 samples, 18.49%)</title><rect x="822.8" y="259.0" width="218.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.8" y="270.0">one/nio/http/HttpSession.pars..</text>
</g>
<g>
<title>one.nio.http.Request (1,210 samples, 3.50%)</title><rect x="822.8" y="243.0" width="41.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="825.8" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,036 samples, 5.90%)</title><rect x="864.2" y="243.0" width="69.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.2" y="254.0">one/nio..</text>
</g>
<g>
<title>java.lang.String[] (2,036 samples, 5.90%)</title><rect x="864.2" y="227.0" width="69.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="867.2" y="238.0">java.la..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,137 samples, 9.09%)</title><rect x="933.8" y="243.0" width="107.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="936.8" y="254.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,137 samples, 9.09%)</title><rect x="933.8" y="227.0" width="107.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.8" y="238.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (1,617 samples, 4.68%)</title><rect x="933.8" y="211.0" width="55.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="936.8" y="222.0">char[]</text>
</g>
<g>
<title>java.lang.String (488 samples, 1.41%)</title><rect x="989.1" y="211.0" width="16.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="992.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,032 samples, 2.99%)</title><rect x="1005.7" y="211.0" width="35.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1008.7" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,032 samples, 2.99%)</title><rect x="1005.7" y="195.0" width="35.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.7" y="206.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,032 samples, 2.99%)</title><rect x="1005.7" y="179.0" width="35.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.7" y="190.0">jav..</text>
</g>
<g>
<title>byte[] (1,032 samples, 2.99%)</title><rect x="1005.7" y="163.0" width="35.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1008.7" y="174.0">byt..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,359 samples, 12.63%)</title><rect x="1041.0" y="259.0" width="149.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.0" y="270.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,359 samples, 12.63%)</title><rect x="1041.0" y="243.0" width="149.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.0" y="254.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>char[] (2,237 samples, 6.48%)</title><rect x="1041.0" y="227.0" width="76.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1044.0" y="238.0">char[]</text>
</g>
<g>
<title>java.lang.String (803 samples, 2.33%)</title><rect x="1117.5" y="227.0" width="27.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1120.5" y="238.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,319 samples, 3.82%)</title><rect x="1144.9" y="227.0" width="45.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.9" y="238.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,319 samples, 3.82%)</title><rect x="1144.9" y="211.0" width="45.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.9" y="222.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,319 samples, 3.82%)</title><rect x="1144.9" y="195.0" width="45.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1147.9" y="206.0">java..</text>
</g>
<g>
<title>byte[] (1,319 samples, 3.82%)</title><rect x="1144.9" y="179.0" width="45.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1147.9" y="190.0">byte[]</text>
</g>
</g>
</svg>
