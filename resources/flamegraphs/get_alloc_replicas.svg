<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Replication control | RAM</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (35,170 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35,170 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (528 samples, 1.50%)</title><rect x="10.0" y="323.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (528 samples, 1.50%)</title><rect x="10.0" y="307.0" width="17.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34,642 samples, 98.50%)</title><rect x="27.7" y="323.0" width="1162.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.7" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34,642 samples, 98.50%)</title><rect x="27.7" y="307.0" width="1162.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.7" y="318.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34,642 samples, 98.50%)</title><rect x="27.7" y="291.0" width="1162.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.7" y="302.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28,193 samples, 80.16%)</title><rect x="27.7" y="275.0" width="945.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.7" y="286.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28,193 samples, 80.16%)</title><rect x="27.7" y="259.0" width="945.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.7" y="270.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (27,530 samples, 78.28%)</title><rect x="27.7" y="243.0" width="923.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.7" y="254.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (563 samples, 1.60%)</title><rect x="27.7" y="227.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (563 samples, 1.60%)</title><rect x="27.7" y="211.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (563 samples, 1.60%)</title><rect x="27.7" y="195.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (563 samples, 1.60%)</title><rect x="27.7" y="179.0" width="18.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (294 samples, 0.84%)</title><rect x="27.7" y="163.0" width="9.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="30.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (269 samples, 0.76%)</title><rect x="37.6" y="163.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.6" y="174.0"></text>
</g>
<g>
<title>byte[] (269 samples, 0.76%)</title><rect x="37.6" y="147.0" width="9.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="40.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (26,967 samples, 76.68%)</title><rect x="46.6" y="227.0" width="904.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.6" y="238.0">ru/mail/polis/service/codearound/RepliServiceImpl.entity</text>
</g>
<g>
<title>java/lang/String.getBytes (376 samples, 1.07%)</title><rect x="46.6" y="211.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (376 samples, 1.07%)</title><rect x="46.6" y="195.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (376 samples, 1.07%)</title><rect x="46.6" y="179.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (376 samples, 1.07%)</title><rect x="46.6" y="163.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.6" y="174.0"></text>
</g>
<g>
<title>byte[] (376 samples, 1.07%)</title><rect x="46.6" y="147.0" width="12.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="49.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,033 samples, 5.78%)</title><rect x="59.2" y="211.0" width="68.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.2" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,373 samples, 3.90%)</title><rect x="59.2" y="195.0" width="46.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.2" y="206.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (901 samples, 2.56%)</title><rect x="59.2" y="179.0" width="30.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.2" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (901 samples, 2.56%)</title><rect x="59.2" y="163.0" width="30.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.2" y="174.0">on..</text>
</g>
<g>
<title>byte[] (901 samples, 2.56%)</title><rect x="59.2" y="147.0" width="30.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="62.2" y="158.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (472 samples, 1.34%)</title><rect x="89.4" y="179.0" width="15.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.4" y="190.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (472 samples, 1.34%)</title><rect x="89.4" y="163.0" width="15.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="92.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (660 samples, 1.88%)</title><rect x="105.3" y="195.0" width="22.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.3" y="206.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (660 samples, 1.88%)</title><rect x="105.3" y="179.0" width="22.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.3" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (660 samples, 1.88%)</title><rect x="105.3" y="163.0" width="22.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.3" y="174.0">j..</text>
</g>
<g>
<title>java.lang.String (181 samples, 0.51%)</title><rect x="105.3" y="147.0" width="6.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="108.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (479 samples, 1.36%)</title><rect x="111.4" y="147.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.4" y="158.0"></text>
</g>
<g>
<title>byte[] (479 samples, 1.36%)</title><rect x="111.4" y="131.0" width="16.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="114.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (517 samples, 1.47%)</title><rect x="127.4" y="211.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (517 samples, 1.47%)</title><rect x="127.4" y="195.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (517 samples, 1.47%)</title><rect x="127.4" y="179.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (324 samples, 0.92%)</title><rect x="127.4" y="163.0" width="10.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="130.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (193 samples, 0.55%)</title><rect x="138.3" y="163.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.3" y="174.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.55%)</title><rect x="138.3" y="147.0" width="6.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="141.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (418 samples, 1.19%)</title><rect x="144.8" y="211.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.8" y="222.0"></text>
</g>
<g>
<title>byte[] (418 samples, 1.19%)</title><rect x="144.8" y="195.0" width="14.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="147.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.getWithMultipleNodes (23,623 samples, 67.17%)</title><rect x="158.8" y="211.0" width="792.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.8" y="222.0">ru/mail/polis/service/codearound/RepliServiceImpl.getWithMultipleNodes</text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.03%)</title><rect x="158.8" y="195.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="161.8" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (317 samples, 0.90%)</title><rect x="159.1" y="195.0" width="10.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="162.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (666 samples, 1.89%)</title><rect x="169.7" y="195.0" width="22.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.7" y="206.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (666 samples, 1.89%)</title><rect x="169.7" y="179.0" width="22.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.7" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (666 samples, 1.89%)</title><rect x="169.7" y="163.0" width="22.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.7" y="174.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (666 samples, 1.89%)</title><rect x="169.7" y="147.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.7" y="158.0">j..</text>
</g>
<g>
<title>byte[] (666 samples, 1.89%)</title><rect x="169.7" y="131.0" width="22.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="172.7" y="142.0">b..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.03%)</title><rect x="192.1" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1822971466.invoke (12 samples, 0.03%)</title><rect x="192.1" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.03%)</title><rect x="192.1" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.03%)</title><rect x="192.2" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.03%)</title><rect x="192.2" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.2" y="142.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="192.2" y="115.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="195.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (565 samples, 1.61%)</title><rect x="192.5" y="195.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.5" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (565 samples, 1.61%)</title><rect x="192.5" y="179.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.5" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (565 samples, 1.61%)</title><rect x="192.5" y="163.0" width="18.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (565 samples, 1.61%)</title><rect x="192.5" y="147.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (565 samples, 1.61%)</title><rect x="192.5" y="131.0" width="18.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.5" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (565 samples, 1.61%)</title><rect x="192.5" y="115.0" width="18.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="195.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (14,484 samples, 41.18%)</title><rect x="211.4" y="195.0" width="486.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.4" y="206.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (30 samples, 0.09%)</title><rect x="211.4" y="179.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.4" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (15 samples, 0.04%)</title><rect x="211.4" y="163.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="214.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.04%)</title><rect x="211.9" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="214.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.04%)</title><rect x="211.9" y="147.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="214.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (14,454 samples, 41.10%)</title><rect x="212.4" y="179.0" width="485.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.4" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (14,454 samples, 41.10%)</title><rect x="212.4" y="163.0" width="485.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.4" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (43 samples, 0.12%)</title><rect x="212.4" y="147.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="215.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (12,782 samples, 36.34%)</title><rect x="213.9" y="147.0" width="428.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.9" y="158.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (11,794 samples, 33.53%)</title><rect x="213.9" y="131.0" width="395.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="216.9" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (988 samples, 2.81%)</title><rect x="609.6" y="131.0" width="33.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="612.6" y="142.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1,556 samples, 4.42%)</title><rect x="642.7" y="147.0" width="52.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.7" y="158.0">one/n..</text>
</g>
<g>
<title>byte[] (22 samples, 0.06%)</title><rect x="642.7" y="131.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="645.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.11%)</title><rect x="643.5" y="131.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.11%)</title><rect x="643.5" y="115.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.06%)</title><rect x="643.5" y="99.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="646.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.06%)</title><rect x="644.2" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.2" y="110.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.06%)</title><rect x="644.2" y="83.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="647.2" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.05%)</title><rect x="644.8" y="131.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="647.8" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1,412 samples, 4.01%)</title><rect x="645.5" y="131.0" width="47.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.5" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,412 samples, 4.01%)</title><rect x="645.5" y="115.0" width="47.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.5" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,412 samples, 4.01%)</title><rect x="645.5" y="99.0" width="47.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.5" y="110.0">one/..</text>
</g>
<g>
<title>char[] (1,259 samples, 3.58%)</title><rect x="645.5" y="83.0" width="42.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="648.5" y="94.0">char[]</text>
</g>
<g>
<title>java.lang.String (70 samples, 0.20%)</title><rect x="687.7" y="83.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="690.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (83 samples, 0.24%)</title><rect x="690.1" y="83.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (83 samples, 0.24%)</title><rect x="690.1" y="67.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (83 samples, 0.24%)</title><rect x="690.1" y="51.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.1" y="62.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.24%)</title><rect x="690.1" y="35.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="693.1" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (28 samples, 0.08%)</title><rect x="692.8" y="131.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 0.08%)</title><rect x="692.8" y="115.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="695.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (35 samples, 0.10%)</title><rect x="693.8" y="131.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.10%)</title><rect x="693.8" y="115.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.10%)</title><rect x="693.8" y="99.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.06%)</title><rect x="693.8" y="83.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="696.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.04%)</title><rect x="694.4" y="83.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.4" y="94.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.04%)</title><rect x="694.4" y="67.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="697.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (42 samples, 0.12%)</title><rect x="695.0" y="147.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.0" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (42 samples, 0.12%)</title><rect x="695.0" y="131.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.0" y="142.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.12%)</title><rect x="695.0" y="115.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="698.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (24 samples, 0.07%)</title><rect x="696.4" y="147.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.07%)</title><rect x="696.4" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.07%)</title><rect x="696.4" y="115.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="696.4" y="99.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="699.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.04%)</title><rect x="696.7" y="99.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.7" y="110.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="696.7" y="83.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="699.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/NodeReplicaUtils.getNodeReplica (274 samples, 0.78%)</title><rect x="697.4" y="195.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (271 samples, 0.77%)</title><rect x="697.4" y="179.0" width="9.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="700.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/NodeReplicaUtils.issueExternalResponse (2,783 samples, 7.91%)</title><rect x="706.6" y="195.0" width="93.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.6" y="206.0">ru/mail/pol..</text>
</g>
<g>
<title>one.nio.http.Response (175 samples, 0.50%)</title><rect x="706.6" y="179.0" width="5.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="709.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,021 samples, 2.90%)</title><rect x="712.5" y="179.0" width="34.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.5" y="190.0">on..</text>
</g>
<g>
<title>byte[] (450 samples, 1.28%)</title><rect x="712.5" y="163.0" width="15.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="715.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (293 samples, 0.83%)</title><rect x="727.6" y="163.0" width="9.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="730.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (278 samples, 0.79%)</title><rect x="737.4" y="163.0" width="9.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="740.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/NodeReplicaUtils.syncReplicaValues (30 samples, 0.09%)</title><rect x="746.7" y="179.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.7" y="190.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.04%)</title><rect x="746.7" y="163.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.7" y="174.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.02%)</title><rect x="746.9" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.9" y="158.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.02%)</title><rect x="746.9" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="749.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (10 samples, 0.03%)</title><rect x="747.4" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.4" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (9 samples, 0.03%)</title><rect x="747.4" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytes (26 samples, 0.07%)</title><rect x="747.7" y="179.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.7" y="190.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.07%)</title><rect x="747.7" y="163.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="750.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (1,531 samples, 4.35%)</title><rect x="748.6" y="179.0" width="51.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.6" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (866 samples, 2.46%)</title><rect x="748.6" y="163.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.6" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (449 samples, 1.28%)</title><rect x="748.6" y="147.0" width="15.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="751.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (417 samples, 1.19%)</title><rect x="763.7" y="147.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.7" y="158.0"></text>
</g>
<g>
<title>byte[] (417 samples, 1.19%)</title><rect x="763.7" y="131.0" width="14.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="766.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (665 samples, 1.89%)</title><rect x="777.7" y="163.0" width="22.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.7" y="174.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (665 samples, 1.89%)</title><rect x="777.7" y="147.0" width="22.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="780.7" y="158.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/NodeReplicaUtils.issueInternalResponse (3,457 samples, 9.83%)</title><rect x="800.0" y="195.0" width="116.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.0" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>one.nio.http.Response (188 samples, 0.53%)</title><rect x="800.0" y="179.0" width="6.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="803.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,085 samples, 3.09%)</title><rect x="806.3" y="179.0" width="36.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.3" y="190.0">one..</text>
</g>
<g>
<title>byte[] (436 samples, 1.24%)</title><rect x="806.3" y="163.0" width="14.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="809.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (397 samples, 1.13%)</title><rect x="820.9" y="163.0" width="13.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="823.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (252 samples, 0.72%)</title><rect x="834.2" y="163.0" width="8.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="837.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (1,764 samples, 5.02%)</title><rect x="842.7" y="179.0" width="59.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.7" y="190.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (1,194 samples, 3.39%)</title><rect x="842.7" y="163.0" width="40.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.7" y="174.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (387 samples, 1.10%)</title><rect x="842.7" y="147.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.7" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (387 samples, 1.10%)</title><rect x="842.7" y="131.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.7" y="142.0"></text>
</g>
<g>
<title>byte[] (387 samples, 1.10%)</title><rect x="842.7" y="115.0" width="13.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="845.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (807 samples, 2.29%)</title><rect x="855.7" y="147.0" width="27.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.7" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (807 samples, 2.29%)</title><rect x="855.7" y="131.0" width="27.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.7" y="142.0">r..</text>
</g>
<g>
<title>byte[] (275 samples, 0.78%)</title><rect x="855.7" y="115.0" width="9.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="858.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (532 samples, 1.51%)</title><rect x="864.9" y="115.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (532 samples, 1.51%)</title><rect x="864.9" y="99.0" width="17.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="867.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (570 samples, 1.62%)</title><rect x="882.7" y="163.0" width="19.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (570 samples, 1.62%)</title><rect x="882.7" y="147.0" width="19.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.7" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (570 samples, 1.62%)</title><rect x="882.7" y="131.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="885.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (570 samples, 1.62%)</title><rect x="882.7" y="115.0" width="19.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="885.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (420 samples, 1.19%)</title><rect x="901.9" y="179.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (420 samples, 1.19%)</title><rect x="901.9" y="163.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.9" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (420 samples, 1.19%)</title><rect x="901.9" y="147.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.9" y="158.0"></text>
</g>
<g>
<title>byte[] (420 samples, 1.19%)</title><rect x="901.9" y="131.0" width="14.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="904.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (1,056 samples, 3.00%)</title><rect x="916.0" y="195.0" width="35.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.0" y="206.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (546 samples, 1.55%)</title><rect x="916.0" y="179.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (546 samples, 1.55%)</title><rect x="916.0" y="163.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.0" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (546 samples, 1.55%)</title><rect x="916.0" y="147.0" width="18.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="919.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.Value (510 samples, 1.45%)</title><rect x="934.3" y="179.0" width="17.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="937.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (663 samples, 1.89%)</title><rect x="951.4" y="243.0" width="22.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.4" y="254.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (663 samples, 1.89%)</title><rect x="951.4" y="227.0" width="22.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="954.4" y="238.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (663 samples, 1.89%)</title><rect x="951.4" y="211.0" width="22.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.4" y="222.0">j..</text>
</g>
<g>
<title>java.lang.String (288 samples, 0.82%)</title><rect x="951.4" y="195.0" width="9.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="954.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (375 samples, 1.07%)</title><rect x="961.0" y="195.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="964.0" y="206.0"></text>
</g>
<g>
<title>byte[] (375 samples, 1.07%)</title><rect x="961.0" y="179.0" width="12.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="964.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,787 samples, 7.92%)</title><rect x="973.6" y="275.0" width="93.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.6" y="286.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (418 samples, 1.19%)</title><rect x="973.6" y="259.0" width="14.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="976.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (886 samples, 2.52%)</title><rect x="987.7" y="259.0" width="29.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="990.7" y="270.0">on..</text>
</g>
<g>
<title>java.lang.String[] (886 samples, 2.52%)</title><rect x="987.7" y="243.0" width="29.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="990.7" y="254.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,483 samples, 4.22%)</title><rect x="1017.4" y="259.0" width="49.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.4" y="270.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,483 samples, 4.22%)</title><rect x="1017.4" y="243.0" width="49.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1020.4" y="254.0">one/n..</text>
</g>
<g>
<title>char[] (743 samples, 2.11%)</title><rect x="1017.4" y="227.0" width="24.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1020.4" y="238.0">c..</text>
</g>
<g>
<title>java.lang.String (255 samples, 0.73%)</title><rect x="1042.3" y="227.0" width="8.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1045.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (485 samples, 1.38%)</title><rect x="1050.9" y="227.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (485 samples, 1.38%)</title><rect x="1050.9" y="211.0" width="16.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (485 samples, 1.38%)</title><rect x="1050.9" y="195.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.9" y="206.0"></text>
</g>
<g>
<title>byte[] (485 samples, 1.38%)</title><rect x="1050.9" y="179.0" width="16.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1053.9" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,662 samples, 10.41%)</title><rect x="1067.1" y="275.0" width="122.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.1" y="286.0">one/nio/util/Ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,662 samples, 10.41%)</title><rect x="1067.1" y="259.0" width="122.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.1" y="270.0">one/nio/util/Ut..</text>
</g>
<g>
<title>char[] (1,816 samples, 5.16%)</title><rect x="1067.1" y="243.0" width="61.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1070.1" y="254.0">char[]</text>
</g>
<g>
<title>java.lang.String (864 samples, 2.46%)</title><rect x="1128.1" y="243.0" width="29.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1131.1" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (982 samples, 2.79%)</title><rect x="1157.1" y="243.0" width="32.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.1" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (982 samples, 2.79%)</title><rect x="1157.1" y="227.0" width="32.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.1" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (982 samples, 2.79%)</title><rect x="1157.1" y="211.0" width="32.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.1" y="222.0">ja..</text>
</g>
<g>
<title>byte[] (982 samples, 2.79%)</title><rect x="1157.1" y="195.0" width="32.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1160.1" y="206.0">by..</text>
</g>
</g>
</svg>
