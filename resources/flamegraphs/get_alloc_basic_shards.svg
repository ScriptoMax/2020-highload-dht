<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Basic shard control | RAM</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (47,623 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (24,761 samples, 51.99%)</title><rect x="10.0" y="323.0" width="613.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (24,761 samples, 51.99%)</title><rect x="10.0" y="307.0" width="613.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (24,761 samples, 51.99%)</title><rect x="10.0" y="291.0" width="613.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,019 samples, 2.14%)</title><rect x="10.0" y="275.0" width="25.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="286.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,019 samples, 2.14%)</title><rect x="10.0" y="259.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="270.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,019 samples, 2.14%)</title><rect x="10.0" y="243.0" width="25.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="254.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,019 samples, 2.14%)</title><rect x="10.0" y="227.0" width="25.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="238.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,019 samples, 2.14%)</title><rect x="10.0" y="211.0" width="25.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="222.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.run (23,742 samples, 49.85%)</title><rect x="35.2" y="275.0" width="588.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.2" y="286.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.run</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4 (23,742 samples, 49.85%)</title><rect x="35.2" y="259.0" width="588.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.2" y="270.0">ru/mail/polis/service/codearound/AsyncService.lambda$runAsyncHandler$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4,134 samples, 8.68%)</title><rect x="35.2" y="243.0" width="102.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.2" y="254.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,134 samples, 8.68%)</title><rect x="35.2" y="227.0" width="102.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.2" y="238.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,967 samples, 6.23%)</title><rect x="35.2" y="211.0" width="73.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.2" y="222.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,967 samples, 6.23%)</title><rect x="35.2" y="195.0" width="73.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.2" y="206.0">one/nio/..</text>
</g>
<g>
<title>byte[] (2,967 samples, 6.23%)</title><rect x="35.2" y="179.0" width="73.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="38.2" y="190.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (1,167 samples, 2.45%)</title><rect x="108.8" y="211.0" width="28.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.8" y="222.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,167 samples, 2.45%)</title><rect x="108.8" y="195.0" width="28.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="111.8" y="206.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$70/584530341.exec (19,608 samples, 41.17%)</title><rect x="137.7" y="243.0" width="485.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.7" y="254.0">ru/mail/polis/service/codearound/AsyncService$$Lambda$70/584530341...</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.lambda$entity$1 (19,608 samples, 41.17%)</title><rect x="137.7" y="227.0" width="485.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.7" y="238.0">ru/mail/polis/service/codearound/AsyncService.lambda$entity$1</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.get (19,608 samples, 41.17%)</title><rect x="137.7" y="211.0" width="485.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.7" y="222.0">ru/mail/polis/service/codearound/AsyncService.get</text>
</g>
<g>
<title>one.nio.http.Response (667 samples, 1.40%)</title><rect x="137.7" y="195.0" width="16.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="140.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,588 samples, 3.33%)</title><rect x="154.2" y="195.0" width="39.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.2" y="206.0">one..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,588 samples, 3.33%)</title><rect x="154.2" y="179.0" width="39.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.2" y="190.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (1,588 samples, 3.33%)</title><rect x="154.2" y="163.0" width="39.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="157.2" y="174.0">jav..</text>
</g>
<g>
<title>one/nio/http/Response.ok (2,888 samples, 6.06%)</title><rect x="193.6" y="195.0" width="71.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.6" y="206.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,888 samples, 6.06%)</title><rect x="193.6" y="179.0" width="71.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.6" y="190.0">one/nio/..</text>
</g>
<g>
<title>byte[] (1,099 samples, 2.31%)</title><rect x="193.6" y="163.0" width="27.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="196.6" y="174.0">b..</text>
</g>
<g>
<title>java.lang.String[] (946 samples, 1.99%)</title><rect x="220.8" y="163.0" width="23.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="223.8" y="174.0">j..</text>
</g>
<g>
<title>java.lang.String (843 samples, 1.77%)</title><rect x="244.2" y="163.0" width="20.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="247.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.proxy (9,299 samples, 19.53%)</title><rect x="265.1" y="195.0" width="230.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.1" y="206.0">ru/mail/polis/service/codearou..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.12%)</title><rect x="265.1" y="179.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1354003114.invoke (55 samples, 0.12%)</title><rect x="265.1" y="163.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.12%)</title><rect x="265.1" y="147.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.03%)</title><rect x="265.1" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.03%)</title><rect x="265.1" y="115.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="268.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (39 samples, 0.08%)</title><rect x="265.5" y="131.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (39 samples, 0.08%)</title><rect x="265.5" y="115.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.5" y="126.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.08%)</title><rect x="265.5" y="99.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="268.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,244 samples, 19.41%)</title><rect x="266.5" y="179.0" width="229.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.5" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (9,244 samples, 19.41%)</title><rect x="266.5" y="163.0" width="229.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.5" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (77 samples, 0.16%)</title><rect x="266.5" y="147.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="269.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8,418 samples, 17.68%)</title><rect x="268.4" y="147.0" width="208.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.4" y="158.0">one/nio/http/HttpClient$Res..</text>
</g>
<g>
<title>byte[] (8,254 samples, 17.33%)</title><rect x="268.4" y="131.0" width="204.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="271.4" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (164 samples, 0.34%)</title><rect x="472.9" y="131.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="475.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (612 samples, 1.29%)</title><rect x="477.0" y="147.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.0" y="158.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.04%)</title><rect x="477.0" y="131.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="480.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.06%)</title><rect x="477.4" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.06%)</title><rect x="477.4" y="115.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.04%)</title><rect x="477.6" y="99.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.6" y="110.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.04%)</title><rect x="477.6" y="83.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="480.6" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.02%)</title><rect x="478.1" y="131.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="481.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (466 samples, 0.98%)</title><rect x="478.4" y="131.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (466 samples, 0.98%)</title><rect x="478.4" y="115.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.4" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (466 samples, 0.98%)</title><rect x="478.4" y="99.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.4" y="110.0"></text>
</g>
<g>
<title>char[] (322 samples, 0.68%)</title><rect x="478.4" y="83.0" width="8.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="481.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.13%)</title><rect x="486.4" y="83.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="489.4" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (84 samples, 0.18%)</title><rect x="487.9" y="83.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (84 samples, 0.18%)</title><rect x="487.9" y="67.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.9" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (84 samples, 0.18%)</title><rect x="487.9" y="51.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.9" y="62.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.18%)</title><rect x="487.9" y="35.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="490.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (49 samples, 0.10%)</title><rect x="489.9" y="131.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (49 samples, 0.10%)</title><rect x="489.9" y="115.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="492.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (39 samples, 0.08%)</title><rect x="491.2" y="131.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.08%)</title><rect x="491.2" y="115.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.08%)</title><rect x="491.2" y="99.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.04%)</title><rect x="491.2" y="83.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="494.2" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.04%)</title><rect x="491.6" y="83.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.6" y="94.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.04%)</title><rect x="491.6" y="67.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="494.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (101 samples, 0.21%)</title><rect x="492.1" y="147.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (101 samples, 0.21%)</title><rect x="492.1" y="131.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.1" y="142.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.21%)</title><rect x="492.1" y="115.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="495.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (22 samples, 0.05%)</title><rect x="494.6" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.05%)</title><rect x="494.6" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.05%)</title><rect x="494.6" y="115.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.04%)</title><rect x="494.8" y="99.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.8" y="110.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.04%)</title><rect x="494.8" y="83.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="497.8" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (14 samples, 0.03%)</title><rect x="495.2" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.2" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (14 samples, 0.03%)</title><rect x="495.2" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.2" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (14 samples, 0.03%)</title><rect x="495.2" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.2" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (14 samples, 0.03%)</title><rect x="495.2" y="99.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="498.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (673 samples, 1.41%)</title><rect x="495.5" y="195.0" width="16.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.5" y="206.0"></text>
</g>
<g>
<title>byte[] (673 samples, 1.41%)</title><rect x="495.5" y="179.0" width="16.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="498.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.get (4,493 samples, 9.43%)</title><rect x="512.2" y="195.0" width="111.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.2" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,312 samples, 2.75%)</title><rect x="512.2" y="179.0" width="32.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.2" y="190.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,312 samples, 2.75%)</title><rect x="512.2" y="163.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.2" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,312 samples, 2.75%)</title><rect x="512.2" y="147.0" width="32.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="515.2" y="158.0">ja..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (714 samples, 1.50%)</title><rect x="544.7" y="179.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.7" y="190.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (714 samples, 1.50%)</title><rect x="544.7" y="163.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.7" y="174.0"></text>
</g>
<g>
<title>byte[] (714 samples, 1.50%)</title><rect x="544.7" y="147.0" width="17.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="547.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (2,467 samples, 5.18%)</title><rect x="562.4" y="179.0" width="61.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.4" y="190.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (2,467 samples, 5.18%)</title><rect x="562.4" y="163.0" width="61.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.4" y="174.0">ru/mai..</text>
</g>
<g>
<title>byte[] (843 samples, 1.77%)</title><rect x="562.4" y="147.0" width="20.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="565.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,624 samples, 3.41%)</title><rect x="583.3" y="147.0" width="40.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.3" y="158.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,624 samples, 3.41%)</title><rect x="583.3" y="131.0" width="40.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="586.3" y="142.0">jav..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (22,862 samples, 48.01%)</title><rect x="623.5" y="323.0" width="566.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.5" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (517 samples, 1.09%)</title><rect x="623.5" y="307.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.5" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (517 samples, 1.09%)</title><rect x="623.5" y="291.0" width="12.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="626.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (22,345 samples, 46.92%)</title><rect x="636.3" y="307.0" width="553.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.3" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (22,345 samples, 46.92%)</title><rect x="636.3" y="291.0" width="553.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.3" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22,345 samples, 46.92%)</title><rect x="636.3" y="275.0" width="553.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.3" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,738 samples, 16.25%)</title><rect x="636.3" y="259.0" width="191.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.3" y="270.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,738 samples, 16.25%)</title><rect x="636.3" y="243.0" width="191.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.3" y="254.0">one/nio/http/HttpServer.h..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (6,093 samples, 12.79%)</title><rect x="636.3" y="227.0" width="151.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.3" y="238.0">RequestHandler0_ent..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1,529 samples, 3.21%)</title><rect x="636.3" y="211.0" width="37.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.3" y="222.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,529 samples, 3.21%)</title><rect x="636.3" y="195.0" width="37.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.3" y="206.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,529 samples, 3.21%)</title><rect x="636.3" y="179.0" width="37.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.3" y="190.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,529 samples, 3.21%)</title><rect x="636.3" y="163.0" width="37.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.3" y="174.0">jav..</text>
</g>
<g>
<title>java.lang.String (577 samples, 1.21%)</title><rect x="636.3" y="147.0" width="14.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="639.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (952 samples, 2.00%)</title><rect x="650.6" y="147.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.6" y="158.0">j..</text>
</g>
<g>
<title>byte[] (952 samples, 2.00%)</title><rect x="650.6" y="131.0" width="23.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="653.6" y="142.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.entity (4,564 samples, 9.58%)</title><rect x="674.2" y="211.0" width="113.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.2" y="222.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,175 samples, 2.47%)</title><rect x="674.2" y="195.0" width="29.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.2" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,175 samples, 2.47%)</title><rect x="674.2" y="179.0" width="29.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="677.2" y="190.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,175 samples, 2.47%)</title><rect x="674.2" y="163.0" width="29.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.2" y="174.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,175 samples, 2.47%)</title><rect x="674.2" y="147.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.2" y="158.0">ja..</text>
</g>
<g>
<title>byte[] (1,175 samples, 2.47%)</title><rect x="674.2" y="131.0" width="29.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="677.2" y="142.0">by..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (534 samples, 1.12%)</title><rect x="703.3" y="195.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (534 samples, 1.12%)</title><rect x="703.3" y="179.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$70/584530341.get$Lambda (534 samples, 1.12%)</title><rect x="703.3" y="163.0" width="13.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.3" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.AsyncService$$Lambda$70 (534 samples, 1.12%)</title><rect x="703.3" y="147.0" width="13.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="706.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService.runAsyncHandler (789 samples, 1.66%)</title><rect x="716.6" y="195.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (788 samples, 1.65%)</title><rect x="716.6" y="179.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (788 samples, 1.65%)</title><rect x="716.6" y="163.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/AsyncService$$Lambda$69/583081315.get$Lambda (788 samples, 1.65%)</title><rect x="716.6" y="147.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.codearound.AsyncService$$Lambda$69 (788 samples, 1.65%)</title><rect x="716.6" y="131.0" width="19.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="719.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneArrayToBuf (2,066 samples, 4.34%)</title><rect x="736.1" y="195.0" width="51.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.1" y="206.0">ru/ma..</text>
</g>
<g>
<title>byte[] (840 samples, 1.76%)</title><rect x="736.1" y="179.0" width="20.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="739.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,226 samples, 2.57%)</title><rect x="756.9" y="179.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.9" y="190.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,226 samples, 2.57%)</title><rect x="756.9" y="163.0" width="30.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.9" y="174.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,226 samples, 2.57%)</title><rect x="756.9" y="147.0" width="30.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="759.9" y="158.0">ja..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,645 samples, 3.45%)</title><rect x="787.3" y="227.0" width="40.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.3" y="238.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,645 samples, 3.45%)</title><rect x="787.3" y="211.0" width="40.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.3" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,645 samples, 3.45%)</title><rect x="787.3" y="195.0" width="40.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.3" y="206.0">jav..</text>
</g>
<g>
<title>java.lang.String (634 samples, 1.33%)</title><rect x="787.3" y="179.0" width="15.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="790.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,011 samples, 2.12%)</title><rect x="803.0" y="179.0" width="25.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.0" y="190.0">j..</text>
</g>
<g>
<title>byte[] (1,011 samples, 2.12%)</title><rect x="803.0" y="163.0" width="25.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="806.0" y="174.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8,032 samples, 16.87%)</title><rect x="828.1" y="259.0" width="199.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.1" y="270.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one.nio.http.Request (1,075 samples, 2.26%)</title><rect x="828.1" y="243.0" width="26.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="831.1" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,676 samples, 5.62%)</title><rect x="854.7" y="243.0" width="66.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="857.7" y="254.0">one/nio..</text>
</g>
<g>
<title>java.lang.String[] (2,676 samples, 5.62%)</title><rect x="854.7" y="227.0" width="66.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="857.7" y="238.0">java.la..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,281 samples, 8.99%)</title><rect x="921.0" y="243.0" width="106.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.0" y="254.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,281 samples, 8.99%)</title><rect x="921.0" y="227.0" width="106.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.0" y="238.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (2,439 samples, 5.12%)</title><rect x="921.0" y="211.0" width="60.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="924.0" y="222.0">char[]</text>
</g>
<g>
<title>java.lang.String (694 samples, 1.46%)</title><rect x="981.4" y="211.0" width="17.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="984.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,148 samples, 2.41%)</title><rect x="998.6" y="211.0" width="28.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.6" y="222.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,148 samples, 2.41%)</title><rect x="998.6" y="195.0" width="28.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.6" y="206.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,148 samples, 2.41%)</title><rect x="998.6" y="179.0" width="28.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.6" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (1,148 samples, 2.41%)</title><rect x="998.6" y="163.0" width="28.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1001.6" y="174.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,575 samples, 13.81%)</title><rect x="1027.1" y="259.0" width="162.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.1" y="270.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,575 samples, 13.81%)</title><rect x="1027.1" y="243.0" width="162.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.1" y="254.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (3,040 samples, 6.38%)</title><rect x="1027.1" y="227.0" width="75.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1030.1" y="238.0">char[]</text>
</g>
<g>
<title>java.lang.String (1,144 samples, 2.40%)</title><rect x="1102.4" y="227.0" width="28.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1105.4" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,391 samples, 5.02%)</title><rect x="1130.8" y="227.0" width="59.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.8" y="238.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,391 samples, 5.02%)</title><rect x="1130.8" y="211.0" width="59.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.8" y="222.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,391 samples, 5.02%)</title><rect x="1130.8" y="195.0" width="59.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.8" y="206.0">java/l..</text>
</g>
<g>
<title>byte[] (2,391 samples, 5.02%)</title><rect x="1130.8" y="179.0" width="59.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1133.8" y="190.0">byte[]</text>
</g>
</g>
</svg>
