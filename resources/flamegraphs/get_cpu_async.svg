<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">async Java client | CPU</text>
<text id="details" x="10" y="1205"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1205"> </text>
<g id="frames">
<g>
<title>all (2,510 samples, 100.00%)</title><rect x="10.0" y="1171.0" width="1180.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="1182.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="10.0" y="1155.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="10.0" y="1139.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.04%)</title><rect x="10.0" y="1123.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.20%)</title><rect x="10.5" y="1155.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.5" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.04%)</title><rect x="10.5" y="1139.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.5" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.16%)</title><rect x="10.9" y="1139.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.9" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.16%)</title><rect x="10.9" y="1123.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.9" y="1134.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="10.9" y="1107.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.9" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="10.9" y="1091.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.9" y="1102.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.12%)</title><rect x="11.4" y="1107.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.4" y="1118.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.04%)</title><rect x="11.4" y="1091.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.4" y="1102.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.04%)</title><rect x="11.9" y="1091.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.9" y="1102.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.04%)</title><rect x="12.4" y="1091.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.4" y="1102.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="12.4" y="1075.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.4" y="1086.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.24%)</title><rect x="12.8" y="1155.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.8" y="1166.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.04%)</title><rect x="12.8" y="1139.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.8" y="1150.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.04%)</title><rect x="13.3" y="1139.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.3" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.04%)</title><rect x="13.8" y="1139.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="16.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="14.2" y="1139.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="17.2" y="1150.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (1 samples, 0.04%)</title><rect x="14.2" y="1123.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="17.2" y="1134.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="14.2" y="1107.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.2" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="14.2" y="1091.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="17.2" y="1102.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="14.2" y="1075.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="17.2" y="1086.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="14.7" y="1123.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="17.7" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="15.2" y="1139.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="18.2" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="15.2" y="1123.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="18.2" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="15.2" y="1107.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="18.2" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="15.2" y="1091.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.2" y="1102.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="15.2" y="1075.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="18.2" y="1086.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="15.2" y="1059.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.2" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="15.2" y="1043.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="18.2" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="15.2" y="1027.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="15.2" y="1011.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.2" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="15.6" y="1155.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="18.6" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="15.6" y="1139.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="18.6" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="15.6" y="1123.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="18.6" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="15.6" y="1107.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.6" y="1118.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="15.6" y="1091.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="18.6" y="1102.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="15.6" y="1075.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="18.6" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="15.6" y="1059.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="18.6" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="15.6" y="1043.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.6" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="15.6" y="1027.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="18.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.08%)</title><rect x="16.1" y="1155.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="19.1" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="16.1" y="1139.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="19.1" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="16.1" y="1123.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="19.1" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="16.6" y="1123.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="19.6" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="16.6" y="1107.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="19.6" y="1118.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="16.6" y="1091.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="19.6" y="1102.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="16.6" y="1075.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="19.6" y="1086.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="16.6" y="1059.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.6" y="1070.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="16.6" y="1043.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.6" y="1054.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.04%)</title><rect x="16.6" y="1027.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,327 samples, 52.87%)</title><rect x="17.1" y="1155.0" width="623.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.1" y="1166.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,327 samples, 52.87%)</title><rect x="17.1" y="1139.0" width="623.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.1" y="1150.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,327 samples, 52.87%)</title><rect x="17.1" y="1123.0" width="623.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.1" y="1134.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (311 samples, 12.39%)</title><rect x="17.1" y="1107.0" width="146.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.1" y="1118.0">java/util/concurre..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="17.5" y="1091.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="20.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (181 samples, 7.21%)</title><rect x="18.0" y="1091.0" width="85.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.0" y="1102.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (2 samples, 0.08%)</title><rect x="18.0" y="1075.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.08%)</title><rect x="18.0" y="1059.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.08%)</title><rect x="18.0" y="1043.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.0" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="18.0" y="1027.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="21.0" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="18.0" y="1011.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="21.0" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="18.5" y="1027.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="21.5" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="18.5" y="1011.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="21.5" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="18.5" y="995.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="21.5" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="18.5" y="979.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="21.5" y="990.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="18.5" y="963.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="21.5" y="974.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="18.5" y="947.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="21.5" y="958.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.04%)</title><rect x="18.5" y="931.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="21.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (179 samples, 7.13%)</title><rect x="18.9" y="1075.0" width="84.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.9" y="1086.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.12%)</title><rect x="19.9" y="1059.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.9" y="1070.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.08%)</title><rect x="19.9" y="1043.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="22.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.apply (1 samples, 0.04%)</title><rect x="20.8" y="1043.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1318434273.apply (174 samples, 6.93%)</title><rect x="21.3" y="1059.0" width="81.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.3" y="1070.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (174 samples, 6.93%)</title><rect x="21.3" y="1043.0" width="81.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.3" y="1054.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (174 samples, 6.93%)</title><rect x="21.3" y="1027.0" width="81.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.3" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.04%)</title><rect x="21.3" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.04%)</title><rect x="21.3" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.04%)</title><rect x="21.3" y="979.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (138 samples, 5.50%)</title><rect x="21.8" y="1011.0" width="64.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.8" y="1022.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (138 samples, 5.50%)</title><rect x="21.8" y="995.0" width="64.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.8" y="1006.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (138 samples, 5.50%)</title><rect x="21.8" y="979.0" width="64.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.8" y="990.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (80 samples, 3.19%)</title><rect x="21.8" y="963.0" width="37.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.8" y="974.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (80 samples, 3.19%)</title><rect x="21.8" y="947.0" width="37.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.8" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (80 samples, 3.19%)</title><rect x="21.8" y="931.0" width="37.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.8" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.08%)</title><rect x="22.2" y="915.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.2" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="22.7" y="899.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="25.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/1812886357.apply (77 samples, 3.07%)</title><rect x="23.2" y="915.0" width="36.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.2" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (77 samples, 3.07%)</title><rect x="23.2" y="899.0" width="36.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.2" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (77 samples, 3.07%)</title><rect x="23.2" y="883.0" width="36.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.2" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1400327321.apply (1 samples, 0.04%)</title><rect x="23.2" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.04%)</title><rect x="23.2" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.04%)</title><rect x="23.2" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.04%)</title><rect x="23.2" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.04%)</title><rect x="23.2" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1 samples, 0.04%)</title><rect x="23.2" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="23.2" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="23.2" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="23.2" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="23.2" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1571858567.apply (76 samples, 3.03%)</title><rect x="23.6" y="867.0" width="35.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.6" y="878.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (76 samples, 3.03%)</title><rect x="23.6" y="851.0" width="35.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.6" y="862.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.04%)</title><rect x="23.6" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.04%)</title><rect x="23.6" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.6" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="23.6" y="803.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="26.6" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="23.6" y="787.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="26.6" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="23.6" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="26.6" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="23.6" y="755.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.6" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="23.6" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="26.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.04%)</title><rect x="24.1" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (74 samples, 2.95%)</title><rect x="24.6" y="835.0" width="34.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.6" y="846.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (62 samples, 2.47%)</title><rect x="24.6" y="819.0" width="29.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.6" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (61 samples, 2.43%)</title><rect x="25.0" y="803.0" width="28.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.0" y="814.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$183/36443311.apply (61 samples, 2.43%)</title><rect x="25.0" y="787.0" width="28.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.0" y="798.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (61 samples, 2.43%)</title><rect x="25.0" y="771.0" width="28.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.0" y="782.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.12%)</title><rect x="25.0" y="755.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.12%)</title><rect x="25.0" y="739.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.12%)</title><rect x="25.0" y="723.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.08%)</title><rect x="25.5" y="707.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.04%)</title><rect x="25.5" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.04%)</title><rect x="26.0" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.04%)</title><rect x="26.0" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="26.0" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (13 samples, 0.52%)</title><rect x="26.5" y="755.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 0.44%)</title><rect x="27.4" y="739.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.04%)</title><rect x="27.4" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.04%)</title><rect x="27.4" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="27.4" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.04%)</title><rect x="27.4" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.04%)</title><rect x="27.4" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.04%)</title><rect x="27.4" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.4" y="654.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="27.4" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="30.4" y="638.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="27.4" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="30.4" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="27.4" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.4" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="27.4" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.4" y="590.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.04%)</title><rect x="27.4" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.4" y="574.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.04%)</title><rect x="27.4" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="30.4" y="558.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.04%)</title><rect x="27.4" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="30.4" y="542.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="27.4" y="515.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="30.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (10 samples, 0.40%)</title><rect x="27.9" y="723.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (10 samples, 0.40%)</title><rect x="27.9" y="707.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7 samples, 0.28%)</title><rect x="28.8" y="691.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.28%)</title><rect x="28.8" y="675.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.28%)</title><rect x="28.8" y="659.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.24%)</title><rect x="29.3" y="643.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.20%)</title><rect x="29.7" y="627.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.20%)</title><rect x="29.7" y="611.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="32.7" y="622.0"></text>
</g>
<g>
<title>__GI_write (5 samples, 0.20%)</title><rect x="29.7" y="595.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="32.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.20%)</title><rect x="29.7" y="579.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.20%)</title><rect x="29.7" y="563.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.7" y="574.0"></text>
</g>
<g>
<title>__x64_sys_write (5 samples, 0.20%)</title><rect x="29.7" y="547.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="32.7" y="558.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.20%)</title><rect x="29.7" y="531.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="32.7" y="542.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="29.7" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="32.7" y="526.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="29.7" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="32.7" y="510.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.16%)</title><rect x="30.2" y="515.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="33.2" y="526.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.12%)</title><rect x="30.2" y="499.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="33.2" y="510.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.12%)</title><rect x="30.2" y="483.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.2" y="494.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.12%)</title><rect x="30.2" y="467.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="33.2" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.08%)</title><rect x="30.7" y="451.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="33.7" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.08%)</title><rect x="30.7" y="435.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="33.7" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="30.7" y="419.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.7" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="31.6" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.6" y="510.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="31.6" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="32.1" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (43 samples, 1.71%)</title><rect x="32.6" y="755.0" width="20.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.12%)</title><rect x="32.6" y="739.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.12%)</title><rect x="32.6" y="723.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.12%)</title><rect x="32.6" y="707.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (1 samples, 0.04%)</title><rect x="33.5" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (29 samples, 1.16%)</title><rect x="34.0" y="739.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.08%)</title><rect x="34.0" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.0" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.08%)</title><rect x="34.0" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.0" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.08%)</title><rect x="34.0" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.08%)</title><rect x="34.0" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.08%)</title><rect x="34.0" y="659.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.08%)</title><rect x="34.0" y="643.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (21 samples, 0.84%)</title><rect x="34.9" y="723.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.08%)</title><rect x="37.7" y="707.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.7" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.08%)</title><rect x="37.7" y="691.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.08%)</title><rect x="37.7" y="675.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.08%)</title><rect x="37.7" y="659.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.08%)</title><rect x="37.7" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.08%)</title><rect x="37.7" y="627.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.7" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (2 samples, 0.08%)</title><rect x="38.7" y="707.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.7" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (2 samples, 0.08%)</title><rect x="38.7" y="691.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.08%)</title><rect x="38.7" y="675.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.08%)</title><rect x="38.7" y="659.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.7" y="670.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.04%)</title><rect x="39.6" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.6" y="718.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.04%)</title><rect x="39.6" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.6" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="39.6" y="675.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="42.6" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$199/1275166273.test (9 samples, 0.36%)</title><rect x="40.1" y="707.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.1" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (9 samples, 0.36%)</title><rect x="40.1" y="691.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/299644693.test (9 samples, 0.36%)</title><rect x="40.1" y="675.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (9 samples, 0.36%)</title><rect x="40.1" y="659.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.1" y="670.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1172131546.test (9 samples, 0.36%)</title><rect x="40.1" y="643.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.1" y="654.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (9 samples, 0.36%)</title><rect x="40.1" y="627.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1790421142.test (9 samples, 0.36%)</title><rect x="40.1" y="611.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (9 samples, 0.36%)</title><rect x="40.1" y="595.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.36%)</title><rect x="40.1" y="579.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.36%)</title><rect x="40.1" y="563.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.36%)</title><rect x="40.1" y="547.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.08%)</title><rect x="40.1" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.08%)</title><rect x="40.1" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.1" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="40.6" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.28%)</title><rect x="41.0" y="531.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (7 samples, 0.28%)</title><rect x="41.0" y="515.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.0" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.08%)</title><rect x="42.9" y="499.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.9" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="43.8" y="499.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="46.8" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="44.3" y="707.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="47.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (6 samples, 0.24%)</title><rect x="44.8" y="723.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.8" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.24%)</title><rect x="44.8" y="707.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.8" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.20%)</title><rect x="45.3" y="691.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.20%)</title><rect x="45.3" y="675.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.3" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (3 samples, 0.12%)</title><rect x="46.2" y="659.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.12%)</title><rect x="46.2" y="643.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="46.2" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.08%)</title><rect x="46.7" y="627.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.08%)</title><rect x="46.7" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (3 samples, 0.12%)</title><rect x="47.6" y="739.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (3 samples, 0.12%)</title><rect x="47.6" y="723.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.04%)</title><rect x="49.0" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.04%)</title><rect x="49.0" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (1 samples, 0.04%)</title><rect x="49.0" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.28%)</title><rect x="49.5" y="739.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.5" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.24%)</title><rect x="50.0" y="723.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="50.0" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="50.0" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="50.0" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.20%)</title><rect x="50.4" y="707.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.08%)</title><rect x="52.8" y="755.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (12 samples, 0.48%)</title><rect x="53.7" y="819.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (12 samples, 0.48%)</title><rect x="53.7" y="803.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (5 samples, 0.20%)</title><rect x="53.7" y="787.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (5 samples, 0.20%)</title><rect x="53.7" y="771.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.28%)</title><rect x="56.1" y="787.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.28%)</title><rect x="56.1" y="771.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.28%)</title><rect x="56.1" y="755.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.24%)</title><rect x="56.5" y="739.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.08%)</title><rect x="56.5" y="723.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.08%)</title><rect x="56.5" y="707.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.12%)</title><rect x="57.5" y="723.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (3 samples, 0.12%)</title><rect x="57.5" y="707.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.12%)</title><rect x="57.5" y="691.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.04%)</title><rect x="57.5" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.04%)</title><rect x="57.5" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.04%)</title><rect x="58.0" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.04%)</title><rect x="58.0" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.04%)</title><rect x="58.0" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="58.0" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="58.0" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.04%)</title><rect x="58.0" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="58.0" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.04%)</title><rect x="58.4" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.04%)</title><rect x="58.4" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.04%)</title><rect x="58.4" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.04%)</title><rect x="58.4" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.04%)</title><rect x="58.4" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="58.9" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.04%)</title><rect x="58.9" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.04%)</title><rect x="58.9" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="58.9" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (58 samples, 2.31%)</title><rect x="59.4" y="963.0" width="27.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.4" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.08%)</title><rect x="59.4" y="947.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.08%)</title><rect x="59.4" y="931.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.04%)</title><rect x="59.4" y="915.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$169/812541756.apply (1 samples, 0.04%)</title><rect x="59.8" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.04%)</title><rect x="59.8" y="899.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.04%)</title><rect x="59.8" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.04%)</title><rect x="59.8" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.04%)</title><rect x="59.8" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.16%)</title><rect x="60.3" y="947.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.16%)</title><rect x="60.3" y="931.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.08%)</title><rect x="60.3" y="915.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/1769974407.accept (2 samples, 0.08%)</title><rect x="60.3" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (2 samples, 0.08%)</title><rect x="60.3" y="883.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.08%)</title><rect x="61.2" y="915.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.08%)</title><rect x="61.2" y="899.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.2" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="61.7" y="883.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="64.7" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="61.7" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="64.7" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="61.7" y="851.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="64.7" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="61.7" y="835.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="64.7" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="61.7" y="819.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="64.7" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.04%)</title><rect x="61.7" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="64.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (52 samples, 2.07%)</title><rect x="62.2" y="947.0" width="24.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.2" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (52 samples, 2.07%)</title><rect x="62.2" y="931.0" width="24.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.2" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (50 samples, 1.99%)</title><rect x="62.2" y="915.0" width="23.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.2" y="926.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="62.2" y="899.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="65.2" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="62.2" y="883.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="65.2" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="62.2" y="867.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="65.2" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="62.2" y="851.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="65.2" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="62.2" y="835.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="65.2" y="846.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="62.2" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="65.2" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (2 samples, 0.08%)</title><rect x="62.7" y="899.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.7" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.08%)</title><rect x="63.6" y="899.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.6" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.08%)</title><rect x="63.6" y="883.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.04%)</title><rect x="64.5" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.5" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.04%)</title><rect x="64.5" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (3 samples, 0.12%)</title><rect x="65.0" y="899.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5 samples, 0.20%)</title><rect x="66.4" y="899.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.&lt;init&gt; (1 samples, 0.04%)</title><rect x="67.8" y="883.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.8" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="68.3" y="883.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="71.3" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="68.3" y="867.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="71.3" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="68.3" y="851.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="71.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4 samples, 0.16%)</title><rect x="68.8" y="899.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="69.2" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.04%)</title><rect x="69.7" y="883.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.04%)</title><rect x="70.2" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (2 samples, 0.08%)</title><rect x="70.6" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (14 samples, 0.56%)</title><rect x="71.6" y="899.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (10 samples, 0.40%)</title><rect x="71.6" y="883.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (8 samples, 0.32%)</title><rect x="72.5" y="867.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.04%)</title><rect x="75.8" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.8" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.04%)</title><rect x="75.8" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.8" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.04%)</title><rect x="75.8" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.8" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.04%)</title><rect x="75.8" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.8" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.04%)</title><rect x="75.8" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.12%)</title><rect x="76.3" y="883.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.resolveAddress (1 samples, 0.04%)</title><rect x="77.7" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (15 samples, 0.60%)</title><rect x="78.2" y="899.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/63001505.linkToTargetMethod (1 samples, 0.04%)</title><rect x="78.2" y="883.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="78.2" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (1 samples, 0.04%)</title><rect x="78.2" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.2" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.56%)</title><rect x="78.6" y="883.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.6" y="894.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (9 samples, 0.36%)</title><rect x="79.1" y="867.0" width="4.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="82.1" y="878.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="79.6" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="82.6" y="862.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="79.6" y="835.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="82.6" y="846.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.04%)</title><rect x="79.6" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="82.6" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="80.0" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="83.0" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.04%)</title><rect x="80.5" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="83.5" y="862.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.04%)</title><rect x="81.0" y="851.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="84.0" y="862.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="81.5" y="851.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="84.5" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="81.5" y="835.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="84.5" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="81.5" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="84.5" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.12%)</title><rect x="81.9" y="851.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="84.9" y="862.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.04%)</title><rect x="82.9" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="85.9" y="846.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.04%)</title><rect x="83.3" y="867.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="86.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$144/188927272.run (3 samples, 0.12%)</title><rect x="83.8" y="867.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.08%)</title><rect x="84.3" y="851.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="862.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.08%)</title><rect x="84.3" y="835.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="846.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.08%)</title><rect x="84.3" y="819.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.3" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.08%)</title><rect x="84.3" y="803.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.3" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.08%)</title><rect x="84.3" y="787.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.3" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.08%)</title><rect x="84.3" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.04%)</title><rect x="84.7" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="84.7" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="84.7" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.04%)</title><rect x="85.2" y="899.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.04%)</title><rect x="85.2" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.04%)</title><rect x="85.2" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.04%)</title><rect x="85.2" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.2" y="862.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.04%)</title><rect x="85.2" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.2" y="846.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.04%)</title><rect x="85.2" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.08%)</title><rect x="85.7" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.04%)</title><rect x="85.7" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="85.7" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.04%)</title><rect x="86.2" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (22 samples, 0.88%)</title><rect x="86.6" y="1011.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.6" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (6 samples, 0.24%)</title><rect x="86.6" y="995.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.6" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.20%)</title><rect x="87.1" y="979.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="87.6" y="963.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="87.6" y="947.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.6" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.08%)</title><rect x="87.6" y="931.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.08%)</title><rect x="88.5" y="963.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (16 samples, 0.64%)</title><rect x="89.5" y="995.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="92.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.64%)</title><rect x="89.5" y="979.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.5" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (13 samples, 0.52%)</title><rect x="90.9" y="963.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.52%)</title><rect x="90.9" y="947.0" width="6.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="93.9" y="958.0"></text>
</g>
<g>
<title>__GI_write (13 samples, 0.52%)</title><rect x="90.9" y="931.0" width="6.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="93.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.52%)</title><rect x="90.9" y="915.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="93.9" y="926.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.04%)</title><rect x="90.9" y="899.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.48%)</title><rect x="91.3" y="899.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.3" y="910.0"></text>
</g>
<g>
<title>__x64_sys_write (12 samples, 0.48%)</title><rect x="91.3" y="883.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="94.3" y="894.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.44%)</title><rect x="91.8" y="867.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="94.8" y="878.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.04%)</title><rect x="91.8" y="851.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.8" y="862.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.40%)</title><rect x="92.3" y="851.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="95.3" y="862.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.32%)</title><rect x="92.3" y="835.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="95.3" y="846.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.32%)</title><rect x="92.3" y="819.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="95.3" y="830.0"></text>
</g>
<g>
<title>pipe_write (8 samples, 0.32%)</title><rect x="92.3" y="803.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="95.3" y="814.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.28%)</title><rect x="92.3" y="787.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="95.3" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.28%)</title><rect x="92.3" y="771.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="95.3" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.28%)</title><rect x="92.3" y="755.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="95.3" y="766.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="95.6" y="787.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="98.6" y="798.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="96.0" y="835.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.0" y="846.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="96.5" y="835.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="99.5" y="846.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="96.5" y="819.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.5" y="830.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="96.5" y="803.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="99.5" y="814.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="96.5" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="99.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.04%)</title><rect x="97.0" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (8 samples, 0.32%)</title><rect x="97.4" y="1011.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.4" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.04%)</title><rect x="98.4" y="995.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.4" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.04%)</title><rect x="98.4" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.4" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.04%)</title><rect x="98.4" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.4" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.04%)</title><rect x="98.4" y="947.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.4" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.04%)</title><rect x="98.4" y="931.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.04%)</title><rect x="98.4" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (4 samples, 0.16%)</title><rect x="98.9" y="995.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.04%)</title><rect x="99.3" y="979.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.3" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.04%)</title><rect x="99.3" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.3" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.04%)</title><rect x="99.3" y="947.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.3" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.04%)</title><rect x="99.3" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.3" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (1 samples, 0.04%)</title><rect x="99.3" y="915.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.3" y="926.0"></text>
</g>
<g>
<title>java/util/LinkedList.isPositionIndex (1 samples, 0.04%)</title><rect x="99.3" y="899.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.08%)</title><rect x="99.8" y="979.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.8" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.08%)</title><rect x="99.8" y="963.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.8" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.08%)</title><rect x="99.8" y="947.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.08%)</title><rect x="99.8" y="931.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.8" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="99.8" y="915.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="102.8" y="926.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.04%)</title><rect x="100.3" y="915.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="103.3" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="100.3" y="899.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="103.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (1 samples, 0.04%)</title><rect x="100.7" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (4 samples, 0.16%)</title><rect x="101.2" y="1011.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (4 samples, 0.16%)</title><rect x="101.2" y="995.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (4 samples, 0.16%)</title><rect x="101.2" y="979.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.2" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.08%)</title><rect x="101.2" y="963.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.2" y="974.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.08%)</title><rect x="101.2" y="947.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.08%)</title><rect x="101.2" y="931.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.2" y="942.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.08%)</title><rect x="101.2" y="915.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="104.2" y="926.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="101.2" y="899.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="104.2" y="910.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.04%)</title><rect x="101.7" y="899.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="104.7" y="910.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="101.7" y="883.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="104.7" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="101.7" y="867.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="104.7" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.08%)</title><rect x="102.1" y="963.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.1" y="974.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (2 samples, 0.08%)</title><rect x="102.1" y="947.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.1" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.08%)</title><rect x="102.1" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.1" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.08%)</title><rect x="102.1" y="915.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.1" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.08%)</title><rect x="102.1" y="899.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.1" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.08%)</title><rect x="102.1" y="883.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.1" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.08%)</title><rect x="102.1" y="867.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.1" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.08%)</title><rect x="102.1" y="851.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.1" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="102.6" y="835.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.6" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="102.6" y="819.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.6" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="102.6" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="105.6" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="102.6" y="787.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="105.6" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="102.6" y="771.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.6" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="102.6" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.6" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="102.6" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm$$Lambda$229/607495298.get (128 samples, 5.10%)</title><rect x="103.1" y="1091.0" width="60.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.1" y="1102.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.lambda$getWithMultipleNodes$0 (127 samples, 5.06%)</title><rect x="103.6" y="1075.0" width="59.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.6" y="1086.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueWithFutures (127 samples, 5.06%)</title><rect x="103.6" y="1059.0" width="59.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.6" y="1070.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.evaluateFromBuffer (127 samples, 5.06%)</title><rect x="103.6" y="1043.0" width="59.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.6" y="1054.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValue (124 samples, 4.94%)</title><rect x="103.6" y="1027.0" width="58.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.6" y="1038.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/TaskDAO.getValueFromBytes (123 samples, 4.90%)</title><rect x="103.6" y="1011.0" width="57.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.6" y="1022.0">ru/mai..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (2 samples, 0.08%)</title><rect x="104.5" y="995.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.08%)</title><rect x="104.5" y="979.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.5" y="990.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.08%)</title><rect x="104.5" y="963.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.5" y="974.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.08%)</title><rect x="104.5" y="947.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.5" y="958.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.08%)</title><rect x="104.5" y="931.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.08%)</title><rect x="104.5" y="915.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.5" y="926.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.08%)</title><rect x="104.5" y="899.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="107.5" y="910.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.08%)</title><rect x="104.5" y="883.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="107.5" y="894.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.08%)</title><rect x="104.5" y="867.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="107.5" y="878.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.08%)</title><rect x="104.5" y="851.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.5" y="862.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.04%)</title><rect x="104.5" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="107.5" y="846.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.04%)</title><rect x="104.5" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="107.5" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="104.5" y="803.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="107.5" y="814.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="105.0" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="108.0" y="846.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="105.4" y="995.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="108.4" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (113 samples, 4.50%)</title><rect x="105.9" y="995.0" width="53.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.9" y="1006.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (113 samples, 4.50%)</title><rect x="105.9" y="979.0" width="53.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.9" y="990.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (101 samples, 4.02%)</title><rect x="106.8" y="963.0" width="47.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="109.8" y="974.0">Java..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="107.8" y="947.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="110.8" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="107.8" y="931.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.8" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="107.8" y="915.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="110.8" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="107.8" y="899.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.8" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="107.8" y="883.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="110.8" y="894.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.04%)</title><rect x="107.8" y="867.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="110.8" y="878.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.04%)</title><rect x="107.8" y="851.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="110.8" y="862.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.04%)</title><rect x="107.8" y="835.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.8" y="846.0"></text>
</g>
<g>
<title>free_task (1 samples, 0.04%)</title><rect x="107.8" y="819.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.8" y="830.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="107.8" y="803.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.8" y="814.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="107.8" y="787.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="110.8" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="108.3" y="947.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="111.3" y="958.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="108.7" y="947.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="111.7" y="958.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.08%)</title><rect x="109.2" y="947.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="112.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.08%)</title><rect x="110.1" y="947.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="113.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.08%)</title><rect x="111.1" y="947.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="114.1" y="958.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (90 samples, 3.59%)</title><rect x="112.0" y="947.0" width="42.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="115.0" y="958.0">rock..</text>
</g>
<g>
<title>__memmove_ssse3 (1 samples, 0.04%)</title><rect x="112.0" y="931.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="115.0" y="942.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="112.5" y="931.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="115.5" y="942.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="113.0" y="931.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="116.0" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="113.0" y="915.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="116.0" y="926.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="113.4" y="931.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="116.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="113.9" y="931.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="116.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (77 samples, 3.07%)</title><rect x="114.4" y="931.0" width="36.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="117.4" y="942.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="114.4" y="915.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="117.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (76 samples, 3.03%)</title><rect x="114.8" y="915.0" width="35.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="117.8" y="926.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (76 samples, 3.03%)</title><rect x="114.8" y="899.0" width="35.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="117.8" y="910.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (75 samples, 2.99%)</title><rect x="114.8" y="883.0" width="35.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="117.8" y="894.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (74 samples, 2.95%)</title><rect x="114.8" y="867.0" width="34.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="117.8" y="878.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="117.7" y="851.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="120.7" y="862.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="118.1" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="121.1" y="862.0"></text>
</g>
<g>
<title>memcpy@plt (2 samples, 0.08%)</title><rect x="118.6" y="851.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="121.6" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (9 samples, 0.36%)</title><rect x="119.5" y="851.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="122.5" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="120.0" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="123.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="120.5" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="123.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() [clone .plt] (1 samples, 0.04%)</title><rect x="120.9" y="835.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="123.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (4 samples, 0.16%)</title><rect x="121.4" y="835.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="124.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="123.3" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="126.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="123.3" y="819.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="126.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.16%)</title><rect x="123.8" y="851.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="126.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="123.8" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="126.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="123.8" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="126.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="124.2" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="127.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="124.7" y="835.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="127.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="125.2" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="128.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="125.6" y="851.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="128.6" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (47 samples, 1.87%)</title><rect x="126.1" y="851.0" width="22.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="129.1" y="862.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (43 samples, 1.71%)</title><rect x="127.5" y="835.0" width="20.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="130.5" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4513982023456556414.so (42 samples, 1.67%)</title><rect x="127.5" y="819.0" width="19.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="130.5" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni4513982023456556414.so (1 samples, 0.04%)</title><rect x="127.5" y="803.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="130.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (41 samples, 1.63%)</title><rect x="128.0" y="803.0" width="19.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="131.0" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.12%)</title><rect x="140.2" y="787.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="143.2" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="141.6" y="787.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="144.6" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="141.6" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="144.6" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="141.6" y="755.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.6" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="141.6" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="144.6" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="141.6" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.6" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="141.6" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="144.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="141.6" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.40%)</title><rect x="142.1" y="787.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="145.1" y="798.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (5 samples, 0.20%)</title><rect x="144.5" y="771.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="147.5" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="146.8" y="787.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="149.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="146.8" y="771.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="149.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="146.8" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="149.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const [clone .plt] (1 samples, 0.04%)</title><rect x="147.3" y="819.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="150.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="147.7" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="150.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="148.2" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="151.2" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.08%)</title><rect x="148.7" y="851.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="151.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="149.6" y="867.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="152.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="150.1" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="153.1" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.08%)</title><rect x="150.6" y="931.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="153.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (6 samples, 0.24%)</title><rect x="151.5" y="931.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="154.5" y="942.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.20%)</title><rect x="151.5" y="915.0" width="2.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="154.5" y="926.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.20%)</title><rect x="151.5" y="899.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="154.5" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.16%)</title><rect x="152.0" y="883.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="155.0" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.12%)</title><rect x="152.0" y="867.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="155.0" y="878.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.08%)</title><rect x="152.4" y="851.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="155.4" y="862.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="153.4" y="867.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="156.4" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="153.9" y="915.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="156.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="154.3" y="963.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="157.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="154.3" y="947.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="157.3" y="958.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="154.3" y="931.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="157.3" y="942.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.08%)</title><rect x="154.8" y="963.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="157.8" y="974.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.12%)</title><rect x="155.7" y="963.0" width="1.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="158.7" y="974.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.08%)</title><rect x="157.1" y="963.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="160.1" y="974.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (2 samples, 0.08%)</title><rect x="158.1" y="963.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="161.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.tuneBufToArray (5 samples, 0.20%)</title><rect x="159.0" y="995.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="162.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/DAOByteOnlyConverter.readByteArray (5 samples, 0.20%)</title><rect x="159.0" y="979.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.12%)</title><rect x="159.0" y="963.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.0" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.12%)</title><rect x="159.0" y="947.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.0" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.12%)</title><rect x="159.0" y="931.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.0" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.04%)</title><rect x="160.0" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.0" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.08%)</title><rect x="160.4" y="963.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.4" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="160.4" y="947.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.4" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="160.4" y="931.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.4" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="160.4" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="160.9" y="915.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.9" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="160.9" y="899.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.9" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="160.9" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getValueFromBytes (1 samples, 0.04%)</title><rect x="161.4" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.4" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="161.4" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="164.4" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="161.4" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.4" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="161.4" y="963.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.4" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="161.4" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.4" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="161.4" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.4" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.04%)</title><rect x="161.4" y="915.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/Value.getBytesFromValue (3 samples, 0.12%)</title><rect x="161.8" y="1027.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.08%)</title><rect x="161.8" y="1011.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="161.8" y="995.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="161.8" y="979.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.8" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="161.8" y="963.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="161.8" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.8" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="161.8" y="931.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.8" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="162.3" y="947.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.3" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="162.3" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.3" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="162.3" y="915.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.3" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="162.8" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="162.8" y="995.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="162.8" y="979.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.8" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="162.8" y="963.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="162.8" y="947.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.8" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="162.8" y="931.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.20%)</title><rect x="163.3" y="1107.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.20%)</title><rect x="163.3" y="1091.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.20%)</title><rect x="163.3" y="1075.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.20%)</title><rect x="163.3" y="1059.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.3" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="163.7" y="1043.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="166.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.04%)</title><rect x="164.2" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.run (1 samples, 0.04%)</title><rect x="164.7" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.04%)</title><rect x="165.1" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (90 samples, 3.59%)</title><rect x="165.6" y="1107.0" width="42.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.6" y="1118.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (87 samples, 3.47%)</title><rect x="167.0" y="1091.0" width="40.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.0" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (65 samples, 2.59%)</title><rect x="167.5" y="1075.0" width="30.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.5" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.12%)</title><rect x="167.5" y="1059.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.12%)</title><rect x="167.5" y="1043.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="168.0" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="168.0" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="168.4" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (61 samples, 2.43%)</title><rect x="168.9" y="1059.0" width="28.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.9" y="1070.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 2.39%)</title><rect x="169.4" y="1043.0" width="28.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.4" y="1054.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (26 samples, 1.04%)</title><rect x="169.4" y="1027.0" width="12.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="172.4" y="1038.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.08%)</title><rect x="169.8" y="1011.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="172.8" y="1022.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="170.8" y="1011.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="173.8" y="1022.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.16%)</title><rect x="171.3" y="1011.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="174.3" y="1022.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.08%)</title><rect x="171.7" y="995.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="174.7" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="172.7" y="995.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="175.7" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="173.1" y="1011.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="176.1" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (15 samples, 0.60%)</title><rect x="173.6" y="1011.0" width="7.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="176.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.48%)</title><rect x="175.0" y="995.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="178.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="175.0" y="979.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.44%)</title><rect x="175.5" y="979.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="178.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.16%)</title><rect x="178.3" y="963.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="181.3" y="974.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.16%)</title><rect x="178.3" y="947.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.3" y="958.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="178.8" y="931.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="181.8" y="942.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="179.2" y="915.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="182.2" y="926.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.04%)</title><rect x="179.2" y="899.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="182.2" y="910.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="179.7" y="931.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="182.7" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="180.2" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="183.2" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="180.2" y="947.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="183.2" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="180.2" y="931.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="183.2" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="180.2" y="915.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.2" y="926.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.04%)</title><rect x="180.2" y="899.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="183.2" y="910.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.04%)</title><rect x="180.2" y="883.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="183.2" y="894.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="180.2" y="867.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="183.2" y="878.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="180.2" y="851.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="183.2" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="180.7" y="1011.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="183.7" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="181.1" y="1011.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="184.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.35%)</title><rect x="181.6" y="1027.0" width="16.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="184.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.12%)</title><rect x="181.6" y="1011.0" width="1.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="184.6" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (31 samples, 1.24%)</title><rect x="183.0" y="1011.0" width="14.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="186.0" y="1022.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="186.8" y="995.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="189.8" y="1006.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="186.8" y="979.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="189.8" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="186.8" y="963.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="189.8" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="186.8" y="947.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="189.8" y="958.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="186.8" y="931.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="189.8" y="942.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.04%)</title><rect x="186.8" y="915.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="189.8" y="926.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.04%)</title><rect x="186.8" y="899.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="189.8" y="910.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.04%)</title><rect x="186.8" y="883.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.88%)</title><rect x="187.2" y="995.0" width="10.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.2" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="187.2" y="979.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="190.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.84%)</title><rect x="187.7" y="979.0" width="9.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="190.7" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.52%)</title><rect x="191.5" y="963.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="194.5" y="974.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.44%)</title><rect x="191.9" y="947.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.9" y="958.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.32%)</title><rect x="193.3" y="931.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.3" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.24%)</title><rect x="193.8" y="915.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="196.8" y="926.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="194.3" y="899.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.3" y="910.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.16%)</title><rect x="194.8" y="899.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="197.8" y="910.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.16%)</title><rect x="194.8" y="883.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="197.8" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.12%)</title><rect x="195.2" y="867.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="198.2" y="878.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="196.6" y="915.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.6" y="926.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="197.1" y="947.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="200.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="197.6" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.84%)</title><rect x="198.0" y="1075.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.84%)</title><rect x="198.0" y="1059.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.84%)</title><rect x="198.0" y="1043.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.84%)</title><rect x="198.0" y="1027.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.64%)</title><rect x="199.9" y="1011.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.9" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="199.9" y="995.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="202.9" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="200.4" y="979.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="203.4" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.56%)</title><rect x="200.9" y="995.0" width="6.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="203.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.56%)</title><rect x="200.9" y="979.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="203.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.56%)</title><rect x="200.9" y="963.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="203.9" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.52%)</title><rect x="201.3" y="947.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.3" y="958.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.52%)</title><rect x="201.3" y="931.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.3" y="942.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.52%)</title><rect x="201.3" y="915.0" width="6.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="204.3" y="926.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="201.3" y="899.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="204.3" y="910.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.48%)</title><rect x="201.8" y="899.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="204.8" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.48%)</title><rect x="201.8" y="883.0" width="5.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="204.8" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.48%)</title><rect x="201.8" y="867.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.8" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="207.5" y="1011.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="210.5" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="207.5" y="995.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="210.5" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="207.5" y="979.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="210.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$198/1681858539.run (186 samples, 7.41%)</title><rect x="207.9" y="1107.0" width="87.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.9" y="1118.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (186 samples, 7.41%)</title><rect x="207.9" y="1091.0" width="87.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.9" y="1102.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (186 samples, 7.41%)</title><rect x="207.9" y="1075.0" width="87.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.9" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (183 samples, 7.29%)</title><rect x="209.3" y="1059.0" width="86.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.3" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (183 samples, 7.29%)</title><rect x="209.3" y="1043.0" width="86.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.3" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (183 samples, 7.29%)</title><rect x="209.3" y="1027.0" width="86.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.3" y="1038.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (183 samples, 7.29%)</title><rect x="209.3" y="1011.0" width="86.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="212.3" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.08%)</title><rect x="209.3" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.08%)</title><rect x="209.3" y="979.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.08%)</title><rect x="209.3" y="963.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.08%)</title><rect x="209.3" y="947.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.08%)</title><rect x="209.3" y="931.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.3" y="942.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.08%)</title><rect x="209.3" y="915.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="212.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (181 samples, 7.21%)</title><rect x="210.3" y="995.0" width="85.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.3" y="1006.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (181 samples, 7.21%)</title><rect x="210.3" y="979.0" width="85.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.3" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (181 samples, 7.21%)</title><rect x="210.3" y="963.0" width="85.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.3" y="974.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (181 samples, 7.21%)</title><rect x="210.3" y="947.0" width="85.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="213.3" y="958.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (44 samples, 1.75%)</title><rect x="210.7" y="931.0" width="20.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (37 samples, 1.47%)</title><rect x="211.7" y="915.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (32 samples, 1.27%)</title><rect x="214.0" y="899.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (31 samples, 1.24%)</title><rect x="214.0" y="883.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (31 samples, 1.24%)</title><rect x="214.0" y="867.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.32%)</title><rect x="214.0" y="851.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.12%)</title><rect x="214.5" y="835.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.5" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="214.5" y="819.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="217.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1 samples, 0.04%)</title><rect x="215.0" y="819.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.04%)</title><rect x="215.0" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.04%)</title><rect x="215.0" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="218.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.04%)</title><rect x="215.0" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.04%)</title><rect x="215.4" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.04%)</title><rect x="215.9" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.9" y="846.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.04%)</title><rect x="215.9" y="819.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="218.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/556718513.apply (3 samples, 0.12%)</title><rect x="216.4" y="835.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.12%)</title><rect x="216.4" y="819.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.12%)</title><rect x="216.4" y="803.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.12%)</title><rect x="216.4" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="216.4" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="216.4" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$209/1821490069.get$Lambda (1 samples, 0.04%)</title><rect x="216.4" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.04%)</title><rect x="216.4" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.08%)</title><rect x="216.9" y="771.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.08%)</title><rect x="216.9" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.08%)</title><rect x="216.9" y="739.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.36%)</title><rect x="217.8" y="851.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8 samples, 0.32%)</title><rect x="218.3" y="835.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$192/1238073191.apply (8 samples, 0.32%)</title><rect x="218.3" y="819.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.04%)</title><rect x="218.3" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.28%)</title><rect x="218.7" y="803.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="221.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.28%)</title><rect x="218.7" y="787.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1400327321.apply (7 samples, 0.28%)</title><rect x="218.7" y="771.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.28%)</title><rect x="218.7" y="755.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.08%)</title><rect x="218.7" y="739.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (5 samples, 0.20%)</title><rect x="219.7" y="739.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.16%)</title><rect x="219.7" y="723.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.16%)</title><rect x="219.7" y="707.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.12%)</title><rect x="219.7" y="691.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.12%)</title><rect x="219.7" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.12%)</title><rect x="219.7" y="659.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.12%)</title><rect x="219.7" y="643.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (3 samples, 0.12%)</title><rect x="219.7" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.08%)</title><rect x="220.1" y="611.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="221.1" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.04%)</title><rect x="221.6" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.04%)</title><rect x="221.6" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1 samples, 0.04%)</title><rect x="221.6" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="221.6" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="221.6" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="221.6" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="224.6" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="221.6" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.12%)</title><rect x="222.0" y="851.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.04%)</title><rect x="223.0" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.40%)</title><rect x="223.4" y="851.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.40%)</title><rect x="223.4" y="835.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.40%)</title><rect x="223.4" y="819.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (9 samples, 0.36%)</title><rect x="223.4" y="803.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="226.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="223.4" y="787.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="223.4" y="771.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="223.4" y="755.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.4" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (2 samples, 0.08%)</title><rect x="223.4" y="739.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.4" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (2 samples, 0.08%)</title><rect x="223.4" y="723.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.4" y="734.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (2 samples, 0.08%)</title><rect x="223.4" y="707.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="226.4" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="223.9" y="691.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="226.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.start (7 samples, 0.28%)</title><rect x="224.4" y="787.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (7 samples, 0.28%)</title><rect x="224.4" y="771.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.4" y="782.0"></text>
</g>
<g>
<title>JVM_StartThread (4 samples, 0.16%)</title><rect x="224.4" y="755.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="227.4" y="766.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.04%)</title><rect x="224.4" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="227.4" y="750.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.04%)</title><rect x="224.4" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="227.4" y="734.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="224.4" y="707.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="227.4" y="718.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (3 samples, 0.12%)</title><rect x="224.8" y="739.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="227.8" y="750.0"></text>
</g>
<g>
<title>__clone (2 samples, 0.08%)</title><rect x="224.8" y="723.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="227.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="224.8" y="707.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="227.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="224.8" y="691.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="227.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_clone (2 samples, 0.08%)</title><rect x="224.8" y="675.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.8" y="686.0"></text>
</g>
<g>
<title>_do_fork (2 samples, 0.08%)</title><rect x="224.8" y="659.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="227.8" y="670.0"></text>
</g>
<g>
<title>copy_process.part.34 (2 samples, 0.08%)</title><rect x="224.8" y="643.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="227.8" y="654.0"></text>
</g>
<g>
<title>sched_fork (2 samples, 0.08%)</title><rect x="224.8" y="627.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="227.8" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="224.8" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="227.8" y="622.0"></text>
</g>
<g>
<title>init_numa_balancing (1 samples, 0.04%)</title><rect x="225.3" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="228.3" y="622.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="225.8" y="723.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="228.8" y="734.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (1 samples, 0.04%)</title><rect x="226.3" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="229.3" y="766.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.04%)</title><rect x="226.3" y="739.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="229.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.08%)</title><rect x="226.7" y="755.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="229.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="226.7" y="739.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="229.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="226.7" y="723.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="229.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="226.7" y="707.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="229.7" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="226.7" y="691.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="229.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="226.7" y="675.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="229.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="227.2" y="659.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="230.2" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="227.2" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="230.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="227.2" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="230.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.04%)</title><rect x="227.7" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="227.7" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="227.7" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.04%)</title><rect x="227.7" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="227.7" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="227.7" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$134/981260519.accept (1 samples, 0.04%)</title><rect x="227.7" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.7" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="228.1" y="851.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="231.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="228.6" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="228.6" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="228.6" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="228.6" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="228.6" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.6" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="228.6" y="803.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="231.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (5 samples, 0.20%)</title><rect x="229.1" y="915.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.08%)</title><rect x="230.5" y="899.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.08%)</title><rect x="230.5" y="883.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="233.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.08%)</title><rect x="230.5" y="867.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.04%)</title><rect x="231.4" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.04%)</title><rect x="231.4" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.04%)</title><rect x="231.4" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (134 samples, 5.34%)</title><rect x="231.9" y="931.0" width="63.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.9" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (134 samples, 5.34%)</title><rect x="231.9" y="915.0" width="63.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.9" y="926.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (134 samples, 5.34%)</title><rect x="231.9" y="899.0" width="63.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.9" y="910.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (133 samples, 5.30%)</title><rect x="232.4" y="883.0" width="62.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="235.4" y="894.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$206/1836344170.run (2 samples, 0.08%)</title><rect x="232.4" y="867.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.08%)</title><rect x="232.4" y="851.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.08%)</title><rect x="232.4" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.04%)</title><rect x="232.8" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="232.8" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="232.8" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (131 samples, 5.22%)</title><rect x="233.3" y="867.0" width="61.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.3" y="878.0">jdk/in..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (130 samples, 5.18%)</title><rect x="233.3" y="851.0" width="61.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.3" y="862.0">java/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (130 samples, 5.18%)</title><rect x="233.3" y="835.0" width="61.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.3" y="846.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (130 samples, 5.18%)</title><rect x="233.3" y="819.0" width="61.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.3" y="830.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (128 samples, 5.10%)</title><rect x="234.2" y="803.0" width="60.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.2" y="814.0">sun/ni..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.08%)</title><rect x="234.2" y="787.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.2" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.08%)</title><rect x="234.2" y="771.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (2 samples, 0.08%)</title><rect x="234.2" y="755.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (126 samples, 5.02%)</title><rect x="235.2" y="787.0" width="59.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.2" y="798.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (124 samples, 4.94%)</title><rect x="236.1" y="771.0" width="58.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="239.1" y="782.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.04%)</title><rect x="238.0" y="755.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="241.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 4.74%)</title><rect x="238.5" y="755.0" width="55.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="241.5" y="766.0">[unkn..</text>
</g>
<g>
<title>[unknown] (119 samples, 4.74%)</title><rect x="238.5" y="739.0" width="55.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="241.5" y="750.0">[unkn..</text>
</g>
<g>
<title>__GI___writev (119 samples, 4.74%)</title><rect x="238.5" y="723.0" width="55.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="241.5" y="734.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (117 samples, 4.66%)</title><rect x="239.4" y="707.0" width="55.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="242.4" y="718.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (117 samples, 4.66%)</title><rect x="239.4" y="691.0" width="55.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="242.4" y="702.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_writev (113 samples, 4.50%)</title><rect x="240.8" y="675.0" width="53.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="243.8" y="686.0">__x64..</text>
</g>
<g>
<title>do_writev (113 samples, 4.50%)</title><rect x="240.8" y="659.0" width="53.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="243.8" y="670.0">do_wr..</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.20%)</title><rect x="240.8" y="643.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.8" y="654.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="240.8" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="243.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.16%)</title><rect x="241.3" y="627.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="244.3" y="638.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.16%)</title><rect x="241.3" y="611.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="244.3" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="242.7" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.7" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="242.7" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.7" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="242.7" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.7" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="242.7" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="245.7" y="558.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.04%)</title><rect x="242.7" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.7" y="542.0"></text>
</g>
<g>
<title>delayed_put_task_struct (1 samples, 0.04%)</title><rect x="242.7" y="515.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="245.7" y="526.0"></text>
</g>
<g>
<title>__put_task_struct (1 samples, 0.04%)</title><rect x="242.7" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="245.7" y="510.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="242.7" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="245.7" y="494.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="242.7" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="245.7" y="478.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.04%)</title><rect x="242.7" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="245.7" y="462.0"></text>
</g>
<g>
<title>vfs_writev (108 samples, 4.30%)</title><rect x="243.2" y="643.0" width="50.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="246.2" y="654.0">vfs_w..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="243.6" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="246.6" y="638.0"></text>
</g>
<g>
<title>do_iter_write (105 samples, 4.18%)</title><rect x="244.1" y="627.0" width="49.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="247.1" y="638.0">do_it..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="244.6" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="247.6" y="622.0"></text>
</g>
<g>
<title>do_iter_readv_writev (97 samples, 3.86%)</title><rect x="245.1" y="611.0" width="45.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="248.1" y="622.0">do_i..</text>
</g>
<g>
<title>sock_write_iter (95 samples, 3.78%)</title><rect x="246.0" y="595.0" width="44.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="249.0" y="606.0">sock..</text>
</g>
<g>
<title>sock_sendmsg (93 samples, 3.71%)</title><rect x="246.9" y="579.0" width="43.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="249.9" y="590.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (90 samples, 3.59%)</title><rect x="247.4" y="563.0" width="42.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.4" y="574.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (90 samples, 3.59%)</title><rect x="247.4" y="547.0" width="42.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="250.4" y="558.0">tcp_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="247.4" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="250.4" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="247.9" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.9" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="247.9" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="250.9" y="526.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.08%)</title><rect x="248.4" y="531.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="251.4" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (86 samples, 3.43%)</title><rect x="249.3" y="531.0" width="40.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="252.3" y="542.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="249.8" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="252.8" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="249.8" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.8" y="510.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.12%)</title><rect x="250.2" y="515.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.2" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="250.7" y="499.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="253.7" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.12%)</title><rect x="251.6" y="515.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.6" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.08%)</title><rect x="252.1" y="499.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="255.1" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="252.1" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.1" y="494.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="252.6" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="255.6" y="494.0"></text>
</g>
<g>
<title>tcp_push (77 samples, 3.07%)</title><rect x="253.1" y="515.0" width="36.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="256.1" y="526.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (77 samples, 3.07%)</title><rect x="253.1" y="499.0" width="36.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.1" y="510.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (77 samples, 3.07%)</title><rect x="253.1" y="483.0" width="36.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="256.1" y="494.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (71 samples, 2.83%)</title><rect x="254.0" y="467.0" width="33.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.0" y="478.0">__..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="255.4" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="258.4" y="462.0"></text>
</g>
<g>
<title>ip_queue_xmit (67 samples, 2.67%)</title><rect x="255.9" y="451.0" width="31.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="258.9" y="462.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (67 samples, 2.67%)</title><rect x="255.9" y="435.0" width="31.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="258.9" y="446.0">__..</text>
</g>
<g>
<title>ip_local_out (66 samples, 2.63%)</title><rect x="256.3" y="419.0" width="31.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="259.3" y="430.0">ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="256.8" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="259.8" y="414.0"></text>
</g>
<g>
<title>ip_output (64 samples, 2.55%)</title><rect x="257.3" y="403.0" width="30.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="260.3" y="414.0">ip..</text>
</g>
<g>
<title>ip_finish_output (64 samples, 2.55%)</title><rect x="257.3" y="387.0" width="30.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="260.3" y="398.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="257.3" y="371.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="260.3" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (62 samples, 2.47%)</title><rect x="258.2" y="371.0" width="29.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="261.2" y="382.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (54 samples, 2.15%)</title><rect x="258.7" y="355.0" width="25.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="261.7" y="366.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (54 samples, 2.15%)</title><rect x="258.7" y="339.0" width="25.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="261.7" y="350.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (53 samples, 2.11%)</title><rect x="259.2" y="323.0" width="24.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="262.2" y="334.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (53 samples, 2.11%)</title><rect x="259.2" y="307.0" width="24.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="262.2" y="318.0">_..</text>
</g>
<g>
<title>net_rx_action (53 samples, 2.11%)</title><rect x="259.2" y="291.0" width="24.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="262.2" y="302.0">n..</text>
</g>
<g>
<title>process_backlog (51 samples, 2.03%)</title><rect x="260.1" y="275.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="263.1" y="286.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (51 samples, 2.03%)</title><rect x="260.1" y="259.0" width="24.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="263.1" y="270.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (51 samples, 2.03%)</title><rect x="260.1" y="243.0" width="24.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="263.1" y="254.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="260.1" y="227.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv (49 samples, 1.95%)</title><rect x="261.0" y="227.0" width="23.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.0" y="238.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (49 samples, 1.95%)</title><rect x="261.0" y="211.0" width="23.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.0" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver (49 samples, 1.95%)</title><rect x="261.0" y="195.0" width="23.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.0" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (49 samples, 1.95%)</title><rect x="261.0" y="179.0" width="23.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="264.0" y="190.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (49 samples, 1.95%)</title><rect x="261.0" y="163.0" width="23.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.0" y="174.0">i..</text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.08%)</title><rect x="261.5" y="147.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="264.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (46 samples, 1.83%)</title><rect x="262.5" y="147.0" width="21.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="265.5" y="158.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.20%)</title><rect x="263.9" y="131.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="266.9" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="266.2" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="269.2" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="266.2" y="115.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="269.2" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (37 samples, 1.47%)</title><rect x="266.7" y="131.0" width="17.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="269.7" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (37 samples, 1.47%)</title><rect x="266.7" y="115.0" width="17.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="269.7" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.16%)</title><rect x="266.7" y="99.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.7" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.12%)</title><rect x="267.2" y="83.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.2" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.12%)</title><rect x="267.2" y="67.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.2" y="78.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.12%)</title><rect x="267.2" y="51.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="270.2" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.12%)</title><rect x="267.2" y="35.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="270.2" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (32 samples, 1.27%)</title><rect x="268.6" y="99.0" width="15.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="271.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (30 samples, 1.20%)</title><rect x="269.5" y="83.0" width="14.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.5" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 1.20%)</title><rect x="269.5" y="67.0" width="14.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.5" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 1.20%)</title><rect x="269.5" y="51.0" width="14.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.5" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="283.6" y="99.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="286.6" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.28%)</title><rect x="284.1" y="355.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.1" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.28%)</title><rect x="284.1" y="339.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="287.1" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="285.0" y="323.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.0" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="285.0" y="307.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="288.0" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="285.0" y="291.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="288.0" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="285.0" y="275.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="288.0" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="285.0" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="288.0" y="270.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="285.5" y="307.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="288.5" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="286.0" y="323.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="289.0" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.08%)</title><rect x="286.4" y="323.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="289.4" y="334.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="286.9" y="307.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="289.9" y="318.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.04%)</title><rect x="286.9" y="291.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="289.9" y="302.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="287.4" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="290.4" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="287.4" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="290.4" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="287.4" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="290.4" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="287.4" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.4" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="287.4" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.4" y="414.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="287.4" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="290.4" y="398.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="287.4" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.4" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="287.4" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="290.4" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.08%)</title><rect x="287.8" y="467.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.8" y="478.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="287.8" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="290.8" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="288.3" y="451.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.3" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="288.3" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.3" y="446.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="288.3" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="291.3" y="430.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="288.8" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="291.8" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="289.3" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="292.3" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="289.3" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="292.3" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.08%)</title><rect x="289.7" y="563.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="292.7" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.08%)</title><rect x="289.7" y="547.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="292.7" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="289.7" y="531.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="292.7" y="542.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="290.7" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="293.7" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.20%)</title><rect x="291.1" y="611.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="294.1" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="291.1" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="294.1" y="606.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.16%)</title><rect x="291.6" y="595.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="294.6" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.16%)</title><rect x="291.6" y="579.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="294.6" y="590.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.16%)</title><rect x="291.6" y="563.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="294.6" y="574.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.08%)</title><rect x="292.5" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="295.5" y="558.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="293.5" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.5" y="638.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.04%)</title><rect x="294.0" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="297.0" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.04%)</title><rect x="294.4" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.04%)</title><rect x="294.9" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.04%)</title><rect x="294.9" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.04%)</title><rect x="294.9" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (735 samples, 29.28%)</title><rect x="295.4" y="1107.0" width="345.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.4" y="1118.0">jdk/internal/net/http/common/SequentialSchedule..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (732 samples, 29.16%)</title><rect x="296.8" y="1091.0" width="344.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.8" y="1102.0">jdk/internal/net/http/common/SequentialSchedule..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (139 samples, 5.54%)</title><rect x="297.7" y="1075.0" width="65.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.7" y="1086.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (139 samples, 5.54%)</title><rect x="297.7" y="1059.0" width="65.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.7" y="1070.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (137 samples, 5.46%)</title><rect x="298.7" y="1043.0" width="64.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.7" y="1054.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.04%)</title><rect x="298.7" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.04%)</title><rect x="298.7" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (20 samples, 0.80%)</title><rect x="299.1" y="1027.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (19 samples, 0.76%)</title><rect x="299.1" y="1011.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (19 samples, 0.76%)</title><rect x="299.1" y="995.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (19 samples, 0.76%)</title><rect x="299.1" y="979.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (16 samples, 0.64%)</title><rect x="299.1" y="963.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (16 samples, 0.64%)</title><rect x="299.1" y="947.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (16 samples, 0.64%)</title><rect x="299.1" y="931.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (13 samples, 0.52%)</title><rect x="300.5" y="915.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13 samples, 0.52%)</title><rect x="300.5" y="899.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.52%)</title><rect x="300.5" y="883.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (13 samples, 0.52%)</title><rect x="300.5" y="867.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.52%)</title><rect x="300.5" y="851.0" width="6.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="303.5" y="862.0"></text>
</g>
<g>
<title>__GI_write (13 samples, 0.52%)</title><rect x="300.5" y="835.0" width="6.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="303.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.52%)</title><rect x="300.5" y="819.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="303.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.52%)</title><rect x="300.5" y="803.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="303.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.40%)</title><rect x="301.0" y="787.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.0" y="798.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.40%)</title><rect x="301.0" y="771.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="304.0" y="782.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.40%)</title><rect x="301.0" y="755.0" width="4.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="304.0" y="766.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.40%)</title><rect x="301.0" y="739.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="304.0" y="750.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.40%)</title><rect x="301.0" y="723.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.0" y="734.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.04%)</title><rect x="301.5" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.5" y="718.0"></text>
</g>
<g>
<title>pipe_write (8 samples, 0.32%)</title><rect x="301.9" y="707.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="304.9" y="718.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="302.4" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="305.4" y="702.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.16%)</title><rect x="302.9" y="691.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="305.9" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.16%)</title><rect x="302.9" y="675.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="305.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.16%)</title><rect x="302.9" y="659.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.9" y="670.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="304.3" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="307.3" y="654.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="304.3" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="307.3" y="638.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="304.3" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="307.3" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="304.3" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="307.3" y="606.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="304.3" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="307.3" y="590.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="304.3" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="307.3" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="304.3" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.3" y="558.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.08%)</title><rect x="304.8" y="691.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="307.8" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="305.2" y="675.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="308.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="305.7" y="787.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="308.7" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.04%)</title><rect x="305.7" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="308.7" y="782.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.04%)</title><rect x="306.2" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="309.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (3 samples, 0.12%)</title><rect x="306.6" y="963.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="309.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.04%)</title><rect x="308.1" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (1 samples, 0.04%)</title><rect x="308.1" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.08%)</title><rect x="308.5" y="1027.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.08%)</title><rect x="308.5" y="1011.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.08%)</title><rect x="308.5" y="995.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.04%)</title><rect x="308.5" y="979.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.04%)</title><rect x="308.5" y="963.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.04%)</title><rect x="308.5" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.04%)</title><rect x="308.5" y="931.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.04%)</title><rect x="308.5" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="309.0" y="979.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="309.0" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.04%)</title><rect x="309.0" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="309.0" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (114 samples, 4.54%)</title><rect x="309.5" y="1027.0" width="53.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="312.5" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (113 samples, 4.50%)</title><rect x="309.9" y="1011.0" width="53.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.9" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (113 samples, 4.50%)</title><rect x="309.9" y="995.0" width="53.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.9" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (113 samples, 4.50%)</title><rect x="309.9" y="979.0" width="53.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="312.9" y="990.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (72 samples, 2.87%)</title><rect x="310.4" y="963.0" width="33.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.4" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (72 samples, 2.87%)</title><rect x="310.4" y="947.0" width="33.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.4" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (72 samples, 2.87%)</title><rect x="310.4" y="931.0" width="33.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.4" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (70 samples, 2.79%)</title><rect x="311.3" y="915.0" width="33.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.3" y="926.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (70 samples, 2.79%)</title><rect x="311.3" y="899.0" width="33.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.3" y="910.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (69 samples, 2.75%)</title><rect x="311.3" y="883.0" width="32.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.3" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (68 samples, 2.71%)</title><rect x="311.3" y="867.0" width="32.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.3" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.08%)</title><rect x="311.3" y="851.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (2 samples, 0.08%)</title><rect x="311.3" y="835.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="311.3" y="819.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="311.3" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="311.3" y="787.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.3" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (2 samples, 0.08%)</title><rect x="311.3" y="771.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.3" y="782.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (2 samples, 0.08%)</title><rect x="311.3" y="755.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.04%)</title><rect x="311.3" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.3" y="750.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="311.8" y="739.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="314.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="312.3" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (64 samples, 2.55%)</title><rect x="312.8" y="851.0" width="30.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.8" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 2.55%)</title><rect x="312.8" y="835.0" width="30.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.8" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (59 samples, 2.35%)</title><rect x="312.8" y="819.0" width="27.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.8" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.12%)</title><rect x="312.8" y="803.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (2 samples, 0.08%)</title><rect x="312.8" y="787.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="312.8" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="312.8" y="755.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="315.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (2 samples, 0.08%)</title><rect x="312.8" y="739.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="315.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority (1 samples, 0.04%)</title><rect x="312.8" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.8" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (1 samples, 0.04%)</title><rect x="313.2" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.2" y="734.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (1 samples, 0.04%)</title><rect x="313.2" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.2" y="718.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (1 samples, 0.04%)</title><rect x="313.2" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/704105605.apply (1 samples, 0.04%)</title><rect x="313.7" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$130/704105605.apply (38 samples, 1.51%)</title><rect x="314.2" y="803.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (38 samples, 1.51%)</title><rect x="314.2" y="787.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.08%)</title><rect x="314.6" y="771.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.08%)</title><rect x="314.6" y="755.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (35 samples, 1.39%)</title><rect x="315.6" y="771.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (35 samples, 1.39%)</title><rect x="315.6" y="755.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (35 samples, 1.39%)</title><rect x="315.6" y="739.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.6" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (17 samples, 0.68%)</title><rect x="316.0" y="723.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.0" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.16%)</title><rect x="316.0" y="707.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (13 samples, 0.52%)</title><rect x="317.9" y="707.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.52%)</title><rect x="317.9" y="691.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (13 samples, 0.52%)</title><rect x="317.9" y="675.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.24%)</title><rect x="319.8" y="659.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="322.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.20%)</title><rect x="319.8" y="643.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.20%)</title><rect x="319.8" y="627.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.16%)</title><rect x="320.3" y="611.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.3" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.04%)</title><rect x="320.7" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="323.7" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="320.7" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="323.7" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="320.7" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="323.7" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="320.7" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.7" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="320.7" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.7" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="320.7" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.7" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="320.7" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="323.7" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="320.7" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.7" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.08%)</title><rect x="321.2" y="595.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (2 samples, 0.08%)</title><rect x="321.2" y="579.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$212/595921453.applyAsLong (2 samples, 0.08%)</title><rect x="321.2" y="563.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.2" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.08%)</title><rect x="321.2" y="547.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.08%)</title><rect x="321.2" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.08%)</title><rect x="321.2" y="515.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.08%)</title><rect x="321.2" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="322.2" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (3 samples, 0.12%)</title><rect x="322.6" y="659.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (3 samples, 0.12%)</title><rect x="322.6" y="643.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.6" y="654.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (3 samples, 0.12%)</title><rect x="322.6" y="627.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.6" y="638.0"></text>
</g>
<g>
<title>java/util/OptionalLong.&lt;init&gt; (3 samples, 0.12%)</title><rect x="322.6" y="611.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.08%)</title><rect x="323.1" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.68%)</title><rect x="324.0" y="723.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="327.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/611985749.run (17 samples, 0.68%)</title><rect x="324.0" y="707.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="327.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (17 samples, 0.68%)</title><rect x="324.0" y="691.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="327.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.28%)</title><rect x="325.0" y="675.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (4 samples, 0.16%)</title><rect x="325.5" y="659.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.16%)</title><rect x="325.5" y="643.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="326.9" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.08%)</title><rect x="327.3" y="659.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.04%)</title><rect x="327.8" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (4 samples, 0.16%)</title><rect x="328.3" y="675.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (4 samples, 0.16%)</title><rect x="328.3" y="659.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.3" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (4 samples, 0.16%)</title><rect x="328.3" y="643.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.3" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (4 samples, 0.16%)</title><rect x="328.3" y="627.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.3" y="638.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (4 samples, 0.16%)</title><rect x="328.3" y="611.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.3" y="622.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.04%)</title><rect x="328.7" y="595.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="331.7" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="328.7" y="579.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="331.7" y="590.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (2 samples, 0.08%)</title><rect x="329.2" y="595.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="332.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.04%)</title><rect x="330.2" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (1 samples, 0.04%)</title><rect x="330.2" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.12%)</title><rect x="330.6" y="675.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$194/381966895.apply (18 samples, 0.72%)</title><rect x="332.0" y="803.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (18 samples, 0.72%)</title><rect x="332.0" y="787.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (18 samples, 0.72%)</title><rect x="332.0" y="771.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (13 samples, 0.52%)</title><rect x="334.4" y="755.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (13 samples, 0.52%)</title><rect x="334.4" y="739.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.4" y="750.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (12 samples, 0.48%)</title><rect x="334.9" y="723.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.9" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.08%)</title><rect x="334.9" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.9" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (10 samples, 0.40%)</title><rect x="335.8" y="707.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.8" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.20%)</title><rect x="338.1" y="691.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.1" y="702.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.16%)</title><rect x="338.6" y="675.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="341.6" y="686.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.08%)</title><rect x="339.1" y="659.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="342.1" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="340.0" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="343.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.16%)</title><rect x="340.5" y="819.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.16%)</title><rect x="340.5" y="803.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$196/1579352741.apply (4 samples, 0.16%)</title><rect x="340.5" y="787.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (4 samples, 0.16%)</title><rect x="340.5" y="771.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3 samples, 0.12%)</title><rect x="340.5" y="755.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3 samples, 0.12%)</title><rect x="340.5" y="739.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="343.5" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (3 samples, 0.12%)</title><rect x="340.5" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="343.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (3 samples, 0.12%)</title><rect x="340.5" y="707.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (2 samples, 0.08%)</title><rect x="340.5" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.04%)</title><rect x="341.4" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.04%)</title><rect x="341.4" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.04%)</title><rect x="341.9" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.04%)</title><rect x="341.9" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.04%)</title><rect x="341.9" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.04%)</title><rect x="342.4" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.04%)</title><rect x="342.4" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="342.4" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="342.4" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="345.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$209/1821490069.apply (1 samples, 0.04%)</title><rect x="342.8" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.04%)</title><rect x="342.8" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="342.8" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="342.8" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="342.8" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="342.8" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.04%)</title><rect x="343.3" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.04%)</title><rect x="343.3" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.04%)</title><rect x="343.3" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="343.8" y="883.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="343.8" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="343.8" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="343.8" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="343.8" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.8" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="343.8" y="803.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="346.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (39 samples, 1.55%)</title><rect x="344.3" y="963.0" width="18.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.3" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.04%)</title><rect x="344.7" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.04%)</title><rect x="345.2" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="345.2" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.2" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="345.2" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.2" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="345.2" y="899.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="348.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.08%)</title><rect x="345.7" y="947.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="346.1" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.1" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="346.1" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (5 samples, 0.20%)</title><rect x="346.6" y="947.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.6" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.20%)</title><rect x="346.6" y="931.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.20%)</title><rect x="346.6" y="915.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.6" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="348.0" y="899.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="351.0" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="348.5" y="899.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="351.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (11 samples, 0.44%)</title><rect x="349.0" y="947.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.0" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.44%)</title><rect x="349.0" y="931.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.0" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.44%)</title><rect x="349.0" y="915.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.0" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="349.9" y="899.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="352.9" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (8 samples, 0.32%)</title><rect x="350.4" y="899.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.4" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (5 samples, 0.20%)</title><rect x="351.8" y="883.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.20%)</title><rect x="351.8" y="867.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (1 samples, 0.04%)</title><rect x="351.8" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.8" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.08%)</title><rect x="352.2" y="851.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.2" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (1 samples, 0.04%)</title><rect x="352.7" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.7" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.04%)</title><rect x="352.7" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="355.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.04%)</title><rect x="352.7" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.04%)</title><rect x="352.7" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.7" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.08%)</title><rect x="353.2" y="851.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="353.2" y="835.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="353.2" y="819.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.08%)</title><rect x="353.2" y="803.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (17 samples, 0.68%)</title><rect x="354.1" y="947.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (15 samples, 0.60%)</title><rect x="355.1" y="931.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="355.1" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="355.1" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="355.1" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (9 samples, 0.36%)</title><rect x="355.5" y="915.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="358.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.08%)</title><rect x="358.4" y="899.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.4" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="359.3" y="899.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="362.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.08%)</title><rect x="359.8" y="915.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.08%)</title><rect x="359.8" y="899.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.12%)</title><rect x="360.7" y="915.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.08%)</title><rect x="361.2" y="899.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.08%)</title><rect x="361.2" y="883.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="361.6" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.6" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="362.1" y="947.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="365.1" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="362.1" y="931.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.1" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="362.1" y="915.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="365.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$173/449866345.accept (1 samples, 0.04%)</title><rect x="362.6" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.04%)</title><rect x="362.6" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (591 samples, 23.55%)</title><rect x="363.1" y="1075.0" width="277.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.1" y="1086.0">jdk/internal/net/http/common/Sequenti..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (589 samples, 23.47%)</title><rect x="364.0" y="1059.0" width="276.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.0" y="1070.0">jdk/internal/net/http/common/Sequenti..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (589 samples, 23.47%)</title><rect x="364.0" y="1043.0" width="276.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.0" y="1054.0">jdk/internal/net/http/common/Sequenti..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$165/905255379.run (589 samples, 23.47%)</title><rect x="364.0" y="1027.0" width="276.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.0" y="1038.0">jdk/internal/net/http/Http1AsyncRecei..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (589 samples, 23.47%)</title><rect x="364.0" y="1011.0" width="276.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.0" y="1022.0">jdk/internal/net/http/Http1AsyncRecei..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.04%)</title><rect x="364.0" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.04%)</title><rect x="364.0" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.04%)</title><rect x="364.0" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.20%)</title><rect x="364.5" y="995.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.16%)</title><rect x="364.5" y="979.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.16%)</title><rect x="364.5" y="963.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.04%)</title><rect x="364.5" y="947.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.04%)</title><rect x="364.5" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.04%)</title><rect x="364.5" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.04%)</title><rect x="364.5" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.04%)</title><rect x="364.5" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (3 samples, 0.12%)</title><rect x="364.9" y="947.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (3 samples, 0.12%)</title><rect x="364.9" y="931.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.12%)</title><rect x="364.9" y="915.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.12%)</title><rect x="364.9" y="899.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.04%)</title><rect x="366.4" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.04%)</title><rect x="366.4" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="366.4" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (581 samples, 23.15%)</title><rect x="366.8" y="995.0" width="273.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.8" y="1006.0">jdk/internal/net/http/Http1Response$B..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (581 samples, 23.15%)</title><rect x="366.8" y="979.0" width="273.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.8" y="990.0">jdk/internal/net/http/Http1Response$R..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (581 samples, 23.15%)</title><rect x="366.8" y="963.0" width="273.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.8" y="974.0">jdk/internal/net/http/Http1Response$B..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (581 samples, 23.15%)</title><rect x="366.8" y="947.0" width="273.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.8" y="958.0">jdk/internal/net/http/Http1Response$B..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (581 samples, 23.15%)</title><rect x="366.8" y="931.0" width="273.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="369.8" y="942.0">jdk/internal/net/http/ResponseContent..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (580 samples, 23.11%)</title><rect x="367.3" y="915.0" width="272.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.3" y="926.0">jdk/internal/net/http/ResponseConten..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="367.8" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.8" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="367.8" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/1584023611.accept (1 samples, 0.04%)</title><rect x="367.8" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$218/1882091062.run (85 samples, 3.39%)</title><rect x="368.2" y="899.0" width="40.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.2" y="910.0">jdk..</text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.08%)</title><rect x="368.2" y="883.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (83 samples, 3.31%)</title><rect x="369.2" y="883.0" width="39.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.2" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (83 samples, 3.31%)</title><rect x="369.2" y="867.0" width="39.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.2" y="878.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.32%)</title><rect x="370.1" y="851.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.16%)</title><rect x="370.1" y="835.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="373.1" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.16%)</title><rect x="370.1" y="819.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="373.1" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.16%)</title><rect x="370.1" y="803.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.1" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.16%)</title><rect x="370.1" y="787.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.16%)</title><rect x="370.1" y="771.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="371.1" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="371.1" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.08%)</title><rect x="371.1" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.1" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="372.0" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="372.0" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.04%)</title><rect x="372.0" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.0" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.04%)</title><rect x="372.0" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.12%)</title><rect x="372.5" y="835.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.12%)</title><rect x="372.5" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.12%)</title><rect x="372.5" y="803.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.08%)</title><rect x="372.9" y="787.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="372.9" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="372.9" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="372.9" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$187/1350857380.test (1 samples, 0.04%)</title><rect x="372.9" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (1 samples, 0.04%)</title><rect x="372.9" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="373.4" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.4" y="782.0"></text>
</g>
<g>
<title>java/util/Optional.map (2 samples, 0.08%)</title><rect x="373.9" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$227/522636393.apply (2 samples, 0.08%)</title><rect x="373.9" y="835.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (2 samples, 0.08%)</title><rect x="373.9" y="819.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="373.9" y="803.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="373.9" y="787.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="373.9" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.08%)</title><rect x="373.9" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.08%)</title><rect x="373.9" y="739.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.9" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.08%)</title><rect x="373.9" y="723.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.04%)</title><rect x="374.3" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="377.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (71 samples, 2.83%)</title><rect x="374.8" y="851.0" width="33.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.8" y="862.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.16%)</title><rect x="375.3" y="835.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.3" y="846.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.16%)</title><rect x="375.3" y="819.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.08%)</title><rect x="376.2" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.2" y="814.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.08%)</title><rect x="376.2" y="787.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="379.2" y="798.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="376.2" y="771.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="379.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="376.2" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="379.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="376.2" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="379.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="376.2" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="379.2" y="734.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.04%)</title><rect x="376.7" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="379.7" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="376.7" y="755.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="379.7" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="376.7" y="739.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="379.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.04%)</title><rect x="377.2" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (65 samples, 2.59%)</title><rect x="377.6" y="835.0" width="30.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.6" y="846.0">jd..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="380.9" y="819.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="383.9" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="380.9" y="803.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="383.9" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="380.9" y="787.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="383.9" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.04%)</title><rect x="380.9" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="383.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (17 samples, 0.68%)</title><rect x="381.4" y="819.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.4" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.04%)</title><rect x="388.9" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (40 samples, 1.59%)</title><rect x="389.4" y="819.0" width="18.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (38 samples, 1.51%)</title><rect x="390.3" y="803.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (3 samples, 0.12%)</title><rect x="390.3" y="787.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.08%)</title><rect x="390.8" y="771.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="393.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.08%)</title><rect x="390.8" y="755.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.04%)</title><rect x="391.3" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (35 samples, 1.39%)</title><rect x="391.7" y="787.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (35 samples, 1.39%)</title><rect x="391.7" y="771.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (35 samples, 1.39%)</title><rect x="391.7" y="755.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (35 samples, 1.39%)</title><rect x="391.7" y="739.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (35 samples, 1.39%)</title><rect x="391.7" y="723.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="394.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (35 samples, 1.39%)</title><rect x="391.7" y="707.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (35 samples, 1.39%)</title><rect x="391.7" y="691.0" width="16.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.7" y="702.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.04%)</title><rect x="392.2" y="675.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="395.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.27%)</title><rect x="392.7" y="675.0" width="15.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="395.7" y="686.0"></text>
</g>
<g>
<title>__GI_write (32 samples, 1.27%)</title><rect x="392.7" y="659.0" width="15.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="395.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 1.27%)</title><rect x="392.7" y="643.0" width="15.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="395.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 1.27%)</title><rect x="392.7" y="627.0" width="15.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.7" y="638.0"></text>
</g>
<g>
<title>__x64_sys_write (30 samples, 1.20%)</title><rect x="393.6" y="611.0" width="14.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="396.6" y="622.0"></text>
</g>
<g>
<title>ksys_write (30 samples, 1.20%)</title><rect x="393.6" y="595.0" width="14.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="396.6" y="606.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="393.6" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="396.6" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="393.6" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.6" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="393.6" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="396.6" y="558.0"></text>
</g>
<g>
<title>vfs_write (29 samples, 1.16%)</title><rect x="394.1" y="579.0" width="13.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="397.1" y="590.0"></text>
</g>
<g>
<title>__vfs_write (27 samples, 1.08%)</title><rect x="394.1" y="563.0" width="12.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="397.1" y="574.0"></text>
</g>
<g>
<title>new_sync_write (27 samples, 1.08%)</title><rect x="394.1" y="547.0" width="12.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="397.1" y="558.0"></text>
</g>
<g>
<title>pipe_write (27 samples, 1.08%)</title><rect x="394.1" y="531.0" width="12.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="397.1" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (24 samples, 0.96%)</title><rect x="395.0" y="515.0" width="11.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="398.0" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 0.96%)</title><rect x="395.0" y="499.0" width="11.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.0" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="395.0" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="398.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.92%)</title><rect x="395.5" y="483.0" width="10.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.5" y="494.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="406.3" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="409.3" y="526.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="406.3" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="409.3" y="510.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="406.3" y="483.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="409.3" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.08%)</title><rect x="406.8" y="563.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.8" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="406.8" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="409.8" y="558.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="407.3" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.3" y="558.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="407.3" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="410.3" y="542.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.04%)</title><rect x="407.7" y="675.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="410.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/1584023611.accept (11 samples, 0.44%)</title><rect x="408.2" y="899.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (11 samples, 0.44%)</title><rect x="408.2" y="883.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (11 samples, 0.44%)</title><rect x="408.2" y="867.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.36%)</title><rect x="408.2" y="851.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.36%)</title><rect x="408.2" y="835.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9 samples, 0.36%)</title><rect x="408.2" y="819.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 0.36%)</title><rect x="408.2" y="803.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="409.6" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.04%)</title><rect x="409.6" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="409.6" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="409.6" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.04%)</title><rect x="409.6" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="409.6" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="409.6" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$222/334740189.accept (1 samples, 0.04%)</title><rect x="409.6" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$221/1241568452.accept (3 samples, 0.12%)</title><rect x="410.1" y="787.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (3 samples, 0.12%)</title><rect x="410.1" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (3 samples, 0.12%)</title><rect x="410.1" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (3 samples, 0.12%)</title><rect x="410.1" y="739.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (3 samples, 0.12%)</title><rect x="410.1" y="723.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$222/334740189.accept (2 samples, 0.08%)</title><rect x="411.5" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.08%)</title><rect x="411.5" y="771.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.08%)</title><rect x="411.5" y="755.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.5" y="766.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.08%)</title><rect x="411.5" y="739.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.5" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.08%)</title><rect x="411.5" y="723.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$175/406392741.accept (2 samples, 0.08%)</title><rect x="412.4" y="851.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.08%)</title><rect x="412.4" y="835.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (478 samples, 19.04%)</title><rect x="413.4" y="899.0" width="224.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.4" y="910.0">jdk/internal/net/http/Http1Res..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (476 samples, 18.96%)</title><rect x="414.3" y="883.0" width="223.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.3" y="894.0">jdk/internal/net/http/Http1Re..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (476 samples, 18.96%)</title><rect x="414.3" y="867.0" width="223.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.3" y="878.0">jdk/internal/net/http/Respons..</text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.04%)</title><rect x="414.8" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (473 samples, 18.84%)</title><rect x="415.2" y="851.0" width="222.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.2" y="862.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (473 samples, 18.84%)</title><rect x="415.2" y="835.0" width="222.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.2" y="846.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (471 samples, 18.76%)</title><rect x="416.2" y="819.0" width="221.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.2" y="830.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (470 samples, 18.73%)</title><rect x="416.7" y="803.0" width="220.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.7" y="814.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$223/1023865256.accept (469 samples, 18.69%)</title><rect x="417.1" y="787.0" width="220.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.1" y="798.0">jdk/internal/net/http/Http1Re..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (469 samples, 18.69%)</title><rect x="417.1" y="771.0" width="220.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.1" y="782.0">jdk/internal/net/http/Http1Re..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (469 samples, 18.69%)</title><rect x="417.1" y="755.0" width="220.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.1" y="766.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (469 samples, 18.69%)</title><rect x="417.1" y="739.0" width="220.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.1" y="750.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.08%)</title><rect x="417.6" y="723.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="417.6" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="417.6" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="417.6" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$226/363328708.apply (1 samples, 0.04%)</title><rect x="418.1" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.04%)</title><rect x="418.1" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.04%)</title><rect x="418.1" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.1" y="686.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.04%)</title><rect x="418.1" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.1" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.04%)</title><rect x="418.1" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.04%)</title><rect x="418.5" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (464 samples, 18.49%)</title><rect x="419.0" y="723.0" width="218.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.0" y="734.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.08%)</title><rect x="419.0" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (462 samples, 18.41%)</title><rect x="419.9" y="707.0" width="217.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.9" y="718.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (462 samples, 18.41%)</title><rect x="419.9" y="691.0" width="217.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.9" y="702.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (460 samples, 18.33%)</title><rect x="420.4" y="675.0" width="216.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.4" y="686.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="420.9" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.9" y="670.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="420.9" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.9" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="420.9" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="423.9" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="420.9" y="611.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="423.9" y="622.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="420.9" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.9" y="606.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="420.9" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="423.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="420.9" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="423.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (94 samples, 3.75%)</title><rect x="421.4" y="659.0" width="44.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.4" y="670.0">java..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.12%)</title><rect x="421.8" y="643.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.8" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="422.8" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.8" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.04%)</title><rect x="422.8" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="422.8" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.04%)</title><rect x="423.2" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="423.2" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (89 samples, 3.55%)</title><rect x="423.7" y="643.0" width="41.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.7" y="654.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (89 samples, 3.55%)</title><rect x="423.7" y="627.0" width="41.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.7" y="638.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.setPriority (4 samples, 0.16%)</title><rect x="423.7" y="611.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (2 samples, 0.08%)</title><rect x="424.6" y="595.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.6" y="606.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (1 samples, 0.04%)</title><rect x="425.1" y="579.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="428.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.addUnstarted (1 samples, 0.04%)</title><rect x="425.6" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.6" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (84 samples, 3.35%)</title><rect x="426.1" y="611.0" width="39.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.1" y="622.0">jav..</text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (8 samples, 0.32%)</title><rect x="426.1" y="595.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.1" y="606.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (3 samples, 0.12%)</title><rect x="426.5" y="579.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.5" y="590.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.04%)</title><rect x="427.0" y="563.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="430.0" y="574.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="427.5" y="563.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="430.5" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (4 samples, 0.16%)</title><rect x="427.9" y="579.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.9" y="590.0"></text>
</g>
<g>
<title>JVM_GetInheritedAccessControlContext (1 samples, 0.04%)</title><rect x="429.3" y="563.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="432.3" y="574.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="429.3" y="547.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="432.3" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (76 samples, 3.03%)</title><rect x="429.8" y="595.0" width="35.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.8" y="606.0">jav..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (5 samples, 0.20%)</title><rect x="429.8" y="579.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="432.8" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (3 samples, 0.12%)</title><rect x="432.2" y="579.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="435.2" y="590.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (62 samples, 2.47%)</title><rect x="433.6" y="579.0" width="29.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="436.6" y="590.0">JV..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.08%)</title><rect x="446.3" y="563.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="449.3" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="447.2" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.2" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (4 samples, 0.16%)</title><rect x="447.7" y="563.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="450.7" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.16%)</title><rect x="447.7" y="547.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="450.7" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="447.7" y="531.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="450.7" y="542.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="447.7" y="515.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="450.7" y="526.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.04%)</title><rect x="448.2" y="515.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="451.2" y="526.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.08%)</title><rect x="448.6" y="531.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="451.6" y="542.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (1 samples, 0.04%)</title><rect x="449.6" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="452.6" y="574.0"></text>
</g>
<g>
<title>Method::validate_bci_from_bcp(unsigned char*) const (1 samples, 0.04%)</title><rect x="450.0" y="563.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="453.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.04%)</title><rect x="450.5" y="563.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="453.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="451.0" y="563.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="454.0" y="574.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (18 samples, 0.72%)</title><rect x="451.4" y="563.0" width="8.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="454.4" y="574.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.04%)</title><rect x="453.3" y="547.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="456.3" y="558.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="453.8" y="547.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="456.8" y="558.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (12 samples, 0.48%)</title><rect x="454.3" y="547.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="457.3" y="558.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.04%)</title><rect x="455.2" y="531.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="458.2" y="542.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (7 samples, 0.28%)</title><rect x="455.7" y="531.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="458.7" y="542.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.16%)</title><rect x="457.1" y="515.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="460.1" y="526.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.08%)</title><rect x="459.0" y="531.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="462.0" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="459.4" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="462.4" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="459.4" y="499.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="462.4" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="459.4" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.4" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="459.4" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.4" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="459.4" y="451.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="462.4" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="459.4" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.4" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="459.4" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="462.4" y="430.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (2 samples, 0.08%)</title><rect x="459.9" y="563.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="462.9" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="460.4" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="463.4" y="558.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.16%)</title><rect x="460.8" y="563.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="463.8" y="574.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="461.3" y="547.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="464.3" y="558.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="461.8" y="547.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="464.8" y="558.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.04%)</title><rect x="462.3" y="547.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="465.3" y="558.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_getStackAccessControlContext (1 samples, 0.04%)</title><rect x="462.7" y="579.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="465.7" y="590.0"></text>
</g>
<g>
<title>Method::validate_bci_from_bcp(unsigned char*) const (1 samples, 0.04%)</title><rect x="463.2" y="579.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="466.2" y="590.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.08%)</title><rect x="463.7" y="579.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="466.7" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="464.6" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="467.6" y="590.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="465.1" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="468.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.start (364 samples, 14.50%)</title><rect x="465.5" y="659.0" width="171.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.5" y="670.0">java/lang/Thread.start</text>
</g>
<g>
<title>java/lang/Thread.start0 (362 samples, 14.42%)</title><rect x="466.0" y="643.0" width="170.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.0" y="654.0">java/lang/Thread.start0</text>
</g>
<g>
<title>JVM_StartThread (253 samples, 10.08%)</title><rect x="467.0" y="627.0" width="118.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="470.0" y="638.0">JVM_StartThread</text>
</g>
<g>
<title>DirtyCardQueue::DirtyCardQueue(DirtyCardQueueSet*, bool) (1 samples, 0.04%)</title><rect x="467.4" y="611.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="470.4" y="622.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (15 samples, 0.60%)</title><rect x="467.9" y="611.0" width="7.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="470.9" y="622.0"></text>
</g>
<g>
<title>JavaThread::initialize() (1 samples, 0.04%)</title><rect x="468.4" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="471.4" y="606.0"></text>
</g>
<g>
<title>Parker::Allocate(JavaThread*) (1 samples, 0.04%)</title><rect x="468.4" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="471.4" y="590.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (1 samples, 0.04%)</title><rect x="468.8" y="595.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="471.8" y="606.0"></text>
</g>
<g>
<title>Thread::Thread() (11 samples, 0.44%)</title><rect x="469.3" y="595.0" width="5.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="472.3" y="606.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (1 samples, 0.04%)</title><rect x="469.3" y="579.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="472.3" y="590.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned long) (2 samples, 0.08%)</title><rect x="469.8" y="579.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="472.8" y="590.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.08%)</title><rect x="469.8" y="563.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="472.8" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="470.2" y="547.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="473.2" y="558.0"></text>
</g>
<g>
<title>JfrTraceId::assign_thread_id() (1 samples, 0.04%)</title><rect x="470.7" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="473.7" y="590.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (2 samples, 0.08%)</title><rect x="471.2" y="579.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="474.2" y="590.0"></text>
</g>
<g>
<title>Thread::SpinAcquire(int volatile*, char const*) (1 samples, 0.04%)</title><rect x="472.1" y="579.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="475.1" y="590.0"></text>
</g>
<g>
<title>ThreadHeapSampler::pick_next_sample(unsigned long) (3 samples, 0.12%)</title><rect x="472.6" y="579.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="475.6" y="590.0"></text>
</g>
<g>
<title>os::random() (1 samples, 0.04%)</title><rect x="474.0" y="579.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="477.0" y="590.0"></text>
</g>
<g>
<title>ThreadSafepointState::create(JavaThread*) (1 samples, 0.04%)</title><rect x="474.5" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="477.5" y="606.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="474.9" y="611.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="477.9" y="622.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (44 samples, 1.75%)</title><rect x="475.4" y="611.0" width="20.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="478.4" y="622.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (4 samples, 0.16%)</title><rect x="475.4" y="595.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="478.4" y="606.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="476.4" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="479.4" y="590.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.04%)</title><rect x="476.8" y="579.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="479.8" y="590.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="477.3" y="595.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="480.3" y="606.0"></text>
</g>
<g>
<title>Thread::is_hidden_from_external_view() const (1 samples, 0.04%)</title><rect x="477.8" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="480.8" y="606.0"></text>
</g>
<g>
<title>ThreadService::add_thread(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="478.2" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="481.2" y="606.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (37 samples, 1.47%)</title><rect x="478.7" y="595.0" width="17.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="481.7" y="606.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (2 samples, 0.08%)</title><rect x="479.2" y="579.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="482.2" y="590.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.04%)</title><rect x="479.6" y="563.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="482.6" y="574.0"></text>
</g>
<g>
<title>FreeHeap(void*) (1 samples, 0.04%)</title><rect x="480.1" y="579.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="483.1" y="590.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (28 samples, 1.12%)</title><rect x="480.6" y="579.0" width="13.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="483.6" y="590.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (2 samples, 0.08%)</title><rect x="492.8" y="563.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="495.8" y="574.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (2 samples, 0.08%)</title><rect x="492.8" y="547.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="495.8" y="558.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.08%)</title><rect x="493.8" y="579.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="496.8" y="590.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.04%)</title><rect x="494.7" y="579.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="497.7" y="590.0"></text>
</g>
<g>
<title>malloc@plt (2 samples, 0.08%)</title><rect x="495.2" y="579.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="498.2" y="590.0"></text>
</g>
<g>
<title>Monitor::lock() (22 samples, 0.88%)</title><rect x="496.1" y="611.0" width="10.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="499.1" y="622.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (15 samples, 0.60%)</title><rect x="496.6" y="595.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="499.6" y="606.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (3 samples, 0.12%)</title><rect x="497.5" y="579.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="500.5" y="590.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.12%)</title><rect x="498.9" y="579.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="501.9" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.20%)</title><rect x="500.3" y="579.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="503.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.20%)</title><rect x="500.3" y="563.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.20%)</title><rect x="500.3" y="547.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="503.3" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="501.7" y="531.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.7" y="542.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="501.7" y="515.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="504.7" y="526.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="501.7" y="499.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="504.7" y="510.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="502.7" y="579.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="505.7" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="503.2" y="579.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="506.2" y="590.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (3 samples, 0.12%)</title><rect x="503.6" y="595.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="506.6" y="606.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.12%)</title><rect x="505.0" y="595.0" width="1.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="508.0" y="606.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (6 samples, 0.24%)</title><rect x="506.4" y="611.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="509.4" y="622.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (2 samples, 0.08%)</title><rect x="507.4" y="595.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="510.4" y="606.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.04%)</title><rect x="507.9" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="510.9" y="590.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.08%)</title><rect x="508.3" y="595.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="511.3" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="509.3" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="512.3" y="622.0"></text>
</g>
<g>
<title>__getpagesize (1 samples, 0.04%)</title><rect x="509.7" y="611.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="512.7" y="622.0"></text>
</g>
<g>
<title>__getpagesize@plt (1 samples, 0.04%)</title><rect x="510.2" y="611.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="513.2" y="622.0"></text>
</g>
<g>
<title>__pthread_attr_destroy (1 samples, 0.04%)</title><rect x="510.7" y="611.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="513.7" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="511.1" y="611.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="514.1" y="622.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.08%)</title><rect x="511.6" y="611.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="514.6" y="622.0"></text>
</g>
<g>
<title>oopDesc::address_field_put(int, unsigned char*) (1 samples, 0.04%)</title><rect x="512.6" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="515.6" y="622.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.04%)</title><rect x="513.0" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="516.0" y="622.0"></text>
</g>
<g>
<title>os::Posix::get_initial_stack_size(os::ThreadType, unsigned long) (1 samples, 0.04%)</title><rect x="513.5" y="611.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="516.5" y="622.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (147 samples, 5.86%)</title><rect x="514.0" y="611.0" width="69.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="517.0" y="622.0">os::cre..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (12 samples, 0.48%)</title><rect x="514.4" y="595.0" width="5.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="517.4" y="606.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (12 samples, 0.48%)</title><rect x="514.4" y="579.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="517.4" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.24%)</title><rect x="515.4" y="563.0" width="2.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="518.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.20%)</title><rect x="515.8" y="547.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="518.8" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.20%)</title><rect x="515.8" y="531.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.8" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.12%)</title><rect x="516.8" y="515.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="519.8" y="526.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="517.3" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="520.3" y="510.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="517.3" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="520.3" y="494.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="517.7" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.7" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="518.2" y="563.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="521.2" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="518.7" y="563.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="521.7" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.08%)</title><rect x="519.1" y="563.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="522.1" y="574.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (1 samples, 0.04%)</title><rect x="520.1" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="523.1" y="606.0"></text>
</g>
<g>
<title>OSThread::pd_initialize() (1 samples, 0.04%)</title><rect x="520.1" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="523.1" y="590.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (1 samples, 0.04%)</title><rect x="520.1" y="563.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="523.1" y="574.0"></text>
</g>
<g>
<title>__clone (121 samples, 4.82%)</title><rect x="520.5" y="595.0" width="56.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="523.5" y="606.0">__clone</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (118 samples, 4.70%)</title><rect x="521.0" y="579.0" width="55.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.0" y="590.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (118 samples, 4.70%)</title><rect x="521.0" y="563.0" width="55.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.0" y="574.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_clone (113 samples, 4.50%)</title><rect x="523.4" y="547.0" width="53.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="526.4" y="558.0">__x64..</text>
</g>
<g>
<title>__put_user_4 (1 samples, 0.04%)</title><rect x="523.4" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.4" y="542.0"></text>
</g>
<g>
<title>_do_fork (111 samples, 4.42%)</title><rect x="523.8" y="531.0" width="52.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="526.8" y="542.0">_do_f..</text>
</g>
<g>
<title>acct_clear_integrals (1 samples, 0.04%)</title><rect x="524.3" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="527.3" y="526.0"></text>
</g>
<g>
<title>arch_dup_task_struct (1 samples, 0.04%)</title><rect x="524.8" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="527.8" y="526.0"></text>
</g>
<g>
<title>cgroup_can_fork (1 samples, 0.04%)</title><rect x="525.3" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="528.3" y="526.0"></text>
</g>
<g>
<title>copy_process.part.34 (83 samples, 3.31%)</title><rect x="525.7" y="515.0" width="39.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="528.7" y="526.0">cop..</text>
</g>
<g>
<title>__delayacct_tsk_init (2 samples, 0.08%)</title><rect x="528.5" y="499.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="531.5" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.08%)</title><rect x="528.5" y="483.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="531.5" y="494.0"></text>
</g>
<g>
<title>__vmalloc_node_range (20 samples, 0.80%)</title><rect x="529.5" y="499.0" width="9.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="532.5" y="510.0"></text>
</g>
<g>
<title>__get_vm_area_node (5 samples, 0.20%)</title><rect x="529.5" y="483.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="532.5" y="494.0"></text>
</g>
<g>
<title>alloc_vmap_area (4 samples, 0.16%)</title><rect x="529.5" y="467.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="532.5" y="478.0"></text>
</g>
<g>
<title>__insert_vmap_area (2 samples, 0.08%)</title><rect x="530.4" y="451.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="533.4" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (1 samples, 0.04%)</title><rect x="531.4" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="534.4" y="478.0"></text>
</g>
<g>
<title>__kmalloc_node (2 samples, 0.08%)</title><rect x="531.8" y="483.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="534.8" y="494.0"></text>
</g>
<g>
<title>alloc_pages_current (11 samples, 0.44%)</title><rect x="532.8" y="483.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="535.8" y="494.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (10 samples, 0.40%)</title><rect x="533.2" y="467.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="536.2" y="478.0"></text>
</g>
<g>
<title>clear_page_erms (8 samples, 0.32%)</title><rect x="533.7" y="451.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.7" y="462.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="537.5" y="451.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="540.5" y="462.0"></text>
</g>
<g>
<title>map_vm_area (2 samples, 0.08%)</title><rect x="537.9" y="483.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="540.9" y="494.0"></text>
</g>
<g>
<title>vmap_page_range_noflush (2 samples, 0.08%)</title><rect x="537.9" y="467.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="540.9" y="478.0"></text>
</g>
<g>
<title>alloc_pid (12 samples, 0.48%)</title><rect x="538.9" y="499.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.9" y="510.0"></text>
</g>
<g>
<title>idr_preload (1 samples, 0.04%)</title><rect x="543.1" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="546.1" y="494.0"></text>
</g>
<g>
<title>__radix_tree_preload (1 samples, 0.04%)</title><rect x="543.1" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="546.1" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.08%)</title><rect x="543.6" y="483.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.6" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="544.1" y="467.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.1" y="478.0"></text>
</g>
<g>
<title>arch_dup_task_struct (1 samples, 0.04%)</title><rect x="544.5" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="547.5" y="510.0"></text>
</g>
<g>
<title>fpu__copy (1 samples, 0.04%)</title><rect x="544.5" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="547.5" y="494.0"></text>
</g>
<g>
<title>arch_local_irq_enable (2 samples, 0.08%)</title><rect x="545.0" y="499.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="548.0" y="510.0"></text>
</g>
<g>
<title>cgroup_can_fork (1 samples, 0.04%)</title><rect x="545.9" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="548.9" y="510.0"></text>
</g>
<g>
<title>pids_can_fork (1 samples, 0.04%)</title><rect x="545.9" y="483.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.9" y="494.0"></text>
</g>
<g>
<title>cgroup_post_fork (3 samples, 0.12%)</title><rect x="546.4" y="499.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="549.4" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="547.3" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="550.3" y="494.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="547.3" y="467.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="550.3" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="547.3" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="550.3" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="547.3" y="435.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="550.3" y="446.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="547.3" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="550.3" y="430.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="547.3" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="550.3" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="547.3" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="550.3" y="398.0"></text>
</g>
<g>
<title>copy_thread_tls (2 samples, 0.08%)</title><rect x="547.8" y="499.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="550.8" y="510.0"></text>
</g>
<g>
<title>do_arch_prctl_64 (1 samples, 0.04%)</title><rect x="548.3" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="551.3" y="494.0"></text>
</g>
<g>
<title>freezer_fork (1 samples, 0.04%)</title><rect x="548.8" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.8" y="510.0"></text>
</g>
<g>
<title>get_random_u64 (9 samples, 0.36%)</title><rect x="549.2" y="499.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="552.2" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="553.5" y="499.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.5" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="553.5" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="556.5" y="494.0"></text>
</g>
<g>
<title>___slab_alloc (1 samples, 0.04%)</title><rect x="553.5" y="467.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="556.5" y="478.0"></text>
</g>
<g>
<title>new_slab (1 samples, 0.04%)</title><rect x="553.5" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="556.5" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="553.9" y="483.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="556.9" y="494.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="553.9" y="467.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="556.9" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="553.9" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="556.9" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="553.9" y="435.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="556.9" y="446.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="553.9" y="419.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="556.9" y="430.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="553.9" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="556.9" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="553.9" y="387.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="556.9" y="398.0"></text>
</g>
<g>
<title>memcpy_erms (8 samples, 0.32%)</title><rect x="554.4" y="499.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="557.4" y="510.0"></text>
</g>
<g>
<title>perf_event_init_task (3 samples, 0.12%)</title><rect x="558.2" y="499.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="561.2" y="510.0"></text>
</g>
<g>
<title>perf_pin_task_context (1 samples, 0.04%)</title><rect x="559.1" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="562.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="559.1" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="562.1" y="478.0"></text>
</g>
<g>
<title>perf_pin_task_context (1 samples, 0.04%)</title><rect x="559.6" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="562.6" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="560.0" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.0" y="510.0"></text>
</g>
<g>
<title>sched_fork (4 samples, 0.16%)</title><rect x="560.5" y="499.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.5" y="510.0"></text>
</g>
<g>
<title>__sched_fork (1 samples, 0.04%)</title><rect x="560.5" y="483.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="563.5" y="494.0"></text>
</g>
<g>
<title>init_numa_balancing (1 samples, 0.04%)</title><rect x="560.5" y="467.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="563.5" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.12%)</title><rect x="561.0" y="483.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="564.0" y="494.0"></text>
</g>
<g>
<title>security_task_alloc (3 samples, 0.12%)</title><rect x="562.4" y="499.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="565.4" y="510.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.04%)</title><rect x="563.3" y="483.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="566.3" y="494.0"></text>
</g>
<g>
<title>task_active_pid_ns (2 samples, 0.08%)</title><rect x="563.8" y="499.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="566.8" y="510.0"></text>
</g>
<g>
<title>ftrace_graph_init_task (1 samples, 0.04%)</title><rect x="564.7" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="567.7" y="526.0"></text>
</g>
<g>
<title>memset_erms (9 samples, 0.36%)</title><rect x="565.2" y="515.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="568.2" y="526.0"></text>
</g>
<g>
<title>perf_event_init_task (1 samples, 0.04%)</title><rect x="569.4" y="515.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="572.4" y="526.0"></text>
</g>
<g>
<title>security_task_alloc (1 samples, 0.04%)</title><rect x="569.9" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.9" y="526.0"></text>
</g>
<g>
<title>wake_up_new_task (12 samples, 0.48%)</title><rect x="570.4" y="515.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="573.4" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.48%)</title><rect x="570.4" y="499.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="573.4" y="510.0"></text>
</g>
<g>
<title>get_task_pid (1 samples, 0.04%)</title><rect x="576.0" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="579.0" y="542.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.08%)</title><rect x="576.5" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="579.5" y="590.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.08%)</title><rect x="576.5" y="563.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="579.5" y="574.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.08%)</title><rect x="576.5" y="547.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="579.5" y="558.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="577.0" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="580.0" y="542.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="577.0" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="580.0" y="526.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="577.0" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="580.0" y="510.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="577.0" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="580.0" y="494.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="577.0" y="467.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="580.0" y="478.0"></text>
</g>
<g>
<title>os::Posix::get_initial_stack_size(os::ThreadType, unsigned long) (1 samples, 0.04%)</title><rect x="577.4" y="595.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="580.4" y="606.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (11 samples, 0.44%)</title><rect x="577.9" y="595.0" width="5.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="580.9" y="606.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="582.6" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="585.6" y="590.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="582.6" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="585.6" y="574.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="582.6" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="585.6" y="558.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="582.6" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="585.6" y="542.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="582.6" y="515.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.6" y="526.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="582.6" y="499.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.6" y="510.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (2 samples, 0.08%)</title><rect x="583.1" y="611.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="586.1" y="622.0"></text>
</g>
<g>
<title>os::pd_start_thread(Thread*) (2 samples, 0.08%)</title><rect x="583.1" y="595.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="586.1" y="606.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="583.1" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="586.1" y="590.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.04%)</title><rect x="583.5" y="579.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="586.5" y="590.0"></text>
</g>
<g>
<title>pthread_attr_destroy@plt (1 samples, 0.04%)</title><rect x="584.0" y="611.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="587.0" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.12%)</title><rect x="584.5" y="611.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="587.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.55%)</title><rect x="585.9" y="627.0" width="18.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="588.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="585.9" y="611.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="588.9" y="622.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="585.9" y="595.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="588.9" y="606.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="585.9" y="579.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="588.9" y="590.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.08%)</title><rect x="586.8" y="611.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="589.8" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.08%)</title><rect x="587.8" y="611.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="590.8" y="622.0"></text>
</g>
<g>
<title>_int_malloc (3 samples, 0.12%)</title><rect x="588.7" y="611.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="591.7" y="622.0"></text>
</g>
<g>
<title>malloc_consolidate (5 samples, 0.20%)</title><rect x="590.1" y="611.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="593.1" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (25 samples, 1.00%)</title><rect x="592.5" y="611.0" width="11.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="595.5" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.60%)</title><rect x="597.2" y="595.0" width="7.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.2" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="597.2" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="600.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.56%)</title><rect x="597.6" y="579.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="600.6" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.32%)</title><rect x="600.5" y="563.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.5" y="574.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.32%)</title><rect x="600.5" y="547.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="603.5" y="558.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.28%)</title><rect x="600.9" y="531.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.9" y="542.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.12%)</title><rect x="600.9" y="515.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="603.9" y="526.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.08%)</title><rect x="601.4" y="499.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.4" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.16%)</title><rect x="602.4" y="515.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.4" y="526.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="603.8" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.8" y="510.0"></text>
</g>
<g>
<title>_IO_no_init (1 samples, 0.04%)</title><rect x="604.2" y="627.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="607.2" y="638.0"></text>
</g>
<g>
<title>__GI___mmap64 (1 samples, 0.04%)</title><rect x="604.7" y="627.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="607.7" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="604.7" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="607.7" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="604.7" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="607.7" y="606.0"></text>
</g>
<g>
<title>__x64_sys_mmap (1 samples, 0.04%)</title><rect x="604.7" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="607.7" y="590.0"></text>
</g>
<g>
<title>ksys_mmap_pgoff (1 samples, 0.04%)</title><rect x="604.7" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="607.7" y="574.0"></text>
</g>
<g>
<title>vm_mmap_pgoff (1 samples, 0.04%)</title><rect x="604.7" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="607.7" y="558.0"></text>
</g>
<g>
<title>do_mmap (1 samples, 0.04%)</title><rect x="604.7" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="607.7" y="542.0"></text>
</g>
<g>
<title>mmap_region (1 samples, 0.04%)</title><rect x="604.7" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="607.7" y="526.0"></text>
</g>
<g>
<title>security_vm_enough_memory_mm (1 samples, 0.04%)</title><rect x="604.7" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="607.7" y="510.0"></text>
</g>
<g>
<title>cap_vm_enough_memory (1 samples, 0.04%)</title><rect x="604.7" y="483.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="607.7" y="494.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (10 samples, 0.40%)</title><rect x="605.2" y="627.0" width="4.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="608.2" y="638.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (6 samples, 0.24%)</title><rect x="605.6" y="611.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="608.6" y="622.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (1 samples, 0.04%)</title><rect x="608.5" y="611.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="611.5" y="622.0"></text>
</g>
<g>
<title>_itoa_word (2 samples, 0.08%)</title><rect x="608.9" y="611.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="611.9" y="622.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.08%)</title><rect x="609.9" y="627.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="612.9" y="638.0"></text>
</g>
<g>
<title>__malloc (6 samples, 0.24%)</title><rect x="610.8" y="627.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="613.8" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (35 samples, 1.39%)</title><rect x="613.6" y="627.0" width="16.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="616.6" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 1.24%)</title><rect x="615.5" y="611.0" width="14.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="618.5" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 1.24%)</title><rect x="615.5" y="595.0" width="14.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="618.5" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 1.08%)</title><rect x="617.4" y="579.0" width="12.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="620.4" y="590.0"></text>
</g>
<g>
<title>do_futex (26 samples, 1.04%)</title><rect x="617.9" y="563.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="620.9" y="574.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 1.04%)</title><rect x="617.9" y="547.0" width="12.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="620.9" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.08%)</title><rect x="619.3" y="531.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="622.3" y="542.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.84%)</title><rect x="620.2" y="531.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="623.2" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.84%)</title><rect x="620.2" y="515.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="623.2" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.84%)</title><rect x="620.2" y="499.0" width="9.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="623.2" y="510.0"></text>
</g>
<g>
<title>_int_malloc (9 samples, 0.36%)</title><rect x="630.1" y="627.0" width="4.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="633.1" y="638.0"></text>
</g>
<g>
<title>malloc_consolidate (1 samples, 0.04%)</title><rect x="634.3" y="627.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="637.3" y="638.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.04%)</title><rect x="634.8" y="627.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="637.8" y="638.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.04%)</title><rect x="635.3" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="638.3" y="638.0"></text>
</g>
<g>
<title>pthread_cond_signal@plt (1 samples, 0.04%)</title><rect x="635.7" y="627.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="638.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.add (1 samples, 0.04%)</title><rect x="636.2" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 0.04%)</title><rect x="636.2" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.04%)</title><rect x="636.7" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="636.7" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="636.7" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.04%)</title><rect x="636.7" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="636.7" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="636.7" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$225/1153235963.accept (1 samples, 0.04%)</title><rect x="636.7" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.7" y="590.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="637.1" y="723.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="640.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (1 samples, 0.04%)</title><rect x="637.6" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.12%)</title><rect x="638.1" y="899.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.12%)</title><rect x="638.1" y="883.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (3 samples, 0.12%)</title><rect x="638.1" y="867.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (3 samples, 0.12%)</title><rect x="638.1" y="851.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (3 samples, 0.12%)</title><rect x="638.1" y="835.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.1" y="846.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.04%)</title><rect x="638.5" y="819.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="641.5" y="830.0"></text>
</g>
<g>
<title>oop_arraycopy (1 samples, 0.04%)</title><rect x="639.0" y="819.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="642.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.04%)</title><rect x="639.5" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.08%)</title><rect x="640.0" y="995.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="643.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 0.08%)</title><rect x="640.0" y="979.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.08%)</title><rect x="640.0" y="963.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.08%)</title><rect x="640.0" y="947.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.04%)</title><rect x="640.4" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.04%)</title><rect x="640.4" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.04%)</title><rect x="640.9" y="1155.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="640.9" y="1139.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1 samples, 0.04%)</title><rect x="640.9" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.04%)</title><rect x="640.9" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="640.9" y="1091.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (403 samples, 16.06%)</title><rect x="641.4" y="1155.0" width="189.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.4" y="1166.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.08%)</title><rect x="644.7" y="1139.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="647.7" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.08%)</title><rect x="644.7" y="1123.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="647.7" y="1134.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.04%)</title><rect x="644.7" y="1107.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="647.7" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="645.1" y="1107.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="648.1" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.04%)</title><rect x="645.1" y="1091.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="648.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/63001505.linkToTargetMethod (1 samples, 0.04%)</title><rect x="645.6" y="1139.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="645.6" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1748993312.get$Lambda (1 samples, 0.04%)</title><rect x="645.6" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.6" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="645.6" y="1091.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="648.6" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="645.6" y="1075.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="648.6" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="645.6" y="1059.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="648.6" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="645.6" y="1043.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="648.6" y="1054.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="645.6" y="1027.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="648.6" y="1038.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.04%)</title><rect x="645.6" y="1011.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="648.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (7 samples, 0.28%)</title><rect x="646.1" y="1139.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (7 samples, 0.28%)</title><rect x="646.1" y="1123.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.1" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (3 samples, 0.12%)</title><rect x="649.4" y="1139.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.4" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (123 samples, 4.90%)</title><rect x="650.8" y="1139.0" width="57.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.8" y="1150.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$190/467524561.accept (118 samples, 4.70%)</title><rect x="650.8" y="1123.0" width="55.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.8" y="1134.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (118 samples, 4.70%)</title><rect x="650.8" y="1107.0" width="55.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.8" y="1118.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (118 samples, 4.70%)</title><rect x="650.8" y="1091.0" width="55.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.8" y="1102.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (118 samples, 4.70%)</title><rect x="650.8" y="1075.0" width="55.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.8" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (118 samples, 4.70%)</title><rect x="650.8" y="1059.0" width="55.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.8" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.08%)</title><rect x="650.8" y="1043.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.04%)</title><rect x="651.2" y="1027.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (116 samples, 4.62%)</title><rect x="651.7" y="1043.0" width="54.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.7" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (116 samples, 4.62%)</title><rect x="651.7" y="1027.0" width="54.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.7" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (116 samples, 4.62%)</title><rect x="651.7" y="1011.0" width="54.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.7" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.04%)</title><rect x="651.7" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (115 samples, 4.58%)</title><rect x="652.2" y="995.0" width="54.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.2" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (115 samples, 4.58%)</title><rect x="652.2" y="979.0" width="54.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.2" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (115 samples, 4.58%)</title><rect x="652.2" y="963.0" width="54.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.2" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (115 samples, 4.58%)</title><rect x="652.2" y="947.0" width="54.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.2" y="958.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (16 samples, 0.64%)</title><rect x="652.7" y="931.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (16 samples, 0.64%)</title><rect x="652.7" y="915.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (16 samples, 0.64%)</title><rect x="652.7" y="899.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.64%)</title><rect x="652.7" y="883.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.56%)</title><rect x="653.6" y="867.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.52%)</title><rect x="653.6" y="851.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.52%)</title><rect x="653.6" y="835.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (13 samples, 0.52%)</title><rect x="653.6" y="819.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="653.6" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="653.6" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="653.6" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="653.6" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.48%)</title><rect x="654.1" y="803.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.48%)</title><rect x="654.1" y="787.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="657.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.48%)</title><rect x="654.1" y="771.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.48%)</title><rect x="654.1" y="755.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.48%)</title><rect x="654.1" y="739.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.1" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.16%)</title><rect x="654.5" y="723.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="657.5" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="655.5" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="658.5" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="655.9" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="658.9" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.28%)</title><rect x="656.4" y="723.0" width="3.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="659.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.24%)</title><rect x="656.9" y="707.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="659.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.24%)</title><rect x="656.9" y="691.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="659.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.20%)</title><rect x="657.4" y="675.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="660.4" y="686.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.20%)</title><rect x="657.4" y="659.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="660.4" y="670.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.20%)</title><rect x="657.4" y="643.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="660.4" y="654.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.20%)</title><rect x="657.4" y="627.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="660.4" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.20%)</title><rect x="657.4" y="611.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="660.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.20%)</title><rect x="657.4" y="595.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="660.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.04%)</title><rect x="659.7" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.04%)</title><rect x="659.7" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.12%)</title><rect x="660.2" y="931.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.12%)</title><rect x="660.2" y="915.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.12%)</title><rect x="660.2" y="899.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.04%)</title><rect x="661.1" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.04%)</title><rect x="661.1" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.1" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.04%)</title><rect x="661.1" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.1" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="661.1" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="661.1" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (95 samples, 3.78%)</title><rect x="661.6" y="931.0" width="44.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.6" y="942.0">jdk/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (95 samples, 3.78%)</title><rect x="661.6" y="915.0" width="44.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.6" y="926.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (95 samples, 3.78%)</title><rect x="661.6" y="899.0" width="44.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.6" y="910.0">sun/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.08%)</title><rect x="663.5" y="883.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (89 samples, 3.55%)</title><rect x="664.4" y="883.0" width="41.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.4" y="894.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (10 samples, 0.40%)</title><rect x="664.4" y="867.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.4" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.40%)</title><rect x="664.4" y="851.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.4" y="862.0"></text>
</g>
<g>
<title>jshort_arraycopy (1 samples, 0.04%)</title><rect x="668.6" y="835.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="671.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (79 samples, 3.15%)</title><rect x="669.1" y="867.0" width="37.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.1" y="878.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (79 samples, 3.15%)</title><rect x="669.1" y="851.0" width="37.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.1" y="862.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (78 samples, 3.11%)</title><rect x="669.6" y="835.0" width="36.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.6" y="846.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.04%)</title><rect x="670.0" y="819.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="673.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 2.87%)</title><rect x="670.5" y="819.0" width="33.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="673.5" y="830.0">[u..</text>
</g>
<g>
<title>__GI___libc_read (72 samples, 2.87%)</title><rect x="670.5" y="803.0" width="33.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="673.5" y="814.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 2.79%)</title><rect x="671.5" y="787.0" width="32.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="674.5" y="798.0">en..</text>
</g>
<g>
<title>do_syscall_64 (70 samples, 2.79%)</title><rect x="671.5" y="771.0" width="32.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.5" y="782.0">do..</text>
</g>
<g>
<title>__x64_sys_read (62 samples, 2.47%)</title><rect x="675.2" y="755.0" width="29.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.2" y="766.0">__..</text>
</g>
<g>
<title>ksys_read (62 samples, 2.47%)</title><rect x="675.2" y="739.0" width="29.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="678.2" y="750.0">ks..</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.16%)</title><rect x="675.2" y="723.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="678.2" y="734.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.12%)</title><rect x="675.7" y="707.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="678.7" y="718.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="676.2" y="691.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.2" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="677.1" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="680.1" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="677.1" y="707.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="680.1" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="677.1" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="680.1" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="677.1" y="675.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="680.1" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="677.1" y="659.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="680.1" y="670.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="677.1" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="680.1" y="654.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="677.1" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="680.1" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="677.1" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="680.1" y="622.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.04%)</title><rect x="677.6" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="680.6" y="734.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="678.0" y="723.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="681.0" y="734.0"></text>
</g>
<g>
<title>vfs_read (55 samples, 2.19%)</title><rect x="678.5" y="723.0" width="25.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="681.5" y="734.0">v..</text>
</g>
<g>
<title>__vfs_read (49 samples, 1.95%)</title><rect x="679.5" y="707.0" width="23.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="682.5" y="718.0">_..</text>
</g>
<g>
<title>new_sync_read (48 samples, 1.91%)</title><rect x="679.5" y="691.0" width="22.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="682.5" y="702.0">n..</text>
</g>
<g>
<title>sock_read_iter (48 samples, 1.91%)</title><rect x="679.5" y="675.0" width="22.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.5" y="686.0">s..</text>
</g>
<g>
<title>sock_recvmsg (48 samples, 1.91%)</title><rect x="679.5" y="659.0" width="22.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="682.5" y="670.0">s..</text>
</g>
<g>
<title>inet_recvmsg (44 samples, 1.75%)</title><rect x="679.9" y="643.0" width="20.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="682.9" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (44 samples, 1.75%)</title><rect x="679.9" y="627.0" width="20.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="682.9" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.16%)</title><rect x="681.8" y="611.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="684.8" y="622.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.16%)</title><rect x="681.8" y="595.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.8" y="606.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.16%)</title><rect x="681.8" y="579.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="684.8" y="590.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="681.8" y="563.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="684.8" y="574.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="681.8" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="684.8" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="682.3" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="685.3" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.08%)</title><rect x="682.7" y="563.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.7" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="683.2" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="686.2" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (35 samples, 1.39%)</title><rect x="683.7" y="611.0" width="16.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="686.7" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (35 samples, 1.39%)</title><rect x="683.7" y="595.0" width="16.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="686.7" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (35 samples, 1.39%)</title><rect x="683.7" y="579.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="686.7" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.08%)</title><rect x="683.7" y="563.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="686.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.04%)</title><rect x="683.7" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="686.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="683.7" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="686.7" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="684.2" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="687.2" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="684.2" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="687.2" y="542.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="684.6" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="687.6" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (32 samples, 1.27%)</title><rect x="685.1" y="563.0" width="15.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="688.1" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (30 samples, 1.20%)</title><rect x="686.0" y="547.0" width="14.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="689.0" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 1.20%)</title><rect x="686.0" y="531.0" width="14.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.0" y="542.0"></text>
</g>
<g>
<title>ip_local_out (30 samples, 1.20%)</title><rect x="686.0" y="515.0" width="14.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="689.0" y="526.0"></text>
</g>
<g>
<title>ip_output (30 samples, 1.20%)</title><rect x="686.0" y="499.0" width="14.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.0" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (29 samples, 1.16%)</title><rect x="686.0" y="483.0" width="13.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.0" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (29 samples, 1.16%)</title><rect x="686.0" y="467.0" width="13.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.0" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 1.00%)</title><rect x="686.5" y="451.0" width="11.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="689.5" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.21 (25 samples, 1.00%)</title><rect x="686.5" y="435.0" width="11.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="689.5" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 1.00%)</title><rect x="686.5" y="419.0" width="11.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="689.5" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 1.00%)</title><rect x="686.5" y="403.0" width="11.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="689.5" y="414.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 1.00%)</title><rect x="686.5" y="387.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="689.5" y="398.0"></text>
</g>
<g>
<title>process_backlog (23 samples, 0.92%)</title><rect x="687.4" y="371.0" width="10.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="690.4" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (21 samples, 0.84%)</title><rect x="688.4" y="355.0" width="9.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.4" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (18 samples, 0.72%)</title><rect x="689.8" y="339.0" width="8.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="692.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv (17 samples, 0.68%)</title><rect x="689.8" y="323.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (17 samples, 0.68%)</title><rect x="689.8" y="307.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="692.8" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (17 samples, 0.68%)</title><rect x="689.8" y="291.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.8" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (16 samples, 0.64%)</title><rect x="689.8" y="275.0" width="7.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="692.8" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 0.64%)</title><rect x="689.8" y="259.0" width="7.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="692.8" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="690.3" y="243.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="693.3" y="254.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="690.7" y="243.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="693.7" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (13 samples, 0.52%)</title><rect x="691.2" y="243.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.2" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="691.2" y="227.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (10 samples, 0.40%)</title><rect x="692.1" y="227.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="695.1" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (9 samples, 0.36%)</title><rect x="692.6" y="211.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.6" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="693.6" y="195.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="696.6" y="206.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="693.6" y="179.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="696.6" y="190.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="693.6" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="696.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.24%)</title><rect x="694.0" y="195.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="697.0" y="206.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="694.0" y="179.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.0" y="190.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.04%)</title><rect x="694.5" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="697.5" y="190.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="695.0" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.0" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.12%)</title><rect x="695.4" y="179.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="698.4" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="695.9" y="163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="698.9" y="174.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="695.9" y="147.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="698.9" y="158.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="695.9" y="131.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="698.9" y="142.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="695.9" y="115.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="698.9" y="126.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="695.9" y="99.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="698.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.04%)</title><rect x="696.4" y="163.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="699.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="696.8" y="227.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="699.8" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="697.3" y="275.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="697.8" y="323.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="700.8" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.12%)</title><rect x="698.3" y="451.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="701.3" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.12%)</title><rect x="698.3" y="435.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="701.3" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="698.7" y="419.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="701.7" y="430.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="699.2" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="702.2" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="699.7" y="483.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="702.7" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="700.1" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.1" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.12%)</title><rect x="700.6" y="643.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="703.6" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.08%)</title><rect x="701.1" y="627.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="704.1" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.08%)</title><rect x="701.1" y="611.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="704.1" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="701.5" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="704.5" y="606.0"></text>
</g>
<g>
<title>sock_read_iter (1 samples, 0.04%)</title><rect x="702.0" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="705.0" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.16%)</title><rect x="702.5" y="707.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="705.5" y="718.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.16%)</title><rect x="702.5" y="691.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="705.5" y="702.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="703.0" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.0" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.08%)</title><rect x="703.4" y="675.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="706.4" y="686.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.08%)</title><rect x="703.4" y="659.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="706.4" y="670.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.04%)</title><rect x="703.9" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="706.9" y="654.0"></text>
</g>
<g>
<title>__GI___errno_location (1 samples, 0.04%)</title><rect x="704.4" y="819.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="707.4" y="830.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.04%)</title><rect x="704.8" y="819.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="707.8" y="830.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.08%)</title><rect x="705.3" y="819.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="708.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$195/1595160449.accept (5 samples, 0.20%)</title><rect x="706.2" y="1123.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (5 samples, 0.20%)</title><rect x="706.2" y="1107.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1748993312.run (5 samples, 0.20%)</title><rect x="706.2" y="1091.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (5 samples, 0.20%)</title><rect x="706.2" y="1075.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (5 samples, 0.20%)</title><rect x="706.2" y="1059.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.04%)</title><rect x="707.7" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="708.1" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.1" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.04%)</title><rect x="708.1" y="1027.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.1" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.08%)</title><rect x="708.6" y="1139.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.6" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.08%)</title><rect x="708.6" y="1123.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="711.6" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="709.1" y="1107.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="712.1" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="709.1" y="1091.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="712.1" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="709.1" y="1075.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="712.1" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="709.1" y="1059.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="712.1" y="1070.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.04%)</title><rect x="709.1" y="1043.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="712.1" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (12 samples, 0.48%)</title><rect x="709.5" y="1139.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.5" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.48%)</title><rect x="709.5" y="1123.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (12 samples, 0.48%)</title><rect x="709.5" y="1107.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.5" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (12 samples, 0.48%)</title><rect x="709.5" y="1091.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.36%)</title><rect x="710.9" y="1075.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.9" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.24%)</title><rect x="710.9" y="1059.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.9" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (5 samples, 0.20%)</title><rect x="710.9" y="1043.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.9" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (4 samples, 0.16%)</title><rect x="711.4" y="1027.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.4" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.04%)</title><rect x="711.4" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$188/927563624.accept (1 samples, 0.04%)</title><rect x="711.4" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.4" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="711.4" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.4" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="711.4" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.4" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="711.4" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.4" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="711.4" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.4" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.04%)</title><rect x="711.4" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$187/1350857380.test (3 samples, 0.12%)</title><rect x="711.9" y="1011.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (3 samples, 0.12%)</title><rect x="711.9" y="995.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.9" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="712.4" y="979.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="715.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.04%)</title><rect x="712.8" y="979.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.04%)</title><rect x="713.3" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.3" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="713.8" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="716.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$188/927563624.accept (2 samples, 0.08%)</title><rect x="714.2" y="1059.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (38 samples, 1.51%)</title><rect x="715.2" y="1139.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$158/715486789.run (27 samples, 1.08%)</title><rect x="715.2" y="1123.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (27 samples, 1.08%)</title><rect x="715.2" y="1107.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27 samples, 1.08%)</title><rect x="715.2" y="1091.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 1.04%)</title><rect x="715.6" y="1075.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.6" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="715.6" y="1059.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="718.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (25 samples, 1.00%)</title><rect x="716.1" y="1059.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (25 samples, 1.00%)</title><rect x="716.1" y="1043.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1168126608.run (22 samples, 0.88%)</title><rect x="717.1" y="1027.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (19 samples, 0.76%)</title><rect x="717.5" y="1011.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (18 samples, 0.72%)</title><rect x="717.5" y="995.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (17 samples, 0.68%)</title><rect x="718.0" y="979.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.08%)</title><rect x="718.0" y="963.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.04%)</title><rect x="718.5" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.04%)</title><rect x="718.5" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/502800944.linkToTargetMethod (1 samples, 0.04%)</title><rect x="718.5" y="915.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1076770748.invoke (1 samples, 0.04%)</title><rect x="718.5" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="718.5" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="718.5" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="718.5" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.5" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="718.5" y="835.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="721.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (15 samples, 0.60%)</title><rect x="718.9" y="963.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.60%)</title><rect x="718.9" y="947.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.60%)</title><rect x="718.9" y="931.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.56%)</title><rect x="719.4" y="915.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.56%)</title><rect x="719.4" y="899.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.56%)</title><rect x="719.4" y="883.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="719.4" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="719.4" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="719.4" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="719.4" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.52%)</title><rect x="719.9" y="867.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.52%)</title><rect x="719.9" y="851.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.52%)</title><rect x="719.9" y="835.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.48%)</title><rect x="720.4" y="819.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.48%)</title><rect x="720.4" y="803.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.4" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="720.4" y="787.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="723.4" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.12%)</title><rect x="720.8" y="787.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="723.8" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="720.8" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="723.8" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="721.3" y="771.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="724.3" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="721.8" y="771.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="724.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.24%)</title><rect x="722.2" y="787.0" width="2.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="725.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.20%)</title><rect x="722.7" y="771.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="725.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.20%)</title><rect x="722.7" y="755.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="725.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.16%)</title><rect x="722.7" y="739.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="725.7" y="750.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.16%)</title><rect x="722.7" y="723.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="725.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.16%)</title><rect x="722.7" y="707.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="725.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.12%)</title><rect x="723.2" y="691.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="726.2" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.12%)</title><rect x="723.2" y="675.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="726.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.12%)</title><rect x="723.2" y="659.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="726.2" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="724.6" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="727.6" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="725.1" y="787.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="728.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1 samples, 0.04%)</title><rect x="726.0" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.04%)</title><rect x="726.0" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.0" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="726.0" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.04%)</title><rect x="726.0" y="947.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.08%)</title><rect x="726.5" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.04%)</title><rect x="727.4" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$160/810264248.run (11 samples, 0.44%)</title><rect x="727.9" y="1123.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (11 samples, 0.44%)</title><rect x="727.9" y="1107.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.32%)</title><rect x="729.3" y="1091.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.32%)</title><rect x="729.3" y="1075.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (8 samples, 0.32%)</title><rect x="729.3" y="1059.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.32%)</title><rect x="729.3" y="1043.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.32%)</title><rect x="729.3" y="1027.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.32%)</title><rect x="729.3" y="1011.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.20%)</title><rect x="730.7" y="995.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.20%)</title><rect x="730.7" y="979.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.7" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="730.7" y="963.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="733.7" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="731.2" y="963.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="734.2" y="974.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="731.2" y="947.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="734.2" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="731.6" y="947.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="734.6" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.08%)</title><rect x="732.1" y="963.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="735.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="732.1" y="947.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="732.1" y="931.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.1" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="732.6" y="915.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="735.6" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="732.6" y="899.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.6" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="732.6" y="883.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="735.6" y="894.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="732.6" y="867.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="735.6" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="732.6" y="851.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.6" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="732.6" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="735.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (16 samples, 0.64%)</title><rect x="733.0" y="1139.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.0" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.20%)</title><rect x="733.0" y="1123.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.0" y="1134.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.20%)</title><rect x="733.0" y="1107.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.16%)</title><rect x="733.5" y="1091.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.5" y="1102.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.16%)</title><rect x="733.5" y="1075.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="736.5" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.12%)</title><rect x="734.0" y="1059.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="737.0" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.12%)</title><rect x="734.0" y="1043.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="737.0" y="1054.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="734.5" y="1027.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="737.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (11 samples, 0.44%)</title><rect x="735.4" y="1123.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.4" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.20%)</title><rect x="735.4" y="1107.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.4" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementAt (1 samples, 0.04%)</title><rect x="737.3" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (6 samples, 0.24%)</title><rect x="737.7" y="1107.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.7" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="739.6" y="1091.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="742.6" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="739.6" y="1075.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="742.6" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="739.6" y="1059.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="742.6" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="739.6" y="1043.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="742.6" y="1054.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="739.6" y="1027.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="742.6" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.04%)</title><rect x="740.1" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.1" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="740.1" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.1" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="740.1" y="1059.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="743.1" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="740.1" y="1043.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="743.1" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="740.1" y="1027.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="743.1" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="740.1" y="1011.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="743.1" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.04%)</title><rect x="740.1" y="995.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="743.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2 samples, 0.08%)</title><rect x="740.6" y="1139.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.6" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.08%)</title><rect x="740.6" y="1123.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.6" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="740.6" y="1107.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="743.6" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="740.6" y="1091.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="743.6" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="740.6" y="1075.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="743.6" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="740.6" y="1059.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="743.6" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="740.6" y="1043.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="743.6" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="740.6" y="1027.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="743.6" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.04%)</title><rect x="740.6" y="1011.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="743.6" y="1022.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="740.6" y="995.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="743.6" y="1006.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.04%)</title><rect x="741.0" y="1107.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="744.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.08%)</title><rect x="741.5" y="1139.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.5" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.08%)</title><rect x="741.5" y="1123.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.08%)</title><rect x="741.5" y="1107.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.08%)</title><rect x="741.5" y="1091.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (8 samples, 0.32%)</title><rect x="742.4" y="1139.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.4" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.20%)</title><rect x="742.4" y="1123.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.4" y="1134.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.20%)</title><rect x="742.4" y="1107.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.4" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.04%)</title><rect x="742.4" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.4" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.04%)</title><rect x="742.4" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.16%)</title><rect x="742.9" y="1091.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.9" y="1102.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.16%)</title><rect x="742.9" y="1075.0" width="1.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="745.9" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.08%)</title><rect x="743.9" y="1059.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="746.9" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.08%)</title><rect x="743.9" y="1043.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="746.9" y="1054.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="744.3" y="1027.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="747.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.08%)</title><rect x="744.8" y="1123.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.8" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.08%)</title><rect x="744.8" y="1107.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.8" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.08%)</title><rect x="744.8" y="1091.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.04%)</title><rect x="745.7" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.7" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="745.7" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.7" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.04%)</title><rect x="745.7" y="1091.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.7" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.04%)</title><rect x="745.7" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (160 samples, 6.37%)</title><rect x="746.2" y="1139.0" width="75.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.2" y="1150.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (160 samples, 6.37%)</title><rect x="746.2" y="1123.0" width="75.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.2" y="1134.0">sun/nio/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.08%)</title><rect x="748.1" y="1107.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.1" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (154 samples, 6.14%)</title><rect x="749.0" y="1107.0" width="72.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.0" y="1118.0">sun/nio/..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="750.0" y="1091.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="753.0" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="750.0" y="1075.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="753.0" y="1086.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="750.0" y="1059.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="753.0" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="750.0" y="1043.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.0" y="1054.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="750.0" y="1027.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.0" y="1038.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="750.0" y="1011.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="753.0" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="750.0" y="995.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="753.0" y="1006.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.12%)</title><rect x="750.4" y="1091.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="753.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (79 samples, 3.15%)</title><rect x="751.8" y="1091.0" width="37.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.8" y="1102.0">sun..</text>
</g>
<g>
<title>[unknown] (69 samples, 2.75%)</title><rect x="755.6" y="1075.0" width="32.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="758.6" y="1086.0">[u..</text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="755.6" y="1059.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="758.6" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (68 samples, 2.71%)</title><rect x="756.1" y="1059.0" width="31.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="759.1" y="1070.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 2.59%)</title><rect x="757.5" y="1043.0" width="30.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="760.5" y="1054.0">en..</text>
</g>
<g>
<title>do_syscall_64 (65 samples, 2.59%)</title><rect x="757.5" y="1027.0" width="30.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="760.5" y="1038.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (60 samples, 2.39%)</title><rect x="759.8" y="1011.0" width="28.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="762.8" y="1022.0">__..</text>
</g>
<g>
<title>do_epoll_wait (59 samples, 2.35%)</title><rect x="760.3" y="995.0" width="27.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="763.3" y="1006.0">d..</text>
</g>
<g>
<title>__fdget (4 samples, 0.16%)</title><rect x="760.8" y="979.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.8" y="990.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.16%)</title><rect x="760.8" y="963.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="763.8" y="974.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.12%)</title><rect x="761.3" y="947.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="764.3" y="958.0"></text>
</g>
<g>
<title>ep_poll (52 samples, 2.07%)</title><rect x="762.7" y="979.0" width="24.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="765.7" y="990.0">e..</text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.04%)</title><rect x="765.5" y="963.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="768.5" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (23 samples, 0.92%)</title><rect x="766.0" y="963.0" width="10.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="769.0" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.44%)</title><rect x="769.7" y="947.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="772.7" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (7 samples, 0.28%)</title><rect x="771.6" y="931.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.6" y="942.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.08%)</title><rect x="773.9" y="915.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="776.9" y="926.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.12%)</title><rect x="774.9" y="947.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="777.9" y="958.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="775.8" y="931.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="778.8" y="942.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="776.3" y="947.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="779.3" y="958.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.08%)</title><rect x="776.8" y="963.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.8" y="974.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.04%)</title><rect x="777.7" y="963.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="780.7" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (18 samples, 0.72%)</title><rect x="778.2" y="963.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.2" y="974.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="778.2" y="947.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="781.2" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (17 samples, 0.68%)</title><rect x="778.6" y="947.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="781.6" y="958.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.04%)</title><rect x="778.6" y="931.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.6" y="942.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (11 samples, 0.44%)</title><rect x="779.1" y="931.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="782.1" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.44%)</title><rect x="779.1" y="915.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="782.1" y="926.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.12%)</title><rect x="784.3" y="931.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="787.3" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.12%)</title><rect x="784.3" y="915.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="787.3" y="926.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.08%)</title><rect x="785.7" y="931.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="788.7" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.08%)</title><rect x="785.7" y="915.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="788.7" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="785.7" y="899.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="788.7" y="910.0"></text>
</g>
<g>
<title>kprobe_flush_task (1 samples, 0.04%)</title><rect x="786.2" y="899.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="789.2" y="910.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.04%)</title><rect x="786.6" y="963.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="789.6" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.04%)</title><rect x="787.1" y="979.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="790.1" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.04%)</title><rect x="787.6" y="979.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="790.6" y="990.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="788.0" y="1075.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="791.0" y="1086.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.04%)</title><rect x="788.5" y="1075.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="791.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (54 samples, 2.15%)</title><rect x="789.0" y="1091.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.0" y="1102.0">s..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.04%)</title><rect x="789.9" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.9" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.12%)</title><rect x="790.4" y="1075.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.12%)</title><rect x="790.4" y="1059.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.getEvents (1 samples, 0.04%)</title><rect x="791.8" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.04%)</title><rect x="791.8" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (45 samples, 1.79%)</title><rect x="792.3" y="1075.0" width="21.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.3" y="1086.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (43 samples, 1.71%)</title><rect x="793.2" y="1059.0" width="20.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.39%)</title><rect x="797.0" y="1043.0" width="16.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="800.0" y="1054.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (1 samples, 0.04%)</title><rect x="797.0" y="1027.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="800.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="797.0" y="1011.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="800.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="797.0" y="995.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="800.0" y="1006.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.04%)</title><rect x="797.0" y="979.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="800.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="797.0" y="963.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="797.0" y="947.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="800.0" y="958.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.04%)</title><rect x="797.0" y="931.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="800.0" y="942.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.04%)</title><rect x="797.0" y="915.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="800.0" y="926.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="797.0" y="899.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="800.0" y="910.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.04%)</title><rect x="797.0" y="883.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="800.0" y="894.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="797.0" y="867.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.0" y="878.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.04%)</title><rect x="797.0" y="851.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="800.0" y="862.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.04%)</title><rect x="797.0" y="835.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="800.0" y="846.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="797.0" y="819.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="800.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.84%)</title><rect x="797.5" y="1027.0" width="9.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="800.5" y="1038.0"></text>
</g>
<g>
<title>__GI___libc_read (21 samples, 0.84%)</title><rect x="797.5" y="1011.0" width="9.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="800.5" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.84%)</title><rect x="797.5" y="995.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="800.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.84%)</title><rect x="797.5" y="979.0" width="9.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="800.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_read (19 samples, 0.76%)</title><rect x="797.9" y="963.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="800.9" y="974.0"></text>
</g>
<g>
<title>ksys_read (19 samples, 0.76%)</title><rect x="797.9" y="947.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="800.9" y="958.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.08%)</title><rect x="797.9" y="931.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="800.9" y="942.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="797.9" y="915.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="800.9" y="926.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="798.4" y="915.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="801.4" y="926.0"></text>
</g>
<g>
<title>vfs_read (17 samples, 0.68%)</title><rect x="798.9" y="931.0" width="8.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="801.9" y="942.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.44%)</title><rect x="798.9" y="915.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="801.9" y="926.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.44%)</title><rect x="798.9" y="899.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="801.9" y="910.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="799.3" y="883.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="802.3" y="894.0"></text>
</g>
<g>
<title>pipe_read (9 samples, 0.36%)</title><rect x="799.8" y="883.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="802.8" y="894.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.04%)</title><rect x="801.2" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.2" y="878.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.12%)</title><rect x="801.7" y="867.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.7" y="878.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="802.2" y="851.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="805.2" y="862.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="803.1" y="867.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="806.1" y="878.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.04%)</title><rect x="803.6" y="867.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="806.6" y="878.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.04%)</title><rect x="803.6" y="851.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="806.6" y="862.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.04%)</title><rect x="803.6" y="835.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="806.6" y="846.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="803.6" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="806.6" y="830.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.24%)</title><rect x="804.0" y="915.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="807.0" y="926.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="804.5" y="899.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="807.5" y="910.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.16%)</title><rect x="805.0" y="899.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.0" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="805.4" y="883.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="808.4" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="805.4" y="867.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="808.4" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="805.4" y="851.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="808.4" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="805.4" y="835.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="808.4" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="805.4" y="819.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.4" y="830.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="805.4" y="803.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="808.4" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="805.4" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="808.4" y="798.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="805.9" y="883.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="808.9" y="894.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="805.9" y="867.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="808.9" y="878.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="806.4" y="883.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="809.4" y="894.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.04%)</title><rect x="806.9" y="963.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="809.9" y="974.0"></text>
</g>
<g>
<title>__GI___libc_read (13 samples, 0.52%)</title><rect x="807.3" y="1027.0" width="6.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="810.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.48%)</title><rect x="807.8" y="1011.0" width="5.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="810.8" y="1022.0"></text>
</g>
<g>
<title>__GI___libc_read (12 samples, 0.48%)</title><rect x="807.8" y="995.0" width="5.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="810.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.40%)</title><rect x="808.7" y="979.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.7" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.40%)</title><rect x="808.7" y="963.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.7" y="974.0"></text>
</g>
<g>
<title>__x64_sys_read (10 samples, 0.40%)</title><rect x="808.7" y="947.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.7" y="958.0"></text>
</g>
<g>
<title>ksys_read (10 samples, 0.40%)</title><rect x="808.7" y="931.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="811.7" y="942.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.40%)</title><rect x="808.7" y="915.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="811.7" y="926.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 0.40%)</title><rect x="808.7" y="899.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="811.7" y="910.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.40%)</title><rect x="808.7" y="883.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="811.7" y="894.0"></text>
</g>
<g>
<title>pipe_read (10 samples, 0.40%)</title><rect x="808.7" y="867.0" width="4.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="811.7" y="878.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.04%)</title><rect x="808.7" y="851.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="811.7" y="862.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.08%)</title><rect x="809.2" y="851.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.2" y="862.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.08%)</title><rect x="809.2" y="835.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="812.2" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="809.2" y="819.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="812.2" y="830.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.08%)</title><rect x="810.1" y="851.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="813.1" y="862.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.08%)</title><rect x="811.1" y="851.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.1" y="862.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="811.6" y="835.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="814.6" y="846.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.12%)</title><rect x="812.0" y="851.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="815.0" y="862.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.08%)</title><rect x="812.5" y="835.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="815.5" y="846.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="813.0" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="816.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.08%)</title><rect x="813.4" y="1075.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.08%)</title><rect x="813.4" y="1059.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.08%)</title><rect x="813.4" y="1043.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.08%)</title><rect x="813.4" y="1027.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.08%)</title><rect x="813.4" y="1011.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (5 samples, 0.20%)</title><rect x="814.4" y="1091.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.4" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.08%)</title><rect x="815.8" y="1075.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.8" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (1 samples, 0.04%)</title><rect x="816.3" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.04%)</title><rect x="816.7" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.08%)</title><rect x="817.2" y="1091.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.2" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.04%)</title><rect x="817.7" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="817.7" y="1059.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="817.7" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="817.7" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.7" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (7 samples, 0.28%)</title><rect x="818.1" y="1091.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (3 samples, 0.12%)</title><rect x="819.5" y="1075.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.04%)</title><rect x="820.5" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.04%)</title><rect x="821.0" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.0" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (15 samples, 0.60%)</title><rect x="821.4" y="1139.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (15 samples, 0.60%)</title><rect x="821.4" y="1123.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.4" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (13 samples, 0.52%)</title><rect x="822.4" y="1107.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.4" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (11 samples, 0.44%)</title><rect x="822.4" y="1091.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.36%)</title><rect x="822.8" y="1075.0" width="4.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="825.8" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.36%)</title><rect x="822.8" y="1059.0" width="4.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="825.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.28%)</title><rect x="823.8" y="1043.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="826.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.28%)</title><rect x="823.8" y="1027.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="826.8" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.16%)</title><rect x="825.2" y="1011.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="828.2" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.16%)</title><rect x="825.2" y="995.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="828.2" y="1006.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 0.16%)</title><rect x="825.2" y="979.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.2" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (4 samples, 0.16%)</title><rect x="825.2" y="963.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.2" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.12%)</title><rect x="825.7" y="947.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="828.7" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.12%)</title><rect x="825.7" y="931.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.7" y="942.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.12%)</title><rect x="825.7" y="915.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="828.7" y="926.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.08%)</title><rect x="826.1" y="899.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.1" y="910.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="827.1" y="1075.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="830.1" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.08%)</title><rect x="827.5" y="1091.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.08%)</title><rect x="827.5" y="1075.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.08%)</title><rect x="827.5" y="1059.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.08%)</title><rect x="827.5" y="1043.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.5" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="827.5" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.5" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="828.0" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.0" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (5 samples, 0.20%)</title><rect x="828.5" y="1139.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.5" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (5 samples, 0.20%)</title><rect x="828.5" y="1123.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (5 samples, 0.20%)</title><rect x="828.5" y="1107.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.04%)</title><rect x="830.4" y="1091.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (707 samples, 28.17%)</title><rect x="830.8" y="1155.0" width="332.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.8" y="1166.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.04%)</title><rect x="830.8" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (29 samples, 1.16%)</title><rect x="831.3" y="1139.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (28 samples, 1.12%)</title><rect x="831.8" y="1123.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.96%)</title><rect x="833.2" y="1107.0" width="11.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="836.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="833.2" y="1091.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="836.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="833.2" y="1075.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="836.2" y="1086.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="833.2" y="1059.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="836.2" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (23 samples, 0.92%)</title><rect x="833.6" y="1091.0" width="10.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="836.6" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.80%)</title><rect x="835.1" y="1075.0" width="9.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="838.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.80%)</title><rect x="835.1" y="1059.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="838.1" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 0.64%)</title><rect x="836.9" y="1043.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="839.9" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (15 samples, 0.60%)</title><rect x="836.9" y="1027.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="839.9" y="1038.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="837.4" y="1011.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.4" y="1022.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="837.4" y="995.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.4" y="1006.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="837.4" y="979.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="840.4" y="990.0"></text>
</g>
<g>
<title>ep_poll (11 samples, 0.44%)</title><rect x="838.4" y="1011.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="841.4" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (7 samples, 0.28%)</title><rect x="838.8" y="995.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="841.8" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.20%)</title><rect x="839.8" y="979.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="842.8" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.12%)</title><rect x="840.2" y="963.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="843.2" y="974.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.12%)</title><rect x="840.2" y="947.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="843.2" y="958.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="841.2" y="931.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="844.2" y="942.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="841.6" y="963.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="844.6" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.08%)</title><rect x="842.1" y="995.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="845.1" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.08%)</title><rect x="842.1" y="979.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="845.1" y="990.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.08%)</title><rect x="842.1" y="963.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.1" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.04%)</title><rect x="842.6" y="947.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="845.6" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="843.1" y="995.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="846.1" y="1006.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="843.5" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.5" y="1022.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="844.0" y="1027.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="847.0" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="844.5" y="1107.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="847.5" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="844.5" y="1091.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="847.5" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="844.5" y="1075.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="847.5" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="844.5" y="1059.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (677 samples, 26.97%)</title><rect x="844.9" y="1139.0" width="318.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.9" y="1150.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (676 samples, 26.93%)</title><rect x="845.4" y="1123.0" width="317.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.4" y="1134.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (641 samples, 25.54%)</title><rect x="845.9" y="1107.0" width="301.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.9" y="1118.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.04%)</title><rect x="849.2" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="852.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (620 samples, 24.70%)</title><rect x="849.6" y="1091.0" width="291.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.6" y="1102.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (618 samples, 24.62%)</title><rect x="850.6" y="1075.0" width="290.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.6" y="1086.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="850.6" y="1059.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="853.6" y="1070.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (611 samples, 24.34%)</title><rect x="851.0" y="1059.0" width="287.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.0" y="1070.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.24%)</title><rect x="851.0" y="1043.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.24%)</title><rect x="851.0" y="1027.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="852.5" y="1011.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.08%)</title><rect x="852.5" y="995.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="853.4" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="853.4" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="853.4" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.entity (605 samples, 24.10%)</title><rect x="853.9" y="1043.0" width="284.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.9" y="1054.0">ru/mail/polis/service/codearound/Repli..</text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.getNodes (3 samples, 0.12%)</title><rect x="854.3" y="1027.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.of (3 samples, 0.12%)</title><rect x="854.3" y="1011.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.3" y="1022.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (3 samples, 0.12%)</title><rect x="854.3" y="995.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="857.3" y="1006.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (3 samples, 0.12%)</title><rect x="854.3" y="979.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.12%)</title><rect x="854.3" y="963.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.12%)</title><rect x="854.3" y="947.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="857.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/RepliServiceImpl.invokeHandlerByMethod (601 samples, 23.94%)</title><rect x="855.7" y="1027.0" width="282.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.7" y="1038.0">ru/mail/polis/service/codearound/Repli..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="856.2" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="856.7" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="857.2" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="857.2" y="979.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ModularTopology.replicasFor (1 samples, 0.04%)</title><rect x="857.6" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/ReplicationLsm.getWithMultipleNodes (596 samples, 23.75%)</title><rect x="858.1" y="1011.0" width="280.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.1" y="1022.0">ru/mail/polis/service/codearound/Repli..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="858.6" y="995.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="861.6" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="858.6" y="979.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="861.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (471 samples, 18.76%)</title><rect x="859.0" y="995.0" width="221.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.0" y="1006.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (470 samples, 18.73%)</title><rect x="859.5" y="979.0" width="221.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.5" y="990.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (445 samples, 17.73%)</title><rect x="860.9" y="963.0" width="209.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.9" y="974.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="860.9" y="947.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="863.9" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="860.9" y="931.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="863.9" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="860.9" y="915.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="863.9" y="926.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="860.9" y="899.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="863.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (62 samples, 2.47%)</title><rect x="861.4" y="947.0" width="29.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="864.4" y="958.0">ja..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.16%)</title><rect x="861.4" y="931.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.4" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.16%)</title><rect x="861.4" y="915.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.4" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.16%)</title><rect x="861.4" y="899.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.4" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.16%)</title><rect x="861.4" y="883.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="864.4" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="862.8" y="867.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="865.8" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="862.8" y="851.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="865.8" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="862.8" y="835.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="865.8" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="862.8" y="819.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="865.8" y="830.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="862.8" y="803.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="865.8" y="814.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="862.8" y="787.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.8" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="862.8" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.04%)</title><rect x="863.3" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (57 samples, 2.27%)</title><rect x="863.7" y="931.0" width="26.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.7" y="942.0">j..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (57 samples, 2.27%)</title><rect x="863.7" y="915.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.7" y="926.0">j..</text>
</g>
<g>
<title>java/lang/Thread.nextThreadID (1 samples, 0.04%)</title><rect x="863.7" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority (2 samples, 0.08%)</title><rect x="864.2" y="899.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.2" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (1 samples, 0.04%)</title><rect x="864.2" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.2" y="894.0"></text>
</g>
<g>
<title>JVM_SetThreadPriority (1 samples, 0.04%)</title><rect x="864.2" y="867.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="867.2" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="864.2" y="851.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="867.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="864.7" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.7" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (54 samples, 2.15%)</title><rect x="865.1" y="899.0" width="25.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.1" y="910.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="865.1" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.1" y="894.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (6 samples, 0.24%)</title><rect x="865.6" y="883.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.6" y="894.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (3 samples, 0.12%)</title><rect x="865.6" y="867.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.6" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.08%)</title><rect x="866.1" y="851.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="869.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.08%)</title><rect x="866.1" y="835.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="869.1" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="866.1" y="819.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.1" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="866.1" y="803.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="869.1" y="814.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="866.1" y="787.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="869.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="866.6" y="787.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="869.6" y="798.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="866.6" y="771.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="869.6" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.04%)</title><rect x="866.6" y="755.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="869.6" y="766.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="866.6" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="869.6" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.getInheritedAccessControlContext (3 samples, 0.12%)</title><rect x="867.0" y="867.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="870.0" y="878.0"></text>
</g>
<g>
<title>JVM_GetInheritedAccessControlContext (1 samples, 0.04%)</title><rect x="868.0" y="851.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="871.0" y="862.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="868.0" y="835.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="871.0" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (47 samples, 1.87%)</title><rect x="868.4" y="883.0" width="22.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.4" y="894.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.04%)</title><rect x="868.4" y="867.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="871.4" y="878.0"></text>
</g>
<g>
<title>CodeBlob::is_compiled() const (1 samples, 0.04%)</title><rect x="868.9" y="867.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="871.9" y="878.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="869.4" y="867.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="872.4" y="878.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (39 samples, 1.55%)</title><rect x="869.8" y="867.0" width="18.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="872.8" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.12%)</title><rect x="878.8" y="851.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="881.8" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (3 samples, 0.12%)</title><rect x="880.2" y="851.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="883.2" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="881.6" y="851.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="884.6" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.08%)</title><rect x="882.1" y="851.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="885.1" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="882.1" y="835.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="885.1" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="882.1" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="885.1" y="830.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="882.1" y="803.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="885.1" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="882.5" y="835.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="885.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.04%)</title><rect x="883.0" y="851.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="886.0" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.24%)</title><rect x="883.5" y="851.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="886.5" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (6 samples, 0.24%)</title><rect x="883.5" y="835.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="886.5" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (6 samples, 0.24%)</title><rect x="883.5" y="819.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="886.5" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (6 samples, 0.24%)</title><rect x="883.5" y="803.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="886.5" y="814.0"></text>
</g>
<g>
<title>java_security_AccessControlContext::create(objArrayHandle, bool, Handle, Thread*) (2 samples, 0.08%)</title><rect x="886.3" y="851.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="889.3" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="886.3" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="889.3" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="886.8" y="835.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="889.8" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="886.8" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="889.8" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="886.8" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="889.8" y="814.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.04%)</title><rect x="886.8" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="889.8" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.08%)</title><rect x="887.2" y="851.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="890.2" y="862.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.04%)</title><rect x="887.2" y="835.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="890.2" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="887.7" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="890.7" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="887.7" y="819.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="890.7" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="887.7" y="803.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="890.7" y="814.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::JvmtiVMObjectAllocEventCollector() (2 samples, 0.08%)</title><rect x="888.2" y="867.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="891.2" y="878.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.08%)</title><rect x="889.1" y="867.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="892.1" y="878.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (1 samples, 0.04%)</title><rect x="890.1" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="893.1" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.start (382 samples, 15.22%)</title><rect x="890.5" y="947.0" width="179.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.5" y="958.0">java/lang/Thread.start</text>
</g>
<g>
<title>java/lang/Thread.start0 (381 samples, 15.18%)</title><rect x="890.5" y="931.0" width="179.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.5" y="942.0">java/lang/Thread.start0</text>
</g>
<g>
<title>JVM_StartThread (258 samples, 10.28%)</title><rect x="890.5" y="915.0" width="121.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="893.5" y="926.0">JVM_StartThread</text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.04%)</title><rect x="890.5" y="899.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="893.5" y="910.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="891.0" y="899.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="894.0" y="910.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (15 samples, 0.60%)</title><rect x="891.5" y="899.0" width="7.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="894.5" y="910.0"></text>
</g>
<g>
<title>HandshakeState::HandshakeState() (3 samples, 0.12%)</title><rect x="891.5" y="883.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="894.5" y="894.0"></text>
</g>
<g>
<title>PosixSemaphore::PosixSemaphore(unsigned int) (1 samples, 0.04%)</title><rect x="891.5" y="867.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="894.5" y="878.0"></text>
</g>
<g>
<title>__GI___errno_location (2 samples, 0.08%)</title><rect x="891.9" y="867.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="894.9" y="878.0"></text>
</g>
<g>
<title>Thread::Thread() (12 samples, 0.48%)</title><rect x="892.9" y="883.0" width="5.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="895.9" y="894.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (2 samples, 0.08%)</title><rect x="893.8" y="867.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="896.8" y="878.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="893.8" y="851.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="896.8" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="893.8" y="835.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="896.8" y="846.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.04%)</title><rect x="894.3" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="897.3" y="862.0"></text>
</g>
<g>
<title>Arena::operator new(unsigned long, MemoryType) (1 samples, 0.04%)</title><rect x="894.8" y="867.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="897.8" y="878.0"></text>
</g>
<g>
<title>JfrThreadLocal::JfrThreadLocal() (2 samples, 0.08%)</title><rect x="895.2" y="867.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="898.2" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="895.2" y="851.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="898.2" y="862.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="895.7" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="898.7" y="862.0"></text>
</g>
<g>
<title>ParkEvent::Allocate(Thread*) (4 samples, 0.16%)</title><rect x="896.2" y="867.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="899.2" y="878.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="897.6" y="851.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="900.6" y="862.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, ResourceObj::allocation_type, MemoryType) (1 samples, 0.04%)</title><rect x="898.1" y="867.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="901.1" y="878.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="898.5" y="899.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="901.5" y="910.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (52 samples, 2.07%)</title><rect x="899.0" y="899.0" width="24.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="902.0" y="910.0">J..</text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (6 samples, 0.24%)</title><rect x="899.5" y="883.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="902.5" y="894.0"></text>
</g>
<g>
<title>os::elapsedTime() (3 samples, 0.12%)</title><rect x="900.9" y="867.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="903.9" y="878.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="902.3" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="905.3" y="894.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.08%)</title><rect x="902.8" y="883.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="905.8" y="894.0"></text>
</g>
<g>
<title>Thread::is_hidden_from_external_view() const (1 samples, 0.04%)</title><rect x="903.7" y="883.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="906.7" y="894.0"></text>
</g>
<g>
<title>ThreadService::add_thread(JavaThread*, bool) (2 samples, 0.08%)</title><rect x="904.2" y="883.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="907.2" y="894.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (36 samples, 1.43%)</title><rect x="905.1" y="883.0" width="16.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="908.1" y="894.0"></text>
</g>
<g>
<title>ResourceObj::operator delete(void*) (1 samples, 0.04%)</title><rect x="905.6" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="908.6" y="878.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (27 samples, 1.08%)</title><rect x="906.0" y="867.0" width="12.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="909.0" y="878.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="917.8" y="851.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="920.8" y="862.0"></text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (1 samples, 0.04%)</title><rect x="918.3" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="921.3" y="862.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (1 samples, 0.04%)</title><rect x="918.3" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.3" y="846.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.12%)</title><rect x="918.7" y="867.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="921.7" y="878.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="920.2" y="867.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="923.2" y="878.0"></text>
</g>
<g>
<title>__memset_erms (3 samples, 0.12%)</title><rect x="920.6" y="867.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="923.6" y="878.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (3 samples, 0.12%)</title><rect x="922.0" y="883.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="925.0" y="894.0"></text>
</g>
<g>
<title>Monitor::lock() (18 samples, 0.72%)</title><rect x="923.4" y="899.0" width="8.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="926.4" y="910.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="923.4" y="883.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="926.4" y="894.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (14 samples, 0.56%)</title><rect x="923.9" y="883.0" width="6.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="926.9" y="894.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="924.4" y="867.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="927.4" y="878.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.16%)</title><rect x="924.9" y="867.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="927.9" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.16%)</title><rect x="926.7" y="867.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="929.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.16%)</title><rect x="926.7" y="851.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="929.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.16%)</title><rect x="926.7" y="835.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="929.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="928.1" y="819.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.1" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="928.1" y="803.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="931.1" y="814.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="928.1" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="931.1" y="798.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.04%)</title><rect x="928.6" y="867.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="931.6" y="878.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.08%)</title><rect x="929.1" y="867.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="932.1" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="930.0" y="867.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="933.0" y="878.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.12%)</title><rect x="930.5" y="883.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="933.5" y="894.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (2 samples, 0.08%)</title><rect x="931.9" y="899.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="934.9" y="910.0"></text>
</g>
<g>
<title>malloc@plt (1 samples, 0.04%)</title><rect x="932.4" y="883.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="935.4" y="894.0"></text>
</g>
<g>
<title>Thread::start(Thread*) (2 samples, 0.08%)</title><rect x="932.8" y="899.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="935.8" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.08%)</title><rect x="932.8" y="883.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="935.8" y="894.0"></text>
</g>
<g>
<title>__getpagesize (1 samples, 0.04%)</title><rect x="933.8" y="899.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="936.8" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="934.3" y="899.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="937.3" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::stackSize(oopDesc*) (1 samples, 0.04%)</title><rect x="935.2" y="899.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="938.2" y="910.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.04%)</title><rect x="935.7" y="899.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="938.7" y="910.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (157 samples, 6.25%)</title><rect x="936.1" y="899.0" width="73.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="939.1" y="910.0">os::crea..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 0.20%)</title><rect x="936.6" y="883.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="939.6" y="894.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (4 samples, 0.16%)</title><rect x="937.1" y="867.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="940.1" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="937.5" y="851.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="940.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="937.5" y="835.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="937.5" y="819.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="937.5" y="803.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.5" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="937.5" y="787.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="940.5" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="938.0" y="851.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="941.0" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="938.0" y="835.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.0" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="938.0" y="819.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.0" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="938.0" y="803.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="941.0" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="938.0" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.0" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="938.0" y="771.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="941.0" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="938.0" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="941.0" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="938.0" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="941.0" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="938.5" y="851.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="941.5" y="862.0"></text>
</g>
<g>
<title>OSThread::OSThread(int (*)(void*), void*) (3 samples, 0.12%)</title><rect x="939.0" y="883.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="942.0" y="894.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="939.0" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="942.0" y="878.0"></text>
</g>
<g>
<title>OSThread::pd_initialize() (2 samples, 0.08%)</title><rect x="939.4" y="867.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="942.4" y="878.0"></text>
</g>
<g>
<title>__strncpy_ssse3 (2 samples, 0.08%)</title><rect x="939.4" y="851.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="942.4" y="862.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (1 samples, 0.04%)</title><rect x="940.4" y="883.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="943.4" y="894.0"></text>
</g>
<g>
<title>__clone (127 samples, 5.06%)</title><rect x="940.8" y="883.0" width="59.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="943.8" y="894.0">__clone</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (122 samples, 4.86%)</title><rect x="943.2" y="867.0" width="57.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="946.2" y="878.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (122 samples, 4.86%)</title><rect x="943.2" y="851.0" width="57.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.2" y="862.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_clone (116 samples, 4.62%)</title><rect x="946.0" y="835.0" width="54.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.0" y="846.0">__x64..</text>
</g>
<g>
<title>_do_fork (116 samples, 4.62%)</title><rect x="946.0" y="819.0" width="54.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.0" y="830.0">_do_f..</text>
</g>
<g>
<title>cgroup_post_fork (1 samples, 0.04%)</title><rect x="946.0" y="803.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="949.0" y="814.0"></text>
</g>
<g>
<title>clear_ti_thread_flag (1 samples, 0.04%)</title><rect x="946.5" y="803.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="949.5" y="814.0"></text>
</g>
<g>
<title>copy_namespaces (1 samples, 0.04%)</title><rect x="946.9" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="949.9" y="814.0"></text>
</g>
<g>
<title>copy_process.part.34 (90 samples, 3.59%)</title><rect x="947.4" y="803.0" width="42.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="950.4" y="814.0">copy..</text>
</g>
<g>
<title>__delayacct_tsk_init (2 samples, 0.08%)</title><rect x="951.2" y="787.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="954.2" y="798.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="951.6" y="771.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="954.6" y="782.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="951.6" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="954.6" y="766.0"></text>
</g>
<g>
<title>__vmalloc_node_range (14 samples, 0.56%)</title><rect x="952.1" y="787.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="955.1" y="798.0"></text>
</g>
<g>
<title>__get_vm_area_node (3 samples, 0.12%)</title><rect x="952.1" y="771.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="955.1" y="782.0"></text>
</g>
<g>
<title>alloc_vmap_area (2 samples, 0.08%)</title><rect x="952.1" y="755.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="955.1" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="952.1" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.1" y="750.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (1 samples, 0.04%)</title><rect x="952.6" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="955.6" y="750.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (1 samples, 0.04%)</title><rect x="953.1" y="755.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.1" y="766.0"></text>
</g>
<g>
<title>alloc_pages_current (11 samples, 0.44%)</title><rect x="953.5" y="771.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="956.5" y="782.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (11 samples, 0.44%)</title><rect x="953.5" y="755.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="956.5" y="766.0"></text>
</g>
<g>
<title>clear_page_erms (7 samples, 0.28%)</title><rect x="953.5" y="739.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="956.5" y="750.0"></text>
</g>
<g>
<title>get_page_from_freelist (3 samples, 0.12%)</title><rect x="956.8" y="739.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="959.8" y="750.0"></text>
</g>
<g>
<title>kernel_poison_pages (1 samples, 0.04%)</title><rect x="958.2" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="961.2" y="750.0"></text>
</g>
<g>
<title>account_kernel_stack (1 samples, 0.04%)</title><rect x="958.7" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="961.7" y="798.0"></text>
</g>
<g>
<title>mod_zone_page_state (1 samples, 0.04%)</title><rect x="958.7" y="771.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="961.7" y="782.0"></text>
</g>
<g>
<title>alloc_pid (5 samples, 0.20%)</title><rect x="959.2" y="787.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="962.2" y="798.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="961.1" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="964.1" y="782.0"></text>
</g>
<g>
<title>arch_dup_task_struct (1 samples, 0.04%)</title><rect x="961.5" y="787.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="964.5" y="798.0"></text>
</g>
<g>
<title>fpu__copy (1 samples, 0.04%)</title><rect x="961.5" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="964.5" y="782.0"></text>
</g>
<g>
<title>arch_local_irq_enable (3 samples, 0.12%)</title><rect x="962.0" y="787.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="965.0" y="798.0"></text>
</g>
<g>
<title>cgroup_post_fork (5 samples, 0.20%)</title><rect x="963.4" y="787.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="966.4" y="798.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (2 samples, 0.08%)</title><rect x="964.8" y="771.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="967.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="964.8" y="755.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="967.8" y="766.0"></text>
</g>
<g>
<title>clear_ti_thread_flag (1 samples, 0.04%)</title><rect x="965.8" y="787.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.8" y="798.0"></text>
</g>
<g>
<title>copy_namespaces (1 samples, 0.04%)</title><rect x="966.2" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="969.2" y="798.0"></text>
</g>
<g>
<title>copy_semundo (1 samples, 0.04%)</title><rect x="966.7" y="787.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="969.7" y="798.0"></text>
</g>
<g>
<title>copy_thread_tls (1 samples, 0.04%)</title><rect x="967.2" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.2" y="798.0"></text>
</g>
<g>
<title>cpuset_fork (1 samples, 0.04%)</title><rect x="967.6" y="787.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="970.6" y="798.0"></text>
</g>
<g>
<title>find_vm_area (1 samples, 0.04%)</title><rect x="968.1" y="787.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="971.1" y="798.0"></text>
</g>
<g>
<title>find_vmap_area (1 samples, 0.04%)</title><rect x="968.6" y="787.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="971.6" y="798.0"></text>
</g>
<g>
<title>fpu__copy (2 samples, 0.08%)</title><rect x="969.0" y="787.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="972.0" y="798.0"></text>
</g>
<g>
<title>get_random_u64 (11 samples, 0.44%)</title><rect x="970.0" y="787.0" width="5.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="973.0" y="798.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="975.2" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.2" y="798.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="975.6" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="978.6" y="798.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="975.6" y="771.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="978.6" y="782.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="976.1" y="787.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="979.1" y="798.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="976.1" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="979.1" y="782.0"></text>
</g>
<g>
<title>memcg_kmem_charge (3 samples, 0.12%)</title><rect x="976.6" y="787.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="979.6" y="798.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (2 samples, 0.08%)</title><rect x="977.0" y="771.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="980.0" y="782.0"></text>
</g>
<g>
<title>memcpy_erms (3 samples, 0.12%)</title><rect x="978.0" y="787.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="981.0" y="798.0"></text>
</g>
<g>
<title>perf_event_fork (1 samples, 0.04%)</title><rect x="979.4" y="787.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="982.4" y="798.0"></text>
</g>
<g>
<title>perf_event_init_task (1 samples, 0.04%)</title><rect x="979.9" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="982.9" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="979.9" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="982.9" y="782.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="980.3" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="983.3" y="798.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="980.8" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="983.8" y="798.0"></text>
</g>
<g>
<title>sched_fork (15 samples, 0.60%)</title><rect x="981.3" y="787.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.3" y="798.0"></text>
</g>
<g>
<title>__sched_fork (7 samples, 0.28%)</title><rect x="981.3" y="771.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="984.3" y="782.0"></text>
</g>
<g>
<title>init_numa_balancing (5 samples, 0.20%)</title><rect x="982.2" y="755.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="985.2" y="766.0"></text>
</g>
<g>
<title>task_scan_min (3 samples, 0.12%)</title><rect x="983.1" y="739.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="986.1" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.24%)</title><rect x="984.6" y="771.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="987.6" y="782.0"></text>
</g>
<g>
<title>init_dl_task_timer (1 samples, 0.04%)</title><rect x="987.4" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="990.4" y="782.0"></text>
</g>
<g>
<title>init_entity_runnable_average (1 samples, 0.04%)</title><rect x="987.8" y="771.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="990.8" y="782.0"></text>
</g>
<g>
<title>security_task_alloc (3 samples, 0.12%)</title><rect x="988.3" y="787.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.3" y="798.0"></text>
</g>
<g>
<title>__kmalloc (3 samples, 0.12%)</title><rect x="988.3" y="771.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="991.3" y="782.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="989.3" y="755.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="992.3" y="766.0"></text>
</g>
<g>
<title>ftrace_graph_init_task (1 samples, 0.04%)</title><rect x="989.7" y="803.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.7" y="814.0"></text>
</g>
<g>
<title>get_random_u64 (2 samples, 0.08%)</title><rect x="990.2" y="803.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="993.2" y="814.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.12%)</title><rect x="991.1" y="803.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="994.1" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="992.1" y="787.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="995.1" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="992.1" y="771.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="995.1" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="992.1" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="995.1" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="992.1" y="739.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="995.1" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="992.1" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="995.1" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="992.1" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="995.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="992.1" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="995.1" y="702.0"></text>
</g>
<g>
<title>wake_up_new_task (17 samples, 0.68%)</title><rect x="992.5" y="803.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="995.5" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.68%)</title><rect x="992.5" y="787.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="995.5" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1000.1" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1003.1" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1000.1" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1003.1" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1000.1" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1003.1" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1000.1" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1003.1" y="734.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.04%)</title><rect x="1000.1" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1003.1" y="718.0"></text>
</g>
<g>
<title>rb_free_rcu (1 samples, 0.04%)</title><rect x="1000.1" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1003.1" y="702.0"></text>
</g>
<g>
<title>rb_free (1 samples, 0.04%)</title><rect x="1000.1" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1003.1" y="686.0"></text>
</g>
<g>
<title>perf_mmap_free_page (1 samples, 0.04%)</title><rect x="1000.1" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1003.1" y="670.0"></text>
</g>
<g>
<title>__free_pages (1 samples, 0.04%)</title><rect x="1000.1" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1003.1" y="654.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="1000.5" y="883.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1003.5" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1001.0" y="883.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1004.0" y="894.0"></text>
</g>
<g>
<title>os::vm_page_size() (1 samples, 0.04%)</title><rect x="1002.0" y="883.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1005.0" y="894.0"></text>
</g>
<g>
<title>pthread_create@@GLIBC_2.2.5 (16 samples, 0.64%)</title><rect x="1002.4" y="883.0" width="7.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1005.4" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1009.0" y="867.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.0" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1009.0" y="851.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.0" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1009.0" y="835.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1012.0" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1009.0" y="819.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1012.0" y="830.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1009.0" y="803.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1012.0" y="814.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1009.0" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1012.0" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1009.0" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.0" y="782.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="1009.5" y="867.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1012.5" y="878.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1009.5" y="851.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1012.5" y="862.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1009.5" y="835.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.5" y="846.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1009.5" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1012.5" y="830.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1009.5" y="803.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1012.5" y="814.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="1009.5" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.5" y="798.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1009.5" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.5" y="782.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.04%)</title><rect x="1009.5" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.5" y="766.0"></text>
</g>
<g>
<title>os::set_native_priority(Thread*, int) (1 samples, 0.04%)</title><rect x="1009.9" y="899.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1012.9" y="910.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (2 samples, 0.08%)</title><rect x="1010.4" y="899.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1013.4" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="1010.4" y="883.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1013.4" y="894.0"></text>
</g>
<g>
<title>os::pd_start_thread(Thread*) (1 samples, 0.04%)</title><rect x="1010.9" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1013.9" y="894.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.04%)</title><rect x="1010.9" y="867.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1013.9" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1011.4" y="899.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1014.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.47%)</title><rect x="1011.8" y="915.0" width="17.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1014.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1011.8" y="899.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1014.8" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1011.8" y="883.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1014.8" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="1012.3" y="883.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1015.3" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1012.3" y="867.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1015.3" y="878.0"></text>
</g>
<g>
<title>_IO_padn (1 samples, 0.04%)</title><rect x="1012.8" y="899.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1015.8" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.04%)</title><rect x="1013.2" y="899.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1016.2" y="910.0"></text>
</g>
<g>
<title>_int_malloc (4 samples, 0.16%)</title><rect x="1013.7" y="899.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1016.7" y="910.0"></text>
</g>
<g>
<title>malloc_consolidate (2 samples, 0.08%)</title><rect x="1015.6" y="899.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1018.6" y="910.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (27 samples, 1.08%)</title><rect x="1016.5" y="899.0" width="12.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1019.5" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.48%)</title><rect x="1023.6" y="883.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1026.6" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.48%)</title><rect x="1023.6" y="867.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1026.6" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.36%)</title><rect x="1025.0" y="851.0" width="4.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1028.0" y="862.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.32%)</title><rect x="1025.0" y="835.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1028.0" y="846.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.28%)</title><rect x="1025.5" y="819.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.5" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.16%)</title><rect x="1025.9" y="803.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1028.9" y="814.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="1025.9" y="787.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1028.9" y="798.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.12%)</title><rect x="1026.4" y="787.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1029.4" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.08%)</title><rect x="1026.9" y="771.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1029.9" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.08%)</title><rect x="1026.9" y="755.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1029.9" y="766.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.08%)</title><rect x="1026.9" y="739.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1029.9" y="750.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.08%)</title><rect x="1026.9" y="723.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1029.9" y="734.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.08%)</title><rect x="1026.9" y="707.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1029.9" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.08%)</title><rect x="1026.9" y="691.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1029.9" y="702.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1027.3" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1030.3" y="686.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1027.3" y="659.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1030.3" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1027.3" y="643.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1030.3" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.08%)</title><rect x="1027.8" y="803.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1030.8" y="814.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="1027.8" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1030.8" y="798.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.04%)</title><rect x="1027.8" y="771.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1030.8" y="782.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.04%)</title><rect x="1028.3" y="787.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1031.3" y="798.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="1028.7" y="835.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1031.7" y="846.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.04%)</title><rect x="1029.2" y="915.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1032.2" y="926.0"></text>
</g>
<g>
<title>_IO_no_init (1 samples, 0.04%)</title><rect x="1029.7" y="915.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1032.7" y="926.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (10 samples, 0.40%)</title><rect x="1030.2" y="915.0" width="4.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1033.2" y="926.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (7 samples, 0.28%)</title><rect x="1030.2" y="899.0" width="3.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1033.2" y="910.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (2 samples, 0.08%)</title><rect x="1033.5" y="899.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1036.5" y="910.0"></text>
</g>
<g>
<title>_itoa_word (1 samples, 0.04%)</title><rect x="1034.4" y="899.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1037.4" y="910.0"></text>
</g>
<g>
<title>__GI__dl_allocate_tls_init (1 samples, 0.04%)</title><rect x="1034.9" y="915.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1037.9" y="926.0"></text>
</g>
<g>
<title>__malloc (10 samples, 0.40%)</title><rect x="1035.3" y="915.0" width="4.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1038.3" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (43 samples, 1.71%)</title><rect x="1040.0" y="915.0" width="20.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1043.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 1.67%)</title><rect x="1040.5" y="899.0" width="19.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1043.5" y="910.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="1040.5" y="883.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1043.5" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 1.63%)</title><rect x="1041.0" y="883.0" width="19.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1044.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (37 samples, 1.47%)</title><rect x="1042.4" y="867.0" width="17.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1045.4" y="878.0"></text>
</g>
<g>
<title>do_futex (37 samples, 1.47%)</title><rect x="1042.4" y="851.0" width="17.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1045.4" y="862.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 1.43%)</title><rect x="1042.4" y="835.0" width="16.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1045.4" y="846.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="1043.3" y="819.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1046.3" y="830.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="1043.8" y="819.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1046.8" y="830.0"></text>
</g>
<g>
<title>wake_up_q (32 samples, 1.27%)</title><rect x="1044.3" y="819.0" width="15.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1047.3" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (32 samples, 1.27%)</title><rect x="1044.3" y="803.0" width="15.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1047.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (32 samples, 1.27%)</title><rect x="1044.3" y="787.0" width="15.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1047.3" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1058.8" y="771.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1061.8" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1058.8" y="755.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1061.8" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1058.8" y="739.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1061.8" y="750.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.04%)</title><rect x="1058.8" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.8" y="734.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="1059.3" y="835.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1062.3" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1059.8" y="867.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1062.8" y="878.0"></text>
</g>
<g>
<title>_int_malloc (19 samples, 0.76%)</title><rect x="1060.2" y="915.0" width="9.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1063.2" y="926.0"></text>
</g>
<g>
<title>memmove (1 samples, 0.04%)</title><rect x="1069.2" y="915.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1072.2" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadGroup.add (1 samples, 0.04%)</title><rect x="1069.6" y="931.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1072.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.88%)</title><rect x="1070.1" y="963.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (22 samples, 0.88%)</title><rect x="1070.1" y="947.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.88%)</title><rect x="1070.1" y="931.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.88%)</title><rect x="1070.1" y="915.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.88%)</title><rect x="1070.1" y="899.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.88%)</title><rect x="1070.1" y="883.0" width="10.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.80%)</title><rect x="1071.1" y="867.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1074.1" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.76%)</title><rect x="1071.5" y="851.0" width="9.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1074.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.68%)</title><rect x="1072.5" y="835.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.68%)</title><rect x="1072.5" y="819.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1075.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.56%)</title><rect x="1073.9" y="803.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1076.9" y="814.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.52%)</title><rect x="1074.4" y="787.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1077.4" y="798.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.48%)</title><rect x="1074.8" y="771.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1077.8" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="1076.2" y="755.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1079.2" y="766.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.04%)</title><rect x="1076.2" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1079.2" y="750.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.32%)</title><rect x="1076.7" y="755.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1079.7" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.32%)</title><rect x="1076.7" y="739.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1079.7" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.32%)</title><rect x="1076.7" y="723.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1079.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (7 samples, 0.28%)</title><rect x="1080.5" y="995.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3 samples, 0.12%)</title><rect x="1082.3" y="979.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.12%)</title><rect x="1082.3" y="963.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1085.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.04%)</title><rect x="1083.8" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (85 samples, 3.39%)</title><rect x="1084.2" y="995.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.2" y="1006.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (85 samples, 3.39%)</title><rect x="1084.2" y="979.0" width="40.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1087.2" y="990.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (85 samples, 3.39%)</title><rect x="1084.2" y="963.0" width="40.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.2" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (85 samples, 3.39%)</title><rect x="1084.2" y="947.0" width="40.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.2" y="958.0">jdk..</text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.08%)</title><rect x="1084.7" y="931.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.04%)</title><rect x="1085.2" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1088.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.16%)</title><rect x="1085.6" y="931.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1088.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.16%)</title><rect x="1085.6" y="915.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1088.6" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="1085.6" y="899.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.6" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="1085.6" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1088.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="1085.6" y="867.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1088.6" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1085.6" y="851.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1088.6" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1085.6" y="835.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.6" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="1085.6" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1088.6" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="1085.6" y="803.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.6" y="814.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.04%)</title><rect x="1085.6" y="787.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1088.6" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.04%)</title><rect x="1085.6" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1088.6" y="782.0"></text>
</g>
<g>
<title>HeapRegion::set_eden() (1 samples, 0.04%)</title><rect x="1085.6" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1088.6" y="766.0"></text>
</g>
<g>
<title>HeapRegion::report_region_type_change(G1HeapRegionTraceType::Type) (1 samples, 0.04%)</title><rect x="1085.6" y="739.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1088.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.12%)</title><rect x="1086.1" y="899.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (3 samples, 0.12%)</title><rect x="1086.1" y="883.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.12%)</title><rect x="1086.1" y="867.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="1086.6" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1087.0" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1090.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (1 samples, 0.04%)</title><rect x="1087.5" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.04%)</title><rect x="1087.5" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (54 samples, 2.15%)</title><rect x="1088.0" y="931.0" width="25.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.0" y="942.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.12%)</title><rect x="1088.5" y="915.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.5" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.04%)</title><rect x="1088.5" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.5" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.04%)</title><rect x="1088.5" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1091.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.04%)</title><rect x="1088.5" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.5" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.04%)</title><rect x="1088.5" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1091.5" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.04%)</title><rect x="1088.5" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1091.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1088.5" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1091.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1088.5" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1091.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="1088.5" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.5" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="1088.9" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1091.9" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="1088.9" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.04%)</title><rect x="1088.9" y="867.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1091.9" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.04%)</title><rect x="1089.4" y="899.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.04%)</title><rect x="1089.4" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.04%)</title><rect x="1089.4" y="867.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1092.4" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.24%)</title><rect x="1089.9" y="915.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.9" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.24%)</title><rect x="1089.9" y="899.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.9" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (6 samples, 0.24%)</title><rect x="1089.9" y="883.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.24%)</title><rect x="1089.9" y="867.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1092.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (6 samples, 0.24%)</title><rect x="1089.9" y="851.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.9" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.24%)</title><rect x="1089.9" y="835.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.20%)</title><rect x="1090.3" y="819.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.3" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (5 samples, 0.20%)</title><rect x="1090.3" y="803.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.3" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.20%)</title><rect x="1090.3" y="787.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.12%)</title><rect x="1090.3" y="771.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.12%)</title><rect x="1090.3" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.3" y="766.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="1090.8" y="739.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1093.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/360062456.test (1 samples, 0.04%)</title><rect x="1091.3" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/360062456.test (2 samples, 0.08%)</title><rect x="1091.7" y="771.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.08%)</title><rect x="1091.7" y="755.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2084663827.test (2 samples, 0.08%)</title><rect x="1091.7" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.08%)</title><rect x="1091.7" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.7" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.08%)</title><rect x="1091.7" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1094.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.04%)</title><rect x="1092.2" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.04%)</title><rect x="1092.2" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.04%)</title><rect x="1092.2" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.04%)</title><rect x="1092.2" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1092.2" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1092.2" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="1092.2" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1095.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (41 samples, 1.63%)</title><rect x="1092.7" y="915.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.7" y="926.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (41 samples, 1.63%)</title><rect x="1092.7" y="899.0" width="19.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="1093.6" y="883.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1093.6" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1093.6" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.04%)</title><rect x="1094.1" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.04%)</title><rect x="1094.1" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="1094.1" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.1" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (37 samples, 1.47%)</title><rect x="1094.6" y="883.0" width="17.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.6" y="894.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="1094.6" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.6" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="1095.0" y="867.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1098.0" y="878.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="1095.5" y="867.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1098.5" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (25 samples, 1.00%)</title><rect x="1096.0" y="867.0" width="11.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1099.0" y="878.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="1097.9" y="851.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1100.9" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="1098.3" y="851.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1101.3" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.04%)</title><rect x="1098.3" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.3" y="846.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.16%)</title><rect x="1098.8" y="851.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1101.8" y="862.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.12%)</title><rect x="1099.3" y="835.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1102.3" y="846.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.04%)</title><rect x="1099.7" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1102.7" y="830.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.04%)</title><rect x="1100.2" y="819.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1103.2" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.04%)</title><rect x="1100.7" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1103.7" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1101.1" y="851.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1104.1" y="862.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.12%)</title><rect x="1101.6" y="851.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1104.6" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="1102.1" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.1" y="846.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="1102.1" y="819.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1105.1" y="830.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.04%)</title><rect x="1102.6" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1105.6" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.40%)</title><rect x="1103.0" y="851.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.0" y="862.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.12%)</title><rect x="1104.9" y="835.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.9" y="846.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.04%)</title><rect x="1105.8" y="819.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1108.8" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.12%)</title><rect x="1106.3" y="835.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1109.3" y="846.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.08%)</title><rect x="1106.8" y="819.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1109.8" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="1107.3" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.3" y="814.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.36%)</title><rect x="1107.7" y="867.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.7" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.36%)</title><rect x="1107.7" y="851.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="1108.2" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1108.2" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1108.2" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.2" y="814.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (7 samples, 0.28%)</title><rect x="1108.7" y="835.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.7" y="846.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (7 samples, 0.28%)</title><rect x="1108.7" y="819.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1111.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.28%)</title><rect x="1108.7" y="803.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.28%)</title><rect x="1108.7" y="787.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.28%)</title><rect x="1108.7" y="771.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.7" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="1111.5" y="755.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1114.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.12%)</title><rect x="1112.0" y="915.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.0" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1112.4" y="899.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1115.4" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1112.4" y="883.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.4" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1112.4" y="867.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.4" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1112.4" y="851.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1115.4" y="862.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1112.4" y="835.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1115.4" y="846.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1112.4" y="819.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1115.4" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1112.4" y="803.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1115.4" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="1112.9" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.9" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="1112.9" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="1112.9" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.9" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="1112.9" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.9" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="1112.9" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (14 samples, 0.56%)</title><rect x="1113.4" y="931.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1113.8" y="915.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (10 samples, 0.40%)</title><rect x="1115.3" y="915.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (10 samples, 0.40%)</title><rect x="1115.3" y="899.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.3" y="910.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.08%)</title><rect x="1116.7" y="883.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.08%)</title><rect x="1116.7" y="867.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (2 samples, 0.08%)</title><rect x="1116.7" y="851.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.7" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.04%)</title><rect x="1117.1" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.newReflectionData (1 samples, 0.04%)</title><rect x="1117.1" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.1" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.08%)</title><rect x="1117.6" y="883.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.6" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.08%)</title><rect x="1117.6" y="867.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.6" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.08%)</title><rect x="1117.6" y="851.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.6" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.08%)</title><rect x="1117.6" y="835.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1120.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.04%)</title><rect x="1118.1" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (3 samples, 0.12%)</title><rect x="1118.5" y="883.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (9 samples, 0.36%)</title><rect x="1120.0" y="931.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (6 samples, 0.24%)</title><rect x="1120.0" y="915.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.20%)</title><rect x="1120.4" y="899.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.20%)</title><rect x="1120.4" y="883.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.20%)</title><rect x="1120.4" y="867.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.20%)</title><rect x="1120.4" y="851.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1123.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.20%)</title><rect x="1120.4" y="835.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.20%)</title><rect x="1120.4" y="819.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.12%)</title><rect x="1121.4" y="803.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.4" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="1121.4" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1124.4" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="1121.8" y="787.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1124.8" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="1121.8" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1124.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="1122.3" y="787.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1125.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1122.3" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1122.3" y="755.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1125.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1122.3" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.3" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1122.3" y="723.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.3" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1122.3" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.3" y="718.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="1122.3" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1125.3" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1122.3" y="675.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1125.3" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1122.3" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1125.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.12%)</title><rect x="1122.8" y="915.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.12%)</title><rect x="1122.8" y="899.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.08%)</title><rect x="1123.2" y="883.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.04%)</title><rect x="1123.7" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (5 samples, 0.20%)</title><rect x="1124.2" y="995.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (5 samples, 0.20%)</title><rect x="1124.2" y="979.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.2" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.12%)</title><rect x="1124.2" y="963.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.2" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.12%)</title><rect x="1124.2" y="947.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.2" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.12%)</title><rect x="1124.2" y="931.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.2" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (2 samples, 0.08%)</title><rect x="1124.2" y="915.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.2" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.08%)</title><rect x="1124.2" y="899.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.2" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.08%)</title><rect x="1124.2" y="883.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1127.2" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$123/1103069071.accept (2 samples, 0.08%)</title><rect x="1124.2" y="867.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.2" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.08%)</title><rect x="1124.2" y="851.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.04%)</title><rect x="1124.2" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.04%)</title><rect x="1124.2" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.2" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="1124.2" y="803.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1127.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2084663827.test (1 samples, 0.04%)</title><rect x="1124.7" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1127.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.04%)</title><rect x="1124.7" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.7" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.04%)</title><rect x="1124.7" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.7" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.04%)</title><rect x="1125.1" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.1" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/975501745.accept (1 samples, 0.04%)</title><rect x="1125.1" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.1" y="910.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.08%)</title><rect x="1125.6" y="963.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method0 (1 samples, 0.04%)</title><rect x="1126.1" y="947.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/codearound/FutureUtils.setRequestPattern (25 samples, 1.00%)</title><rect x="1126.5" y="995.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.5" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.create (18 samples, 0.72%)</title><rect x="1126.5" y="979.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.5" y="990.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (18 samples, 0.72%)</title><rect x="1126.5" y="963.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.5" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (13 samples, 0.52%)</title><rect x="1128.4" y="947.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.4" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (11 samples, 0.44%)</title><rect x="1129.4" y="931.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.4" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.04%)</title><rect x="1129.4" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.4" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="1129.4" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.4" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.04%)</title><rect x="1129.4" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1132.4" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (10 samples, 0.40%)</title><rect x="1129.8" y="915.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.8" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (4 samples, 0.16%)</title><rect x="1129.8" y="899.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.8" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.04%)</title><rect x="1129.8" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.8" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="1129.8" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.8" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1129.8" y="851.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1132.8" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.04%)</title><rect x="1130.3" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.3" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="1130.3" y="867.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.3" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (2 samples, 0.08%)</title><rect x="1130.8" y="883.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.8" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (2 samples, 0.08%)</title><rect x="1130.8" y="867.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.8" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.08%)</title><rect x="1130.8" y="851.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.8" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.24%)</title><rect x="1131.7" y="899.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1134.7" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1134.1" y="883.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1137.1" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1134.1" y="867.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1137.1" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1134.1" y="851.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.1" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1134.1" y="835.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.1" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1134.1" y="819.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1137.1" y="830.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.04%)</title><rect x="1134.1" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1137.1" y="814.0"></text>
</g>
<g>
<title>rb_free_rcu (1 samples, 0.04%)</title><rect x="1134.1" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1137.1" y="798.0"></text>
</g>
<g>
<title>rb_free (1 samples, 0.04%)</title><rect x="1134.1" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1137.1" y="782.0"></text>
</g>
<g>
<title>perf_mmap_free_page (1 samples, 0.04%)</title><rect x="1134.1" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.1" y="766.0"></text>
</g>
<g>
<title>__free_pages (1 samples, 0.04%)</title><rect x="1134.1" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1137.1" y="750.0"></text>
</g>
<g>
<title>free_unref_page (1 samples, 0.04%)</title><rect x="1134.1" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.1" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1134.5" y="947.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1137.5" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1134.5" y="931.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.5" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1134.5" y="915.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1137.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (6 samples, 0.24%)</title><rect x="1135.0" y="979.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (6 samples, 0.24%)</title><rect x="1135.0" y="963.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (6 samples, 0.24%)</title><rect x="1135.0" y="947.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2084663827.test (5 samples, 0.20%)</title><rect x="1135.0" y="931.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (5 samples, 0.20%)</title><rect x="1135.0" y="915.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.0" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (5 samples, 0.20%)</title><rect x="1135.0" y="899.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.0" y="910.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.12%)</title><rect x="1135.9" y="883.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.12%)</title><rect x="1135.9" y="867.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.9" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.12%)</title><rect x="1135.9" y="851.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.9" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.12%)</title><rect x="1135.9" y="835.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="1136.4" y="819.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="1136.4" y="803.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.08%)</title><rect x="1136.4" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 0.04%)</title><rect x="1137.3" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.04%)</title><rect x="1137.8" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.04%)</title><rect x="1137.8" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.04%)</title><rect x="1137.8" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.04%)</title><rect x="1137.8" y="931.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="1137.8" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.24%)</title><rect x="1138.3" y="1059.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.3" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.24%)</title><rect x="1138.3" y="1043.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.08%)</title><rect x="1138.3" y="1027.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.3" y="1038.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.08%)</title><rect x="1138.3" y="1011.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.16%)</title><rect x="1139.2" y="1027.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.16%)</title><rect x="1139.2" y="1011.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.08%)</title><rect x="1140.2" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.32%)</title><rect x="1141.1" y="1091.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.1" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.04%)</title><rect x="1141.6" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.24%)</title><rect x="1142.0" y="1075.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.20%)</title><rect x="1142.5" y="1059.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="1144.9" y="1091.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="1144.9" y="1075.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="1144.9" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="1145.3" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="1145.3" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1148.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="1145.3" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1148.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="1145.8" y="1091.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="1145.8" y="1075.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1146.7" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1146.7" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="1146.7" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.7" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1146.7" y="1011.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.7" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1146.7" y="995.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.7" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1146.7" y="979.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.7" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1146.7" y="963.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.7" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1146.7" y="947.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.7" y="958.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="1146.7" y="931.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1149.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (34 samples, 1.35%)</title><rect x="1147.2" y="1107.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (32 samples, 1.27%)</title><rect x="1147.2" y="1091.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.2" y="1102.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.40%)</title><rect x="1147.2" y="1075.0" width="4.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1150.2" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="1148.2" y="1059.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.2" y="1070.0"></text>
</g>
<g>
<title>__memmove_ssse3 (2 samples, 0.08%)</title><rect x="1148.6" y="1059.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1151.6" y="1070.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.20%)</title><rect x="1149.6" y="1059.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1152.6" y="1070.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.16%)</title><rect x="1150.0" y="1043.0" width="1.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1153.0" y="1054.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="1151.5" y="1027.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.5" y="1038.0"></text>
</g>
<g>
<title>__GI___recv (22 samples, 0.88%)</title><rect x="1151.9" y="1075.0" width="10.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1154.9" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.76%)</title><rect x="1153.3" y="1059.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.3" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.76%)</title><rect x="1153.3" y="1043.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.3" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (17 samples, 0.68%)</title><rect x="1154.3" y="1027.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1157.3" y="1038.0"></text>
</g>
<g>
<title>__sys_recvfrom (17 samples, 0.68%)</title><rect x="1154.3" y="1011.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1157.3" y="1022.0"></text>
</g>
<g>
<title>sock_recvmsg (16 samples, 0.64%)</title><rect x="1154.3" y="995.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.3" y="1006.0"></text>
</g>
<g>
<title>inet_recvmsg (16 samples, 0.64%)</title><rect x="1154.3" y="979.0" width="7.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1157.3" y="990.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.64%)</title><rect x="1154.3" y="963.0" width="7.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.3" y="974.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1156.2" y="947.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1159.2" y="958.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.08%)</title><rect x="1156.6" y="947.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1159.6" y="958.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.28%)</title><rect x="1157.6" y="947.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1160.6" y="958.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.28%)</title><rect x="1157.6" y="931.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.6" y="942.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.28%)</title><rect x="1157.6" y="915.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1160.6" y="926.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.12%)</title><rect x="1157.6" y="899.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.6" y="910.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1158.5" y="883.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1161.5" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1159.0" y="899.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1162.0" y="910.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.12%)</title><rect x="1159.4" y="899.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1162.4" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.08%)</title><rect x="1159.9" y="883.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1162.9" y="894.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.08%)</title><rect x="1160.9" y="947.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1163.9" y="958.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.04%)</title><rect x="1161.3" y="931.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1164.3" y="942.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.44 (1 samples, 0.04%)</title><rect x="1161.3" y="915.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1164.3" y="926.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="1161.3" y="899.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.3" y="910.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="1161.3" y="883.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.3" y="894.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="1161.3" y="867.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1164.3" y="878.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="1161.3" y="851.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1164.3" y="862.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="1161.3" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1164.3" y="846.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="1161.3" y="819.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.3" y="830.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="1161.3" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1164.3" y="814.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1161.3" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1164.3" y="798.0"></text>
</g>
<g>
<title>do_softirq.part.21 (1 samples, 0.04%)</title><rect x="1161.3" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1164.3" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.04%)</title><rect x="1161.3" y="755.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1164.3" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1161.3" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1164.3" y="750.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="1161.3" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.3" y="734.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="1161.3" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.3" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.04%)</title><rect x="1161.3" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.3" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="1161.3" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.3" y="686.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="1161.3" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.3" y="670.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="1161.3" y="643.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.3" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="1161.3" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.3" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="1161.3" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1164.3" y="622.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="1161.3" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1164.3" y="606.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="1161.3" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1164.3" y="590.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="1161.3" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1164.3" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="1161.3" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1164.3" y="558.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="1161.3" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1164.3" y="542.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="1161.3" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1164.3" y="526.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1161.3" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.3" y="510.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1161.3" y="483.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.3" y="494.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1161.3" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1164.3" y="478.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="1161.3" y="451.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1164.3" y="462.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="1161.3" y="435.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1164.3" y="446.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1161.3" y="419.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1164.3" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1161.8" y="995.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1164.8" y="1006.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1161.8" y="979.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1164.8" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.08%)</title><rect x="1162.3" y="1091.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.3" y="1102.0"></text>
</g>
<g>
<title>start_thread (57 samples, 2.27%)</title><rect x="1163.2" y="1155.0" width="26.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1166.2" y="1166.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (57 samples, 2.27%)</title><rect x="1163.2" y="1139.0" width="26.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1166.2" y="1150.0">t..</text>
</g>
<g>
<title>Thread::call_run() (57 samples, 2.27%)</title><rect x="1163.2" y="1123.0" width="26.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.2" y="1134.0">T..</text>
</g>
<g>
<title>GangWorker::loop() (19 samples, 0.76%)</title><rect x="1163.2" y="1107.0" width="8.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.2" y="1118.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1163.2" y="1091.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.2" y="1102.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.04%)</title><rect x="1163.2" y="1075.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.2" y="1086.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::G1SerialFreeCollectionSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1163.2" y="1059.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.2" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_region(HeapRegion*, FreeRegionList*, bool, bool, bool) (1 samples, 0.04%)</title><rect x="1163.2" y="1043.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.2" y="1054.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (18 samples, 0.72%)</title><rect x="1163.7" y="1091.0" width="8.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.7" y="1102.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.36%)</title><rect x="1163.7" y="1075.0" width="4.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.7" y="1086.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 0.36%)</title><rect x="1163.7" y="1059.0" width="4.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1166.7" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1167.4" y="1043.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1170.4" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1167.4" y="1027.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1170.4" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1167.4" y="1011.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.4" y="1022.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.20%)</title><rect x="1167.9" y="1075.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.9" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.20%)</title><rect x="1167.9" y="1059.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.9" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.20%)</title><rect x="1167.9" y="1043.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.9" y="1054.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.20%)</title><rect x="1167.9" y="1027.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.9" y="1038.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.20%)</title><rect x="1167.9" y="1011.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.9" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.08%)</title><rect x="1167.9" y="995.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.9" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.04%)</title><rect x="1167.9" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.9" y="990.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1167.9" y="963.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.9" y="974.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.04%)</title><rect x="1168.4" y="979.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.4" y="990.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (3 samples, 0.12%)</title><rect x="1168.8" y="995.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.8" y="1006.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.08%)</title><rect x="1168.8" y="979.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.8" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.04%)</title><rect x="1168.8" y="963.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.8" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1169.3" y="963.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.3" y="974.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.04%)</title><rect x="1169.8" y="979.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.8" y="990.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1170.3" y="1075.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.3" y="1086.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.04%)</title><rect x="1170.3" y="1059.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="1070.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1170.3" y="1043.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.3" y="1054.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.04%)</title><rect x="1170.3" y="1027.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.3" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.04%)</title><rect x="1170.3" y="1011.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.3" y="1022.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="1170.3" y="995.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1173.3" y="1006.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.12%)</title><rect x="1170.7" y="1075.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.7" y="1086.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.04%)</title><rect x="1170.7" y="1059.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.7" y="1070.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="1170.7" y="1043.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.7" y="1054.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="1170.7" y="1027.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.7" y="1038.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.04%)</title><rect x="1170.7" y="1011.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.7" y="1022.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.04%)</title><rect x="1170.7" y="995.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.7" y="1006.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (1 samples, 0.04%)</title><rect x="1170.7" y="979.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.7" y="990.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (1 samples, 0.04%)</title><rect x="1170.7" y="963.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.7" y="974.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.04%)</title><rect x="1171.2" y="1059.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.2" y="1070.0"></text>
</g>
<g>
<title>SymbolPropertyTable::oops_do(OopClosure*) (1 samples, 0.04%)</title><rect x="1171.2" y="1043.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.2" y="1054.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.04%)</title><rect x="1171.7" y="1059.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.7" y="1070.0"></text>
</g>
<g>
<title>JavaThread::run() (19 samples, 0.76%)</title><rect x="1172.1" y="1107.0" width="9.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.1" y="1118.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (19 samples, 0.76%)</title><rect x="1172.1" y="1091.0" width="9.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.1" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (19 samples, 0.76%)</title><rect x="1172.1" y="1075.0" width="9.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.1" y="1086.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (19 samples, 0.76%)</title><rect x="1172.1" y="1059.0" width="9.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.1" y="1070.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (19 samples, 0.76%)</title><rect x="1172.1" y="1043.0" width="9.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.1" y="1054.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (13 samples, 0.52%)</title><rect x="1172.1" y="1027.0" width="6.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.1" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.04%)</title><rect x="1172.1" y="1011.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.1" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.04%)</title><rect x="1172.1" y="995.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.1" y="1006.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.04%)</title><rect x="1172.1" y="979.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.1" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.04%)</title><rect x="1172.6" y="1011.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.6" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.04%)</title><rect x="1172.6" y="995.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.6" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.04%)</title><rect x="1172.6" y="979.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.04%)</title><rect x="1172.6" y="963.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.6" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (11 samples, 0.44%)</title><rect x="1173.1" y="1011.0" width="5.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.1" y="1022.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.04%)</title><rect x="1173.1" y="995.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.1" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.04%)</title><rect x="1173.5" y="995.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.5" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1173.5" y="979.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.5" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.04%)</title><rect x="1174.0" y="995.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.0" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.08%)</title><rect x="1174.5" y="995.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.5" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.04%)</title><rect x="1174.5" y="979.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.5" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.04%)</title><rect x="1175.0" y="979.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.0" y="990.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.04%)</title><rect x="1175.0" y="963.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.0" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.04%)</title><rect x="1175.4" y="995.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.4" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.04%)</title><rect x="1175.9" y="995.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.9" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.04%)</title><rect x="1176.4" y="995.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.4" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.04%)</title><rect x="1176.4" y="979.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.4" y="990.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.04%)</title><rect x="1176.8" y="995.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.8" y="1006.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1177.3" y="995.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.3" y="1006.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.04%)</title><rect x="1177.8" y="995.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1180.8" y="1006.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.16%)</title><rect x="1178.2" y="1027.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.2" y="1038.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.04%)</title><rect x="1178.2" y="1011.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.2" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.04%)</title><rect x="1178.2" y="995.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.2" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1178.2" y="979.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.2" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.04%)</title><rect x="1178.2" y="963.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.2" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.04%)</title><rect x="1178.2" y="947.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.2" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1178.2" y="931.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.2" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.04%)</title><rect x="1178.7" y="1011.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.7" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.04%)</title><rect x="1178.7" y="995.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.04%)</title><rect x="1178.7" y="979.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::try_move_store_before_loop(Node*, Node*) (1 samples, 0.04%)</title><rect x="1178.7" y="963.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.04%)</title><rect x="1178.7" y="947.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.7" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1179.2" y="1011.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.2" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1179.2" y="995.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.2" y="1006.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.04%)</title><rect x="1179.2" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.2" y="990.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1179.2" y="963.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.2" y="974.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1179.2" y="947.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="958.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.04%)</title><rect x="1179.7" y="1011.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.7" y="1022.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.04%)</title><rect x="1179.7" y="995.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.04%)</title><rect x="1179.7" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.7" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.04%)</title><rect x="1179.7" y="963.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.7" y="974.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.04%)</title><rect x="1179.7" y="947.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.7" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1180.1" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.1" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1180.1" y="1011.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1180.1" y="995.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1180.1" y="979.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1180.1" y="963.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1180.1" y="947.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.1" y="958.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.04%)</title><rect x="1180.1" y="931.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.1" y="942.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 0.04%)</title><rect x="1180.1" y="915.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.1" y="926.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.04%)</title><rect x="1180.6" y="1027.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.6" y="1038.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.04%)</title><rect x="1180.6" y="1011.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.6" y="1022.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.04%)</title><rect x="1180.6" y="995.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.6" y="1006.0"></text>
</g>
<g>
<title>__memcpy_ssse3 (1 samples, 0.04%)</title><rect x="1180.6" y="979.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1183.6" y="990.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="1180.6" y="963.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1183.6" y="974.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1180.6" y="947.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.6" y="958.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1180.6" y="931.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.6" y="942.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1180.6" y="915.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.6" y="926.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1180.6" y="899.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1183.6" y="910.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.04%)</title><rect x="1180.6" y="883.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1183.6" y="894.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="1180.6" y="867.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1183.6" y="878.0"></text>
</g>
<g>
<title>try_charge (1 samples, 0.04%)</title><rect x="1180.6" y="851.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.6" y="862.0"></text>
</g>
<g>
<title>VMThread::run() (18 samples, 0.72%)</title><rect x="1181.1" y="1107.0" width="8.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.1" y="1118.0"></text>
</g>
<g>
<title>VMThread::loop() (18 samples, 0.72%)</title><rect x="1181.1" y="1091.0" width="8.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.1" y="1102.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (7 samples, 0.28%)</title><rect x="1181.1" y="1075.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.1" y="1086.0"></text>
</g>
<g>
<title>ThreadSafepointState::examine_state_of_thread() (1 samples, 0.04%)</title><rect x="1183.9" y="1059.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.9" y="1070.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1184.4" y="1075.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1187.4" y="1086.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (3 samples, 0.12%)</title><rect x="1184.8" y="1075.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.8" y="1086.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.12%)</title><rect x="1184.8" y="1059.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.8" y="1070.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.12%)</title><rect x="1184.8" y="1043.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.8" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.12%)</title><rect x="1184.8" y="1027.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.8" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (1 samples, 0.04%)</title><rect x="1184.8" y="1011.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.8" y="1022.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.04%)</title><rect x="1184.8" y="995.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.8" y="1006.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.04%)</title><rect x="1184.8" y="979.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.8" y="990.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.04%)</title><rect x="1184.8" y="963.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1187.8" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1184.8" y="947.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1187.8" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1184.8" y="931.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1187.8" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1184.8" y="915.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1187.8" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1184.8" y="899.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.8" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1184.8" y="883.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1187.8" y="894.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="1184.8" y="867.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1187.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1184.8" y="851.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1187.8" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1184.8" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1187.8" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.04%)</title><rect x="1185.3" y="1011.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.3" y="1022.0"></text>
</g>
<g>
<title>DerivedPointerTable::update_pointers() (1 samples, 0.04%)</title><rect x="1185.3" y="995.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.3" y="1006.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::print() (1 samples, 0.04%)</title><rect x="1185.8" y="1011.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.8" y="1022.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::print_post_evacuate_collection_set() const (1 samples, 0.04%)</title><rect x="1185.8" y="995.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.8" y="1006.0"></text>
</g>
<g>
<title>ReferenceProcessorPhaseTimes::print_all_references(unsigned int, bool) const (1 samples, 0.04%)</title><rect x="1185.8" y="979.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.8" y="990.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.04%)</title><rect x="1185.8" y="963.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.8" y="974.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.04%)</title><rect x="1185.8" y="947.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.8" y="958.0"></text>
</g>
<g>
<title>LogStream::write(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1185.8" y="931.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.8" y="942.0"></text>
</g>
<g>
<title>LogTagSet::vwrite(LogLevel::type, char const*, __va_list_tag*) (1 samples, 0.04%)</title><rect x="1185.8" y="915.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.8" y="926.0"></text>
</g>
<g>
<title>sched_yield (7 samples, 0.28%)</title><rect x="1186.2" y="1075.0" width="3.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1189.2" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.28%)</title><rect x="1186.2" y="1059.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1189.2" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.28%)</title><rect x="1186.2" y="1043.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1189.2" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (4 samples, 0.16%)</title><rect x="1187.6" y="1027.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1190.6" y="1038.0"></text>
</g>
<g>
<title>do_sched_yield (4 samples, 0.16%)</title><rect x="1187.6" y="1011.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1190.6" y="1022.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.16%)</title><rect x="1187.6" y="995.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1190.6" y="1006.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.16%)</title><rect x="1187.6" y="979.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1190.6" y="990.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.04%)</title><rect x="1189.5" y="1107.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="1118.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.04%)</title><rect x="1189.5" y="1091.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="1102.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1189.5" y="1075.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.5" y="1086.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1189.5" y="1059.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="1189.5" y="1043.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.5" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1189.5" y="1027.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.5" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1189.5" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.5" y="1022.0"></text>
</g>
</g>
</svg>
